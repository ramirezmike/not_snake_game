{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5","program":"/home/mramirez/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","ringbuf","--edition=2018","/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=39d6f224268e0f97","-C","extra-filename=-39d6f224268e0f97","--out-dir","/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps","-L","dependency=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps","--extern","cache_padded=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libcache_padded-61b43e09a2eb926f.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/mramirez/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libringbuf-39d6f224268e0f97.rmeta"},"prelude":{"crate_id":{"name":"ringbuf","disambiguator":[5811353471443658750,17685061142216368753]},"crate_root":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src","external_crates":[{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[17044353007700780372,2918200604221815240]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[15333840167806743833,9889193056877993824]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[4550415707075219492,6623162258675921486]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[8289379911494056514,13856099756999900329]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[397594041871667817,11704163070354659695]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10514502805115346386,576110030083780649]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9878185313679130060,1975285035821961205]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4010603182529655334,7152219772350788052]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[1807637986128902209,18379128151258407121]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11140927657351163542,6267109750485550558]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[13809795498598848728,13320395723520943315]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13869841232067652907,9875669357213642224]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15533050656730733495,14669839968799848603]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[14371692877540073659,8181723439448527964]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[639541300699627395,1995254029228069844]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[12482123824895737424,11765111494567609733]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[1169880241773671279,8605314106566979368]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[5016943468141875609,13494347935157563341]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/ring_buffer.rs","num":19,"id":{"name":"cache_padded","disambiguator":[14069864072162730344,4279356163662537264]}}],"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":0,"byte_end":1989,"line_start":1,"line_end":67,"column_start":1,"column_end":24}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":1942,"byte_end":1943,"line_start":65,"line_end":65,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":1963,"byte_end":1964,"line_start":66,"line_end":66,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":1987,"byte_end":1988,"line_start":67,"line_end":67,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":0,"byte_end":1989,"line_start":1,"line_end":67,"column_start":1,"column_end":24},"name":"","qualname":"::","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":91},{"krate":0,"index":157},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247}],"decl_id":null,"docs":" Lock-free single-producer single-consumer (SPSC) FIFO ring buffer with direct access to inner data.","sig":null,"attributes":[{"value":"/ Lock-free single-producer single-consumer (SPSC) FIFO ring buffer with direct access to inner data.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":0,"byte_end":103,"line_start":1,"line_end":1,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":104,"byte_end":107,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":108,"byte_end":122,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":123,"byte_end":126,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ `RingBuffer` is the initial structure representing ring buffer itself.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":127,"byte_end":201,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/ Ring buffer can be splitted into pair of `Producer` and `Consumer`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":202,"byte_end":273,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":274,"byte_end":277,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ `Producer` and `Consumer` are used to append/remove elements to/from the ring buffer accordingly. They can be safely transfered between threads.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":278,"byte_end":426,"line_start":8,"line_end":8,"column_start":1,"column_end":149}},{"value":"/ Operations with `Producer` and `Consumer` are lock-free - they're succeded or failed immediately without blocking or waiting.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":427,"byte_end":556,"line_start":9,"line_end":9,"column_start":1,"column_end":130}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":557,"byte_end":560,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Elements can be effectively appended/removed one by one or many at once.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":561,"byte_end":637,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ Also data could be loaded/stored directly into/from [`Read`]/[`Write`] instances.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":638,"byte_end":723,"line_start":12,"line_end":12,"column_start":1,"column_end":86}},{"value":"/ And finally, there are `unsafe` methods allowing thread-safe direct access in place to the inner memory being appended/removed.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":724,"byte_end":855,"line_start":13,"line_end":13,"column_start":1,"column_end":132}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":856,"byte_end":859,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":860,"byte_end":922,"line_start":15,"line_end":15,"column_start":1,"column_end":63}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":923,"byte_end":987,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":988,"byte_end":991,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ When building with nightly toolchain it is possible to run benchmarks via `cargo bench --features benchmark`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":992,"byte_end":1105,"line_start":18,"line_end":18,"column_start":1,"column_end":114}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":1106,"byte_end":1109,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":1110,"byte_end":1124,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":1125,"byte_end":1128,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ## Simple example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":1129,"byte_end":1150,"line_start":22,"line_end":22,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":1151,"byte_end":1154,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":1155,"byte_end":1166,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/ # extern crate ringbuf;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":1167,"byte_end":1194,"line_start":25,"line_end":25,"column_start":1,"column_end":28}},{"value":"/ use ringbuf::RingBuffer;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":1195,"byte_end":1223,"line_start":26,"line_end":26,"column_start":1,"column_end":29}},{"value":"/ # fn main() {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":1224,"byte_end":1241,"line_start":27,"line_end":27,"column_start":1,"column_end":18}},{"value":"/ let rb = RingBuffer::<i32>::new(2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":1242,"byte_end":1281,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/ let (mut prod, mut cons) = rb.split();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":1282,"byte_end":1324,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":1325,"byte_end":1328,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ prod.push(0).unwrap();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":1329,"byte_end":1355,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ prod.push(1).unwrap();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":1356,"byte_end":1382,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ assert_eq!(prod.push(2), Err(2));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":1383,"byte_end":1420,"line_start":33,"line_end":33,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":1421,"byte_end":1424,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(cons.pop().unwrap(), 0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":1425,"byte_end":1464,"line_start":35,"line_end":35,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":1465,"byte_end":1468,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ prod.push(2).unwrap();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":1469,"byte_end":1495,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":1496,"byte_end":1499,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(cons.pop().unwrap(), 1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":1500,"byte_end":1539,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(cons.pop().unwrap(), 2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":1540,"byte_end":1579,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(cons.pop(), None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":1580,"byte_end":1613,"line_start":41,"line_end":41,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":1614,"byte_end":1621,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":1622,"byte_end":1629,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"no_std","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/lib.rs","byte_start":1631,"byte_end":1641,"line_start":45,"line_end":45,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":49},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":2298,"byte_end":2306,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"Consumer","qualname":"::consumer::Consumer","value":"Consumer {  }","parent":null,"children":[{"krate":0,"index":51}],"decl_id":null,"docs":" Consumer part of ring buffer.\n","sig":null,"attributes":[{"value":"/ Consumer part of ring buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":2253,"byte_end":2286,"line_start":14,"line_end":14,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":2495,"byte_end":2503,"line_start":23,"line_end":23,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Consumer<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns capacity of the ring buffer.","sig":null,"attributes":[{"value":"/ Returns capacity of the ring buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":2387,"byte_end":2427,"line_start":20,"line_end":20,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":2432,"byte_end":2435,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ The capacity of the buffer is constant.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":2440,"byte_end":2483,"line_start":22,"line_end":22,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":2722,"byte_end":2730,"line_start":30,"line_end":30,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Consumer<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the ring buffer is empty.","sig":null,"attributes":[{"value":"/ Checks if the ring buffer is empty.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":2560,"byte_end":2599,"line_start":27,"line_end":27,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":2604,"byte_end":2607,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ *The result may become irrelevant at any time because of concurring activity of the producer.*","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":2612,"byte_end":2710,"line_start":29,"line_end":29,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":2917,"byte_end":2924,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"is_full","qualname":"<Consumer<T>>::is_full","value":"pub fn is_full(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the ring buffer is full.","sig":null,"attributes":[{"value":"/ Checks if the ring buffer is full.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":2786,"byte_end":2824,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":2829,"byte_end":2832,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ The result is relevant until you remove items from the consumer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":2837,"byte_end":2905,"line_start":36,"line_end":36,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":3120,"byte_end":3123,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"len","qualname":"<Consumer<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The length of the data stored in the buffer","sig":null,"attributes":[{"value":"/ The length of the data stored in the buffer","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":2979,"byte_end":3026,"line_start":41,"line_end":41,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":3031,"byte_end":3034,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Actual length may be equal to or greater than the returned value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":3039,"byte_end":3108,"line_start":43,"line_end":43,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":3314,"byte_end":3323,"line_start":51,"line_end":51,"column_start":12,"column_end":21},"name":"remaining","qualname":"<Consumer<T>>::remaining","value":"pub fn remaining(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The remaining space in the buffer.","sig":null,"attributes":[{"value":"/ The remaining space in the buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":3175,"byte_end":3213,"line_start":48,"line_end":48,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":3218,"byte_end":3221,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Actual remaining space may be equal to or less than the returning value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":3226,"byte_end":3302,"line_start":50,"line_end":50,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":4276,"byte_end":4282,"line_start":74,"line_end":74,"column_start":12,"column_end":18},"name":"access","qualname":"<Consumer<T>>::access","value":"pub fn access<F: FnOnce(&[T], &[T]) -> ()>(&Self, F)","parent":null,"children":[],"decl_id":null,"docs":" Gives immutable access to the elements contained by the ring buffer without removing them.","sig":null,"attributes":[{"value":"/ Gives immutable access to the elements contained by the ring buffer without removing them.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":3844,"byte_end":3938,"line_start":67,"line_end":67,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":3943,"byte_end":3946,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ The method takes a function `f` as argument.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":3951,"byte_end":3999,"line_start":69,"line_end":69,"column_start":5,"column_end":53}},{"value":"/ `f` takes two slices of ring buffer content (the second one or both of them may be empty).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":4004,"byte_end":4098,"line_start":70,"line_end":70,"column_start":5,"column_end":99}},{"value":"/ First slice contains older elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":4103,"byte_end":4143,"line_start":71,"line_end":71,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":4148,"byte_end":4151,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ *The slices may not include elements pushed to the buffer by concurring producer after the method call.*","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":4156,"byte_end":4264,"line_start":73,"line_end":73,"column_start":5,"column_end":113}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":5116,"byte_end":5126,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"access_mut","qualname":"<Consumer<T>>::access_mut","value":"pub fn access_mut<F: FnOnce(&mut [T], &mut [T]) -> ()>(&mut Self, F)","parent":null,"children":[],"decl_id":null,"docs":" Gives mutable access to the elements contained by the ring buffer without removing them.","sig":null,"attributes":[{"value":"/ Gives mutable access to the elements contained by the ring buffer without removing them.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":4683,"byte_end":4775,"line_start":88,"line_end":88,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":4780,"byte_end":4783,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ The method takes a function `f` as argument.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":4788,"byte_end":4836,"line_start":90,"line_end":90,"column_start":5,"column_end":53}},{"value":"/ `f` takes two slices of ring buffer content (the second one or both of them may be empty).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":4841,"byte_end":4935,"line_start":91,"line_end":91,"column_start":5,"column_end":99}},{"value":"/ First slice contains older elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":4940,"byte_end":4980,"line_start":92,"line_end":92,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":4985,"byte_end":4988,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ *The iteration may not include elements pushed to the buffer by concurring producer after the method call.*","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":4993,"byte_end":5104,"line_start":94,"line_end":94,"column_start":5,"column_end":116}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":6448,"byte_end":6458,"line_start":130,"line_end":130,"column_start":19,"column_end":29},"name":"pop_access","qualname":"<Consumer<T>>::pop_access","value":"pub unsafe fn pop_access<F>(&mut Self, F) -> usize where\nF: FnOnce(&mut [MaybeUninit<T>], &mut [MaybeUninit<T>]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Allows to read from ring buffer memory directry.","sig":null,"attributes":[{"value":"/ Allows to read from ring buffer memory directry.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":5547,"byte_end":5599,"line_start":109,"line_end":109,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":5604,"byte_end":5607,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ *This function is unsafe because it gives access to possibly uninitialized memory*","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":5612,"byte_end":5698,"line_start":111,"line_end":111,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":5703,"byte_end":5706,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ The method takes a function `f` as argument.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":5711,"byte_end":5759,"line_start":113,"line_end":113,"column_start":5,"column_end":53}},{"value":"/ `f` takes two slices of ring buffer content (the second one or both of them may be empty).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":5764,"byte_end":5858,"line_start":114,"line_end":114,"column_start":5,"column_end":99}},{"value":"/ First slice contains older elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":5863,"byte_end":5903,"line_start":115,"line_end":115,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":5908,"byte_end":5911,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ `f` should return number of elements been read.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":5916,"byte_end":5967,"line_start":117,"line_end":117,"column_start":5,"column_end":56}},{"value":"/ *There is no checks for returned number - it remains on the developer's conscience.*","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":5972,"byte_end":6060,"line_start":118,"line_end":118,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":6065,"byte_end":6068,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ The method **always** calls `f` even if ring buffer is empty.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":6073,"byte_end":6138,"line_start":120,"line_end":120,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":6143,"byte_end":6146,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ The method returns number returned from `f`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":6151,"byte_end":6199,"line_start":122,"line_end":122,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":6204,"byte_end":6207,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":6212,"byte_end":6224,"line_start":124,"line_end":124,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":6229,"byte_end":6232,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ The method gives access to ring buffer underlying memory which may be uninitialized.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":6237,"byte_end":6325,"line_start":126,"line_end":126,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":6330,"byte_end":6333,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ *It's up to you to copy or drop appropriate elements if you use this function.*","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":6338,"byte_end":6421,"line_start":128,"line_end":128,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":6426,"byte_end":6429,"line_start":129,"line_end":129,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":7921,"byte_end":7929,"line_start":172,"line_end":172,"column_start":19,"column_end":27},"name":"pop_copy","qualname":"<Consumer<T>>::pop_copy","value":"pub unsafe fn pop_copy(&mut Self, &mut [MaybeUninit<T>]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Copies data from the ring buffer to the slice in byte-to-byte manner.","sig":null,"attributes":[{"value":"/ Copies data from the ring buffer to the slice in byte-to-byte manner.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":7320,"byte_end":7393,"line_start":158,"line_end":158,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":7398,"byte_end":7401,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ The `elems` slice should contain **un-initialized** data before the method call.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":7406,"byte_end":7490,"line_start":160,"line_end":160,"column_start":5,"column_end":89}},{"value":"/ After the call the copied part of data in `elems` should be interpreted as **initialized**.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":7495,"byte_end":7590,"line_start":161,"line_end":161,"column_start":5,"column_end":100}},{"value":"/ The remaining part is still **un-iniitilized**.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":7595,"byte_end":7646,"line_start":162,"line_end":162,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":7651,"byte_end":7654,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ Returns the number of items been copied.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":7659,"byte_end":7703,"line_start":164,"line_end":164,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":7708,"byte_end":7711,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":7716,"byte_end":7728,"line_start":166,"line_end":166,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":7733,"byte_end":7736,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ The method copies raw data from the ring buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":7741,"byte_end":7793,"line_start":168,"line_end":168,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":7798,"byte_end":7801,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ *You should manage copied elements after call, otherwise you may get a memory leak.*","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":7806,"byte_end":7894,"line_start":170,"line_end":170,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":7899,"byte_end":7902,"line_start":171,"line_end":171,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":9040,"byte_end":9043,"line_start":200,"line_end":200,"column_start":12,"column_end":15},"name":"pop","qualname":"<Consumer<T>>::pop","value":"pub fn pop(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes latest element from the ring buffer and returns it.\n Returns `None` if the ring buffer is empty.\n","sig":null,"attributes":[{"value":"/ Removes latest element from the ring buffer and returns it.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":8913,"byte_end":8976,"line_start":198,"line_end":198,"column_start":5,"column_end":68}},{"value":"/ Returns `None` if the ring buffer is empty.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":8981,"byte_end":9028,"line_start":199,"line_end":199,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":9839,"byte_end":9847,"line_start":224,"line_end":224,"column_start":12,"column_end":20},"name":"pop_each","qualname":"<Consumer<T>>::pop_each","value":"pub fn pop_each<F: FnMut(T) -> bool>(&mut Self, F, Option<usize>) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Repeatedly calls the closure `f` passing elements removed from the ring buffer to it.","sig":null,"attributes":[{"value":"/ Repeatedly calls the closure `f` passing elements removed from the ring buffer to it.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":9562,"byte_end":9651,"line_start":219,"line_end":219,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":9656,"byte_end":9659,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ The closure is called until it returns `false` or the ring buffer is empty.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":9664,"byte_end":9743,"line_start":221,"line_end":221,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":9748,"byte_end":9751,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ The method returns number of elements been removed from the buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":9756,"byte_end":9827,"line_start":223,"line_end":223,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":11148,"byte_end":11156,"line_start":257,"line_end":257,"column_start":12,"column_end":20},"name":"for_each","qualname":"<Consumer<T>>::for_each","value":"pub fn for_each<F: FnMut(&T) -> ()>(&Self, F)","parent":null,"children":[],"decl_id":null,"docs":" Iterate immutably over the elements contained by the ring buffer without removing them.","sig":null,"attributes":[{"value":"/ Iterate immutably over the elements contained by the ring buffer without removing them.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":10921,"byte_end":11012,"line_start":254,"line_end":254,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":11017,"byte_end":11020,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ *The iteration may not include elements pushed to the buffer by concurring producer after the method call.*","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":11025,"byte_end":11136,"line_start":256,"line_end":256,"column_start":5,"column_end":116}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":11617,"byte_end":11629,"line_start":271,"line_end":271,"column_start":12,"column_end":24},"name":"for_each_mut","qualname":"<Consumer<T>>::for_each_mut","value":"pub fn for_each_mut<F: FnMut(&mut T) -> ()>(&mut Self, F)","parent":null,"children":[],"decl_id":null,"docs":" Iterate mutably over the elements contained by the ring buffer without removing them.","sig":null,"attributes":[{"value":"/ Iterate mutably over the elements contained by the ring buffer without removing them.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":11392,"byte_end":11481,"line_start":268,"line_end":268,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":11486,"byte_end":11489,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ *The iteration may not include elements pushed to the buffer by concurring producer after the method call.*","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":11494,"byte_end":11605,"line_start":270,"line_end":270,"column_start":5,"column_end":116}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":12010,"byte_end":12017,"line_start":285,"line_end":285,"column_start":12,"column_end":19},"name":"discard","qualname":"<Consumer<T>>::discard","value":"pub fn discard(&mut Self, usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Removes `n` items from the buffer and safely drops them.","sig":null,"attributes":[{"value":"/ Removes `n` items from the buffer and safely drops them.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":11885,"byte_end":11945,"line_start":282,"line_end":282,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":11950,"byte_end":11953,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ Returns the number of deleted items.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":11958,"byte_end":11998,"line_start":284,"line_end":284,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":13237,"byte_end":13244,"line_start":320,"line_end":320,"column_start":12,"column_end":19},"name":"move_to","qualname":"<Consumer<T>>::move_to","value":"pub fn move_to(&mut Self, &mut Producer<T>, Option<usize>) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Removes at most `count` elements from the consumer and appends them to the producer.\n If `count` is `None` then as much as possible elements will be moved.\n The producer and consumer parts may be of different buffers as well as of the same one.","sig":null,"attributes":[{"value":"/ Removes at most `count` elements from the consumer and appends them to the producer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":12898,"byte_end":12986,"line_start":315,"line_end":315,"column_start":5,"column_end":93}},{"value":"/ If `count` is `None` then as much as possible elements will be moved.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":12991,"byte_end":13064,"line_start":316,"line_end":316,"column_start":5,"column_end":78}},{"value":"/ The producer and consumer parts may be of different buffers as well as of the same one.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":13069,"byte_end":13160,"line_start":317,"line_end":317,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":13165,"byte_end":13168,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ On success returns count of elements been moved.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":13173,"byte_end":13225,"line_start":319,"line_end":319,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":13670,"byte_end":13679,"line_start":330,"line_end":330,"column_start":12,"column_end":21},"name":"pop_slice","qualname":"<Consumer<T>>::pop_slice","value":"pub fn pop_slice(&mut Self, &mut [T]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Removes first elements from the ring buffer and writes them into a slice.\n Elements should be [`Copy`](https://doc.rust-lang.org/std/marker/trait.Copy.html).","sig":null,"attributes":[{"value":"/ Removes first elements from the ring buffer and writes them into a slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":13402,"byte_end":13479,"line_start":326,"line_end":326,"column_start":5,"column_end":82}},{"value":"/ Elements should be [`Copy`](https://doc.rust-lang.org/std/marker/trait.Copy.html).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":13484,"byte_end":13570,"line_start":327,"line_end":327,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":13575,"byte_end":13578,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ On success returns count of elements been removed from the ring buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":13583,"byte_end":13658,"line_start":329,"line_end":329,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":14378,"byte_end":14388,"line_start":345,"line_end":345,"column_start":12,"column_end":22},"name":"write_into","qualname":"<Consumer<u8>>::write_into","value":"pub fn write_into(&mut Self, &mut dyn Write, Option<usize>)\n-> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Removes at most first `count` bytes from the ring buffer and writes them into\n a [`Write`](https://doc.rust-lang.org/std/io/trait.Write.html) instance.\n If `count` is `None` then as much as possible bytes will be written.","sig":null,"attributes":[{"value":"/ Removes at most first `count` bytes from the ring buffer and writes them into","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":13861,"byte_end":13942,"line_start":337,"line_end":337,"column_start":5,"column_end":86}},{"value":"/ a [`Write`](https://doc.rust-lang.org/std/io/trait.Write.html) instance.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":13947,"byte_end":14023,"line_start":338,"line_end":338,"column_start":5,"column_end":81}},{"value":"/ If `count` is `None` then as much as possible bytes will be written.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":14028,"byte_end":14100,"line_start":339,"line_end":339,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":14105,"byte_end":14108,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(n)` if `write` is succeded. `n` is number of bytes been written.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":14113,"byte_end":14193,"line_start":341,"line_end":341,"column_start":5,"column_end":85}},{"value":"/ `n == 0` means that either `write` returned zero or ring buffer is empty.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":14198,"byte_end":14275,"line_start":342,"line_end":342,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":14280,"byte_end":14283,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ If `write` is failed or returned an invalid number then error is returned.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":14288,"byte_end":14366,"line_start":344,"line_end":344,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":124},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":16332,"byte_end":16340,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"Producer","qualname":"::producer::Producer","value":"Producer {  }","parent":null,"children":[{"krate":0,"index":126}],"decl_id":null,"docs":" Producer part of ring buffer.\n","sig":null,"attributes":[{"value":"/ Producer part of ring buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":16287,"byte_end":16320,"line_start":12,"line_end":12,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":16529,"byte_end":16537,"line_start":21,"line_end":21,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Producer<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns capacity of the ring buffer.","sig":null,"attributes":[{"value":"/ Returns capacity of the ring buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":16421,"byte_end":16461,"line_start":18,"line_end":18,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":16466,"byte_end":16469,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ The capacity of the buffer is constant.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":16474,"byte_end":16517,"line_start":20,"line_end":20,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":16722,"byte_end":16730,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Producer<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the ring buffer is empty.","sig":null,"attributes":[{"value":"/ Checks if the ring buffer is empty.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":16594,"byte_end":16633,"line_start":25,"line_end":25,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":16638,"byte_end":16641,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ The result is relevant until you push items to the producer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":16646,"byte_end":16710,"line_start":27,"line_end":27,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":16947,"byte_end":16954,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"is_full","qualname":"<Producer<T>>::is_full","value":"pub fn is_full(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the ring buffer is full.","sig":null,"attributes":[{"value":"/ Checks if the ring buffer is full.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":16786,"byte_end":16824,"line_start":32,"line_end":32,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":16829,"byte_end":16832,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ *The result may become irrelevant at any time because of concurring activity of the consumer.*","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":16837,"byte_end":16935,"line_start":34,"line_end":34,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":17148,"byte_end":17151,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"len","qualname":"<Producer<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The length of the data stored in the buffer.","sig":null,"attributes":[{"value":"/ The length of the data stored in the buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":17009,"byte_end":17057,"line_start":39,"line_end":39,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":17062,"byte_end":17065,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Actual length may be equal to or less than the returned value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":17070,"byte_end":17136,"line_start":41,"line_end":41,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":17345,"byte_end":17354,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"remaining","qualname":"<Producer<T>>::remaining","value":"pub fn remaining(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The remaining space in the buffer.","sig":null,"attributes":[{"value":"/ The remaining space in the buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":17203,"byte_end":17241,"line_start":46,"line_end":46,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":17246,"byte_end":17249,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Actual remaining space may be equal to or greater than the returning value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":17254,"byte_end":17333,"line_start":48,"line_end":48,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":18220,"byte_end":18231,"line_start":72,"line_end":72,"column_start":19,"column_end":30},"name":"push_access","qualname":"<Producer<T>>::push_access","value":"pub unsafe fn push_access<F>(&mut Self, F) -> usize where\nF: FnOnce(&mut [MaybeUninit<T>], &mut [MaybeUninit<T>]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Allows to write into ring buffer memory directry.","sig":null,"attributes":[{"value":"/ Allows to write into ring buffer memory directry.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":17412,"byte_end":17465,"line_start":53,"line_end":53,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":17470,"byte_end":17473,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ *This function is unsafe because it gives access to possibly uninitialized memory*","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":17478,"byte_end":17564,"line_start":55,"line_end":55,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":17569,"byte_end":17572,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The method takes a function `f` as argument.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":17577,"byte_end":17625,"line_start":57,"line_end":57,"column_start":5,"column_end":53}},{"value":"/ `f` takes two slices of ring buffer content (the second one or both of them may be empty).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":17630,"byte_end":17724,"line_start":58,"line_end":58,"column_start":5,"column_end":99}},{"value":"/ First slice contains older elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":17729,"byte_end":17769,"line_start":59,"line_end":59,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":17774,"byte_end":17777,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ `f` should return number of elements been written.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":17782,"byte_end":17836,"line_start":61,"line_end":61,"column_start":5,"column_end":59}},{"value":"/ *There is no checks for returned number - it remains on the developer's conscience.*","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":17841,"byte_end":17929,"line_start":62,"line_end":62,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":17934,"byte_end":17937,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ The method **always** calls `f` even if ring buffer is full.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":17942,"byte_end":18006,"line_start":64,"line_end":64,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":18011,"byte_end":18014,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ The method returns number returned from `f`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":18019,"byte_end":18067,"line_start":66,"line_end":66,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":18072,"byte_end":18075,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":18080,"byte_end":18092,"line_start":68,"line_end":68,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":18097,"byte_end":18100,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The method gives access to ring buffer underlying memory which may be uninitialized.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":18105,"byte_end":18193,"line_start":70,"line_end":70,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":18198,"byte_end":18201,"line_start":71,"line_end":71,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":19764,"byte_end":19773,"line_start":121,"line_end":121,"column_start":19,"column_end":28},"name":"push_copy","qualname":"<Producer<T>>::push_copy","value":"pub unsafe fn push_copy(&mut Self, &[MaybeUninit<T>]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Copies data from the slice to the ring buffer in byte-to-byte manner.","sig":null,"attributes":[{"value":"/ Copies data from the slice to the ring buffer in byte-to-byte manner.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":19225,"byte_end":19298,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":19303,"byte_end":19306,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ The `elems` slice should contain **initialized** data before the method call.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":19311,"byte_end":19392,"line_start":110,"line_end":110,"column_start":5,"column_end":86}},{"value":"/ After the call the copied part of data in `elems` should be interpreted as **un-initialized**.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":19397,"byte_end":19495,"line_start":111,"line_end":111,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":19500,"byte_end":19503,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ Returns the number of items been copied.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":19508,"byte_end":19552,"line_start":113,"line_end":113,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":19557,"byte_end":19560,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":19565,"byte_end":19577,"line_start":115,"line_end":115,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":19582,"byte_end":19585,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ The method copies raw data into the ring buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":19590,"byte_end":19642,"line_start":117,"line_end":117,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":19647,"byte_end":19650,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ *You should properly fill the slice and manage remaining elements after copy.*","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":19655,"byte_end":19737,"line_start":119,"line_end":119,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":19742,"byte_end":19745,"line_start":120,"line_end":120,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":20903,"byte_end":20907,"line_start":149,"line_end":149,"column_start":12,"column_end":16},"name":"push","qualname":"<Producer<T>>::push","value":"pub fn push(&mut Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Appends an element to the ring buffer.\n On failure returns an error containing the element that hasn't beed appended.\n","sig":null,"attributes":[{"value":"/ Appends an element to the ring buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":20763,"byte_end":20805,"line_start":147,"line_end":147,"column_start":5,"column_end":47}},{"value":"/ On failure returns an error containing the element that hasn't beed appended.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":20810,"byte_end":20891,"line_start":148,"line_end":148,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":21717,"byte_end":21726,"line_start":173,"line_end":173,"column_start":12,"column_end":21},"name":"push_each","qualname":"<Producer<T>>::push_each","value":"pub fn push_each<F: FnMut() -> Option<T>>(&mut Self, F) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Repeatedly calls the closure `f` and pushes elements returned from it to the ring buffer.","sig":null,"attributes":[{"value":"/ Repeatedly calls the closure `f` and pushes elements returned from it to the ring buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":21442,"byte_end":21535,"line_start":168,"line_end":168,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":21540,"byte_end":21543,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The closure is called until it returns `None` or the ring buffer is full.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":21548,"byte_end":21625,"line_start":170,"line_end":170,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":21630,"byte_end":21633,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ The method returns number of elements been put into the buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":21638,"byte_end":21705,"line_start":172,"line_end":172,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":22670,"byte_end":22679,"line_start":197,"line_end":197,"column_start":12,"column_end":21},"name":"push_iter","qualname":"<Producer<T>>::push_iter","value":"pub fn push_iter<I: Iterator<Item = T>>(&mut Self, &mut I) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Appends elements from an iterator to the ring buffer.\n Elements that haven't been added to the ring buffer remain in the iterator.","sig":null,"attributes":[{"value":"/ Appends elements from an iterator to the ring buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":22441,"byte_end":22498,"line_start":193,"line_end":193,"column_start":5,"column_end":62}},{"value":"/ Elements that haven't been added to the ring buffer remain in the iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":22503,"byte_end":22582,"line_start":194,"line_end":194,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":22587,"byte_end":22590,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ Returns count of elements been appended to the ring buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":22595,"byte_end":22658,"line_start":196,"line_end":196,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":23131,"byte_end":23140,"line_start":206,"line_end":206,"column_start":12,"column_end":21},"name":"move_from","qualname":"<Producer<T>>::move_from","value":"pub fn move_from(&mut Self, &mut Consumer<T>, Option<usize>) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Removes at most `count` elements from the consumer and appends them to the producer.\n If `count` is `None` then as much as possible elements will be moved.\n The producer and consumer parts may be of different buffers as well as of the same one.","sig":null,"attributes":[{"value":"/ Removes at most `count` elements from the consumer and appends them to the producer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":22791,"byte_end":22879,"line_start":201,"line_end":201,"column_start":5,"column_end":93}},{"value":"/ If `count` is `None` then as much as possible elements will be moved.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":22884,"byte_end":22957,"line_start":202,"line_end":202,"column_start":5,"column_end":78}},{"value":"/ The producer and consumer parts may be of different buffers as well as of the same one.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":22962,"byte_end":23053,"line_start":203,"line_end":203,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":23058,"byte_end":23061,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ On success returns number of elements been moved.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":23066,"byte_end":23119,"line_start":205,"line_end":205,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":23528,"byte_end":23538,"line_start":216,"line_end":216,"column_start":12,"column_end":22},"name":"push_slice","qualname":"<Producer<T>>::push_slice","value":"pub fn push_slice(&mut Self, &[T]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Appends elements from slice to the ring buffer.\n Elements should be [`Copy`](https://doc.rust-lang.org/std/marker/trait.Copy.html).","sig":null,"attributes":[{"value":"/ Appends elements from slice to the ring buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":23298,"byte_end":23349,"line_start":212,"line_end":212,"column_start":5,"column_end":56}},{"value":"/ Elements should be [`Copy`](https://doc.rust-lang.org/std/marker/trait.Copy.html).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":23354,"byte_end":23440,"line_start":213,"line_end":213,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":23445,"byte_end":23448,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Returns count of elements been appended to the ring buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":23453,"byte_end":23516,"line_start":215,"line_end":215,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":24219,"byte_end":24228,"line_start":232,"line_end":232,"column_start":12,"column_end":21},"name":"read_from","qualname":"<Producer<u8>>::read_from","value":"pub fn read_from(&mut Self, &mut dyn Read, Option<usize>) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Reads at most `count` bytes\n from [`Read`](https://doc.rust-lang.org/std/io/trait.Read.html) instance\n and appends them to the ring buffer.\n If `count` is `None` then as much as possible bytes will be read.","sig":null,"attributes":[{"value":"/ Reads at most `count` bytes","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":23717,"byte_end":23748,"line_start":223,"line_end":223,"column_start":5,"column_end":36}},{"value":"/ from [`Read`](https://doc.rust-lang.org/std/io/trait.Read.html) instance","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":23753,"byte_end":23829,"line_start":224,"line_end":224,"column_start":5,"column_end":81}},{"value":"/ and appends them to the ring buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":23834,"byte_end":23874,"line_start":225,"line_end":225,"column_start":5,"column_end":45}},{"value":"/ If `count` is `None` then as much as possible bytes will be read.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":23879,"byte_end":23948,"line_start":226,"line_end":226,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":23953,"byte_end":23956,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(n)` if `read` is succeded. `n` is number of bytes been read.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":23961,"byte_end":24037,"line_start":228,"line_end":228,"column_start":5,"column_end":81}},{"value":"/ `n == 0` means that either `read` returned zero or ring buffer is full.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":24042,"byte_end":24117,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":24122,"byte_end":24125,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ If `read` is failed or returned an invalid number then error is returned.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":24130,"byte_end":24207,"line_start":231,"line_end":231,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":213},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/ring_buffer.rs","byte_start":26690,"byte_end":26700,"line_start":34,"line_end":34,"column_start":12,"column_end":22},"name":"RingBuffer","qualname":"::ring_buffer::RingBuffer","value":"RingBuffer {  }","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217}],"decl_id":null,"docs":" Ring buffer itself.\n","sig":null,"attributes":[{"value":"/ Ring buffer itself.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/ring_buffer.rs","byte_start":26655,"byte_end":26678,"line_start":33,"line_end":33,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/ring_buffer.rs","byte_start":26949,"byte_end":26952,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<RingBuffer<T>>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of a ring buffer.\n","sig":null,"attributes":[{"value":"/ Creates a new instance of a ring buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/ring_buffer.rs","byte_start":26893,"byte_end":26937,"line_start":41,"line_end":41,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/ring_buffer.rs","byte_start":27328,"byte_end":27333,"line_start":53,"line_end":53,"column_start":12,"column_end":17},"name":"split","qualname":"<RingBuffer<T>>::split","value":"pub fn split(Self) -> (Producer<T>, Consumer<T>)","parent":null,"children":[],"decl_id":null,"docs":" Splits ring buffer into producer and consumer.\n","sig":null,"attributes":[{"value":"/ Splits ring buffer into producer and consumer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/ring_buffer.rs","byte_start":27266,"byte_end":27316,"line_start":52,"line_end":52,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/ring_buffer.rs","byte_start":27530,"byte_end":27538,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"capacity","qualname":"<RingBuffer<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns capacity of the ring buffer.\n","sig":null,"attributes":[{"value":"/ Returns capacity of the ring buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/ring_buffer.rs","byte_start":27478,"byte_end":27518,"line_start":58,"line_end":58,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/ring_buffer.rs","byte_start":27668,"byte_end":27676,"line_start":64,"line_end":64,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<RingBuffer<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the ring buffer is empty.\n","sig":null,"attributes":[{"value":"/ Checks if the ring buffer is empty.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/ring_buffer.rs","byte_start":27617,"byte_end":27656,"line_start":63,"line_end":63,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/ring_buffer.rs","byte_start":27884,"byte_end":27891,"line_start":71,"line_end":71,"column_start":12,"column_end":19},"name":"is_full","qualname":"<RingBuffer<T>>::is_full","value":"pub fn is_full(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the ring buffer is full.\n","sig":null,"attributes":[{"value":"/ Checks if the ring buffer is full.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/ring_buffer.rs","byte_start":27834,"byte_end":27872,"line_start":70,"line_end":70,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/ring_buffer.rs","byte_start":28132,"byte_end":28135,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"len","qualname":"<RingBuffer<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The length of the data in the buffer.\n","sig":null,"attributes":[{"value":"/ The length of the data in the buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/ring_buffer.rs","byte_start":28079,"byte_end":28120,"line_start":77,"line_end":77,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/ring_buffer.rs","byte_start":28391,"byte_end":28400,"line_start":85,"line_end":85,"column_start":12,"column_end":21},"name":"remaining","qualname":"<RingBuffer<T>>::remaining","value":"pub fn remaining(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The remaining space in the buffer.\n","sig":null,"attributes":[{"value":"/ The remaining space in the buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/ring_buffer.rs","byte_start":28341,"byte_end":28379,"line_start":84,"line_end":84,"column_start":5,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":240},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/ring_buffer.rs","byte_start":29949,"byte_end":29959,"line_start":146,"line_end":146,"column_start":8,"column_end":18},"name":"move_items","qualname":"::ring_buffer::move_items","value":"pub fn move_items<T>(&mut Consumer<T>, &mut Producer<T>, Option<usize>)\n-> usize","parent":null,"children":[],"decl_id":null,"docs":" Moves at most `count` items from the `src` consumer to the `dst` producer.\n Consumer and producer may be of different buffers as well as of the same one.","sig":null,"attributes":[{"value":"/ Moves at most `count` items from the `src` consumer to the `dst` producer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/ring_buffer.rs","byte_start":29632,"byte_end":29710,"line_start":140,"line_end":140,"column_start":1,"column_end":79}},{"value":"/ Consumer and producer may be of different buffers as well as of the same one.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/ring_buffer.rs","byte_start":29711,"byte_end":29792,"line_start":141,"line_end":141,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/ring_buffer.rs","byte_start":29793,"byte_end":29796,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ `count` is the number of items being moved, if `None` - as much as possible items will be moved.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/ring_buffer.rs","byte_start":29797,"byte_end":29897,"line_start":143,"line_end":143,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/ring_buffer.rs","byte_start":29898,"byte_end":29901,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ Returns number of items been moved.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/ring_buffer.rs","byte_start":29902,"byte_end":29941,"line_start":145,"line_end":145,"column_start":1,"column_end":40}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":2369,"byte_end":2377,"line_start":19,"line_end":19,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":13384,"byte_end":13392,"line_start":325,"line_end":325,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":13842,"byte_end":13850,"line_start":336,"line_end":336,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":15787,"byte_end":15795,"line_start":391,"line_end":391,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":16403,"byte_end":16411,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":23280,"byte_end":23288,"line_start":211,"line_end":211,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":23698,"byte_end":23706,"line_start":222,"line_end":222,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":25595,"byte_end":25603,"line_start":274,"line_end":274,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/ring_buffer.rs","byte_start":26295,"byte_end":26304,"line_start":16,"line_end":16,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/ring_buffer.rs","byte_start":26327,"byte_end":26336,"line_start":18,"line_end":18,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/ring_buffer.rs","byte_start":26873,"byte_end":26883,"line_start":40,"line_end":40,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/ring_buffer.rs","byte_start":28489,"byte_end":28499,"line_start":90,"line_end":90,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/ring_buffer.rs","byte_start":29250,"byte_end":29258,"line_start":121,"line_end":121,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":2369,"byte_end":2377,"line_start":19,"line_end":19,"column_start":16,"column_end":24},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":49},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":13384,"byte_end":13392,"line_start":325,"line_end":325,"column_start":23,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":49},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":13842,"byte_end":13850,"line_start":336,"line_end":336,"column_start":6,"column_end":14},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":49},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/consumer.rs","byte_start":15787,"byte_end":15795,"line_start":391,"line_end":391,"column_start":15,"column_end":23},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":49},"to":{"krate":5,"index":4266}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":16403,"byte_end":16411,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":23280,"byte_end":23288,"line_start":211,"line_end":211,"column_start":23,"column_end":31},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":23698,"byte_end":23706,"line_start":222,"line_end":222,"column_start":6,"column_end":14},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/producer.rs","byte_start":25595,"byte_end":25603,"line_start":274,"line_end":274,"column_start":16,"column_end":24},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":124},"to":{"krate":5,"index":4327}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/ring_buffer.rs","byte_start":26295,"byte_end":26304,"line_start":16,"line_end":16,"column_start":32,"column_end":41},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":203},"to":{"krate":1,"index":2837}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/ring_buffer.rs","byte_start":26327,"byte_end":26336,"line_start":18,"line_end":18,"column_start":16,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/ring_buffer.rs","byte_start":26873,"byte_end":26883,"line_start":40,"line_end":40,"column_start":16,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/ring_buffer.rs","byte_start":28489,"byte_end":28499,"line_start":90,"line_end":90,"column_start":25,"column_end":35},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":213},"to":{"krate":1,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/ringbuf-0.2.5/src/ring_buffer.rs","byte_start":29250,"byte_end":29258,"line_start":121,"line_end":121,"column_start":9,"column_end":17},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":231},"to":{"krate":4294967295,"index":4294967295}}]}