{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0","program":"/home/mramirez/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","itertools","--edition=2018","/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"use_alloc\"","--cfg","feature=\"use_std\"","-C","metadata=da4b6de16efd142b","-C","extra-filename=-da4b6de16efd142b","--out-dir","/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps","-L","dependency=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps","--extern","either=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libeither-8ff107b96bb927c0.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/mramirez/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libitertools-da4b6de16efd142b.rmeta"},"prelude":{"crate_id":{"name":"itertools","disambiguator":[15546743452583345919,12799198700193625472]},"crate_root":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src","external_crates":[{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[397594041871667817,11704163070354659695]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/k_smallest.rs","num":2,"id":{"name":"core","disambiguator":[17044353007700780372,2918200604221815240]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15333840167806743833,9889193056877993824]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4550415707075219492,6623162258675921486]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8289379911494056514,13856099756999900329]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10514502805115346386,576110030083780649]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9878185313679130060,1975285035821961205]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4010603182529655334,7152219772350788052]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[1807637986128902209,18379128151258407121]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11140927657351163542,6267109750485550558]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[13809795498598848728,13320395723520943315]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13869841232067652907,9875669357213642224]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15533050656730733495,14669839968799848603]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[14371692877540073659,8181723439448527964]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[639541300699627395,1995254029228069844]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[12482123824895737424,11765111494567609733]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[1169880241773671279,8605314106566979368]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[5016943468141875609,13494347935157563341]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","num":19,"id":{"name":"either","disambiguator":[8523441394746424597,7168958664385305303]}}],"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":0,"byte_end":108259,"line_start":1,"line_end":3196,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":19,"index":216},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":1556,"byte_end":1562,"line_start":62,"line_end":62,"column_start":17,"column_end":23},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":4517},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":2039,"byte_end":2043,"line_start":83,"line_end":83,"column_start":14,"column_end":18},"alias_span":null,"name":"__std_iter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":384},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":2150,"byte_end":2155,"line_start":88,"line_end":88,"column_start":9,"column_end":14},"alias_span":null,"name":"Dedup","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":364},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":2165,"byte_end":2172,"line_start":89,"line_end":89,"column_start":9,"column_end":16},"alias_span":null,"name":"DedupBy","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":395},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":2182,"byte_end":2196,"line_start":90,"line_end":90,"column_start":9,"column_end":23},"alias_span":null,"name":"DedupWithCount","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":388},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":2206,"byte_end":2222,"line_start":91,"line_end":91,"column_start":9,"column_end":25},"alias_span":null,"name":"DedupByWithCount","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":2525},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":2232,"byte_end":2242,"line_start":92,"line_end":92,"column_start":9,"column_end":19},"alias_span":null,"name":"Interleave","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":2539},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":2252,"byte_end":2270,"line_start":93,"line_end":93,"column_start":9,"column_end":27},"alias_span":null,"name":"InterleaveShortest","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":731},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":2280,"byte_end":2291,"line_start":94,"line_end":94,"column_start":9,"column_end":20},"alias_span":null,"name":"FilterMapOk","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":2945},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":2301,"byte_end":2309,"line_start":95,"line_end":95,"column_start":9,"column_end":17},"alias_span":null,"name":"FilterOk","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":2563},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":2319,"byte_end":2326,"line_start":96,"line_end":96,"column_start":9,"column_end":16},"alias_span":null,"name":"Product","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":2553},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":2336,"byte_end":2343,"line_start":97,"line_end":97,"column_start":9,"column_end":16},"alias_span":null,"name":"PutBack","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":2578},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":2353,"byte_end":2361,"line_start":98,"line_end":98,"column_start":9,"column_end":17},"alias_span":null,"name":"Batching","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":456},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":2371,"byte_end":2378,"line_start":99,"line_end":99,"column_start":9,"column_end":16},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":436},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":2388,"byte_end":2393,"line_start":100,"line_end":100,"column_start":9,"column_end":14},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":623},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":2403,"byte_end":2408,"line_start":101,"line_end":101,"column_start":9,"column_end":14},"alias_span":null,"name":"Merge","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":629},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":2418,"byte_end":2425,"line_start":102,"line_end":102,"column_start":9,"column_end":16},"alias_span":null,"name":"MergeBy","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":660},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":2435,"byte_end":2447,"line_start":103,"line_end":103,"column_start":9,"column_end":21},"alias_span":null,"name":"TakeWhileRef","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":2605},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":2457,"byte_end":2466,"line_start":104,"line_end":104,"column_start":9,"column_end":18},"alias_span":null,"name":"WhileSome","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":353},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":2476,"byte_end":2484,"line_start":105,"line_end":105,"column_start":9,"column_end":17},"alias_span":null,"name":"Coalesce","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":2614},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":2494,"byte_end":2511,"line_start":106,"line_end":106,"column_start":9,"column_end":26},"alias_span":null,"name":"TupleCombinations","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":2954},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":2521,"byte_end":2530,"line_start":107,"line_end":107,"column_start":9,"column_end":18},"alias_span":null,"name":"Positions","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":2964},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":2540,"byte_end":2546,"line_start":108,"line_end":108,"column_start":9,"column_end":15},"alias_span":null,"name":"Update","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":439},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":2610,"byte_end":2620,"line_start":111,"line_end":111,"column_start":31,"column_end":41},"alias_span":null,"name":"MapResults","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":2588},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":2622,"byte_end":2626,"line_start":111,"line_end":111,"column_start":43,"column_end":47},"alias_span":null,"name":"Step","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":2500},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":2692,"byte_end":2704,"line_start":113,"line_end":113,"column_start":30,"column_end":42},"alias_span":null,"name":"MultiProduct","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":953},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":2773,"byte_end":2785,"line_start":115,"line_end":115,"column_start":34,"column_end":46},"alias_span":null,"name":"Combinations","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":3315},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":2871,"byte_end":2898,"line_start":117,"line_end":117,"column_start":51,"column_end":78},"alias_span":null,"name":"CombinationsWithReplacement","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":3304},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":2937,"byte_end":2947,"line_start":118,"line_end":118,"column_start":38,"column_end":48},"alias_span":null,"name":"ConsTuples","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":3324},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":2985,"byte_end":3000,"line_start":119,"line_end":119,"column_start":37,"column_end":52},"alias_span":null,"name":"ExactlyOneError","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":3343},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":3030,"byte_end":3036,"line_start":120,"line_end":120,"column_start":29,"column_end":35},"alias_span":null,"name":"Format","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":3332},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":3038,"byte_end":3048,"line_start":120,"line_end":120,"column_start":37,"column_end":47},"alias_span":null,"name":"FormatWith","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":3402},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":3117,"byte_end":3128,"line_start":122,"line_end":122,"column_start":35,"column_end":46},"alias_span":null,"name":"GroupingMap","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":1137},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":3130,"byte_end":3143,"line_start":122,"line_end":122,"column_start":48,"column_end":61},"alias_span":null,"name":"GroupingMapBy","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":1337},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":3213,"byte_end":3223,"line_start":124,"line_end":124,"column_start":34,"column_end":44},"alias_span":null,"name":"IntoChunks","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":1361},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":3225,"byte_end":3230,"line_start":124,"line_end":124,"column_start":46,"column_end":51},"alias_span":null,"name":"Chunk","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":1351},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":3232,"byte_end":3238,"line_start":124,"line_end":124,"column_start":53,"column_end":59},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":1276},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":3240,"byte_end":3247,"line_start":124,"line_end":124,"column_start":61,"column_end":68},"alias_span":null,"name":"GroupBy","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":1314},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":3249,"byte_end":3254,"line_start":124,"line_end":124,"column_start":70,"column_end":75},"alias_span":null,"name":"Group","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":1300},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":3256,"byte_end":3262,"line_start":124,"line_end":124,"column_start":77,"column_end":83},"alias_span":null,"name":"Groups","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":1389},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":3298,"byte_end":3309,"line_start":125,"line_end":125,"column_start":34,"column_end":45},"alias_span":null,"name":"Intersperse","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":3427},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":3311,"byte_end":3326,"line_start":125,"line_end":125,"column_start":47,"column_end":62},"alias_span":null,"name":"IntersperseWith","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":1450},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":3396,"byte_end":3402,"line_start":127,"line_end":127,"column_start":34,"column_end":40},"alias_span":null,"name":"KMerge","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":1464},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":3404,"byte_end":3412,"line_start":127,"line_end":127,"column_start":42,"column_end":50},"alias_span":null,"name":"KMergeBy","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":1530},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":3446,"byte_end":3457,"line_start":128,"line_end":128,"column_start":32,"column_end":43},"alias_span":null,"name":"MergeJoinBy","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":3493},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":3528,"byte_end":3537,"line_start":130,"line_end":130,"column_start":36,"column_end":45},"alias_span":null,"name":"MultiPeek","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":3515},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":3602,"byte_end":3609,"line_start":132,"line_end":132,"column_start":30,"column_end":37},"alias_span":null,"name":"PeekNth","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":3504},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":3640,"byte_end":3648,"line_start":133,"line_end":133,"column_start":30,"column_end":38},"alias_span":null,"name":"PadUsing","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":1677},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":3689,"byte_end":3705,"line_start":134,"line_end":134,"column_start":40,"column_end":56},"alias_span":null,"name":"PeekingTakeWhile","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":1707},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":3774,"byte_end":3786,"line_start":136,"line_end":136,"column_start":34,"column_end":46},"alias_span":null,"name":"Permutations","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":3600},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":3829,"byte_end":3843,"line_start":137,"line_end":137,"column_start":42,"column_end":56},"alias_span":null,"name":"ProcessResults","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":1768},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":3908,"byte_end":3916,"line_start":139,"line_end":139,"column_start":30,"column_end":38},"alias_span":null,"name":"Powerset","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":3611},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":3988,"byte_end":3996,"line_start":141,"line_end":141,"column_start":37,"column_end":45},"alias_span":null,"name":"PutBackN","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":3621},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":4064,"byte_end":4070,"line_start":143,"line_end":143,"column_start":33,"column_end":39},"alias_span":null,"name":"RcIter","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":3628},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":4100,"byte_end":4107,"line_start":144,"line_end":144,"column_start":29,"column_end":36},"alias_span":null,"name":"RepeatN","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":3638},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":4163,"byte_end":4173,"line_start":146,"line_end":146,"column_start":30,"column_end":40},"alias_span":null,"name":"RepeatCall","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":3646},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":4175,"byte_end":4181,"line_start":146,"line_end":146,"column_start":42,"column_end":48},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":3655},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":4183,"byte_end":4190,"line_start":146,"line_end":146,"column_start":50,"column_end":57},"alias_span":null,"name":"Iterate","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":3675},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":4251,"byte_end":4254,"line_start":148,"line_end":148,"column_start":25,"column_end":28},"alias_span":null,"name":"Tee","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":3682},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":4288,"byte_end":4299,"line_start":149,"line_end":149,"column_start":33,"column_end":44},"alias_span":null,"name":"TupleBuffer","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":3701},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":4301,"byte_end":4313,"line_start":149,"line_end":149,"column_start":46,"column_end":58},"alias_span":null,"name":"TupleWindows","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":3714},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":4315,"byte_end":4335,"line_start":149,"line_end":149,"column_start":60,"column_end":80},"alias_span":null,"name":"CircularTupleWindows","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":3692},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":4337,"byte_end":4343,"line_start":149,"line_end":149,"column_start":82,"column_end":88},"alias_span":null,"name":"Tuples","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":3916},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":4411,"byte_end":4417,"line_start":151,"line_end":151,"column_start":34,"column_end":40},"alias_span":null,"name":"Unique","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":3903},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":4419,"byte_end":4427,"line_start":151,"line_end":151,"column_start":42,"column_end":50},"alias_span":null,"name":"UniqueBy","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":2081},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":4464,"byte_end":4476,"line_start":152,"line_end":152,"column_start":35,"column_end":47},"alias_span":null,"name":"WithPosition","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":3952},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":4510,"byte_end":4515,"line_start":153,"line_end":153,"column_start":33,"column_end":38},"alias_span":null,"name":"ZipEq","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":3965},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":4549,"byte_end":4559,"line_start":154,"line_end":154,"column_start":33,"column_end":43},"alias_span":null,"name":"ZipLongest","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":3978},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":4590,"byte_end":4593,"line_start":155,"line_end":155,"column_start":30,"column_end":33},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":47}},{"kind":"Use","ref_id":{"krate":0,"index":1961},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":4724,"byte_end":4740,"line_start":160,"line_end":160,"column_start":32,"column_end":48},"alias_span":null,"name":"HomogeneousTuple","value":"","parent":{"krate":0,"index":259}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":4790,"byte_end":4791,"line_start":164,"line_end":164,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"MapInto, Product, InterleaveShortest, CircularTupleWindows, DedupWithCount, WithPosition, PadUsing, Update, MergeJoinBy, KMerge, Intersperse, GroupingMapBy, FormatWith, ZipLongest, CombinationsWithReplacement, UniqueBy, Tuples, TakeWhileRef, MapOk, PutBack, FilterMapOk, PutBackN, Dedup, DedupByWithCount, TupleCombinations, Permutations, KMergeBy, IntersperseWith, ExactlyOneError, ZipEq, Step, Combinations, TupleWindows, Tee, Batching, FilterOk, Interleave, Merge, DedupBy, PeekingTakeWhile, WhileSome, Powerset, Positions, MultiPeek, GroupBy, IntoChunks, GroupingMap, Format, MultiProduct, Unique, Coalesce, MergeBy","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":932},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":4821,"byte_end":4827,"line_start":165,"line_end":165,"column_start":29,"column_end":35},"alias_span":null,"name":"concat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":940},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":4862,"byte_end":4873,"line_start":166,"line_end":166,"column_start":34,"column_end":45},"alias_span":null,"name":"cons_tuples","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1066},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":4896,"byte_end":4905,"line_start":167,"line_end":167,"column_start":22,"column_end":31},"alias_span":null,"name":"diff_with","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1050},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":4928,"byte_end":4932,"line_start":168,"line_end":168,"column_start":22,"column_end":26},"alias_span":null,"name":"Diff","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1472},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":4993,"byte_end":5002,"line_start":170,"line_end":170,"column_start":30,"column_end":39},"alias_span":null,"name":"kmerge_by","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3468},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":5028,"byte_end":5040,"line_start":171,"line_end":171,"column_start":24,"column_end":36},"alias_span":null,"name":"MinMaxResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1662},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":5077,"byte_end":5088,"line_start":172,"line_end":172,"column_start":36,"column_end":47},"alias_span":null,"name":"PeekingNext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1793},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":5127,"byte_end":5142,"line_start":173,"line_end":173,"column_start":38,"column_end":53},"alias_span":null,"name":"process_results","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1848},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":5168,"byte_end":5176,"line_start":174,"line_end":174,"column_start":25,"column_end":33},"alias_span":null,"name":"repeat_n","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1892},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":5224,"byte_end":5235,"line_start":176,"line_end":176,"column_start":26,"column_end":37},"alias_span":null,"name":"repeat_call","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1901},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":5237,"byte_end":5243,"line_start":176,"line_end":176,"column_start":39,"column_end":45},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1923},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":5245,"byte_end":5252,"line_start":176,"line_end":176,"column_start":47,"column_end":54},"alias_span":null,"name":"iterate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3924},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":5285,"byte_end":5293,"line_start":177,"line_end":177,"column_start":31,"column_end":39},"alias_span":null,"name":"Position","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2155},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":5320,"byte_end":5328,"line_start":178,"line_end":178,"column_start":26,"column_end":34},"alias_span":null,"name":"multizip","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2973},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":5395,"byte_end":5407,"line_start":181,"line_end":181,"column_start":32,"column_end":44},"alias_span":null,"name":"EitherOrBoth","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":542},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":160557,"byte_end":160567,"line_start":21,"line_end":21,"column_start":5,"column_end":15},"alias_span":null,"name":"interleave","value":"","parent":{"krate":0,"index":844}},{"kind":"Use","ref_id":{"krate":0,"index":626},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":160573,"byte_end":160578,"line_start":22,"line_end":22,"column_start":5,"column_end":10},"alias_span":null,"name":"merge","value":"","parent":{"krate":0,"index":844}},{"kind":"Use","ref_id":{"krate":0,"index":561},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":160584,"byte_end":160592,"line_start":23,"line_end":23,"column_start":5,"column_end":13},"alias_span":null,"name":"put_back","value":"","parent":{"krate":0,"index":844}},{"kind":"Use","ref_id":{"krate":0,"index":1807},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":160659,"byte_end":160669,"line_start":26,"line_end":26,"column_start":33,"column_end":43},"alias_span":null,"name":"put_back_n","value":"","parent":{"krate":0,"index":844}},{"kind":"Use","ref_id":{"krate":0,"index":1577},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":160732,"byte_end":160741,"line_start":28,"line_end":28,"column_start":32,"column_end":41},"alias_span":null,"name":"multipeek","value":"","parent":{"krate":0,"index":844}},{"kind":"Use","ref_id":{"krate":0,"index":1633},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":160798,"byte_end":160806,"line_start":30,"line_end":30,"column_start":26,"column_end":34},"alias_span":null,"name":"peek_nth","value":"","parent":{"krate":0,"index":844}},{"kind":"Use","ref_id":{"krate":0,"index":1462},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":160866,"byte_end":160872,"line_start":32,"line_end":32,"column_start":29,"column_end":35},"alias_span":null,"name":"kmerge","value":"","parent":{"krate":0,"index":844}},{"kind":"Use","ref_id":{"krate":0,"index":2103},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":160902,"byte_end":160908,"line_start":33,"line_end":33,"column_start":29,"column_end":35},"alias_span":null,"name":"zip_eq","value":"","parent":{"krate":0,"index":844}},{"kind":"Use","ref_id":{"krate":0,"index":1526},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":160937,"byte_end":160950,"line_start":34,"line_end":34,"column_start":28,"column_end":41},"alias_span":null,"name":"merge_join_by","value":"","parent":{"krate":0,"index":844}},{"kind":"Use","ref_id":{"krate":0,"index":1828},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161010,"byte_end":161016,"line_start":36,"line_end":36,"column_start":29,"column_end":35},"alias_span":null,"name":"rciter","value":"","parent":{"krate":0,"index":844}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":5474,"byte_end":5475,"line_start":185,"line_end":185,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"merge_join_by, merge, kmerge, zip_eq, interleave","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":0,"byte_end":108259,"line_start":1,"line_end":3196,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":259},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":267},{"krate":0,"index":270},{"krate":0,"index":273},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":280},{"krate":0,"index":283},{"krate":0,"index":286},{"krate":0,"index":289},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":296},{"krate":0,"index":299},{"krate":0,"index":302},{"krate":0,"index":305},{"krate":0,"index":308},{"krate":0,"index":797},{"krate":0,"index":841},{"krate":0,"index":844},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":935},{"krate":0,"index":943},{"krate":0,"index":975},{"krate":0,"index":997},{"krate":0,"index":1043},{"krate":0,"index":1071},{"krate":0,"index":1098},{"krate":0,"index":1188},{"krate":0,"index":1209},{"krate":0,"index":1376},{"krate":0,"index":1410},{"krate":0,"index":1420},{"krate":0,"index":1488},{"krate":0,"index":1506},{"krate":0,"index":1555},{"krate":0,"index":1564},{"krate":0,"index":1597},{"krate":0,"index":1620},{"krate":0,"index":1652},{"krate":0,"index":1694},{"krate":0,"index":1748},{"krate":0,"index":1784},{"krate":0,"index":1800},{"krate":0,"index":1818},{"krate":0,"index":1847},{"krate":0,"index":1860},{"krate":0,"index":1883},{"krate":0,"index":1926},{"krate":0,"index":1948},{"krate":0,"index":2020},{"krate":0,"index":2073},{"krate":0,"index":2099},{"krate":0,"index":2115},{"krate":0,"index":2151},{"krate":0,"index":2161},{"krate":0,"index":2440},{"krate":0,"index":2442},{"krate":0,"index":2445},{"krate":0,"index":2448},{"krate":0,"index":4407},{"krate":0,"index":4415},{"krate":0,"index":4417},{"krate":0,"index":4420},{"krate":0,"index":4423},{"krate":0,"index":4425},{"krate":0,"index":4428},{"krate":0,"index":4430},{"krate":0,"index":2453}],"decl_id":null,"docs":" Extra iterator adaptors, functions and macros.","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"crate_name = \"itertools\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":23,"byte_end":49,"line_start":2,"line_end":2,"column_start":1,"column_end":27}},{"value":"/ Extra iterator adaptors, functions and macros.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":98,"byte_end":148,"line_start":5,"line_end":5,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":149,"byte_end":152,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ To extend [`Iterator`] with methods in this crate, import","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":153,"byte_end":214,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/ the [`Itertools` trait](./trait.Itertools.html):","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":215,"byte_end":267,"line_start":8,"line_end":8,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":268,"byte_end":271,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":272,"byte_end":279,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":280,"byte_end":309,"line_start":11,"line_end":11,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":310,"byte_end":317,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":318,"byte_end":321,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Now, new methods like [`interleave`](./trait.Itertools.html#method.interleave)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":322,"byte_end":404,"line_start":14,"line_end":14,"column_start":1,"column_end":83}},{"value":"/ are available on all iterators:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":405,"byte_end":440,"line_start":15,"line_end":15,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":441,"byte_end":444,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":445,"byte_end":452,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":453,"byte_end":482,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":483,"byte_end":486,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ let it = (1..3).interleave(vec![-1, -2]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":487,"byte_end":532,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/ itertools::assert_equal(it, vec![1, -1, 2, -2]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":533,"byte_end":585,"line_start":21,"line_end":21,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":586,"byte_end":593,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":594,"byte_end":597,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Most iterator methods are also provided as functions (with the benefit","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":598,"byte_end":672,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ that they convert parameters using [`IntoIterator`]):","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":673,"byte_end":730,"line_start":25,"line_end":25,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":731,"byte_end":734,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":735,"byte_end":742,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ use itertools::interleave;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":743,"byte_end":773,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":774,"byte_end":777,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ for elt in interleave(&[1, 2, 3], &[2, 3, 4]) {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":778,"byte_end":829,"line_start":30,"line_end":30,"column_start":1,"column_end":52}},{"value":"/     /* loop body */","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":830,"byte_end":853,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":854,"byte_end":859,"line_start":32,"line_end":32,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":860,"byte_end":867,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":868,"byte_end":871,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ## Crate Features","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":872,"byte_end":893,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":894,"byte_end":897,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ - `use_std`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":898,"byte_end":913,"line_start":37,"line_end":37,"column_start":1,"column_end":16}},{"value":"/   - Enabled by default.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":914,"byte_end":941,"line_start":38,"line_end":38,"column_start":1,"column_end":28}},{"value":"/   - Disable to compile itertools using `#![no_std]`. This disables","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":942,"byte_end":1012,"line_start":39,"line_end":39,"column_start":1,"column_end":71}},{"value":"/     any items that depend on collections (like `group_by`, `unique`,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":1013,"byte_end":1085,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/     `kmerge`, `join` and many more).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":1086,"byte_end":1126,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":1127,"byte_end":1130,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ## Rust Version","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":1131,"byte_end":1150,"line_start":43,"line_end":43,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":1151,"byte_end":1154,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ This version of itertools requires Rust 1.32 or later.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":1155,"byte_end":1213,"line_start":45,"line_end":45,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":1214,"byte_end":1217,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ [`Iterator`]: https://doc.rust-lang.org/std/iter/trait.Iterator.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":1218,"byte_end":1290,"line_start":47,"line_end":47,"column_start":1,"column_end":73}}]},{"kind":"Mod","id":{"krate":0,"index":47},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":2101,"byte_end":2108,"line_start":86,"line_end":86,"column_start":9,"column_end":16},"name":"structs","qualname":"::structs","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":152},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":171},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":193},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":224},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":231},{"krate":0,"index":234},{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":244},{"krate":0,"index":247},{"krate":0,"index":250},{"krate":0,"index":253},{"krate":0,"index":256}],"decl_id":null,"docs":" The concrete iterator types.\n","sig":null,"attributes":[{"value":"/ The concrete iterator types.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":2060,"byte_end":2092,"line_start":85,"line_end":85,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":259},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":4684,"byte_end":4690,"line_start":159,"line_end":159,"column_start":9,"column_end":15},"name":"traits","qualname":"::traits","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":260}],"decl_id":null,"docs":" Traits helpful for using certain `Itertools` methods in generic contexts.\n","sig":null,"attributes":[{"value":"/ Traits helpful for using certain `Itertools` methods in generic contexts.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":4598,"byte_end":4675,"line_start":158,"line_end":158,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":319},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":138920,"byte_end":138930,"line_start":6,"line_end":6,"column_start":12,"column_end":22},"name":"CoalesceBy","qualname":"::adaptors::coalesce::CoalesceBy","value":"CoalesceBy {  }","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":334},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":139299,"byte_end":139316,"line_start":30,"line_end":30,"column_start":11,"column_end":28},"name":"CoalescePredicate","qualname":"::adaptors::coalesce::CoalescePredicate","value":"CoalescePredicate<Item, T>","parent":null,"children":[{"krate":0,"index":337}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":139335,"byte_end":139348,"line_start":31,"line_end":31,"column_start":8,"column_end":21},"name":"coalesce_pair","qualname":"::adaptors::coalesce::CoalescePredicate::coalesce_pair","value":"pub fn coalesce_pair(&mut Self, T, Item) -> Result<T, (T, T)>","parent":{"krate":0,"index":334},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":353},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":141158,"byte_end":141166,"line_start":89,"line_end":89,"column_start":10,"column_end":18},"name":"Coalesce","qualname":"::adaptors::coalesce::Coalesce","value":"CoalesceBy<I, F, <I as Iterator>::Item>","parent":null,"children":[],"decl_id":null,"docs":" An iterator adaptor that may join together adjacent elements.","sig":null,"attributes":[{"value":"/ An iterator adaptor that may join together adjacent elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":140918,"byte_end":140983,"line_start":85,"line_end":85,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":140984,"byte_end":140987,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ See [`.coalesce()`](../trait.Itertools.html#method.coalesce) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":140988,"byte_end":141074,"line_start":87,"line_end":87,"column_start":1,"column_end":87}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":141075,"byte_end":141148,"line_start":88,"line_end":88,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":364},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":141948,"byte_end":141955,"line_start":116,"line_end":116,"column_start":10,"column_end":17},"name":"DedupBy","qualname":"::adaptors::coalesce::DedupBy","value":"CoalesceBy<I, DedupPred2CoalescePred<Pred>, <I as Iterator>::Item>","parent":null,"children":[],"decl_id":null,"docs":" An iterator adaptor that removes repeated duplicates, determining equality using a comparison function.","sig":null,"attributes":[{"value":"/ An iterator adaptor that removes repeated duplicates, determining equality using a comparison function.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":141612,"byte_end":141719,"line_start":112,"line_end":112,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":141720,"byte_end":141723,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ See [`.dedup_by()`](../trait.Itertools.html#method.dedup_by) or [`.dedup()`](../trait.Itertools.html#method.dedup) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":141724,"byte_end":141864,"line_start":114,"line_end":114,"column_start":1,"column_end":141}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":141865,"byte_end":141938,"line_start":115,"line_end":115,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2459},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":142064,"byte_end":142086,"line_start":119,"line_end":119,"column_start":12,"column_end":34},"name":"DedupPred2CoalescePred","qualname":"::adaptors::coalesce::DedupPred2CoalescePred","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":367},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":142107,"byte_end":142121,"line_start":121,"line_end":121,"column_start":11,"column_end":25},"name":"DedupPredicate","qualname":"::adaptors::coalesce::DedupPredicate","value":"DedupPredicate<T>","parent":null,"children":[{"krate":0,"index":369}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":142196,"byte_end":142206,"line_start":123,"line_end":123,"column_start":8,"column_end":18},"name":"dedup_pair","qualname":"::adaptors::coalesce::DedupPredicate::dedup_pair","value":"pub fn dedup_pair(&mut Self, &T, &T) -> bool","parent":{"krate":0,"index":367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2466},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":142567,"byte_end":142574,"line_start":140,"line_end":140,"column_start":12,"column_end":19},"name":"DedupEq","qualname":"::adaptors::coalesce::DedupEq","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":384},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":143238,"byte_end":143243,"line_start":169,"line_end":169,"column_start":10,"column_end":15},"name":"Dedup","qualname":"::adaptors::coalesce::Dedup","value":"DedupBy<I, DedupEq>","parent":null,"children":[],"decl_id":null,"docs":" An iterator adaptor that removes repeated duplicates.","sig":null,"attributes":[{"value":"/ An iterator adaptor that removes repeated duplicates.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":143086,"byte_end":143143,"line_start":166,"line_end":166,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":143144,"byte_end":143147,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ See [`.dedup()`](../trait.Itertools.html#method.dedup) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":143148,"byte_end":143228,"line_start":168,"line_end":168,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":388},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":143852,"byte_end":143868,"line_start":185,"line_end":185,"column_start":10,"column_end":26},"name":"DedupByWithCount","qualname":"::adaptors::coalesce::DedupByWithCount","value":"CoalesceBy<I, DedupPredWithCount2CoalescePred<Pred>,\n           (usize, <I as Iterator>::Item)>","parent":null,"children":[],"decl_id":null,"docs":" An iterator adaptor that removes repeated duplicates, while keeping a count of how many\n repeated elements were present. This will determine equality using a comparison function.","sig":null,"attributes":[{"value":"/ An iterator adaptor that removes repeated duplicates, while keeping a count of how many","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":143390,"byte_end":143481,"line_start":179,"line_end":179,"column_start":1,"column_end":92}},{"value":"/ repeated elements were present. This will determine equality using a comparison function.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":143482,"byte_end":143575,"line_start":180,"line_end":180,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":143576,"byte_end":143579,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ See [`.dedup_by_with_count()`](../trait.Itertools.html#method.dedup_by_with_count) or","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":143580,"byte_end":143669,"line_start":182,"line_end":182,"column_start":1,"column_end":90}},{"value":"/ [`.dedup_with_count()`](../trait.Itertools.html#method.dedup_with_count) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":143670,"byte_end":143768,"line_start":183,"line_end":183,"column_start":1,"column_end":99}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":143769,"byte_end":143842,"line_start":184,"line_end":184,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2470},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":143999,"byte_end":144030,"line_start":189,"line_end":189,"column_start":12,"column_end":43},"name":"DedupPredWithCount2CoalescePred","qualname":"::adaptors::coalesce::DedupPredWithCount2CoalescePred","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":395},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":144689,"byte_end":144703,"line_start":212,"line_end":212,"column_start":10,"column_end":24},"name":"DedupWithCount","qualname":"::adaptors::coalesce::DedupWithCount","value":"DedupByWithCount<I, DedupEq>","parent":null,"children":[],"decl_id":null,"docs":" An iterator adaptor that removes repeated duplicates, while keeping a count of how many\n repeated elements were present.","sig":null,"attributes":[{"value":"/ An iterator adaptor that removes repeated duplicates, while keeping a count of how many","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":144445,"byte_end":144536,"line_start":208,"line_end":208,"column_start":1,"column_end":92}},{"value":"/ repeated elements were present.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":144537,"byte_end":144572,"line_start":209,"line_end":209,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":144573,"byte_end":144576,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ See [`.dedup_with_count()`](../trait.Itertools.html#method.dedup_with_count) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":144577,"byte_end":144679,"line_start":211,"line_end":211,"column_start":1,"column_end":103}}]},{"kind":"Struct","id":{"krate":0,"index":2477},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs","byte_start":145364,"byte_end":145378,"line_start":6,"line_end":6,"column_start":12,"column_end":26},"name":"MapSpecialCase","qualname":"::adaptors::map::MapSpecialCase","value":"MapSpecialCase {  }","parent":null,"children":[{"krate":0,"index":2480},{"krate":0,"index":2481}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs","byte_start":145279,"byte_end":145352,"line_start":5,"line_end":5,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":410},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs","byte_start":145423,"byte_end":145439,"line_start":11,"line_end":11,"column_start":11,"column_end":27},"name":"MapSpecialCaseFn","qualname":"::adaptors::map::MapSpecialCaseFn","value":"MapSpecialCaseFn<T>","parent":null,"children":[{"krate":0,"index":412},{"krate":0,"index":413}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":412},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs","byte_start":145454,"byte_end":145457,"line_start":12,"line_end":12,"column_start":10,"column_end":13},"name":"Out","qualname":"::adaptors::map::MapSpecialCaseFn::Out","value":"type Out;","parent":{"krate":0,"index":410},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs","byte_start":145466,"byte_end":145470,"line_start":13,"line_end":13,"column_start":8,"column_end":12},"name":"call","qualname":"::adaptors::map::MapSpecialCaseFn::call","value":"pub fn call(&mut Self, T) -> Self::Out","parent":{"krate":0,"index":410},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":436},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs","byte_start":146767,"byte_end":146772,"line_start":68,"line_end":68,"column_start":10,"column_end":15},"name":"MapOk","qualname":"::adaptors::map::MapOk","value":"MapSpecialCase<I, MapSpecialCaseFnOk<F>>","parent":null,"children":[],"decl_id":null,"docs":" An iterator adapter to apply a transformation within a nested `Result::Ok`.","sig":null,"attributes":[{"value":"/ An iterator adapter to apply a transformation within a nested `Result::Ok`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs","byte_start":146591,"byte_end":146670,"line_start":65,"line_end":65,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs","byte_start":146671,"byte_end":146674,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ See [`.map_ok()`](../trait.Itertools.html#method.map_ok) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs","byte_start":146675,"byte_end":146757,"line_start":67,"line_end":67,"column_start":1,"column_end":83}}]},{"kind":"Type","id":{"krate":0,"index":439},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs","byte_start":146931,"byte_end":146941,"line_start":72,"line_end":72,"column_start":10,"column_end":20},"name":"MapResults","qualname":"::adaptors::map::MapResults","value":"MapOk<I, F>","parent":null,"children":[],"decl_id":null,"docs":" See [`MapOk`](struct.MapOk.html).\n","sig":null,"attributes":[{"value":"/ See [`MapOk`](struct.MapOk.html).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs","byte_start":146824,"byte_end":146861,"line_start":70,"line_end":70,"column_start":1,"column_end":38}},{"value":"deprecated(note = \"Use MapOk instead\", since = \"0.10.0\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs","byte_start":146862,"byte_end":146921,"line_start":71,"line_end":71,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":2486},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs","byte_start":147218,"byte_end":147236,"line_start":85,"line_end":85,"column_start":12,"column_end":30},"name":"MapSpecialCaseFnOk","qualname":"::adaptors::map::MapSpecialCaseFnOk","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":456},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs","byte_start":147653,"byte_end":147660,"line_start":102,"line_end":102,"column_start":10,"column_end":17},"name":"MapInto","qualname":"::adaptors::map::MapInto","value":"MapSpecialCase<I, MapSpecialCaseFnInto<R>>","parent":null,"children":[],"decl_id":null,"docs":" An iterator adapter to apply `Into` conversion to each element.","sig":null,"attributes":[{"value":"/ An iterator adapter to apply `Into` conversion to each element.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs","byte_start":147485,"byte_end":147552,"line_start":99,"line_end":99,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs","byte_start":147553,"byte_end":147556,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ See [`.map_into()`](../trait.Itertools.html#method.map_into) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs","byte_start":147557,"byte_end":147643,"line_start":101,"line_end":101,"column_start":1,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":2493},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs","byte_start":147900,"byte_end":147920,"line_start":112,"line_end":112,"column_start":12,"column_end":32},"name":"MapSpecialCaseFnInto","qualname":"::adaptors::map::MapSpecialCaseFnInto","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2500},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs","byte_start":148618,"byte_end":148630,"line_start":17,"line_end":17,"column_start":12,"column_end":24},"name":"MultiProduct","qualname":"::adaptors::multi_product::MultiProduct","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator adaptor that iterates over the cartesian product of\n multiple iterators of type `I`.","sig":null,"attributes":[{"value":"/ An iterator adaptor that iterates over the cartesian product of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs","byte_start":148258,"byte_end":148325,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"/ multiple iterators of type `I`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs","byte_start":148326,"byte_end":148361,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs","byte_start":148362,"byte_end":148365,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ An iterator element type is `Vec<I>`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs","byte_start":148366,"byte_end":148407,"line_start":12,"line_end":12,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs","byte_start":148408,"byte_end":148411,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ See [`.multi_cartesian_product()`](../trait.Itertools.html#method.multi_cartesian_product)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs","byte_start":148412,"byte_end":148506,"line_start":14,"line_end":14,"column_start":1,"column_end":95}},{"value":"/ for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs","byte_start":148507,"byte_end":148532,"line_start":15,"line_end":15,"column_start":1,"column_end":26}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs","byte_start":148533,"byte_end":148606,"line_start":16,"line_end":16,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2525},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":109798,"byte_end":109808,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"Interleave","qualname":"::adaptors::Interleave","value":"Interleave {  }","parent":null,"children":[{"krate":0,"index":2528},{"krate":0,"index":2529},{"krate":0,"index":2530}],"decl_id":null,"docs":" An iterator adaptor that alternates elements from two iterators until both\n run out.","sig":null,"attributes":[{"value":"/ An iterator adaptor that alternates elements from two iterators until both","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":109468,"byte_end":109546,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ run out.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":109547,"byte_end":109559,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":109560,"byte_end":109563,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":109564,"byte_end":109593,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":109594,"byte_end":109597,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ See [`.interleave()`](../trait.Itertools.html#method.interleave) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":109598,"byte_end":109688,"line_start":27,"line_end":27,"column_start":1,"column_end":91}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":109713,"byte_end":109786,"line_start":29,"line_end":29,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":542},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":110093,"byte_end":110103,"line_start":41,"line_end":41,"column_start":8,"column_end":18},"name":"interleave","qualname":"::adaptors::interleave","value":"pub fn interleave<I, J>(I, J)\n-> Interleave<<I as IntoIterator>::IntoIter, <J as IntoIterator>::IntoIter>\nwhere I: IntoIterator, J: IntoIterator<Item = I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that interleaves elements in `i` and `j`.","sig":null,"attributes":[{"value":"/ Create an iterator that interleaves elements in `i` and `j`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":109868,"byte_end":109932,"line_start":36,"line_end":36,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":109933,"byte_end":109936,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.interleave(j)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":109937,"byte_end":109993,"line_start":38,"line_end":38,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":109994,"byte_end":109997,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ See [`.interleave()`](trait.Itertools.html#method.interleave) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":109998,"byte_end":110085,"line_start":40,"line_end":40,"column_start":1,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":2539},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":111371,"byte_end":111389,"line_start":87,"line_end":87,"column_start":12,"column_end":30},"name":"InterleaveShortest","qualname":"::adaptors::InterleaveShortest","value":"InterleaveShortest {  }","parent":null,"children":[{"krate":0,"index":2542},{"krate":0,"index":2543},{"krate":0,"index":2544}],"decl_id":null,"docs":" An iterator adaptor that alternates elements from the two iterators until\n one of them runs out.","sig":null,"attributes":[{"value":"/ An iterator adaptor that alternates elements from the two iterators until","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":111007,"byte_end":111084,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/ one of them runs out.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":111085,"byte_end":111110,"line_start":79,"line_end":79,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":111111,"byte_end":111114,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":111115,"byte_end":111144,"line_start":81,"line_end":81,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":111145,"byte_end":111148,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ See [`.interleave_shortest()`](../trait.Itertools.html#method.interleave_shortest)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":111149,"byte_end":111235,"line_start":83,"line_end":83,"column_start":1,"column_end":87}},{"value":"/ for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":111236,"byte_end":111261,"line_start":84,"line_end":84,"column_start":1,"column_end":26}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":111286,"byte_end":111359,"line_start":86,"line_end":86,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2553},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":113532,"byte_end":113539,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"PutBack","qualname":"::adaptors::PutBack","value":"PutBack {  }","parent":null,"children":[{"krate":0,"index":2555},{"krate":0,"index":2556}],"decl_id":null,"docs":" An iterator adaptor that allows putting back a single\n item to the front of the iterator.","sig":null,"attributes":[{"value":"/ An iterator adaptor that allows putting back a single","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":113380,"byte_end":113437,"line_start":161,"line_end":161,"column_start":1,"column_end":58}},{"value":"/ item to the front of the iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":113438,"byte_end":113476,"line_start":162,"line_end":162,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":113477,"byte_end":113480,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":113481,"byte_end":113520,"line_start":164,"line_end":164,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":561},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":113676,"byte_end":113684,"line_start":173,"line_end":173,"column_start":8,"column_end":16},"name":"put_back","qualname":"::adaptors::put_back","value":"pub fn put_back<I>(I) -> PutBack<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator where you can put back a single item\n","sig":null,"attributes":[{"value":"/ Create an iterator where you can put back a single item","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":113609,"byte_end":113668,"line_start":172,"line_end":172,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":113933,"byte_end":113943,"line_start":186,"line_end":186,"column_start":12,"column_end":22},"name":"with_value","qualname":"<PutBack<I>>::with_value","value":"pub fn with_value(Self, I::Item) -> Self","parent":null,"children":[],"decl_id":null,"docs":" put back value `value` (builder method)\n","sig":null,"attributes":[{"value":"/ put back value `value` (builder method)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":113878,"byte_end":113921,"line_start":185,"line_end":185,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":114099,"byte_end":114109,"line_start":193,"line_end":193,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<PutBack<I>>::into_parts","value":"pub fn into_parts(Self) -> (Option<I::Item>, I)","parent":null,"children":[],"decl_id":null,"docs":" Split the `PutBack` into its parts.\n","sig":null,"attributes":[{"value":"/ Split the `PutBack` into its parts.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":114034,"byte_end":114073,"line_start":191,"line_end":191,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":114078,"byte_end":114087,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":114374,"byte_end":114382,"line_start":202,"line_end":202,"column_start":12,"column_end":20},"name":"put_back","qualname":"<PutBack<I>>::put_back","value":"pub fn put_back(&mut Self, I::Item)","parent":null,"children":[],"decl_id":null,"docs":" Put back a single value to the front of the iterator.","sig":null,"attributes":[{"value":"/ Put back a single value to the front of the iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":114212,"byte_end":114269,"line_start":198,"line_end":198,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":114274,"byte_end":114277,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ If a value is already in the put back slot, it is overwritten.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":114282,"byte_end":114348,"line_start":200,"line_end":200,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":114353,"byte_end":114362,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2563},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":116386,"byte_end":116393,"line_start":276,"line_end":276,"column_start":12,"column_end":19},"name":"Product","qualname":"::adaptors::Product","value":"Product {  }","parent":null,"children":[{"krate":0,"index":2566},{"krate":0,"index":2567},{"krate":0,"index":2568},{"krate":0,"index":2569}],"decl_id":null,"docs":" An iterator adaptor that iterates over the cartesian product of\n the element sets of two iterators `I` and `J`.","sig":null,"attributes":[{"value":"/ An iterator adaptor that iterates over the cartesian product of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":116018,"byte_end":116085,"line_start":269,"line_end":269,"column_start":1,"column_end":68}},{"value":"/ the element sets of two iterators `I` and `J`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":116086,"byte_end":116136,"line_start":270,"line_end":270,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":116137,"byte_end":116140,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `(I::Item, J::Item)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":116141,"byte_end":116191,"line_start":272,"line_end":272,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":116192,"byte_end":116195,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ See [`.cartesian_product()`](../trait.Itertools.html#method.cartesian_product) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":116196,"byte_end":116300,"line_start":274,"line_end":274,"column_start":1,"column_end":105}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":116301,"byte_end":116374,"line_start":275,"line_end":275,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2578},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":119225,"byte_end":119233,"line_start":372,"line_end":372,"column_start":12,"column_end":20},"name":"Batching","qualname":"::adaptors::Batching","value":"Batching {  }","parent":null,"children":[{"krate":0,"index":2581},{"krate":0,"index":2582}],"decl_id":null,"docs":" A “meta iterator adaptor”. Its closure receives a reference to the iterator\n and may pick off as many elements as it likes, to produce the next iterator element.","sig":null,"attributes":[{"value":"/ A “meta iterator adaptor”. Its closure receives a reference to the iterator","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":118777,"byte_end":118860,"line_start":364,"line_end":364,"column_start":1,"column_end":80}},{"value":"/ and may pick off as many elements as it likes, to produce the next iterator element.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":118861,"byte_end":118949,"line_start":365,"line_end":365,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":118950,"byte_end":118953,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is *X*, if the return type of `F` is *Option\\<X\\>*.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":118954,"byte_end":119031,"line_start":367,"line_end":367,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":119032,"byte_end":119035,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/ See [`.batching()`](../trait.Itertools.html#method.batching) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":119036,"byte_end":119122,"line_start":369,"line_end":369,"column_start":1,"column_end":87}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":119140,"byte_end":119213,"line_start":371,"line_end":371,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2588},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":120220,"byte_end":120224,"line_start":408,"line_end":408,"column_start":12,"column_end":16},"name":"Step","qualname":"::adaptors::Step","value":"Step {  }","parent":null,"children":[{"krate":0,"index":2590},{"krate":0,"index":2591}],"decl_id":null,"docs":" An iterator adaptor that steps a number elements in the base iterator\n for each iteration.","sig":null,"attributes":[{"value":"/ An iterator adaptor that steps a number elements in the base iterator","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":119723,"byte_end":119796,"line_start":397,"line_end":397,"column_start":1,"column_end":74}},{"value":"/ for each iteration.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":119797,"byte_end":119820,"line_start":398,"line_end":398,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":119821,"byte_end":119824,"line_start":399,"line_end":399,"column_start":1,"column_end":4}},{"value":"/ The iterator steps by yielding the next element from the base iterator,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":119825,"byte_end":119900,"line_start":400,"line_end":400,"column_start":1,"column_end":76}},{"value":"/ then skipping forward *n-1* elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":119901,"byte_end":119942,"line_start":401,"line_end":401,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":119943,"byte_end":119946,"line_start":402,"line_end":402,"column_start":1,"column_end":4}},{"value":"/ See [`.step()`](../trait.Itertools.html#method.step) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":119947,"byte_end":120025,"line_start":403,"line_end":403,"column_start":1,"column_end":79}},{"value":"deprecated(note = \"Use std .step_by() instead\", since = \"0.8.0\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":120026,"byte_end":120089,"line_start":404,"line_end":404,"column_start":1,"column_end":64}},{"value":"allow(deprecated)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":120090,"byte_end":120110,"line_start":405,"line_end":405,"column_start":1,"column_end":21}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":120135,"byte_end":120208,"line_start":407,"line_end":407,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":617},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":121245,"byte_end":121259,"line_start":460,"line_end":460,"column_start":11,"column_end":25},"name":"MergePredicate","qualname":"::adaptors::MergePredicate","value":"MergePredicate<T>","parent":null,"children":[{"krate":0,"index":619}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":121272,"byte_end":121282,"line_start":461,"line_end":461,"column_start":8,"column_end":18},"name":"merge_pred","qualname":"::adaptors::MergePredicate::merge_pred","value":"pub fn merge_pred(&mut Self, &T, &T) -> bool","parent":{"krate":0,"index":617},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2598},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":121348,"byte_end":121356,"line_start":465,"line_end":465,"column_start":12,"column_end":20},"name":"MergeLte","qualname":"::adaptors::MergeLte","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":623},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":121856,"byte_end":121861,"line_start":480,"line_end":480,"column_start":10,"column_end":15},"name":"Merge","qualname":"::adaptors::Merge","value":"MergeBy<I, J, MergeLte>","parent":null,"children":[],"decl_id":null,"docs":" An iterator adaptor that merges the two base iterators in ascending order.\n If both base iterators are sorted (ascending), the result is sorted.","sig":null,"attributes":[{"value":"/ An iterator adaptor that merges the two base iterators in ascending order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":121489,"byte_end":121567,"line_start":473,"line_end":473,"column_start":1,"column_end":79}},{"value":"/ If both base iterators are sorted (ascending), the result is sorted.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":121568,"byte_end":121640,"line_start":474,"line_end":474,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":121641,"byte_end":121644,"line_start":475,"line_end":475,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":121645,"byte_end":121684,"line_start":476,"line_end":476,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":121685,"byte_end":121688,"line_start":477,"line_end":477,"column_start":1,"column_end":4}},{"value":"/ See [`.merge()`](../trait.Itertools.html#method.merge_by) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":121689,"byte_end":121772,"line_start":478,"line_end":478,"column_start":1,"column_end":84}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":121773,"byte_end":121846,"line_start":479,"line_end":479,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":626},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":122146,"byte_end":122151,"line_start":493,"line_end":493,"column_start":8,"column_end":13},"name":"merge","qualname":"::adaptors::merge","value":"pub fn merge<I, J>(I, J)\n-> Merge<<I as IntoIterator>::IntoIter, <J as IntoIterator>::IntoIter> where\nI: IntoIterator, J: IntoIterator<Item = I::Item>, I::Item: PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that merges elements in `i` and `j`.","sig":null,"attributes":[{"value":"/ Create an iterator that merges elements in `i` and `j`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":121896,"byte_end":121955,"line_start":482,"line_end":482,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":121956,"byte_end":121959,"line_start":483,"line_end":483,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.merge(j)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":121960,"byte_end":122011,"line_start":484,"line_end":484,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":122012,"byte_end":122015,"line_start":485,"line_end":485,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":122016,"byte_end":122023,"line_start":486,"line_end":486,"column_start":1,"column_end":8}},{"value":"/ use itertools::merge;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":122024,"byte_end":122049,"line_start":487,"line_end":487,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":122050,"byte_end":122053,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/ for elt in merge(&[1, 2, 3], &[2, 3, 4]) {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":122054,"byte_end":122100,"line_start":489,"line_end":489,"column_start":1,"column_end":47}},{"value":"/     /* loop body */","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":122101,"byte_end":122124,"line_start":490,"line_end":490,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":122125,"byte_end":122130,"line_start":491,"line_end":491,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":122131,"byte_end":122138,"line_start":492,"line_end":492,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":629},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":122751,"byte_end":122758,"line_start":508,"line_end":508,"column_start":12,"column_end":19},"name":"MergeBy","qualname":"::adaptors::MergeBy","value":"MergeBy {  }","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636}],"decl_id":null,"docs":" An iterator adaptor that merges the two base iterators in ascending order.\n If both base iterators are sorted (ascending), the result is sorted.","sig":null,"attributes":[{"value":"/ An iterator adaptor that merges the two base iterators in ascending order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":122379,"byte_end":122457,"line_start":501,"line_end":501,"column_start":1,"column_end":79}},{"value":"/ If both base iterators are sorted (ascending), the result is sorted.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":122458,"byte_end":122530,"line_start":502,"line_end":502,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":122531,"byte_end":122534,"line_start":503,"line_end":503,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":122535,"byte_end":122574,"line_start":504,"line_end":504,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":122575,"byte_end":122578,"line_start":505,"line_end":505,"column_start":1,"column_end":4}},{"value":"/ See [`.merge_by()`](../trait.Itertools.html#method.merge_by) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":122579,"byte_end":122665,"line_start":506,"line_end":506,"column_start":1,"column_end":87}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":122666,"byte_end":122739,"line_start":507,"line_end":507,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":660},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":125194,"byte_end":125206,"line_start":596,"line_end":596,"column_start":12,"column_end":24},"name":"TakeWhileRef","qualname":"::adaptors::TakeWhileRef","value":"TakeWhileRef {  }","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":665}],"decl_id":null,"docs":" An iterator adaptor that borrows from a `Clone`-able iterator\n to only pick off elements while the predicate returns `true`.","sig":null,"attributes":[{"value":"/ An iterator adaptor that borrows from a `Clone`-able iterator","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":124874,"byte_end":124939,"line_start":591,"line_end":591,"column_start":1,"column_end":66}},{"value":"/ to only pick off elements while the predicate returns `true`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":124940,"byte_end":125005,"line_start":592,"line_end":592,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":125006,"byte_end":125009,"line_start":593,"line_end":593,"column_start":1,"column_end":4}},{"value":"/ See [`.take_while_ref()`](../trait.Itertools.html#method.take_while_ref) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":125010,"byte_end":125108,"line_start":594,"line_end":594,"column_start":1,"column_end":99}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":125109,"byte_end":125182,"line_start":595,"line_end":595,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2605},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":126549,"byte_end":126558,"line_start":646,"line_end":646,"column_start":12,"column_end":21},"name":"WhileSome","qualname":"::adaptors::WhileSome","value":"WhileSome {  }","parent":null,"children":[{"krate":0,"index":2607}],"decl_id":null,"docs":" An iterator adaptor that filters `Option<A>` iterator elements\n and produces `A`. Stops on the first `None` encountered.","sig":null,"attributes":[{"value":"/ An iterator adaptor that filters `Option<A>` iterator elements","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":126217,"byte_end":126283,"line_start":640,"line_end":640,"column_start":1,"column_end":67}},{"value":"/ and produces `A`. Stops on the first `None` encountered.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":126284,"byte_end":126344,"line_start":641,"line_end":641,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":126345,"byte_end":126348,"line_start":642,"line_end":642,"column_start":1,"column_end":4}},{"value":"/ See [`.while_some()`](../trait.Itertools.html#method.while_some) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":126349,"byte_end":126439,"line_start":643,"line_end":643,"column_start":1,"column_end":91}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":126464,"byte_end":126537,"line_start":645,"line_end":645,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2614},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":127398,"byte_end":127415,"line_start":679,"line_end":679,"column_start":12,"column_end":29},"name":"TupleCombinations","qualname":"::adaptors::TupleCombinations","value":"TupleCombinations {  }","parent":null,"children":[{"krate":0,"index":2617},{"krate":0,"index":2618},{"krate":0,"index":2619}],"decl_id":null,"docs":" An iterator to iterate through all combinations in a `Clone`-able iterator that produces tuples\n of a specific size.","sig":null,"attributes":[{"value":"/ An iterator to iterate through all combinations in a `Clone`-able iterator that produces tuples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":127050,"byte_end":127149,"line_start":672,"line_end":672,"column_start":1,"column_end":100}},{"value":"/ of a specific size.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":127150,"byte_end":127173,"line_start":673,"line_end":673,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":127174,"byte_end":127177,"line_start":674,"line_end":674,"column_start":1,"column_end":4}},{"value":"/ See [`.tuple_combinations()`](../trait.Itertools.html#method.tuple_combinations) for more","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":127178,"byte_end":127271,"line_start":675,"line_end":675,"column_start":1,"column_end":94}},{"value":"/ information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":127272,"byte_end":127288,"line_start":676,"line_end":676,"column_start":1,"column_end":17}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":127313,"byte_end":127386,"line_start":678,"line_end":678,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":688},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":127566,"byte_end":127580,"line_start":688,"line_end":688,"column_start":11,"column_end":25},"name":"HasCombination","qualname":"::adaptors::HasCombination","value":"HasCombination<I>: Sized","parent":null,"children":[{"krate":0,"index":690}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":690},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":127602,"byte_end":127613,"line_start":689,"line_end":689,"column_start":10,"column_end":21},"name":"Combination","qualname":"::adaptors::HasCombination::Combination","value":"type Combination: From<I> + Iterator<Item = Self>;","parent":{"krate":0,"index":688},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2628},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":128241,"byte_end":128258,"line_start":717,"line_end":717,"column_start":12,"column_end":29},"name":"Tuple1Combination","qualname":"::adaptors::Tuple1Combination","value":"Tuple1Combination {  }","parent":null,"children":[{"krate":0,"index":2630}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2654},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":131007,"byte_end":131024,"line_start":811,"line_end":811,"column_start":25,"column_end":42},"name":"Tuple2Combination","qualname":"::adaptors::Tuple2Combination","value":"Tuple2Combination {  }","parent":null,"children":[{"krate":0,"index":2656},{"krate":0,"index":2657},{"krate":0,"index":2658}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2682},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":131081,"byte_end":131098,"line_start":812,"line_end":812,"column_start":25,"column_end":42},"name":"Tuple3Combination","qualname":"::adaptors::Tuple3Combination","value":"Tuple3Combination {  }","parent":null,"children":[{"krate":0,"index":2684},{"krate":0,"index":2685},{"krate":0,"index":2686}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2710},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":131160,"byte_end":131177,"line_start":813,"line_end":813,"column_start":25,"column_end":42},"name":"Tuple4Combination","qualname":"::adaptors::Tuple4Combination","value":"Tuple4Combination {  }","parent":null,"children":[{"krate":0,"index":2712},{"krate":0,"index":2713},{"krate":0,"index":2714}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2738},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":131244,"byte_end":131261,"line_start":814,"line_end":814,"column_start":25,"column_end":42},"name":"Tuple5Combination","qualname":"::adaptors::Tuple5Combination","value":"Tuple5Combination {  }","parent":null,"children":[{"krate":0,"index":2740},{"krate":0,"index":2741},{"krate":0,"index":2742}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2766},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":131333,"byte_end":131350,"line_start":815,"line_end":815,"column_start":25,"column_end":42},"name":"Tuple6Combination","qualname":"::adaptors::Tuple6Combination","value":"Tuple6Combination {  }","parent":null,"children":[{"krate":0,"index":2768},{"krate":0,"index":2769},{"krate":0,"index":2770}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2794},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":131427,"byte_end":131444,"line_start":816,"line_end":816,"column_start":25,"column_end":42},"name":"Tuple7Combination","qualname":"::adaptors::Tuple7Combination","value":"Tuple7Combination {  }","parent":null,"children":[{"krate":0,"index":2796},{"krate":0,"index":2797},{"krate":0,"index":2798}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2822},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":131526,"byte_end":131543,"line_start":817,"line_end":817,"column_start":25,"column_end":42},"name":"Tuple8Combination","qualname":"::adaptors::Tuple8Combination","value":"Tuple8Combination {  }","parent":null,"children":[{"krate":0,"index":2824},{"krate":0,"index":2825},{"krate":0,"index":2826}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2850},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":131630,"byte_end":131647,"line_start":818,"line_end":818,"column_start":25,"column_end":42},"name":"Tuple9Combination","qualname":"::adaptors::Tuple9Combination","value":"Tuple9Combination {  }","parent":null,"children":[{"krate":0,"index":2852},{"krate":0,"index":2853},{"krate":0,"index":2854}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2878},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":131739,"byte_end":131757,"line_start":819,"line_end":819,"column_start":25,"column_end":43},"name":"Tuple10Combination","qualname":"::adaptors::Tuple10Combination","value":"Tuple10Combination {  }","parent":null,"children":[{"krate":0,"index":2880},{"krate":0,"index":2881},{"krate":0,"index":2882}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2906},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":131854,"byte_end":131872,"line_start":820,"line_end":820,"column_start":25,"column_end":43},"name":"Tuple11Combination","qualname":"::adaptors::Tuple11Combination","value":"Tuple11Combination {  }","parent":null,"children":[{"krate":0,"index":2908},{"krate":0,"index":2909},{"krate":0,"index":2910}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2934},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":131975,"byte_end":131993,"line_start":821,"line_end":821,"column_start":25,"column_end":43},"name":"Tuple12Combination","qualname":"::adaptors::Tuple12Combination","value":"Tuple12Combination {  }","parent":null,"children":[{"krate":0,"index":2936},{"krate":0,"index":2937},{"krate":0,"index":2938}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2945},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":132344,"byte_end":132352,"line_start":828,"line_end":828,"column_start":12,"column_end":20},"name":"FilterOk","qualname":"::adaptors::FilterOk","value":"FilterOk {  }","parent":null,"children":[{"krate":0,"index":2948},{"krate":0,"index":2949}],"decl_id":null,"docs":" An iterator adapter to filter values within a nested `Result::Ok`.","sig":null,"attributes":[{"value":"/ An iterator adapter to filter values within a nested `Result::Ok`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":132078,"byte_end":132148,"line_start":823,"line_end":823,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":132149,"byte_end":132152,"line_start":824,"line_end":824,"column_start":1,"column_end":4}},{"value":"/ See [`.filter_ok()`](../trait.Itertools.html#method.filter_ok) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":132153,"byte_end":132241,"line_start":825,"line_end":825,"column_start":1,"column_end":89}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":132259,"byte_end":132332,"line_start":827,"line_end":827,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":731},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":134008,"byte_end":134019,"line_start":891,"line_end":891,"column_start":12,"column_end":23},"name":"FilterMapOk","qualname":"::adaptors::FilterMapOk","value":"FilterMapOk {  }","parent":null,"children":[{"krate":0,"index":734},{"krate":0,"index":735}],"decl_id":null,"docs":" An iterator adapter to filter and apply a transformation on values within a nested `Result::Ok`.","sig":null,"attributes":[{"value":"/ An iterator adapter to filter and apply a transformation on values within a nested `Result::Ok`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":133721,"byte_end":133821,"line_start":887,"line_end":887,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":133822,"byte_end":133825,"line_start":888,"line_end":888,"column_start":1,"column_end":4}},{"value":"/ See [`.filter_map_ok()`](../trait.Itertools.html#method.filter_map_ok) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":133826,"byte_end":133922,"line_start":889,"line_end":889,"column_start":1,"column_end":97}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":133923,"byte_end":133996,"line_start":890,"line_end":890,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2954},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":135908,"byte_end":135917,"line_start":963,"line_end":963,"column_start":12,"column_end":21},"name":"Positions","qualname":"::adaptors::Positions","value":"Positions {  }","parent":null,"children":[{"krate":0,"index":2957},{"krate":0,"index":2958},{"krate":0,"index":2959}],"decl_id":null,"docs":" An iterator adapter to get the positions of each element that matches a predicate.","sig":null,"attributes":[{"value":"/ An iterator adapter to get the positions of each element that matches a predicate.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":135626,"byte_end":135712,"line_start":958,"line_end":958,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":135713,"byte_end":135716,"line_start":959,"line_end":959,"column_start":1,"column_end":4}},{"value":"/ See [`.positions()`](../trait.Itertools.html#method.positions) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":135717,"byte_end":135805,"line_start":960,"line_end":960,"column_start":1,"column_end":89}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":135823,"byte_end":135896,"line_start":962,"line_end":962,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2964},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":137341,"byte_end":137347,"line_start":1022,"line_end":1022,"column_start":12,"column_end":18},"name":"Update","qualname":"::adaptors::Update","value":"Update {  }","parent":null,"children":[{"krate":0,"index":2967},{"krate":0,"index":2968}],"decl_id":null,"docs":" An iterator adapter to apply a mutating function to each element before yielding it.","sig":null,"attributes":[{"value":"/ An iterator adapter to apply a mutating function to each element before yielding it.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":137063,"byte_end":137151,"line_start":1017,"line_end":1017,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":137152,"byte_end":137155,"line_start":1018,"line_end":1018,"column_start":1,"column_end":4}},{"value":"/ See [`.update()`](../trait.Itertools.html#method.update) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":137156,"byte_end":137238,"line_start":1019,"line_end":1019,"column_start":1,"column_end":83}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":137256,"byte_end":137329,"line_start":1021,"line_end":1021,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2976},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":154624,"byte_end":154628,"line_start":9,"line_end":9,"column_start":5,"column_end":9},"name":"Both","qualname":"::either_or_both::EitherOrBoth::Both","value":"EitherOrBoth::Both(A, B)","parent":{"krate":0,"index":2973},"children":[],"decl_id":null,"docs":" Both values are present.\n","sig":null,"attributes":[{"value":"/ Both values are present.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":154591,"byte_end":154619,"line_start":8,"line_end":8,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2980},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":154692,"byte_end":154696,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Left","qualname":"::either_or_both::EitherOrBoth::Left","value":"EitherOrBoth::Left(A)","parent":{"krate":0,"index":2973},"children":[],"decl_id":null,"docs":" Only the left value of type `A` is present.\n","sig":null,"attributes":[{"value":"/ Only the left value of type `A` is present.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":154640,"byte_end":154687,"line_start":10,"line_end":10,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2983},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":154758,"byte_end":154763,"line_start":13,"line_end":13,"column_start":5,"column_end":10},"name":"Right","qualname":"::either_or_both::EitherOrBoth::Right","value":"EitherOrBoth::Right(B)","parent":{"krate":0,"index":2973},"children":[],"decl_id":null,"docs":" Only the right value of type `B` is present.\n","sig":null,"attributes":[{"value":"/ Only the right value of type `B` is present.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":154705,"byte_end":154753,"line_start":12,"line_end":12,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":2973},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":154566,"byte_end":154578,"line_start":7,"line_end":7,"column_start":10,"column_end":22},"name":"EitherOrBoth","qualname":"::either_or_both::EitherOrBoth","value":"pub enum EitherOrBoth<A, B> { Both(A, B), Left(A), Right(B), }","parent":null,"children":[{"krate":0,"index":2976},{"krate":0,"index":2980},{"krate":0,"index":2983}],"decl_id":null,"docs":" Value that either holds a single A or B, or both.\n","sig":null,"attributes":[{"value":"/ Value that either holds a single A or B, or both.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":154458,"byte_end":154511,"line_start":5,"line_end":5,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":154882,"byte_end":154890,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"has_left","qualname":"<EitherOrBoth<A, B>>::has_left","value":"pub fn has_left(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If `Left`, or `Both`, return true, otherwise, return false.\n","sig":null,"attributes":[{"value":"/ If `Left`, or `Both`, return true, otherwise, return false.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":154807,"byte_end":154870,"line_start":17,"line_end":17,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":155034,"byte_end":155043,"line_start":23,"line_end":23,"column_start":12,"column_end":21},"name":"has_right","qualname":"<EitherOrBoth<A, B>>::has_right","value":"pub fn has_right(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If `Right`, or `Both`, return true, otherwise, return false.\n","sig":null,"attributes":[{"value":"/ If `Right`, or `Both`, return true, otherwise, return false.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":154958,"byte_end":155022,"line_start":22,"line_end":22,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":155216,"byte_end":155223,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"is_left","qualname":"<EitherOrBoth<A, B>>::is_left","value":"pub fn is_left(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If Left, return true otherwise, return false.\n Exclusive version of [`has_left`].\n","sig":null,"attributes":[{"value":"/ If Left, return true otherwise, return false.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":155112,"byte_end":155161,"line_start":27,"line_end":27,"column_start":5,"column_end":54}},{"value":"/ Exclusive version of [`has_left`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":155166,"byte_end":155204,"line_start":28,"line_end":28,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":155443,"byte_end":155451,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"is_right","qualname":"<EitherOrBoth<A, B>>::is_right","value":"pub fn is_right(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If Right, return true otherwise, return false.\n Exclusive version of [`has_right`].\n","sig":null,"attributes":[{"value":"/ If Right, return true otherwise, return false.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":155337,"byte_end":155387,"line_start":36,"line_end":36,"column_start":5,"column_end":55}},{"value":"/ Exclusive version of [`has_right`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":155392,"byte_end":155431,"line_start":37,"line_end":37,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":155684,"byte_end":155691,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"is_both","qualname":"<EitherOrBoth<A, B>>::is_both","value":"pub fn is_both(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If Right, return true otherwise, return false.\n Equivalent to `self.as_ref().both().is_some()`.\n","sig":null,"attributes":[{"value":"/ If Right, return true otherwise, return false.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":155566,"byte_end":155616,"line_start":45,"line_end":45,"column_start":5,"column_end":55}},{"value":"/ Equivalent to `self.as_ref().both().is_some()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":155621,"byte_end":155672,"line_start":46,"line_end":46,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":155857,"byte_end":155861,"line_start":52,"line_end":52,"column_start":12,"column_end":16},"name":"left","qualname":"<EitherOrBoth<A, B>>::left","value":"pub fn left(Self) -> Option<A>","parent":null,"children":[],"decl_id":null,"docs":" If `Left`, or `Both`, return `Some` with the left value, otherwise, return `None`.\n","sig":null,"attributes":[{"value":"/ If `Left`, or `Both`, return `Some` with the left value, otherwise, return `None`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":155759,"byte_end":155845,"line_start":51,"line_end":51,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":156102,"byte_end":156107,"line_start":60,"line_end":60,"column_start":12,"column_end":17},"name":"right","qualname":"<EitherOrBoth<A, B>>::right","value":"pub fn right(Self) -> Option<B>","parent":null,"children":[],"decl_id":null,"docs":" If `Right`, or `Both`, return `Some` with the right value, otherwise, return `None`.\n","sig":null,"attributes":[{"value":"/ If `Right`, or `Both`, return `Some` with the right value, otherwise, return `None`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":156002,"byte_end":156090,"line_start":59,"line_end":59,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":156323,"byte_end":156327,"line_start":68,"line_end":68,"column_start":12,"column_end":16},"name":"both","qualname":"<EitherOrBoth<A, B>>::both","value":"pub fn both(Self) -> Option<(A, B)>","parent":null,"children":[],"decl_id":null,"docs":" If Both, return `Some` tuple containing left and right.\n","sig":null,"attributes":[{"value":"/ If Both, return `Some` tuple containing left and right.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":156252,"byte_end":156311,"line_start":67,"line_end":67,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":156537,"byte_end":156543,"line_start":76,"line_end":76,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<EitherOrBoth<A, B>>::as_ref","value":"pub fn as_ref(&Self) -> EitherOrBoth<&A, &B>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `&EitherOrBoth<A, B>` to `EitherOrBoth<&A, &B>`.\n","sig":null,"attributes":[{"value":"/ Converts from `&EitherOrBoth<A, B>` to `EitherOrBoth<&A, &B>`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":156459,"byte_end":156525,"line_start":75,"line_end":75,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":156858,"byte_end":156864,"line_start":85,"line_end":85,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<EitherOrBoth<A, B>>::as_mut","value":"pub fn as_mut(&mut Self) -> EitherOrBoth<&mut A, &mut B>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `&mut EitherOrBoth<A, B>` to `EitherOrBoth<&mut A, &mut B>`.\n","sig":null,"attributes":[{"value":"/ Converts from `&mut EitherOrBoth<A, B>` to `EitherOrBoth<&mut A, &mut B>`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":156768,"byte_end":156846,"line_start":84,"line_end":84,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":157186,"byte_end":157190,"line_start":94,"line_end":94,"column_start":12,"column_end":16},"name":"flip","qualname":"<EitherOrBoth<A, B>>::flip","value":"pub fn flip(Self) -> EitherOrBoth<B, A>","parent":null,"children":[],"decl_id":null,"docs":" Convert `EitherOrBoth<A, B>` to `EitherOrBoth<B, A>`.\n","sig":null,"attributes":[{"value":"/ Convert `EitherOrBoth<A, B>` to `EitherOrBoth<B, A>`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":157117,"byte_end":157174,"line_start":93,"line_end":93,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":157538,"byte_end":157546,"line_start":104,"line_end":104,"column_start":12,"column_end":20},"name":"map_left","qualname":"<EitherOrBoth<A, B>>::map_left","value":"pub fn map_left<F, M>(Self, F) -> EitherOrBoth<M, B> where F: FnOnce(A) -> M","parent":null,"children":[],"decl_id":null,"docs":" Apply the function `f` on the value `a` in `Left(a)` or `Both(a, b)` variants. If it is\n present rewrapping the result in `self`'s original variant.\n","sig":null,"attributes":[{"value":"/ Apply the function `f` on the value `a` in `Left(a)` or `Both(a, b)` variants. If it is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":157367,"byte_end":157458,"line_start":102,"line_end":102,"column_start":5,"column_end":96}},{"value":"/ present rewrapping the result in `self`'s original variant.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":157463,"byte_end":157526,"line_start":103,"line_end":103,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":819},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":157954,"byte_end":157963,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"map_right","qualname":"<EitherOrBoth<A, B>>::map_right","value":"pub fn map_right<F, M>(Self, F) -> EitherOrBoth<A, M> where F: FnOnce(B) -> M","parent":null,"children":[],"decl_id":null,"docs":" Apply the function `f` on the value `b` in `Right(b)` or `Both(a, b)` variants.\n If it is present rewrapping the result in `self`'s original variant.\n","sig":null,"attributes":[{"value":"/ Apply the function `f` on the value `b` in `Right(b)` or `Both(a, b)` variants.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":157782,"byte_end":157865,"line_start":115,"line_end":115,"column_start":5,"column_end":88}},{"value":"/ If it is present rewrapping the result in `self`'s original variant.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":157870,"byte_end":157942,"line_start":116,"line_end":116,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":158410,"byte_end":158417,"line_start":131,"line_end":131,"column_start":12,"column_end":19},"name":"map_any","qualname":"<EitherOrBoth<A, B>>::map_any","value":"pub fn map_any<F, L, G, R>(Self, F, G) -> EitherOrBoth<L, R> where\nF: FnOnce(A) -> L, G: FnOnce(B) -> R","parent":null,"children":[],"decl_id":null,"docs":" Apply the functions `f` and `g` on the value `a` and `b` respectively;\n found in `Left(a)`, `Right(b)`, or `Both(a, b)` variants.\n The Result is rewrapped `self`'s original variant.\n","sig":null,"attributes":[{"value":"/ Apply the functions `f` and `g` on the value `a` and `b` respectively;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":158199,"byte_end":158273,"line_start":128,"line_end":128,"column_start":5,"column_end":79}},{"value":"/ found in `Left(a)`, `Right(b)`, or `Both(a, b)` variants.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":158278,"byte_end":158339,"line_start":129,"line_end":129,"column_start":5,"column_end":66}},{"value":"/ The Result is rewrapped `self`'s original variant.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":158344,"byte_end":158398,"line_start":130,"line_end":130,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":158818,"byte_end":158831,"line_start":145,"line_end":145,"column_start":12,"column_end":25},"name":"left_and_then","qualname":"<EitherOrBoth<A, B>>::left_and_then","value":"pub fn left_and_then<F, L>(Self, F) -> EitherOrBoth<L, B> where F: FnOnce(A)\n-> EitherOrBoth<L, B>","parent":null,"children":[],"decl_id":null,"docs":" Apply the function `f` on the value `b` in `Right(b)` or `Both(a, _)` variants if it is\n present.\n","sig":null,"attributes":[{"value":"/ Apply the function `f` on the value `b` in `Right(b)` or `Both(a, _)` variants if it is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":158698,"byte_end":158789,"line_start":143,"line_end":143,"column_start":5,"column_end":96}},{"value":"/ present.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":158794,"byte_end":158806,"line_start":144,"line_end":144,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":159169,"byte_end":159183,"line_start":157,"line_end":157,"column_start":12,"column_end":26},"name":"right_and_then","qualname":"<EitherOrBoth<A, B>>::right_and_then","value":"pub fn right_and_then<F, R>(Self, F) -> EitherOrBoth<A, R> where F: FnOnce(B)\n-> EitherOrBoth<A, R>","parent":null,"children":[],"decl_id":null,"docs":" Apply the function `f` on the value `a`\n in `Left(a)` or `Both(a, _)` variants if it is present.\n","sig":null,"attributes":[{"value":"/ Apply the function `f` on the value `a`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":159050,"byte_end":159093,"line_start":155,"line_end":155,"column_start":5,"column_end":48}},{"value":"/ in `Left(a)` or `Both(a, _)` variants if it is present.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":159098,"byte_end":159157,"line_start":156,"line_end":156,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":159539,"byte_end":159545,"line_start":170,"line_end":170,"column_start":12,"column_end":18},"name":"reduce","qualname":"<EitherOrBoth<T, T>>::reduce","value":"pub fn reduce<F>(Self, F) -> T where F: FnOnce(T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return either value of left, right, or the product of `f` applied where `Both` are present.\n","sig":null,"attributes":[{"value":"/ Return either value of left, right, or the product of `f` applied where `Both` are present.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":159432,"byte_end":159527,"line_start":169,"line_end":169,"column_start":5,"column_end":100}}]},{"kind":"Mod","id":{"krate":0,"index":844},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"free","qualname":"::free","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","parent":null,"children":[{"krate":0,"index":845},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":852},{"krate":0,"index":855},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":861},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":868},{"krate":0,"index":871},{"krate":0,"index":874},{"krate":0,"index":877},{"krate":0,"index":880},{"krate":0,"index":883},{"krate":0,"index":886},{"krate":0,"index":889},{"krate":0,"index":892},{"krate":0,"index":895},{"krate":0,"index":897},{"krate":0,"index":899},{"krate":0,"index":902},{"krate":0,"index":905},{"krate":0,"index":909},{"krate":0,"index":913},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":921},{"krate":0,"index":923},{"krate":0,"index":925}],"decl_id":null,"docs":" Free functions that create iterator adaptors or call iterator methods.","sig":null,"attributes":[{"value":"/ Free functions that create iterator adaptors or call iterator methods.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":160032,"byte_end":160106,"line_start":1,"line_end":1,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":160107,"byte_end":160110,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The benefit of free functions is that they accept any `IntoIterator` as","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":160111,"byte_end":160186,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ argument, so the resulting code may be easier to read.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":160187,"byte_end":160245,"line_start":4,"line_end":4,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":895},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161257,"byte_end":161266,"line_start":49,"line_end":49,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::free::enumerate","value":"pub fn enumerate<I>(I) -> iter::Enumerate<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Iterate `iterable` with a running index.","sig":null,"attributes":[{"value":"/ Iterate `iterable` with a running index.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161019,"byte_end":161063,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161064,"byte_end":161067,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `.enumerate()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161068,"byte_end":161121,"line_start":40,"line_end":40,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161122,"byte_end":161125,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161126,"byte_end":161133,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ use itertools::enumerate;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161134,"byte_end":161163,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161164,"byte_end":161167,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ for (i, elt) in enumerate(&[1, 2, 3]) {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161168,"byte_end":161211,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/     /* loop body */","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161212,"byte_end":161235,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161236,"byte_end":161241,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161242,"byte_end":161249,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":897},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161588,"byte_end":161591,"line_start":66,"line_end":66,"column_start":8,"column_end":11},"name":"rev","qualname":"::free::rev","value":"pub fn rev<I>(I) -> iter::Rev<I::IntoIter> where I: IntoIterator,\nI::IntoIter: DoubleEndedIterator","parent":null,"children":[],"decl_id":null,"docs":" Iterate `iterable` in reverse.","sig":null,"attributes":[{"value":"/ Iterate `iterable` in reverse.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161383,"byte_end":161417,"line_start":55,"line_end":55,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161418,"byte_end":161421,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `.rev()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161422,"byte_end":161469,"line_start":57,"line_end":57,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161470,"byte_end":161473,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161474,"byte_end":161481,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ use itertools::rev;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161482,"byte_end":161505,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161506,"byte_end":161509,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ for elt in rev(&[1, 2, 3]) {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161510,"byte_end":161542,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/     /* loop body */","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161543,"byte_end":161566,"line_start":63,"line_end":63,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161567,"byte_end":161572,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161573,"byte_end":161580,"line_start":65,"line_end":65,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":899},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161992,"byte_end":161995,"line_start":85,"line_end":85,"column_start":8,"column_end":11},"name":"zip","qualname":"::free::zip","value":"pub fn zip<I, J>(I, J) -> Zip<I::IntoIter, J::IntoIter> where I: IntoIterator,\nJ: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Iterate `i` and `j` in lock step.","sig":null,"attributes":[{"value":"/ Iterate `i` and `j` in lock step.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161740,"byte_end":161777,"line_start":73,"line_end":73,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161778,"byte_end":161781,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.zip(j)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161782,"byte_end":161831,"line_start":75,"line_end":75,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161832,"byte_end":161835,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161836,"byte_end":161843,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/ use itertools::zip;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161844,"byte_end":161867,"line_start":78,"line_end":78,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161868,"byte_end":161871,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ let data = [1, 2, 3, 4, 5];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161872,"byte_end":161903,"line_start":80,"line_end":80,"column_start":1,"column_end":32}},{"value":"/ for (a, b) in zip(&data, &data[1..]) {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161904,"byte_end":161946,"line_start":81,"line_end":81,"column_start":1,"column_end":43}},{"value":"/     /* loop body */","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161947,"byte_end":161970,"line_start":82,"line_end":82,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161971,"byte_end":161976,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":161977,"byte_end":161984,"line_start":84,"line_end":84,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":902},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":162375,"byte_end":162380,"line_start":103,"line_end":103,"column_start":8,"column_end":13},"name":"chain","qualname":"::free::chain","value":"pub fn chain<I, J>(I, J)\n-> iter::Chain<<I as IntoIterator>::IntoIter, <J as IntoIterator>::IntoIter>\nwhere I: IntoIterator, J: IntoIterator<Item = I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that first iterates `i` and then `j`.","sig":null,"attributes":[{"value":"/ Create an iterator that first iterates `i` and then `j`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":162130,"byte_end":162190,"line_start":92,"line_end":92,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":162191,"byte_end":162194,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.chain(j)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":162195,"byte_end":162246,"line_start":94,"line_end":94,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":162247,"byte_end":162250,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":162251,"byte_end":162258,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/ use itertools::chain;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":162259,"byte_end":162284,"line_start":97,"line_end":97,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":162285,"byte_end":162288,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ for elt in chain(&[1, 2, 3], &[4]) {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":162289,"byte_end":162329,"line_start":99,"line_end":99,"column_start":1,"column_end":41}},{"value":"/     /* loop body */","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":162330,"byte_end":162353,"line_start":100,"line_end":100,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":162354,"byte_end":162359,"line_start":101,"line_end":101,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":162360,"byte_end":162367,"line_start":102,"line_end":102,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":905},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":162803,"byte_end":162809,"line_start":119,"line_end":119,"column_start":8,"column_end":14},"name":"cloned","qualname":"::free::cloned","value":"pub fn cloned<'a, I, T: 'a>(I) -> iter::Cloned<I::IntoIter> where\nI: IntoIterator<Item = &'a T>, T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that clones each element from &T to T","sig":null,"attributes":[{"value":"/ Create an iterator that clones each element from &T to T","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":162577,"byte_end":162637,"line_start":110,"line_end":110,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":162638,"byte_end":162641,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.cloned()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":162642,"byte_end":162693,"line_start":112,"line_end":112,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":162694,"byte_end":162697,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":162698,"byte_end":162705,"line_start":114,"line_end":114,"column_start":1,"column_end":8}},{"value":"/ use itertools::cloned;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":162706,"byte_end":162732,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":162733,"byte_end":162736,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(cloned(b\"abc\").next(), Some(b'a'));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":162737,"byte_end":162787,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":162788,"byte_end":162795,"line_start":118,"line_end":118,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":909},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":163197,"byte_end":163201,"line_start":135,"line_end":135,"column_start":8,"column_end":12},"name":"fold","qualname":"::free::fold","value":"pub fn fold<I, B, F>(I, B, F) -> B where I: IntoIterator, F: FnMut(B, I::Item)\n-> B","parent":null,"children":[],"decl_id":null,"docs":" Perform a fold operation over the iterable.","sig":null,"attributes":[{"value":"/ Perform a fold operation over the iterable.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":162964,"byte_end":163011,"line_start":126,"line_end":126,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":163012,"byte_end":163015,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.fold(init, f)`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":163016,"byte_end":163071,"line_start":128,"line_end":128,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":163072,"byte_end":163075,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":163076,"byte_end":163083,"line_start":130,"line_end":130,"column_start":1,"column_end":8}},{"value":"/ use itertools::fold;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":163084,"byte_end":163108,"line_start":131,"line_end":131,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":163109,"byte_end":163112,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(fold(&[1., 2., 3.], 0., |a, &b| f32::max(a, b)), 3.);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":163113,"byte_end":163181,"line_start":133,"line_end":133,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":163182,"byte_end":163189,"line_start":134,"line_end":134,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":913},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":163576,"byte_end":163579,"line_start":151,"line_end":151,"column_start":8,"column_end":11},"name":"all","qualname":"::free::all","value":"pub fn all<I, F>(I, F) -> bool where I: IntoIterator, F: FnMut(I::Item) ->\nbool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the predicate holds for all elements in the iterable.","sig":null,"attributes":[{"value":"/ Test whether the predicate holds for all elements in the iterable.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":163351,"byte_end":163421,"line_start":142,"line_end":142,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":163422,"byte_end":163425,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.all(f)`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":163426,"byte_end":163474,"line_start":144,"line_end":144,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":163475,"byte_end":163478,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":163479,"byte_end":163486,"line_start":146,"line_end":146,"column_start":1,"column_end":8}},{"value":"/ use itertools::all;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":163487,"byte_end":163510,"line_start":147,"line_end":147,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":163511,"byte_end":163514,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ assert!(all(&[1, 2, 3], |elt| *elt > 0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":163515,"byte_end":163560,"line_start":149,"line_end":149,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":163561,"byte_end":163568,"line_start":150,"line_end":150,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":916},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":163939,"byte_end":163942,"line_start":167,"line_end":167,"column_start":8,"column_end":11},"name":"any","qualname":"::free::any","value":"pub fn any<I, F>(I, F) -> bool where I: IntoIterator, F: FnMut(I::Item) ->\nbool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the predicate holds for any elements in the iterable.","sig":null,"attributes":[{"value":"/ Test whether the predicate holds for any elements in the iterable.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":163713,"byte_end":163783,"line_start":158,"line_end":158,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":163784,"byte_end":163787,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.any(f)`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":163788,"byte_end":163836,"line_start":160,"line_end":160,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":163837,"byte_end":163840,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":163841,"byte_end":163848,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/ use itertools::any;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":163849,"byte_end":163872,"line_start":163,"line_end":163,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":163873,"byte_end":163876,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ assert!(any(&[0, -1, 2], |elt| *elt > 0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":163877,"byte_end":163923,"line_start":165,"line_end":165,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":163924,"byte_end":163931,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":919},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":164267,"byte_end":164270,"line_start":183,"line_end":183,"column_start":8,"column_end":11},"name":"max","qualname":"::free::max","value":"pub fn max<I>(I) -> Option<I::Item> where I: IntoIterator, I::Item: Ord","parent":null,"children":[],"decl_id":null,"docs":" Return the maximum value of the iterable.","sig":null,"attributes":[{"value":"/ Return the maximum value of the iterable.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":164076,"byte_end":164121,"line_start":174,"line_end":174,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":164122,"byte_end":164125,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.max()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":164126,"byte_end":164174,"line_start":176,"line_end":176,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":164175,"byte_end":164178,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":164179,"byte_end":164186,"line_start":178,"line_end":178,"column_start":1,"column_end":8}},{"value":"/ use itertools::max;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":164187,"byte_end":164210,"line_start":179,"line_end":179,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":164211,"byte_end":164214,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(max(0..10), Some(9));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":164215,"byte_end":164251,"line_start":181,"line_end":181,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":164252,"byte_end":164259,"line_start":182,"line_end":182,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":921},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":164583,"byte_end":164586,"line_start":199,"line_end":199,"column_start":8,"column_end":11},"name":"min","qualname":"::free::min","value":"pub fn min<I>(I) -> Option<I::Item> where I: IntoIterator, I::Item: Ord","parent":null,"children":[],"decl_id":null,"docs":" Return the minimum value of the iterable.","sig":null,"attributes":[{"value":"/ Return the minimum value of the iterable.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":164392,"byte_end":164437,"line_start":190,"line_end":190,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":164438,"byte_end":164441,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.min()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":164442,"byte_end":164490,"line_start":192,"line_end":192,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":164491,"byte_end":164494,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":164495,"byte_end":164502,"line_start":194,"line_end":194,"column_start":1,"column_end":8}},{"value":"/ use itertools::min;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":164503,"byte_end":164526,"line_start":195,"line_end":195,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":164527,"byte_end":164530,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(min(0..10), Some(0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":164531,"byte_end":164567,"line_start":197,"line_end":197,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":164568,"byte_end":164575,"line_start":198,"line_end":198,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":923},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":164981,"byte_end":164985,"line_start":217,"line_end":217,"column_start":8,"column_end":12},"name":"join","qualname":"::free::join","value":"pub fn join<I>(I, &str) -> String where I: IntoIterator, I::Item: Display","parent":null,"children":[],"decl_id":null,"docs":" Combine all iterator elements into one String, seperated by `sep`.","sig":null,"attributes":[{"value":"/ Combine all iterator elements into one String, seperated by `sep`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":164709,"byte_end":164779,"line_start":207,"line_end":207,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":164780,"byte_end":164783,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `iterable.join(sep)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":164784,"byte_end":164843,"line_start":209,"line_end":209,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":164844,"byte_end":164847,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":164848,"byte_end":164855,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use itertools::join;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":164856,"byte_end":164880,"line_start":212,"line_end":212,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":164881,"byte_end":164884,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(join(&[1, 2, 3], \", \"), \"1, 2, 3\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":164885,"byte_end":164935,"line_start":214,"line_end":214,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":164936,"byte_end":164943,"line_start":215,"line_end":215,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"use_alloc\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":164944,"byte_end":164973,"line_start":216,"line_end":216,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":925},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":165483,"byte_end":165489,"line_start":237,"line_end":237,"column_start":8,"column_end":14},"name":"sorted","qualname":"::free::sorted","value":"pub fn sorted<I>(I) -> VecIntoIter<I::Item> where I: IntoIterator,\nI::Item: Ord","parent":null,"children":[],"decl_id":null,"docs":" Sort all iterator elements into a new iterator in ascending order.","sig":null,"attributes":[{"value":"/ Sort all iterator elements into a new iterator in ascending order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":165117,"byte_end":165187,"line_start":224,"line_end":224,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":165188,"byte_end":165191,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of [`iterable.sorted()`][1].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":165192,"byte_end":165255,"line_start":226,"line_end":226,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":165256,"byte_end":165259,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ [1]: trait.Itertools.html#method.sorted","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":165260,"byte_end":165303,"line_start":228,"line_end":228,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":165304,"byte_end":165307,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":165308,"byte_end":165315,"line_start":230,"line_end":230,"column_start":1,"column_end":8}},{"value":"/ use itertools::sorted;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":165316,"byte_end":165342,"line_start":231,"line_end":231,"column_start":1,"column_end":27}},{"value":"/ use itertools::assert_equal;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":165343,"byte_end":165375,"line_start":232,"line_end":232,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":165376,"byte_end":165379,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ assert_equal(sorted(\"rust\".chars()), \"rstu\".chars());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":165380,"byte_end":165437,"line_start":234,"line_end":234,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":165438,"byte_end":165445,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"use_alloc\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/free.rs","byte_start":165446,"byte_end":165475,"line_start":236,"line_end":236,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":932},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/concat_impl.rs","byte_start":166129,"byte_end":166135,"line_start":17,"line_end":17,"column_start":8,"column_end":14},"name":"concat","qualname":"::concat_impl::concat","value":"pub fn concat<I>(I) -> I::Item where I: IntoIterator,\nI::Item: Extend<<<I as IntoIterator>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":null,"children":[],"decl_id":null,"docs":" Combine all an iterator's elements into one element by using `Extend`.","sig":null,"attributes":[{"value":"/ Combine all an iterator's elements into one element by using `Extend`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/concat_impl.rs","byte_start":165643,"byte_end":165717,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/concat_impl.rs","byte_start":165718,"byte_end":165721,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator`-enabled version of `.concat()`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/concat_impl.rs","byte_start":165722,"byte_end":165771,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/concat_impl.rs","byte_start":165772,"byte_end":165775,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This combinator will extend the first item with each of the rest of the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/concat_impl.rs","byte_start":165776,"byte_end":165851,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ items of the iterator. If the iterator is empty, the default value of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/concat_impl.rs","byte_start":165852,"byte_end":165925,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/ `I::Item` is returned.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/concat_impl.rs","byte_start":165926,"byte_end":165952,"line_start":9,"line_end":9,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/concat_impl.rs","byte_start":165953,"byte_end":165956,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/concat_impl.rs","byte_start":165957,"byte_end":165968,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ use itertools::concat;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/concat_impl.rs","byte_start":165969,"byte_end":165995,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/concat_impl.rs","byte_start":165996,"byte_end":166000,"line_start":13,"line_end":13,"column_start":1,"column_end":5}},{"value":"/ let input = vec![vec![1], vec![2, 3], vec![4, 5, 6]];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/concat_impl.rs","byte_start":166001,"byte_end":166058,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(concat(input), vec![1, 2, 3, 4, 5, 6]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/concat_impl.rs","byte_start":166059,"byte_end":166113,"line_start":15,"line_end":15,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/concat_impl.rs","byte_start":166114,"byte_end":166121,"line_start":16,"line_end":16,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3304},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/cons_tuples_impl.rs","byte_start":167918,"byte_end":167928,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"ConsTuples","qualname":"::cons_tuples_impl::ConsTuples","value":"ConsTuples {  }","parent":null,"children":[{"krate":0,"index":3307}],"decl_id":null,"docs":" An iterator that maps an iterator of tuples like\n `((A, B), C)` to an iterator of `(A, B, C)`.","sig":null,"attributes":[{"value":"/ An iterator that maps an iterator of tuples like","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/cons_tuples_impl.rs","byte_start":167673,"byte_end":167725,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ `((A, B), C)` to an iterator of `(A, B, C)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/cons_tuples_impl.rs","byte_start":167726,"byte_end":167774,"line_start":41,"line_end":41,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/cons_tuples_impl.rs","byte_start":167775,"byte_end":167778,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Used by the `iproduct!()` macro.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/cons_tuples_impl.rs","byte_start":167779,"byte_end":167815,"line_start":43,"line_end":43,"column_start":1,"column_end":37}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/cons_tuples_impl.rs","byte_start":167816,"byte_end":167889,"line_start":44,"line_end":44,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":940},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/cons_tuples_impl.rs","byte_start":168190,"byte_end":168201,"line_start":60,"line_end":60,"column_start":8,"column_end":19},"name":"cons_tuples","qualname":"::cons_tuples_impl::cons_tuples","value":"pub fn cons_tuples<I, J>(I) -> ConsTuples<I::IntoIter, J> where\nI: IntoIterator<Item = J>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that maps for example iterators of\n `((A, B), C)` to `(A, B, C)`.\n","sig":null,"attributes":[{"value":"/ Create an iterator that maps for example iterators of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/cons_tuples_impl.rs","byte_start":168091,"byte_end":168148,"line_start":58,"line_end":58,"column_start":1,"column_end":58}},{"value":"/ `((A, B), C)` to `(A, B, C)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/cons_tuples_impl.rs","byte_start":168149,"byte_end":168182,"line_start":59,"line_end":59,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":953},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs","byte_start":168676,"byte_end":168688,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"Combinations","qualname":"::combinations::Combinations","value":"Combinations {  }","parent":null,"children":[{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957}],"decl_id":null,"docs":" An iterator to iterate through all the `k`-length combinations in an iterator.","sig":null,"attributes":[{"value":"/ An iterator to iterate through all the `k`-length combinations in an iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs","byte_start":168409,"byte_end":168491,"line_start":6,"line_end":6,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs","byte_start":168492,"byte_end":168495,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ See [`.combinations()`](../trait.Itertools.html#method.combinations) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs","byte_start":168496,"byte_end":168590,"line_start":8,"line_end":8,"column_start":1,"column_end":95}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs","byte_start":168591,"byte_end":168664,"line_start":9,"line_end":9,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs","byte_start":169518,"byte_end":169519,"line_start":47,"line_end":47,"column_start":12,"column_end":13},"name":"k","qualname":"<Combinations<I>>::k","value":"pub fn k(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of a combination produced by this iterator.\n","sig":null,"attributes":[{"value":"/ Returns the length of a combination produced by this iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs","byte_start":169426,"byte_end":169492,"line_start":45,"line_end":45,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs","byte_start":169497,"byte_end":169506,"line_start":46,"line_end":46,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":967},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs","byte_start":169782,"byte_end":169783,"line_start":54,"line_end":54,"column_start":12,"column_end":13},"name":"n","qualname":"<Combinations<I>>::n","value":"pub fn n(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the (current) length of the pool from which combination elements are\n selected. This value can change between invocations of [`next`].","sig":null,"attributes":[{"value":"/ Returns the (current) length of the pool from which combination elements are","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs","byte_start":169564,"byte_end":169644,"line_start":49,"line_end":49,"column_start":5,"column_end":85}},{"value":"/ selected. This value can change between invocations of [`next`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs","byte_start":169649,"byte_end":169717,"line_start":50,"line_end":50,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs","byte_start":169722,"byte_end":169725,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ [`next`]: #method.next","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs","byte_start":169730,"byte_end":169756,"line_start":52,"line_end":52,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs","byte_start":169761,"byte_end":169770,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3315},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations_with_replacement.rs","byte_start":172355,"byte_end":172382,"line_start":10,"line_end":10,"column_start":12,"column_end":39},"name":"CombinationsWithReplacement","qualname":"::combinations_with_replacement::CombinationsWithReplacement","value":"CombinationsWithReplacement {  }","parent":null,"children":[{"krate":0,"index":3317},{"krate":0,"index":3318},{"krate":0,"index":3319}],"decl_id":null,"docs":" An iterator to iterate through all the `n`-length combinations in an iterator, with replacement.","sig":null,"attributes":[{"value":"/ An iterator to iterate through all the `n`-length combinations in an iterator, with replacement.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations_with_replacement.rs","byte_start":172093,"byte_end":172193,"line_start":6,"line_end":6,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations_with_replacement.rs","byte_start":172194,"byte_end":172197,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ See [`.combinations_with_replacement()`](../trait.Itertools.html#method.combinations_with_replacement) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations_with_replacement.rs","byte_start":172198,"byte_end":172326,"line_start":8,"line_end":8,"column_start":1,"column_end":129}}]},{"kind":"Struct","id":{"krate":0,"index":3324},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs","byte_start":175645,"byte_end":175660,"line_start":20,"line_end":20,"column_start":12,"column_end":27},"name":"ExactlyOneError","qualname":"::exactly_one_err::ExactlyOneError","value":"ExactlyOneError {  }","parent":null,"children":[{"krate":0,"index":3326},{"krate":0,"index":3328}],"decl_id":null,"docs":" Iterator returned for the error case of `IterTools::exactly_one()`\n This iterator yields exactly the same elements as the input iterator.","sig":null,"attributes":[{"value":"/ Iterator returned for the error case of `IterTools::exactly_one()`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs","byte_start":175183,"byte_end":175253,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ This iterator yields exactly the same elements as the input iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs","byte_start":175254,"byte_end":175327,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs","byte_start":175328,"byte_end":175331,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ During the execution of exactly_one the iterator must be mutated.  This wrapper","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs","byte_start":175332,"byte_end":175415,"line_start":14,"line_end":14,"column_start":1,"column_end":84}},{"value":"/ effectively \"restores\" the state of the input iterator when it's handed back.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs","byte_start":175416,"byte_end":175497,"line_start":15,"line_end":15,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs","byte_start":175498,"byte_end":175501,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This is very similar to PutBackN except this iterator only supports 0-2 elements and does not","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs","byte_start":175502,"byte_end":175599,"line_start":17,"line_end":17,"column_start":1,"column_end":98}},{"value":"/ use a `Vec`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs","byte_start":175600,"byte_end":175616,"line_start":18,"line_end":18,"column_start":1,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1053},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/diff.rs","byte_start":178897,"byte_end":178910,"line_start":21,"line_end":21,"column_start":5,"column_end":18},"name":"FirstMismatch","qualname":"::diff::Diff::FirstMismatch","value":"Diff::FirstMismatch(usize, PutBack<I>, PutBack<J>)","parent":{"krate":0,"index":1050},"children":[],"decl_id":null,"docs":" The index of the first non-matching element along with both iterator's remaining elements\n starting with the first mis-match.\n","sig":null,"attributes":[{"value":"/ The index of the first non-matching element along with both iterator's remaining elements","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/diff.rs","byte_start":178756,"byte_end":178849,"line_start":19,"line_end":19,"column_start":5,"column_end":98}},{"value":"/ starting with the first mis-match.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/diff.rs","byte_start":178854,"byte_end":178892,"line_start":20,"line_end":20,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1058},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/diff.rs","byte_start":179043,"byte_end":179050,"line_start":23,"line_end":23,"column_start":5,"column_end":12},"name":"Shorter","qualname":"::diff::Diff::Shorter","value":"Diff::Shorter(usize, PutBack<I>)","parent":{"krate":0,"index":1050},"children":[],"decl_id":null,"docs":" The total number of elements that were in `J` along with the remaining elements of `I`.\n","sig":null,"attributes":[{"value":"/ The total number of elements that were in `J` along with the remaining elements of `I`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/diff.rs","byte_start":178947,"byte_end":179038,"line_start":22,"line_end":22,"column_start":5,"column_end":96}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1062},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/diff.rs","byte_start":179171,"byte_end":179177,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Longer","qualname":"::diff::Diff::Longer","value":"Diff::Longer(usize, PutBack<J>)","parent":{"krate":0,"index":1050},"children":[],"decl_id":null,"docs":" The total number of elements that were in `I` along with the remaining elements of `J`.\n","sig":null,"attributes":[{"value":"/ The total number of elements that were in `I` along with the remaining elements of `J`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/diff.rs","byte_start":179075,"byte_end":179166,"line_start":24,"line_end":24,"column_start":5,"column_end":96}}]},{"kind":"Enum","id":{"krate":0,"index":1050},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/diff.rs","byte_start":178694,"byte_end":178698,"line_start":15,"line_end":15,"column_start":10,"column_end":14},"name":"Diff","qualname":"::diff::Diff","value":"pub enum Diff<I, J> where I: Iterator, J: Iterator {\n    FirstMismatch(usize, PutBack<I>, PutBack<J>),\n    Shorter(usize, PutBack<I>),\n    Longer(usize, PutBack<J>),\n}","parent":null,"children":[{"krate":0,"index":1053},{"krate":0,"index":1058},{"krate":0,"index":1062}],"decl_id":null,"docs":" A type returned by the [`diff_with`](./fn.diff_with.html) function.","sig":null,"attributes":[{"value":"/ A type returned by the [`diff_with`](./fn.diff_with.html) function.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/diff.rs","byte_start":178496,"byte_end":178567,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/diff.rs","byte_start":178568,"byte_end":178571,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ `Diff` represents the way in which the elements yielded by the iterator `I` differ to some","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/diff.rs","byte_start":178572,"byte_end":178666,"line_start":13,"line_end":13,"column_start":1,"column_end":95}},{"value":"/ iterator `J`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/diff.rs","byte_start":178667,"byte_end":178684,"line_start":14,"line_end":14,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":1066},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/diff.rs","byte_start":179926,"byte_end":179935,"line_start":40,"line_end":40,"column_start":8,"column_end":17},"name":"diff_with","qualname":"::diff::diff_with","value":"pub fn diff_with<I, J, F>(I, J, F) -> Option<Diff<I::IntoIter, J::IntoIter>>\nwhere I: IntoIterator, J: IntoIterator, F: Fn(&I::Item, &J::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Compares every element yielded by both `i` and `j` with the given function in lock-step and\n returns a `Diff` which describes how `j` differs from `i`.","sig":null,"attributes":[{"value":"/ Compares every element yielded by both `i` and `j` with the given function in lock-step and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/diff.rs","byte_start":179201,"byte_end":179296,"line_start":28,"line_end":28,"column_start":1,"column_end":96}},{"value":"/ returns a `Diff` which describes how `j` differs from `i`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/diff.rs","byte_start":179297,"byte_end":179359,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/diff.rs","byte_start":179360,"byte_end":179363,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ If the number of elements yielded by `j` is less than the number of elements yielded by `i`,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/diff.rs","byte_start":179364,"byte_end":179460,"line_start":31,"line_end":31,"column_start":1,"column_end":97}},{"value":"/ the number of `j` elements yielded will be returned along with `i`'s remaining elements as","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/diff.rs","byte_start":179461,"byte_end":179555,"line_start":32,"line_end":32,"column_start":1,"column_end":95}},{"value":"/ `Diff::Shorter`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/diff.rs","byte_start":179556,"byte_end":179576,"line_start":33,"line_end":33,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/diff.rs","byte_start":179577,"byte_end":179580,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ If the two elements of a step differ, the index of those elements along with the remaining","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/diff.rs","byte_start":179581,"byte_end":179675,"line_start":35,"line_end":35,"column_start":1,"column_end":95}},{"value":"/ elements of both `i` and `j` are returned as `Diff::FirstMismatch`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/diff.rs","byte_start":179676,"byte_end":179747,"line_start":36,"line_end":36,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/diff.rs","byte_start":179748,"byte_end":179751,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ If `i` becomes exhausted before `j` becomes exhausted, the number of elements in `i` along with","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/diff.rs","byte_start":179752,"byte_end":179851,"line_start":38,"line_end":38,"column_start":1,"column_end":100}},{"value":"/ the remaining `j` elements will be returned as `Diff::Longer`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/diff.rs","byte_start":179852,"byte_end":179918,"line_start":39,"line_end":39,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":3332},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/format.rs","byte_start":181072,"byte_end":181082,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"FormatWith","qualname":"::format::FormatWith","value":"FormatWith {  }","parent":null,"children":[{"krate":0,"index":3336},{"krate":0,"index":3337}],"decl_id":null,"docs":" Format all iterator elements lazily, separated by `sep`.","sig":null,"attributes":[{"value":"/ Format all iterator elements lazily, separated by `sep`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/format.rs","byte_start":180791,"byte_end":180851,"line_start":4,"line_end":4,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/format.rs","byte_start":180852,"byte_end":180855,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The format value can only be formatted once, after that the iterator is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/format.rs","byte_start":180856,"byte_end":180931,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ exhausted.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/format.rs","byte_start":180932,"byte_end":180946,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/format.rs","byte_start":180947,"byte_end":180950,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See [`.format_with()`](../trait.Itertools.html#method.format_with) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/format.rs","byte_start":180951,"byte_end":181043,"line_start":9,"line_end":9,"column_start":1,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":3343},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/format.rs","byte_start":181505,"byte_end":181511,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Format","qualname":"::format::Format","value":"Format {  }","parent":null,"children":[{"krate":0,"index":3346},{"krate":0,"index":3347}],"decl_id":null,"docs":" Format all iterator elements lazily, separated by `sep`.","sig":null,"attributes":[{"value":"/ Format all iterator elements lazily, separated by `sep`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/format.rs","byte_start":181230,"byte_end":181290,"line_start":17,"line_end":17,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/format.rs","byte_start":181291,"byte_end":181294,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The format value can only be formatted once, after that the iterator is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/format.rs","byte_start":181295,"byte_end":181370,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/ exhausted.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/format.rs","byte_start":181371,"byte_end":181385,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/format.rs","byte_start":181386,"byte_end":181389,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ See [`.format()`](../trait.Itertools.html#method.format)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/format.rs","byte_start":181390,"byte_end":181450,"line_start":22,"line_end":22,"column_start":1,"column_end":61}},{"value":"/ for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/format.rs","byte_start":181451,"byte_end":181476,"line_start":23,"line_end":23,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":3388},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":184406,"byte_end":184420,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"MapForGrouping","qualname":"::grouping_map::MapForGrouping","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper to allow for an easy [`into_grouping_map_by`](../trait.Itertools.html#method.into_grouping_map_by)\n","sig":null,"attributes":[{"value":"/ A wrapper to allow for an easy [`into_grouping_map_by`](../trait.Itertools.html#method.into_grouping_map_by)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":184258,"byte_end":184370,"line_start":10,"line_end":10,"column_start":1,"column_end":113}}]},{"kind":"Type","id":{"krate":0,"index":1137},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":185266,"byte_end":185279,"line_start":43,"line_end":43,"column_start":10,"column_end":23},"name":"GroupingMapBy","qualname":"::grouping_map::GroupingMapBy","value":"GroupingMap<MapForGrouping<I, F>>","parent":null,"children":[],"decl_id":null,"docs":" `GroupingMapBy` is an intermediate struct for efficient group-and-fold operations.\n \n See [`GroupingMap`](./struct.GroupingMap.html) for more informations.\n","sig":null,"attributes":[{"value":"/ `GroupingMapBy` is an intermediate struct for efficient group-and-fold operations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":185022,"byte_end":185108,"line_start":39,"line_end":39,"column_start":1,"column_end":87}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":185109,"byte_end":185113,"line_start":40,"line_end":40,"column_start":1,"column_end":5}},{"value":"/ See [`GroupingMap`](./struct.GroupingMap.html) for more informations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":185114,"byte_end":185187,"line_start":41,"line_end":41,"column_start":1,"column_end":74}},{"value":"must_use = \"GroupingMapBy is lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":185188,"byte_end":185256,"line_start":42,"line_end":42,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":3402},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":185688,"byte_end":185699,"line_start":52,"line_end":52,"column_start":12,"column_end":23},"name":"GroupingMap","qualname":"::grouping_map::GroupingMap","value":"GroupingMap {  }","parent":null,"children":[{"krate":0,"index":3404}],"decl_id":null,"docs":" `GroupingMap` is an intermediate struct for efficient group-and-fold operations.\n It groups elements by their key and at the same time fold each group\n using some aggregating operation.\n \n No method on this struct performs temporary allocations.\n","sig":null,"attributes":[{"value":"/ `GroupingMap` is an intermediate struct for efficient group-and-fold operations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":185324,"byte_end":185408,"line_start":45,"line_end":45,"column_start":1,"column_end":85}},{"value":"/ It groups elements by their key and at the same time fold each group","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":185409,"byte_end":185481,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/ using some aggregating operation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":185482,"byte_end":185519,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":185520,"byte_end":185524,"line_start":48,"line_end":48,"column_start":1,"column_end":5}},{"value":"/ No method on this struct performs temporary allocations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":185525,"byte_end":185585,"line_start":49,"line_end":49,"column_start":1,"column_end":61}},{"value":"must_use = \"GroupingMap is lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":185610,"byte_end":185676,"line_start":51,"line_end":51,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1144},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":187872,"byte_end":187881,"line_start":100,"line_end":100,"column_start":12,"column_end":21},"name":"aggregate","qualname":"<GroupingMap<I>>::aggregate","value":"pub fn aggregate<FO, R>(Self, FO) -> HashMap<K, R> where\nFO: FnMut(Option<R>, &K, V) -> Option<R>","parent":null,"children":[],"decl_id":null,"docs":" This is the generic way to perform any operation on a `GroupingMap`.\n It's suggested to use this method only to implement custom operations\n when the already provided ones are not enough.\n \n Groups elements from the `GroupingMap` source by key and applies `operation` to the elements\n of each group sequentially, passing the previously accumulated value, a reference to the key\n and the current element as arguments, and stores the results in an `HashMap`.","sig":null,"attributes":[{"value":"/ This is the generic way to perform any operation on a `GroupingMap`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":185818,"byte_end":185890,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ It's suggested to use this method only to implement custom operations","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":185895,"byte_end":185968,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ when the already provided ones are not enough.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":185973,"byte_end":186023,"line_start":62,"line_end":62,"column_start":5,"column_end":55}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":186028,"byte_end":186032,"line_start":63,"line_end":63,"column_start":5,"column_end":9}},{"value":"/ Groups elements from the `GroupingMap` source by key and applies `operation` to the elements","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":186037,"byte_end":186133,"line_start":64,"line_end":64,"column_start":5,"column_end":101}},{"value":"/ of each group sequentially, passing the previously accumulated value, a reference to the key","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":186138,"byte_end":186234,"line_start":65,"line_end":65,"column_start":5,"column_end":101}},{"value":"/ and the current element as arguments, and stores the results in an `HashMap`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":186239,"byte_end":186320,"line_start":66,"line_end":66,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":186325,"byte_end":186328,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ The `operation` function is invoked on each element with the following parameters:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":186333,"byte_end":186419,"line_start":68,"line_end":68,"column_start":5,"column_end":91}},{"value":"/  - the current value of the accumulator of the group if there is currently one;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":186424,"byte_end":186507,"line_start":69,"line_end":69,"column_start":5,"column_end":88}},{"value":"/  - a reference to the key of the group this element belongs to;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":186512,"byte_end":186579,"line_start":70,"line_end":70,"column_start":5,"column_end":72}},{"value":"/  - the element from the source being aggregated;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":186584,"byte_end":186636,"line_start":71,"line_end":71,"column_start":5,"column_end":57}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":186641,"byte_end":186645,"line_start":72,"line_end":72,"column_start":5,"column_end":9}},{"value":"/ If `operation` returns `Some(element)` then the accumulator is updated with `element`,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":186650,"byte_end":186740,"line_start":73,"line_end":73,"column_start":5,"column_end":95}},{"value":"/ otherwise the previous accumulation is discarded.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":186745,"byte_end":186798,"line_start":74,"line_end":74,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":186803,"byte_end":186806,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Return a `HashMap` associating the key of each group with the result of aggregation of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":186811,"byte_end":186901,"line_start":76,"line_end":76,"column_start":5,"column_end":95}},{"value":"/ that group's elements. If the aggregation of the last element of a group discards the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":186906,"byte_end":186995,"line_start":77,"line_end":77,"column_start":5,"column_end":94}},{"value":"/ accumulator then there won't be an entry associated to that group's key.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":187000,"byte_end":187076,"line_start":78,"line_end":78,"column_start":5,"column_end":81}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":187081,"byte_end":187085,"line_start":79,"line_end":79,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":187090,"byte_end":187097,"line_start":80,"line_end":80,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":187102,"byte_end":187131,"line_start":81,"line_end":81,"column_start":5,"column_end":34}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":187136,"byte_end":187140,"line_start":82,"line_end":82,"column_start":5,"column_end":9}},{"value":"/ let data = vec![2, 8, 5, 7, 9, 0, 4, 10];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":187145,"byte_end":187190,"line_start":83,"line_end":83,"column_start":5,"column_end":50}},{"value":"/ let lookup = data.into_iter()","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":187195,"byte_end":187228,"line_start":84,"line_end":84,"column_start":5,"column_end":38}},{"value":"/     .into_grouping_map_by(|&n| n % 4)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":187233,"byte_end":187274,"line_start":85,"line_end":85,"column_start":5,"column_end":46}},{"value":"/     .aggregate(|acc, _key, val| {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":187279,"byte_end":187316,"line_start":86,"line_end":86,"column_start":5,"column_end":42}},{"value":"/         if val == 0 || val == 10 {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":187321,"byte_end":187359,"line_start":87,"line_end":87,"column_start":5,"column_end":43}},{"value":"/             None","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":187364,"byte_end":187384,"line_start":88,"line_end":88,"column_start":5,"column_end":25}},{"value":"/         } else {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":187389,"byte_end":187409,"line_start":89,"line_end":89,"column_start":5,"column_end":25}},{"value":"/             Some(acc.unwrap_or(0) + val)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":187414,"byte_end":187458,"line_start":90,"line_end":90,"column_start":5,"column_end":49}},{"value":"/         }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":187463,"byte_end":187476,"line_start":91,"line_end":91,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":187481,"byte_end":187492,"line_start":92,"line_end":92,"column_start":5,"column_end":16}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":187497,"byte_end":187501,"line_start":93,"line_end":93,"column_start":5,"column_end":9}},{"value":"/ assert_eq!(lookup[&0], 4);        // 0 resets the accumulator so only 4 is summed","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":187506,"byte_end":187591,"line_start":94,"line_end":94,"column_start":5,"column_end":90}},{"value":"/ assert_eq!(lookup[&1], 5 + 9);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":187596,"byte_end":187630,"line_start":95,"line_end":95,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(lookup.get(&2), None); // 10 resets the accumulator and nothing is summed afterward","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":187635,"byte_end":187733,"line_start":96,"line_end":96,"column_start":5,"column_end":103}},{"value":"/ assert_eq!(lookup[&3], 7);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":187738,"byte_end":187768,"line_start":97,"line_end":97,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(lookup.len(), 3);      // The final keys are only 0, 1 and 2","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":187773,"byte_end":187848,"line_start":98,"line_end":98,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":187853,"byte_end":187860,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1147},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":189486,"byte_end":189490,"line_start":140,"line_end":140,"column_start":12,"column_end":16},"name":"fold","qualname":"<GroupingMap<I>>::fold","value":"pub fn fold<FO, R>(Self, R, FO) -> HashMap<K, R> where R: Clone,\nFO: FnMut(R, &K, V) -> R","parent":null,"children":[],"decl_id":null,"docs":" Groups elements from the `GroupingMap` source by key and applies `operation` to the elements\n of each group sequentially, passing the previously accumulated value, a reference to the key\n and the current element as arguments, and stores the results in a new map.","sig":null,"attributes":[{"value":"/ Groups elements from the `GroupingMap` source by key and applies `operation` to the elements","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":188309,"byte_end":188405,"line_start":115,"line_end":115,"column_start":5,"column_end":101}},{"value":"/ of each group sequentially, passing the previously accumulated value, a reference to the key","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":188410,"byte_end":188506,"line_start":116,"line_end":116,"column_start":5,"column_end":101}},{"value":"/ and the current element as arguments, and stores the results in a new map.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":188511,"byte_end":188589,"line_start":117,"line_end":117,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":188594,"byte_end":188597,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ `init` is the value from which will be cloned the initial value of each accumulator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":188602,"byte_end":188690,"line_start":119,"line_end":119,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":188695,"byte_end":188698,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ `operation` is a function that is invoked on each element with the following parameters:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":188703,"byte_end":188795,"line_start":121,"line_end":121,"column_start":5,"column_end":97}},{"value":"/  - the current value of the accumulator of the group;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":188800,"byte_end":188857,"line_start":122,"line_end":122,"column_start":5,"column_end":62}},{"value":"/  - a reference to the key of the group this element belongs to;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":188862,"byte_end":188929,"line_start":123,"line_end":123,"column_start":5,"column_end":72}},{"value":"/  - the element from the source being accumulated.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":188934,"byte_end":188987,"line_start":124,"line_end":124,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":188992,"byte_end":188995,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Return a `HashMap` associating the key of each group with the result of folding that group's elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":189000,"byte_end":189106,"line_start":126,"line_end":126,"column_start":5,"column_end":111}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":189111,"byte_end":189115,"line_start":127,"line_end":127,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":189120,"byte_end":189127,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":189132,"byte_end":189161,"line_start":129,"line_end":129,"column_start":5,"column_end":34}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":189166,"byte_end":189170,"line_start":130,"line_end":130,"column_start":5,"column_end":9}},{"value":"/ let lookup = (1..=7)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":189175,"byte_end":189199,"line_start":131,"line_end":131,"column_start":5,"column_end":29}},{"value":"/     .into_grouping_map_by(|&n| n % 3)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":189204,"byte_end":189245,"line_start":132,"line_end":132,"column_start":5,"column_end":46}},{"value":"/     .fold(0, |acc, _key, val| acc + val);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":189250,"byte_end":189295,"line_start":133,"line_end":133,"column_start":5,"column_end":50}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":189300,"byte_end":189304,"line_start":134,"line_end":134,"column_start":5,"column_end":9}},{"value":"/ assert_eq!(lookup[&0], 3 + 6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":189309,"byte_end":189343,"line_start":135,"line_end":135,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(lookup[&1], 1 + 4 + 7);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":189348,"byte_end":189386,"line_start":136,"line_end":136,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(lookup[&2], 2 + 5);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":189391,"byte_end":189425,"line_start":137,"line_end":137,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(lookup.len(), 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":189430,"byte_end":189462,"line_start":138,"line_end":138,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":189467,"byte_end":189474,"line_start":139,"line_end":139,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1152},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":191025,"byte_end":191035,"line_start":177,"line_end":177,"column_start":12,"column_end":22},"name":"fold_first","qualname":"<GroupingMap<I>>::fold_first","value":"pub fn fold_first<FO>(Self, FO) -> HashMap<K, V> where FO: FnMut(V, &K, V) ->\nV","parent":null,"children":[],"decl_id":null,"docs":" Groups elements from the `GroupingMap` source by key and applies `operation` to the elements\n of each group sequentially, passing the previously accumulated value, a reference to the key\n and the current element as arguments, and stores the results in a new map.","sig":null,"attributes":[{"value":"/ Groups elements from the `GroupingMap` source by key and applies `operation` to the elements","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":189784,"byte_end":189880,"line_start":150,"line_end":150,"column_start":5,"column_end":101}},{"value":"/ of each group sequentially, passing the previously accumulated value, a reference to the key","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":189885,"byte_end":189981,"line_start":151,"line_end":151,"column_start":5,"column_end":101}},{"value":"/ and the current element as arguments, and stores the results in a new map.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":189986,"byte_end":190064,"line_start":152,"line_end":152,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":190069,"byte_end":190072,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`fold`] but the initial value of the accumulator is the first element of the group.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":190077,"byte_end":190184,"line_start":154,"line_end":154,"column_start":5,"column_end":112}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":190189,"byte_end":190192,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ `operation` is a function that is invoked on each element with the following parameters:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":190197,"byte_end":190289,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/  - the current value of the accumulator of the group;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":190294,"byte_end":190351,"line_start":157,"line_end":157,"column_start":5,"column_end":62}},{"value":"/  - a reference to the key of the group this element belongs to;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":190356,"byte_end":190423,"line_start":158,"line_end":158,"column_start":5,"column_end":72}},{"value":"/  - the element from the source being accumulated.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":190428,"byte_end":190481,"line_start":159,"line_end":159,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":190486,"byte_end":190489,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Return a `HashMap` associating the key of each group with the result of folding that group's elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":190494,"byte_end":190600,"line_start":161,"line_end":161,"column_start":5,"column_end":111}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":190605,"byte_end":190609,"line_start":162,"line_end":162,"column_start":5,"column_end":9}},{"value":"/ [`fold`]: #tymethod.fold","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":190614,"byte_end":190642,"line_start":163,"line_end":163,"column_start":5,"column_end":33}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":190647,"byte_end":190651,"line_start":164,"line_end":164,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":190656,"byte_end":190663,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":190668,"byte_end":190697,"line_start":166,"line_end":166,"column_start":5,"column_end":34}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":190702,"byte_end":190706,"line_start":167,"line_end":167,"column_start":5,"column_end":9}},{"value":"/ let lookup = (1..=7)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":190711,"byte_end":190735,"line_start":168,"line_end":168,"column_start":5,"column_end":29}},{"value":"/     .into_grouping_map_by(|&n| n % 3)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":190740,"byte_end":190781,"line_start":169,"line_end":169,"column_start":5,"column_end":46}},{"value":"/     .fold_first(|acc, _key, val| acc + val);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":190786,"byte_end":190834,"line_start":170,"line_end":170,"column_start":5,"column_end":53}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":190839,"byte_end":190843,"line_start":171,"line_end":171,"column_start":5,"column_end":9}},{"value":"/ assert_eq!(lookup[&0], 3 + 6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":190848,"byte_end":190882,"line_start":172,"line_end":172,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(lookup[&1], 1 + 4 + 7);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":190887,"byte_end":190925,"line_start":173,"line_end":173,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(lookup[&2], 2 + 5);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":190930,"byte_end":190964,"line_start":174,"line_end":174,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(lookup.len(), 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":190969,"byte_end":191001,"line_start":175,"line_end":175,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":191006,"byte_end":191013,"line_start":176,"line_end":176,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1155},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":192197,"byte_end":192204,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"collect","qualname":"<GroupingMap<I>>::collect","value":"pub fn collect<C>(Self) -> HashMap<K, C> where C: Default + Extend<V>","parent":null,"children":[],"decl_id":null,"docs":" Groups elements from the `GroupingMap` source by key and collects the elements of each group in\n an instance of `C`. The iteration order is preserved when inserting elements. \n \n Return a `HashMap` associating the key of each group with the collection containing that group's elements.\n \n ```\n use itertools::Itertools;\n use std::collections::HashSet;\n \n let lookup = vec![0, 1, 2, 3, 4, 5, 6, 2, 3, 6].into_iter()\n     .into_grouping_map_by(|&n| n % 3)\n     .collect::<HashSet<_>>();\n \n assert_eq!(lookup[&0], vec![0, 3, 6].into_iter().collect::<HashSet<_>>());\n assert_eq!(lookup[&1], vec![1, 4].into_iter().collect::<HashSet<_>>());\n assert_eq!(lookup[&2], vec![2, 5].into_iter().collect::<HashSet<_>>());\n assert_eq!(lookup.len(), 3);\n ```\n","sig":null,"attributes":[{"value":"/ Groups elements from the `GroupingMap` source by key and collects the elements of each group in","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":191319,"byte_end":191418,"line_start":188,"line_end":188,"column_start":5,"column_end":104}},{"value":"/ an instance of `C`. The iteration order is preserved when inserting elements. ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":191423,"byte_end":191505,"line_start":189,"line_end":189,"column_start":5,"column_end":87}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":191510,"byte_end":191514,"line_start":190,"line_end":190,"column_start":5,"column_end":9}},{"value":"/ Return a `HashMap` associating the key of each group with the collection containing that group's elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":191519,"byte_end":191629,"line_start":191,"line_end":191,"column_start":5,"column_end":115}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":191634,"byte_end":191638,"line_start":192,"line_end":192,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":191643,"byte_end":191650,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":191655,"byte_end":191684,"line_start":194,"line_end":194,"column_start":5,"column_end":34}},{"value":"/ use std::collections::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":191689,"byte_end":191723,"line_start":195,"line_end":195,"column_start":5,"column_end":39}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":191728,"byte_end":191732,"line_start":196,"line_end":196,"column_start":5,"column_end":9}},{"value":"/ let lookup = vec![0, 1, 2, 3, 4, 5, 6, 2, 3, 6].into_iter()","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":191737,"byte_end":191800,"line_start":197,"line_end":197,"column_start":5,"column_end":68}},{"value":"/     .into_grouping_map_by(|&n| n % 3)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":191805,"byte_end":191846,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/     .collect::<HashSet<_>>();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":191851,"byte_end":191884,"line_start":199,"line_end":199,"column_start":5,"column_end":38}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":191889,"byte_end":191893,"line_start":200,"line_end":200,"column_start":5,"column_end":9}},{"value":"/ assert_eq!(lookup[&0], vec![0, 3, 6].into_iter().collect::<HashSet<_>>());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":191898,"byte_end":191976,"line_start":201,"line_end":201,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(lookup[&1], vec![1, 4].into_iter().collect::<HashSet<_>>());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":191981,"byte_end":192056,"line_start":202,"line_end":202,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(lookup[&2], vec![2, 5].into_iter().collect::<HashSet<_>>());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":192061,"byte_end":192136,"line_start":203,"line_end":203,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(lookup.len(), 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":192141,"byte_end":192173,"line_start":204,"line_end":204,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":192178,"byte_end":192185,"line_start":205,"line_end":205,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1157},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":193157,"byte_end":193160,"line_start":236,"line_end":236,"column_start":12,"column_end":15},"name":"max","qualname":"<GroupingMap<I>>::max","value":"pub fn max(Self) -> HashMap<K, V> where V: Ord","parent":null,"children":[],"decl_id":null,"docs":" Groups elements from the `GroupingMap` source by key and finds the maximum of each group.\n \n If several elements are equally maximum, the last element is picked.\n \n Returns a `HashMap` associating the key of each group with the maximum of that group's elements.\n \n ```\n use itertools::Itertools;\n \n let lookup = vec![1, 3, 4, 5, 7, 8, 9, 12].into_iter()\n     .into_grouping_map_by(|&n| n % 3)\n     .max();\n \n assert_eq!(lookup[&0], 12);\n assert_eq!(lookup[&1], 7);\n assert_eq!(lookup[&2], 8);\n assert_eq!(lookup.len(), 3);\n ```\n","sig":null,"attributes":[{"value":"/ Groups elements from the `GroupingMap` source by key and finds the maximum of each group.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":192495,"byte_end":192588,"line_start":218,"line_end":218,"column_start":5,"column_end":98}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":192593,"byte_end":192597,"line_start":219,"line_end":219,"column_start":5,"column_end":9}},{"value":"/ If several elements are equally maximum, the last element is picked.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":192602,"byte_end":192674,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":192679,"byte_end":192683,"line_start":221,"line_end":221,"column_start":5,"column_end":9}},{"value":"/ Returns a `HashMap` associating the key of each group with the maximum of that group's elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":192688,"byte_end":192788,"line_start":222,"line_end":222,"column_start":5,"column_end":105}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":192793,"byte_end":192797,"line_start":223,"line_end":223,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":192802,"byte_end":192809,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":192814,"byte_end":192843,"line_start":225,"line_end":225,"column_start":5,"column_end":34}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":192848,"byte_end":192852,"line_start":226,"line_end":226,"column_start":5,"column_end":9}},{"value":"/ let lookup = vec![1, 3, 4, 5, 7, 8, 9, 12].into_iter()","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":192857,"byte_end":192915,"line_start":227,"line_end":227,"column_start":5,"column_end":63}},{"value":"/     .into_grouping_map_by(|&n| n % 3)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":192920,"byte_end":192961,"line_start":228,"line_end":228,"column_start":5,"column_end":46}},{"value":"/     .max();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":192966,"byte_end":192981,"line_start":229,"line_end":229,"column_start":5,"column_end":20}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":192986,"byte_end":192990,"line_start":230,"line_end":230,"column_start":5,"column_end":9}},{"value":"/ assert_eq!(lookup[&0], 12);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":192995,"byte_end":193026,"line_start":231,"line_end":231,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(lookup[&1], 7);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":193031,"byte_end":193061,"line_start":232,"line_end":232,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(lookup[&2], 8);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":193066,"byte_end":193096,"line_start":233,"line_end":233,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(lookup.len(), 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":193101,"byte_end":193133,"line_start":234,"line_end":234,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":193138,"byte_end":193145,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1159},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":194014,"byte_end":194020,"line_start":261,"line_end":261,"column_start":12,"column_end":18},"name":"max_by","qualname":"<GroupingMap<I>>::max_by","value":"pub fn max_by<F>(Self, F) -> HashMap<K, V> where F: FnMut(&K, &V, &V) ->\nOrdering","parent":null,"children":[],"decl_id":null,"docs":" Groups elements from the `GroupingMap` source by key and finds the maximum of each group\n with respect to the specified comparison function.\n \n If several elements are equally maximum, the last element is picked.\n \n Returns a `HashMap` associating the key of each group with the maximum of that group's elements.\n \n ```\n use itertools::Itertools;\n \n let lookup = vec![1, 3, 4, 5, 7, 8, 9, 12].into_iter()\n     .into_grouping_map_by(|&n| n % 3)\n     .max_by(|_key, x, y| y.cmp(x));\n \n assert_eq!(lookup[&0], 3);\n assert_eq!(lookup[&1], 1);\n assert_eq!(lookup[&2], 5);\n assert_eq!(lookup.len(), 3);\n ```\n","sig":null,"attributes":[{"value":"/ Groups elements from the `GroupingMap` source by key and finds the maximum of each group","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":193271,"byte_end":193363,"line_start":242,"line_end":242,"column_start":5,"column_end":97}},{"value":"/ with respect to the specified comparison function.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":193368,"byte_end":193422,"line_start":243,"line_end":243,"column_start":5,"column_end":59}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":193427,"byte_end":193431,"line_start":244,"line_end":244,"column_start":5,"column_end":9}},{"value":"/ If several elements are equally maximum, the last element is picked.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":193436,"byte_end":193508,"line_start":245,"line_end":245,"column_start":5,"column_end":77}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":193513,"byte_end":193517,"line_start":246,"line_end":246,"column_start":5,"column_end":9}},{"value":"/ Returns a `HashMap` associating the key of each group with the maximum of that group's elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":193522,"byte_end":193622,"line_start":247,"line_end":247,"column_start":5,"column_end":105}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":193627,"byte_end":193631,"line_start":248,"line_end":248,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":193636,"byte_end":193643,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":193648,"byte_end":193677,"line_start":250,"line_end":250,"column_start":5,"column_end":34}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":193682,"byte_end":193686,"line_start":251,"line_end":251,"column_start":5,"column_end":9}},{"value":"/ let lookup = vec![1, 3, 4, 5, 7, 8, 9, 12].into_iter()","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":193691,"byte_end":193749,"line_start":252,"line_end":252,"column_start":5,"column_end":63}},{"value":"/     .into_grouping_map_by(|&n| n % 3)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":193754,"byte_end":193795,"line_start":253,"line_end":253,"column_start":5,"column_end":46}},{"value":"/     .max_by(|_key, x, y| y.cmp(x));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":193800,"byte_end":193839,"line_start":254,"line_end":254,"column_start":5,"column_end":44}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":193844,"byte_end":193848,"line_start":255,"line_end":255,"column_start":5,"column_end":9}},{"value":"/ assert_eq!(lookup[&0], 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":193853,"byte_end":193883,"line_start":256,"line_end":256,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(lookup[&1], 1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":193888,"byte_end":193918,"line_start":257,"line_end":257,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(lookup[&2], 5);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":193923,"byte_end":193953,"line_start":258,"line_end":258,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(lookup.len(), 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":193958,"byte_end":193990,"line_start":259,"line_end":259,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":193995,"byte_end":194002,"line_start":260,"line_end":260,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1162},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":195049,"byte_end":195059,"line_start":289,"line_end":289,"column_start":12,"column_end":22},"name":"max_by_key","qualname":"<GroupingMap<I>>::max_by_key","value":"pub fn max_by_key<F, CK>(Self, F) -> HashMap<K, V> where F: FnMut(&K, &V) ->\nCK, CK: Ord","parent":null,"children":[],"decl_id":null,"docs":" Groups elements from the `GroupingMap` source by key and finds the element of each group\n that gives the maximum from the specified function.\n \n If several elements are equally maximum, the last element is picked.\n \n Returns a `HashMap` associating the key of each group with the maximum of that group's elements.\n \n ```\n use itertools::Itertools;\n \n let lookup = vec![1, 3, 4, 5, 7, 8, 9, 12].into_iter()\n     .into_grouping_map_by(|&n| n % 3)\n     .max_by_key(|_key, &val| val % 4);\n \n assert_eq!(lookup[&0], 3);\n assert_eq!(lookup[&1], 7);\n assert_eq!(lookup[&2], 5);\n assert_eq!(lookup.len(), 3);\n ```\n","sig":null,"attributes":[{"value":"/ Groups elements from the `GroupingMap` source by key and finds the element of each group","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":194302,"byte_end":194394,"line_start":270,"line_end":270,"column_start":5,"column_end":97}},{"value":"/ that gives the maximum from the specified function.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":194399,"byte_end":194454,"line_start":271,"line_end":271,"column_start":5,"column_end":60}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":194459,"byte_end":194463,"line_start":272,"line_end":272,"column_start":5,"column_end":9}},{"value":"/ If several elements are equally maximum, the last element is picked.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":194468,"byte_end":194540,"line_start":273,"line_end":273,"column_start":5,"column_end":77}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":194545,"byte_end":194549,"line_start":274,"line_end":274,"column_start":5,"column_end":9}},{"value":"/ Returns a `HashMap` associating the key of each group with the maximum of that group's elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":194554,"byte_end":194654,"line_start":275,"line_end":275,"column_start":5,"column_end":105}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":194659,"byte_end":194663,"line_start":276,"line_end":276,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":194668,"byte_end":194675,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":194680,"byte_end":194709,"line_start":278,"line_end":278,"column_start":5,"column_end":34}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":194714,"byte_end":194718,"line_start":279,"line_end":279,"column_start":5,"column_end":9}},{"value":"/ let lookup = vec![1, 3, 4, 5, 7, 8, 9, 12].into_iter()","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":194723,"byte_end":194781,"line_start":280,"line_end":280,"column_start":5,"column_end":63}},{"value":"/     .into_grouping_map_by(|&n| n % 3)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":194786,"byte_end":194827,"line_start":281,"line_end":281,"column_start":5,"column_end":46}},{"value":"/     .max_by_key(|_key, &val| val % 4);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":194832,"byte_end":194874,"line_start":282,"line_end":282,"column_start":5,"column_end":47}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":194879,"byte_end":194883,"line_start":283,"line_end":283,"column_start":5,"column_end":9}},{"value":"/ assert_eq!(lookup[&0], 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":194888,"byte_end":194918,"line_start":284,"line_end":284,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(lookup[&1], 7);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":194923,"byte_end":194953,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(lookup[&2], 5);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":194958,"byte_end":194988,"line_start":286,"line_end":286,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(lookup.len(), 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":194993,"byte_end":195025,"line_start":287,"line_end":287,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":195030,"byte_end":195037,"line_start":288,"line_end":288,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":195905,"byte_end":195908,"line_start":314,"line_end":314,"column_start":12,"column_end":15},"name":"min","qualname":"<GroupingMap<I>>::min","value":"pub fn min(Self) -> HashMap<K, V> where V: Ord","parent":null,"children":[],"decl_id":null,"docs":" Groups elements from the `GroupingMap` source by key and finds the minimum of each group.\n \n If several elements are equally minimum, the first element is picked.\n \n Returns a `HashMap` associating the key of each group with the minimum of that group's elements.\n \n ```\n use itertools::Itertools;\n \n let lookup = vec![1, 3, 4, 5, 7, 8, 9, 12].into_iter()\n     .into_grouping_map_by(|&n| n % 3)\n     .min();\n \n assert_eq!(lookup[&0], 3);\n assert_eq!(lookup[&1], 1);\n assert_eq!(lookup[&2], 5);\n assert_eq!(lookup.len(), 3);\n ```\n","sig":null,"attributes":[{"value":"/ Groups elements from the `GroupingMap` source by key and finds the minimum of each group.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":195243,"byte_end":195336,"line_start":296,"line_end":296,"column_start":5,"column_end":98}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":195341,"byte_end":195345,"line_start":297,"line_end":297,"column_start":5,"column_end":9}},{"value":"/ If several elements are equally minimum, the first element is picked.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":195350,"byte_end":195423,"line_start":298,"line_end":298,"column_start":5,"column_end":78}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":195428,"byte_end":195432,"line_start":299,"line_end":299,"column_start":5,"column_end":9}},{"value":"/ Returns a `HashMap` associating the key of each group with the minimum of that group's elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":195437,"byte_end":195537,"line_start":300,"line_end":300,"column_start":5,"column_end":105}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":195542,"byte_end":195546,"line_start":301,"line_end":301,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":195551,"byte_end":195558,"line_start":302,"line_end":302,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":195563,"byte_end":195592,"line_start":303,"line_end":303,"column_start":5,"column_end":34}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":195597,"byte_end":195601,"line_start":304,"line_end":304,"column_start":5,"column_end":9}},{"value":"/ let lookup = vec![1, 3, 4, 5, 7, 8, 9, 12].into_iter()","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":195606,"byte_end":195664,"line_start":305,"line_end":305,"column_start":5,"column_end":63}},{"value":"/     .into_grouping_map_by(|&n| n % 3)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":195669,"byte_end":195710,"line_start":306,"line_end":306,"column_start":5,"column_end":46}},{"value":"/     .min();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":195715,"byte_end":195730,"line_start":307,"line_end":307,"column_start":5,"column_end":20}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":195735,"byte_end":195739,"line_start":308,"line_end":308,"column_start":5,"column_end":9}},{"value":"/ assert_eq!(lookup[&0], 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":195744,"byte_end":195774,"line_start":309,"line_end":309,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(lookup[&1], 1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":195779,"byte_end":195809,"line_start":310,"line_end":310,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(lookup[&2], 5);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":195814,"byte_end":195844,"line_start":311,"line_end":311,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(lookup.len(), 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":195849,"byte_end":195881,"line_start":312,"line_end":312,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":195886,"byte_end":195893,"line_start":313,"line_end":313,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":196764,"byte_end":196770,"line_start":339,"line_end":339,"column_start":12,"column_end":18},"name":"min_by","qualname":"<GroupingMap<I>>::min_by","value":"pub fn min_by<F>(Self, F) -> HashMap<K, V> where F: FnMut(&K, &V, &V) ->\nOrdering","parent":null,"children":[],"decl_id":null,"docs":" Groups elements from the `GroupingMap` source by key and finds the minimum of each group\n with respect to the specified comparison function.\n \n If several elements are equally minimum, the first element is picked.\n \n Returns a `HashMap` associating the key of each group with the minimum of that group's elements.\n \n ```\n use itertools::Itertools;\n \n let lookup = vec![1, 3, 4, 5, 7, 8, 9, 12].into_iter()\n     .into_grouping_map_by(|&n| n % 3)\n     .min_by(|_key, x, y| y.cmp(x));\n \n assert_eq!(lookup[&0], 12);\n assert_eq!(lookup[&1], 7);\n assert_eq!(lookup[&2], 8);\n assert_eq!(lookup.len(), 3);\n ```\n","sig":null,"attributes":[{"value":"/ Groups elements from the `GroupingMap` source by key and finds the minimum of each group","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":196019,"byte_end":196111,"line_start":320,"line_end":320,"column_start":5,"column_end":97}},{"value":"/ with respect to the specified comparison function.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":196116,"byte_end":196170,"line_start":321,"line_end":321,"column_start":5,"column_end":59}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":196175,"byte_end":196179,"line_start":322,"line_end":322,"column_start":5,"column_end":9}},{"value":"/ If several elements are equally minimum, the first element is picked.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":196184,"byte_end":196257,"line_start":323,"line_end":323,"column_start":5,"column_end":78}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":196262,"byte_end":196266,"line_start":324,"line_end":324,"column_start":5,"column_end":9}},{"value":"/ Returns a `HashMap` associating the key of each group with the minimum of that group's elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":196271,"byte_end":196371,"line_start":325,"line_end":325,"column_start":5,"column_end":105}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":196376,"byte_end":196380,"line_start":326,"line_end":326,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":196385,"byte_end":196392,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":196397,"byte_end":196426,"line_start":328,"line_end":328,"column_start":5,"column_end":34}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":196431,"byte_end":196435,"line_start":329,"line_end":329,"column_start":5,"column_end":9}},{"value":"/ let lookup = vec![1, 3, 4, 5, 7, 8, 9, 12].into_iter()","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":196440,"byte_end":196498,"line_start":330,"line_end":330,"column_start":5,"column_end":63}},{"value":"/     .into_grouping_map_by(|&n| n % 3)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":196503,"byte_end":196544,"line_start":331,"line_end":331,"column_start":5,"column_end":46}},{"value":"/     .min_by(|_key, x, y| y.cmp(x));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":196549,"byte_end":196588,"line_start":332,"line_end":332,"column_start":5,"column_end":44}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":196593,"byte_end":196597,"line_start":333,"line_end":333,"column_start":5,"column_end":9}},{"value":"/ assert_eq!(lookup[&0], 12);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":196602,"byte_end":196633,"line_start":334,"line_end":334,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(lookup[&1], 7);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":196638,"byte_end":196668,"line_start":335,"line_end":335,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(lookup[&2], 8);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":196673,"byte_end":196703,"line_start":336,"line_end":336,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(lookup.len(), 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":196708,"byte_end":196740,"line_start":337,"line_end":337,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":196745,"byte_end":196752,"line_start":338,"line_end":338,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1171},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":197801,"byte_end":197811,"line_start":367,"line_end":367,"column_start":12,"column_end":22},"name":"min_by_key","qualname":"<GroupingMap<I>>::min_by_key","value":"pub fn min_by_key<F, CK>(Self, F) -> HashMap<K, V> where F: FnMut(&K, &V) ->\nCK, CK: Ord","parent":null,"children":[],"decl_id":null,"docs":" Groups elements from the `GroupingMap` source by key and finds the element of each group\n that gives the minimum from the specified function.\n \n If several elements are equally minimum, the first element is picked.\n \n Returns a `HashMap` associating the key of each group with the minimum of that group's elements.\n \n ```\n use itertools::Itertools;\n \n let lookup = vec![1, 3, 4, 5, 7, 8, 9, 12].into_iter()\n     .into_grouping_map_by(|&n| n % 3)\n     .min_by_key(|_key, &val| val % 4);\n \n assert_eq!(lookup[&0], 12);\n assert_eq!(lookup[&1], 4);\n assert_eq!(lookup[&2], 8);\n assert_eq!(lookup.len(), 3);\n ```\n","sig":null,"attributes":[{"value":"/ Groups elements from the `GroupingMap` source by key and finds the element of each group","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":197052,"byte_end":197144,"line_start":348,"line_end":348,"column_start":5,"column_end":97}},{"value":"/ that gives the minimum from the specified function.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":197149,"byte_end":197204,"line_start":349,"line_end":349,"column_start":5,"column_end":60}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":197209,"byte_end":197213,"line_start":350,"line_end":350,"column_start":5,"column_end":9}},{"value":"/ If several elements are equally minimum, the first element is picked.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":197218,"byte_end":197291,"line_start":351,"line_end":351,"column_start":5,"column_end":78}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":197296,"byte_end":197300,"line_start":352,"line_end":352,"column_start":5,"column_end":9}},{"value":"/ Returns a `HashMap` associating the key of each group with the minimum of that group's elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":197305,"byte_end":197405,"line_start":353,"line_end":353,"column_start":5,"column_end":105}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":197410,"byte_end":197414,"line_start":354,"line_end":354,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":197419,"byte_end":197426,"line_start":355,"line_end":355,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":197431,"byte_end":197460,"line_start":356,"line_end":356,"column_start":5,"column_end":34}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":197465,"byte_end":197469,"line_start":357,"line_end":357,"column_start":5,"column_end":9}},{"value":"/ let lookup = vec![1, 3, 4, 5, 7, 8, 9, 12].into_iter()","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":197474,"byte_end":197532,"line_start":358,"line_end":358,"column_start":5,"column_end":63}},{"value":"/     .into_grouping_map_by(|&n| n % 3)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":197537,"byte_end":197578,"line_start":359,"line_end":359,"column_start":5,"column_end":46}},{"value":"/     .min_by_key(|_key, &val| val % 4);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":197583,"byte_end":197625,"line_start":360,"line_end":360,"column_start":5,"column_end":47}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":197630,"byte_end":197634,"line_start":361,"line_end":361,"column_start":5,"column_end":9}},{"value":"/ assert_eq!(lookup[&0], 12);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":197639,"byte_end":197670,"line_start":362,"line_end":362,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(lookup[&1], 4);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":197675,"byte_end":197705,"line_start":363,"line_end":363,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(lookup[&2], 8);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":197710,"byte_end":197740,"line_start":364,"line_end":364,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(lookup.len(), 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":197745,"byte_end":197777,"line_start":365,"line_end":365,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":197782,"byte_end":197789,"line_start":366,"line_end":366,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1175},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":199116,"byte_end":199122,"line_start":401,"line_end":401,"column_start":12,"column_end":18},"name":"minmax","qualname":"<GroupingMap<I>>::minmax","value":"pub fn minmax(Self) -> HashMap<K, MinMaxResult<V>> where V: Ord","parent":null,"children":[],"decl_id":null,"docs":" Groups elements from the `GroupingMap` source by key and find the maximum and minimum of\n each group.\n \n If several elements are equally maximum, the last element is picked.\n If several elements are equally minimum, the first element is picked.\n \n See [.minmax()](../trait.Itertools.html#method.minmax) for the non-grouping version.\n \n Differences from the non grouping version:\n - It never produces a `MinMaxResult::NoElements`\n - It doesn't have any speedup\n \n Returns a `HashMap` associating the key of each group with the minimum and maximum of that group's elements.\n \n ```\n use itertools::Itertools;\n use itertools::MinMaxResult::{OneElement, MinMax};\n \n let lookup = vec![1, 3, 4, 5, 7, 9, 12].into_iter()\n     .into_grouping_map_by(|&n| n % 3)\n     .minmax();\n \n assert_eq!(lookup[&0], MinMax(3, 12));\n assert_eq!(lookup[&1], MinMax(1, 7));\n assert_eq!(lookup[&2], OneElement(5));\n assert_eq!(lookup.len(), 3);\n ```\n","sig":null,"attributes":[{"value":"/ Groups elements from the `GroupingMap` source by key and find the maximum and minimum of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":197995,"byte_end":198087,"line_start":374,"line_end":374,"column_start":5,"column_end":97}},{"value":"/ each group.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":198092,"byte_end":198107,"line_start":375,"line_end":375,"column_start":5,"column_end":20}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":198112,"byte_end":198116,"line_start":376,"line_end":376,"column_start":5,"column_end":9}},{"value":"/ If several elements are equally maximum, the last element is picked.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":198121,"byte_end":198193,"line_start":377,"line_end":377,"column_start":5,"column_end":77}},{"value":"/ If several elements are equally minimum, the first element is picked.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":198198,"byte_end":198271,"line_start":378,"line_end":378,"column_start":5,"column_end":78}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":198276,"byte_end":198280,"line_start":379,"line_end":379,"column_start":5,"column_end":9}},{"value":"/ See [.minmax()](../trait.Itertools.html#method.minmax) for the non-grouping version.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":198285,"byte_end":198373,"line_start":380,"line_end":380,"column_start":5,"column_end":93}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":198378,"byte_end":198382,"line_start":381,"line_end":381,"column_start":5,"column_end":9}},{"value":"/ Differences from the non grouping version:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":198387,"byte_end":198433,"line_start":382,"line_end":382,"column_start":5,"column_end":51}},{"value":"/ - It never produces a `MinMaxResult::NoElements`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":198438,"byte_end":198490,"line_start":383,"line_end":383,"column_start":5,"column_end":57}},{"value":"/ - It doesn't have any speedup","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":198495,"byte_end":198528,"line_start":384,"line_end":384,"column_start":5,"column_end":38}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":198533,"byte_end":198537,"line_start":385,"line_end":385,"column_start":5,"column_end":9}},{"value":"/ Returns a `HashMap` associating the key of each group with the minimum and maximum of that group's elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":198542,"byte_end":198654,"line_start":386,"line_end":386,"column_start":5,"column_end":117}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":198659,"byte_end":198663,"line_start":387,"line_end":387,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":198668,"byte_end":198675,"line_start":388,"line_end":388,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":198680,"byte_end":198709,"line_start":389,"line_end":389,"column_start":5,"column_end":34}},{"value":"/ use itertools::MinMaxResult::{OneElement, MinMax};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":198714,"byte_end":198768,"line_start":390,"line_end":390,"column_start":5,"column_end":59}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":198773,"byte_end":198777,"line_start":391,"line_end":391,"column_start":5,"column_end":9}},{"value":"/ let lookup = vec![1, 3, 4, 5, 7, 9, 12].into_iter()","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":198782,"byte_end":198837,"line_start":392,"line_end":392,"column_start":5,"column_end":60}},{"value":"/     .into_grouping_map_by(|&n| n % 3)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":198842,"byte_end":198883,"line_start":393,"line_end":393,"column_start":5,"column_end":46}},{"value":"/     .minmax();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":198888,"byte_end":198906,"line_start":394,"line_end":394,"column_start":5,"column_end":23}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":198911,"byte_end":198915,"line_start":395,"line_end":395,"column_start":5,"column_end":9}},{"value":"/ assert_eq!(lookup[&0], MinMax(3, 12));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":198920,"byte_end":198962,"line_start":396,"line_end":396,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(lookup[&1], MinMax(1, 7));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":198967,"byte_end":199008,"line_start":397,"line_end":397,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(lookup[&2], OneElement(5));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":199013,"byte_end":199055,"line_start":398,"line_end":398,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(lookup.len(), 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":199060,"byte_end":199092,"line_start":399,"line_end":399,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":199097,"byte_end":199104,"line_start":400,"line_end":400,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1177},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":200276,"byte_end":200285,"line_start":430,"line_end":430,"column_start":12,"column_end":21},"name":"minmax_by","qualname":"<GroupingMap<I>>::minmax_by","value":"pub fn minmax_by<F>(Self, F) -> HashMap<K, MinMaxResult<V>> where\nF: FnMut(&K, &V, &V) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Groups elements from the `GroupingMap` source by key and find the maximum and minimum of\n each group with respect to the specified comparison function.\n \n If several elements are equally maximum, the last element is picked.\n If several elements are equally minimum, the first element is picked.\n \n It has the same differences from the non-grouping version as `minmax`.\n \n Returns a `HashMap` associating the key of each group with the minimum and maximum of that group's elements.\n \n ```\n use itertools::Itertools;\n use itertools::MinMaxResult::{OneElement, MinMax};\n \n let lookup = vec![1, 3, 4, 5, 7, 9, 12].into_iter()\n     .into_grouping_map_by(|&n| n % 3)\n     .minmax_by(|_key, x, y| y.cmp(x));\n \n assert_eq!(lookup[&0], MinMax(12, 3));\n assert_eq!(lookup[&1], MinMax(7, 1));\n assert_eq!(lookup[&2], OneElement(5));\n assert_eq!(lookup.len(), 3);\n ```\n","sig":null,"attributes":[{"value":"/ Groups elements from the `GroupingMap` source by key and find the maximum and minimum of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":199250,"byte_end":199342,"line_start":407,"line_end":407,"column_start":5,"column_end":97}},{"value":"/ each group with respect to the specified comparison function.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":199347,"byte_end":199412,"line_start":408,"line_end":408,"column_start":5,"column_end":70}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":199417,"byte_end":199421,"line_start":409,"line_end":409,"column_start":5,"column_end":9}},{"value":"/ If several elements are equally maximum, the last element is picked.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":199426,"byte_end":199498,"line_start":410,"line_end":410,"column_start":5,"column_end":77}},{"value":"/ If several elements are equally minimum, the first element is picked.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":199503,"byte_end":199576,"line_start":411,"line_end":411,"column_start":5,"column_end":78}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":199581,"byte_end":199585,"line_start":412,"line_end":412,"column_start":5,"column_end":9}},{"value":"/ It has the same differences from the non-grouping version as `minmax`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":199590,"byte_end":199664,"line_start":413,"line_end":413,"column_start":5,"column_end":79}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":199669,"byte_end":199673,"line_start":414,"line_end":414,"column_start":5,"column_end":9}},{"value":"/ Returns a `HashMap` associating the key of each group with the minimum and maximum of that group's elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":199678,"byte_end":199790,"line_start":415,"line_end":415,"column_start":5,"column_end":117}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":199795,"byte_end":199799,"line_start":416,"line_end":416,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":199804,"byte_end":199811,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":199816,"byte_end":199845,"line_start":418,"line_end":418,"column_start":5,"column_end":34}},{"value":"/ use itertools::MinMaxResult::{OneElement, MinMax};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":199850,"byte_end":199904,"line_start":419,"line_end":419,"column_start":5,"column_end":59}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":199909,"byte_end":199913,"line_start":420,"line_end":420,"column_start":5,"column_end":9}},{"value":"/ let lookup = vec![1, 3, 4, 5, 7, 9, 12].into_iter()","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":199918,"byte_end":199973,"line_start":421,"line_end":421,"column_start":5,"column_end":60}},{"value":"/     .into_grouping_map_by(|&n| n % 3)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":199978,"byte_end":200019,"line_start":422,"line_end":422,"column_start":5,"column_end":46}},{"value":"/     .minmax_by(|_key, x, y| y.cmp(x));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":200024,"byte_end":200066,"line_start":423,"line_end":423,"column_start":5,"column_end":47}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":200071,"byte_end":200075,"line_start":424,"line_end":424,"column_start":5,"column_end":9}},{"value":"/ assert_eq!(lookup[&0], MinMax(12, 3));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":200080,"byte_end":200122,"line_start":425,"line_end":425,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(lookup[&1], MinMax(7, 1));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":200127,"byte_end":200168,"line_start":426,"line_end":426,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(lookup[&2], OneElement(5));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":200173,"byte_end":200215,"line_start":427,"line_end":427,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(lookup.len(), 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":200220,"byte_end":200252,"line_start":428,"line_end":428,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":200257,"byte_end":200264,"line_start":429,"line_end":429,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1180},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":202386,"byte_end":202399,"line_start":480,"line_end":480,"column_start":12,"column_end":25},"name":"minmax_by_key","qualname":"<GroupingMap<I>>::minmax_by_key","value":"pub fn minmax_by_key<F, CK>(Self, F) -> HashMap<K, MinMaxResult<V>> where\nF: FnMut(&K, &V) -> CK, CK: Ord","parent":null,"children":[],"decl_id":null,"docs":" Groups elements from the `GroupingMap` source by key and find the elements of each group\n that gives the minimum and maximum from the specified function.\n \n If several elements are equally maximum, the last element is picked.\n If several elements are equally minimum, the first element is picked.\n \n It has the same differences from the non-grouping version as `minmax`.\n \n Returns a `HashMap` associating the key of each group with the minimum and maximum of that group's elements.\n \n ```\n use itertools::Itertools;\n use itertools::MinMaxResult::{OneElement, MinMax};\n \n let lookup = vec![1, 3, 4, 5, 7, 9, 12].into_iter()\n     .into_grouping_map_by(|&n| n % 3)\n     .minmax_by_key(|_key, &val| val % 4);\n \n assert_eq!(lookup[&0], MinMax(12, 3));\n assert_eq!(lookup[&1], MinMax(4, 7));\n assert_eq!(lookup[&2], OneElement(5));\n assert_eq!(lookup.len(), 3);\n ```\n","sig":null,"attributes":[{"value":"/ Groups elements from the `GroupingMap` source by key and find the elements of each group","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":201355,"byte_end":201447,"line_start":457,"line_end":457,"column_start":5,"column_end":97}},{"value":"/ that gives the minimum and maximum from the specified function.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":201452,"byte_end":201519,"line_start":458,"line_end":458,"column_start":5,"column_end":72}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":201524,"byte_end":201528,"line_start":459,"line_end":459,"column_start":5,"column_end":9}},{"value":"/ If several elements are equally maximum, the last element is picked.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":201533,"byte_end":201605,"line_start":460,"line_end":460,"column_start":5,"column_end":77}},{"value":"/ If several elements are equally minimum, the first element is picked.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":201610,"byte_end":201683,"line_start":461,"line_end":461,"column_start":5,"column_end":78}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":201688,"byte_end":201692,"line_start":462,"line_end":462,"column_start":5,"column_end":9}},{"value":"/ It has the same differences from the non-grouping version as `minmax`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":201697,"byte_end":201771,"line_start":463,"line_end":463,"column_start":5,"column_end":79}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":201776,"byte_end":201780,"line_start":464,"line_end":464,"column_start":5,"column_end":9}},{"value":"/ Returns a `HashMap` associating the key of each group with the minimum and maximum of that group's elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":201785,"byte_end":201897,"line_start":465,"line_end":465,"column_start":5,"column_end":117}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":201902,"byte_end":201906,"line_start":466,"line_end":466,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":201911,"byte_end":201918,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":201923,"byte_end":201952,"line_start":468,"line_end":468,"column_start":5,"column_end":34}},{"value":"/ use itertools::MinMaxResult::{OneElement, MinMax};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":201957,"byte_end":202011,"line_start":469,"line_end":469,"column_start":5,"column_end":59}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":202016,"byte_end":202020,"line_start":470,"line_end":470,"column_start":5,"column_end":9}},{"value":"/ let lookup = vec![1, 3, 4, 5, 7, 9, 12].into_iter()","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":202025,"byte_end":202080,"line_start":471,"line_end":471,"column_start":5,"column_end":60}},{"value":"/     .into_grouping_map_by(|&n| n % 3)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":202085,"byte_end":202126,"line_start":472,"line_end":472,"column_start":5,"column_end":46}},{"value":"/     .minmax_by_key(|_key, &val| val % 4);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":202131,"byte_end":202176,"line_start":473,"line_end":473,"column_start":5,"column_end":50}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":202181,"byte_end":202185,"line_start":474,"line_end":474,"column_start":5,"column_end":9}},{"value":"/ assert_eq!(lookup[&0], MinMax(12, 3));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":202190,"byte_end":202232,"line_start":475,"line_end":475,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(lookup[&1], MinMax(4, 7));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":202237,"byte_end":202278,"line_start":476,"line_end":476,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(lookup[&2], OneElement(5));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":202283,"byte_end":202325,"line_start":477,"line_end":477,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(lookup.len(), 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":202330,"byte_end":202362,"line_start":478,"line_end":478,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":202367,"byte_end":202374,"line_start":479,"line_end":479,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1184},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":203350,"byte_end":203353,"line_start":506,"line_end":506,"column_start":12,"column_end":15},"name":"sum","qualname":"<GroupingMap<I>>::sum","value":"pub fn sum(Self) -> HashMap<K, V> where V: Add<V, Output = V>","parent":null,"children":[],"decl_id":null,"docs":" Groups elements from the `GroupingMap` source by key and sums them.\n \n This is just a shorthand for `self.fold_first(|acc, _, val| acc + val)`.\n It is more limited than `Iterator::sum` since it doesn't use the `Sum` trait.\n \n Returns a `HashMap` associating the key of each group with the sum of that group's elements.\n \n ```\n use itertools::Itertools;\n \n let lookup = vec![1, 3, 4, 5, 7, 8, 9, 12].into_iter()\n     .into_grouping_map_by(|&n| n % 3)\n     .sum();\n \n assert_eq!(lookup[&0], 3 + 9 + 12);\n assert_eq!(lookup[&1], 1 + 4 + 7);\n assert_eq!(lookup[&2], 5 + 8);\n assert_eq!(lookup.len(), 3);\n ```\n","sig":null,"attributes":[{"value":"/ Groups elements from the `GroupingMap` source by key and sums them.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":202604,"byte_end":202675,"line_start":487,"line_end":487,"column_start":5,"column_end":76}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":202680,"byte_end":202684,"line_start":488,"line_end":488,"column_start":5,"column_end":9}},{"value":"/ This is just a shorthand for `self.fold_first(|acc, _, val| acc + val)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":202689,"byte_end":202765,"line_start":489,"line_end":489,"column_start":5,"column_end":81}},{"value":"/ It is more limited than `Iterator::sum` since it doesn't use the `Sum` trait.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":202770,"byte_end":202851,"line_start":490,"line_end":490,"column_start":5,"column_end":86}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":202856,"byte_end":202860,"line_start":491,"line_end":491,"column_start":5,"column_end":9}},{"value":"/ Returns a `HashMap` associating the key of each group with the sum of that group's elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":202865,"byte_end":202961,"line_start":492,"line_end":492,"column_start":5,"column_end":101}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":202966,"byte_end":202970,"line_start":493,"line_end":493,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":202975,"byte_end":202982,"line_start":494,"line_end":494,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":202987,"byte_end":203016,"line_start":495,"line_end":495,"column_start":5,"column_end":34}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":203021,"byte_end":203025,"line_start":496,"line_end":496,"column_start":5,"column_end":9}},{"value":"/ let lookup = vec![1, 3, 4, 5, 7, 8, 9, 12].into_iter()","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":203030,"byte_end":203088,"line_start":497,"line_end":497,"column_start":5,"column_end":63}},{"value":"/     .into_grouping_map_by(|&n| n % 3)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":203093,"byte_end":203134,"line_start":498,"line_end":498,"column_start":5,"column_end":46}},{"value":"/     .sum();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":203139,"byte_end":203154,"line_start":499,"line_end":499,"column_start":5,"column_end":20}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":203159,"byte_end":203163,"line_start":500,"line_end":500,"column_start":5,"column_end":9}},{"value":"/ assert_eq!(lookup[&0], 3 + 9 + 12);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":203168,"byte_end":203207,"line_start":501,"line_end":501,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(lookup[&1], 1 + 4 + 7);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":203212,"byte_end":203250,"line_start":502,"line_end":502,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(lookup[&2], 5 + 8);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":203255,"byte_end":203289,"line_start":503,"line_end":503,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(lookup.len(), 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":203294,"byte_end":203326,"line_start":504,"line_end":504,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":203331,"byte_end":203338,"line_start":505,"line_end":505,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1186},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":204245,"byte_end":204252,"line_start":531,"line_end":531,"column_start":12,"column_end":19},"name":"product","qualname":"<GroupingMap<I>>::product","value":"pub fn product(Self) -> HashMap<K, V> where V: Mul<V, Output = V>","parent":null,"children":[],"decl_id":null,"docs":" Groups elements from the `GroupingMap` source by key and multiply them.\n \n This is just a shorthand for `self.fold_first(|acc, _, val| acc * val)`.\n It is more limited than `Iterator::product` since it doesn't use the `Product` trait.\n \n Returns a `HashMap` associating the key of each group with the product of that group's elements.\n \n ```\n use itertools::Itertools;\n \n let lookup = vec![1, 3, 4, 5, 7, 8, 9, 12].into_iter()\n     .into_grouping_map_by(|&n| n % 3)\n     .product();\n \n assert_eq!(lookup[&0], 3 * 9 * 12);\n assert_eq!(lookup[&1], 1 * 4 * 7);\n assert_eq!(lookup[&2], 5 * 8);\n assert_eq!(lookup.len(), 3);\n ```\n","sig":null,"attributes":[{"value":"/ Groups elements from the `GroupingMap` source by key and multiply them.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":203479,"byte_end":203554,"line_start":512,"line_end":512,"column_start":5,"column_end":80}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":203559,"byte_end":203563,"line_start":513,"line_end":513,"column_start":5,"column_end":9}},{"value":"/ This is just a shorthand for `self.fold_first(|acc, _, val| acc * val)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":203568,"byte_end":203644,"line_start":514,"line_end":514,"column_start":5,"column_end":81}},{"value":"/ It is more limited than `Iterator::product` since it doesn't use the `Product` trait.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":203649,"byte_end":203738,"line_start":515,"line_end":515,"column_start":5,"column_end":94}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":203743,"byte_end":203747,"line_start":516,"line_end":516,"column_start":5,"column_end":9}},{"value":"/ Returns a `HashMap` associating the key of each group with the product of that group's elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":203752,"byte_end":203852,"line_start":517,"line_end":517,"column_start":5,"column_end":105}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":203857,"byte_end":203861,"line_start":518,"line_end":518,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":203866,"byte_end":203873,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":203878,"byte_end":203907,"line_start":520,"line_end":520,"column_start":5,"column_end":34}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":203912,"byte_end":203916,"line_start":521,"line_end":521,"column_start":5,"column_end":9}},{"value":"/ let lookup = vec![1, 3, 4, 5, 7, 8, 9, 12].into_iter()","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":203921,"byte_end":203979,"line_start":522,"line_end":522,"column_start":5,"column_end":63}},{"value":"/     .into_grouping_map_by(|&n| n % 3)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":203984,"byte_end":204025,"line_start":523,"line_end":523,"column_start":5,"column_end":46}},{"value":"/     .product();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":204030,"byte_end":204049,"line_start":524,"line_end":524,"column_start":5,"column_end":24}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":204054,"byte_end":204058,"line_start":525,"line_end":525,"column_start":5,"column_end":9}},{"value":"/ assert_eq!(lookup[&0], 3 * 9 * 12);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":204063,"byte_end":204102,"line_start":526,"line_end":526,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(lookup[&1], 1 * 4 * 7);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":204107,"byte_end":204145,"line_start":527,"line_end":527,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(lookup[&2], 5 * 8);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":204150,"byte_end":204184,"line_start":528,"line_end":528,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(lookup.len(), 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":204189,"byte_end":204221,"line_start":529,"line_end":529,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":204226,"byte_end":204233,"line_start":530,"line_end":530,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":1226},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":205328,"byte_end":205331,"line_start":6,"line_end":6,"column_start":10,"column_end":13},"name":"Key","qualname":"::groupbylazy::KeyFunction::Key","value":"type Key;","parent":{"krate":0,"index":1224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1276},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":214791,"byte_end":214798,"line_start":289,"line_end":289,"column_start":12,"column_end":19},"name":"GroupBy","qualname":"::groupbylazy::GroupBy","value":"GroupBy {  }","parent":null,"children":[{"krate":0,"index":1280},{"krate":0,"index":1281}],"decl_id":null,"docs":" `GroupBy` is the storage for the lazy grouping operation.","sig":null,"attributes":[{"value":"/ `GroupBy` is the storage for the lazy grouping operation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":214090,"byte_end":214151,"line_start":275,"line_end":275,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":214152,"byte_end":214155,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ If the groups are consumed in their original order, or if each","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":214156,"byte_end":214222,"line_start":277,"line_end":277,"column_start":1,"column_end":67}},{"value":"/ group is dropped without keeping it around, then `GroupBy` uses","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":214223,"byte_end":214290,"line_start":278,"line_end":278,"column_start":1,"column_end":68}},{"value":"/ no allocations. It needs allocations only if several group iterators","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":214291,"byte_end":214363,"line_start":279,"line_end":279,"column_start":1,"column_end":73}},{"value":"/ are alive at the same time.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":214364,"byte_end":214395,"line_start":280,"line_end":280,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":214396,"byte_end":214399,"line_start":281,"line_end":281,"column_start":1,"column_end":4}},{"value":"/ This type implements `IntoIterator` (it is **not** an iterator","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":214400,"byte_end":214466,"line_start":282,"line_end":282,"column_start":1,"column_end":67}},{"value":"/ itself), because the group iterators need to borrow from this","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":214467,"byte_end":214532,"line_start":283,"line_end":283,"column_start":1,"column_end":66}},{"value":"/ value. It should be stored in a local variable or temporary and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":214533,"byte_end":214600,"line_start":284,"line_end":284,"column_start":1,"column_end":68}},{"value":"/ iterated.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":214601,"byte_end":214614,"line_start":285,"line_end":285,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":214615,"byte_end":214618,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ See [`.group_by()`](../trait.Itertools.html#method.group_by) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":214619,"byte_end":214705,"line_start":287,"line_end":287,"column_start":1,"column_end":87}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":214706,"byte_end":214779,"line_start":288,"line_end":288,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1300},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":216665,"byte_end":216671,"line_start":359,"line_end":359,"column_start":12,"column_end":18},"name":"Groups","qualname":"::groupbylazy::Groups","value":"Groups {  }","parent":null,"children":[{"krate":0,"index":1305}],"decl_id":null,"docs":" An iterator that yields the Group iterators.","sig":null,"attributes":[{"value":"/ An iterator that yields the Group iterators.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":216343,"byte_end":216391,"line_start":352,"line_end":352,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":216392,"byte_end":216395,"line_start":353,"line_end":353,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `(K, Group)`:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":216396,"byte_end":216438,"line_start":354,"line_end":354,"column_start":1,"column_end":43}},{"value":"/ the group's key `K` and the group's iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":216439,"byte_end":216488,"line_start":355,"line_end":355,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":216489,"byte_end":216492,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ See [`.group_by()`](../trait.Itertools.html#method.group_by) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":216493,"byte_end":216579,"line_start":357,"line_end":357,"column_start":1,"column_end":87}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":216580,"byte_end":216653,"line_start":358,"line_end":358,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1314},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":217532,"byte_end":217537,"line_start":393,"line_end":393,"column_start":12,"column_end":17},"name":"Group","qualname":"::groupbylazy::Group","value":"Group {  }","parent":null,"children":[{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1321}],"decl_id":null,"docs":" An iterator for the elements in a single group.","sig":null,"attributes":[{"value":"/ An iterator for the elements in a single group.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":217425,"byte_end":217476,"line_start":390,"line_end":390,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":217477,"byte_end":217480,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":217481,"byte_end":217520,"line_start":392,"line_end":392,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1337},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":219472,"byte_end":219482,"line_start":465,"line_end":465,"column_start":12,"column_end":22},"name":"IntoChunks","qualname":"::groupbylazy::IntoChunks","value":"IntoChunks {  }","parent":null,"children":[{"krate":0,"index":1339},{"krate":0,"index":1340}],"decl_id":null,"docs":" `ChunkLazy` is the storage for a lazy chunking operation.","sig":null,"attributes":[{"value":"/ `ChunkLazy` is the storage for a lazy chunking operation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":218809,"byte_end":218870,"line_start":451,"line_end":451,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":218871,"byte_end":218874,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ `IntoChunks` behaves just like `GroupBy`: it is iterable, and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":218875,"byte_end":218940,"line_start":453,"line_end":453,"column_start":1,"column_end":66}},{"value":"/ it only buffers if several chunk iterators are alive at the same time.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":218941,"byte_end":219015,"line_start":454,"line_end":454,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":219016,"byte_end":219019,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ This type implements `IntoIterator` (it is **not** an iterator","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":219020,"byte_end":219086,"line_start":456,"line_end":456,"column_start":1,"column_end":67}},{"value":"/ itself), because the chunk iterators need to borrow from this","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":219087,"byte_end":219152,"line_start":457,"line_end":457,"column_start":1,"column_end":66}},{"value":"/ value. It should be stored in a local variable or temporary and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":219153,"byte_end":219220,"line_start":458,"line_end":458,"column_start":1,"column_end":68}},{"value":"/ iterated.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":219221,"byte_end":219234,"line_start":459,"line_end":459,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":219235,"byte_end":219238,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `Chunk`, each chunk's iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":219239,"byte_end":219299,"line_start":461,"line_end":461,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":219300,"byte_end":219303,"line_start":462,"line_end":462,"column_start":1,"column_end":4}},{"value":"/ See [`.chunks()`](../trait.Itertools.html#method.chunks) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":219304,"byte_end":219386,"line_start":463,"line_end":463,"column_start":1,"column_end":83}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":219387,"byte_end":219460,"line_start":464,"line_end":464,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1351},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":220605,"byte_end":220611,"line_start":510,"line_end":510,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::groupbylazy::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":1354}],"decl_id":null,"docs":" An iterator that yields the Chunk iterators.","sig":null,"attributes":[{"value":"/ An iterator that yields the Chunk iterators.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":220342,"byte_end":220390,"line_start":504,"line_end":504,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":220391,"byte_end":220394,"line_start":505,"line_end":505,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `Chunk`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":220395,"byte_end":220432,"line_start":506,"line_end":506,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":220433,"byte_end":220436,"line_start":507,"line_end":507,"column_start":1,"column_end":4}},{"value":"/ See [`.chunks()`](../trait.Itertools.html#method.chunks) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":220437,"byte_end":220519,"line_start":508,"line_end":508,"column_start":1,"column_end":83}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":220520,"byte_end":220593,"line_start":509,"line_end":509,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1361},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":221322,"byte_end":221327,"line_start":541,"line_end":541,"column_start":12,"column_end":17},"name":"Chunk","qualname":"::groupbylazy::Chunk","value":"Chunk {  }","parent":null,"children":[{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366}],"decl_id":null,"docs":" An iterator for the elements in a single chunk.","sig":null,"attributes":[{"value":"/ An iterator for the elements in a single chunk.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":221215,"byte_end":221266,"line_start":538,"line_end":538,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":221267,"byte_end":221270,"line_start":539,"line_end":539,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":221271,"byte_end":221310,"line_start":540,"line_end":540,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":1383},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs","byte_start":221985,"byte_end":222003,"line_start":4,"line_end":4,"column_start":11,"column_end":29},"name":"IntersperseElement","qualname":"::intersperse::IntersperseElement","value":"IntersperseElement<Item>","parent":null,"children":[{"krate":0,"index":1385}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1385},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs","byte_start":222019,"byte_end":222027,"line_start":5,"line_end":5,"column_start":8,"column_end":16},"name":"generate","qualname":"::intersperse::IntersperseElement::generate","value":"pub fn generate(&mut Self) -> Item","parent":{"krate":0,"index":1383},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3417},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs","byte_start":222086,"byte_end":222110,"line_start":9,"line_end":9,"column_start":12,"column_end":36},"name":"IntersperseElementSimple","qualname":"::intersperse::IntersperseElementSimple","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1389},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs","byte_start":222560,"byte_end":222571,"line_start":25,"line_end":25,"column_start":10,"column_end":21},"name":"Intersperse","qualname":"::intersperse::Intersperse","value":"IntersperseWith<I, IntersperseElementSimple<<I as Iterator>::Item>>","parent":null,"children":[],"decl_id":null,"docs":" An iterator adaptor to insert a particular value\n between each element of the adapted iterator.","sig":null,"attributes":[{"value":"/ An iterator adaptor to insert a particular value","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs","byte_start":222274,"byte_end":222326,"line_start":17,"line_end":17,"column_start":1,"column_end":53}},{"value":"/ between each element of the adapted iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs","byte_start":222327,"byte_end":222376,"line_start":18,"line_end":18,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs","byte_start":222377,"byte_end":222380,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs","byte_start":222381,"byte_end":222419,"line_start":20,"line_end":20,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs","byte_start":222420,"byte_end":222423,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs","byte_start":222424,"byte_end":222453,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs","byte_start":222454,"byte_end":222457,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ See [`.intersperse()`](../trait.Itertools.html#method.intersperse) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs","byte_start":222458,"byte_end":222550,"line_start":24,"line_end":24,"column_start":1,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":3427},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs","byte_start":223375,"byte_end":223390,"line_start":50,"line_end":50,"column_start":12,"column_end":27},"name":"IntersperseWith","qualname":"::intersperse::IntersperseWith","value":"IntersperseWith {  }","parent":null,"children":[{"krate":0,"index":3430},{"krate":0,"index":3431},{"krate":0,"index":3432}],"decl_id":null,"docs":" An iterator adaptor to insert a particular value created by a function\n between each element of the adapted iterator.","sig":null,"attributes":[{"value":"/ An iterator adaptor to insert a particular value created by a function","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs","byte_start":222957,"byte_end":223031,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ between each element of the adapted iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs","byte_start":223032,"byte_end":223081,"line_start":41,"line_end":41,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs","byte_start":223082,"byte_end":223085,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs","byte_start":223086,"byte_end":223124,"line_start":43,"line_end":43,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs","byte_start":223125,"byte_end":223128,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs","byte_start":223129,"byte_end":223158,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs","byte_start":223159,"byte_end":223162,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ See [`.intersperse_with()`](../trait.Itertools.html#method.intersperse_with) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs","byte_start":223163,"byte_end":223265,"line_start":47,"line_end":47,"column_start":1,"column_end":103}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs","byte_start":223266,"byte_end":223339,"line_start":48,"line_end":48,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":1450},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":228578,"byte_end":228584,"line_start":103,"line_end":103,"column_start":10,"column_end":16},"name":"KMerge","qualname":"::kmerge_impl::KMerge","value":"KMergeBy<I, KMergeByLt>","parent":null,"children":[],"decl_id":null,"docs":" An iterator adaptor that merges an abitrary number of base iterators in ascending order.\n If all base iterators are sorted (ascending), the result is sorted.","sig":null,"attributes":[{"value":"/ An iterator adaptor that merges an abitrary number of base iterators in ascending order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":228199,"byte_end":228291,"line_start":96,"line_end":96,"column_start":1,"column_end":93}},{"value":"/ If all base iterators are sorted (ascending), the result is sorted.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":228292,"byte_end":228363,"line_start":97,"line_end":97,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":228364,"byte_end":228367,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":228368,"byte_end":228407,"line_start":99,"line_end":99,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":228408,"byte_end":228411,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ See [`.kmerge()`](../trait.Itertools.html#method.kmerge) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":228412,"byte_end":228494,"line_start":101,"line_end":101,"column_start":1,"column_end":83}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":228495,"byte_end":228568,"line_start":102,"line_end":102,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":1452},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":228626,"byte_end":228641,"line_start":105,"line_end":105,"column_start":11,"column_end":26},"name":"KMergePredicate","qualname":"::kmerge_impl::KMergePredicate","value":"KMergePredicate<T>","parent":null,"children":[{"krate":0,"index":1454}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1454},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":228654,"byte_end":228665,"line_start":106,"line_end":106,"column_start":8,"column_end":19},"name":"kmerge_pred","qualname":"::kmerge_impl::KMergePredicate::kmerge_pred","value":"pub fn kmerge_pred(&mut Self, &T, &T) -> bool","parent":{"krate":0,"index":1452},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3449},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":228731,"byte_end":228741,"line_start":110,"line_end":110,"column_start":12,"column_end":22},"name":"KMergeByLt","qualname":"::kmerge_impl::KMergeByLt","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1462},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":229337,"byte_end":229343,"line_start":136,"line_end":136,"column_start":8,"column_end":14},"name":"kmerge","qualname":"::kmerge_impl::kmerge","value":"pub fn kmerge<I>(I) -> KMerge<<I::Item as IntoIterator>::IntoIter> where\nI: IntoIterator, I::Item: IntoIterator,\n<<I as IntoIterator>::Item as IntoIterator>::Item: PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that merges elements of the contained iterators using\n the ordering function.","sig":null,"attributes":[{"value":"/ Create an iterator that merges elements of the contained iterators using","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":229018,"byte_end":229094,"line_start":124,"line_end":124,"column_start":1,"column_end":77}},{"value":"/ the ordering function.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":229095,"byte_end":229121,"line_start":125,"line_end":125,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":229122,"byte_end":229125,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `iterable.into_iter().kmerge()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":229126,"byte_end":229176,"line_start":127,"line_end":127,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":229177,"byte_end":229180,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":229181,"byte_end":229188,"line_start":129,"line_end":129,"column_start":1,"column_end":8}},{"value":"/ use itertools::kmerge;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":229189,"byte_end":229215,"line_start":130,"line_end":130,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":229216,"byte_end":229219,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ for elt in kmerge(vec![vec![0, 2, 4], vec![1, 3, 5], vec![6, 7]]) {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":229220,"byte_end":229291,"line_start":132,"line_end":132,"column_start":1,"column_end":72}},{"value":"/     /* loop body */","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":229292,"byte_end":229315,"line_start":133,"line_end":133,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":229316,"byte_end":229321,"line_start":134,"line_end":134,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":229322,"byte_end":229329,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1464},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":229918,"byte_end":229926,"line_start":152,"line_end":152,"column_start":12,"column_end":20},"name":"KMergeBy","qualname":"::kmerge_impl::KMergeBy","value":"KMergeBy {  }","parent":null,"children":[{"krate":0,"index":1467},{"krate":0,"index":1468}],"decl_id":null,"docs":" An iterator adaptor that merges an abitrary number of base iterators\n according to an ordering function.","sig":null,"attributes":[{"value":"/ An iterator adaptor that merges an abitrary number of base iterators","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":229580,"byte_end":229652,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ according to an ordering function.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":229653,"byte_end":229691,"line_start":145,"line_end":145,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":229692,"byte_end":229695,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":229696,"byte_end":229735,"line_start":147,"line_end":147,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":229736,"byte_end":229739,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ See [`.kmerge_by()`](../trait.Itertools.html#method.kmerge_by) for more","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":229740,"byte_end":229815,"line_start":149,"line_end":149,"column_start":1,"column_end":76}},{"value":"/ information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":229816,"byte_end":229832,"line_start":150,"line_end":150,"column_start":1,"column_end":17}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":229833,"byte_end":229906,"line_start":151,"line_end":151,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":1472},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":230305,"byte_end":230314,"line_start":169,"line_end":169,"column_start":8,"column_end":17},"name":"kmerge_by","qualname":"::kmerge_impl::kmerge_by","value":"pub fn kmerge_by<I, F>(I, F)\n-> KMergeBy<<I::Item as IntoIterator>::IntoIter, F> where I: IntoIterator,\nI::Item: IntoIterator,\nF: KMergePredicate<<<I as IntoIterator>::Item as IntoIterator>::Item>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that merges elements of the contained iterators.","sig":null,"attributes":[{"value":"/ Create an iterator that merges elements of the contained iterators.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":230159,"byte_end":230230,"line_start":166,"line_end":166,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":230231,"byte_end":230234,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `iterable.into_iter().kmerge_by(less_than)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":230235,"byte_end":230297,"line_start":168,"line_end":168,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":1526},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/merge_join.rs","byte_start":233491,"byte_end":233504,"line_start":11,"line_end":11,"column_start":8,"column_end":21},"name":"merge_join_by","qualname":"::merge_join::merge_join_by","value":"pub fn merge_join_by<I, J, F>(I, J, F)\n-> MergeJoinBy<I::IntoIter, J::IntoIter, F> where I: IntoIterator,\nJ: IntoIterator, F: FnMut(&I::Item, &J::Item) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator adaptor that merge-joins items from the two base iterators in ascending order.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that merge-joins items from the two base iterators in ascending order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/merge_join.rs","byte_start":233284,"byte_end":233385,"line_start":8,"line_end":8,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/merge_join.rs","byte_start":233386,"byte_end":233389,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ See [`.merge_join_by()`](trait.Itertools.html#method.merge_join_by) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/merge_join.rs","byte_start":233390,"byte_end":233483,"line_start":10,"line_end":10,"column_start":1,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":1530},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/merge_join.rs","byte_start":234123,"byte_end":234134,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"MergeJoinBy","qualname":"::merge_join::MergeJoinBy","value":"MergeJoinBy {  }","parent":null,"children":[{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1536}],"decl_id":null,"docs":" An iterator adaptor that merge-joins items from the two base iterators in ascending order.","sig":null,"attributes":[{"value":"/ An iterator adaptor that merge-joins items from the two base iterators in ascending order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/merge_join.rs","byte_start":233842,"byte_end":233936,"line_start":24,"line_end":24,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/merge_join.rs","byte_start":233937,"byte_end":233940,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ See [`.merge_join_by()`](../trait.Itertools.html#method.merge_join_by) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/merge_join.rs","byte_start":233941,"byte_end":234037,"line_start":26,"line_end":26,"column_start":1,"column_end":97}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/merge_join.rs","byte_start":234038,"byte_end":234111,"line_start":27,"line_end":27,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3470},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs","byte_start":239164,"byte_end":239174,"line_start":7,"line_end":7,"column_start":5,"column_end":15},"name":"NoElements","qualname":"::minmax::MinMaxResult::NoElements","value":"MinMaxResult::NoElements","parent":{"krate":0,"index":3468},"children":[],"decl_id":null,"docs":" Empty iterator\n","sig":null,"attributes":[{"value":"/ Empty iterator","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs","byte_start":239141,"byte_end":239159,"line_start":6,"line_end":6,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3472},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs","byte_start":239256,"byte_end":239266,"line_start":10,"line_end":10,"column_start":5,"column_end":15},"name":"OneElement","qualname":"::minmax::MinMaxResult::OneElement","value":"MinMaxResult::OneElement(T)","parent":{"krate":0,"index":3468},"children":[],"decl_id":null,"docs":" Iterator with one element, so the minimum and maximum are the same\n","sig":null,"attributes":[{"value":"/ Iterator with one element, so the minimum and maximum are the same","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs","byte_start":239181,"byte_end":239251,"line_start":9,"line_end":9,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3475},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs","byte_start":239379,"byte_end":239385,"line_start":14,"line_end":14,"column_start":5,"column_end":11},"name":"MinMax","qualname":"::minmax::MinMaxResult::MinMax","value":"MinMaxResult::MinMax(T, T)","parent":{"krate":0,"index":3468},"children":[],"decl_id":null,"docs":" More than one element in the iterator, the first element is not larger\n than the second\n","sig":null,"attributes":[{"value":"/ More than one element in the iterator, the first element is not larger","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs","byte_start":239276,"byte_end":239350,"line_start":12,"line_end":12,"column_start":5,"column_end":79}},{"value":"/ than the second","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs","byte_start":239355,"byte_end":239374,"line_start":13,"line_end":13,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":3468},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs","byte_start":239119,"byte_end":239131,"line_start":5,"line_end":5,"column_start":10,"column_end":22},"name":"MinMaxResult","qualname":"::minmax::MinMaxResult","value":"pub enum MinMaxResult<T> { NoElements, OneElement(T), MinMax(T, T), }","parent":null,"children":[{"krate":0,"index":3470},{"krate":0,"index":3472},{"krate":0,"index":3475}],"decl_id":null,"docs":" `MinMaxResult` is an enum returned by `minmax`. See `Itertools::minmax()` for\n more detail.\n","sig":null,"attributes":[{"value":"/ `MinMaxResult` is an enum returned by `minmax`. See `Itertools::minmax()` for","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs","byte_start":238970,"byte_end":239051,"line_start":2,"line_end":2,"column_start":1,"column_end":82}},{"value":"/ more detail.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs","byte_start":239052,"byte_end":239068,"line_start":3,"line_end":3,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1558},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs","byte_start":240203,"byte_end":240214,"line_start":38,"line_end":38,"column_start":12,"column_end":23},"name":"into_option","qualname":"<MinMaxResult<T>>::into_option","value":"pub fn into_option(Self) -> Option<(T, T)>","parent":null,"children":[],"decl_id":null,"docs":" `into_option` creates an `Option` of type `(T, T)`. The returned `Option`\n has variant `None` if and only if the `MinMaxResult` has variant\n `NoElements`. Otherwise `Some((x, y))` is returned where `x <= y`.\n If the `MinMaxResult` has variant `OneElement(x)`, performing this\n operation will make one clone of `x`.","sig":null,"attributes":[{"value":"/ `into_option` creates an `Option` of type `(T, T)`. The returned `Option`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs","byte_start":239432,"byte_end":239509,"line_start":18,"line_end":18,"column_start":5,"column_end":82}},{"value":"/ has variant `None` if and only if the `MinMaxResult` has variant","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs","byte_start":239514,"byte_end":239582,"line_start":19,"line_end":19,"column_start":5,"column_end":73}},{"value":"/ `NoElements`. Otherwise `Some((x, y))` is returned where `x <= y`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs","byte_start":239587,"byte_end":239657,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ If the `MinMaxResult` has variant `OneElement(x)`, performing this","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs","byte_start":239662,"byte_end":239732,"line_start":21,"line_end":21,"column_start":5,"column_end":75}},{"value":"/ operation will make one clone of `x`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs","byte_start":239737,"byte_end":239778,"line_start":22,"line_end":22,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs","byte_start":239783,"byte_end":239786,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs","byte_start":239791,"byte_end":239805,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs","byte_start":239810,"byte_end":239813,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs","byte_start":239818,"byte_end":239825,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ use itertools::MinMaxResult::{self, NoElements, OneElement, MinMax};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs","byte_start":239830,"byte_end":239902,"line_start":27,"line_end":27,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs","byte_start":239907,"byte_end":239910,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let r: MinMaxResult<i32> = NoElements;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs","byte_start":239915,"byte_end":239957,"line_start":29,"line_end":29,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(r.into_option(), None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs","byte_start":239962,"byte_end":240000,"line_start":30,"line_end":30,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs","byte_start":240005,"byte_end":240008,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ let r = OneElement(1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs","byte_start":240013,"byte_end":240039,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(r.into_option(), Some((1, 1)));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs","byte_start":240044,"byte_end":240090,"line_start":33,"line_end":33,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs","byte_start":240095,"byte_end":240098,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ let r = MinMax(1, 2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs","byte_start":240103,"byte_end":240128,"line_start":35,"line_end":35,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(r.into_option(), Some((1, 2)));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs","byte_start":240133,"byte_end":240179,"line_start":36,"line_end":36,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs","byte_start":240184,"byte_end":240191,"line_start":37,"line_end":37,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3493},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs","byte_start":243028,"byte_end":243037,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"MultiPeek","qualname":"::multipeek_impl::MultiPeek","value":"MultiPeek {  }","parent":null,"children":[{"krate":0,"index":3495},{"krate":0,"index":3496},{"krate":0,"index":3497}],"decl_id":null,"docs":" See [`multipeek()`](../fn.multipeek.html) for more information.\n","sig":null,"attributes":[{"value":"/ See [`multipeek()`](../fn.multipeek.html) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs","byte_start":242925,"byte_end":242992,"line_start":6,"line_end":6,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1577},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs","byte_start":243263,"byte_end":243272,"line_start":18,"line_end":18,"column_start":8,"column_end":17},"name":"multipeek","qualname":"::multipeek_impl::multipeek","value":"pub fn multipeek<I>(I) -> MultiPeek<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" An iterator adaptor that allows the user to peek at multiple `.next()`\n values without advancing the base iterator.\n","sig":null,"attributes":[{"value":"/ An iterator adaptor that allows the user to peek at multiple `.next()`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs","byte_start":243133,"byte_end":243207,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ values without advancing the base iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs","byte_start":243208,"byte_end":243255,"line_start":17,"line_end":17,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1581},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs","byte_start":243554,"byte_end":243564,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"reset_peek","qualname":"<MultiPeek<I>>::reset_peek","value":"pub fn reset_peek(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reset the peeking “cursor”\n","sig":null,"attributes":[{"value":"/ Reset the peeking “cursor”","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs","byte_start":243508,"byte_end":243542,"line_start":31,"line_end":31,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1584},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs","byte_start":243828,"byte_end":243832,"line_start":41,"line_end":41,"column_start":12,"column_end":16},"name":"peek","qualname":"<MultiPeek<I>>::peek","value":"pub fn peek(&mut Self) -> Option<&I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Works exactly like `.next()` with the only difference that it doesn't\n advance itself. `.peek()` can be called multiple times, to peek\n further ahead.\n","sig":null,"attributes":[{"value":"/ Works exactly like `.next()` with the only difference that it doesn't","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs","byte_start":243648,"byte_end":243721,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ advance itself. `.peek()` can be called multiple times, to peek","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs","byte_start":243726,"byte_end":243793,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"/ further ahead.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs","byte_start":243798,"byte_end":243816,"line_start":40,"line_end":40,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":3504},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/pad_tail.rs","byte_start":245577,"byte_end":245585,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"PadUsing","qualname":"::pad_tail::PadUsing","value":"PadUsing {  }","parent":null,"children":[{"krate":0,"index":3507},{"krate":0,"index":3508},{"krate":0,"index":3509},{"krate":0,"index":3510}],"decl_id":null,"docs":" An iterator adaptor that pads a sequence to a minimum length by filling\n missing elements using a closure.","sig":null,"attributes":[{"value":"/ An iterator adaptor that pads a sequence to a minimum length by filling","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/pad_tail.rs","byte_start":245224,"byte_end":245299,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ missing elements using a closure.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/pad_tail.rs","byte_start":245300,"byte_end":245337,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/pad_tail.rs","byte_start":245338,"byte_end":245341,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/pad_tail.rs","byte_start":245342,"byte_end":245381,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/pad_tail.rs","byte_start":245382,"byte_end":245385,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See [`.pad_using()`](../trait.Itertools.html#method.pad_using) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/pad_tail.rs","byte_start":245386,"byte_end":245474,"line_start":9,"line_end":9,"column_start":1,"column_end":89}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/pad_tail.rs","byte_start":245492,"byte_end":245565,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":3515},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":247491,"byte_end":247498,"line_start":8,"line_end":8,"column_start":12,"column_end":19},"name":"PeekNth","qualname":"::peek_nth::PeekNth","value":"PeekNth {  }","parent":null,"children":[{"krate":0,"index":3517},{"krate":0,"index":3518}],"decl_id":null,"docs":" See [`peek_nth()`](../fn.peek_nth.html) for more information.\n","sig":null,"attributes":[{"value":"/ See [`peek_nth()`](../fn.peek_nth.html) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":247390,"byte_end":247455,"line_start":6,"line_end":6,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":1633},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":247965,"byte_end":247973,"line_start":23,"line_end":23,"column_start":8,"column_end":16},"name":"peek_nth","qualname":"::peek_nth::peek_nth","value":"pub fn peek_nth<I>(I) -> PeekNth<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" A drop-in replacement for `std::iter::Peekable` which adds a `peek_nth`\n method allowing the user to `peek` at a value several iterations forward\n without advancing the base iterator.","sig":null,"attributes":[{"value":"/ A drop-in replacement for `std::iter::Peekable` which adds a `peek_nth`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":247577,"byte_end":247652,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ method allowing the user to `peek` at a value several iterations forward","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":247653,"byte_end":247729,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ without advancing the base iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":247730,"byte_end":247770,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":247771,"byte_end":247774,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This differs from `multipeek` in that subsequent calls to `peek` or","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":247775,"byte_end":247846,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ `peek_nth` will always return the same value until `next` is called","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":247847,"byte_end":247918,"line_start":21,"line_end":21,"column_start":1,"column_end":72}},{"value":"/ (making `reset_peek` unnecessary).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":247919,"byte_end":247957,"line_start":22,"line_end":22,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1637},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":248264,"byte_end":248268,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"peek","qualname":"<PeekNth<I>>::peek","value":"pub fn peek(&mut Self) -> Option<&I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Works exactly like the `peek` method in `std::iter::Peekable`\n","sig":null,"attributes":[{"value":"/ Works exactly like the `peek` method in `std::iter::Peekable`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":248187,"byte_end":248252,"line_start":37,"line_end":37,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1638},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":249093,"byte_end":249101,"line_start":65,"line_end":65,"column_start":12,"column_end":20},"name":"peek_nth","qualname":"<PeekNth<I>>::peek_nth","value":"pub fn peek_nth(&mut Self, usize) -> Option<&I::Item>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the `nth` value without advancing the iterator.","sig":null,"attributes":[{"value":"/ Returns a reference to the `nth` value without advancing the iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":248338,"byte_end":248412,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":248417,"byte_end":248420,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":248425,"byte_end":248439,"line_start":44,"line_end":44,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":248444,"byte_end":248447,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":248452,"byte_end":248468,"line_start":46,"line_end":46,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":248473,"byte_end":248476,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":248481,"byte_end":248492,"line_start":48,"line_end":48,"column_start":5,"column_end":16}},{"value":"/ use itertools::peek_nth;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":248497,"byte_end":248525,"line_start":49,"line_end":49,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":248530,"byte_end":248533,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ let xs = vec![1,2,3];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":248538,"byte_end":248563,"line_start":51,"line_end":51,"column_start":5,"column_end":30}},{"value":"/ let mut iter = peek_nth(xs.iter());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":248568,"byte_end":248607,"line_start":52,"line_end":52,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":248612,"byte_end":248615,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iter.peek_nth(0), Some(&&1));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":248620,"byte_end":248664,"line_start":54,"line_end":54,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(iter.next(), Some(&1));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":248669,"byte_end":248707,"line_start":55,"line_end":55,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":248712,"byte_end":248715,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ // The iterator does not advance even if we call `peek_nth` multiple times","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":248720,"byte_end":248798,"line_start":57,"line_end":57,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(iter.peek_nth(0), Some(&&2));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":248803,"byte_end":248847,"line_start":58,"line_end":58,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(iter.peek_nth(1), Some(&&3));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":248852,"byte_end":248896,"line_start":59,"line_end":59,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(iter.next(), Some(&2));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":248901,"byte_end":248939,"line_start":60,"line_end":60,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":248944,"byte_end":248947,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ // Calling `peek_nth` past the end of the iterator will return `None`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":248952,"byte_end":249025,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(iter.peek_nth(1), None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":249030,"byte_end":249069,"line_start":63,"line_end":63,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":249074,"byte_end":249081,"line_start":64,"line_end":64,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":1662},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs","byte_start":250481,"byte_end":250492,"line_start":14,"line_end":14,"column_start":11,"column_end":22},"name":"PeekingNext","qualname":"::peeking_take_while::PeekingNext","value":"PeekingNext: Iterator","parent":null,"children":[{"krate":0,"index":1663}],"decl_id":null,"docs":" An iterator that allows peeking at an element before deciding to accept it.","sig":null,"attributes":[{"value":"/ An iterator that allows peeking at an element before deciding to accept it.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs","byte_start":250075,"byte_end":250154,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs","byte_start":250155,"byte_end":250158,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ See [`.peeking_take_while()`](trait.Itertools.html#method.peeking_take_while)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs","byte_start":250159,"byte_end":250240,"line_start":8,"line_end":8,"column_start":1,"column_end":82}},{"value":"/ for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs","byte_start":250241,"byte_end":250266,"line_start":9,"line_end":9,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs","byte_start":250267,"byte_end":250270,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is implemented by peeking adaptors like peekable and put back,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs","byte_start":250271,"byte_end":250342,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ but also by a few iterators that can be peeked natively, like the slice’s","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs","byte_start":250343,"byte_end":250422,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ by reference iterator (`std::slice::Iter`).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs","byte_start":250423,"byte_end":250470,"line_start":13,"line_end":13,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1663},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs","byte_start":250676,"byte_end":250688,"line_start":18,"line_end":18,"column_start":8,"column_end":20},"name":"peeking_next","qualname":"::peeking_take_while::PeekingNext::peeking_next","value":"pub fn peeking_next<F>(&mut Self, F) -> Option<Self::Item> where\nF: FnOnce(&Self::Item) -> bool","parent":{"krate":0,"index":1662},"children":[],"decl_id":null,"docs":" Pass a reference to the next iterator element to the closure `accept`;\n if `accept` returns true, return it as the next element,\n else None.\n","sig":null,"attributes":[{"value":"/ Pass a reference to the next iterator element to the closure `accept`;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs","byte_start":250510,"byte_end":250584,"line_start":15,"line_end":15,"column_start":5,"column_end":79}},{"value":"/ if `accept` returns true, return it as the next element,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs","byte_start":250589,"byte_end":250649,"line_start":16,"line_end":16,"column_start":5,"column_end":65}},{"value":"/ else None.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs","byte_start":250654,"byte_end":250668,"line_start":17,"line_end":17,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":1677},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs","byte_start":252209,"byte_end":252225,"line_start":79,"line_end":79,"column_start":12,"column_end":28},"name":"PeekingTakeWhile","qualname":"::peeking_take_while::PeekingTakeWhile","value":"PeekingTakeWhile {  }","parent":null,"children":[{"krate":0,"index":1681},{"krate":0,"index":1682}],"decl_id":null,"docs":" An iterator adaptor that takes items while a closure returns `true`.","sig":null,"attributes":[{"value":"/ An iterator adaptor that takes items while a closure returns `true`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs","byte_start":251936,"byte_end":252008,"line_start":74,"line_end":74,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs","byte_start":252009,"byte_end":252012,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ See [`.peeking_take_while()`](../trait.Itertools.html#method.peeking_take_while)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs","byte_start":252013,"byte_end":252097,"line_start":76,"line_end":76,"column_start":1,"column_end":85}},{"value":"/ for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs","byte_start":252098,"byte_end":252123,"line_start":77,"line_end":77,"column_start":1,"column_end":26}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs","byte_start":252124,"byte_end":252197,"line_start":78,"line_end":78,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1707},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs","byte_start":254764,"byte_end":254776,"line_start":13,"line_end":13,"column_start":12,"column_end":24},"name":"Permutations","qualname":"::permutations::Permutations","value":"Permutations {  }","parent":null,"children":[{"krate":0,"index":1709},{"krate":0,"index":1710}],"decl_id":null,"docs":" An iterator adaptor that iterates through all the `k`-permutations of the\n elements from an iterator.","sig":null,"attributes":[{"value":"/ An iterator adaptor that iterates through all the `k`-permutations of the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs","byte_start":254467,"byte_end":254544,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/ elements from an iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs","byte_start":254545,"byte_end":254575,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs","byte_start":254576,"byte_end":254579,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ See [`.permutations()`](../trait.Itertools.html#method.permutations) for","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs","byte_start":254580,"byte_end":254656,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs","byte_start":254657,"byte_end":254678,"line_start":11,"line_end":11,"column_start":1,"column_end":22}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs","byte_start":254679,"byte_end":254752,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1768},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/powerset.rs","byte_start":262887,"byte_end":262895,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"Powerset","qualname":"::powerset::Powerset","value":"Powerset {  }","parent":null,"children":[{"krate":0,"index":1770},{"krate":0,"index":1771}],"decl_id":null,"docs":" An iterator to iterate through the powerset of the elements from an iterator.","sig":null,"attributes":[{"value":"/ An iterator to iterate through the powerset of the elements from an iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/powerset.rs","byte_start":262625,"byte_end":262706,"line_start":8,"line_end":8,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/powerset.rs","byte_start":262707,"byte_end":262710,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ See [`.powerset()`](../trait.Itertools.html#method.powerset) for more","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/powerset.rs","byte_start":262711,"byte_end":262784,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/ information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/powerset.rs","byte_start":262785,"byte_end":262801,"line_start":11,"line_end":11,"column_start":1,"column_end":17}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/powerset.rs","byte_start":262802,"byte_end":262875,"line_start":12,"line_end":12,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":3600},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":265081,"byte_end":265095,"line_start":9,"line_end":9,"column_start":12,"column_end":26},"name":"ProcessResults","qualname":"::process_results_impl::ProcessResults","value":"ProcessResults {  }","parent":null,"children":[{"krate":0,"index":3604},{"krate":0,"index":3605}],"decl_id":null,"docs":" An iterator that produces only the `T` values as long as the\n inner iterator produces `Ok(T)`.","sig":null,"attributes":[{"value":"/ An iterator that produces only the `T` values as long as the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":264773,"byte_end":264837,"line_start":2,"line_end":2,"column_start":1,"column_end":65}},{"value":"/ inner iterator produces `Ok(T)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":264838,"byte_end":264874,"line_start":3,"line_end":3,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":264875,"byte_end":264878,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Used by [`process_results`](../fn.process_results.html), see its docs","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":264879,"byte_end":264952,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":264953,"byte_end":264978,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":264979,"byte_end":265052,"line_start":7,"line_end":7,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":1793},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":266976,"byte_end":266991,"line_start":70,"line_end":70,"column_start":8,"column_end":23},"name":"process_results","qualname":"::process_results_impl::process_results","value":"pub fn process_results<I, F, T, E, R>(I, F) -> Result<R, E> where\nI: IntoIterator<Item = Result<T, E>>,\nF: FnOnce(ProcessResults<, I::IntoIter, E>) -> R","parent":null,"children":[],"decl_id":null,"docs":" “Lift” a function of the values of an iterator so that it can process\n an iterator of `Result` values instead.","sig":null,"attributes":[{"value":"/ “Lift” a function of the values of an iterator so that it can process","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":265643,"byte_end":265720,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"/ an iterator of `Result` values instead.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":265721,"byte_end":265764,"line_start":36,"line_end":36,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":265765,"byte_end":265768,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ `iterable` is an iterator or iterable with `Result<T, E>` elements, where","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":265769,"byte_end":265846,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ `T` is the value type and `E` the error type.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":265847,"byte_end":265896,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":265897,"byte_end":265900,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ `processor` is a closure that receives an adapted version of the iterable","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":265901,"byte_end":265978,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ as the only argument — the adapted iterator produces elements of type `T`,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":265979,"byte_end":266059,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/ as long as the original iterator produces `Ok` values.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":266060,"byte_end":266118,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":266119,"byte_end":266122,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ If the original iterable produces an error at any point, the adapted","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":266123,"byte_end":266195,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ iterator ends and the `process_results` function will return the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":266196,"byte_end":266264,"line_start":46,"line_end":46,"column_start":1,"column_end":69}},{"value":"/ error iself.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":266265,"byte_end":266281,"line_start":47,"line_end":47,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":266282,"byte_end":266285,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Otherwise, the return value from the closure is returned wrapped","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":266286,"byte_end":266354,"line_start":49,"line_end":49,"column_start":1,"column_end":69}},{"value":"/ inside `Ok`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":266355,"byte_end":266371,"line_start":50,"line_end":50,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":266372,"byte_end":266375,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":266376,"byte_end":266389,"line_start":52,"line_end":52,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":266390,"byte_end":266393,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":266394,"byte_end":266401,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use itertools::process_results;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":266402,"byte_end":266437,"line_start":55,"line_end":55,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":266438,"byte_end":266441,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ type R = Result<i32, &'static str>;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":266442,"byte_end":266481,"line_start":57,"line_end":57,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":266482,"byte_end":266485,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ let first_values: Vec<R> = vec![Ok(1), Ok(0), Ok(3)];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":266486,"byte_end":266543,"line_start":59,"line_end":59,"column_start":1,"column_end":58}},{"value":"/ let second_values: Vec<R> = vec![Ok(2), Ok(1), Err(\"overflow\")];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":266544,"byte_end":266612,"line_start":60,"line_end":60,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":266613,"byte_end":266616,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // “Lift” the iterator .max() method to work on the values in Results using process_results","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":266617,"byte_end":266716,"line_start":62,"line_end":62,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":266717,"byte_end":266720,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ let first_max = process_results(first_values, |iter| iter.max().unwrap_or(0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":266721,"byte_end":266803,"line_start":64,"line_end":64,"column_start":1,"column_end":83}},{"value":"/ let second_max = process_results(second_values, |iter| iter.max().unwrap_or(0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":266804,"byte_end":266888,"line_start":65,"line_end":65,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":266889,"byte_end":266892,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(first_max, Ok(3));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":266893,"byte_end":266926,"line_start":67,"line_end":67,"column_start":1,"column_end":34}},{"value":"/ assert!(second_max.is_err());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":266927,"byte_end":266960,"line_start":68,"line_end":68,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":266961,"byte_end":266968,"line_start":69,"line_end":69,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3611},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs","byte_start":267538,"byte_end":267546,"line_start":10,"line_end":10,"column_start":12,"column_end":20},"name":"PutBackN","qualname":"::put_back_n_impl::PutBackN","value":"PutBackN {  }","parent":null,"children":[{"krate":0,"index":3613},{"krate":0,"index":3614}],"decl_id":null,"docs":" An iterator adaptor that allows putting multiple\n items in front of the iterator.","sig":null,"attributes":[{"value":"/ An iterator adaptor that allows putting multiple","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs","byte_start":267370,"byte_end":267422,"line_start":5,"line_end":5,"column_start":1,"column_end":53}},{"value":"/ items in front of the iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs","byte_start":267423,"byte_end":267458,"line_start":6,"line_end":6,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs","byte_start":267459,"byte_end":267462,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs","byte_start":267463,"byte_end":267502,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1807},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs","byte_start":267749,"byte_end":267759,"line_start":19,"line_end":19,"column_start":8,"column_end":18},"name":"put_back_n","qualname":"::put_back_n_impl::put_back_n","value":"pub fn put_back_n<I>(I) -> PutBackN<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator where you can put back multiple values to the front\n of the iteration.","sig":null,"attributes":[{"value":"/ Create an iterator where you can put back multiple values to the front","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs","byte_start":267601,"byte_end":267675,"line_start":15,"line_end":15,"column_start":1,"column_end":75}},{"value":"/ of the iteration.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs","byte_start":267676,"byte_end":267697,"line_start":16,"line_end":16,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs","byte_start":267698,"byte_end":267701,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `I::Item`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs","byte_start":267702,"byte_end":267741,"line_start":18,"line_end":18,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1811},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs","byte_start":268342,"byte_end":268350,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"put_back","qualname":"<PutBackN<I>>::put_back","value":"pub fn put_back(&mut Self, I::Item)","parent":null,"children":[],"decl_id":null,"docs":" Puts x in front of the iterator.\n The values are yielded in order of the most recently put back\n values first.","sig":null,"attributes":[{"value":"/ Puts x in front of the iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs","byte_start":267950,"byte_end":267986,"line_start":29,"line_end":29,"column_start":5,"column_end":41}},{"value":"/ The values are yielded in order of the most recently put back","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs","byte_start":267991,"byte_end":268056,"line_start":30,"line_end":30,"column_start":5,"column_end":70}},{"value":"/ values first.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs","byte_start":268061,"byte_end":268078,"line_start":31,"line_end":31,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs","byte_start":268083,"byte_end":268086,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs","byte_start":268091,"byte_end":268102,"line_start":33,"line_end":33,"column_start":5,"column_end":16}},{"value":"/ use itertools::put_back_n;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs","byte_start":268107,"byte_end":268137,"line_start":34,"line_end":34,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs","byte_start":268142,"byte_end":268145,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ let mut it = put_back_n(1..5);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs","byte_start":268150,"byte_end":268184,"line_start":36,"line_end":36,"column_start":5,"column_end":39}},{"value":"/ it.next();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs","byte_start":268189,"byte_end":268203,"line_start":37,"line_end":37,"column_start":5,"column_end":19}},{"value":"/ it.put_back(1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs","byte_start":268208,"byte_end":268227,"line_start":38,"line_end":38,"column_start":5,"column_end":24}},{"value":"/ it.put_back(0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs","byte_start":268232,"byte_end":268251,"line_start":39,"line_end":39,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs","byte_start":268256,"byte_end":268259,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ assert!(itertools::equal(it, 0..5));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs","byte_start":268264,"byte_end":268304,"line_start":41,"line_end":41,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs","byte_start":268309,"byte_end":268316,"line_start":42,"line_end":42,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs","byte_start":268321,"byte_end":268330,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3621},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":268922,"byte_end":268928,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"RcIter","qualname":"::rciter_impl::RcIter","value":"RcIter { rciter }","parent":null,"children":[{"krate":0,"index":3623}],"decl_id":null,"docs":" A wrapper for `Rc<RefCell<I>>`, that implements the `Iterator` trait.\n","sig":null,"attributes":[{"value":"/ A wrapper for `Rc<RefCell<I>>`, that implements the `Iterator` trait.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":268820,"byte_end":268893,"line_start":6,"line_end":6,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":3623},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":268970,"byte_end":268976,"line_start":10,"line_end":10,"column_start":9,"column_end":15},"name":"rciter","qualname":"::rciter_impl::RcIter::rciter","value":"std::rc::Rc<std::cell::RefCell<I>>","parent":{"krate":0,"index":3621},"children":[],"decl_id":null,"docs":" The boxed iterator.\n","sig":null,"attributes":[{"value":"/ The boxed iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":268938,"byte_end":268961,"line_start":9,"line_end":9,"column_start":5,"column_end":28}}]},{"kind":"Function","id":{"krate":0,"index":1828},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":270245,"byte_end":270251,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"rciter","qualname":"::rciter_impl::rciter","value":"pub fn rciter<I>(I) -> RcIter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator inside a `Rc<RefCell<_>>` wrapper.","sig":null,"attributes":[{"value":"/ Return an iterator inside a `Rc<RefCell<_>>` wrapper.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":268997,"byte_end":269054,"line_start":13,"line_end":13,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":269055,"byte_end":269058,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned `RcIter` can be cloned, and each clone will refer back to the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":269059,"byte_end":269137,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ same original iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":269138,"byte_end":269165,"line_start":16,"line_end":16,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":269166,"byte_end":269169,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ `RcIter` allows doing interesting things like using `.zip()` on an iterator with","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":269170,"byte_end":269254,"line_start":18,"line_end":18,"column_start":1,"column_end":85}},{"value":"/ itself, at the cost of runtime borrow checking which may have a performance","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":269255,"byte_end":269334,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ penalty.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":269335,"byte_end":269347,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":269348,"byte_end":269351,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":269352,"byte_end":269394,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":269395,"byte_end":269398,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":269399,"byte_end":269406,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use itertools::rciter;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":269407,"byte_end":269433,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"/ use itertools::zip;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":269434,"byte_end":269457,"line_start":26,"line_end":26,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":269458,"byte_end":269461,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ // In this example a range iterator is created and we iterate it using","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":269462,"byte_end":269536,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ // three separate handles (two of them given to zip).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":269537,"byte_end":269594,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/ // We also use the IntoIterator implementation for `&RcIter`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":269595,"byte_end":269660,"line_start":30,"line_end":30,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":269661,"byte_end":269664,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut iter = rciter(0..9);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":269665,"byte_end":269697,"line_start":32,"line_end":32,"column_start":1,"column_end":33}},{"value":"/ let mut z = zip(&iter, &iter);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":269698,"byte_end":269732,"line_start":33,"line_end":33,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":269733,"byte_end":269736,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(z.next(), Some((0, 1)));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":269737,"byte_end":269776,"line_start":35,"line_end":35,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(z.next(), Some((2, 3)));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":269777,"byte_end":269816,"line_start":36,"line_end":36,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(z.next(), Some((4, 5)));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":269817,"byte_end":269856,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(iter.next(), Some(6));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":269857,"byte_end":269894,"line_start":38,"line_end":38,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(z.next(), Some((7, 8)));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":269895,"byte_end":269934,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(z.next(), None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":269935,"byte_end":269966,"line_start":40,"line_end":40,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":269967,"byte_end":269974,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":269975,"byte_end":269978,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ **Panics** in iterator methods if a borrow error is encountered in the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":269979,"byte_end":270053,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"/ iterator methods. It can only happen if the `RcIter` is reentered in","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":270054,"byte_end":270126,"line_start":44,"line_end":44,"column_start":1,"column_end":73}},{"value":"/ `.next()`, i.e. if it somehow participates in an “iterator knot”","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":270127,"byte_end":270199,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/ where it is an adaptor of itself.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":270200,"byte_end":270237,"line_start":46,"line_end":46,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3628},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/repeatn.rs","byte_start":271692,"byte_end":271699,"line_start":7,"line_end":7,"column_start":12,"column_end":19},"name":"RepeatN","qualname":"::repeatn::RepeatN","value":"RepeatN {  }","parent":null,"children":[{"krate":0,"index":3630},{"krate":0,"index":3631}],"decl_id":null,"docs":" An iterator that produces *n* repetitions of an element.","sig":null,"attributes":[{"value":"/ An iterator that produces *n* repetitions of an element.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/repeatn.rs","byte_start":271460,"byte_end":271520,"line_start":2,"line_end":2,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/repeatn.rs","byte_start":271521,"byte_end":271524,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ See [`repeat_n()`](../fn.repeat_n.html) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/repeatn.rs","byte_start":271525,"byte_end":271590,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"must_use = \"iterators are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/repeatn.rs","byte_start":271591,"byte_end":271656,"line_start":5,"line_end":5,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":1848},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/repeatn.rs","byte_start":271816,"byte_end":271824,"line_start":13,"line_end":13,"column_start":8,"column_end":16},"name":"repeat_n","qualname":"::repeatn::repeat_n","value":"pub fn repeat_n<A>(A, usize) -> RepeatN<A> where A: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator that produces `n` repetitions of `element`.\n","sig":null,"attributes":[{"value":"/ Create an iterator that produces `n` repetitions of `element`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/repeatn.rs","byte_start":271742,"byte_end":271808,"line_start":12,"line_end":12,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":3638},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":275906,"byte_end":275916,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"RepeatCall","qualname":"::sources::RepeatCall","value":"RepeatCall {  }","parent":null,"children":[{"krate":0,"index":3640}],"decl_id":null,"docs":" See [`repeat_call`](../fn.repeat_call.html) for more information.\n","sig":null,"attributes":[{"value":"/ See [`repeat_call`](../fn.repeat_call.html) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":275741,"byte_end":275810,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"deprecated(note = \"Use std repeat_with() instead\", since = \"0.8.0\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":275828,"byte_end":275894,"line_start":10,"line_end":10,"column_start":1,"column_end":67}}]},{"kind":"Function","id":{"krate":0,"index":1892},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":276675,"byte_end":276686,"line_start":43,"line_end":43,"column_start":8,"column_end":19},"name":"repeat_call","qualname":"::sources::repeat_call","value":"pub fn repeat_call<F, A>(F) -> RepeatCall<F> where F: FnMut() -> A","parent":null,"children":[],"decl_id":null,"docs":" An iterator source that produces elements indefinitely by calling\n a given closure.","sig":null,"attributes":[{"value":"/ An iterator source that produces elements indefinitely by calling","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":276014,"byte_end":276083,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ a given closure.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":276084,"byte_end":276104,"line_start":21,"line_end":21,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":276105,"byte_end":276108,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is the return type of the closure.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":276109,"byte_end":276169,"line_start":23,"line_end":23,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":276170,"byte_end":276173,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":276174,"byte_end":276181,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ use itertools::repeat_call;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":276182,"byte_end":276213,"line_start":26,"line_end":26,"column_start":1,"column_end":32}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":276214,"byte_end":276243,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ use std::collections::BinaryHeap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":276244,"byte_end":276281,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":276282,"byte_end":276285,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let mut heap = BinaryHeap::from(vec![2, 5, 3, 7, 8]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":276286,"byte_end":276343,"line_start":30,"line_end":30,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":276344,"byte_end":276347,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ // extract each element in sorted order","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":276348,"byte_end":276391,"line_start":32,"line_end":32,"column_start":1,"column_end":44}},{"value":"/ for element in repeat_call(|| heap.pop()).while_some() {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":276392,"byte_end":276452,"line_start":33,"line_end":33,"column_start":1,"column_end":61}},{"value":"/     print!(\"{}\", element);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":276453,"byte_end":276483,"line_start":34,"line_end":34,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":276484,"byte_end":276489,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":276490,"byte_end":276493,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ itertools::assert_equal(","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":276494,"byte_end":276522,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/     repeat_call(|| 1).take(5),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":276523,"byte_end":276557,"line_start":38,"line_end":38,"column_start":1,"column_end":35}},{"value":"/     vec![1, 1, 1, 1, 1]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":276558,"byte_end":276585,"line_start":39,"line_end":39,"column_start":1,"column_end":28}},{"value":"/ );","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":276586,"byte_end":276592,"line_start":40,"line_end":40,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":276593,"byte_end":276600,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"deprecated(note = \"Use std repeat_with() instead\", since = \"0.8.0\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":276601,"byte_end":276667,"line_start":42,"line_end":42,"column_start":1,"column_end":67}}]},{"kind":"Function","id":{"krate":0,"index":1901},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":278288,"byte_end":278294,"line_start":100,"line_end":100,"column_start":8,"column_end":14},"name":"unfold","qualname":"::sources::unfold","value":"pub fn unfold<A, St, F>(St, F) -> Unfold<St, F> where F: FnMut(&mut St) ->\nOption<A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unfold source with the specified closure as the \"iterator\n function\" and an initial state to eventually pass to the closure","sig":null,"attributes":[{"value":"/ Creates a new unfold source with the specified closure as the \"iterator","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":277060,"byte_end":277135,"line_start":64,"line_end":64,"column_start":1,"column_end":76}},{"value":"/ function\" and an initial state to eventually pass to the closure","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":277136,"byte_end":277204,"line_start":65,"line_end":65,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":277205,"byte_end":277208,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ `unfold` is a general iterator builder: it has a mutable state value,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":277209,"byte_end":277282,"line_start":67,"line_end":67,"column_start":1,"column_end":74}},{"value":"/ and a closure with access to the state that produces the next value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":277283,"byte_end":277355,"line_start":68,"line_end":68,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":277356,"byte_end":277359,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ This more or less equivalent to a regular struct with an `Iterator`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":277360,"byte_end":277431,"line_start":70,"line_end":70,"column_start":1,"column_end":72}},{"value":"/ implementation, and is useful for one-off iterators.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":277432,"byte_end":277488,"line_start":71,"line_end":71,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":277489,"byte_end":277492,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":277493,"byte_end":277500,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/ // an iterator that yields sequential Fibonacci numbers,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":277501,"byte_end":277561,"line_start":74,"line_end":74,"column_start":1,"column_end":61}},{"value":"/ // and stops at the maximum representable value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":277562,"byte_end":277614,"line_start":75,"line_end":75,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":277615,"byte_end":277618,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ use itertools::unfold;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":277619,"byte_end":277645,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":277646,"byte_end":277649,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ let mut fibonacci = unfold((1u32, 1u32), |(x1, x2)| {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":277650,"byte_end":277707,"line_start":79,"line_end":79,"column_start":1,"column_end":58}},{"value":"/     // Attempt to get the next Fibonacci number","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":277708,"byte_end":277759,"line_start":80,"line_end":80,"column_start":1,"column_end":52}},{"value":"/     let next = x1.saturating_add(*x2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":277760,"byte_end":277802,"line_start":81,"line_end":81,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":277803,"byte_end":277806,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     // Shift left: ret <- x1 <- x2 <- next","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":277807,"byte_end":277853,"line_start":83,"line_end":83,"column_start":1,"column_end":47}},{"value":"/     let ret = *x1;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":277854,"byte_end":277876,"line_start":84,"line_end":84,"column_start":1,"column_end":23}},{"value":"/     *x1 = *x2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":277877,"byte_end":277895,"line_start":85,"line_end":85,"column_start":1,"column_end":19}},{"value":"/     *x2 = next;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":277896,"byte_end":277915,"line_start":86,"line_end":86,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":277916,"byte_end":277919,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/     // If addition has saturated at the maximum, we are finished","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":277920,"byte_end":277988,"line_start":88,"line_end":88,"column_start":1,"column_end":69}},{"value":"/     if ret == *x1 && ret > 1 {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":277989,"byte_end":278023,"line_start":89,"line_end":89,"column_start":1,"column_end":35}},{"value":"/         None","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":278024,"byte_end":278040,"line_start":90,"line_end":90,"column_start":1,"column_end":17}},{"value":"/     } else {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":278041,"byte_end":278057,"line_start":91,"line_end":91,"column_start":1,"column_end":17}},{"value":"/         Some(ret)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":278058,"byte_end":278079,"line_start":92,"line_end":92,"column_start":1,"column_end":22}},{"value":"/     }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":278080,"byte_end":278089,"line_start":93,"line_end":93,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":278090,"byte_end":278097,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":278098,"byte_end":278101,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ itertools::assert_equal(fibonacci.by_ref().take(8),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":278102,"byte_end":278157,"line_start":96,"line_end":96,"column_start":1,"column_end":56}},{"value":"/                         vec![1, 1, 2, 3, 5, 8, 13, 21]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":278158,"byte_end":278218,"line_start":97,"line_end":97,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(fibonacci.last(), Some(2_971_215_073))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":278219,"byte_end":278272,"line_start":98,"line_end":98,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":278273,"byte_end":278280,"line_start":99,"line_end":99,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3646},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":278717,"byte_end":278723,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"name":"Unfold","qualname":"::sources::Unfold","value":"Unfold { state }","parent":null,"children":[{"krate":0,"index":3649},{"krate":0,"index":3650}],"decl_id":null,"docs":" See [`unfold`](../fn.unfold.html) for more information.\n","sig":null,"attributes":[{"value":"/ See [`unfold`](../fn.unfold.html) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":278563,"byte_end":278622,"line_start":115,"line_end":115,"column_start":1,"column_end":60}},{"value":"must_use = \"iterators are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":278640,"byte_end":278705,"line_start":117,"line_end":117,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":3650},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":278831,"byte_end":278836,"line_start":121,"line_end":121,"column_start":9,"column_end":14},"name":"state","qualname":"::sources::Unfold::state","value":"St","parent":{"krate":0,"index":3646},"children":[],"decl_id":null,"docs":" Internal state that will be passed to the closure on the next iteration\n","sig":null,"attributes":[{"value":"/ Internal state that will be passed to the closure on the next iteration","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":278747,"byte_end":278822,"line_start":120,"line_end":120,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":3655},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":279364,"byte_end":279371,"line_start":142,"line_end":142,"column_start":12,"column_end":19},"name":"Iterate","qualname":"::sources::Iterate","value":"Iterate {  }","parent":null,"children":[{"krate":0,"index":3658},{"krate":0,"index":3659}],"decl_id":null,"docs":" An iterator that infinitely applies function to value and yields results.","sig":null,"attributes":[{"value":"/ An iterator that infinitely applies function to value and yields results.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":279054,"byte_end":279131,"line_start":135,"line_end":135,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":279132,"byte_end":279135,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iterate()`] function. See its documentation for more.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":279136,"byte_end":279227,"line_start":137,"line_end":137,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":279228,"byte_end":279231,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ [`iterate()`]: ../fn.iterate.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":279232,"byte_end":279269,"line_start":139,"line_end":139,"column_start":1,"column_end":38}},{"value":"must_use = \"iterators are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":279287,"byte_end":279352,"line_start":141,"line_end":141,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":1923},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":280128,"byte_end":280135,"line_start":177,"line_end":177,"column_start":8,"column_end":15},"name":"iterate","qualname":"::sources::iterate","value":"pub fn iterate<St, F>(St, F) -> Iterate<St, F> where F: FnMut(&St) -> St","parent":null,"children":[],"decl_id":null,"docs":" Creates a new iterator that infinitely applies function to value and yields results.","sig":null,"attributes":[{"value":"/ Creates a new iterator that infinitely applies function to value and yields results.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":279896,"byte_end":279984,"line_start":170,"line_end":170,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":279985,"byte_end":279988,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":279989,"byte_end":279996,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/ use itertools::iterate;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":279997,"byte_end":280024,"line_start":173,"line_end":173,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":280025,"byte_end":280028,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ itertools::assert_equal(iterate(1, |&i| i * 3).take(5), vec![1, 3, 9, 27, 81]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":280029,"byte_end":280112,"line_start":175,"line_end":175,"column_start":1,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":280113,"byte_end":280120,"line_start":176,"line_end":176,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3675},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tee.rs","byte_start":280857,"byte_end":280860,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"Tee","qualname":"::tee::Tee","value":"Tee {  }","parent":null,"children":[{"krate":0,"index":3677},{"krate":0,"index":3678}],"decl_id":null,"docs":" One half of an iterator pair where both return the same elements.","sig":null,"attributes":[{"value":"/ One half of an iterator pair where both return the same elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tee.rs","byte_start":280604,"byte_end":280673,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tee.rs","byte_start":280674,"byte_end":280677,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ See [`.tee()`](../trait.Itertools.html#method.tee) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tee.rs","byte_start":280678,"byte_end":280754,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tee.rs","byte_start":280755,"byte_end":280828,"line_start":19,"line_end":19,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":1961},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":282897,"byte_end":282913,"line_start":14,"line_end":14,"column_start":11,"column_end":27},"name":"HomogeneousTuple","qualname":"::tuple_impl::HomogeneousTuple","value":"HomogeneousTuple: TupleCollect","parent":null,"children":[],"decl_id":null,"docs":" Implemented for homogeneous tuples of size up to 4.\n","sig":null,"attributes":[{"value":"/ Implemented for homogeneous tuples of size up to 4.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":282831,"byte_end":282886,"line_start":13,"line_end":13,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3682},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":283201,"byte_end":283212,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"TupleBuffer","qualname":"::tuple_impl::TupleBuffer","value":"TupleBuffer {  }","parent":null,"children":[{"krate":0,"index":3684},{"krate":0,"index":3685}],"decl_id":null,"docs":" An iterator over a incomplete tuple.","sig":null,"attributes":[{"value":"/ An iterator over a incomplete tuple.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":282986,"byte_end":283026,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":283027,"byte_end":283030,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ See [`.tuples()`](../trait.Itertools.html#method.tuples) and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":283031,"byte_end":283095,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/ [`Tuples::into_buffer()`](struct.Tuples.html#method.into_buffer).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":283096,"byte_end":283165,"line_start":23,"line_end":23,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":3692},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":284474,"byte_end":284480,"line_start":81,"line_end":81,"column_start":12,"column_end":18},"name":"Tuples","qualname":"::tuple_impl::Tuples","value":"Tuples {  }","parent":null,"children":[{"krate":0,"index":3695},{"krate":0,"index":3696}],"decl_id":null,"docs":" An iterator that groups the items in tuples of a specific size.","sig":null,"attributes":[{"value":"/ An iterator that groups the items in tuples of a specific size.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":284217,"byte_end":284284,"line_start":76,"line_end":76,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":284285,"byte_end":284288,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ See [`.tuples()`](../trait.Itertools.html#method.tuples) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":284289,"byte_end":284371,"line_start":78,"line_end":78,"column_start":1,"column_end":83}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":284389,"byte_end":284462,"line_start":80,"line_end":80,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1987},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":285544,"byte_end":285555,"line_start":125,"line_end":125,"column_start":12,"column_end":23},"name":"into_buffer","qualname":"<Tuples<I, T>>::into_buffer","value":"pub fn into_buffer(Self) -> TupleBuffer<T>","parent":null,"children":[],"decl_id":null,"docs":" Return a buffer with the produced items that was not enough to be grouped in a tuple.","sig":null,"attributes":[{"value":"/ Return a buffer with the produced items that was not enough to be grouped in a tuple.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":285175,"byte_end":285264,"line_start":115,"line_end":115,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":285269,"byte_end":285272,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":285277,"byte_end":285284,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":285289,"byte_end":285318,"line_start":118,"line_end":118,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":285323,"byte_end":285326,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let mut iter = (0..5).tuples();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":285331,"byte_end":285366,"line_start":120,"line_end":120,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(Some((0, 1, 2)), iter.next());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":285371,"byte_end":285416,"line_start":121,"line_end":121,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":285421,"byte_end":285455,"line_start":122,"line_end":122,"column_start":5,"column_end":39}},{"value":"/ itertools::assert_equal(vec![3, 4], iter.into_buffer());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":285460,"byte_end":285520,"line_start":123,"line_end":123,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":285525,"byte_end":285532,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3701},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":285926,"byte_end":285938,"line_start":137,"line_end":137,"column_start":12,"column_end":24},"name":"TupleWindows","qualname":"::tuple_impl::TupleWindows","value":"TupleWindows {  }","parent":null,"children":[{"krate":0,"index":3704},{"krate":0,"index":3705}],"decl_id":null,"docs":" An iterator over all contiguous windows that produces tuples of a specific size.","sig":null,"attributes":[{"value":"/ An iterator over all contiguous windows that produces tuples of a specific size.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":285627,"byte_end":285711,"line_start":131,"line_end":131,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":285712,"byte_end":285715,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ See [`.tuple_windows()`](../trait.Itertools.html#method.tuple_windows) for more","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":285716,"byte_end":285799,"line_start":133,"line_end":133,"column_start":1,"column_end":84}},{"value":"/ information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":285800,"byte_end":285816,"line_start":134,"line_end":134,"column_start":1,"column_end":17}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":285817,"byte_end":285890,"line_start":135,"line_end":135,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":3714},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":287640,"byte_end":287660,"line_start":198,"line_end":198,"column_start":12,"column_end":32},"name":"CircularTupleWindows","qualname":"::tuple_impl::CircularTupleWindows","value":"CircularTupleWindows {  }","parent":null,"children":[{"krate":0,"index":3717},{"krate":0,"index":3718}],"decl_id":null,"docs":" An iterator over all windows,wrapping back to the first elements when the\n window would otherwise exceed the length of the iterator, producing tuples\n of a specific size.","sig":null,"attributes":[{"value":"/ An iterator over all windows,wrapping back to the first elements when the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":287234,"byte_end":287311,"line_start":190,"line_end":190,"column_start":1,"column_end":78}},{"value":"/ window would otherwise exceed the length of the iterator, producing tuples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":287312,"byte_end":287390,"line_start":191,"line_end":191,"column_start":1,"column_end":79}},{"value":"/ of a specific size.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":287391,"byte_end":287414,"line_start":192,"line_end":192,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":287415,"byte_end":287418,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ See [`.circular_tuple_windows()`](../trait.Itertools.html#method.circular_tuple_windows) for more","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":287419,"byte_end":287520,"line_start":194,"line_end":194,"column_start":1,"column_end":102}},{"value":"/ information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":287521,"byte_end":287537,"line_start":195,"line_end":195,"column_start":1,"column_end":17}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":287538,"byte_end":287611,"line_start":196,"line_end":196,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":2007},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":288478,"byte_end":288490,"line_start":232,"line_end":232,"column_start":11,"column_end":23},"name":"TupleCollect","qualname":"::tuple_impl::TupleCollect","value":"TupleCollect: Sized","parent":null,"children":[{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2012},{"krate":0,"index":2014},{"krate":0,"index":2015}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2008},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":288509,"byte_end":288513,"line_start":233,"line_end":233,"column_start":10,"column_end":14},"name":"Item","qualname":"::tuple_impl::TupleCollect::Item","value":"type Item;","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2009},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":288524,"byte_end":288530,"line_start":234,"line_end":234,"column_start":10,"column_end":16},"name":"Buffer","qualname":"::tuple_impl::TupleCollect::Buffer","value":"type Buffer: Default + AsRef<[Option<Self::Item>]> + AsMut<[Option<Self::Item>]>;","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2010},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":288609,"byte_end":288626,"line_start":236,"line_end":236,"column_start":8,"column_end":25},"name":"collect_from_iter","qualname":"::tuple_impl::TupleCollect::collect_from_iter","value":"pub fn collect_from_iter<I>(I, &mut Self::Buffer) -> Option<Self> where\nI: IntoIterator<Item = Self::Item>","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2012},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":288737,"byte_end":288761,"line_start":239,"line_end":239,"column_start":8,"column_end":32},"name":"collect_from_iter_no_buf","qualname":"::tuple_impl::TupleCollect::collect_from_iter_no_buf","value":"pub fn collect_from_iter_no_buf<I>(I) -> Option<Self> where\nI: IntoIterator<Item = Self::Item>","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2014},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":288848,"byte_end":288857,"line_start":242,"line_end":242,"column_start":8,"column_end":17},"name":"num_items","qualname":"::tuple_impl::TupleCollect::num_items","value":"pub fn num_items() -> usize","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2015},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":288878,"byte_end":288893,"line_start":244,"line_end":244,"column_start":8,"column_end":23},"name":"left_shift_push","qualname":"::tuple_impl::TupleCollect::left_shift_push","value":"pub fn left_shift_push(&mut Self, Self::Item)","parent":{"krate":0,"index":2007},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3903},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs","byte_start":291672,"byte_end":291680,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"UniqueBy","qualname":"::unique_impl::UniqueBy","value":"UniqueBy {  }","parent":null,"children":[{"krate":0,"index":3907},{"krate":0,"index":3908},{"krate":0,"index":3909}],"decl_id":null,"docs":" An iterator adapter to filter out duplicate elements.","sig":null,"attributes":[{"value":"/ An iterator adapter to filter out duplicate elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs","byte_start":291422,"byte_end":291479,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs","byte_start":291480,"byte_end":291483,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See [`.unique_by()`](../trait.Itertools.html#method.unique) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs","byte_start":291484,"byte_end":291569,"line_start":9,"line_end":9,"column_start":1,"column_end":86}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs","byte_start":291587,"byte_end":291660,"line_start":11,"line_end":11,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":3916},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs","byte_start":295173,"byte_end":295179,"line_start":144,"line_end":144,"column_start":12,"column_end":18},"name":"Unique","qualname":"::unique_impl::Unique","value":"Unique {  }","parent":null,"children":[{"krate":0,"index":3918}],"decl_id":null,"docs":" An iterator adapter to filter out duplicate elements.","sig":null,"attributes":[{"value":"/ An iterator adapter to filter out duplicate elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs","byte_start":294926,"byte_end":294983,"line_start":139,"line_end":139,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs","byte_start":294984,"byte_end":294987,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ See [`.unique()`](../trait.Itertools.html#method.unique) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs","byte_start":294988,"byte_end":295070,"line_start":141,"line_end":141,"column_start":1,"column_end":83}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs","byte_start":295088,"byte_end":295161,"line_start":143,"line_end":143,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2081},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs","byte_start":295974,"byte_end":295986,"line_start":9,"line_end":9,"column_start":12,"column_end":24},"name":"WithPosition","qualname":"::with_position::WithPosition","value":"WithPosition {  }","parent":null,"children":[{"krate":0,"index":2083},{"krate":0,"index":2084}],"decl_id":null,"docs":" An iterator adaptor that wraps each element in an [`Position`](../enum.Position.html).","sig":null,"attributes":[{"value":"/ An iterator adaptor that wraps each element in an [`Position`](../enum.Position.html).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs","byte_start":295643,"byte_end":295733,"line_start":3,"line_end":3,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs","byte_start":295734,"byte_end":295737,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Iterator element type is `Position<I::Item>`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs","byte_start":295738,"byte_end":295787,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs","byte_start":295788,"byte_end":295791,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See [`.with_position()`](../trait.Itertools.html#method.with_position) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs","byte_start":295792,"byte_end":295888,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs","byte_start":295889,"byte_end":295962,"line_start":8,"line_end":8,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3926},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs","byte_start":296743,"byte_end":296748,"line_start":40,"line_end":40,"column_start":5,"column_end":10},"name":"First","qualname":"::with_position::Position::First","value":"Position::First(T)","parent":{"krate":0,"index":3924},"children":[],"decl_id":null,"docs":" This is the first element.\n","sig":null,"attributes":[{"value":"/ This is the first element.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs","byte_start":296708,"byte_end":296738,"line_start":39,"line_end":39,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3929},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs","byte_start":296813,"byte_end":296819,"line_start":42,"line_end":42,"column_start":5,"column_end":11},"name":"Middle","qualname":"::with_position::Position::Middle","value":"Position::Middle(T)","parent":{"krate":0,"index":3924},"children":[],"decl_id":null,"docs":" This is neither the first nor the last element.\n","sig":null,"attributes":[{"value":"/ This is neither the first nor the last element.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs","byte_start":296757,"byte_end":296808,"line_start":41,"line_end":41,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3932},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs","byte_start":296862,"byte_end":296866,"line_start":44,"line_end":44,"column_start":5,"column_end":9},"name":"Last","qualname":"::with_position::Position::Last","value":"Position::Last(T)","parent":{"krate":0,"index":3924},"children":[],"decl_id":null,"docs":" This is the last element.\n","sig":null,"attributes":[{"value":"/ This is the last element.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs","byte_start":296828,"byte_end":296857,"line_start":43,"line_end":43,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3935},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs","byte_start":296909,"byte_end":296913,"line_start":46,"line_end":46,"column_start":5,"column_end":9},"name":"Only","qualname":"::with_position::Position::Only","value":"Position::Only(T)","parent":{"krate":0,"index":3924},"children":[],"decl_id":null,"docs":" This is the only element.\n","sig":null,"attributes":[{"value":"/ This is the only element.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs","byte_start":296875,"byte_end":296904,"line_start":45,"line_end":45,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":3924},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs","byte_start":296690,"byte_end":296698,"line_start":38,"line_end":38,"column_start":10,"column_end":18},"name":"Position","qualname":"::with_position::Position","value":"pub enum Position<T> { First(T), Middle(T), Last(T), Only(T), }","parent":null,"children":[{"krate":0,"index":3926},{"krate":0,"index":3929},{"krate":0,"index":3932},{"krate":0,"index":3935}],"decl_id":null,"docs":" A value yielded by `WithPosition`.\n Indicates the position of this element in the iterator results.","sig":null,"attributes":[{"value":"/ A value yielded by `WithPosition`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs","byte_start":296435,"byte_end":296473,"line_start":33,"line_end":33,"column_start":1,"column_end":39}},{"value":"/ Indicates the position of this element in the iterator results.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs","byte_start":296474,"byte_end":296541,"line_start":34,"line_end":34,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs","byte_start":296542,"byte_end":296545,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ See [`.with_position()`](trait.Itertools.html#method.with_position) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs","byte_start":296546,"byte_end":296639,"line_start":36,"line_end":36,"column_start":1,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":2091},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs","byte_start":296986,"byte_end":296996,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Position<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return the inner value.\n","sig":null,"attributes":[{"value":"/ Return the inner value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs","byte_start":296947,"byte_end":296974,"line_start":50,"line_end":50,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":3952},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_eq_impl.rs","byte_start":298802,"byte_end":298807,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"ZipEq","qualname":"::zip_eq_impl::ZipEq","value":"ZipEq {  }","parent":null,"children":[{"krate":0,"index":3955},{"krate":0,"index":3956}],"decl_id":null,"docs":" An iterator which iterates two other iterators simultaneously","sig":null,"attributes":[{"value":"/ An iterator which iterates two other iterators simultaneously","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_eq_impl.rs","byte_start":298540,"byte_end":298605,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_eq_impl.rs","byte_start":298606,"byte_end":298609,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ See [`.zip_eq()`](../trait.Itertools.html#method.zip_eq) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_eq_impl.rs","byte_start":298610,"byte_end":298692,"line_start":5,"line_end":5,"column_start":1,"column_end":83}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_eq_impl.rs","byte_start":298717,"byte_end":298790,"line_start":7,"line_end":7,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":2103},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_eq_impl.rs","byte_start":299182,"byte_end":299188,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"zip_eq","qualname":"::zip_eq_impl::zip_eq","value":"pub fn zip_eq<I, J>(I, J) -> ZipEq<I::IntoIter, J::IntoIter> where\nI: IntoIterator, J: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Iterate `i` and `j` in lock step.","sig":null,"attributes":[{"value":"/ Iterate `i` and `j` in lock step.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_eq_impl.rs","byte_start":298839,"byte_end":298876,"line_start":13,"line_end":13,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_eq_impl.rs","byte_start":298877,"byte_end":298880,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ **Panics** if the iterators are not of the same length.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_eq_impl.rs","byte_start":298881,"byte_end":298940,"line_start":15,"line_end":15,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_eq_impl.rs","byte_start":298941,"byte_end":298944,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `IntoIterator` enabled version of `i.zip_eq(j)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_eq_impl.rs","byte_start":298945,"byte_end":298997,"line_start":17,"line_end":17,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_eq_impl.rs","byte_start":298998,"byte_end":299001,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_eq_impl.rs","byte_start":299002,"byte_end":299009,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use itertools::zip_eq;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_eq_impl.rs","byte_start":299010,"byte_end":299036,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_eq_impl.rs","byte_start":299037,"byte_end":299040,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let data = [1, 2, 3, 4, 5];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_eq_impl.rs","byte_start":299041,"byte_end":299072,"line_start":22,"line_end":22,"column_start":1,"column_end":32}},{"value":"/ for (a, b) in zip_eq(&data[..data.len() - 1], &data[1..]) {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_eq_impl.rs","byte_start":299073,"byte_end":299136,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/     /* loop body */","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_eq_impl.rs","byte_start":299137,"byte_end":299160,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_eq_impl.rs","byte_start":299161,"byte_end":299166,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_eq_impl.rs","byte_start":299167,"byte_end":299174,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3965},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_longest.rs","byte_start":300620,"byte_end":300630,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"name":"ZipLongest","qualname":"::zip_longest::ZipLongest","value":"ZipLongest {  }","parent":null,"children":[{"krate":0,"index":3968},{"krate":0,"index":3969}],"decl_id":null,"docs":" An iterator which iterates two other iterators simultaneously","sig":null,"attributes":[{"value":"/ An iterator which iterates two other iterators simultaneously","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_longest.rs","byte_start":300314,"byte_end":300379,"line_start":10,"line_end":10,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_longest.rs","byte_start":300380,"byte_end":300383,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_longest.rs","byte_start":300384,"byte_end":300413,"line_start":12,"line_end":12,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_longest.rs","byte_start":300414,"byte_end":300417,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ See [`.zip_longest()`](../trait.Itertools.html#method.zip_longest) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_longest.rs","byte_start":300418,"byte_end":300510,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_longest.rs","byte_start":300535,"byte_end":300608,"line_start":16,"line_end":16,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":3978},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":302654,"byte_end":302657,"line_start":6,"line_end":6,"column_start":12,"column_end":15},"name":"Zip","qualname":"::ziptuple::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":3980}],"decl_id":null,"docs":" See [`multizip`](../fn.multizip.html) for more information.\n","sig":null,"attributes":[{"value":"/ See [`multizip`](../fn.multizip.html) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":302481,"byte_end":302544,"line_start":3,"line_end":3,"column_start":1,"column_end":64}},{"value":"must_use = \"iterator adaptors are lazy and do nothing unless consumed\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":302569,"byte_end":302642,"line_start":5,"line_end":5,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":2155},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":303821,"byte_end":303829,"line_start":41,"line_end":41,"column_start":8,"column_end":16},"name":"multizip","qualname":"::ziptuple::multizip","value":"pub fn multizip<T, U>(U) -> Zip<T> where Zip<T>: From<U>, Zip<T>: Iterator","parent":null,"children":[],"decl_id":null,"docs":" An iterator that generalizes *.zip()* and allows running multiple iterators in lockstep.","sig":null,"attributes":[{"value":"/ An iterator that generalizes *.zip()* and allows running multiple iterators in lockstep.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":302676,"byte_end":302768,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":302769,"byte_end":302772,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The iterator `Zip<(I, J, ..., M)>` is formed from a tuple of iterators (or values that","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":302773,"byte_end":302863,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/ implement `IntoIterator`) and yields elements","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":302864,"byte_end":302913,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/ until any of the subiterators yields `None`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":302914,"byte_end":302962,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":302963,"byte_end":302966,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The iterator element type is a tuple like like `(A, B, ..., E)` where `A` to `E` are the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":302967,"byte_end":303059,"line_start":16,"line_end":16,"column_start":1,"column_end":93}},{"value":"/ element types of the subiterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":303060,"byte_end":303097,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":303098,"byte_end":303101,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ **Note:** The result of this macro is a value of a named type (`Zip<(I, J,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":303102,"byte_end":303180,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ ..)>` of each component iterator `I, J, ...`) if each component iterator is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":303181,"byte_end":303260,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ nameable.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":303261,"byte_end":303274,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":303275,"byte_end":303278,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Prefer [`izip!()`] over `multizip` for the performance benefits of using the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":303279,"byte_end":303359,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ standard library `.zip()`. Prefer `multizip` if a nameable type is needed.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":303360,"byte_end":303438,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":303439,"byte_end":303442,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`izip!()`]: macro.izip.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":303443,"byte_end":303475,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":303476,"byte_end":303479,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":303480,"byte_end":303487,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ use itertools::multizip;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":303488,"byte_end":303516,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":303517,"byte_end":303520,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ // iterate over three sequences side-by-side","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":303521,"byte_end":303569,"line_start":31,"line_end":31,"column_start":1,"column_end":49}},{"value":"/ let mut results = [0, 0, 0, 0];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":303570,"byte_end":303605,"line_start":32,"line_end":32,"column_start":1,"column_end":36}},{"value":"/ let inputs = [3, 7, 9, 6];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":303606,"byte_end":303636,"line_start":33,"line_end":33,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":303637,"byte_end":303640,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ for (r, index, input) in multizip((&mut results, 0..10, &inputs)) {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":303641,"byte_end":303712,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/     *r = index * 10 + input;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":303713,"byte_end":303745,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":303746,"byte_end":303751,"line_start":37,"line_end":37,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":303752,"byte_end":303755,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(results, [0 + 3, 10 + 7, 29, 36]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":303756,"byte_end":303805,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/ziptuple.rs","byte_start":303806,"byte_end":303813,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":2161},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":10657,"byte_end":10666,"line_start":361,"line_end":361,"column_start":11,"column_end":20},"name":"Itertools","qualname":"::Itertools","value":"Itertools: Iterator","parent":null,"children":[{"krate":0,"index":2162},{"krate":0,"index":2164},{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":2169},{"krate":0,"index":2171},{"krate":0,"index":2173},{"krate":0,"index":2176},{"krate":0,"index":2179},{"krate":0,"index":2180},{"krate":0,"index":2182},{"krate":0,"index":2184},{"krate":0,"index":2186},{"krate":0,"index":2187},{"krate":0,"index":2188},{"krate":0,"index":2190},{"krate":0,"index":2195},{"krate":0,"index":2200},{"krate":0,"index":2204},{"krate":0,"index":2209},{"krate":0,"index":2211},{"krate":0,"index":2214},{"krate":0,"index":2217},{"krate":0,"index":2218},{"krate":0,"index":2220},{"krate":0,"index":2222},{"krate":0,"index":2223},{"krate":0,"index":2225},{"krate":0,"index":2226},{"krate":0,"index":2228},{"krate":0,"index":2229},{"krate":0,"index":2231},{"krate":0,"index":2232},{"krate":0,"index":2235},{"krate":0,"index":2237},{"krate":0,"index":2239},{"krate":0,"index":2241},{"krate":0,"index":2243},{"krate":0,"index":2244},{"krate":0,"index":2245},{"krate":0,"index":2246},{"krate":0,"index":2247},{"krate":0,"index":2249},{"krate":0,"index":2250},{"krate":0,"index":2252},{"krate":0,"index":2254},{"krate":0,"index":2256},{"krate":0,"index":2258},{"krate":0,"index":2260},{"krate":0,"index":2262},{"krate":0,"index":2263},{"krate":0,"index":2264},{"krate":0,"index":2266},{"krate":0,"index":2267},{"krate":0,"index":2268},{"krate":0,"index":2272},{"krate":0,"index":2276},{"krate":0,"index":2278},{"krate":0,"index":2279},{"krate":0,"index":2281},{"krate":0,"index":2286},{"krate":0,"index":2291},{"krate":0,"index":2295},{"krate":0,"index":2298},{"krate":0,"index":2310},{"krate":0,"index":2321},{"krate":0,"index":2324},{"krate":0,"index":2327},{"krate":0,"index":2328},{"krate":0,"index":2330},{"krate":0,"index":2333},{"krate":0,"index":2334},{"krate":0,"index":2336},{"krate":0,"index":2339},{"krate":0,"index":2340},{"krate":0,"index":2347},{"krate":0,"index":2350},{"krate":0,"index":2354},{"krate":0,"index":2357},{"krate":0,"index":2361},{"krate":0,"index":2364},{"krate":0,"index":2368},{"krate":0,"index":2372},{"krate":0,"index":2375},{"krate":0,"index":2380},{"krate":0,"index":2384},{"krate":0,"index":2387},{"krate":0,"index":2392},{"krate":0,"index":2396},{"krate":0,"index":2409},{"krate":0,"index":2423},{"krate":0,"index":2436},{"krate":0,"index":2437},{"krate":0,"index":2438}],"decl_id":null,"docs":" An [`Iterator`] blanket implementation that provides extra adaptors and\n methods.","sig":null,"attributes":[{"value":"/ An [`Iterator`] blanket implementation that provides extra adaptors and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":9966,"byte_end":10041,"line_start":346,"line_end":346,"column_start":1,"column_end":76}},{"value":"/ methods.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":10042,"byte_end":10054,"line_start":347,"line_end":347,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":10055,"byte_end":10058,"line_start":348,"line_end":348,"column_start":1,"column_end":4}},{"value":"/ This trait defines a number of methods. They are divided into two groups:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":10059,"byte_end":10136,"line_start":349,"line_end":349,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":10137,"byte_end":10140,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ * *Adaptors* take an iterator and parameter as input, and return","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":10141,"byte_end":10209,"line_start":351,"line_end":351,"column_start":1,"column_end":69}},{"value":"/ a new iterator value. These are listed first in the trait. An example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":10210,"byte_end":10283,"line_start":352,"line_end":352,"column_start":1,"column_end":74}},{"value":"/ of an adaptor is [`.interleave()`](#method.interleave)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":10284,"byte_end":10342,"line_start":353,"line_end":353,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":10343,"byte_end":10346,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ * *Regular methods* are those that don't return iterators and instead","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":10347,"byte_end":10420,"line_start":355,"line_end":355,"column_start":1,"column_end":74}},{"value":"/ return a regular value of some other kind.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":10421,"byte_end":10467,"line_start":356,"line_end":356,"column_start":1,"column_end":47}},{"value":"/ [`.next_tuple()`](#method.next_tuple) is an example and the first regular","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":10468,"byte_end":10545,"line_start":357,"line_end":357,"column_start":1,"column_end":78}},{"value":"/ method in the list.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":10546,"byte_end":10569,"line_start":358,"line_end":358,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":10570,"byte_end":10573,"line_start":359,"line_end":359,"column_start":1,"column_end":4}},{"value":"/ [`Iterator`]: https://doc.rust-lang.org/std/iter/trait.Iterator.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":10574,"byte_end":10646,"line_start":360,"line_end":360,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2162},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":11065,"byte_end":11075,"line_start":376,"line_end":376,"column_start":8,"column_end":18},"name":"interleave","qualname":"::Itertools::interleave","value":"pub fn interleave<J>(Self, J) -> Interleave<Self, J::IntoIter> where\nJ: IntoIterator<Item = Self::Item>, Self: Sized","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Alternate elements from two iterators until both have run out.","sig":null,"attributes":[{"value":"/ Alternate elements from two iterators until both have run out.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":10701,"byte_end":10767,"line_start":364,"line_end":364,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":10772,"byte_end":10775,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":10780,"byte_end":10822,"line_start":366,"line_end":366,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":10827,"byte_end":10830,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":10835,"byte_end":10864,"line_start":368,"line_end":368,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":10869,"byte_end":10872,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":10877,"byte_end":10884,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":10889,"byte_end":10918,"line_start":371,"line_end":371,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":10923,"byte_end":10926,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ let it = (1..7).interleave(vec![-1, -2]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":10931,"byte_end":10976,"line_start":373,"line_end":373,"column_start":5,"column_end":50}},{"value":"/ itertools::assert_equal(it, vec![1, -1, 2, -2, 3, 4, 5, 6]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":10981,"byte_end":11045,"line_start":374,"line_end":374,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":11050,"byte_end":11057,"line_start":375,"line_end":375,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2164},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":11598,"byte_end":11617,"line_start":394,"line_end":394,"column_start":8,"column_end":27},"name":"interleave_shortest","qualname":"::Itertools::interleave_shortest","value":"pub fn interleave_shortest<J>(Self, J)\n-> InterleaveShortest<Self, J::IntoIter> where J: IntoIterator<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Alternate elements from two iterators until at least one of them has run\n out.","sig":null,"attributes":[{"value":"/ Alternate elements from two iterators until at least one of them has run","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":11253,"byte_end":11329,"line_start":383,"line_end":383,"column_start":5,"column_end":81}},{"value":"/ out.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":11334,"byte_end":11342,"line_start":384,"line_end":384,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":11347,"byte_end":11350,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":11355,"byte_end":11397,"line_start":386,"line_end":386,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":11402,"byte_end":11405,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":11410,"byte_end":11417,"line_start":388,"line_end":388,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":11422,"byte_end":11451,"line_start":389,"line_end":389,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":11456,"byte_end":11459,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ let it = (1..7).interleave_shortest(vec![-1, -2]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":11464,"byte_end":11518,"line_start":391,"line_end":391,"column_start":5,"column_end":59}},{"value":"/ itertools::assert_equal(it, vec![1, -1, 2, -2, 3]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":11523,"byte_end":11578,"line_start":392,"line_end":392,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":11583,"byte_end":11590,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2166},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":12196,"byte_end":12207,"line_start":413,"line_end":413,"column_start":8,"column_end":19},"name":"intersperse","qualname":"::Itertools::intersperse","value":"pub fn intersperse(Self, Self::Item) -> Intersperse<Self> where Self: Sized,\nSelf::Item: Clone","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" An iterator adaptor to insert a particular value\n between each element of the adapted iterator.","sig":null,"attributes":[{"value":"/ An iterator adaptor to insert a particular value","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":11834,"byte_end":11886,"line_start":401,"line_end":401,"column_start":5,"column_end":57}},{"value":"/ between each element of the adapted iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":11891,"byte_end":11940,"line_start":402,"line_end":402,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":11945,"byte_end":11948,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":11953,"byte_end":11995,"line_start":404,"line_end":404,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":12000,"byte_end":12003,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":12008,"byte_end":12037,"line_start":406,"line_end":406,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":12042,"byte_end":12045,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":12050,"byte_end":12057,"line_start":408,"line_end":408,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":12062,"byte_end":12091,"line_start":409,"line_end":409,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":12096,"byte_end":12099,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal((0..3).intersperse(8), vec![0, 8, 1, 8, 2]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":12104,"byte_end":12176,"line_start":411,"line_end":411,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":12181,"byte_end":12188,"line_start":412,"line_end":412,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2167},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":12834,"byte_end":12850,"line_start":434,"line_end":434,"column_start":8,"column_end":24},"name":"intersperse_with","qualname":"::Itertools::intersperse_with","value":"pub fn intersperse_with<F>(Self, F) -> IntersperseWith<Self, F> where\nSelf: Sized, F: FnMut() -> Self::Item","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" An iterator adaptor to insert a particular value created by a function\n between each element of the adapted iterator.","sig":null,"attributes":[{"value":"/ An iterator adaptor to insert a particular value created by a function","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":12380,"byte_end":12454,"line_start":420,"line_end":420,"column_start":5,"column_end":79}},{"value":"/ between each element of the adapted iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":12459,"byte_end":12508,"line_start":421,"line_end":421,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":12513,"byte_end":12516,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":12521,"byte_end":12563,"line_start":423,"line_end":423,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":12568,"byte_end":12571,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":12576,"byte_end":12605,"line_start":425,"line_end":425,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":12610,"byte_end":12613,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":12618,"byte_end":12625,"line_start":427,"line_end":427,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":12630,"byte_end":12659,"line_start":428,"line_end":428,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":12664,"byte_end":12667,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ let mut i = 10;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":12672,"byte_end":12691,"line_start":430,"line_end":430,"column_start":5,"column_end":24}},{"value":"/ itertools::assert_equal((0..3).intersperse_with(|| { i -= 1; i }), vec![0, 9, 1, 8, 2]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":12696,"byte_end":12788,"line_start":431,"line_end":431,"column_start":5,"column_end":97}},{"value":"/ assert_eq!(i, 8);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":12793,"byte_end":12814,"line_start":432,"line_end":432,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":12819,"byte_end":12826,"line_start":433,"line_end":433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2169},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":14100,"byte_end":14111,"line_start":468,"line_end":468,"column_start":8,"column_end":19},"name":"zip_longest","qualname":"::Itertools::zip_longest","value":"pub fn zip_longest<J>(Self, J) -> ZipLongest<Self, J::IntoIter> where\nJ: IntoIterator, Self: Sized","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Create an iterator which iterates over both this and the specified\n iterator simultaneously, yielding pairs of two optional elements.","sig":null,"attributes":[{"value":"/ Create an iterator which iterates over both this and the specified","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":13030,"byte_end":13100,"line_start":441,"line_end":441,"column_start":5,"column_end":75}},{"value":"/ iterator simultaneously, yielding pairs of two optional elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":13105,"byte_end":13174,"line_start":442,"line_end":442,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":13179,"byte_end":13182,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":13187,"byte_end":13216,"line_start":444,"line_end":444,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":13221,"byte_end":13224,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ As long as neither input iterator is exhausted yet, it yields two values","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":13229,"byte_end":13305,"line_start":446,"line_end":446,"column_start":5,"column_end":81}},{"value":"/ via `EitherOrBoth::Both`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":13310,"byte_end":13339,"line_start":447,"line_end":447,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":13344,"byte_end":13347,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ When the parameter iterator is exhausted, it only yields a value from the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":13352,"byte_end":13429,"line_start":449,"line_end":449,"column_start":5,"column_end":82}},{"value":"/ `self` iterator via `EitherOrBoth::Left`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":13434,"byte_end":13479,"line_start":450,"line_end":450,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":13484,"byte_end":13487,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ When the `self` iterator is exhausted, it only yields a value from the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":13492,"byte_end":13566,"line_start":452,"line_end":452,"column_start":5,"column_end":79}},{"value":"/ parameter iterator via `EitherOrBoth::Right`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":13571,"byte_end":13620,"line_start":453,"line_end":453,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":13625,"byte_end":13628,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ When both iterators return `None`, all further invocations of `.next()`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":13633,"byte_end":13708,"line_start":455,"line_end":455,"column_start":5,"column_end":80}},{"value":"/ will return `None`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":13713,"byte_end":13736,"line_start":456,"line_end":456,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":13741,"byte_end":13744,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":13749,"byte_end":13777,"line_start":458,"line_end":458,"column_start":5,"column_end":33}},{"value":"/ [`EitherOrBoth<Self::Item, J::Item>`](enum.EitherOrBoth.html).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":13782,"byte_end":13848,"line_start":459,"line_end":459,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":13853,"byte_end":13856,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":13861,"byte_end":13872,"line_start":461,"line_end":461,"column_start":5,"column_end":16}},{"value":"/ use itertools::EitherOrBoth::{Both, Right};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":13877,"byte_end":13924,"line_start":462,"line_end":462,"column_start":5,"column_end":52}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":13929,"byte_end":13958,"line_start":463,"line_end":463,"column_start":5,"column_end":34}},{"value":"/ let it = (0..1).zip_longest(1..3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":13963,"byte_end":14001,"line_start":464,"line_end":464,"column_start":5,"column_end":43}},{"value":"/ itertools::assert_equal(it, vec![Both(0, 1), Right(2)]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":14006,"byte_end":14066,"line_start":465,"line_end":465,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":14071,"byte_end":14078,"line_start":466,"line_end":466,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":14083,"byte_end":14092,"line_start":467,"line_end":467,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2171},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":14549,"byte_end":14555,"line_start":481,"line_end":481,"column_start":8,"column_end":14},"name":"zip_eq","qualname":"::Itertools::zip_eq","value":"pub fn zip_eq<J>(Self, J) -> ZipEq<Self, J::IntoIter> where J: IntoIterator,\nSelf: Sized","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Create an iterator which iterates over both this and the specified\n iterator simultaneously, yielding pairs of elements.","sig":null,"attributes":[{"value":"/ Create an iterator which iterates over both this and the specified","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":14296,"byte_end":14366,"line_start":475,"line_end":475,"column_start":5,"column_end":75}},{"value":"/ iterator simultaneously, yielding pairs of elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":14371,"byte_end":14427,"line_start":476,"line_end":476,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":14432,"byte_end":14435,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the iterators reach an end and they are not of equal","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":14440,"byte_end":14510,"line_start":478,"line_end":478,"column_start":5,"column_end":75}},{"value":"/ lengths.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":14515,"byte_end":14527,"line_start":479,"line_end":479,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":14532,"byte_end":14541,"line_start":480,"line_end":480,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2173},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":15471,"byte_end":15479,"line_start":511,"line_end":511,"column_start":8,"column_end":16},"name":"batching","qualname":"::Itertools::batching","value":"pub fn batching<B, F>(Self, F) -> Batching<Self, F> where F: FnMut(&mut Self)\n-> Option<B>, Self: Sized","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" A “meta iterator adaptor”. Its closure receives a reference to the\n iterator and may pick off as many elements as it likes, to produce the\n next iterator element.","sig":null,"attributes":[{"value":"/ A “meta iterator adaptor”. Its closure receives a reference to the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":14705,"byte_end":14779,"line_start":488,"line_end":488,"column_start":5,"column_end":75}},{"value":"/ iterator and may pick off as many elements as it likes, to produce the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":14784,"byte_end":14858,"line_start":489,"line_end":489,"column_start":5,"column_end":79}},{"value":"/ next iterator element.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":14863,"byte_end":14889,"line_start":490,"line_end":490,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":14894,"byte_end":14897,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `B`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":14902,"byte_end":14935,"line_start":492,"line_end":492,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":14940,"byte_end":14943,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":14948,"byte_end":14955,"line_start":494,"line_end":494,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":14960,"byte_end":14989,"line_start":495,"line_end":495,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":14994,"byte_end":14997,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ // An adaptor that gathers elements in pairs","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":15002,"byte_end":15050,"line_start":497,"line_end":497,"column_start":5,"column_end":53}},{"value":"/ let pit = (0..4).batching(|it| {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":15055,"byte_end":15091,"line_start":498,"line_end":498,"column_start":5,"column_end":41}},{"value":"/            match it.next() {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":15096,"byte_end":15128,"line_start":499,"line_end":499,"column_start":5,"column_end":37}},{"value":"/                None => None,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":15133,"byte_end":15165,"line_start":500,"line_end":500,"column_start":5,"column_end":37}},{"value":"/                Some(x) => match it.next() {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":15170,"byte_end":15217,"line_start":501,"line_end":501,"column_start":5,"column_end":52}},{"value":"/                    None => None,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":15222,"byte_end":15258,"line_start":502,"line_end":502,"column_start":5,"column_end":41}},{"value":"/                    Some(y) => Some((x, y)),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":15263,"byte_end":15310,"line_start":503,"line_end":503,"column_start":5,"column_end":52}},{"value":"/                }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":15315,"byte_end":15335,"line_start":504,"line_end":504,"column_start":5,"column_end":25}},{"value":"/            }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":15340,"byte_end":15356,"line_start":505,"line_end":505,"column_start":5,"column_end":21}},{"value":"/        });","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":15361,"byte_end":15375,"line_start":506,"line_end":506,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":15380,"byte_end":15383,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal(pit, vec![(0, 1), (2, 3)]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":15388,"byte_end":15443,"line_start":508,"line_end":508,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":15448,"byte_end":15455,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":15460,"byte_end":15463,"line_start":510,"line_end":510,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2176},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":17208,"byte_end":17216,"line_start":553,"line_end":553,"column_start":8,"column_end":16},"name":"group_by","qualname":"::Itertools::group_by","value":"pub fn group_by<K, F>(Self, F) -> GroupBy<K, Self, F> where Self: Sized,\nF: FnMut(&Self::Item) -> K, K: PartialEq","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return an *iterable* that can group iterator elements.\n Consecutive elements that map to the same key (“runs”), are assigned\n to the same group.","sig":null,"attributes":[{"value":"/ Return an *iterable* that can group iterator elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":15646,"byte_end":15704,"line_start":518,"line_end":518,"column_start":5,"column_end":63}},{"value":"/ Consecutive elements that map to the same key (“runs”), are assigned","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":15709,"byte_end":15785,"line_start":519,"line_end":519,"column_start":5,"column_end":77}},{"value":"/ to the same group.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":15790,"byte_end":15812,"line_start":520,"line_end":520,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":15817,"byte_end":15820,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ `GroupBy` is the storage for the lazy grouping operation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":15825,"byte_end":15886,"line_start":522,"line_end":522,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":15891,"byte_end":15894,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ If the groups are consumed in order, or if each group's iterator is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":15899,"byte_end":15970,"line_start":524,"line_end":524,"column_start":5,"column_end":76}},{"value":"/ dropped without keeping it around, then `GroupBy` uses no","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":15975,"byte_end":16036,"line_start":525,"line_end":525,"column_start":5,"column_end":66}},{"value":"/ allocations.  It needs allocations only if several group iterators","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":16041,"byte_end":16111,"line_start":526,"line_end":526,"column_start":5,"column_end":75}},{"value":"/ are alive at the same time.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":16116,"byte_end":16147,"line_start":527,"line_end":527,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":16152,"byte_end":16155,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ This type implements `IntoIterator` (it is **not** an iterator","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":16160,"byte_end":16226,"line_start":529,"line_end":529,"column_start":5,"column_end":71}},{"value":"/ itself), because the group iterators need to borrow from this","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":16231,"byte_end":16296,"line_start":530,"line_end":530,"column_start":5,"column_end":70}},{"value":"/ value. It should be stored in a local variable or temporary and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":16301,"byte_end":16368,"line_start":531,"line_end":531,"column_start":5,"column_end":72}},{"value":"/ iterated.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":16373,"byte_end":16386,"line_start":532,"line_end":532,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":16391,"byte_end":16394,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `(K, Group)`: the group's key and the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":16399,"byte_end":16465,"line_start":534,"line_end":534,"column_start":5,"column_end":71}},{"value":"/ group iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":16470,"byte_end":16489,"line_start":535,"line_end":535,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":16494,"byte_end":16497,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":16502,"byte_end":16509,"line_start":537,"line_end":537,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":16514,"byte_end":16543,"line_start":538,"line_end":538,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":16548,"byte_end":16551,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ // group data into runs of larger than zero or not.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":16556,"byte_end":16611,"line_start":540,"line_end":540,"column_start":5,"column_end":60}},{"value":"/ let data = vec![1, 3, -2, -2, 1, 0, 1, 2];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":16616,"byte_end":16662,"line_start":541,"line_end":541,"column_start":5,"column_end":51}},{"value":"/ // groups:     |---->|------>|--------->|","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":16667,"byte_end":16712,"line_start":542,"line_end":542,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":16717,"byte_end":16720,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ // Note: The `&` is significant here, `GroupBy` is iterable","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":16725,"byte_end":16788,"line_start":544,"line_end":544,"column_start":5,"column_end":68}},{"value":"/ // only by reference. You can also call `.into_iter()` explicitly.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":16793,"byte_end":16863,"line_start":545,"line_end":545,"column_start":5,"column_end":75}},{"value":"/ let mut data_grouped = Vec::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":16868,"byte_end":16906,"line_start":546,"line_end":546,"column_start":5,"column_end":43}},{"value":"/ for (key, group) in &data.into_iter().group_by(|elt| *elt >= 0) {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":16911,"byte_end":16980,"line_start":547,"line_end":547,"column_start":5,"column_end":74}},{"value":"/     data_grouped.push((key, group.collect()));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":16985,"byte_end":17035,"line_start":548,"line_end":548,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":17040,"byte_end":17045,"line_start":549,"line_end":549,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(data_grouped, vec![(true, vec![1, 3]), (false, vec![-2, -2]), (true, vec![1, 0, 1, 2])]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":17050,"byte_end":17154,"line_start":550,"line_end":550,"column_start":5,"column_end":109}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":17159,"byte_end":17166,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_alloc\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":17171,"byte_end":17200,"line_start":552,"line_end":552,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2179},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":18497,"byte_end":18503,"line_start":589,"line_end":589,"column_start":8,"column_end":14},"name":"chunks","qualname":"::Itertools::chunks","value":"pub fn chunks(Self, usize) -> IntoChunks<Self> where Self: Sized","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return an *iterable* that can chunk the iterator.","sig":null,"attributes":[{"value":"/ Return an *iterable* that can chunk the iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":17410,"byte_end":17463,"line_start":561,"line_end":561,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":17468,"byte_end":17471,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ Yield subiterators (chunks) that each yield a fixed number elements,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":17476,"byte_end":17548,"line_start":563,"line_end":563,"column_start":5,"column_end":77}},{"value":"/ determined by `size`. The last chunk will be shorter if there aren't","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":17553,"byte_end":17625,"line_start":564,"line_end":564,"column_start":5,"column_end":77}},{"value":"/ enough elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":17630,"byte_end":17650,"line_start":565,"line_end":565,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":17655,"byte_end":17658,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ `IntoChunks` is based on `GroupBy`: it is iterable (implements","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":17663,"byte_end":17729,"line_start":567,"line_end":567,"column_start":5,"column_end":71}},{"value":"/ `IntoIterator`, **not** `Iterator`), and it only buffers if several","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":17734,"byte_end":17805,"line_start":568,"line_end":568,"column_start":5,"column_end":76}},{"value":"/ chunk iterators are alive at the same time.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":17810,"byte_end":17857,"line_start":569,"line_end":569,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":17862,"byte_end":17865,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Chunk`, each chunk's iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":17870,"byte_end":17930,"line_start":571,"line_end":571,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":17935,"byte_end":17938,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ **Panics** if `size` is 0.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":17943,"byte_end":17973,"line_start":573,"line_end":573,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":17978,"byte_end":17981,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":17986,"byte_end":17993,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":17998,"byte_end":18027,"line_start":576,"line_end":576,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":18032,"byte_end":18035,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ let data = vec![1, 1, 2, -2, 6, 0, 3, 1];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":18040,"byte_end":18085,"line_start":578,"line_end":578,"column_start":5,"column_end":50}},{"value":"/ //chunk size=3 |------->|-------->|--->|","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":18090,"byte_end":18134,"line_start":579,"line_end":579,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":18139,"byte_end":18142,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ // Note: The `&` is significant here, `IntoChunks` is iterable","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":18147,"byte_end":18213,"line_start":581,"line_end":581,"column_start":5,"column_end":71}},{"value":"/ // only by reference. You can also call `.into_iter()` explicitly.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":18218,"byte_end":18288,"line_start":582,"line_end":582,"column_start":5,"column_end":75}},{"value":"/ for chunk in &data.into_iter().chunks(3) {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":18293,"byte_end":18339,"line_start":583,"line_end":583,"column_start":5,"column_end":51}},{"value":"/     // Check that the sum of each chunk is 4.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":18344,"byte_end":18393,"line_start":584,"line_end":584,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(4, chunk.sum());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":18398,"byte_end":18433,"line_start":585,"line_end":585,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":18438,"byte_end":18443,"line_start":586,"line_end":586,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":18448,"byte_end":18455,"line_start":587,"line_end":587,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_alloc\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":18460,"byte_end":18489,"line_start":588,"line_end":588,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2180},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":19897,"byte_end":19910,"line_start":629,"line_end":629,"column_start":8,"column_end":21},"name":"tuple_windows","qualname":"::Itertools::tuple_windows","value":"pub fn tuple_windows<T>(Self) -> TupleWindows<Self, T> where Self: Sized +\nIterator<Item = T::Item>, T: traits::HomogeneousTuple, T::Item: Clone","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return an iterator over all contiguous windows producing tuples of\n a specific size (up to 4).","sig":null,"attributes":[{"value":"/ Return an iterator over all contiguous windows producing tuples of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":18659,"byte_end":18729,"line_start":596,"line_end":596,"column_start":5,"column_end":75}},{"value":"/ a specific size (up to 4).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":18734,"byte_end":18764,"line_start":597,"line_end":597,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":18769,"byte_end":18772,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ `tuple_windows` clones the iterator elements so that they can be","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":18777,"byte_end":18845,"line_start":599,"line_end":599,"column_start":5,"column_end":73}},{"value":"/ part of successive windows, this makes it most suited for iterators","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":18850,"byte_end":18921,"line_start":600,"line_end":600,"column_start":5,"column_end":76}},{"value":"/ of references and other values that are cheap to copy.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":18926,"byte_end":18984,"line_start":601,"line_end":601,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":18989,"byte_end":18992,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":18997,"byte_end":19004,"line_start":603,"line_end":603,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":19009,"byte_end":19038,"line_start":604,"line_end":604,"column_start":5,"column_end":34}},{"value":"/ let mut v = Vec::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":19043,"byte_end":19070,"line_start":605,"line_end":605,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":19075,"byte_end":19078,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ // pairwise iteration","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":19083,"byte_end":19108,"line_start":607,"line_end":607,"column_start":5,"column_end":30}},{"value":"/ for (a, b) in (1..5).tuple_windows() {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":19113,"byte_end":19155,"line_start":608,"line_end":608,"column_start":5,"column_end":47}},{"value":"/     v.push((a, b));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":19160,"byte_end":19183,"line_start":609,"line_end":609,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":19188,"byte_end":19193,"line_start":610,"line_end":610,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(v, vec![(1, 2), (2, 3), (3, 4)]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":19198,"byte_end":19246,"line_start":611,"line_end":611,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":19251,"byte_end":19254,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ let mut it = (1..5).tuple_windows();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":19259,"byte_end":19299,"line_start":613,"line_end":613,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(Some((1, 2, 3)), it.next());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":19304,"byte_end":19347,"line_start":614,"line_end":614,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some((2, 3, 4)), it.next());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":19352,"byte_end":19395,"line_start":615,"line_end":615,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(None, it.next());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":19400,"byte_end":19432,"line_start":616,"line_end":616,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":19437,"byte_end":19440,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ // this requires a type hint","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":19445,"byte_end":19477,"line_start":618,"line_end":618,"column_start":5,"column_end":37}},{"value":"/ let it = (1..5).tuple_windows::<(_, _, _)>();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":19482,"byte_end":19531,"line_start":619,"line_end":619,"column_start":5,"column_end":54}},{"value":"/ itertools::assert_equal(it, vec![(1, 2, 3), (2, 3, 4)]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":19536,"byte_end":19596,"line_start":620,"line_end":620,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":19601,"byte_end":19604,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ // you can also specify the complete type","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":19609,"byte_end":19654,"line_start":622,"line_end":622,"column_start":5,"column_end":50}},{"value":"/ use itertools::TupleWindows;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":19659,"byte_end":19691,"line_start":623,"line_end":623,"column_start":5,"column_end":37}},{"value":"/ use std::ops::Range;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":19696,"byte_end":19720,"line_start":624,"line_end":624,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":19725,"byte_end":19728,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ let it: TupleWindows<Range<u32>, (u32, u32, u32)> = (1..5).tuple_windows();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":19733,"byte_end":19812,"line_start":626,"line_end":626,"column_start":5,"column_end":84}},{"value":"/ itertools::assert_equal(it, vec![(1, 2, 3), (2, 3, 4)]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":19817,"byte_end":19877,"line_start":627,"line_end":627,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":19882,"byte_end":19889,"line_start":628,"line_end":628,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2182},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":21310,"byte_end":21332,"line_start":664,"line_end":664,"column_start":8,"column_end":30},"name":"circular_tuple_windows","qualname":"::Itertools::circular_tuple_windows","value":"pub fn circular_tuple_windows<T>(Self) -> CircularTupleWindows<Self, T> where\nSelf: Sized + Clone + Iterator<Item = T::Item> + ExactSizeIterator,\nT: tuple_impl::TupleCollect + Clone, T::Item: Clone","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return an iterator over all windows, wrapping back to the first\n elements when the window would otherwise exceed the length of the\n iterator, producing tuples of a specific size (up to 4).","sig":null,"attributes":[{"value":"/ Return an iterator over all windows, wrapping back to the first","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":20128,"byte_end":20195,"line_start":637,"line_end":637,"column_start":5,"column_end":72}},{"value":"/ elements when the window would otherwise exceed the length of the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":20200,"byte_end":20269,"line_start":638,"line_end":638,"column_start":5,"column_end":74}},{"value":"/ iterator, producing tuples of a specific size (up to 4).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":20274,"byte_end":20334,"line_start":639,"line_end":639,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":20339,"byte_end":20342,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ `circular_tuple_windows` clones the iterator elements so that they can be","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":20347,"byte_end":20424,"line_start":641,"line_end":641,"column_start":5,"column_end":82}},{"value":"/ part of successive windows, this makes it most suited for iterators","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":20429,"byte_end":20500,"line_start":642,"line_end":642,"column_start":5,"column_end":76}},{"value":"/ of references and other values that are cheap to copy.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":20505,"byte_end":20563,"line_start":643,"line_end":643,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":20568,"byte_end":20571,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":20576,"byte_end":20583,"line_start":645,"line_end":645,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":20588,"byte_end":20617,"line_start":646,"line_end":646,"column_start":5,"column_end":34}},{"value":"/ let mut v = Vec::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":20622,"byte_end":20649,"line_start":647,"line_end":647,"column_start":5,"column_end":32}},{"value":"/ for (a, b) in (1..5).circular_tuple_windows() {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":20654,"byte_end":20705,"line_start":648,"line_end":648,"column_start":5,"column_end":56}},{"value":"/     v.push((a, b));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":20710,"byte_end":20733,"line_start":649,"line_end":649,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":20738,"byte_end":20743,"line_start":650,"line_end":650,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(v, vec![(1, 2), (2, 3), (3, 4), (4, 1)]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":20748,"byte_end":20804,"line_start":651,"line_end":651,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":20809,"byte_end":20812,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ let mut it = (1..5).circular_tuple_windows();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":20817,"byte_end":20866,"line_start":653,"line_end":653,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(Some((1, 2, 3)), it.next());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":20871,"byte_end":20914,"line_start":654,"line_end":654,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some((2, 3, 4)), it.next());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":20919,"byte_end":20962,"line_start":655,"line_end":655,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some((3, 4, 1)), it.next());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":20967,"byte_end":21010,"line_start":656,"line_end":656,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some((4, 1, 2)), it.next());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":21015,"byte_end":21058,"line_start":657,"line_end":657,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(None, it.next());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":21063,"byte_end":21095,"line_start":658,"line_end":658,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":21100,"byte_end":21103,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ // this requires a type hint","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":21108,"byte_end":21140,"line_start":660,"line_end":660,"column_start":5,"column_end":37}},{"value":"/ let it = (1..5).circular_tuple_windows::<(_, _, _)>();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":21145,"byte_end":21203,"line_start":661,"line_end":661,"column_start":5,"column_end":63}},{"value":"/ itertools::assert_equal(it, vec![(1, 2, 3), (2, 3, 4), (3, 4, 1), (4, 1, 2)]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":21208,"byte_end":21290,"line_start":662,"line_end":662,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":21295,"byte_end":21302,"line_start":663,"line_end":663,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2184},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":22693,"byte_end":22699,"line_start":702,"line_end":702,"column_start":8,"column_end":14},"name":"tuples","qualname":"::Itertools::tuples","value":"pub fn tuples<T>(Self) -> Tuples<Self, T> where Self: Sized + Iterator<Item =\nT::Item>, T: traits::HomogeneousTuple","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return an iterator that groups the items in tuples of a specific size\n (up to 4).","sig":null,"attributes":[{"value":"/ Return an iterator that groups the items in tuples of a specific size","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":21602,"byte_end":21675,"line_start":671,"line_end":671,"column_start":5,"column_end":78}},{"value":"/ (up to 4).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":21680,"byte_end":21694,"line_start":672,"line_end":672,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":21699,"byte_end":21702,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ See also the method [`.next_tuple()`](#method.next_tuple).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":21707,"byte_end":21769,"line_start":674,"line_end":674,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":21774,"byte_end":21777,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":21782,"byte_end":21789,"line_start":676,"line_end":676,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":21794,"byte_end":21823,"line_start":677,"line_end":677,"column_start":5,"column_end":34}},{"value":"/ let mut v = Vec::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":21828,"byte_end":21855,"line_start":678,"line_end":678,"column_start":5,"column_end":32}},{"value":"/ for (a, b) in (1..5).tuples() {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":21860,"byte_end":21895,"line_start":679,"line_end":679,"column_start":5,"column_end":40}},{"value":"/     v.push((a, b));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":21900,"byte_end":21923,"line_start":680,"line_end":680,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":21928,"byte_end":21933,"line_start":681,"line_end":681,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(v, vec![(1, 2), (3, 4)]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":21938,"byte_end":21978,"line_start":682,"line_end":682,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":21983,"byte_end":21986,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ let mut it = (1..7).tuples();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":21991,"byte_end":22024,"line_start":684,"line_end":684,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(Some((1, 2, 3)), it.next());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":22029,"byte_end":22072,"line_start":685,"line_end":685,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some((4, 5, 6)), it.next());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":22077,"byte_end":22120,"line_start":686,"line_end":686,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(None, it.next());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":22125,"byte_end":22157,"line_start":687,"line_end":687,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":22162,"byte_end":22165,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ // this requires a type hint","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":22170,"byte_end":22202,"line_start":689,"line_end":689,"column_start":5,"column_end":37}},{"value":"/ let it = (1..7).tuples::<(_, _, _)>();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":22207,"byte_end":22249,"line_start":690,"line_end":690,"column_start":5,"column_end":47}},{"value":"/ itertools::assert_equal(it, vec![(1, 2, 3), (4, 5, 6)]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":22254,"byte_end":22314,"line_start":691,"line_end":691,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":22319,"byte_end":22322,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ // you can also specify the complete type","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":22327,"byte_end":22372,"line_start":693,"line_end":693,"column_start":5,"column_end":50}},{"value":"/ use itertools::Tuples;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":22377,"byte_end":22403,"line_start":694,"line_end":694,"column_start":5,"column_end":31}},{"value":"/ use std::ops::Range;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":22408,"byte_end":22432,"line_start":695,"line_end":695,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":22437,"byte_end":22440,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ let it: Tuples<Range<u32>, (u32, u32, u32)> = (1..7).tuples();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":22445,"byte_end":22511,"line_start":697,"line_end":697,"column_start":5,"column_end":71}},{"value":"/ itertools::assert_equal(it, vec![(1, 2, 3), (4, 5, 6)]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":22516,"byte_end":22576,"line_start":698,"line_end":698,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":22581,"byte_end":22588,"line_start":699,"line_end":699,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":22593,"byte_end":22596,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ See also [`Tuples::into_buffer`](structs/struct.Tuples.html#method.into_buffer).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":22601,"byte_end":22685,"line_start":701,"line_end":701,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":2186},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":23510,"byte_end":23513,"line_start":727,"line_end":727,"column_start":8,"column_end":11},"name":"tee","qualname":"::Itertools::tee","value":"pub fn tee(Self) -> (Tee<Self>, Tee<Self>) where Self: Sized,\nSelf::Item: Clone","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Split into an iterator pair that both yield all elements from\n the original iterator.","sig":null,"attributes":[{"value":"/ Split into an iterator pair that both yield all elements from","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":22874,"byte_end":22939,"line_start":709,"line_end":709,"column_start":5,"column_end":70}},{"value":"/ the original iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":22944,"byte_end":22970,"line_start":710,"line_end":710,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":22975,"byte_end":22978,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ **Note:** If the iterator is clonable, prefer using that instead","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":22983,"byte_end":23051,"line_start":712,"line_end":712,"column_start":5,"column_end":73}},{"value":"/ of using this method. It is likely to be more efficient.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":23056,"byte_end":23116,"line_start":713,"line_end":713,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":23121,"byte_end":23124,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":23129,"byte_end":23171,"line_start":715,"line_end":715,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":23176,"byte_end":23179,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":23184,"byte_end":23191,"line_start":717,"line_end":717,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":23196,"byte_end":23225,"line_start":718,"line_end":718,"column_start":5,"column_end":34}},{"value":"/ let xs = vec![0, 1, 2, 3];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":23230,"byte_end":23260,"line_start":719,"line_end":719,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":23265,"byte_end":23268,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ let (mut t1, t2) = xs.into_iter().tee();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":23273,"byte_end":23317,"line_start":721,"line_end":721,"column_start":5,"column_end":49}},{"value":"/ itertools::assert_equal(t1.next(), Some(0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":23322,"byte_end":23370,"line_start":722,"line_end":722,"column_start":5,"column_end":53}},{"value":"/ itertools::assert_equal(t2, 0..4);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":23375,"byte_end":23413,"line_start":723,"line_end":723,"column_start":5,"column_end":43}},{"value":"/ itertools::assert_equal(t1, 1..4);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":23418,"byte_end":23456,"line_start":724,"line_end":724,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":23461,"byte_end":23468,"line_start":725,"line_end":725,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_alloc\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":23473,"byte_end":23502,"line_start":726,"line_end":726,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2187},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":24244,"byte_end":24248,"line_start":752,"line_end":752,"column_start":8,"column_end":12},"name":"step","qualname":"::Itertools::step","value":"pub fn step(Self, usize) -> Step<Self> where Self: Sized","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that steps `n` elements in the base iterator\n for each iteration.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that steps `n` elements in the base iterator","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":23645,"byte_end":23720,"line_start":734,"line_end":734,"column_start":5,"column_end":80}},{"value":"/ for each iteration.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":23725,"byte_end":23748,"line_start":735,"line_end":735,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":23753,"byte_end":23756,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ The iterator steps by yielding the next element from the base iterator,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":23761,"byte_end":23836,"line_start":737,"line_end":737,"column_start":5,"column_end":80}},{"value":"/ then skipping forward `n - 1` elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":23841,"byte_end":23884,"line_start":738,"line_end":738,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":23889,"byte_end":23892,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":23897,"byte_end":23939,"line_start":740,"line_end":740,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":23944,"byte_end":23947,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the step is 0.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":23952,"byte_end":23984,"line_start":742,"line_end":742,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":23989,"byte_end":23992,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":23997,"byte_end":24004,"line_start":744,"line_end":744,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":24009,"byte_end":24038,"line_start":745,"line_end":745,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":24043,"byte_end":24046,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ let it = (0..8).step(3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":24051,"byte_end":24079,"line_start":747,"line_end":747,"column_start":5,"column_end":33}},{"value":"/ itertools::assert_equal(it, vec![0, 3, 6]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":24084,"byte_end":24131,"line_start":748,"line_end":748,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":24136,"byte_end":24143,"line_start":749,"line_end":749,"column_start":5,"column_end":12}},{"value":"deprecated(note = \"Use std .step_by() instead\", since = \"0.8.0\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":24148,"byte_end":24211,"line_start":750,"line_end":750,"column_start":5,"column_end":68}},{"value":"allow(deprecated)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":24216,"byte_end":24236,"line_start":751,"line_end":751,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2188},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":24556,"byte_end":24564,"line_start":765,"line_end":765,"column_start":8,"column_end":16},"name":"map_into","qualname":"::Itertools::map_into","value":"pub fn map_into<R>(Self) -> MapInto<Self, R> where Self: Sized,\nSelf::Item: Into<R>","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Convert each item of the iterator using the `Into` trait.","sig":null,"attributes":[{"value":"/ Convert each item of the iterator using the `Into` trait.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":24354,"byte_end":24415,"line_start":758,"line_end":758,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":24420,"byte_end":24423,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":24428,"byte_end":24439,"line_start":760,"line_end":760,"column_start":5,"column_end":16}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":24444,"byte_end":24473,"line_start":761,"line_end":761,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":24478,"byte_end":24481,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ (1i32..42i32).map_into::<f64>().collect_vec();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":24486,"byte_end":24536,"line_start":763,"line_end":763,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":24541,"byte_end":24548,"line_start":764,"line_end":764,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2190},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":24816,"byte_end":24827,"line_start":774,"line_end":774,"column_start":8,"column_end":19},"name":"map_results","qualname":"::Itertools::map_results","value":"pub fn map_results<F, T, U, E>(Self, F) -> MapOk<Self, F> where\nSelf: Iterator<Item = Result<T, E>> + Sized, F: FnMut(T) -> U","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" See [`.map_ok()`](#method.map_ok).\n","sig":null,"attributes":[{"value":"/ See [`.map_ok()`](#method.map_ok).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":24706,"byte_end":24744,"line_start":772,"line_end":772,"column_start":5,"column_end":43}},{"value":"deprecated(note = \"Use .map_ok() instead\", since = \"0.10.0\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":24749,"byte_end":24808,"line_start":773,"line_end":773,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2195},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":25407,"byte_end":25413,"line_start":792,"line_end":792,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::Itertools::map_ok","value":"pub fn map_ok<F, T, U, E>(Self, F) -> MapOk<Self, F> where Self: Iterator<Item\n= Result<T, E>> + Sized, F: FnMut(T) -> U","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that applies the provided closure\n to every `Result::Ok` value. `Result::Err` values are\n unchanged.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that applies the provided closure","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":25001,"byte_end":25065,"line_start":781,"line_end":781,"column_start":5,"column_end":69}},{"value":"/ to every `Result::Ok` value. `Result::Err` values are","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":25070,"byte_end":25127,"line_start":782,"line_end":782,"column_start":5,"column_end":62}},{"value":"/ unchanged.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":25132,"byte_end":25146,"line_start":783,"line_end":783,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":25151,"byte_end":25154,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":25159,"byte_end":25166,"line_start":785,"line_end":785,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":25171,"byte_end":25200,"line_start":786,"line_end":786,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":25205,"byte_end":25208,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ let input = vec![Ok(41), Err(false), Ok(11)];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":25213,"byte_end":25262,"line_start":788,"line_end":788,"column_start":5,"column_end":54}},{"value":"/ let it = input.into_iter().map_ok(|i| i + 1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":25267,"byte_end":25316,"line_start":789,"line_end":789,"column_start":5,"column_end":54}},{"value":"/ itertools::assert_equal(it, vec![Ok(42), Err(false), Ok(12)]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":25321,"byte_end":25387,"line_start":790,"line_end":790,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":25392,"byte_end":25399,"line_start":791,"line_end":791,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2200},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":26003,"byte_end":26012,"line_start":810,"line_end":810,"column_start":8,"column_end":17},"name":"filter_ok","qualname":"::Itertools::filter_ok","value":"pub fn filter_ok<F, T, E>(Self, F) -> FilterOk<Self, F> where\nSelf: Iterator<Item = Result<T, E>> + Sized, F: FnMut(&T) -> bool","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that filters every `Result::Ok`\n value with the provided closure. `Result::Err` values are\n unchanged.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that filters every `Result::Ok`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":25598,"byte_end":25660,"line_start":799,"line_end":799,"column_start":5,"column_end":67}},{"value":"/ value with the provided closure. `Result::Err` values are","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":25665,"byte_end":25726,"line_start":800,"line_end":800,"column_start":5,"column_end":66}},{"value":"/ unchanged.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":25731,"byte_end":25745,"line_start":801,"line_end":801,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":25750,"byte_end":25753,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":25758,"byte_end":25765,"line_start":803,"line_end":803,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":25770,"byte_end":25799,"line_start":804,"line_end":804,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":25804,"byte_end":25807,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ let input = vec![Ok(22), Err(false), Ok(11)];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":25812,"byte_end":25861,"line_start":806,"line_end":806,"column_start":5,"column_end":54}},{"value":"/ let it = input.into_iter().filter_ok(|&i| i > 20);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":25866,"byte_end":25920,"line_start":807,"line_end":807,"column_start":5,"column_end":59}},{"value":"/ itertools::assert_equal(it, vec![Ok(22), Err(false)]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":25925,"byte_end":25983,"line_start":808,"line_end":808,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":25988,"byte_end":25995,"line_start":809,"line_end":809,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2204},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":26660,"byte_end":26673,"line_start":828,"line_end":828,"column_start":8,"column_end":21},"name":"filter_map_ok","qualname":"::Itertools::filter_map_ok","value":"pub fn filter_map_ok<F, T, U, E>(Self, F) -> FilterMapOk<Self, F> where\nSelf: Iterator<Item = Result<T, E>> + Sized, F: FnMut(T) -> Option<U>","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that filters and transforms every\n `Result::Ok` value with the provided closure. `Result::Err`\n values are unchanged.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that filters and transforms every","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":26204,"byte_end":26268,"line_start":817,"line_end":817,"column_start":5,"column_end":69}},{"value":"/ `Result::Ok` value with the provided closure. `Result::Err`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":26273,"byte_end":26336,"line_start":818,"line_end":818,"column_start":5,"column_end":68}},{"value":"/ values are unchanged.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":26341,"byte_end":26366,"line_start":819,"line_end":819,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":26371,"byte_end":26374,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":26379,"byte_end":26386,"line_start":821,"line_end":821,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":26391,"byte_end":26420,"line_start":822,"line_end":822,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":26425,"byte_end":26428,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ let input = vec![Ok(22), Err(false), Ok(11)];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":26433,"byte_end":26482,"line_start":824,"line_end":824,"column_start":5,"column_end":54}},{"value":"/ let it = input.into_iter().filter_map_ok(|i| if i > 20 { Some(i * 2) } else { None });","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":26487,"byte_end":26577,"line_start":825,"line_end":825,"column_start":5,"column_end":95}},{"value":"/ itertools::assert_equal(it, vec![Ok(44), Err(false)]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":26582,"byte_end":26640,"line_start":826,"line_end":826,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":26645,"byte_end":26652,"line_start":827,"line_end":827,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2209},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":27347,"byte_end":27352,"line_start":849,"line_end":849,"column_start":8,"column_end":13},"name":"merge","qualname":"::Itertools::merge","value":"pub fn merge<J>(Self, J) -> Merge<Self, J::IntoIter> where Self: Sized,\nSelf::Item: PartialOrd, J: IntoIterator<Item = Self::Item>","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that merges the two base iterators in\n ascending order.  If both base iterators are sorted (ascending), the\n result is sorted.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that merges the two base iterators in","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":26879,"byte_end":26947,"line_start":835,"line_end":835,"column_start":5,"column_end":73}},{"value":"/ ascending order.  If both base iterators are sorted (ascending), the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":26952,"byte_end":27024,"line_start":836,"line_end":836,"column_start":5,"column_end":77}},{"value":"/ result is sorted.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":27029,"byte_end":27050,"line_start":837,"line_end":837,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":27055,"byte_end":27058,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":27063,"byte_end":27105,"line_start":839,"line_end":839,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":27110,"byte_end":27113,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":27118,"byte_end":27125,"line_start":841,"line_end":841,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":27130,"byte_end":27159,"line_start":842,"line_end":842,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":27164,"byte_end":27167,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ let a = (0..11).step(3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":27172,"byte_end":27200,"line_start":844,"line_end":844,"column_start":5,"column_end":33}},{"value":"/ let b = (0..11).step(5);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":27205,"byte_end":27233,"line_start":845,"line_end":845,"column_start":5,"column_end":33}},{"value":"/ let it = a.merge(b);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":27238,"byte_end":27262,"line_start":846,"line_end":846,"column_start":5,"column_end":29}},{"value":"/ itertools::assert_equal(it, vec![0, 0, 3, 5, 6, 9, 10]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":27267,"byte_end":27327,"line_start":847,"line_end":847,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":27332,"byte_end":27339,"line_start":848,"line_end":848,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2211},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":28129,"byte_end":28137,"line_start":873,"line_end":873,"column_start":8,"column_end":16},"name":"merge_by","qualname":"::Itertools::merge_by","value":"pub fn merge_by<J, F>(Self, J, F) -> MergeBy<Self, J::IntoIter, F> where\nSelf: Sized, J: IntoIterator<Item = Self::Item>,\nF: FnMut(&Self::Item, &Self::Item) -> bool","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that merges the two base iterators in order.\n This is much like `.merge()` but allows for a custom ordering.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that merges the two base iterators in order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":27558,"byte_end":27633,"line_start":857,"line_end":857,"column_start":5,"column_end":80}},{"value":"/ This is much like `.merge()` but allows for a custom ordering.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":27638,"byte_end":27704,"line_start":858,"line_end":858,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":27709,"byte_end":27712,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ This can be especially useful for sequences of tuples.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":27717,"byte_end":27775,"line_start":860,"line_end":860,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":27780,"byte_end":27783,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":27788,"byte_end":27830,"line_start":862,"line_end":862,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":27835,"byte_end":27838,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":27843,"byte_end":27850,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":27855,"byte_end":27884,"line_start":865,"line_end":865,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":27889,"byte_end":27892,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ let a = (0..).zip(\"bc\".chars());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":27897,"byte_end":27933,"line_start":867,"line_end":867,"column_start":5,"column_end":41}},{"value":"/ let b = (0..).zip(\"ad\".chars());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":27938,"byte_end":27974,"line_start":868,"line_end":868,"column_start":5,"column_end":41}},{"value":"/ let it = a.merge_by(b, |x, y| x.1 <= y.1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":27979,"byte_end":28025,"line_start":869,"line_end":869,"column_start":5,"column_end":51}},{"value":"/ itertools::assert_equal(it, vec![(0, 'a'), (0, 'b'), (1, 'c'), (1, 'd')]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":28030,"byte_end":28108,"line_start":870,"line_end":870,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":28113,"byte_end":28120,"line_start":871,"line_end":871,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2214},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":29650,"byte_end":29663,"line_start":909,"line_end":909,"column_start":8,"column_end":21},"name":"merge_join_by","qualname":"::Itertools::merge_join_by","value":"pub fn merge_join_by<J, F>(Self, J, F) -> MergeJoinBy<Self, J::IntoIter, F>\nwhere J: IntoIterator, F: FnMut(&Self::Item, &J::Item) -> std::cmp::Ordering,\nSelf: Sized","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Create an iterator that merges items from both this and the specified\n iterator in ascending order.","sig":null,"attributes":[{"value":"/ Create an iterator that merges items from both this and the specified","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":28423,"byte_end":28496,"line_start":881,"line_end":881,"column_start":5,"column_end":78}},{"value":"/ iterator in ascending order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":28501,"byte_end":28533,"line_start":882,"line_end":882,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":28538,"byte_end":28541,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ It chooses whether to pair elements based on the `Ordering` returned by the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":28546,"byte_end":28625,"line_start":884,"line_end":884,"column_start":5,"column_end":84}},{"value":"/ specified compare function. At any point, inspecting the tip of the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":28630,"byte_end":28701,"line_start":885,"line_end":885,"column_start":5,"column_end":76}},{"value":"/ iterators `I` and `J` as items `i` of type `I::Item` and `j` of type","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":28706,"byte_end":28778,"line_start":886,"line_end":886,"column_start":5,"column_end":77}},{"value":"/ `J::Item` respectively, the resulting iterator will:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":28783,"byte_end":28839,"line_start":887,"line_end":887,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":28844,"byte_end":28847,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ - Emit `EitherOrBoth::Left(i)` when `i < j`,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":28852,"byte_end":28900,"line_start":889,"line_end":889,"column_start":5,"column_end":53}},{"value":"/   and remove `i` from its source iterator","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":28905,"byte_end":28950,"line_start":890,"line_end":890,"column_start":5,"column_end":50}},{"value":"/ - Emit `EitherOrBoth::Right(j)` when `i > j`,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":28955,"byte_end":29004,"line_start":891,"line_end":891,"column_start":5,"column_end":54}},{"value":"/   and remove `j` from its source iterator","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":29009,"byte_end":29054,"line_start":892,"line_end":892,"column_start":5,"column_end":50}},{"value":"/ - Emit `EitherOrBoth::Both(i, j)` when  `i == j`,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":29059,"byte_end":29112,"line_start":893,"line_end":893,"column_start":5,"column_end":58}},{"value":"/   and remove both `i` and `j` from their respective source iterators","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":29117,"byte_end":29189,"line_start":894,"line_end":894,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":29194,"byte_end":29197,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":29202,"byte_end":29209,"line_start":896,"line_end":896,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":29214,"byte_end":29243,"line_start":897,"line_end":897,"column_start":5,"column_end":34}},{"value":"/ use itertools::EitherOrBoth::{Left, Right, Both};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":29248,"byte_end":29301,"line_start":898,"line_end":898,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":29306,"byte_end":29309,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ let multiples_of_2 = (0..10).step(2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":29314,"byte_end":29355,"line_start":900,"line_end":900,"column_start":5,"column_end":46}},{"value":"/ let multiples_of_3 = (0..10).step(3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":29360,"byte_end":29401,"line_start":901,"line_end":901,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":29406,"byte_end":29409,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal(","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":29414,"byte_end":29442,"line_start":903,"line_end":903,"column_start":5,"column_end":33}},{"value":"/     multiples_of_2.merge_join_by(multiples_of_3, |i, j| i.cmp(j)),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":29447,"byte_end":29517,"line_start":904,"line_end":904,"column_start":5,"column_end":75}},{"value":"/     vec![Both(0, 0), Left(2), Right(3), Left(4), Both(6, 6), Left(8), Right(9)]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":29522,"byte_end":29605,"line_start":905,"line_end":905,"column_start":5,"column_end":88}},{"value":"/ );","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":29610,"byte_end":29616,"line_start":906,"line_end":906,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":29621,"byte_end":29628,"line_start":907,"line_end":907,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":29633,"byte_end":29642,"line_start":908,"line_end":908,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2217},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":30498,"byte_end":30504,"line_start":934,"line_end":934,"column_start":8,"column_end":14},"name":"kmerge","qualname":"::Itertools::kmerge","value":"pub fn kmerge(Self) -> KMerge<<Self::Item as IntoIterator>::IntoIter> where\nSelf: Sized, Self::Item: IntoIterator,\n<Self::Item as IntoIterator>::Item: PartialOrd","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that flattens an iterator of iterators by\n merging them in ascending order.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that flattens an iterator of iterators by","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":29920,"byte_end":29992,"line_start":917,"line_end":917,"column_start":5,"column_end":77}},{"value":"/ merging them in ascending order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":29997,"byte_end":30033,"line_start":918,"line_end":918,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":30038,"byte_end":30041,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ If all base iterators are sorted (ascending), the result is sorted.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":30046,"byte_end":30117,"line_start":920,"line_end":920,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":30122,"byte_end":30125,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":30130,"byte_end":30172,"line_start":922,"line_end":922,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":30177,"byte_end":30180,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":30185,"byte_end":30192,"line_start":924,"line_end":924,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":30197,"byte_end":30226,"line_start":925,"line_end":925,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":30231,"byte_end":30234,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ let a = (0..6).step(3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":30239,"byte_end":30266,"line_start":927,"line_end":927,"column_start":5,"column_end":32}},{"value":"/ let b = (1..6).step(3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":30271,"byte_end":30298,"line_start":928,"line_end":928,"column_start":5,"column_end":32}},{"value":"/ let c = (2..6).step(3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":30303,"byte_end":30330,"line_start":929,"line_end":929,"column_start":5,"column_end":32}},{"value":"/ let it = vec![a, b, c].into_iter().kmerge();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":30335,"byte_end":30383,"line_start":930,"line_end":930,"column_start":5,"column_end":53}},{"value":"/ itertools::assert_equal(it, vec![0, 1, 2, 3, 4, 5]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":30388,"byte_end":30444,"line_start":931,"line_end":931,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":30449,"byte_end":30456,"line_start":932,"line_end":932,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_alloc\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":30461,"byte_end":30490,"line_start":933,"line_end":933,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2218},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":31511,"byte_end":31520,"line_start":963,"line_end":963,"column_start":8,"column_end":17},"name":"kmerge_by","qualname":"::Itertools::kmerge_by","value":"pub fn kmerge_by<F>(Self, F)\n-> KMergeBy<<Self::Item as IntoIterator>::IntoIter, F> where Self: Sized,\nSelf::Item: IntoIterator,\nF: FnMut(&<Self::Item as IntoIterator>::Item,\n         &<Self::Item as IntoIterator>::Item) -> bool","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that flattens an iterator of iterators by\n merging them according to the given closure.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that flattens an iterator of iterators by","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":30728,"byte_end":30800,"line_start":942,"line_end":942,"column_start":5,"column_end":77}},{"value":"/ merging them according to the given closure.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":30805,"byte_end":30853,"line_start":943,"line_end":943,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":30858,"byte_end":30861,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ The closure `first` is called with two elements *a*, *b* and should","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":30866,"byte_end":30937,"line_start":945,"line_end":945,"column_start":5,"column_end":76}},{"value":"/ return `true` if *a* is ordered before *b*.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":30942,"byte_end":30989,"line_start":946,"line_end":946,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":30994,"byte_end":30997,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ If all base iterators are sorted according to `first`, the result is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":31002,"byte_end":31074,"line_start":948,"line_end":948,"column_start":5,"column_end":77}},{"value":"/ sorted.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":31079,"byte_end":31090,"line_start":949,"line_end":949,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":31095,"byte_end":31098,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":31103,"byte_end":31145,"line_start":951,"line_end":951,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":31150,"byte_end":31153,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":31158,"byte_end":31165,"line_start":953,"line_end":953,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":31170,"byte_end":31199,"line_start":954,"line_end":954,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":31204,"byte_end":31207,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ let a = vec![-1f64, 2., 3., -5., 6., -7.];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":31212,"byte_end":31258,"line_start":956,"line_end":956,"column_start":5,"column_end":51}},{"value":"/ let b = vec![0., 2., -4.];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":31263,"byte_end":31293,"line_start":957,"line_end":957,"column_start":5,"column_end":35}},{"value":"/ let mut it = vec![a, b].into_iter().kmerge_by(|a, b| a.abs() < b.abs());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":31298,"byte_end":31374,"line_start":958,"line_end":958,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(it.next(), Some(0.));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":31379,"byte_end":31415,"line_start":959,"line_end":959,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(it.last(), Some(-7.));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":31420,"byte_end":31457,"line_start":960,"line_end":960,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":31462,"byte_end":31469,"line_start":961,"line_end":961,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_alloc\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":31474,"byte_end":31503,"line_start":962,"line_end":962,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2220},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":32272,"byte_end":32289,"line_start":984,"line_end":984,"column_start":8,"column_end":25},"name":"cartesian_product","qualname":"::Itertools::cartesian_product","value":"pub fn cartesian_product<J>(Self, J) -> Product<Self, J::IntoIter> where\nSelf: Sized, Self::Item: Clone, J: IntoIterator, J::IntoIter: Clone","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that iterates over the cartesian product of\n the element sets of two iterators `self` and `J`.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that iterates over the cartesian product of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":31846,"byte_end":31920,"line_start":973,"line_end":973,"column_start":5,"column_end":79}},{"value":"/ the element sets of two iterators `self` and `J`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":31925,"byte_end":31978,"line_start":974,"line_end":974,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":31983,"byte_end":31986,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `(Self::Item, J::Item)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":31991,"byte_end":32044,"line_start":976,"line_end":976,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":32049,"byte_end":32052,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":32057,"byte_end":32064,"line_start":978,"line_end":978,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":32069,"byte_end":32098,"line_start":979,"line_end":979,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":32103,"byte_end":32106,"line_start":980,"line_end":980,"column_start":5,"column_end":8}},{"value":"/ let it = (0..2).cartesian_product(\"αβ\".chars());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":32111,"byte_end":32165,"line_start":981,"line_end":981,"column_start":5,"column_end":57}},{"value":"/ itertools::assert_equal(it, vec![(0, 'α'), (0, 'β'), (1, 'α'), (1, 'β')]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":32170,"byte_end":32252,"line_start":982,"line_end":982,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":32257,"byte_end":32264,"line_start":983,"line_end":983,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2222},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":33746,"byte_end":33769,"line_start":1019,"line_end":1019,"column_start":8,"column_end":31},"name":"multi_cartesian_product","qualname":"::Itertools::multi_cartesian_product","value":"pub fn multi_cartesian_product(Self)\n-> MultiProduct<<Self::Item as IntoIterator>::IntoIter> where Self: Iterator +\nSized, Self::Item: IntoIterator,\n<Self::Item as IntoIterator>::IntoIter: Clone,\n<Self::Item as IntoIterator>::Item: Clone","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that iterates over the cartesian product of\n all subiterators returned by meta-iterator `self`.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that iterates over the cartesian product of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":32541,"byte_end":32615,"line_start":993,"line_end":993,"column_start":5,"column_end":79}},{"value":"/ all subiterators returned by meta-iterator `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":32620,"byte_end":32674,"line_start":994,"line_end":994,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":32679,"byte_end":32682,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ All provided iterators must yield the same `Item` type. To generate","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":32687,"byte_end":32758,"line_start":996,"line_end":996,"column_start":5,"column_end":76}},{"value":"/ the product of iterators yielding multiple types, use the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":32763,"byte_end":32824,"line_start":997,"line_end":997,"column_start":5,"column_end":66}},{"value":"/ [`iproduct`](macro.iproduct.html) macro instead.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":32829,"byte_end":32881,"line_start":998,"line_end":998,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":32886,"byte_end":32889,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":32894,"byte_end":32897,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ The iterator element type is `Vec<T>`, where `T` is the iterator element","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":32902,"byte_end":32978,"line_start":1001,"line_end":1001,"column_start":5,"column_end":81}},{"value":"/ of the subiterators.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":32983,"byte_end":33007,"line_start":1002,"line_end":1002,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":33012,"byte_end":33015,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":33020,"byte_end":33027,"line_start":1004,"line_end":1004,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":33032,"byte_end":33061,"line_start":1005,"line_end":1005,"column_start":5,"column_end":34}},{"value":"/ let mut multi_prod = (0..3).map(|i| (i * 2)..(i * 2 + 2))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":33066,"byte_end":33127,"line_start":1006,"line_end":1006,"column_start":5,"column_end":66}},{"value":"/     .multi_cartesian_product();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":33132,"byte_end":33167,"line_start":1007,"line_end":1007,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(multi_prod.next(), Some(vec![0, 2, 4]));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":33172,"byte_end":33227,"line_start":1008,"line_end":1008,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(multi_prod.next(), Some(vec![0, 2, 5]));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":33232,"byte_end":33287,"line_start":1009,"line_end":1009,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(multi_prod.next(), Some(vec![0, 3, 4]));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":33292,"byte_end":33347,"line_start":1010,"line_end":1010,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(multi_prod.next(), Some(vec![0, 3, 5]));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":33352,"byte_end":33407,"line_start":1011,"line_end":1011,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(multi_prod.next(), Some(vec![1, 2, 4]));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":33412,"byte_end":33467,"line_start":1012,"line_end":1012,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(multi_prod.next(), Some(vec![1, 2, 5]));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":33472,"byte_end":33527,"line_start":1013,"line_end":1013,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(multi_prod.next(), Some(vec![1, 3, 4]));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":33532,"byte_end":33587,"line_start":1014,"line_end":1014,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(multi_prod.next(), Some(vec![1, 3, 5]));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":33592,"byte_end":33647,"line_start":1015,"line_end":1015,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(multi_prod.next(), None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":33652,"byte_end":33692,"line_start":1016,"line_end":1016,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":33697,"byte_end":33704,"line_start":1017,"line_end":1017,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_alloc\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":33709,"byte_end":33738,"line_start":1018,"line_end":1018,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2223},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":35262,"byte_end":35270,"line_start":1056,"line_end":1056,"column_start":8,"column_end":16},"name":"coalesce","qualname":"::Itertools::coalesce","value":"pub fn coalesce<F>(Self, F) -> Coalesce<Self, F> where Self: Sized,\nF: FnMut(Self::Item, Self::Item) ->\nResult<Self::Item, (Self::Item, Self::Item)>","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that uses the passed-in closure to\n optionally merge together consecutive elements.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that uses the passed-in closure to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":34092,"byte_end":34157,"line_start":1028,"line_end":1028,"column_start":5,"column_end":70}},{"value":"/ optionally merge together consecutive elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":34162,"byte_end":34213,"line_start":1029,"line_end":1029,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":34218,"byte_end":34221,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is passed two elements, `previous` and `current` and may","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":34226,"byte_end":34302,"line_start":1031,"line_end":1031,"column_start":5,"column_end":81}},{"value":"/ return either (1) `Ok(combined)` to merge the two values or","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":34307,"byte_end":34370,"line_start":1032,"line_end":1032,"column_start":5,"column_end":68}},{"value":"/ (2) `Err((previous', current'))` to indicate they can't be merged.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":34375,"byte_end":34445,"line_start":1033,"line_end":1033,"column_start":5,"column_end":75}},{"value":"/ In (2), the value `previous'` is emitted by the iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":34450,"byte_end":34511,"line_start":1034,"line_end":1034,"column_start":5,"column_end":66}},{"value":"/ Either (1) `combined` or (2) `current'` becomes the previous value","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":34516,"byte_end":34586,"line_start":1035,"line_end":1035,"column_start":5,"column_end":75}},{"value":"/ when coalesce continues with the next pair of elements to merge. The","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":34591,"byte_end":34663,"line_start":1036,"line_end":1036,"column_start":5,"column_end":77}},{"value":"/ value that remains at the end is also emitted by the iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":34668,"byte_end":34734,"line_start":1037,"line_end":1037,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":34739,"byte_end":34742,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":34747,"byte_end":34789,"line_start":1039,"line_end":1039,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":34794,"byte_end":34797,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":34802,"byte_end":34831,"line_start":1041,"line_end":1041,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":34836,"byte_end":34839,"line_start":1042,"line_end":1042,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":34844,"byte_end":34851,"line_start":1043,"line_end":1043,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":34856,"byte_end":34885,"line_start":1044,"line_end":1044,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":34890,"byte_end":34893,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ // sum same-sign runs together","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":34898,"byte_end":34932,"line_start":1046,"line_end":1046,"column_start":5,"column_end":39}},{"value":"/ let data = vec![-1., -2., -3., 3., 1., 0., -1.];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":34937,"byte_end":34989,"line_start":1047,"line_end":1047,"column_start":5,"column_end":57}},{"value":"/ itertools::assert_equal(data.into_iter().coalesce(|x, y|","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":34994,"byte_end":35054,"line_start":1048,"line_end":1048,"column_start":5,"column_end":65}},{"value":"/         if (x >= 0.) == (y >= 0.) {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":35059,"byte_end":35098,"line_start":1049,"line_end":1049,"column_start":5,"column_end":44}},{"value":"/             Ok(x + y)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":35103,"byte_end":35128,"line_start":1050,"line_end":1050,"column_start":5,"column_end":30}},{"value":"/         } else {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":35133,"byte_end":35153,"line_start":1051,"line_end":1051,"column_start":5,"column_end":25}},{"value":"/             Err((x, y))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":35158,"byte_end":35185,"line_start":1052,"line_end":1052,"column_start":5,"column_end":32}},{"value":"/         }),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":35190,"byte_end":35205,"line_start":1053,"line_end":1053,"column_start":5,"column_end":20}},{"value":"/         vec![-6., 4., -1.]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":35210,"byte_end":35242,"line_start":1054,"line_end":1054,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":35247,"byte_end":35254,"line_start":1055,"line_end":1055,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2225},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":35984,"byte_end":35989,"line_start":1078,"line_end":1078,"column_start":8,"column_end":13},"name":"dedup","qualname":"::Itertools::dedup","value":"pub fn dedup(Self) -> Dedup<Self> where Self: Sized, Self::Item: PartialEq","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Remove duplicates from sections of consecutive identical elements.\n If the iterator is sorted, all elements will be unique.","sig":null,"attributes":[{"value":"/ Remove duplicates from sections of consecutive identical elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":35505,"byte_end":35575,"line_start":1064,"line_end":1064,"column_start":5,"column_end":75}},{"value":"/ If the iterator is sorted, all elements will be unique.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":35580,"byte_end":35639,"line_start":1065,"line_end":1065,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":35644,"byte_end":35647,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":35652,"byte_end":35694,"line_start":1067,"line_end":1067,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":35699,"byte_end":35702,"line_start":1068,"line_end":1068,"column_start":5,"column_end":8}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":35707,"byte_end":35736,"line_start":1069,"line_end":1069,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":35741,"byte_end":35744,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":35749,"byte_end":35756,"line_start":1071,"line_end":1071,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":35761,"byte_end":35790,"line_start":1072,"line_end":1072,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":35795,"byte_end":35798,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ let data = vec![1., 1., 2., 3., 3., 2., 2.];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":35803,"byte_end":35851,"line_start":1074,"line_end":1074,"column_start":5,"column_end":53}},{"value":"/ itertools::assert_equal(data.into_iter().dedup(),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":35856,"byte_end":35909,"line_start":1075,"line_end":1075,"column_start":5,"column_end":58}},{"value":"/                         vec![1., 2., 3., 2.]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":35914,"byte_end":35964,"line_start":1076,"line_end":1076,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":35969,"byte_end":35976,"line_start":1077,"line_end":1077,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2226},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":36734,"byte_end":36742,"line_start":1100,"line_end":1100,"column_start":8,"column_end":16},"name":"dedup_by","qualname":"::Itertools::dedup_by","value":"pub fn dedup_by<Cmp>(Self, Cmp) -> DedupBy<Self, Cmp> where Self: Sized,\nCmp: FnMut(&Self::Item, &Self::Item) -> bool","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Remove duplicates from sections of consecutive identical elements,\n determining equality using a comparison function.\n If the iterator is sorted, all elements will be unique.","sig":null,"attributes":[{"value":"/ Remove duplicates from sections of consecutive identical elements,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":36122,"byte_end":36192,"line_start":1085,"line_end":1085,"column_start":5,"column_end":75}},{"value":"/ determining equality using a comparison function.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":36197,"byte_end":36250,"line_start":1086,"line_end":1086,"column_start":5,"column_end":58}},{"value":"/ If the iterator is sorted, all elements will be unique.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":36255,"byte_end":36314,"line_start":1087,"line_end":1087,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":36319,"byte_end":36322,"line_start":1088,"line_end":1088,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":36327,"byte_end":36369,"line_start":1089,"line_end":1089,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":36374,"byte_end":36377,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":36382,"byte_end":36411,"line_start":1091,"line_end":1091,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":36416,"byte_end":36419,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":36424,"byte_end":36431,"line_start":1093,"line_end":1093,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":36436,"byte_end":36465,"line_start":1094,"line_end":1094,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":36470,"byte_end":36473,"line_start":1095,"line_end":1095,"column_start":5,"column_end":8}},{"value":"/ let data = vec![(0, 1.), (1, 1.), (0, 2.), (0, 3.), (1, 3.), (1, 2.), (2, 2.)];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":36478,"byte_end":36561,"line_start":1096,"line_end":1096,"column_start":5,"column_end":88}},{"value":"/ itertools::assert_equal(data.into_iter().dedup_by(|x, y| x.1 == y.1),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":36566,"byte_end":36639,"line_start":1097,"line_end":1097,"column_start":5,"column_end":78}},{"value":"/                         vec![(0, 1.), (0, 2.), (0, 3.), (1, 2.)]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":36644,"byte_end":36714,"line_start":1098,"line_end":1098,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":36719,"byte_end":36726,"line_start":1099,"line_end":1099,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2228},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":37519,"byte_end":37535,"line_start":1122,"line_end":1122,"column_start":8,"column_end":24},"name":"dedup_with_count","qualname":"::Itertools::dedup_with_count","value":"pub fn dedup_with_count(Self) -> DedupWithCount<Self> where Self: Sized","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Remove duplicates from sections of consecutive identical elements, while keeping a count of\n how many repeated elements were present.\n If the iterator is sorted, all elements will be unique.","sig":null,"attributes":[{"value":"/ Remove duplicates from sections of consecutive identical elements, while keeping a count of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":36926,"byte_end":37021,"line_start":1107,"line_end":1107,"column_start":5,"column_end":100}},{"value":"/ how many repeated elements were present.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":37026,"byte_end":37070,"line_start":1108,"line_end":1108,"column_start":5,"column_end":49}},{"value":"/ If the iterator is sorted, all elements will be unique.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":37075,"byte_end":37134,"line_start":1109,"line_end":1109,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":37139,"byte_end":37142,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `(usize, Self::Item)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":37147,"byte_end":37198,"line_start":1111,"line_end":1111,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":37203,"byte_end":37206,"line_start":1112,"line_end":1112,"column_start":5,"column_end":8}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":37211,"byte_end":37240,"line_start":1113,"line_end":1113,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":37245,"byte_end":37248,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":37253,"byte_end":37260,"line_start":1115,"line_end":1115,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":37265,"byte_end":37294,"line_start":1116,"line_end":1116,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":37299,"byte_end":37302,"line_start":1117,"line_end":1117,"column_start":5,"column_end":8}},{"value":"/ let data = vec![1., 1., 2., 3., 3., 2., 2.];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":37307,"byte_end":37355,"line_start":1118,"line_end":1118,"column_start":5,"column_end":53}},{"value":"/ itertools::assert_equal(data.into_iter().dedup_with_count(),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":37360,"byte_end":37424,"line_start":1119,"line_end":1119,"column_start":5,"column_end":69}},{"value":"/                         vec![(2, 1.), (1, 2.), (2, 3.), (2, 2.)]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":37429,"byte_end":37499,"line_start":1120,"line_end":1120,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":37504,"byte_end":37511,"line_start":1121,"line_end":1121,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2229},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":38385,"byte_end":38404,"line_start":1144,"line_end":1144,"column_start":8,"column_end":27},"name":"dedup_by_with_count","qualname":"::Itertools::dedup_by_with_count","value":"pub fn dedup_by_with_count<Cmp>(Self, Cmp) -> DedupByWithCount<Self, Cmp>\nwhere Self: Sized, Cmp: FnMut(&Self::Item, &Self::Item) -> bool","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Remove duplicates from sections of consecutive identical elements, while keeping a count of\n how many repeated elements were present.\n This will determine equality using a comparison function.\n If the iterator is sorted, all elements will be unique.","sig":null,"attributes":[{"value":"/ Remove duplicates from sections of consecutive identical elements, while keeping a count of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":37651,"byte_end":37746,"line_start":1128,"line_end":1128,"column_start":5,"column_end":100}},{"value":"/ how many repeated elements were present.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":37751,"byte_end":37795,"line_start":1129,"line_end":1129,"column_start":5,"column_end":49}},{"value":"/ This will determine equality using a comparison function.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":37800,"byte_end":37861,"line_start":1130,"line_end":1130,"column_start":5,"column_end":66}},{"value":"/ If the iterator is sorted, all elements will be unique.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":37866,"byte_end":37925,"line_start":1131,"line_end":1131,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":37930,"byte_end":37933,"line_start":1132,"line_end":1132,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `(usize, Self::Item)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":37938,"byte_end":37989,"line_start":1133,"line_end":1133,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":37994,"byte_end":37997,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ This iterator is *fused*.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":38002,"byte_end":38031,"line_start":1135,"line_end":1135,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":38036,"byte_end":38039,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":38044,"byte_end":38051,"line_start":1137,"line_end":1137,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":38056,"byte_end":38085,"line_start":1138,"line_end":1138,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":38090,"byte_end":38093,"line_start":1139,"line_end":1139,"column_start":5,"column_end":8}},{"value":"/ let data = vec![(0, 1.), (1, 1.), (0, 2.), (0, 3.), (1, 3.), (1, 2.), (2, 2.)];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":38098,"byte_end":38181,"line_start":1140,"line_end":1140,"column_start":5,"column_end":88}},{"value":"/ itertools::assert_equal(data.into_iter().dedup_by_with_count(|x, y| x.1 == y.1),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":38186,"byte_end":38270,"line_start":1141,"line_end":1141,"column_start":5,"column_end":89}},{"value":"/                         vec![(2, (0, 1.)), (1, (0, 2.)), (2, (0, 3.)), (2, (1, 2.))]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":38275,"byte_end":38365,"line_start":1142,"line_end":1142,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":38370,"byte_end":38377,"line_start":1143,"line_end":1143,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2231},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":39394,"byte_end":39400,"line_start":1170,"line_end":1170,"column_start":8,"column_end":14},"name":"unique","qualname":"::Itertools::unique","value":"pub fn unique(Self) -> Unique<Self> where Self: Sized, Self::Item: Clone +\nEq + Hash","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that filters out elements that have\n already been produced once during the iteration. Duplicates\n are detected using hash and equality.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that filters out elements that have","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":38610,"byte_end":38676,"line_start":1151,"line_end":1151,"column_start":5,"column_end":71}},{"value":"/ already been produced once during the iteration. Duplicates","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":38681,"byte_end":38744,"line_start":1152,"line_end":1152,"column_start":5,"column_end":68}},{"value":"/ are detected using hash and equality.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":38749,"byte_end":38790,"line_start":1153,"line_end":1153,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":38795,"byte_end":38798,"line_start":1154,"line_end":1154,"column_start":5,"column_end":8}},{"value":"/ Clones of visited elements are stored in a hash set in the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":38803,"byte_end":38865,"line_start":1155,"line_end":1155,"column_start":5,"column_end":67}},{"value":"/ iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":38870,"byte_end":38883,"line_start":1156,"line_end":1156,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":38888,"byte_end":38891,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ The iterator is stable, returning the non-duplicate items in the order","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":38896,"byte_end":38970,"line_start":1158,"line_end":1158,"column_start":5,"column_end":79}},{"value":"/ in which they occur in the adapted iterator. In a set of duplicate","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":38975,"byte_end":39045,"line_start":1159,"line_end":1159,"column_start":5,"column_end":75}},{"value":"/ items, the first item encountered is the item retained.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":39050,"byte_end":39109,"line_start":1160,"line_end":1160,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":39114,"byte_end":39117,"line_start":1161,"line_end":1161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":39122,"byte_end":39129,"line_start":1162,"line_end":1162,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":39134,"byte_end":39163,"line_start":1163,"line_end":1163,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":39168,"byte_end":39171,"line_start":1164,"line_end":1164,"column_start":5,"column_end":8}},{"value":"/ let data = vec![10, 20, 30, 20, 40, 10, 50];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":39176,"byte_end":39224,"line_start":1165,"line_end":1165,"column_start":5,"column_end":53}},{"value":"/ itertools::assert_equal(data.into_iter().unique(),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":39229,"byte_end":39283,"line_start":1166,"line_end":1166,"column_start":5,"column_end":59}},{"value":"/                         vec![10, 20, 30, 40, 50]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":39288,"byte_end":39342,"line_start":1167,"line_end":1167,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":39347,"byte_end":39354,"line_start":1168,"line_end":1168,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":39359,"byte_end":39386,"line_start":1169,"line_end":1169,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2232},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":40383,"byte_end":40392,"line_start":1196,"line_end":1196,"column_start":8,"column_end":17},"name":"unique_by","qualname":"::Itertools::unique_by","value":"pub fn unique_by<V, F>(Self, F) -> UniqueBy<Self, V, F> where Self: Sized,\nV: Eq + Hash, F: FnMut(&Self::Item) -> V","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that filters out elements that have\n already been produced once during the iteration.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that filters out elements that have","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":39545,"byte_end":39611,"line_start":1177,"line_end":1177,"column_start":5,"column_end":71}},{"value":"/ already been produced once during the iteration.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":39616,"byte_end":39668,"line_start":1178,"line_end":1178,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":39673,"byte_end":39676,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ Duplicates are detected by comparing the key they map to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":39681,"byte_end":39741,"line_start":1180,"line_end":1180,"column_start":5,"column_end":65}},{"value":"/ with the keying function `f` by hash and equality.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":39746,"byte_end":39800,"line_start":1181,"line_end":1181,"column_start":5,"column_end":59}},{"value":"/ The keys are stored in a hash set in the iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":39805,"byte_end":39859,"line_start":1182,"line_end":1182,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":39864,"byte_end":39867,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ The iterator is stable, returning the non-duplicate items in the order","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":39872,"byte_end":39946,"line_start":1184,"line_end":1184,"column_start":5,"column_end":79}},{"value":"/ in which they occur in the adapted iterator. In a set of duplicate","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":39951,"byte_end":40021,"line_start":1185,"line_end":1185,"column_start":5,"column_end":75}},{"value":"/ items, the first item encountered is the item retained.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":40026,"byte_end":40085,"line_start":1186,"line_end":1186,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":40090,"byte_end":40093,"line_start":1187,"line_end":1187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":40098,"byte_end":40105,"line_start":1188,"line_end":1188,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":40110,"byte_end":40139,"line_start":1189,"line_end":1189,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":40144,"byte_end":40147,"line_start":1190,"line_end":1190,"column_start":5,"column_end":8}},{"value":"/ let data = vec![\"a\", \"bb\", \"aa\", \"c\", \"ccc\"];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":40152,"byte_end":40201,"line_start":1191,"line_end":1191,"column_start":5,"column_end":54}},{"value":"/ itertools::assert_equal(data.into_iter().unique_by(|s| s.len()),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":40206,"byte_end":40274,"line_start":1192,"line_end":1192,"column_start":5,"column_end":73}},{"value":"/                         vec![\"a\", \"bb\", \"ccc\"]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":40279,"byte_end":40331,"line_start":1193,"line_end":1193,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":40336,"byte_end":40343,"line_start":1194,"line_end":1194,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":40348,"byte_end":40375,"line_start":1195,"line_end":1195,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2235},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":41129,"byte_end":41147,"line_start":1216,"line_end":1216,"column_start":8,"column_end":26},"name":"peeking_take_while","qualname":"::Itertools::peeking_take_while","value":"pub fn peeking_take_while<F>(&mut Self, F) -> PeekingTakeWhile<, Self, F>\nwhere Self: Sized + PeekingNext, F: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that borrows from this iterator and\n takes items while the closure `accept` returns `true`.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that borrows from this iterator and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":40588,"byte_end":40654,"line_start":1204,"line_end":1204,"column_start":5,"column_end":71}},{"value":"/ takes items while the closure `accept` returns `true`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":40659,"byte_end":40717,"line_start":1205,"line_end":1205,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":40722,"byte_end":40725,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ This adaptor can only be used on iterators that implement `PeekingNext`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":40730,"byte_end":40805,"line_start":1207,"line_end":1207,"column_start":5,"column_end":80}},{"value":"/ like `.peekable()`, `put_back` and a few other collection iterators.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":40810,"byte_end":40882,"line_start":1208,"line_end":1208,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":40887,"byte_end":40890,"line_start":1209,"line_end":1209,"column_start":5,"column_end":8}},{"value":"/ The last and rejected element (first `false`) is still available when","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":40895,"byte_end":40968,"line_start":1210,"line_end":1210,"column_start":5,"column_end":78}},{"value":"/ `peeking_take_while` is done.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":40973,"byte_end":41006,"line_start":1211,"line_end":1211,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":41011,"byte_end":41014,"line_start":1212,"line_end":1212,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":41019,"byte_end":41022,"line_start":1213,"line_end":1213,"column_start":5,"column_end":8}},{"value":"/ See also [`.take_while_ref()`](#method.take_while_ref)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":41027,"byte_end":41085,"line_start":1214,"line_end":1214,"column_start":5,"column_end":63}},{"value":"/ which is a similar adaptor.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":41090,"byte_end":41121,"line_start":1215,"line_end":1215,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2237},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":42093,"byte_end":42107,"line_start":1241,"line_end":1241,"column_start":8,"column_end":22},"name":"take_while_ref","qualname":"::Itertools::take_while_ref","value":"pub fn take_while_ref<F>(&mut Self, F) -> TakeWhileRef<, Self, F> where\nSelf: Clone, F: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that borrows from a `Clone`-able iterator\n to only pick off elements while the predicate `accept` returns `true`.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that borrows from a `Clone`-able iterator","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":41366,"byte_end":41438,"line_start":1223,"line_end":1223,"column_start":5,"column_end":77}},{"value":"/ to only pick off elements while the predicate `accept` returns `true`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":41443,"byte_end":41517,"line_start":1224,"line_end":1224,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":41522,"byte_end":41525,"line_start":1225,"line_end":1225,"column_start":5,"column_end":8}},{"value":"/ It uses the `Clone` trait to restore the original iterator so that the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":41530,"byte_end":41604,"line_start":1226,"line_end":1226,"column_start":5,"column_end":79}},{"value":"/ last and rejected element (first `false`) is still available when","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":41609,"byte_end":41678,"line_start":1227,"line_end":1227,"column_start":5,"column_end":74}},{"value":"/ `take_while_ref` is done.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":41683,"byte_end":41712,"line_start":1228,"line_end":1228,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":41717,"byte_end":41720,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":41725,"byte_end":41732,"line_start":1230,"line_end":1230,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":41737,"byte_end":41766,"line_start":1231,"line_end":1231,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":41771,"byte_end":41774,"line_start":1232,"line_end":1232,"column_start":5,"column_end":8}},{"value":"/ let mut hexadecimals = \"0123456789abcdef\".chars();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":41779,"byte_end":41833,"line_start":1233,"line_end":1233,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":41838,"byte_end":41841,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ let decimals = hexadecimals.take_while_ref(|c| c.is_numeric())","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":41846,"byte_end":41912,"line_start":1235,"line_end":1235,"column_start":5,"column_end":71}},{"value":"/                            .collect::<String>();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":41917,"byte_end":41969,"line_start":1236,"line_end":1236,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(decimals, \"0123456789\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":41974,"byte_end":42013,"line_start":1237,"line_end":1237,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(hexadecimals.next(), Some('a'));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":42018,"byte_end":42065,"line_start":1238,"line_end":1238,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":42070,"byte_end":42073,"line_start":1239,"line_end":1239,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":42078,"byte_end":42085,"line_start":1240,"line_end":1240,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2239},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":42773,"byte_end":42783,"line_start":1262,"line_end":1262,"column_start":8,"column_end":18},"name":"while_some","qualname":"::Itertools::while_some","value":"pub fn while_some<A>(Self) -> WhileSome<Self> where Self: Sized +\nIterator<Item = Option<A>>","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that filters `Option<A>` iterator elements\n and produces `A`. Stops on the first `None` encountered.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that filters `Option<A>` iterator elements","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":42293,"byte_end":42366,"line_start":1248,"line_end":1248,"column_start":5,"column_end":78}},{"value":"/ and produces `A`. Stops on the first `None` encountered.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":42371,"byte_end":42431,"line_start":1249,"line_end":1249,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":42436,"byte_end":42439,"line_start":1250,"line_end":1250,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `A`, the unwrapped element.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":42444,"byte_end":42500,"line_start":1251,"line_end":1251,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":42505,"byte_end":42508,"line_start":1252,"line_end":1252,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":42513,"byte_end":42520,"line_start":1253,"line_end":1253,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":42525,"byte_end":42554,"line_start":1254,"line_end":1254,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":42559,"byte_end":42562,"line_start":1255,"line_end":1255,"column_start":5,"column_end":8}},{"value":"/ // List all hexadecimal digits","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":42567,"byte_end":42601,"line_start":1256,"line_end":1256,"column_start":5,"column_end":39}},{"value":"/ itertools::assert_equal(","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":42606,"byte_end":42634,"line_start":1257,"line_end":1257,"column_start":5,"column_end":33}},{"value":"/     (0..).map(|i| std::char::from_digit(i, 16)).while_some(),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":42639,"byte_end":42704,"line_start":1258,"line_end":1258,"column_start":5,"column_end":70}},{"value":"/     \"0123456789abcdef\".chars());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":42709,"byte_end":42745,"line_start":1259,"line_end":1259,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":42750,"byte_end":42753,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":42758,"byte_end":42765,"line_start":1261,"line_end":1261,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2241},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":44215,"byte_end":44233,"line_start":1301,"line_end":1301,"column_start":8,"column_end":26},"name":"tuple_combinations","qualname":"::Itertools::tuple_combinations","value":"pub fn tuple_combinations<T>(Self) -> TupleCombinations<Self, T> where\nSelf: Sized + Clone, Self::Item: Clone, T: adaptors::HasCombination<Self>","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that iterates over the combinations of the\n elements from an iterator.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that iterates over the combinations of the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":42919,"byte_end":42992,"line_start":1268,"line_end":1268,"column_start":5,"column_end":78}},{"value":"/ elements from an iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":42997,"byte_end":43027,"line_start":1269,"line_end":1269,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":43032,"byte_end":43035,"line_start":1270,"line_end":1270,"column_start":5,"column_end":8}},{"value":"/ Iterator element can be any homogeneous tuple of type `Self::Item` with","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":43040,"byte_end":43115,"line_start":1271,"line_end":1271,"column_start":5,"column_end":80}},{"value":"/ size up to 12.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":43120,"byte_end":43138,"line_start":1272,"line_end":1272,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":43143,"byte_end":43146,"line_start":1273,"line_end":1273,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":43151,"byte_end":43158,"line_start":1274,"line_end":1274,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":43163,"byte_end":43192,"line_start":1275,"line_end":1275,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":43197,"byte_end":43200,"line_start":1276,"line_end":1276,"column_start":5,"column_end":8}},{"value":"/ let mut v = Vec::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":43205,"byte_end":43232,"line_start":1277,"line_end":1277,"column_start":5,"column_end":32}},{"value":"/ for (a, b) in (1..5).tuple_combinations() {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":43237,"byte_end":43284,"line_start":1278,"line_end":1278,"column_start":5,"column_end":52}},{"value":"/     v.push((a, b));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":43289,"byte_end":43312,"line_start":1279,"line_end":1279,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":43317,"byte_end":43322,"line_start":1280,"line_end":1280,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(v, vec![(1, 2), (1, 3), (1, 4), (2, 3), (2, 4), (3, 4)]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":43327,"byte_end":43399,"line_start":1281,"line_end":1281,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":43404,"byte_end":43407,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ let mut it = (1..5).tuple_combinations();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":43412,"byte_end":43457,"line_start":1283,"line_end":1283,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(Some((1, 2, 3)), it.next());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":43462,"byte_end":43505,"line_start":1284,"line_end":1284,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some((1, 2, 4)), it.next());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":43510,"byte_end":43553,"line_start":1285,"line_end":1285,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some((1, 3, 4)), it.next());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":43558,"byte_end":43601,"line_start":1286,"line_end":1286,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some((2, 3, 4)), it.next());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":43606,"byte_end":43649,"line_start":1287,"line_end":1287,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(None, it.next());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":43654,"byte_end":43686,"line_start":1288,"line_end":1288,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":43691,"byte_end":43694,"line_start":1289,"line_end":1289,"column_start":5,"column_end":8}},{"value":"/ // this requires a type hint","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":43699,"byte_end":43731,"line_start":1290,"line_end":1290,"column_start":5,"column_end":37}},{"value":"/ let it = (1..5).tuple_combinations::<(_, _, _)>();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":43736,"byte_end":43790,"line_start":1291,"line_end":1291,"column_start":5,"column_end":59}},{"value":"/ itertools::assert_equal(it, vec![(1, 2, 3), (1, 2, 4), (1, 3, 4), (2, 3, 4)]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":43795,"byte_end":43877,"line_start":1292,"line_end":1292,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":43882,"byte_end":43885,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}},{"value":"/ // you can also specify the complete type","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":43890,"byte_end":43935,"line_start":1294,"line_end":1294,"column_start":5,"column_end":50}},{"value":"/ use itertools::TupleCombinations;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":43940,"byte_end":43977,"line_start":1295,"line_end":1295,"column_start":5,"column_end":42}},{"value":"/ use std::ops::Range;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":43982,"byte_end":44006,"line_start":1296,"line_end":1296,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":44011,"byte_end":44014,"line_start":1297,"line_end":1297,"column_start":5,"column_end":8}},{"value":"/ let it: TupleCombinations<Range<u32>, (u32, u32, u32)> = (1..5).tuple_combinations();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":44019,"byte_end":44108,"line_start":1298,"line_end":1298,"column_start":5,"column_end":94}},{"value":"/ itertools::assert_equal(it, vec![(1, 2, 3), (1, 2, 4), (1, 3, 4), (2, 3, 4)]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":44113,"byte_end":44195,"line_start":1299,"line_end":1299,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":44200,"byte_end":44207,"line_start":1300,"line_end":1300,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2243},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":45444,"byte_end":45456,"line_start":1339,"line_end":1339,"column_start":8,"column_end":20},"name":"combinations","qualname":"::Itertools::combinations","value":"pub fn combinations(Self, usize) -> Combinations<Self> where Self: Sized,\nSelf::Item: Clone","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that iterates over the `k`-length combinations of\n the elements from an iterator.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that iterates over the `k`-length combinations of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":44450,"byte_end":44530,"line_start":1309,"line_end":1309,"column_start":5,"column_end":85}},{"value":"/ the elements from an iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":44535,"byte_end":44569,"line_start":1310,"line_end":1310,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":44574,"byte_end":44577,"line_start":1311,"line_end":1311,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Vec<Self::Item>`. The iterator produces a new Vec per iteration,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":44582,"byte_end":44676,"line_start":1312,"line_end":1312,"column_start":5,"column_end":99}},{"value":"/ and clones the iterator elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":44681,"byte_end":44718,"line_start":1313,"line_end":1313,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":44723,"byte_end":44726,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":44731,"byte_end":44738,"line_start":1315,"line_end":1315,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":44743,"byte_end":44772,"line_start":1316,"line_end":1316,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":44777,"byte_end":44780,"line_start":1317,"line_end":1317,"column_start":5,"column_end":8}},{"value":"/ let it = (1..5).combinations(3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":44785,"byte_end":44821,"line_start":1318,"line_end":1318,"column_start":5,"column_end":41}},{"value":"/ itertools::assert_equal(it, vec![","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":44826,"byte_end":44863,"line_start":1319,"line_end":1319,"column_start":5,"column_end":42}},{"value":"/     vec![1, 2, 3],","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":44868,"byte_end":44890,"line_start":1320,"line_end":1320,"column_start":5,"column_end":27}},{"value":"/     vec![1, 2, 4],","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":44895,"byte_end":44917,"line_start":1321,"line_end":1321,"column_start":5,"column_end":27}},{"value":"/     vec![1, 3, 4],","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":44922,"byte_end":44944,"line_start":1322,"line_end":1322,"column_start":5,"column_end":27}},{"value":"/     vec![2, 3, 4],","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":44949,"byte_end":44971,"line_start":1323,"line_end":1323,"column_start":5,"column_end":27}},{"value":"/ ]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":44976,"byte_end":44983,"line_start":1324,"line_end":1324,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":44988,"byte_end":44995,"line_start":1325,"line_end":1325,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":45000,"byte_end":45003,"line_start":1326,"line_end":1326,"column_start":5,"column_end":8}},{"value":"/ Note: Combinations does not take into account the equality of the iterated values.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":45008,"byte_end":45094,"line_start":1327,"line_end":1327,"column_start":5,"column_end":91}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":45099,"byte_end":45106,"line_start":1328,"line_end":1328,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":45111,"byte_end":45140,"line_start":1329,"line_end":1329,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":45145,"byte_end":45148,"line_start":1330,"line_end":1330,"column_start":5,"column_end":8}},{"value":"/ let it = vec![1, 2, 2].into_iter().combinations(2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":45153,"byte_end":45208,"line_start":1331,"line_end":1331,"column_start":5,"column_end":60}},{"value":"/ itertools::assert_equal(it, vec![","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":45213,"byte_end":45250,"line_start":1332,"line_end":1332,"column_start":5,"column_end":42}},{"value":"/     vec![1, 2], // Note: these are the same","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":45255,"byte_end":45302,"line_start":1333,"line_end":1333,"column_start":5,"column_end":52}},{"value":"/     vec![1, 2], // Note: these are the same","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":45307,"byte_end":45354,"line_start":1334,"line_end":1334,"column_start":5,"column_end":52}},{"value":"/     vec![2, 2],","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":45359,"byte_end":45378,"line_start":1335,"line_end":1335,"column_start":5,"column_end":24}},{"value":"/ ]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":45383,"byte_end":45390,"line_start":1336,"line_end":1336,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":45395,"byte_end":45402,"line_start":1337,"line_end":1337,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_alloc\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":45407,"byte_end":45436,"line_start":1338,"line_end":1338,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2244},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":46265,"byte_end":46294,"line_start":1366,"line_end":1366,"column_start":8,"column_end":37},"name":"combinations_with_replacement","qualname":"::Itertools::combinations_with_replacement","value":"pub fn combinations_with_replacement(Self, usize)\n-> CombinationsWithReplacement<Self> where Self: Sized, Self::Item: Clone","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return an iterator that iterates over the `k`-length combinations of\n the elements from an iterator, with replacement.","sig":null,"attributes":[{"value":"/ Return an iterator that iterates over the `k`-length combinations of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":45615,"byte_end":45687,"line_start":1346,"line_end":1346,"column_start":5,"column_end":77}},{"value":"/ the elements from an iterator, with replacement.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":45692,"byte_end":45744,"line_start":1347,"line_end":1347,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":45749,"byte_end":45752,"line_start":1348,"line_end":1348,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Vec<Self::Item>`. The iterator produces a new Vec per iteration,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":45757,"byte_end":45851,"line_start":1349,"line_end":1349,"column_start":5,"column_end":99}},{"value":"/ and clones the iterator elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":45856,"byte_end":45893,"line_start":1350,"line_end":1350,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":45898,"byte_end":45901,"line_start":1351,"line_end":1351,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":45906,"byte_end":45913,"line_start":1352,"line_end":1352,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":45918,"byte_end":45947,"line_start":1353,"line_end":1353,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":45952,"byte_end":45955,"line_start":1354,"line_end":1354,"column_start":5,"column_end":8}},{"value":"/ let it = (1..4).combinations_with_replacement(2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":45960,"byte_end":46013,"line_start":1355,"line_end":1355,"column_start":5,"column_end":58}},{"value":"/ itertools::assert_equal(it, vec![","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":46018,"byte_end":46055,"line_start":1356,"line_end":1356,"column_start":5,"column_end":42}},{"value":"/     vec![1, 1],","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":46060,"byte_end":46079,"line_start":1357,"line_end":1357,"column_start":5,"column_end":24}},{"value":"/     vec![1, 2],","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":46084,"byte_end":46103,"line_start":1358,"line_end":1358,"column_start":5,"column_end":24}},{"value":"/     vec![1, 3],","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":46108,"byte_end":46127,"line_start":1359,"line_end":1359,"column_start":5,"column_end":24}},{"value":"/     vec![2, 2],","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":46132,"byte_end":46151,"line_start":1360,"line_end":1360,"column_start":5,"column_end":24}},{"value":"/     vec![2, 3],","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":46156,"byte_end":46175,"line_start":1361,"line_end":1361,"column_start":5,"column_end":24}},{"value":"/     vec![3, 3],","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":46180,"byte_end":46199,"line_start":1362,"line_end":1362,"column_start":5,"column_end":24}},{"value":"/ ]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":46204,"byte_end":46211,"line_start":1363,"line_end":1363,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":46216,"byte_end":46223,"line_start":1364,"line_end":1364,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_alloc\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":46228,"byte_end":46257,"line_start":1365,"line_end":1365,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2245},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":47809,"byte_end":47821,"line_start":1412,"line_end":1412,"column_start":8,"column_end":20},"name":"permutations","qualname":"::Itertools::permutations","value":"pub fn permutations(Self, usize) -> Permutations<Self> where Self: Sized,\nSelf::Item: Clone","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that iterates over all k-permutations of the\n elements from an iterator.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that iterates over all k-permutations of the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":46501,"byte_end":46576,"line_start":1374,"line_end":1374,"column_start":5,"column_end":80}},{"value":"/ elements from an iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":46581,"byte_end":46611,"line_start":1375,"line_end":1375,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":46616,"byte_end":46619,"line_start":1376,"line_end":1376,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Vec<Self::Item>` with length `k`. The iterator","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":46624,"byte_end":46700,"line_start":1377,"line_end":1377,"column_start":5,"column_end":81}},{"value":"/ produces a new Vec per iteration, and clones the iterator elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":46705,"byte_end":46776,"line_start":1378,"line_end":1378,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":46781,"byte_end":46784,"line_start":1379,"line_end":1379,"column_start":5,"column_end":8}},{"value":"/ If `k` is greater than the length of the input iterator, the resultant","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":46789,"byte_end":46863,"line_start":1380,"line_end":1380,"column_start":5,"column_end":79}},{"value":"/ iterator adaptor will be empty.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":46868,"byte_end":46903,"line_start":1381,"line_end":1381,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":46908,"byte_end":46911,"line_start":1382,"line_end":1382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":46916,"byte_end":46923,"line_start":1383,"line_end":1383,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":46928,"byte_end":46957,"line_start":1384,"line_end":1384,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":46962,"byte_end":46965,"line_start":1385,"line_end":1385,"column_start":5,"column_end":8}},{"value":"/ let perms = (5..8).permutations(2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":46970,"byte_end":47009,"line_start":1386,"line_end":1386,"column_start":5,"column_end":44}},{"value":"/ itertools::assert_equal(perms, vec![","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":47014,"byte_end":47054,"line_start":1387,"line_end":1387,"column_start":5,"column_end":45}},{"value":"/     vec![5, 6],","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":47059,"byte_end":47078,"line_start":1388,"line_end":1388,"column_start":5,"column_end":24}},{"value":"/     vec![5, 7],","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":47083,"byte_end":47102,"line_start":1389,"line_end":1389,"column_start":5,"column_end":24}},{"value":"/     vec![6, 5],","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":47107,"byte_end":47126,"line_start":1390,"line_end":1390,"column_start":5,"column_end":24}},{"value":"/     vec![6, 7],","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":47131,"byte_end":47150,"line_start":1391,"line_end":1391,"column_start":5,"column_end":24}},{"value":"/     vec![7, 5],","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":47155,"byte_end":47174,"line_start":1392,"line_end":1392,"column_start":5,"column_end":24}},{"value":"/     vec![7, 6],","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":47179,"byte_end":47198,"line_start":1393,"line_end":1393,"column_start":5,"column_end":24}},{"value":"/ ]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":47203,"byte_end":47210,"line_start":1394,"line_end":1394,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":47215,"byte_end":47222,"line_start":1395,"line_end":1395,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":47227,"byte_end":47230,"line_start":1396,"line_end":1396,"column_start":5,"column_end":8}},{"value":"/ Note: Permutations does not take into account the equality of the iterated values.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":47235,"byte_end":47321,"line_start":1397,"line_end":1397,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":47326,"byte_end":47329,"line_start":1398,"line_end":1398,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":47334,"byte_end":47341,"line_start":1399,"line_end":1399,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":47346,"byte_end":47375,"line_start":1400,"line_end":1400,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":47380,"byte_end":47383,"line_start":1401,"line_end":1401,"column_start":5,"column_end":8}},{"value":"/ let it = vec![2, 2].into_iter().permutations(2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":47388,"byte_end":47440,"line_start":1402,"line_end":1402,"column_start":5,"column_end":57}},{"value":"/ itertools::assert_equal(it, vec![","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":47445,"byte_end":47482,"line_start":1403,"line_end":1403,"column_start":5,"column_end":42}},{"value":"/     vec![2, 2], // Note: these are the same","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":47487,"byte_end":47534,"line_start":1404,"line_end":1404,"column_start":5,"column_end":52}},{"value":"/     vec![2, 2], // Note: these are the same","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":47539,"byte_end":47586,"line_start":1405,"line_end":1405,"column_start":5,"column_end":52}},{"value":"/ ]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":47591,"byte_end":47598,"line_start":1406,"line_end":1406,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":47603,"byte_end":47610,"line_start":1407,"line_end":1407,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":47615,"byte_end":47618,"line_start":1408,"line_end":1408,"column_start":5,"column_end":8}},{"value":"/ Note: The source iterator is collected lazily, and will not be","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":47623,"byte_end":47689,"line_start":1409,"line_end":1409,"column_start":5,"column_end":71}},{"value":"/ re-iterated if the permutations adaptor is completed and re-iterated.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":47694,"byte_end":47767,"line_start":1410,"line_end":1410,"column_start":5,"column_end":78}},{"value":"cfg(feature = \"use_alloc\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":47772,"byte_end":47801,"line_start":1411,"line_end":1411,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2246},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":48965,"byte_end":48973,"line_start":1448,"line_end":1448,"column_start":8,"column_end":16},"name":"powerset","qualname":"::Itertools::powerset","value":"pub fn powerset(Self) -> Powerset<Self> where Self: Sized, Self::Item: Clone","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return an iterator that iterates through the powerset of the elements from an\n iterator.","sig":null,"attributes":[{"value":"/ Return an iterator that iterates through the powerset of the elements from an","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":47980,"byte_end":48061,"line_start":1419,"line_end":1419,"column_start":5,"column_end":86}},{"value":"/ iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":48066,"byte_end":48079,"line_start":1420,"line_end":1420,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":48084,"byte_end":48087,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Vec<Self::Item>`. The iterator produces a new `Vec`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":48092,"byte_end":48173,"line_start":1422,"line_end":1422,"column_start":5,"column_end":86}},{"value":"/ per iteration, and clones the iterator elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":48178,"byte_end":48230,"line_start":1423,"line_end":1423,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":48235,"byte_end":48238,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ The powerset of a set contains all subsets including the empty set and the full","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":48243,"byte_end":48326,"line_start":1425,"line_end":1425,"column_start":5,"column_end":88}},{"value":"/ input set. A powerset has length _2^n_ where _n_ is the length of the input","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":48331,"byte_end":48410,"line_start":1426,"line_end":1426,"column_start":5,"column_end":84}},{"value":"/ set.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":48415,"byte_end":48423,"line_start":1427,"line_end":1427,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":48428,"byte_end":48431,"line_start":1428,"line_end":1428,"column_start":5,"column_end":8}},{"value":"/ Each `Vec` produced by this iterator represents a subset of the elements","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":48436,"byte_end":48512,"line_start":1429,"line_end":1429,"column_start":5,"column_end":81}},{"value":"/ produced by the source iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":48517,"byte_end":48553,"line_start":1430,"line_end":1430,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":48558,"byte_end":48561,"line_start":1431,"line_end":1431,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":48566,"byte_end":48573,"line_start":1432,"line_end":1432,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":48578,"byte_end":48607,"line_start":1433,"line_end":1433,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":48612,"byte_end":48615,"line_start":1434,"line_end":1434,"column_start":5,"column_end":8}},{"value":"/ let sets = (1..4).powerset().collect::<Vec<_>>();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":48620,"byte_end":48673,"line_start":1435,"line_end":1435,"column_start":5,"column_end":58}},{"value":"/ itertools::assert_equal(sets, vec![","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":48678,"byte_end":48717,"line_start":1436,"line_end":1436,"column_start":5,"column_end":44}},{"value":"/     vec![],","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":48722,"byte_end":48737,"line_start":1437,"line_end":1437,"column_start":5,"column_end":20}},{"value":"/     vec![1],","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":48742,"byte_end":48758,"line_start":1438,"line_end":1438,"column_start":5,"column_end":21}},{"value":"/     vec![2],","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":48763,"byte_end":48779,"line_start":1439,"line_end":1439,"column_start":5,"column_end":21}},{"value":"/     vec![3],","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":48784,"byte_end":48800,"line_start":1440,"line_end":1440,"column_start":5,"column_end":21}},{"value":"/     vec![1, 2],","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":48805,"byte_end":48824,"line_start":1441,"line_end":1441,"column_start":5,"column_end":24}},{"value":"/     vec![1, 3],","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":48829,"byte_end":48848,"line_start":1442,"line_end":1442,"column_start":5,"column_end":24}},{"value":"/     vec![2, 3],","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":48853,"byte_end":48872,"line_start":1443,"line_end":1443,"column_start":5,"column_end":24}},{"value":"/     vec![1, 2, 3],","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":48877,"byte_end":48899,"line_start":1444,"line_end":1444,"column_start":5,"column_end":27}},{"value":"/ ]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":48904,"byte_end":48911,"line_start":1445,"line_end":1445,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":48916,"byte_end":48923,"line_start":1446,"line_end":1446,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_alloc\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":48928,"byte_end":48957,"line_start":1447,"line_end":1447,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2247},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":49779,"byte_end":49788,"line_start":1472,"line_end":1472,"column_start":8,"column_end":17},"name":"pad_using","qualname":"::Itertools::pad_using","value":"pub fn pad_using<F>(Self, usize, F) -> PadUsing<Self, F> where Self: Sized,\nF: FnMut(usize) -> Self::Item","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that pads the sequence to a minimum length of\n `min` by filling missing elements using a closure `f`.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that pads the sequence to a minimum length of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":49108,"byte_end":49184,"line_start":1455,"line_end":1455,"column_start":5,"column_end":81}},{"value":"/ `min` by filling missing elements using a closure `f`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":49189,"byte_end":49247,"line_start":1456,"line_end":1456,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":49252,"byte_end":49255,"line_start":1457,"line_end":1457,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is `Self::Item`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":49260,"byte_end":49302,"line_start":1458,"line_end":1458,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":49307,"byte_end":49310,"line_start":1459,"line_end":1459,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":49315,"byte_end":49322,"line_start":1460,"line_end":1460,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":49327,"byte_end":49356,"line_start":1461,"line_end":1461,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":49361,"byte_end":49364,"line_start":1462,"line_end":1462,"column_start":5,"column_end":8}},{"value":"/ let it = (0..5).pad_using(10, |i| 2*i);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":49369,"byte_end":49412,"line_start":1463,"line_end":1463,"column_start":5,"column_end":48}},{"value":"/ itertools::assert_equal(it, vec![0, 1, 2, 3, 4, 10, 12, 14, 16, 18]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":49417,"byte_end":49490,"line_start":1464,"line_end":1464,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":49495,"byte_end":49498,"line_start":1465,"line_end":1465,"column_start":5,"column_end":8}},{"value":"/ let it = (0..10).pad_using(5, |i| 2*i);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":49503,"byte_end":49546,"line_start":1466,"line_end":1466,"column_start":5,"column_end":48}},{"value":"/ itertools::assert_equal(it, vec![0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":49551,"byte_end":49619,"line_start":1467,"line_end":1467,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":49624,"byte_end":49627,"line_start":1468,"line_end":1468,"column_start":5,"column_end":8}},{"value":"/ let it = (0..5).pad_using(10, |i| 2*i).rev();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":49632,"byte_end":49681,"line_start":1469,"line_end":1469,"column_start":5,"column_end":54}},{"value":"/ itertools::assert_equal(it, vec![18, 16, 14, 12, 10, 4, 3, 2, 1, 0]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":49686,"byte_end":49759,"line_start":1470,"line_end":1470,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":49764,"byte_end":49771,"line_start":1471,"line_end":1471,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2249},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":50713,"byte_end":50726,"line_start":1498,"line_end":1498,"column_start":8,"column_end":21},"name":"with_position","qualname":"::Itertools::with_position","value":"pub fn with_position(Self) -> WithPosition<Self> where Self: Sized","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that wraps each element in a `Position` to\n ease special-case handling of the first or last elements.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that wraps each element in a `Position` to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":49967,"byte_end":50040,"line_start":1479,"line_end":1479,"column_start":5,"column_end":78}},{"value":"/ ease special-case handling of the first or last elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":50045,"byte_end":50106,"line_start":1480,"line_end":1480,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":50111,"byte_end":50114,"line_start":1481,"line_end":1481,"column_start":5,"column_end":8}},{"value":"/ Iterator element type is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":50119,"byte_end":50147,"line_start":1482,"line_end":1482,"column_start":5,"column_end":33}},{"value":"/ [`Position<Self::Item>`](enum.Position.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":50152,"byte_end":50200,"line_start":1483,"line_end":1483,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":50205,"byte_end":50208,"line_start":1484,"line_end":1484,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":50213,"byte_end":50220,"line_start":1485,"line_end":1485,"column_start":5,"column_end":12}},{"value":"/ use itertools::{Itertools, Position};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":50225,"byte_end":50266,"line_start":1486,"line_end":1486,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":50271,"byte_end":50274,"line_start":1487,"line_end":1487,"column_start":5,"column_end":8}},{"value":"/ let it = (0..4).with_position();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":50279,"byte_end":50315,"line_start":1488,"line_end":1488,"column_start":5,"column_end":41}},{"value":"/ itertools::assert_equal(it,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":50320,"byte_end":50351,"line_start":1489,"line_end":1489,"column_start":5,"column_end":36}},{"value":"/                         vec![Position::First(0),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":50356,"byte_end":50408,"line_start":1490,"line_end":1490,"column_start":5,"column_end":57}},{"value":"/                              Position::Middle(1),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":50413,"byte_end":50466,"line_start":1491,"line_end":1491,"column_start":5,"column_end":58}},{"value":"/                              Position::Middle(2),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":50471,"byte_end":50524,"line_start":1492,"line_end":1492,"column_start":5,"column_end":58}},{"value":"/                              Position::Last(3)]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":50529,"byte_end":50582,"line_start":1493,"line_end":1493,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":50587,"byte_end":50590,"line_start":1494,"line_end":1494,"column_start":5,"column_end":8}},{"value":"/ let it = (0..1).with_position();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":50595,"byte_end":50631,"line_start":1495,"line_end":1495,"column_start":5,"column_end":41}},{"value":"/ itertools::assert_equal(it, vec![Position::Only(0)]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":50636,"byte_end":50693,"line_start":1496,"line_end":1496,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":50698,"byte_end":50705,"line_start":1497,"line_end":1497,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2250},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":51405,"byte_end":51414,"line_start":1517,"line_end":1517,"column_start":8,"column_end":17},"name":"positions","qualname":"::Itertools::positions","value":"pub fn positions<P>(Self, P) -> Positions<Self, P> where Self: Sized,\nP: FnMut(Self::Item) -> bool","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that yields the indices of all elements\n satisfying a predicate, counted from the start of the iterator.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that yields the indices of all elements","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":50842,"byte_end":50912,"line_start":1504,"line_end":1504,"column_start":5,"column_end":75}},{"value":"/ satisfying a predicate, counted from the start of the iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":50917,"byte_end":50984,"line_start":1505,"line_end":1505,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":50989,"byte_end":50992,"line_start":1506,"line_end":1506,"column_start":5,"column_end":8}},{"value":"/ Equivalent to `iter.enumerate().filter(|(_, v)| predicate(v)).map(|(i, _)| i)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":50997,"byte_end":51080,"line_start":1507,"line_end":1507,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":51085,"byte_end":51088,"line_start":1508,"line_end":1508,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":51093,"byte_end":51100,"line_start":1509,"line_end":1509,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":51105,"byte_end":51134,"line_start":1510,"line_end":1510,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":51139,"byte_end":51142,"line_start":1511,"line_end":1511,"column_start":5,"column_end":8}},{"value":"/ let data = vec![1, 2, 3, 3, 4, 6, 7, 9];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":51147,"byte_end":51191,"line_start":1512,"line_end":1512,"column_start":5,"column_end":49}},{"value":"/ itertools::assert_equal(data.iter().positions(|v| v % 2 == 0), vec![1, 4, 5]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":51196,"byte_end":51278,"line_start":1513,"line_end":1513,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":51283,"byte_end":51286,"line_start":1514,"line_end":1514,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal(data.iter().positions(|v| v % 2 == 1).rev(), vec![7, 6, 3, 2, 0]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":51291,"byte_end":51385,"line_start":1515,"line_end":1515,"column_start":5,"column_end":99}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":51390,"byte_end":51397,"line_start":1516,"line_end":1516,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2252},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":51967,"byte_end":51973,"line_start":1534,"line_end":1534,"column_start":8,"column_end":14},"name":"update","qualname":"::Itertools::update","value":"pub fn update<F>(Self, F) -> Update<Self, F> where Self: Sized,\nF: FnMut(&mut Self::Item) -> ()","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return an iterator adaptor that applies a mutating function\n to each element before yielding it.","sig":null,"attributes":[{"value":"/ Return an iterator adaptor that applies a mutating function","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":51593,"byte_end":51656,"line_start":1524,"line_end":1524,"column_start":5,"column_end":68}},{"value":"/ to each element before yielding it.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":51661,"byte_end":51700,"line_start":1525,"line_end":1525,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":51705,"byte_end":51708,"line_start":1526,"line_end":1526,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":51713,"byte_end":51720,"line_start":1527,"line_end":1527,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":51725,"byte_end":51754,"line_start":1528,"line_end":1528,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":51759,"byte_end":51762,"line_start":1529,"line_end":1529,"column_start":5,"column_end":8}},{"value":"/ let input = vec![vec![1], vec![3, 2, 1]];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":51767,"byte_end":51812,"line_start":1530,"line_end":1530,"column_start":5,"column_end":50}},{"value":"/ let it = input.into_iter().update(|mut v| v.push(0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":51817,"byte_end":51874,"line_start":1531,"line_end":1531,"column_start":5,"column_end":62}},{"value":"/ itertools::assert_equal(it, vec![vec![1, 0], vec![3, 2, 1, 0]]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":51879,"byte_end":51947,"line_start":1532,"line_end":1532,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":51952,"byte_end":51959,"line_start":1533,"line_end":1533,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2254},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":52599,"byte_end":52609,"line_start":1555,"line_end":1555,"column_start":8,"column_end":18},"name":"next_tuple","qualname":"::Itertools::next_tuple","value":"pub fn next_tuple<T>(&mut Self) -> Option<T> where Self: Sized + Iterator<Item\n= T::Item>, T: traits::HomogeneousTuple","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Advances the iterator and returns the next items grouped in a tuple of\n a specific size (up to 12).","sig":null,"attributes":[{"value":"/ Advances the iterator and returns the next items grouped in a tuple of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":52166,"byte_end":52240,"line_start":1542,"line_end":1542,"column_start":5,"column_end":79}},{"value":"/ a specific size (up to 12).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":52245,"byte_end":52276,"line_start":1543,"line_end":1543,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":52281,"byte_end":52284,"line_start":1544,"line_end":1544,"column_start":5,"column_end":8}},{"value":"/ If there are enough elements to be grouped in a tuple, then the tuple is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":52289,"byte_end":52365,"line_start":1545,"line_end":1545,"column_start":5,"column_end":81}},{"value":"/ returned inside `Some`, otherwise `None` is returned.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":52370,"byte_end":52427,"line_start":1546,"line_end":1546,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":52432,"byte_end":52435,"line_start":1547,"line_end":1547,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":52440,"byte_end":52447,"line_start":1548,"line_end":1548,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":52452,"byte_end":52481,"line_start":1549,"line_end":1549,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":52486,"byte_end":52489,"line_start":1550,"line_end":1550,"column_start":5,"column_end":8}},{"value":"/ let mut iter = 1..5;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":52494,"byte_end":52518,"line_start":1551,"line_end":1551,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":52523,"byte_end":52526,"line_start":1552,"line_end":1552,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Some((1, 2)), iter.next_tuple());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":52531,"byte_end":52579,"line_start":1553,"line_end":1553,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":52584,"byte_end":52591,"line_start":1554,"line_end":1554,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2256},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":53352,"byte_end":53365,"line_start":1580,"line_end":1580,"column_start":8,"column_end":21},"name":"collect_tuple","qualname":"::Itertools::collect_tuple","value":"pub fn collect_tuple<T>(Self) -> Option<T> where Self: Sized + Iterator<Item =\nT::Item>, T: traits::HomogeneousTuple","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Collects all items from the iterator into a tuple of a specific size\n (up to 12).","sig":null,"attributes":[{"value":"/ Collects all items from the iterator into a tuple of a specific size","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":52792,"byte_end":52864,"line_start":1562,"line_end":1562,"column_start":5,"column_end":77}},{"value":"/ (up to 12).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":52869,"byte_end":52884,"line_start":1563,"line_end":1563,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":52889,"byte_end":52892,"line_start":1564,"line_end":1564,"column_start":5,"column_end":8}},{"value":"/ If the number of elements inside the iterator is **exactly** equal to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":52897,"byte_end":52970,"line_start":1565,"line_end":1565,"column_start":5,"column_end":78}},{"value":"/ the tuple size, then the tuple is returned inside `Some`, otherwise","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":52975,"byte_end":53046,"line_start":1566,"line_end":1566,"column_start":5,"column_end":76}},{"value":"/ `None` is returned.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":53051,"byte_end":53074,"line_start":1567,"line_end":1567,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":53079,"byte_end":53082,"line_start":1568,"line_end":1568,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":53087,"byte_end":53094,"line_start":1569,"line_end":1569,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":53099,"byte_end":53128,"line_start":1570,"line_end":1570,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":53133,"byte_end":53136,"line_start":1571,"line_end":1571,"column_start":5,"column_end":8}},{"value":"/ let iter = 1..3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":53141,"byte_end":53161,"line_start":1572,"line_end":1572,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":53166,"byte_end":53169,"line_start":1573,"line_end":1573,"column_start":5,"column_end":8}},{"value":"/ if let Some((x, y)) = iter.collect_tuple() {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":53174,"byte_end":53222,"line_start":1574,"line_end":1574,"column_start":5,"column_end":53}},{"value":"/     assert_eq!((x, y), (1, 2))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":53227,"byte_end":53261,"line_start":1575,"line_end":1575,"column_start":5,"column_end":39}},{"value":"/ } else {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":53266,"byte_end":53278,"line_start":1576,"line_end":1576,"column_start":5,"column_end":17}},{"value":"/     panic!(\"Expected two elements\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":53283,"byte_end":53322,"line_start":1577,"line_end":1577,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":53327,"byte_end":53332,"line_start":1578,"line_end":1578,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":53337,"byte_end":53344,"line_start":1579,"line_end":1579,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2258},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":54046,"byte_end":54059,"line_start":1604,"line_end":1604,"column_start":8,"column_end":21},"name":"find_position","qualname":"::Itertools::find_position","value":"pub fn find_position<P>(&mut Self, P) -> Option<(usize, Self::Item)> where\nP: FnMut(&Self::Item) -> bool","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Find the position and value of the first element satisfying a predicate.","sig":null,"attributes":[{"value":"/ Find the position and value of the first element satisfying a predicate.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":53698,"byte_end":53774,"line_start":1594,"line_end":1594,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":53779,"byte_end":53782,"line_start":1595,"line_end":1595,"column_start":5,"column_end":8}},{"value":"/ The iterator is not advanced past the first element found.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":53787,"byte_end":53849,"line_start":1596,"line_end":1596,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":53854,"byte_end":53857,"line_start":1597,"line_end":1597,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":53862,"byte_end":53869,"line_start":1598,"line_end":1598,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":53874,"byte_end":53903,"line_start":1599,"line_end":1599,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":53908,"byte_end":53911,"line_start":1600,"line_end":1600,"column_start":5,"column_end":8}},{"value":"/ let text = \"Hα\";","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":53916,"byte_end":53937,"line_start":1601,"line_end":1601,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(text.chars().find_position(|ch| ch.is_lowercase()), Some((1, 'α')));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":53942,"byte_end":54026,"line_start":1602,"line_end":1602,"column_start":5,"column_end":88}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":54031,"byte_end":54038,"line_start":1603,"line_end":1603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2260},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":54908,"byte_end":54917,"line_start":1633,"line_end":1633,"column_start":8,"column_end":17},"name":"all_equal","qualname":"::Itertools::all_equal","value":"pub fn all_equal(&mut Self) -> bool where Self: Sized, Self::Item: PartialEq","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Check whether all elements compare equal.","sig":null,"attributes":[{"value":"/ Check whether all elements compare equal.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":54369,"byte_end":54414,"line_start":1617,"line_end":1617,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":54419,"byte_end":54422,"line_start":1618,"line_end":1618,"column_start":5,"column_end":8}},{"value":"/ Empty iterators are considered to have equal elements:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":54427,"byte_end":54485,"line_start":1619,"line_end":1619,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":54490,"byte_end":54493,"line_start":1620,"line_end":1620,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":54498,"byte_end":54505,"line_start":1621,"line_end":1621,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":54510,"byte_end":54539,"line_start":1622,"line_end":1622,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":54544,"byte_end":54547,"line_start":1623,"line_end":1623,"column_start":5,"column_end":8}},{"value":"/ let data = vec![1, 1, 1, 2, 2, 3, 3, 3, 4, 5, 5];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":54552,"byte_end":54605,"line_start":1624,"line_end":1624,"column_start":5,"column_end":58}},{"value":"/ assert!(!data.iter().all_equal());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":54610,"byte_end":54648,"line_start":1625,"line_end":1625,"column_start":5,"column_end":43}},{"value":"/ assert!(data[0..3].iter().all_equal());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":54653,"byte_end":54696,"line_start":1626,"line_end":1626,"column_start":5,"column_end":48}},{"value":"/ assert!(data[3..5].iter().all_equal());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":54701,"byte_end":54744,"line_start":1627,"line_end":1627,"column_start":5,"column_end":48}},{"value":"/ assert!(data[5..8].iter().all_equal());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":54749,"byte_end":54792,"line_start":1628,"line_end":1628,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":54797,"byte_end":54800,"line_start":1629,"line_end":1629,"column_start":5,"column_end":8}},{"value":"/ let data : Option<usize> = None;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":54805,"byte_end":54841,"line_start":1630,"line_end":1630,"column_start":5,"column_end":41}},{"value":"/ assert!(data.into_iter().all_equal());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":54846,"byte_end":54888,"line_start":1631,"line_end":1631,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":54893,"byte_end":54900,"line_start":1632,"line_end":1632,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2262},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":55695,"byte_end":55703,"line_start":1658,"line_end":1658,"column_start":8,"column_end":16},"name":"dropping","qualname":"::Itertools::dropping","value":"pub fn dropping(Self, usize) -> Self where Self: Sized","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Consume the first `n` elements from the iterator eagerly,\n and return the same iterator again.","sig":null,"attributes":[{"value":"/ Consume the first `n` elements from the iterator eagerly,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":55127,"byte_end":55188,"line_start":1643,"line_end":1643,"column_start":5,"column_end":66}},{"value":"/ and return the same iterator again.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":55193,"byte_end":55232,"line_start":1644,"line_end":1644,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":55237,"byte_end":55240,"line_start":1645,"line_end":1645,"column_start":5,"column_end":8}},{"value":"/ It works similarly to *.skip(* `n` *)* except it is eager and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":55245,"byte_end":55310,"line_start":1646,"line_end":1646,"column_start":5,"column_end":70}},{"value":"/ preserves the iterator type.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":55315,"byte_end":55347,"line_start":1647,"line_end":1647,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":55352,"byte_end":55355,"line_start":1648,"line_end":1648,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":55360,"byte_end":55367,"line_start":1649,"line_end":1649,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":55372,"byte_end":55401,"line_start":1650,"line_end":1650,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":55406,"byte_end":55409,"line_start":1651,"line_end":1651,"column_start":5,"column_end":8}},{"value":"/ let mut iter = \"αβγ\".chars().dropping(2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":55414,"byte_end":55462,"line_start":1652,"line_end":1652,"column_start":5,"column_end":50}},{"value":"/ itertools::assert_equal(iter, \"γ\".chars());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":55467,"byte_end":55515,"line_start":1653,"line_end":1653,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":55520,"byte_end":55527,"line_start":1654,"line_end":1654,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":55532,"byte_end":55535,"line_start":1655,"line_end":1655,"column_start":5,"column_end":8}},{"value":"/ *Fusing notes: if the iterator is exhausted by dropping,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":55540,"byte_end":55600,"line_start":1656,"line_end":1656,"column_start":5,"column_end":65}},{"value":"/ the result of calling `.next()` again depends on the iterator implementation.*","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":55605,"byte_end":55687,"line_start":1657,"line_end":1657,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":2263},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":56396,"byte_end":56409,"line_start":1682,"line_end":1682,"column_start":8,"column_end":21},"name":"dropping_back","qualname":"::Itertools::dropping_back","value":"pub fn dropping_back(Self, usize) -> Self where Self: Sized,\nSelf: DoubleEndedIterator","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Consume the last `n` elements from the iterator eagerly,\n and return the same iterator again.","sig":null,"attributes":[{"value":"/ Consume the last `n` elements from the iterator eagerly,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":55846,"byte_end":55906,"line_start":1667,"line_end":1667,"column_start":5,"column_end":65}},{"value":"/ and return the same iterator again.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":55911,"byte_end":55950,"line_start":1668,"line_end":1668,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":55955,"byte_end":55958,"line_start":1669,"line_end":1669,"column_start":5,"column_end":8}},{"value":"/ This is only possible on double ended iterators. `n` may be","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":55963,"byte_end":56026,"line_start":1670,"line_end":1670,"column_start":5,"column_end":68}},{"value":"/ larger than the number of elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":56031,"byte_end":56070,"line_start":1671,"line_end":1671,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":56075,"byte_end":56078,"line_start":1672,"line_end":1672,"column_start":5,"column_end":8}},{"value":"/ Note: This method is eager, dropping the back elements immediately and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":56083,"byte_end":56157,"line_start":1673,"line_end":1673,"column_start":5,"column_end":79}},{"value":"/ preserves the iterator type.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":56162,"byte_end":56194,"line_start":1674,"line_end":1674,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":56199,"byte_end":56202,"line_start":1675,"line_end":1675,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":56207,"byte_end":56214,"line_start":1676,"line_end":1676,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":56219,"byte_end":56248,"line_start":1677,"line_end":1677,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":56253,"byte_end":56256,"line_start":1678,"line_end":1678,"column_start":5,"column_end":8}},{"value":"/ let init = vec![0, 3, 6, 9].into_iter().dropping_back(1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":56261,"byte_end":56322,"line_start":1679,"line_end":1679,"column_start":5,"column_end":66}},{"value":"/ itertools::assert_equal(init, vec![0, 3, 6]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":56327,"byte_end":56376,"line_start":1680,"line_end":1680,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":56381,"byte_end":56388,"line_start":1681,"line_end":1681,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2264},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":57197,"byte_end":57204,"line_start":1710,"line_end":1710,"column_start":8,"column_end":15},"name":"foreach","qualname":"::Itertools::foreach","value":"pub fn foreach<F>(Self, F) where F: FnMut(Self::Item) -> (), Self: Sized","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Run the closure `f` eagerly on each element of the iterator.","sig":null,"attributes":[{"value":"/ Run the closure `f` eagerly on each element of the iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":56606,"byte_end":56670,"line_start":1692,"line_end":1692,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":56675,"byte_end":56678,"line_start":1693,"line_end":1693,"column_start":5,"column_end":8}},{"value":"/ Consumes the iterator until its end.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":56683,"byte_end":56723,"line_start":1694,"line_end":1694,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":56728,"byte_end":56731,"line_start":1695,"line_end":1695,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":56736,"byte_end":56743,"line_start":1696,"line_end":1696,"column_start":5,"column_end":12}},{"value":"/ use std::sync::mpsc::channel;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":56748,"byte_end":56781,"line_start":1697,"line_end":1697,"column_start":5,"column_end":38}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":56786,"byte_end":56815,"line_start":1698,"line_end":1698,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":56820,"byte_end":56823,"line_start":1699,"line_end":1699,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = channel();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":56828,"byte_end":56857,"line_start":1700,"line_end":1700,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":56862,"byte_end":56865,"line_start":1701,"line_end":1701,"column_start":5,"column_end":8}},{"value":"/ // use .foreach() to apply a function to each value -- sending it","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":56870,"byte_end":56939,"line_start":1702,"line_end":1702,"column_start":5,"column_end":74}},{"value":"/ (0..5).map(|x| x * 2 + 1).foreach(|x| { tx.send(x).unwrap(); } );","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":56944,"byte_end":57013,"line_start":1703,"line_end":1703,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":57018,"byte_end":57021,"line_start":1704,"line_end":1704,"column_start":5,"column_end":8}},{"value":"/ drop(tx);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":57026,"byte_end":57039,"line_start":1705,"line_end":1705,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":57044,"byte_end":57047,"line_start":1706,"line_end":1706,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal(rx.iter(), vec![1, 3, 5, 7, 9]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":57052,"byte_end":57112,"line_start":1707,"line_end":1707,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":57117,"byte_end":57124,"line_start":1708,"line_end":1708,"column_start":5,"column_end":12}},{"value":"deprecated(note = \"Use .for_each() instead\", since = \"0.8.0\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":57129,"byte_end":57189,"line_start":1709,"line_end":1709,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2266},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":57835,"byte_end":57841,"line_start":1730,"line_end":1730,"column_start":8,"column_end":14},"name":"concat","qualname":"::Itertools::concat","value":"pub fn concat(Self) -> Self::Item where Self: Sized,\nSelf::Item: Extend<<<Self as Iterator>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Combine all an iterator's elements into one element by using `Extend`.","sig":null,"attributes":[{"value":"/ Combine all an iterator's elements into one element by using `Extend`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":57325,"byte_end":57399,"line_start":1717,"line_end":1717,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":57404,"byte_end":57407,"line_start":1718,"line_end":1718,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with each of the rest of the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":57412,"byte_end":57487,"line_start":1719,"line_end":1719,"column_start":5,"column_end":80}},{"value":"/ items of the iterator. If the iterator is empty, the default value of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":57492,"byte_end":57565,"line_start":1720,"line_end":1720,"column_start":5,"column_end":78}},{"value":"/ `I::Item` is returned.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":57570,"byte_end":57596,"line_start":1721,"line_end":1721,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":57601,"byte_end":57604,"line_start":1722,"line_end":1722,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":57609,"byte_end":57620,"line_start":1723,"line_end":1723,"column_start":5,"column_end":16}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":57625,"byte_end":57654,"line_start":1724,"line_end":1724,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":57659,"byte_end":57662,"line_start":1725,"line_end":1725,"column_start":5,"column_end":8}},{"value":"/ let input = vec![vec![1], vec![2, 3], vec![4, 5, 6]];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":57667,"byte_end":57724,"line_start":1726,"line_end":1726,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(input.into_iter().concat(),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":57729,"byte_end":57771,"line_start":1727,"line_end":1727,"column_start":5,"column_end":47}},{"value":"/            vec![1, 2, 3, 4, 5, 6]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":57776,"byte_end":57815,"line_start":1728,"line_end":1728,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":57820,"byte_end":57827,"line_start":1729,"line_end":1729,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2267},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":58171,"byte_end":58182,"line_start":1740,"line_end":1740,"column_start":8,"column_end":19},"name":"collect_vec","qualname":"::Itertools::collect_vec","value":"pub fn collect_vec(Self) -> Vec<Self::Item> where Self: Sized","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" `.collect_vec()` is simply a type specialization of `.collect()`,\n for convenience.\n","sig":null,"attributes":[{"value":"/ `.collect_vec()` is simply a type specialization of `.collect()`,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":58035,"byte_end":58104,"line_start":1737,"line_end":1737,"column_start":5,"column_end":74}},{"value":"/ for convenience.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":58109,"byte_end":58129,"line_start":1738,"line_end":1738,"column_start":5,"column_end":25}},{"value":"cfg(feature = \"use_alloc\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":58134,"byte_end":58163,"line_start":1739,"line_end":1739,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2268},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":58826,"byte_end":58837,"line_start":1767,"line_end":1767,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::Itertools::try_collect","value":"pub fn try_collect<T, U, E>(Self) -> Result<U, E> where Self: Sized +\nIterator<Item = Result<T, E>>, Result<U, E>: FromIterator<Result<T, E>>","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" `.try_collect()` is more convenient way of writing\n `.collect::<Result<_, _>>()`","sig":null,"attributes":[{"value":"/ `.try_collect()` is more convenient way of writing","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":58274,"byte_end":58328,"line_start":1746,"line_end":1746,"column_start":5,"column_end":59}},{"value":"/ `.collect::<Result<_, _>>()`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":58333,"byte_end":58365,"line_start":1747,"line_end":1747,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":58370,"byte_end":58373,"line_start":1748,"line_end":1748,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":58378,"byte_end":58391,"line_start":1749,"line_end":1749,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":58396,"byte_end":58399,"line_start":1750,"line_end":1750,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":58404,"byte_end":58411,"line_start":1751,"line_end":1751,"column_start":5,"column_end":12}},{"value":"/ use std::{fs, io};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":58416,"byte_end":58438,"line_start":1752,"line_end":1752,"column_start":5,"column_end":27}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":58443,"byte_end":58472,"line_start":1753,"line_end":1753,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":58477,"byte_end":58480,"line_start":1754,"line_end":1754,"column_start":5,"column_end":8}},{"value":"/ fn process_dir_entries(entries: &[fs::DirEntry]) {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":58485,"byte_end":58539,"line_start":1755,"line_end":1755,"column_start":5,"column_end":59}},{"value":"/     // ...","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":58544,"byte_end":58558,"line_start":1756,"line_end":1756,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":58563,"byte_end":58568,"line_start":1757,"line_end":1757,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":58573,"byte_end":58576,"line_start":1758,"line_end":1758,"column_start":5,"column_end":8}},{"value":"/ fn do_stuff() -> std::io::Result<()> {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":58581,"byte_end":58623,"line_start":1759,"line_end":1759,"column_start":5,"column_end":47}},{"value":"/     let entries: Vec<_> = fs::read_dir(\".\")?.try_collect()?;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":58628,"byte_end":58692,"line_start":1760,"line_end":1760,"column_start":5,"column_end":69}},{"value":"/     process_dir_entries(&entries);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":58697,"byte_end":58735,"line_start":1761,"line_end":1761,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":58740,"byte_end":58743,"line_start":1762,"line_end":1762,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":58748,"byte_end":58762,"line_start":1763,"line_end":1763,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":58767,"byte_end":58772,"line_start":1764,"line_end":1764,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":58777,"byte_end":58784,"line_start":1765,"line_end":1765,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_alloc\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":58789,"byte_end":58818,"line_start":1766,"line_end":1766,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2272},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":59547,"byte_end":59555,"line_start":1791,"line_end":1791,"column_start":8,"column_end":16},"name":"set_from","qualname":"::Itertools::set_from","value":"pub fn set_from<'a, A: 'a, J>(&mut Self, J) -> usize where Self: Iterator<Item\n= &'a mut A>, J: IntoIterator<Item = A>","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Assign to each reference in `self` from the `from` iterator,\n stopping at the shortest of the two iterators.","sig":null,"attributes":[{"value":"/ Assign to each reference in `self` from the `from` iterator,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":59022,"byte_end":59086,"line_start":1775,"line_end":1775,"column_start":5,"column_end":69}},{"value":"/ stopping at the shortest of the two iterators.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":59091,"byte_end":59141,"line_start":1776,"line_end":1776,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":59146,"byte_end":59149,"line_start":1777,"line_end":1777,"column_start":5,"column_end":8}},{"value":"/ The `from` iterator is queried for its next element before the `self`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":59154,"byte_end":59227,"line_start":1778,"line_end":1778,"column_start":5,"column_end":78}},{"value":"/ iterator, and if either is exhausted the method is done.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":59232,"byte_end":59292,"line_start":1779,"line_end":1779,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":59297,"byte_end":59300,"line_start":1780,"line_end":1780,"column_start":5,"column_end":8}},{"value":"/ Return the number of elements written.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":59305,"byte_end":59347,"line_start":1781,"line_end":1781,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":59352,"byte_end":59355,"line_start":1782,"line_end":1782,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":59360,"byte_end":59367,"line_start":1783,"line_end":1783,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":59372,"byte_end":59401,"line_start":1784,"line_end":1784,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":59406,"byte_end":59409,"line_start":1785,"line_end":1785,"column_start":5,"column_end":8}},{"value":"/ let mut xs = [0; 4];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":59414,"byte_end":59438,"line_start":1786,"line_end":1786,"column_start":5,"column_end":29}},{"value":"/ xs.iter_mut().set_from(1..);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":59443,"byte_end":59475,"line_start":1787,"line_end":1787,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(xs, [1, 2, 3, 4]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":59480,"byte_end":59513,"line_start":1788,"line_end":1788,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":59518,"byte_end":59525,"line_start":1789,"line_end":1789,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":59530,"byte_end":59539,"line_start":1790,"line_end":1790,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2276},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":60301,"byte_end":60305,"line_start":1817,"line_end":1817,"column_start":8,"column_end":12},"name":"join","qualname":"::Itertools::join","value":"pub fn join(&mut Self, &str) -> String where Self::Item: std::fmt::Display","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Combine all iterator elements into one String, separated by `sep`.","sig":null,"attributes":[{"value":"/ Combine all iterator elements into one String, separated by `sep`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":59923,"byte_end":59993,"line_start":1806,"line_end":1806,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":59998,"byte_end":60001,"line_start":1807,"line_end":1807,"column_start":5,"column_end":8}},{"value":"/ Use the `Display` implementation of each element.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":60006,"byte_end":60059,"line_start":1808,"line_end":1808,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":60064,"byte_end":60067,"line_start":1809,"line_end":1809,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":60072,"byte_end":60079,"line_start":1810,"line_end":1810,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":60084,"byte_end":60113,"line_start":1811,"line_end":1811,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":60118,"byte_end":60121,"line_start":1812,"line_end":1812,"column_start":5,"column_end":8}},{"value":"/ assert_eq!([\"a\", \"b\", \"c\"].iter().join(\", \"), \"a, b, c\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":60126,"byte_end":60187,"line_start":1813,"line_end":1813,"column_start":5,"column_end":66}},{"value":"/ assert_eq!([1, 2, 3].iter().join(\", \"), \"1, 2, 3\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":60192,"byte_end":60247,"line_start":1814,"line_end":1814,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":60252,"byte_end":60259,"line_start":1815,"line_end":1815,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_alloc\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":60264,"byte_end":60293,"line_start":1816,"line_end":1816,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2278},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":61439,"byte_end":61445,"line_start":1851,"line_end":1851,"column_start":8,"column_end":14},"name":"format","qualname":"::Itertools::format","value":"pub fn format(Self, &str) -> Format<, Self> where Self: Sized","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Format all iterator elements, separated by `sep`.","sig":null,"attributes":[{"value":"/ Format all iterator elements, separated by `sep`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":60951,"byte_end":61004,"line_start":1836,"line_end":1836,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":61009,"byte_end":61012,"line_start":1837,"line_end":1837,"column_start":5,"column_end":8}},{"value":"/ All elements are formatted (any formatting trait)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":61017,"byte_end":61070,"line_start":1838,"line_end":1838,"column_start":5,"column_end":58}},{"value":"/ with `sep` inserted between each element.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":61075,"byte_end":61120,"line_start":1839,"line_end":1839,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":61125,"byte_end":61128,"line_start":1840,"line_end":1840,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the formatter helper is formatted more than once.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":61133,"byte_end":61200,"line_start":1841,"line_end":1841,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":61205,"byte_end":61208,"line_start":1842,"line_end":1842,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":61213,"byte_end":61220,"line_start":1843,"line_end":1843,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":61225,"byte_end":61254,"line_start":1844,"line_end":1844,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":61259,"byte_end":61262,"line_start":1845,"line_end":1845,"column_start":5,"column_end":8}},{"value":"/ let data = [1.1, 2.71828, -3.];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":61267,"byte_end":61302,"line_start":1846,"line_end":1846,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":61307,"byte_end":61322,"line_start":1847,"line_end":1847,"column_start":5,"column_end":20}},{"value":"/     format!(\"{:.2}\", data.iter().format(\", \")),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":61327,"byte_end":61378,"line_start":1848,"line_end":1848,"column_start":5,"column_end":56}},{"value":"/            \"1.10, 2.72, -3.00\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":61383,"byte_end":61419,"line_start":1849,"line_end":1849,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":61424,"byte_end":61431,"line_start":1850,"line_end":1850,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2279},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":62923,"byte_end":62934,"line_start":1889,"line_end":1889,"column_start":8,"column_end":19},"name":"format_with","qualname":"::Itertools::format_with","value":"pub fn format_with<F>(Self, &str, F) -> FormatWith<, Self, F> where\nSelf: Sized,\nF: FnMut(Self::Item, &mut dyn FnMut(&dyn fmt::Display) -> fmt::Result) ->\nfmt::Result","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Format all iterator elements, separated by `sep`.","sig":null,"attributes":[{"value":"/ Format all iterator elements, separated by `sep`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":61569,"byte_end":61622,"line_start":1857,"line_end":1857,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":61627,"byte_end":61630,"line_start":1858,"line_end":1858,"column_start":5,"column_end":8}},{"value":"/ This is a customizable version of `.format()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":61635,"byte_end":61685,"line_start":1859,"line_end":1859,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":61690,"byte_end":61693,"line_start":1860,"line_end":1860,"column_start":5,"column_end":8}},{"value":"/ The supplied closure `format` is called once per iterator element,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":61698,"byte_end":61768,"line_start":1861,"line_end":1861,"column_start":5,"column_end":75}},{"value":"/ with two arguments: the element and a callback that takes a","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":61773,"byte_end":61836,"line_start":1862,"line_end":1862,"column_start":5,"column_end":68}},{"value":"/ `&Display` value, i.e. any reference to type that implements `Display`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":61841,"byte_end":61916,"line_start":1863,"line_end":1863,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":61921,"byte_end":61924,"line_start":1864,"line_end":1864,"column_start":5,"column_end":8}},{"value":"/ Using `&format_args!(...)` is the most versatile way to apply custom","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":61929,"byte_end":62001,"line_start":1865,"line_end":1865,"column_start":5,"column_end":77}},{"value":"/ element formatting. The callback can be called multiple times if needed.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":62006,"byte_end":62082,"line_start":1866,"line_end":1866,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":62087,"byte_end":62090,"line_start":1867,"line_end":1867,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the formatter helper is formatted more than once.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":62095,"byte_end":62162,"line_start":1868,"line_end":1868,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":62167,"byte_end":62170,"line_start":1869,"line_end":1869,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":62175,"byte_end":62182,"line_start":1870,"line_end":1870,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":62187,"byte_end":62216,"line_start":1871,"line_end":1871,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":62221,"byte_end":62224,"line_start":1872,"line_end":1872,"column_start":5,"column_end":8}},{"value":"/ let data = [1.1, 2.71828, -3.];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":62229,"byte_end":62264,"line_start":1873,"line_end":1873,"column_start":5,"column_end":40}},{"value":"/ let data_formatter = data.iter().format_with(\", \", |elt, f| f(&format_args!(\"{:.2}\", elt)));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":62269,"byte_end":62365,"line_start":1874,"line_end":1874,"column_start":5,"column_end":101}},{"value":"/ assert_eq!(format!(\"{}\", data_formatter),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":62370,"byte_end":62415,"line_start":1875,"line_end":1875,"column_start":5,"column_end":50}},{"value":"/            \"1.10, 2.72, -3.00\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":62420,"byte_end":62456,"line_start":1876,"line_end":1876,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":62461,"byte_end":62464,"line_start":1877,"line_end":1877,"column_start":5,"column_end":8}},{"value":"/ // .format_with() is recursively composable","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":62469,"byte_end":62516,"line_start":1878,"line_end":1878,"column_start":5,"column_end":52}},{"value":"/ let matrix = [[1., 2., 3.],","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":62521,"byte_end":62552,"line_start":1879,"line_end":1879,"column_start":5,"column_end":36}},{"value":"/               [4., 5., 6.]];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":62557,"byte_end":62589,"line_start":1880,"line_end":1880,"column_start":5,"column_end":37}},{"value":"/ let matrix_formatter = matrix.iter().format_with(\"\\n\", |row, f| {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":62594,"byte_end":62663,"line_start":1881,"line_end":1881,"column_start":5,"column_end":74}},{"value":"/                                 f(&row.iter().format_with(\", \", |elt, g| g(&elt)))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":62668,"byte_end":62754,"line_start":1882,"line_end":1882,"column_start":5,"column_end":91}},{"value":"/                              });","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":62759,"byte_end":62795,"line_start":1883,"line_end":1883,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(format!(\"{}\", matrix_formatter),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":62800,"byte_end":62847,"line_start":1884,"line_end":1884,"column_start":5,"column_end":52}},{"value":"/            \"1, 2, 3\\n4, 5, 6\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":62852,"byte_end":62887,"line_start":1885,"line_end":1885,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":62892,"byte_end":62895,"line_start":1886,"line_end":1886,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":62900,"byte_end":62903,"line_start":1887,"line_end":1887,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":62908,"byte_end":62915,"line_start":1888,"line_end":1888,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2281},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":63293,"byte_end":63305,"line_start":1898,"line_end":1898,"column_start":8,"column_end":20},"name":"fold_results","qualname":"::Itertools::fold_results","value":"pub fn fold_results<A, E, B, F>(&mut Self, B, F) -> Result<B, E> where\nSelf: Iterator<Item = Result<A, E>>, F: FnMut(B, A) -> B","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" See [`.fold_ok()`](#method.fold_ok).\n","sig":null,"attributes":[{"value":"/ See [`.fold_ok()`](#method.fold_ok).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":63180,"byte_end":63220,"line_start":1896,"line_end":1896,"column_start":5,"column_end":45}},{"value":"deprecated(note = \"Use .fold_ok() instead\", since = \"0.10.0\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":63225,"byte_end":63285,"line_start":1897,"line_end":1897,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2286},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":64968,"byte_end":64975,"line_start":1947,"line_end":1947,"column_start":8,"column_end":15},"name":"fold_ok","qualname":"::Itertools::fold_ok","value":"pub fn fold_ok<A, E, B, F>(&mut Self, B, F) -> Result<B, E> where\nSelf: Iterator<Item = Result<A, E>>, F: FnMut(B, A) -> B","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Fold `Result` values from an iterator.","sig":null,"attributes":[{"value":"/ Fold `Result` values from an iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":63494,"byte_end":63536,"line_start":1905,"line_end":1905,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":63541,"byte_end":63544,"line_start":1906,"line_end":1906,"column_start":5,"column_end":8}},{"value":"/ Only `Ok` values are folded. If no error is encountered, the folded","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":63549,"byte_end":63620,"line_start":1907,"line_end":1907,"column_start":5,"column_end":76}},{"value":"/ value is returned inside `Ok`. Otherwise, the operation terminates","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":63625,"byte_end":63695,"line_start":1908,"line_end":1908,"column_start":5,"column_end":75}},{"value":"/ and returns the first `Err` value it encounters. No iterator elements are","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":63700,"byte_end":63777,"line_start":1909,"line_end":1909,"column_start":5,"column_end":82}},{"value":"/ consumed after the first error.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":63782,"byte_end":63817,"line_start":1910,"line_end":1910,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":63822,"byte_end":63825,"line_start":1911,"line_end":1911,"column_start":5,"column_end":8}},{"value":"/ The first accumulator value is the `start` parameter.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":63830,"byte_end":63887,"line_start":1912,"line_end":1912,"column_start":5,"column_end":62}},{"value":"/ Each iteration passes the accumulator value and the next value inside `Ok`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":63892,"byte_end":63970,"line_start":1913,"line_end":1913,"column_start":5,"column_end":83}},{"value":"/ to the fold function `f` and its return value becomes the new accumulator value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":63975,"byte_end":64059,"line_start":1914,"line_end":1914,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":64064,"byte_end":64067,"line_start":1915,"line_end":1915,"column_start":5,"column_end":8}},{"value":"/ For example the sequence *Ok(1), Ok(2), Ok(3)* will result in a","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":64072,"byte_end":64139,"line_start":1916,"line_end":1916,"column_start":5,"column_end":72}},{"value":"/ computation like this:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":64144,"byte_end":64170,"line_start":1917,"line_end":1917,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":64175,"byte_end":64178,"line_start":1918,"line_end":1918,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":64183,"byte_end":64196,"line_start":1919,"line_end":1919,"column_start":5,"column_end":18}},{"value":"/ let mut accum = start;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":64201,"byte_end":64227,"line_start":1920,"line_end":1920,"column_start":5,"column_end":31}},{"value":"/ accum = f(accum, 1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":64232,"byte_end":64256,"line_start":1921,"line_end":1921,"column_start":5,"column_end":29}},{"value":"/ accum = f(accum, 2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":64261,"byte_end":64285,"line_start":1922,"line_end":1922,"column_start":5,"column_end":29}},{"value":"/ accum = f(accum, 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":64290,"byte_end":64314,"line_start":1923,"line_end":1923,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":64319,"byte_end":64326,"line_start":1924,"line_end":1924,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":64331,"byte_end":64334,"line_start":1925,"line_end":1925,"column_start":5,"column_end":8}},{"value":"/ With a `start` value of 0 and an addition as folding function,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":64339,"byte_end":64405,"line_start":1926,"line_end":1926,"column_start":5,"column_end":71}},{"value":"/ this effectively results in *((0 + 1) + 2) + 3*","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":64410,"byte_end":64461,"line_start":1927,"line_end":1927,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":64466,"byte_end":64469,"line_start":1928,"line_end":1928,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":64474,"byte_end":64481,"line_start":1929,"line_end":1929,"column_start":5,"column_end":12}},{"value":"/ use std::ops::Add;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":64486,"byte_end":64508,"line_start":1930,"line_end":1930,"column_start":5,"column_end":27}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":64513,"byte_end":64542,"line_start":1931,"line_end":1931,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":64547,"byte_end":64550,"line_start":1932,"line_end":1932,"column_start":5,"column_end":8}},{"value":"/ let values = [1, 2, -2, -1, 2, 1];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":64555,"byte_end":64593,"line_start":1933,"line_end":1933,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":64598,"byte_end":64613,"line_start":1934,"line_end":1934,"column_start":5,"column_end":20}},{"value":"/     values.iter()","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":64618,"byte_end":64639,"line_start":1935,"line_end":1935,"column_start":5,"column_end":26}},{"value":"/           .map(Ok::<_, ()>)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":64644,"byte_end":64675,"line_start":1936,"line_end":1936,"column_start":5,"column_end":36}},{"value":"/           .fold_ok(0, Add::add),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":64680,"byte_end":64716,"line_start":1937,"line_end":1937,"column_start":5,"column_end":41}},{"value":"/     Ok(3)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":64721,"byte_end":64734,"line_start":1938,"line_end":1938,"column_start":5,"column_end":18}},{"value":"/ );","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":64739,"byte_end":64745,"line_start":1939,"line_end":1939,"column_start":5,"column_end":11}},{"value":"/ assert!(","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":64750,"byte_end":64762,"line_start":1940,"line_end":1940,"column_start":5,"column_end":17}},{"value":"/     values.iter()","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":64767,"byte_end":64788,"line_start":1941,"line_end":1941,"column_start":5,"column_end":26}},{"value":"/           .map(|&x| if x >= 0 { Ok(x) } else { Err(\"Negative number\") })","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":64793,"byte_end":64869,"line_start":1942,"line_end":1942,"column_start":5,"column_end":81}},{"value":"/           .fold_ok(0, Add::add)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":64874,"byte_end":64909,"line_start":1943,"line_end":1943,"column_start":5,"column_end":40}},{"value":"/           .is_err()","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":64914,"byte_end":64937,"line_start":1944,"line_end":1944,"column_start":5,"column_end":28}},{"value":"/ );","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":64942,"byte_end":64948,"line_start":1945,"line_end":1945,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":64953,"byte_end":64960,"line_start":1946,"line_end":1946,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2291},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":66127,"byte_end":66139,"line_start":1979,"line_end":1979,"column_start":8,"column_end":20},"name":"fold_options","qualname":"::Itertools::fold_options","value":"pub fn fold_options<A, B, F>(&mut Self, B, F) -> Option<B> where\nSelf: Iterator<Item = Option<A>>, F: FnMut(B, A) -> B","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Fold `Option` values from an iterator.","sig":null,"attributes":[{"value":"/ Fold `Option` values from an iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":65320,"byte_end":65362,"line_start":1960,"line_end":1960,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":65367,"byte_end":65370,"line_start":1961,"line_end":1961,"column_start":5,"column_end":8}},{"value":"/ Only `Some` values are folded. If no `None` is encountered, the folded","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":65375,"byte_end":65449,"line_start":1962,"line_end":1962,"column_start":5,"column_end":79}},{"value":"/ value is returned inside `Some`. Otherwise, the operation terminates","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":65454,"byte_end":65526,"line_start":1963,"line_end":1963,"column_start":5,"column_end":77}},{"value":"/ and returns `None`. No iterator elements are consumed after the `None`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":65531,"byte_end":65606,"line_start":1964,"line_end":1964,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":65611,"byte_end":65614,"line_start":1965,"line_end":1965,"column_start":5,"column_end":8}},{"value":"/ This is the `Option` equivalent to `fold_ok`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":65619,"byte_end":65668,"line_start":1966,"line_end":1966,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":65673,"byte_end":65676,"line_start":1967,"line_end":1967,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":65681,"byte_end":65688,"line_start":1968,"line_end":1968,"column_start":5,"column_end":12}},{"value":"/ use std::ops::Add;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":65693,"byte_end":65715,"line_start":1969,"line_end":1969,"column_start":5,"column_end":27}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":65720,"byte_end":65749,"line_start":1970,"line_end":1970,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":65754,"byte_end":65757,"line_start":1971,"line_end":1971,"column_start":5,"column_end":8}},{"value":"/ let mut values = vec![Some(1), Some(2), Some(-2)].into_iter();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":65762,"byte_end":65828,"line_start":1972,"line_end":1972,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(values.fold_options(5, Add::add), Some(5 + 1 + 2 - 2));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":65833,"byte_end":65903,"line_start":1973,"line_end":1973,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":65908,"byte_end":65911,"line_start":1974,"line_end":1974,"column_start":5,"column_end":8}},{"value":"/ let mut more_values = vec![Some(2), None, Some(0)].into_iter();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":65916,"byte_end":65983,"line_start":1975,"line_end":1975,"column_start":5,"column_end":72}},{"value":"/ assert!(more_values.fold_options(0, Add::add).is_none());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":65988,"byte_end":66049,"line_start":1976,"line_end":1976,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(more_values.next().unwrap(), Some(0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":66054,"byte_end":66107,"line_start":1977,"line_end":1977,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":66112,"byte_end":66119,"line_start":1978,"line_end":1978,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2295},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":66939,"byte_end":66944,"line_start":2004,"line_end":2004,"column_start":8,"column_end":13},"name":"fold1","qualname":"::Itertools::fold1","value":"pub fn fold1<F>(Self, F) -> Option<Self::Item> where\nF: FnMut(Self::Item, Self::Item) -> Self::Item, Self: Sized","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Accumulator of the elements in the iterator.","sig":null,"attributes":[{"value":"/ Accumulator of the elements in the iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":66475,"byte_end":66523,"line_start":1992,"line_end":1992,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":66528,"byte_end":66531,"line_start":1993,"line_end":1993,"column_start":5,"column_end":8}},{"value":"/ Like `.fold()`, without a base case. If the iterator is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":66536,"byte_end":66595,"line_start":1994,"line_end":1994,"column_start":5,"column_end":64}},{"value":"/ empty, return `None`. With just one element, return it.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":66600,"byte_end":66659,"line_start":1995,"line_end":1995,"column_start":5,"column_end":64}},{"value":"/ Otherwise elements are accumulated in sequence using the closure `f`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":66664,"byte_end":66737,"line_start":1996,"line_end":1996,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":66742,"byte_end":66745,"line_start":1997,"line_end":1997,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":66750,"byte_end":66757,"line_start":1998,"line_end":1998,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":66762,"byte_end":66791,"line_start":1999,"line_end":1999,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":66796,"byte_end":66799,"line_start":2000,"line_end":2000,"column_start":5,"column_end":8}},{"value":"/ assert_eq!((0..10).fold1(|x, y| x + y).unwrap_or(0), 45);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":66804,"byte_end":66865,"line_start":2001,"line_end":2001,"column_start":5,"column_end":66}},{"value":"/ assert_eq!((0..0).fold1(|x, y| x * y), None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":66870,"byte_end":66919,"line_start":2002,"line_end":2002,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":66924,"byte_end":66931,"line_start":2003,"line_end":2003,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2298},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":68932,"byte_end":68942,"line_start":2059,"line_end":2059,"column_start":8,"column_end":18},"name":"tree_fold1","qualname":"::Itertools::tree_fold1","value":"pub fn tree_fold1<F>(Self, F) -> Option<Self::Item> where\nF: FnMut(Self::Item, Self::Item) -> Self::Item, Self: Sized","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Accumulate the elements in the iterator in a tree-like manner.","sig":null,"attributes":[{"value":"/ Accumulate the elements in the iterator in a tree-like manner.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":67142,"byte_end":67208,"line_start":2011,"line_end":2011,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":67213,"byte_end":67216,"line_start":2012,"line_end":2012,"column_start":5,"column_end":8}},{"value":"/ You can think of it as, while there's more than one item, repeatedly","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":67221,"byte_end":67293,"line_start":2013,"line_end":2013,"column_start":5,"column_end":77}},{"value":"/ combining adjacent items.  It does so in bottom-up-merge-sort order,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":67298,"byte_end":67370,"line_start":2014,"line_end":2014,"column_start":5,"column_end":77}},{"value":"/ however, so that it needs only logarithmic stack space.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":67375,"byte_end":67434,"line_start":2015,"line_end":2015,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":67439,"byte_end":67442,"line_start":2016,"line_end":2016,"column_start":5,"column_end":8}},{"value":"/ This produces a call tree like the following (where the calls under","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":67447,"byte_end":67518,"line_start":2017,"line_end":2017,"column_start":5,"column_end":76}},{"value":"/ an item are done after reading that item):","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":67523,"byte_end":67569,"line_start":2018,"line_end":2018,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":67574,"byte_end":67577,"line_start":2019,"line_end":2019,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":67582,"byte_end":67593,"line_start":2020,"line_end":2020,"column_start":5,"column_end":16}},{"value":"/ 1 2 3 4 5 6 7","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":67598,"byte_end":67615,"line_start":2021,"line_end":2021,"column_start":5,"column_end":22}},{"value":"/ │ │ │ │ │ │ │","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":67620,"byte_end":67651,"line_start":2022,"line_end":2022,"column_start":5,"column_end":22}},{"value":"/ └─f └─f └─f │","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":67656,"byte_end":67687,"line_start":2023,"line_end":2023,"column_start":5,"column_end":22}},{"value":"/   │   │   │ │","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":67692,"byte_end":67717,"line_start":2024,"line_end":2024,"column_start":5,"column_end":22}},{"value":"/   └───f   └─f","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":67722,"byte_end":67751,"line_start":2025,"line_end":2025,"column_start":5,"column_end":22}},{"value":"/       │     │","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":67756,"byte_end":67777,"line_start":2026,"line_end":2026,"column_start":5,"column_end":22}},{"value":"/       └─────f","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":67782,"byte_end":67811,"line_start":2027,"line_end":2027,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":67816,"byte_end":67823,"line_start":2028,"line_end":2028,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":67828,"byte_end":67831,"line_start":2029,"line_end":2029,"column_start":5,"column_end":8}},{"value":"/ Which, for non-associative functions, will typically produce a different","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":67836,"byte_end":67912,"line_start":2030,"line_end":2030,"column_start":5,"column_end":81}},{"value":"/ result than the linear call tree used by `fold1`:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":67917,"byte_end":67970,"line_start":2031,"line_end":2031,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":67975,"byte_end":67978,"line_start":2032,"line_end":2032,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":67983,"byte_end":67994,"line_start":2033,"line_end":2033,"column_start":5,"column_end":16}},{"value":"/ 1 2 3 4 5 6 7","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":67999,"byte_end":68016,"line_start":2034,"line_end":2034,"column_start":5,"column_end":22}},{"value":"/ │ │ │ │ │ │ │","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":68021,"byte_end":68052,"line_start":2035,"line_end":2035,"column_start":5,"column_end":22}},{"value":"/ └─f─f─f─f─f─f","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":68057,"byte_end":68088,"line_start":2036,"line_end":2036,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":68093,"byte_end":68100,"line_start":2037,"line_end":2037,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":68105,"byte_end":68108,"line_start":2038,"line_end":2038,"column_start":5,"column_end":8}},{"value":"/ If `f` is associative, prefer the normal `fold1` instead.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":68113,"byte_end":68174,"line_start":2039,"line_end":2039,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":68179,"byte_end":68182,"line_start":2040,"line_end":2040,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":68187,"byte_end":68194,"line_start":2041,"line_end":2041,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":68199,"byte_end":68228,"line_start":2042,"line_end":2042,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":68233,"byte_end":68236,"line_start":2043,"line_end":2043,"column_start":5,"column_end":8}},{"value":"/ // The same tree as above","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":68241,"byte_end":68270,"line_start":2044,"line_end":2044,"column_start":5,"column_end":34}},{"value":"/ let num_strings = (1..8).map(|x| x.to_string());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":68275,"byte_end":68327,"line_start":2045,"line_end":2045,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(num_strings.tree_fold1(|x, y| format!(\"f({}, {})\", x, y)),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":68332,"byte_end":68405,"line_start":2046,"line_end":2046,"column_start":5,"column_end":78}},{"value":"/     Some(String::from(\"f(f(f(1, 2), f(3, 4)), f(f(5, 6), 7))\")));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":68410,"byte_end":68479,"line_start":2047,"line_end":2047,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":68484,"byte_end":68487,"line_start":2048,"line_end":2048,"column_start":5,"column_end":8}},{"value":"/ // Like fold1, an empty iterator produces None","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":68492,"byte_end":68542,"line_start":2049,"line_end":2049,"column_start":5,"column_end":55}},{"value":"/ assert_eq!((0..0).tree_fold1(|x, y| x * y), None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":68547,"byte_end":68601,"line_start":2050,"line_end":2050,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":68606,"byte_end":68609,"line_start":2051,"line_end":2051,"column_start":5,"column_end":8}},{"value":"/ // tree_fold1 matches fold1 for associative operations...","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":68614,"byte_end":68675,"line_start":2052,"line_end":2052,"column_start":5,"column_end":66}},{"value":"/ assert_eq!((0..10).tree_fold1(|x, y| x + y),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":68680,"byte_end":68728,"line_start":2053,"line_end":2053,"column_start":5,"column_end":53}},{"value":"/     (0..10).fold1(|x, y| x + y));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":68733,"byte_end":68770,"line_start":2054,"line_end":2054,"column_start":5,"column_end":42}},{"value":"/ // ...but not for non-associative ones","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":68775,"byte_end":68817,"line_start":2055,"line_end":2055,"column_start":5,"column_end":47}},{"value":"/ assert_ne!((0..10).tree_fold1(|x, y| x - y),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":68822,"byte_end":68870,"line_start":2056,"line_end":2056,"column_start":5,"column_end":53}},{"value":"/     (0..10).fold1(|x, y| x - y));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":68875,"byte_end":68912,"line_start":2057,"line_end":2057,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":68917,"byte_end":68924,"line_start":2058,"line_end":2058,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2310},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":72433,"byte_end":72443,"line_start":2157,"line_end":2157,"column_start":8,"column_end":18},"name":"fold_while","qualname":"::Itertools::fold_while","value":"pub fn fold_while<B, F>(&mut Self, B, F) -> FoldWhile<B> where Self: Sized,\nF: FnMut(B, Self::Item) -> FoldWhile<B>","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" An iterator method that applies a function, producing a single, final value.","sig":null,"attributes":[{"value":"/ An iterator method that applies a function, producing a single, final value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":71117,"byte_end":71197,"line_start":2118,"line_end":2118,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":71202,"byte_end":71205,"line_start":2119,"line_end":2119,"column_start":5,"column_end":8}},{"value":"/ `fold_while()` is basically equivalent to `fold()` but with additional support for","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":71210,"byte_end":71296,"line_start":2120,"line_end":2120,"column_start":5,"column_end":91}},{"value":"/ early exit via short-circuiting.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":71301,"byte_end":71337,"line_start":2121,"line_end":2121,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":71342,"byte_end":71345,"line_start":2122,"line_end":2122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":71350,"byte_end":71357,"line_start":2123,"line_end":2123,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":71362,"byte_end":71391,"line_start":2124,"line_end":2124,"column_start":5,"column_end":34}},{"value":"/ use itertools::FoldWhile::{Continue, Done};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":71396,"byte_end":71443,"line_start":2125,"line_end":2125,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":71448,"byte_end":71451,"line_start":2126,"line_end":2126,"column_start":5,"column_end":8}},{"value":"/ let numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":71456,"byte_end":71506,"line_start":2127,"line_end":2127,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":71511,"byte_end":71514,"line_start":2128,"line_end":2128,"column_start":5,"column_end":8}},{"value":"/ let mut result = 0;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":71519,"byte_end":71542,"line_start":2129,"line_end":2129,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":71547,"byte_end":71550,"line_start":2130,"line_end":2130,"column_start":5,"column_end":8}},{"value":"/ // for loop:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":71555,"byte_end":71571,"line_start":2131,"line_end":2131,"column_start":5,"column_end":21}},{"value":"/ for i in &numbers {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":71576,"byte_end":71599,"line_start":2132,"line_end":2132,"column_start":5,"column_end":28}},{"value":"/     if *i > 5 {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":71604,"byte_end":71623,"line_start":2133,"line_end":2133,"column_start":5,"column_end":24}},{"value":"/         break;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":71628,"byte_end":71646,"line_start":2134,"line_end":2134,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":71651,"byte_end":71660,"line_start":2135,"line_end":2135,"column_start":5,"column_end":14}},{"value":"/     result = result + i;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":71665,"byte_end":71693,"line_start":2136,"line_end":2136,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":71698,"byte_end":71703,"line_start":2137,"line_end":2137,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":71708,"byte_end":71711,"line_start":2138,"line_end":2138,"column_start":5,"column_end":8}},{"value":"/ // fold:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":71716,"byte_end":71728,"line_start":2139,"line_end":2139,"column_start":5,"column_end":17}},{"value":"/ let result2 = numbers.iter().fold(0, |acc, x| {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":71733,"byte_end":71784,"line_start":2140,"line_end":2140,"column_start":5,"column_end":56}},{"value":"/     if *x > 5 { acc } else { acc + x }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":71789,"byte_end":71831,"line_start":2141,"line_end":2141,"column_start":5,"column_end":47}},{"value":"/ });","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":71836,"byte_end":71843,"line_start":2142,"line_end":2142,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":71848,"byte_end":71851,"line_start":2143,"line_end":2143,"column_start":5,"column_end":8}},{"value":"/ // fold_while:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":71856,"byte_end":71874,"line_start":2144,"line_end":2144,"column_start":5,"column_end":23}},{"value":"/ let result3 = numbers.iter().fold_while(0, |acc, x| {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":71879,"byte_end":71936,"line_start":2145,"line_end":2145,"column_start":5,"column_end":62}},{"value":"/     if *x > 5 { Done(acc) } else { Continue(acc + x) }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":71941,"byte_end":71999,"line_start":2146,"line_end":2146,"column_start":5,"column_end":63}},{"value":"/ }).into_inner();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":72004,"byte_end":72024,"line_start":2147,"line_end":2147,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":72029,"byte_end":72032,"line_start":2148,"line_end":2148,"column_start":5,"column_end":8}},{"value":"/ // they're the same","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":72037,"byte_end":72060,"line_start":2149,"line_end":2149,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(result, result2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":72065,"byte_end":72097,"line_start":2150,"line_end":2150,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(result2, result3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":72102,"byte_end":72135,"line_start":2151,"line_end":2151,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":72140,"byte_end":72147,"line_start":2152,"line_end":2152,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":72152,"byte_end":72155,"line_start":2153,"line_end":2153,"column_start":5,"column_end":8}},{"value":"/ The big difference between the computations of `result2` and `result3` is that while","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":72160,"byte_end":72248,"line_start":2154,"line_end":2154,"column_start":5,"column_end":93}},{"value":"/ `fold()` called the provided closure for every item of the callee iterator,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":72253,"byte_end":72332,"line_start":2155,"line_end":2155,"column_start":5,"column_end":84}},{"value":"/ `fold_while()` actually stopped iterating as soon as it encountered `Fold::Done(_)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":72337,"byte_end":72425,"line_start":2156,"line_end":2156,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":2321},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":73691,"byte_end":73695,"line_start":2200,"line_end":2200,"column_start":8,"column_end":12},"name":"sum1","qualname":"::Itertools::sum1","value":"pub fn sum1<S>(Self) -> Option<S> where Self: Sized,\nS: std::iter::Sum<Self::Item>","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Iterate over the entire iterator and add all the elements.","sig":null,"attributes":[{"value":"/ Iterate over the entire iterator and add all the elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":73049,"byte_end":73111,"line_start":2179,"line_end":2179,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":73116,"byte_end":73119,"line_start":2180,"line_end":2180,"column_start":5,"column_end":8}},{"value":"/ An empty iterator returns `None`, otherwise `Some(sum)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":73124,"byte_end":73184,"line_start":2181,"line_end":2181,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":73189,"byte_end":73192,"line_start":2182,"line_end":2182,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":73197,"byte_end":73209,"line_start":2183,"line_end":2183,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":73214,"byte_end":73217,"line_start":2184,"line_end":2184,"column_start":5,"column_end":8}},{"value":"/ When calling `sum1()` and a primitive integer type is being returned, this","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":73222,"byte_end":73300,"line_start":2185,"line_end":2185,"column_start":5,"column_end":83}},{"value":"/ method will panic if the computation overflows and debug assertions are","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":73305,"byte_end":73380,"line_start":2186,"line_end":2186,"column_start":5,"column_end":80}},{"value":"/ enabled.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":73385,"byte_end":73397,"line_start":2187,"line_end":2187,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":73402,"byte_end":73405,"line_start":2188,"line_end":2188,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":73410,"byte_end":73424,"line_start":2189,"line_end":2189,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":73429,"byte_end":73432,"line_start":2190,"line_end":2190,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":73437,"byte_end":73444,"line_start":2191,"line_end":2191,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":73449,"byte_end":73478,"line_start":2192,"line_end":2192,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":73483,"byte_end":73486,"line_start":2193,"line_end":2193,"column_start":5,"column_end":8}},{"value":"/ let empty_sum = (1..1).sum1::<i32>();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":73491,"byte_end":73532,"line_start":2194,"line_end":2194,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(empty_sum, None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":73537,"byte_end":73569,"line_start":2195,"line_end":2195,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":73574,"byte_end":73577,"line_start":2196,"line_end":2196,"column_start":5,"column_end":8}},{"value":"/ let nonempty_sum = (1..11).sum1::<i32>();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":73582,"byte_end":73627,"line_start":2197,"line_end":2197,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(nonempty_sum, Some(55));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":73632,"byte_end":73671,"line_start":2198,"line_end":2198,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":73676,"byte_end":73683,"line_start":2199,"line_end":2199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2324},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":74558,"byte_end":74566,"line_start":2228,"line_end":2228,"column_start":8,"column_end":16},"name":"product1","qualname":"::Itertools::product1","value":"pub fn product1<P>(Self) -> Option<P> where Self: Sized,\nP: std::iter::Product<Self::Item>","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Iterate over the entire iterator and multiply all the elements.","sig":null,"attributes":[{"value":"/ Iterate over the entire iterator and multiply all the elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":73887,"byte_end":73954,"line_start":2208,"line_end":2208,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":73959,"byte_end":73962,"line_start":2209,"line_end":2209,"column_start":5,"column_end":8}},{"value":"/ An empty iterator returns `None`, otherwise `Some(product)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":73967,"byte_end":74031,"line_start":2210,"line_end":2210,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":74036,"byte_end":74039,"line_start":2211,"line_end":2211,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":74044,"byte_end":74056,"line_start":2212,"line_end":2212,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":74061,"byte_end":74064,"line_start":2213,"line_end":2213,"column_start":5,"column_end":8}},{"value":"/ When calling `product1()` and a primitive integer type is being returned,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":74069,"byte_end":74146,"line_start":2214,"line_end":2214,"column_start":5,"column_end":82}},{"value":"/ method will panic if the computation overflows and debug assertions are","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":74151,"byte_end":74226,"line_start":2215,"line_end":2215,"column_start":5,"column_end":80}},{"value":"/ enabled.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":74231,"byte_end":74243,"line_start":2216,"line_end":2216,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":74248,"byte_end":74251,"line_start":2217,"line_end":2217,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":74256,"byte_end":74270,"line_start":2218,"line_end":2218,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":74275,"byte_end":74282,"line_start":2219,"line_end":2219,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":74287,"byte_end":74316,"line_start":2220,"line_end":2220,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":74321,"byte_end":74324,"line_start":2221,"line_end":2221,"column_start":5,"column_end":8}},{"value":"/ let empty_product = (1..1).product1::<i32>();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":74329,"byte_end":74378,"line_start":2222,"line_end":2222,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(empty_product, None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":74383,"byte_end":74419,"line_start":2223,"line_end":2223,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":74424,"byte_end":74427,"line_start":2224,"line_end":2224,"column_start":5,"column_end":8}},{"value":"/ let nonempty_product = (1..11).product1::<i32>();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":74432,"byte_end":74485,"line_start":2225,"line_end":2225,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(nonempty_product, Some(3628800));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":74490,"byte_end":74538,"line_start":2226,"line_end":2226,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":74543,"byte_end":74550,"line_start":2227,"line_end":2227,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2327},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":75476,"byte_end":75491,"line_start":2254,"line_end":2254,"column_start":8,"column_end":23},"name":"sorted_unstable","qualname":"::Itertools::sorted_unstable","value":"pub fn sorted_unstable(Self) -> VecIntoIter<Self::Item> where Self: Sized,\nSelf::Item: Ord","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Sort all iterator elements into a new iterator in ascending order.","sig":null,"attributes":[{"value":"/ Sort all iterator elements into a new iterator in ascending order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":74766,"byte_end":74836,"line_start":2236,"line_end":2236,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":74841,"byte_end":74844,"line_start":2237,"line_end":2237,"column_start":5,"column_end":8}},{"value":"/ **Note:** This consumes the entire iterator, uses the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":74849,"byte_end":74906,"line_start":2238,"line_end":2238,"column_start":5,"column_end":62}},{"value":"/ `slice::sort_unstable()` method and returns the result as a new","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":74911,"byte_end":74978,"line_start":2239,"line_end":2239,"column_start":5,"column_end":72}},{"value":"/ iterator that owns its elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":74983,"byte_end":75019,"line_start":2240,"line_end":2240,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":75024,"byte_end":75027,"line_start":2241,"line_end":2241,"column_start":5,"column_end":8}},{"value":"/ The sorted iterator, if directly collected to a `Vec`, is converted","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":75032,"byte_end":75103,"line_start":2242,"line_end":2242,"column_start":5,"column_end":76}},{"value":"/ without any extra copying or allocation cost.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":75108,"byte_end":75157,"line_start":2243,"line_end":2243,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":75162,"byte_end":75165,"line_start":2244,"line_end":2244,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":75170,"byte_end":75177,"line_start":2245,"line_end":2245,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":75182,"byte_end":75211,"line_start":2246,"line_end":2246,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":75216,"byte_end":75219,"line_start":2247,"line_end":2247,"column_start":5,"column_end":8}},{"value":"/ // sort the letters of the text in ascending order","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":75224,"byte_end":75278,"line_start":2248,"line_end":2248,"column_start":5,"column_end":59}},{"value":"/ let text = \"bdacfe\";","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":75283,"byte_end":75307,"line_start":2249,"line_end":2249,"column_start":5,"column_end":29}},{"value":"/ itertools::assert_equal(text.chars().sorted_unstable(),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":75312,"byte_end":75371,"line_start":2250,"line_end":2250,"column_start":5,"column_end":64}},{"value":"/                         \"abcdef\".chars());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":75376,"byte_end":75422,"line_start":2251,"line_end":2251,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":75427,"byte_end":75434,"line_start":2252,"line_end":2252,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_alloc\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":75439,"byte_end":75468,"line_start":2253,"line_end":2253,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2328},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":76751,"byte_end":76769,"line_start":2289,"line_end":2289,"column_start":8,"column_end":26},"name":"sorted_unstable_by","qualname":"::Itertools::sorted_unstable_by","value":"pub fn sorted_unstable_by<F>(Self, F) -> VecIntoIter<Self::Item> where\nSelf: Sized, F: FnMut(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Sort all iterator elements into a new iterator in ascending order.","sig":null,"attributes":[{"value":"/ Sort all iterator elements into a new iterator in ascending order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":75798,"byte_end":75868,"line_start":2265,"line_end":2265,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":75873,"byte_end":75876,"line_start":2266,"line_end":2266,"column_start":5,"column_end":8}},{"value":"/ **Note:** This consumes the entire iterator, uses the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":75881,"byte_end":75938,"line_start":2267,"line_end":2267,"column_start":5,"column_end":62}},{"value":"/ `slice::sort_unstable_by()` method and returns the result as a new","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":75943,"byte_end":76013,"line_start":2268,"line_end":2268,"column_start":5,"column_end":75}},{"value":"/ iterator that owns its elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":76018,"byte_end":76054,"line_start":2269,"line_end":2269,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":76059,"byte_end":76062,"line_start":2270,"line_end":2270,"column_start":5,"column_end":8}},{"value":"/ The sorted iterator, if directly collected to a `Vec`, is converted","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":76067,"byte_end":76138,"line_start":2271,"line_end":2271,"column_start":5,"column_end":76}},{"value":"/ without any extra copying or allocation cost.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":76143,"byte_end":76192,"line_start":2272,"line_end":2272,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":76197,"byte_end":76200,"line_start":2273,"line_end":2273,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":76205,"byte_end":76212,"line_start":2274,"line_end":2274,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":76217,"byte_end":76246,"line_start":2275,"line_end":2275,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":76251,"byte_end":76254,"line_start":2276,"line_end":2276,"column_start":5,"column_end":8}},{"value":"/ // sort people in descending order by age","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":76259,"byte_end":76304,"line_start":2277,"line_end":2277,"column_start":5,"column_end":50}},{"value":"/ let people = vec![(\"Jane\", 20), (\"John\", 18), (\"Jill\", 30), (\"Jack\", 27)];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":76309,"byte_end":76387,"line_start":2278,"line_end":2278,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":76392,"byte_end":76395,"line_start":2279,"line_end":2279,"column_start":5,"column_end":8}},{"value":"/ let oldest_people_first = people","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":76400,"byte_end":76436,"line_start":2280,"line_end":2280,"column_start":5,"column_end":41}},{"value":"/     .into_iter()","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":76441,"byte_end":76461,"line_start":2281,"line_end":2281,"column_start":5,"column_end":25}},{"value":"/     .sorted_unstable_by(|a, b| Ord::cmp(&b.1, &a.1))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":76466,"byte_end":76522,"line_start":2282,"line_end":2282,"column_start":5,"column_end":61}},{"value":"/     .map(|(person, _age)| person);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":76527,"byte_end":76565,"line_start":2283,"line_end":2283,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":76570,"byte_end":76573,"line_start":2284,"line_end":2284,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal(oldest_people_first,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":76578,"byte_end":76626,"line_start":2285,"line_end":2285,"column_start":5,"column_end":53}},{"value":"/                         vec![\"Jill\", \"Jack\", \"Jane\", \"John\"]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":76631,"byte_end":76697,"line_start":2286,"line_end":2286,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":76702,"byte_end":76709,"line_start":2287,"line_end":2287,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_alloc\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":76714,"byte_end":76743,"line_start":2288,"line_end":2288,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2330},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":77959,"byte_end":77981,"line_start":2322,"line_end":2322,"column_start":8,"column_end":30},"name":"sorted_unstable_by_key","qualname":"::Itertools::sorted_unstable_by_key","value":"pub fn sorted_unstable_by_key<K, F>(Self, F) -> VecIntoIter<Self::Item> where\nSelf: Sized, K: Ord, F: FnMut(&Self::Item) -> K","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Sort all iterator elements into a new iterator in ascending order.","sig":null,"attributes":[{"value":"/ Sort all iterator elements into a new iterator in ascending order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":77017,"byte_end":77087,"line_start":2298,"line_end":2298,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":77092,"byte_end":77095,"line_start":2299,"line_end":2299,"column_start":5,"column_end":8}},{"value":"/ **Note:** This consumes the entire iterator, uses the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":77100,"byte_end":77157,"line_start":2300,"line_end":2300,"column_start":5,"column_end":62}},{"value":"/ `slice::sort_unstable_by_key()` method and returns the result as a new","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":77162,"byte_end":77236,"line_start":2301,"line_end":2301,"column_start":5,"column_end":79}},{"value":"/ iterator that owns its elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":77241,"byte_end":77277,"line_start":2302,"line_end":2302,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":77282,"byte_end":77285,"line_start":2303,"line_end":2303,"column_start":5,"column_end":8}},{"value":"/ The sorted iterator, if directly collected to a `Vec`, is converted","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":77290,"byte_end":77361,"line_start":2304,"line_end":2304,"column_start":5,"column_end":76}},{"value":"/ without any extra copying or allocation cost.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":77366,"byte_end":77415,"line_start":2305,"line_end":2305,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":77420,"byte_end":77423,"line_start":2306,"line_end":2306,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":77428,"byte_end":77435,"line_start":2307,"line_end":2307,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":77440,"byte_end":77469,"line_start":2308,"line_end":2308,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":77474,"byte_end":77477,"line_start":2309,"line_end":2309,"column_start":5,"column_end":8}},{"value":"/ // sort people in descending order by age","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":77482,"byte_end":77527,"line_start":2310,"line_end":2310,"column_start":5,"column_end":50}},{"value":"/ let people = vec![(\"Jane\", 20), (\"John\", 18), (\"Jill\", 30), (\"Jack\", 27)];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":77532,"byte_end":77610,"line_start":2311,"line_end":2311,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":77615,"byte_end":77618,"line_start":2312,"line_end":2312,"column_start":5,"column_end":8}},{"value":"/ let oldest_people_first = people","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":77623,"byte_end":77659,"line_start":2313,"line_end":2313,"column_start":5,"column_end":41}},{"value":"/     .into_iter()","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":77664,"byte_end":77684,"line_start":2314,"line_end":2314,"column_start":5,"column_end":25}},{"value":"/     .sorted_unstable_by_key(|x| -x.1)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":77689,"byte_end":77730,"line_start":2315,"line_end":2315,"column_start":5,"column_end":46}},{"value":"/     .map(|(person, _age)| person);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":77735,"byte_end":77773,"line_start":2316,"line_end":2316,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":77778,"byte_end":77781,"line_start":2317,"line_end":2317,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal(oldest_people_first,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":77786,"byte_end":77834,"line_start":2318,"line_end":2318,"column_start":5,"column_end":53}},{"value":"/                         vec![\"Jill\", \"Jack\", \"Jane\", \"John\"]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":77839,"byte_end":77905,"line_start":2319,"line_end":2319,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":77910,"byte_end":77917,"line_start":2320,"line_end":2320,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_alloc\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":77922,"byte_end":77951,"line_start":2321,"line_end":2321,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2333},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":78926,"byte_end":78932,"line_start":2350,"line_end":2350,"column_start":8,"column_end":14},"name":"sorted","qualname":"::Itertools::sorted","value":"pub fn sorted(Self) -> VecIntoIter<Self::Item> where Self: Sized,\nSelf::Item: Ord","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Sort all iterator elements into a new iterator in ascending order.","sig":null,"attributes":[{"value":"/ Sort all iterator elements into a new iterator in ascending order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":78234,"byte_end":78304,"line_start":2332,"line_end":2332,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":78309,"byte_end":78312,"line_start":2333,"line_end":2333,"column_start":5,"column_end":8}},{"value":"/ **Note:** This consumes the entire iterator, uses the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":78317,"byte_end":78374,"line_start":2334,"line_end":2334,"column_start":5,"column_end":62}},{"value":"/ `slice::sort()` method and returns the result as a new","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":78379,"byte_end":78437,"line_start":2335,"line_end":2335,"column_start":5,"column_end":63}},{"value":"/ iterator that owns its elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":78442,"byte_end":78478,"line_start":2336,"line_end":2336,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":78483,"byte_end":78486,"line_start":2337,"line_end":2337,"column_start":5,"column_end":8}},{"value":"/ The sorted iterator, if directly collected to a `Vec`, is converted","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":78491,"byte_end":78562,"line_start":2338,"line_end":2338,"column_start":5,"column_end":76}},{"value":"/ without any extra copying or allocation cost.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":78567,"byte_end":78616,"line_start":2339,"line_end":2339,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":78621,"byte_end":78624,"line_start":2340,"line_end":2340,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":78629,"byte_end":78636,"line_start":2341,"line_end":2341,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":78641,"byte_end":78670,"line_start":2342,"line_end":2342,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":78675,"byte_end":78678,"line_start":2343,"line_end":2343,"column_start":5,"column_end":8}},{"value":"/ // sort the letters of the text in ascending order","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":78683,"byte_end":78737,"line_start":2344,"line_end":2344,"column_start":5,"column_end":59}},{"value":"/ let text = \"bdacfe\";","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":78742,"byte_end":78766,"line_start":2345,"line_end":2345,"column_start":5,"column_end":29}},{"value":"/ itertools::assert_equal(text.chars().sorted(),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":78771,"byte_end":78821,"line_start":2346,"line_end":2346,"column_start":5,"column_end":55}},{"value":"/                         \"abcdef\".chars());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":78826,"byte_end":78872,"line_start":2347,"line_end":2347,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":78877,"byte_end":78884,"line_start":2348,"line_end":2348,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_alloc\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":78889,"byte_end":78918,"line_start":2349,"line_end":2349,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2334},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":80156,"byte_end":80165,"line_start":2385,"line_end":2385,"column_start":8,"column_end":17},"name":"sorted_by","qualname":"::Itertools::sorted_by","value":"pub fn sorted_by<F>(Self, F) -> VecIntoIter<Self::Item> where Self: Sized,\nF: FnMut(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Sort all iterator elements into a new iterator in ascending order.","sig":null,"attributes":[{"value":"/ Sort all iterator elements into a new iterator in ascending order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":79221,"byte_end":79291,"line_start":2361,"line_end":2361,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":79296,"byte_end":79299,"line_start":2362,"line_end":2362,"column_start":5,"column_end":8}},{"value":"/ **Note:** This consumes the entire iterator, uses the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":79304,"byte_end":79361,"line_start":2363,"line_end":2363,"column_start":5,"column_end":62}},{"value":"/ `slice::sort_by()` method and returns the result as a new","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":79366,"byte_end":79427,"line_start":2364,"line_end":2364,"column_start":5,"column_end":66}},{"value":"/ iterator that owns its elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":79432,"byte_end":79468,"line_start":2365,"line_end":2365,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":79473,"byte_end":79476,"line_start":2366,"line_end":2366,"column_start":5,"column_end":8}},{"value":"/ The sorted iterator, if directly collected to a `Vec`, is converted","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":79481,"byte_end":79552,"line_start":2367,"line_end":2367,"column_start":5,"column_end":76}},{"value":"/ without any extra copying or allocation cost.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":79557,"byte_end":79606,"line_start":2368,"line_end":2368,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":79611,"byte_end":79614,"line_start":2369,"line_end":2369,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":79619,"byte_end":79626,"line_start":2370,"line_end":2370,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":79631,"byte_end":79660,"line_start":2371,"line_end":2371,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":79665,"byte_end":79668,"line_start":2372,"line_end":2372,"column_start":5,"column_end":8}},{"value":"/ // sort people in descending order by age","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":79673,"byte_end":79718,"line_start":2373,"line_end":2373,"column_start":5,"column_end":50}},{"value":"/ let people = vec![(\"Jane\", 20), (\"John\", 18), (\"Jill\", 30), (\"Jack\", 27)];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":79723,"byte_end":79801,"line_start":2374,"line_end":2374,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":79806,"byte_end":79809,"line_start":2375,"line_end":2375,"column_start":5,"column_end":8}},{"value":"/ let oldest_people_first = people","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":79814,"byte_end":79850,"line_start":2376,"line_end":2376,"column_start":5,"column_end":41}},{"value":"/     .into_iter()","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":79855,"byte_end":79875,"line_start":2377,"line_end":2377,"column_start":5,"column_end":25}},{"value":"/     .sorted_by(|a, b| Ord::cmp(&b.1, &a.1))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":79880,"byte_end":79927,"line_start":2378,"line_end":2378,"column_start":5,"column_end":52}},{"value":"/     .map(|(person, _age)| person);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":79932,"byte_end":79970,"line_start":2379,"line_end":2379,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":79975,"byte_end":79978,"line_start":2380,"line_end":2380,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal(oldest_people_first,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":79983,"byte_end":80031,"line_start":2381,"line_end":2381,"column_start":5,"column_end":53}},{"value":"/                         vec![\"Jill\", \"Jack\", \"Jane\", \"John\"]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":80036,"byte_end":80102,"line_start":2382,"line_end":2382,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":80107,"byte_end":80114,"line_start":2383,"line_end":2383,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_alloc\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":80119,"byte_end":80148,"line_start":2384,"line_end":2384,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2336},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":81328,"byte_end":81341,"line_start":2418,"line_end":2418,"column_start":8,"column_end":21},"name":"sorted_by_key","qualname":"::Itertools::sorted_by_key","value":"pub fn sorted_by_key<K, F>(Self, F) -> VecIntoIter<Self::Item> where\nSelf: Sized, K: Ord, F: FnMut(&Self::Item) -> K","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Sort all iterator elements into a new iterator in ascending order.","sig":null,"attributes":[{"value":"/ Sort all iterator elements into a new iterator in ascending order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":80404,"byte_end":80474,"line_start":2394,"line_end":2394,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":80479,"byte_end":80482,"line_start":2395,"line_end":2395,"column_start":5,"column_end":8}},{"value":"/ **Note:** This consumes the entire iterator, uses the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":80487,"byte_end":80544,"line_start":2396,"line_end":2396,"column_start":5,"column_end":62}},{"value":"/ `slice::sort_by_key()` method and returns the result as a new","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":80549,"byte_end":80614,"line_start":2397,"line_end":2397,"column_start":5,"column_end":70}},{"value":"/ iterator that owns its elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":80619,"byte_end":80655,"line_start":2398,"line_end":2398,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":80660,"byte_end":80663,"line_start":2399,"line_end":2399,"column_start":5,"column_end":8}},{"value":"/ The sorted iterator, if directly collected to a `Vec`, is converted","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":80668,"byte_end":80739,"line_start":2400,"line_end":2400,"column_start":5,"column_end":76}},{"value":"/ without any extra copying or allocation cost.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":80744,"byte_end":80793,"line_start":2401,"line_end":2401,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":80798,"byte_end":80801,"line_start":2402,"line_end":2402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":80806,"byte_end":80813,"line_start":2403,"line_end":2403,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":80818,"byte_end":80847,"line_start":2404,"line_end":2404,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":80852,"byte_end":80855,"line_start":2405,"line_end":2405,"column_start":5,"column_end":8}},{"value":"/ // sort people in descending order by age","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":80860,"byte_end":80905,"line_start":2406,"line_end":2406,"column_start":5,"column_end":50}},{"value":"/ let people = vec![(\"Jane\", 20), (\"John\", 18), (\"Jill\", 30), (\"Jack\", 27)];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":80910,"byte_end":80988,"line_start":2407,"line_end":2407,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":80993,"byte_end":80996,"line_start":2408,"line_end":2408,"column_start":5,"column_end":8}},{"value":"/ let oldest_people_first = people","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":81001,"byte_end":81037,"line_start":2409,"line_end":2409,"column_start":5,"column_end":41}},{"value":"/     .into_iter()","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":81042,"byte_end":81062,"line_start":2410,"line_end":2410,"column_start":5,"column_end":25}},{"value":"/     .sorted_by_key(|x| -x.1)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":81067,"byte_end":81099,"line_start":2411,"line_end":2411,"column_start":5,"column_end":37}},{"value":"/     .map(|(person, _age)| person);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":81104,"byte_end":81142,"line_start":2412,"line_end":2412,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":81147,"byte_end":81150,"line_start":2413,"line_end":2413,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal(oldest_people_first,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":81155,"byte_end":81203,"line_start":2414,"line_end":2414,"column_start":5,"column_end":53}},{"value":"/                         vec![\"Jill\", \"Jack\", \"Jane\", \"John\"]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":81208,"byte_end":81274,"line_start":2415,"line_end":2415,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":81279,"byte_end":81286,"line_start":2416,"line_end":2416,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_alloc\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":81291,"byte_end":81320,"line_start":2417,"line_end":2417,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2339},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":82698,"byte_end":82708,"line_start":2456,"line_end":2456,"column_start":8,"column_end":18},"name":"k_smallest","qualname":"::Itertools::k_smallest","value":"pub fn k_smallest(Self, usize) -> VecIntoIter<Self::Item> where Self: Sized,\nSelf::Item: Ord","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Sort the k smallest elements into a new iterator, in ascending order.","sig":null,"attributes":[{"value":"/ Sort the k smallest elements into a new iterator, in ascending order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":81585,"byte_end":81658,"line_start":2428,"line_end":2428,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":81663,"byte_end":81666,"line_start":2429,"line_end":2429,"column_start":5,"column_end":8}},{"value":"/ **Note:** This consumes the entire iterator, and returns the result","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":81671,"byte_end":81742,"line_start":2430,"line_end":2430,"column_start":5,"column_end":76}},{"value":"/ as a new iterator that owns its elements.  If the input contains","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":81747,"byte_end":81815,"line_start":2431,"line_end":2431,"column_start":5,"column_end":73}},{"value":"/ less than k elements, the result is equivalent to `self.sorted()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":81820,"byte_end":81890,"line_start":2432,"line_end":2432,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":81895,"byte_end":81898,"line_start":2433,"line_end":2433,"column_start":5,"column_end":8}},{"value":"/ This is guaranteed to use `k * sizeof(Self::Item) + O(1)` memory","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":81903,"byte_end":81971,"line_start":2434,"line_end":2434,"column_start":5,"column_end":73}},{"value":"/ and `O(n log k)` time, with `n` the number of elements in the input.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":81976,"byte_end":82048,"line_start":2435,"line_end":2435,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":82053,"byte_end":82056,"line_start":2436,"line_end":2436,"column_start":5,"column_end":8}},{"value":"/ The sorted iterator, if directly collected to a `Vec`, is converted","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":82061,"byte_end":82132,"line_start":2437,"line_end":2437,"column_start":5,"column_end":76}},{"value":"/ without any extra copying or allocation cost.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":82137,"byte_end":82186,"line_start":2438,"line_end":2438,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":82191,"byte_end":82194,"line_start":2439,"line_end":2439,"column_start":5,"column_end":8}},{"value":"/ **Note:** This is functionally-equivalent to `self.sorted().take(k)`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":82199,"byte_end":82271,"line_start":2440,"line_end":2440,"column_start":5,"column_end":77}},{"value":"/ but much more efficient.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":82276,"byte_end":82304,"line_start":2441,"line_end":2441,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":82309,"byte_end":82312,"line_start":2442,"line_end":2442,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":82317,"byte_end":82324,"line_start":2443,"line_end":2443,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":82329,"byte_end":82358,"line_start":2444,"line_end":2444,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":82363,"byte_end":82366,"line_start":2445,"line_end":2445,"column_start":5,"column_end":8}},{"value":"/ // A random permutation of 0..15","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":82371,"byte_end":82407,"line_start":2446,"line_end":2446,"column_start":5,"column_end":41}},{"value":"/ let numbers = vec![6, 9, 1, 14, 0, 4, 8, 7, 11, 2, 10, 3, 13, 12, 5];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":82412,"byte_end":82485,"line_start":2447,"line_end":2447,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":82490,"byte_end":82493,"line_start":2448,"line_end":2448,"column_start":5,"column_end":8}},{"value":"/ let five_smallest = numbers","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":82498,"byte_end":82529,"line_start":2449,"line_end":2449,"column_start":5,"column_end":36}},{"value":"/     .into_iter()","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":82534,"byte_end":82554,"line_start":2450,"line_end":2450,"column_start":5,"column_end":25}},{"value":"/     .k_smallest(5);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":82559,"byte_end":82582,"line_start":2451,"line_end":2451,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":82587,"byte_end":82590,"line_start":2452,"line_end":2452,"column_start":5,"column_end":8}},{"value":"/ itertools::assert_equal(five_smallest, 0..5);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":82595,"byte_end":82644,"line_start":2453,"line_end":2453,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":82649,"byte_end":82656,"line_start":2454,"line_end":2454,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_alloc\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":82661,"byte_end":82690,"line_start":2455,"line_end":2455,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2340},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":83638,"byte_end":83651,"line_start":2486,"line_end":2486,"column_start":8,"column_end":21},"name":"partition_map","qualname":"::Itertools::partition_map","value":"pub fn partition_map<A, B, F, L, R>(Self, F) -> (A, B) where Self: Sized,\nF: FnMut(Self::Item) -> Either<L, R>, A: Default + Extend<L>, B: Default +\nExtend<R>","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Collect all iterator elements into one of two\n partitions. Unlike `Iterator::partition`, each partition may\n have a distinct type.","sig":null,"attributes":[{"value":"/ Collect all iterator elements into one of two","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":82929,"byte_end":82978,"line_start":2465,"line_end":2465,"column_start":5,"column_end":54}},{"value":"/ partitions. Unlike `Iterator::partition`, each partition may","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":82983,"byte_end":83047,"line_start":2466,"line_end":2466,"column_start":5,"column_end":69}},{"value":"/ have a distinct type.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":83052,"byte_end":83077,"line_start":2467,"line_end":2467,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":83082,"byte_end":83085,"line_start":2468,"line_end":2468,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":83090,"byte_end":83097,"line_start":2469,"line_end":2469,"column_start":5,"column_end":12}},{"value":"/ use itertools::{Itertools, Either};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":83102,"byte_end":83141,"line_start":2470,"line_end":2470,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":83146,"byte_end":83149,"line_start":2471,"line_end":2471,"column_start":5,"column_end":8}},{"value":"/ let successes_and_failures = vec![Ok(1), Err(false), Err(true), Ok(2)];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":83154,"byte_end":83229,"line_start":2472,"line_end":2472,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":83234,"byte_end":83237,"line_start":2473,"line_end":2473,"column_start":5,"column_end":8}},{"value":"/ let (successes, failures): (Vec<_>, Vec<_>) = successes_and_failures","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":83242,"byte_end":83314,"line_start":2474,"line_end":2474,"column_start":5,"column_end":77}},{"value":"/     .into_iter()","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":83319,"byte_end":83339,"line_start":2475,"line_end":2475,"column_start":5,"column_end":25}},{"value":"/     .partition_map(|r| {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":83344,"byte_end":83372,"line_start":2476,"line_end":2476,"column_start":5,"column_end":33}},{"value":"/         match r {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":83377,"byte_end":83398,"line_start":2477,"line_end":2477,"column_start":5,"column_end":26}},{"value":"/             Ok(v) => Either::Left(v),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":83403,"byte_end":83444,"line_start":2478,"line_end":2478,"column_start":5,"column_end":46}},{"value":"/             Err(v) => Either::Right(v),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":83449,"byte_end":83492,"line_start":2479,"line_end":2479,"column_start":5,"column_end":48}},{"value":"/         }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":83497,"byte_end":83510,"line_start":2480,"line_end":2480,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":83515,"byte_end":83526,"line_start":2481,"line_end":2481,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":83531,"byte_end":83534,"line_start":2482,"line_end":2482,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(successes, [1, 2]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":83539,"byte_end":83573,"line_start":2483,"line_end":2483,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(failures, [false, true]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":83578,"byte_end":83618,"line_start":2484,"line_end":2484,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":83623,"byte_end":83630,"line_start":2485,"line_end":2485,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2347},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":84735,"byte_end":84749,"line_start":2518,"line_end":2518,"column_start":8,"column_end":22},"name":"into_group_map","qualname":"::Itertools::into_group_map","value":"pub fn into_group_map<K, V>(Self) -> HashMap<K, Vec<V>> where\nSelf: Iterator<Item = (K, V)> + Sized, K: Hash + Eq","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return a `HashMap` of keys mapped to `Vec`s of values. Keys and values\n are taken from `(Key, Value)` tuple pairs yielded by the input iterator.","sig":null,"attributes":[{"value":"/ Return a `HashMap` of keys mapped to `Vec`s of values. Keys and values","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":84143,"byte_end":84217,"line_start":2503,"line_end":2503,"column_start":5,"column_end":79}},{"value":"/ are taken from `(Key, Value)` tuple pairs yielded by the input iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":84222,"byte_end":84298,"line_start":2504,"line_end":2504,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":84303,"byte_end":84306,"line_start":2505,"line_end":2505,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":84311,"byte_end":84318,"line_start":2506,"line_end":2506,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":84323,"byte_end":84352,"line_start":2507,"line_end":2507,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":84357,"byte_end":84360,"line_start":2508,"line_end":2508,"column_start":5,"column_end":8}},{"value":"/ let data = vec![(0, 10), (2, 12), (3, 13), (0, 20), (3, 33), (2, 42)];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":84365,"byte_end":84439,"line_start":2509,"line_end":2509,"column_start":5,"column_end":79}},{"value":"/ let lookup = data.into_iter().into_group_map();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":84444,"byte_end":84495,"line_start":2510,"line_end":2510,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":84500,"byte_end":84503,"line_start":2511,"line_end":2511,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(lookup[&0], vec![10, 20]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":84508,"byte_end":84549,"line_start":2512,"line_end":2512,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(lookup.get(&1), None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":84554,"byte_end":84591,"line_start":2513,"line_end":2513,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(lookup[&2], vec![12, 42]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":84596,"byte_end":84637,"line_start":2514,"line_end":2514,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(lookup[&3], vec![13, 33]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":84642,"byte_end":84683,"line_start":2515,"line_end":2515,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":84688,"byte_end":84695,"line_start":2516,"line_end":2516,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":84700,"byte_end":84727,"line_start":2517,"line_end":2517,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2350},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":85996,"byte_end":86013,"line_start":2551,"line_end":2551,"column_start":8,"column_end":25},"name":"into_group_map_by","qualname":"::Itertools::into_group_map_by","value":"pub fn into_group_map_by<K, V, F>(Self, F) -> HashMap<K, Vec<V>> where\nSelf: Iterator<Item = V> + Sized, K: Hash + Eq, F: Fn(&V) -> K","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return an `Iterator` on a HahMap. Keys mapped to `Vec`s of values. The key is specified in\n in the closure.\n Different of into_group_map_by because the key is still present. It is also more general.\n you can also fold the group_map.","sig":null,"attributes":[{"value":"/ Return an `Iterator` on a HahMap. Keys mapped to `Vec`s of values. The key is specified in","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":84920,"byte_end":85014,"line_start":2525,"line_end":2525,"column_start":5,"column_end":99}},{"value":"/ in the closure.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":85019,"byte_end":85038,"line_start":2526,"line_end":2526,"column_start":5,"column_end":24}},{"value":"/ Different of into_group_map_by because the key is still present. It is also more general.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":85043,"byte_end":85136,"line_start":2527,"line_end":2527,"column_start":5,"column_end":98}},{"value":"/ you can also fold the group_map.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":85141,"byte_end":85177,"line_start":2528,"line_end":2528,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":85182,"byte_end":85185,"line_start":2529,"line_end":2529,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":85190,"byte_end":85197,"line_start":2530,"line_end":2530,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":85202,"byte_end":85231,"line_start":2531,"line_end":2531,"column_start":5,"column_end":34}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":85236,"byte_end":85270,"line_start":2532,"line_end":2532,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":85275,"byte_end":85278,"line_start":2533,"line_end":2533,"column_start":5,"column_end":8}},{"value":"/ let data = vec![(0, 10), (2, 12), (3, 13), (0, 20), (3, 33), (2, 42)];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":85283,"byte_end":85357,"line_start":2534,"line_end":2534,"column_start":5,"column_end":79}},{"value":"/ let lookup: HashMap<u32,Vec<(u32, u32)>> = data.clone().into_iter().into_group_map_by(|a|","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":85362,"byte_end":85455,"line_start":2535,"line_end":2535,"column_start":5,"column_end":98}},{"value":"/ a.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":85460,"byte_end":85469,"line_start":2536,"line_end":2536,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":85474,"byte_end":85477,"line_start":2537,"line_end":2537,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(lookup[&0], vec![(0,10),(0,20)]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":85482,"byte_end":85530,"line_start":2538,"line_end":2538,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(lookup.get(&1), None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":85535,"byte_end":85572,"line_start":2539,"line_end":2539,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(lookup[&2], vec![(2,12), (2,42)]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":85577,"byte_end":85626,"line_start":2540,"line_end":2540,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(lookup[&3], vec![(3,13), (3,33)]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":85631,"byte_end":85680,"line_start":2541,"line_end":2541,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":85685,"byte_end":85688,"line_start":2542,"line_end":2542,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":85693,"byte_end":85708,"line_start":2543,"line_end":2543,"column_start":5,"column_end":20}},{"value":"/     data.into_iter()","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":85713,"byte_end":85737,"line_start":2544,"line_end":2544,"column_start":5,"column_end":29}},{"value":"/     .into_group_map_by(|x| x.0)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":85742,"byte_end":85777,"line_start":2545,"line_end":2545,"column_start":5,"column_end":40}},{"value":"/     .into_iter()","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":85782,"byte_end":85802,"line_start":2546,"line_end":2546,"column_start":5,"column_end":25}},{"value":"/     .map(|(key, values)| (key, values.into_iter().fold(0,|acc, (_,v)| acc + v )))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":85807,"byte_end":85892,"line_start":2547,"line_end":2547,"column_start":5,"column_end":90}},{"value":"/     .collect::<HashMap<u32,u32>>()[&0], 30)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":85897,"byte_end":85944,"line_start":2548,"line_end":2548,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":85949,"byte_end":85956,"line_start":2549,"line_end":2549,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":85961,"byte_end":85988,"line_start":2550,"line_end":2550,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2354},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":86763,"byte_end":86780,"line_start":2570,"line_end":2570,"column_start":8,"column_end":25},"name":"into_grouping_map","qualname":"::Itertools::into_grouping_map","value":"pub fn into_grouping_map<K, V>(Self) -> GroupingMap<Self> where\nSelf: Iterator<Item = (K, V)> + Sized, K: Hash + Eq","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Constructs a `GroupingMap` to be used later with one of the efficient \n group-and-fold operations it allows to perform.\n \n The input iterator must yield item in the form of `(K, V)` where the\n value of type `K` will be used as key to identify the groups and the\n value of type `V` as value for the folding operation.\n \n See [`GroupingMap`](./structs/struct.GroupingMap.html) for more informations\n on what operations are available.\n","sig":null,"attributes":[{"value":"/ Constructs a `GroupingMap` to be used later with one of the efficient ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":86232,"byte_end":86306,"line_start":2560,"line_end":2560,"column_start":5,"column_end":79}},{"value":"/ group-and-fold operations it allows to perform.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":86311,"byte_end":86362,"line_start":2561,"line_end":2561,"column_start":5,"column_end":56}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":86367,"byte_end":86371,"line_start":2562,"line_end":2562,"column_start":5,"column_end":9}},{"value":"/ The input iterator must yield item in the form of `(K, V)` where the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":86376,"byte_end":86448,"line_start":2563,"line_end":2563,"column_start":5,"column_end":77}},{"value":"/ value of type `K` will be used as key to identify the groups and the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":86453,"byte_end":86525,"line_start":2564,"line_end":2564,"column_start":5,"column_end":77}},{"value":"/ value of type `V` as value for the folding operation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":86530,"byte_end":86587,"line_start":2565,"line_end":2565,"column_start":5,"column_end":62}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":86592,"byte_end":86596,"line_start":2566,"line_end":2566,"column_start":5,"column_end":9}},{"value":"/ See [`GroupingMap`](./structs/struct.GroupingMap.html) for more informations","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":86601,"byte_end":86681,"line_start":2567,"line_end":2567,"column_start":5,"column_end":85}},{"value":"/ on what operations are available.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":86686,"byte_end":86723,"line_start":2568,"line_end":2568,"column_start":5,"column_end":42}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":86728,"byte_end":86755,"line_start":2569,"line_end":2569,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2357},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":87425,"byte_end":87445,"line_start":2586,"line_end":2586,"column_start":8,"column_end":28},"name":"into_grouping_map_by","qualname":"::Itertools::into_grouping_map_by","value":"pub fn into_grouping_map_by<K, V, F>(Self, F) -> GroupingMapBy<Self, F> where\nSelf: Iterator<Item = V> + Sized, K: Hash + Eq, F: FnMut(&V) -> K","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Constructs a `GroupingMap` to be used later with one of the efficient \n group-and-fold operations it allows to perform.\n \n The values from this iterator will be used as values for the folding operation\n while the keys will be obtained from the values by calling `key_mapper`.\n \n See [`GroupingMap`](./structs/struct.GroupingMap.html) for more informations\n on what operations are available.\n","sig":null,"attributes":[{"value":"/ Constructs a `GroupingMap` to be used later with one of the efficient ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":86942,"byte_end":87016,"line_start":2577,"line_end":2577,"column_start":5,"column_end":79}},{"value":"/ group-and-fold operations it allows to perform.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":87021,"byte_end":87072,"line_start":2578,"line_end":2578,"column_start":5,"column_end":56}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":87077,"byte_end":87081,"line_start":2579,"line_end":2579,"column_start":5,"column_end":9}},{"value":"/ The values from this iterator will be used as values for the folding operation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":87086,"byte_end":87168,"line_start":2580,"line_end":2580,"column_start":5,"column_end":87}},{"value":"/ while the keys will be obtained from the values by calling `key_mapper`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":87173,"byte_end":87249,"line_start":2581,"line_end":2581,"column_start":5,"column_end":81}},{"value":"/ ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":87254,"byte_end":87258,"line_start":2582,"line_end":2582,"column_start":5,"column_end":9}},{"value":"/ See [`GroupingMap`](./structs/struct.GroupingMap.html) for more informations","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":87263,"byte_end":87343,"line_start":2583,"line_end":2583,"column_start":5,"column_end":85}},{"value":"/ on what operations are available.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":87348,"byte_end":87385,"line_start":2584,"line_end":2584,"column_start":5,"column_end":42}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":87390,"byte_end":87417,"line_start":2585,"line_end":2585,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2361},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":88996,"byte_end":89002,"line_start":2629,"line_end":2629,"column_start":8,"column_end":14},"name":"minmax","qualname":"::Itertools::minmax","value":"pub fn minmax(Self) -> MinMaxResult<Self::Item> where Self: Sized,\nSelf::Item: PartialOrd","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return the minimum and maximum elements in the iterator.","sig":null,"attributes":[{"value":"/ Return the minimum and maximum elements in the iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":87704,"byte_end":87764,"line_start":2594,"line_end":2594,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":87769,"byte_end":87772,"line_start":2595,"line_end":2595,"column_start":5,"column_end":8}},{"value":"/ The return type `MinMaxResult` is an enum of three variants:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":87777,"byte_end":87841,"line_start":2596,"line_end":2596,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":87846,"byte_end":87849,"line_start":2597,"line_end":2597,"column_start":5,"column_end":8}},{"value":"/ - `NoElements` if the iterator is empty.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":87854,"byte_end":87898,"line_start":2598,"line_end":2598,"column_start":5,"column_end":49}},{"value":"/ - `OneElement(x)` if the iterator has exactly one element.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":87903,"byte_end":87965,"line_start":2599,"line_end":2599,"column_start":5,"column_end":67}},{"value":"/ - `MinMax(x, y)` is returned otherwise, where `x <= y`. Two","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":87970,"byte_end":88033,"line_start":2600,"line_end":2600,"column_start":5,"column_end":68}},{"value":"/    values are equal if and only if there is more than one","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":88038,"byte_end":88099,"line_start":2601,"line_end":2601,"column_start":5,"column_end":66}},{"value":"/    element in the iterator and all elements are equal.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":88104,"byte_end":88162,"line_start":2602,"line_end":2602,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":88167,"byte_end":88170,"line_start":2603,"line_end":2603,"column_start":5,"column_end":8}},{"value":"/ On an iterator of length `n`, `minmax` does `1.5 * n` comparisons,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":88175,"byte_end":88245,"line_start":2604,"line_end":2604,"column_start":5,"column_end":75}},{"value":"/ and so is faster than calling `min` and `max` separately which does","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":88250,"byte_end":88321,"line_start":2605,"line_end":2605,"column_start":5,"column_end":76}},{"value":"/ `2 * n` comparisons.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":88326,"byte_end":88350,"line_start":2606,"line_end":2606,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":88355,"byte_end":88358,"line_start":2607,"line_end":2607,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":88363,"byte_end":88377,"line_start":2608,"line_end":2608,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":88382,"byte_end":88385,"line_start":2609,"line_end":2609,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":88390,"byte_end":88397,"line_start":2610,"line_end":2610,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":88402,"byte_end":88431,"line_start":2611,"line_end":2611,"column_start":5,"column_end":34}},{"value":"/ use itertools::MinMaxResult::{NoElements, OneElement, MinMax};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":88436,"byte_end":88502,"line_start":2612,"line_end":2612,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":88507,"byte_end":88510,"line_start":2613,"line_end":2613,"column_start":5,"column_end":8}},{"value":"/ let a: [i32; 0] = [];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":88515,"byte_end":88540,"line_start":2614,"line_end":2614,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.iter().minmax(), NoElements);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":88545,"byte_end":88591,"line_start":2615,"line_end":2615,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":88596,"byte_end":88599,"line_start":2616,"line_end":2616,"column_start":5,"column_end":8}},{"value":"/ let a = [1];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":88604,"byte_end":88620,"line_start":2617,"line_end":2617,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(a.iter().minmax(), OneElement(&1));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":88625,"byte_end":88675,"line_start":2618,"line_end":2618,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":88680,"byte_end":88683,"line_start":2619,"line_end":2619,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 2, 3, 4, 5];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":88688,"byte_end":88716,"line_start":2620,"line_end":2620,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(a.iter().minmax(), MinMax(&1, &5));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":88721,"byte_end":88771,"line_start":2621,"line_end":2621,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":88776,"byte_end":88779,"line_start":2622,"line_end":2622,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 1, 1, 1];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":88784,"byte_end":88809,"line_start":2623,"line_end":2623,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.iter().minmax(), MinMax(&1, &1));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":88814,"byte_end":88864,"line_start":2624,"line_end":2624,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":88869,"byte_end":88876,"line_start":2625,"line_end":2625,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":88881,"byte_end":88884,"line_start":2626,"line_end":2626,"column_start":5,"column_end":8}},{"value":"/ The elements can be floats but no particular result is guaranteed","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":88889,"byte_end":88958,"line_start":2627,"line_end":2627,"column_start":5,"column_end":74}},{"value":"/ if an element is NaN.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":88963,"byte_end":88988,"line_start":2628,"line_end":2628,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2364},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":89698,"byte_end":89711,"line_start":2646,"line_end":2646,"column_start":8,"column_end":21},"name":"minmax_by_key","qualname":"::Itertools::minmax_by_key","value":"pub fn minmax_by_key<K, F>(Self, F) -> MinMaxResult<Self::Item> where\nSelf: Sized, K: PartialOrd, F: FnMut(&Self::Item) -> K","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return the minimum and maximum element of an iterator, as determined by\n the specified function.","sig":null,"attributes":[{"value":"/ Return the minimum and maximum element of an iterator, as determined by","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":89166,"byte_end":89241,"line_start":2635,"line_end":2635,"column_start":5,"column_end":80}},{"value":"/ the specified function.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":89246,"byte_end":89273,"line_start":2636,"line_end":2636,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":89278,"byte_end":89281,"line_start":2637,"line_end":2637,"column_start":5,"column_end":8}},{"value":"/ The return value is a variant of `MinMaxResult` like for `minmax()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":89286,"byte_end":89358,"line_start":2638,"line_end":2638,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":89363,"byte_end":89366,"line_start":2639,"line_end":2639,"column_start":5,"column_end":8}},{"value":"/ For the minimum, the first minimal element is returned.  For the maximum,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":89371,"byte_end":89448,"line_start":2640,"line_end":2640,"column_start":5,"column_end":82}},{"value":"/ the last maximal element wins.  This matches the behavior of the standard","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":89453,"byte_end":89530,"line_start":2641,"line_end":2641,"column_start":5,"column_end":82}},{"value":"/ `Iterator::min()` and `Iterator::max()` methods.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":89535,"byte_end":89587,"line_start":2642,"line_end":2642,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":89592,"byte_end":89595,"line_start":2643,"line_end":2643,"column_start":5,"column_end":8}},{"value":"/ The keys can be floats but no particular result is guaranteed","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":89600,"byte_end":89665,"line_start":2644,"line_end":2644,"column_start":5,"column_end":70}},{"value":"/ if a key is NaN.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":89670,"byte_end":89690,"line_start":2645,"line_end":2645,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2368},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":90349,"byte_end":90358,"line_start":2660,"line_end":2660,"column_start":8,"column_end":17},"name":"minmax_by","qualname":"::Itertools::minmax_by","value":"pub fn minmax_by<F>(Self, F) -> MinMaxResult<Self::Item> where Self: Sized,\nF: FnMut(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return the minimum and maximum element of an iterator, as determined by\n the specified comparison function.","sig":null,"attributes":[{"value":"/ Return the minimum and maximum element of an iterator, as determined by","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":89909,"byte_end":89984,"line_start":2652,"line_end":2652,"column_start":5,"column_end":80}},{"value":"/ the specified comparison function.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":89989,"byte_end":90027,"line_start":2653,"line_end":2653,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":90032,"byte_end":90035,"line_start":2654,"line_end":2654,"column_start":5,"column_end":8}},{"value":"/ The return value is a variant of `MinMaxResult` like for `minmax()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":90040,"byte_end":90112,"line_start":2655,"line_end":2655,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":90117,"byte_end":90120,"line_start":2656,"line_end":2656,"column_start":5,"column_end":8}},{"value":"/ For the minimum, the first minimal element is returned.  For the maximum,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":90125,"byte_end":90202,"line_start":2657,"line_end":2657,"column_start":5,"column_end":82}},{"value":"/ the last maximal element wins.  This matches the behavior of the standard","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":90207,"byte_end":90284,"line_start":2658,"line_end":2658,"column_start":5,"column_end":82}},{"value":"/ `Iterator::min()` and `Iterator::max()` methods.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":90289,"byte_end":90341,"line_start":2659,"line_end":2659,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2372},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":91193,"byte_end":91205,"line_start":2689,"line_end":2689,"column_start":8,"column_end":20},"name":"position_max","qualname":"::Itertools::position_max","value":"pub fn position_max(Self) -> Option<usize> where Self: Sized, Self::Item: Ord","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return the position of the maximum element in the iterator.","sig":null,"attributes":[{"value":"/ Return the position of the maximum element in the iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":90637,"byte_end":90700,"line_start":2670,"line_end":2670,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":90705,"byte_end":90708,"line_start":2671,"line_end":2671,"column_start":5,"column_end":8}},{"value":"/ If several elements are equally maximum, the position of the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":90713,"byte_end":90777,"line_start":2672,"line_end":2672,"column_start":5,"column_end":69}},{"value":"/ last of them is returned.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":90782,"byte_end":90811,"line_start":2673,"line_end":2673,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":90816,"byte_end":90819,"line_start":2674,"line_end":2674,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":90824,"byte_end":90838,"line_start":2675,"line_end":2675,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":90843,"byte_end":90846,"line_start":2676,"line_end":2676,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":90851,"byte_end":90858,"line_start":2677,"line_end":2677,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":90863,"byte_end":90892,"line_start":2678,"line_end":2678,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":90897,"byte_end":90900,"line_start":2679,"line_end":2679,"column_start":5,"column_end":8}},{"value":"/ let a: [i32; 0] = [];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":90905,"byte_end":90930,"line_start":2680,"line_end":2680,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.iter().position_max(), None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":90935,"byte_end":90981,"line_start":2681,"line_end":2681,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":90986,"byte_end":90989,"line_start":2682,"line_end":2682,"column_start":5,"column_end":8}},{"value":"/ let a = [-3, 0, 1, 5, -10];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":90994,"byte_end":91025,"line_start":2683,"line_end":2683,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(a.iter().position_max(), Some(3));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":91030,"byte_end":91079,"line_start":2684,"line_end":2684,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":91084,"byte_end":91087,"line_start":2685,"line_end":2685,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 1, -1, -1];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":91092,"byte_end":91119,"line_start":2686,"line_end":2686,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(a.iter().position_max(), Some(1));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":91124,"byte_end":91173,"line_start":2687,"line_end":2687,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":91178,"byte_end":91185,"line_start":2688,"line_end":2688,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2375},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":92056,"byte_end":92075,"line_start":2717,"line_end":2717,"column_start":8,"column_end":27},"name":"position_max_by_key","qualname":"::Itertools::position_max_by_key","value":"pub fn position_max_by_key<K, F>(Self, F) -> Option<usize> where Self: Sized,\nK: Ord, F: FnMut(&Self::Item) -> K","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return the position of the maximum element in the iterator, as\n determined by the specified function.","sig":null,"attributes":[{"value":"/ Return the position of the maximum element in the iterator, as","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":91389,"byte_end":91455,"line_start":2697,"line_end":2697,"column_start":5,"column_end":71}},{"value":"/ determined by the specified function.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":91460,"byte_end":91501,"line_start":2698,"line_end":2698,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":91506,"byte_end":91509,"line_start":2699,"line_end":2699,"column_start":5,"column_end":8}},{"value":"/ If several elements are equally maximum, the position of the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":91514,"byte_end":91578,"line_start":2700,"line_end":2700,"column_start":5,"column_end":69}},{"value":"/ last of them is returned.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":91583,"byte_end":91612,"line_start":2701,"line_end":2701,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":91617,"byte_end":91620,"line_start":2702,"line_end":2702,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":91625,"byte_end":91639,"line_start":2703,"line_end":2703,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":91644,"byte_end":91647,"line_start":2704,"line_end":2704,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":91652,"byte_end":91659,"line_start":2705,"line_end":2705,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":91664,"byte_end":91693,"line_start":2706,"line_end":2706,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":91698,"byte_end":91701,"line_start":2707,"line_end":2707,"column_start":5,"column_end":8}},{"value":"/ let a: [i32; 0] = [];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":91706,"byte_end":91731,"line_start":2708,"line_end":2708,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.iter().position_max_by_key(|x| x.abs()), None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":91736,"byte_end":91800,"line_start":2709,"line_end":2709,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":91805,"byte_end":91808,"line_start":2710,"line_end":2710,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 0, 1, 5, -10];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":91813,"byte_end":91848,"line_start":2711,"line_end":2711,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(a.iter().position_max_by_key(|x| x.abs()), Some(4));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":91853,"byte_end":91920,"line_start":2712,"line_end":2712,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":91925,"byte_end":91928,"line_start":2713,"line_end":2713,"column_start":5,"column_end":8}},{"value":"/ let a = [1_i32, 1, -1, -1];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":91933,"byte_end":91964,"line_start":2714,"line_end":2714,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(a.iter().position_max_by_key(|x| x.abs()), Some(3));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":91969,"byte_end":92036,"line_start":2715,"line_end":2715,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":92041,"byte_end":92048,"line_start":2716,"line_end":2716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2380},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":92986,"byte_end":93001,"line_start":2745,"line_end":2745,"column_start":8,"column_end":23},"name":"position_max_by","qualname":"::Itertools::position_max_by","value":"pub fn position_max_by<F>(Self, F) -> Option<usize> where Self: Sized,\nF: FnMut(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return the position of the maximum element in the iterator, as\n determined by the specified comparison function.","sig":null,"attributes":[{"value":"/ Return the position of the maximum element in the iterator, as","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":92308,"byte_end":92374,"line_start":2725,"line_end":2725,"column_start":5,"column_end":71}},{"value":"/ determined by the specified comparison function.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":92379,"byte_end":92431,"line_start":2726,"line_end":2726,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":92436,"byte_end":92439,"line_start":2727,"line_end":2727,"column_start":5,"column_end":8}},{"value":"/ If several elements are equally maximum, the position of the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":92444,"byte_end":92508,"line_start":2728,"line_end":2728,"column_start":5,"column_end":69}},{"value":"/ last of them is returned.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":92513,"byte_end":92542,"line_start":2729,"line_end":2729,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":92547,"byte_end":92550,"line_start":2730,"line_end":2730,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":92555,"byte_end":92569,"line_start":2731,"line_end":2731,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":92574,"byte_end":92577,"line_start":2732,"line_end":2732,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":92582,"byte_end":92589,"line_start":2733,"line_end":2733,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":92594,"byte_end":92623,"line_start":2734,"line_end":2734,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":92628,"byte_end":92631,"line_start":2735,"line_end":2735,"column_start":5,"column_end":8}},{"value":"/ let a: [i32; 0] = [];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":92636,"byte_end":92661,"line_start":2736,"line_end":2736,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.iter().position_max_by(|x, y| x.cmp(y)), None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":92666,"byte_end":92730,"line_start":2737,"line_end":2737,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":92735,"byte_end":92738,"line_start":2738,"line_end":2738,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 0, 1, 5, -10];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":92743,"byte_end":92778,"line_start":2739,"line_end":2739,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(a.iter().position_max_by(|x, y| x.cmp(y)), Some(3));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":92783,"byte_end":92850,"line_start":2740,"line_end":2740,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":92855,"byte_end":92858,"line_start":2741,"line_end":2741,"column_start":5,"column_end":8}},{"value":"/ let a = [1_i32, 1, -1, -1];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":92863,"byte_end":92894,"line_start":2742,"line_end":2742,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(a.iter().position_max_by(|x, y| x.cmp(y)), Some(1));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":92899,"byte_end":92966,"line_start":2743,"line_end":2743,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":92971,"byte_end":92978,"line_start":2744,"line_end":2744,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2384},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":93791,"byte_end":93803,"line_start":2772,"line_end":2772,"column_start":8,"column_end":20},"name":"position_min","qualname":"::Itertools::position_min","value":"pub fn position_min(Self) -> Option<usize> where Self: Sized, Self::Item: Ord","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return the position of the minimum element in the iterator.","sig":null,"attributes":[{"value":"/ Return the position of the minimum element in the iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":93234,"byte_end":93297,"line_start":2753,"line_end":2753,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":93302,"byte_end":93305,"line_start":2754,"line_end":2754,"column_start":5,"column_end":8}},{"value":"/ If several elements are equally minimum, the position of the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":93310,"byte_end":93374,"line_start":2755,"line_end":2755,"column_start":5,"column_end":69}},{"value":"/ first of them is returned.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":93379,"byte_end":93409,"line_start":2756,"line_end":2756,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":93414,"byte_end":93417,"line_start":2757,"line_end":2757,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":93422,"byte_end":93436,"line_start":2758,"line_end":2758,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":93441,"byte_end":93444,"line_start":2759,"line_end":2759,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":93449,"byte_end":93456,"line_start":2760,"line_end":2760,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":93461,"byte_end":93490,"line_start":2761,"line_end":2761,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":93495,"byte_end":93498,"line_start":2762,"line_end":2762,"column_start":5,"column_end":8}},{"value":"/ let a: [i32; 0] = [];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":93503,"byte_end":93528,"line_start":2763,"line_end":2763,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.iter().position_min(), None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":93533,"byte_end":93579,"line_start":2764,"line_end":2764,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":93584,"byte_end":93587,"line_start":2765,"line_end":2765,"column_start":5,"column_end":8}},{"value":"/ let a = [-3, 0, 1, 5, -10];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":93592,"byte_end":93623,"line_start":2766,"line_end":2766,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(a.iter().position_min(), Some(4));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":93628,"byte_end":93677,"line_start":2767,"line_end":2767,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":93682,"byte_end":93685,"line_start":2768,"line_end":2768,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 1, -1, -1];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":93690,"byte_end":93717,"line_start":2769,"line_end":2769,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(a.iter().position_min(), Some(2));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":93722,"byte_end":93771,"line_start":2770,"line_end":2770,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":93776,"byte_end":93783,"line_start":2771,"line_end":2771,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2387},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":94655,"byte_end":94674,"line_start":2800,"line_end":2800,"column_start":8,"column_end":27},"name":"position_min_by_key","qualname":"::Itertools::position_min_by_key","value":"pub fn position_min_by_key<K, F>(Self, F) -> Option<usize> where Self: Sized,\nK: Ord, F: FnMut(&Self::Item) -> K","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return the position of the minimum element in the iterator, as\n determined by the specified function.","sig":null,"attributes":[{"value":"/ Return the position of the minimum element in the iterator, as","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":93987,"byte_end":94053,"line_start":2780,"line_end":2780,"column_start":5,"column_end":71}},{"value":"/ determined by the specified function.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":94058,"byte_end":94099,"line_start":2781,"line_end":2781,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":94104,"byte_end":94107,"line_start":2782,"line_end":2782,"column_start":5,"column_end":8}},{"value":"/ If several elements are equally minimum, the position of the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":94112,"byte_end":94176,"line_start":2783,"line_end":2783,"column_start":5,"column_end":69}},{"value":"/ first of them is returned.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":94181,"byte_end":94211,"line_start":2784,"line_end":2784,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":94216,"byte_end":94219,"line_start":2785,"line_end":2785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":94224,"byte_end":94238,"line_start":2786,"line_end":2786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":94243,"byte_end":94246,"line_start":2787,"line_end":2787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":94251,"byte_end":94258,"line_start":2788,"line_end":2788,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":94263,"byte_end":94292,"line_start":2789,"line_end":2789,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":94297,"byte_end":94300,"line_start":2790,"line_end":2790,"column_start":5,"column_end":8}},{"value":"/ let a: [i32; 0] = [];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":94305,"byte_end":94330,"line_start":2791,"line_end":2791,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.iter().position_min_by_key(|x| x.abs()), None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":94335,"byte_end":94399,"line_start":2792,"line_end":2792,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":94404,"byte_end":94407,"line_start":2793,"line_end":2793,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 0, 1, 5, -10];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":94412,"byte_end":94447,"line_start":2794,"line_end":2794,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(a.iter().position_min_by_key(|x| x.abs()), Some(1));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":94452,"byte_end":94519,"line_start":2795,"line_end":2795,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":94524,"byte_end":94527,"line_start":2796,"line_end":2796,"column_start":5,"column_end":8}},{"value":"/ let a = [1_i32, 1, -1, -1];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":94532,"byte_end":94563,"line_start":2797,"line_end":2797,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(a.iter().position_min_by_key(|x| x.abs()), Some(0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":94568,"byte_end":94635,"line_start":2798,"line_end":2798,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":94640,"byte_end":94647,"line_start":2799,"line_end":2799,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2392},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":95586,"byte_end":95601,"line_start":2828,"line_end":2828,"column_start":8,"column_end":23},"name":"position_min_by","qualname":"::Itertools::position_min_by","value":"pub fn position_min_by<F>(Self, F) -> Option<usize> where Self: Sized,\nF: FnMut(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return the position of the minimum element in the iterator, as\n determined by the specified comparison function.","sig":null,"attributes":[{"value":"/ Return the position of the minimum element in the iterator, as","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":94907,"byte_end":94973,"line_start":2808,"line_end":2808,"column_start":5,"column_end":71}},{"value":"/ determined by the specified comparison function.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":94978,"byte_end":95030,"line_start":2809,"line_end":2809,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":95035,"byte_end":95038,"line_start":2810,"line_end":2810,"column_start":5,"column_end":8}},{"value":"/ If several elements are equally minimum, the position of the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":95043,"byte_end":95107,"line_start":2811,"line_end":2811,"column_start":5,"column_end":69}},{"value":"/ first of them is returned.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":95112,"byte_end":95142,"line_start":2812,"line_end":2812,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":95147,"byte_end":95150,"line_start":2813,"line_end":2813,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":95155,"byte_end":95169,"line_start":2814,"line_end":2814,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":95174,"byte_end":95177,"line_start":2815,"line_end":2815,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":95182,"byte_end":95189,"line_start":2816,"line_end":2816,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":95194,"byte_end":95223,"line_start":2817,"line_end":2817,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":95228,"byte_end":95231,"line_start":2818,"line_end":2818,"column_start":5,"column_end":8}},{"value":"/ let a: [i32; 0] = [];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":95236,"byte_end":95261,"line_start":2819,"line_end":2819,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.iter().position_min_by(|x, y| x.cmp(y)), None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":95266,"byte_end":95330,"line_start":2820,"line_end":2820,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":95335,"byte_end":95338,"line_start":2821,"line_end":2821,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 0, 1, 5, -10];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":95343,"byte_end":95378,"line_start":2822,"line_end":2822,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(a.iter().position_min_by(|x, y| x.cmp(y)), Some(4));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":95383,"byte_end":95450,"line_start":2823,"line_end":2823,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":95455,"byte_end":95458,"line_start":2824,"line_end":2824,"column_start":5,"column_end":8}},{"value":"/ let a = [1_i32, 1, -1, -1];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":95463,"byte_end":95494,"line_start":2825,"line_end":2825,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(a.iter().position_min_by(|x, y| x.cmp(y)), Some(2));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":95499,"byte_end":95566,"line_start":2826,"line_end":2826,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":95571,"byte_end":95578,"line_start":2827,"line_end":2827,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2396},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":97559,"byte_end":97574,"line_start":2880,"line_end":2880,"column_start":8,"column_end":23},"name":"position_minmax","qualname":"::Itertools::position_minmax","value":"pub fn position_minmax(Self) -> MinMaxResult<usize> where Self: Sized,\nSelf::Item: PartialOrd","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return the positions of the minimum and maximum elements in\n the iterator.","sig":null,"attributes":[{"value":"/ Return the positions of the minimum and maximum elements in","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":95834,"byte_end":95897,"line_start":2836,"line_end":2836,"column_start":5,"column_end":68}},{"value":"/ the iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":95902,"byte_end":95919,"line_start":2837,"line_end":2837,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":95924,"byte_end":95927,"line_start":2838,"line_end":2838,"column_start":5,"column_end":8}},{"value":"/ The return type [`MinMaxResult`] is an enum of three variants:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":95932,"byte_end":95998,"line_start":2839,"line_end":2839,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":96003,"byte_end":96006,"line_start":2840,"line_end":2840,"column_start":5,"column_end":8}},{"value":"/ - `NoElements` if the iterator is empty.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":96011,"byte_end":96055,"line_start":2841,"line_end":2841,"column_start":5,"column_end":49}},{"value":"/ - `OneElement(xpos)` if the iterator has exactly one element.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":96060,"byte_end":96125,"line_start":2842,"line_end":2842,"column_start":5,"column_end":70}},{"value":"/ - `MinMax(xpos, ypos)` is returned otherwise, where the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":96130,"byte_end":96189,"line_start":2843,"line_end":2843,"column_start":5,"column_end":64}},{"value":"/    element at `xpos` ≤ the element at `ypos`. While the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":96194,"byte_end":96255,"line_start":2844,"line_end":2844,"column_start":5,"column_end":64}},{"value":"/    referenced elements themselves may be equal, `xpos` cannot","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":96260,"byte_end":96325,"line_start":2845,"line_end":2845,"column_start":5,"column_end":70}},{"value":"/    be equal to `ypos`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":96330,"byte_end":96356,"line_start":2846,"line_end":2846,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":96361,"byte_end":96364,"line_start":2847,"line_end":2847,"column_start":5,"column_end":8}},{"value":"/ On an iterator of length `n`, `position_minmax` does `1.5 * n`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":96369,"byte_end":96435,"line_start":2848,"line_end":2848,"column_start":5,"column_end":71}},{"value":"/ comparisons, and so is faster than calling `positon_min` and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":96440,"byte_end":96504,"line_start":2849,"line_end":2849,"column_start":5,"column_end":69}},{"value":"/ `position_max` separately which does `2 * n` comparisons.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":96509,"byte_end":96570,"line_start":2850,"line_end":2850,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":96575,"byte_end":96578,"line_start":2851,"line_end":2851,"column_start":5,"column_end":8}},{"value":"/ For the minimum, if several elements are equally minimum, the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":96583,"byte_end":96648,"line_start":2852,"line_end":2852,"column_start":5,"column_end":70}},{"value":"/ position of the first of them is returned. For the maximum, if","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":96653,"byte_end":96719,"line_start":2853,"line_end":2853,"column_start":5,"column_end":71}},{"value":"/ several elements are equally maximum, the position of the last","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":96724,"byte_end":96790,"line_start":2854,"line_end":2854,"column_start":5,"column_end":71}},{"value":"/ of them is returned.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":96795,"byte_end":96819,"line_start":2855,"line_end":2855,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":96824,"byte_end":96827,"line_start":2856,"line_end":2856,"column_start":5,"column_end":8}},{"value":"/ The elements can be floats but no particular result is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":96832,"byte_end":96890,"line_start":2857,"line_end":2857,"column_start":5,"column_end":63}},{"value":"/ guaranteed if an element is NaN.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":96895,"byte_end":96931,"line_start":2858,"line_end":2858,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":96936,"byte_end":96939,"line_start":2859,"line_end":2859,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":96944,"byte_end":96958,"line_start":2860,"line_end":2860,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":96963,"byte_end":96966,"line_start":2861,"line_end":2861,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":96971,"byte_end":96978,"line_start":2862,"line_end":2862,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":96983,"byte_end":97012,"line_start":2863,"line_end":2863,"column_start":5,"column_end":34}},{"value":"/ use itertools::MinMaxResult::{NoElements, OneElement, MinMax};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":97017,"byte_end":97083,"line_start":2864,"line_end":2864,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":97088,"byte_end":97091,"line_start":2865,"line_end":2865,"column_start":5,"column_end":8}},{"value":"/ let a: [i32; 0] = [];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":97096,"byte_end":97121,"line_start":2866,"line_end":2866,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.iter().position_minmax(), NoElements);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":97126,"byte_end":97181,"line_start":2867,"line_end":2867,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":97186,"byte_end":97189,"line_start":2868,"line_end":2868,"column_start":5,"column_end":8}},{"value":"/ let a = [10];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":97194,"byte_end":97211,"line_start":2869,"line_end":2869,"column_start":5,"column_end":22}},{"value":"/ assert_eq!(a.iter().position_minmax(), OneElement(0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":97216,"byte_end":97274,"line_start":2870,"line_end":2870,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":97279,"byte_end":97282,"line_start":2871,"line_end":2871,"column_start":5,"column_end":8}},{"value":"/ let a = [-3, 0, 1, 5, -10];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":97287,"byte_end":97318,"line_start":2872,"line_end":2872,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(a.iter().position_minmax(), MinMax(4, 3));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":97323,"byte_end":97380,"line_start":2873,"line_end":2873,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":97385,"byte_end":97388,"line_start":2874,"line_end":2874,"column_start":5,"column_end":8}},{"value":"/ let a = [1, 1, -1, -1];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":97393,"byte_end":97420,"line_start":2875,"line_end":2875,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(a.iter().position_minmax(), MinMax(2, 1));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":97425,"byte_end":97482,"line_start":2876,"line_end":2876,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":97487,"byte_end":97494,"line_start":2877,"line_end":2877,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":97499,"byte_end":97502,"line_start":2878,"line_end":2878,"column_start":5,"column_end":8}},{"value":"/ [`MinMaxResult`]: enum.MinMaxResult.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":97507,"byte_end":97551,"line_start":2879,"line_end":2879,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2409},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":99309,"byte_end":99331,"line_start":2926,"line_end":2926,"column_start":8,"column_end":30},"name":"position_minmax_by_key","qualname":"::Itertools::position_minmax_by_key","value":"pub fn position_minmax_by_key<K, F>(Self, F) -> MinMaxResult<usize> where\nSelf: Sized, K: PartialOrd, F: FnMut(&Self::Item) -> K","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return the postions of the minimum and maximum elements of an\n iterator, as determined by the specified function.","sig":null,"attributes":[{"value":"/ Return the postions of the minimum and maximum elements of an","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":97964,"byte_end":98029,"line_start":2891,"line_end":2891,"column_start":5,"column_end":70}},{"value":"/ iterator, as determined by the specified function.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":98034,"byte_end":98088,"line_start":2892,"line_end":2892,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":98093,"byte_end":98096,"line_start":2893,"line_end":2893,"column_start":5,"column_end":8}},{"value":"/ The return value is a variant of [`MinMaxResult`] like for","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":98101,"byte_end":98163,"line_start":2894,"line_end":2894,"column_start":5,"column_end":67}},{"value":"/ [`position_minmax`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":98168,"byte_end":98192,"line_start":2895,"line_end":2895,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":98197,"byte_end":98200,"line_start":2896,"line_end":2896,"column_start":5,"column_end":8}},{"value":"/ For the minimum, if several elements are equally minimum, the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":98205,"byte_end":98270,"line_start":2897,"line_end":2897,"column_start":5,"column_end":70}},{"value":"/ position of the first of them is returned. For the maximum, if","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":98275,"byte_end":98341,"line_start":2898,"line_end":2898,"column_start":5,"column_end":71}},{"value":"/ several elements are equally maximum, the position of the last","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":98346,"byte_end":98412,"line_start":2899,"line_end":2899,"column_start":5,"column_end":71}},{"value":"/ of them is returned.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":98417,"byte_end":98441,"line_start":2900,"line_end":2900,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":98446,"byte_end":98449,"line_start":2901,"line_end":2901,"column_start":5,"column_end":8}},{"value":"/ The keys can be floats but no particular result is guaranteed","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":98454,"byte_end":98519,"line_start":2902,"line_end":2902,"column_start":5,"column_end":70}},{"value":"/ if a key is NaN.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":98524,"byte_end":98544,"line_start":2903,"line_end":2903,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":98549,"byte_end":98552,"line_start":2904,"line_end":2904,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":98557,"byte_end":98571,"line_start":2905,"line_end":2905,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":98576,"byte_end":98579,"line_start":2906,"line_end":2906,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":98584,"byte_end":98591,"line_start":2907,"line_end":2907,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":98596,"byte_end":98625,"line_start":2908,"line_end":2908,"column_start":5,"column_end":34}},{"value":"/ use itertools::MinMaxResult::{NoElements, OneElement, MinMax};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":98630,"byte_end":98696,"line_start":2909,"line_end":2909,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":98701,"byte_end":98704,"line_start":2910,"line_end":2910,"column_start":5,"column_end":8}},{"value":"/ let a: [i32; 0] = [];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":98709,"byte_end":98734,"line_start":2911,"line_end":2911,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.iter().position_minmax_by_key(|x| x.abs()), NoElements);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":98739,"byte_end":98812,"line_start":2912,"line_end":2912,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":98817,"byte_end":98820,"line_start":2913,"line_end":2913,"column_start":5,"column_end":8}},{"value":"/ let a = [10_i32];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":98825,"byte_end":98846,"line_start":2914,"line_end":2914,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(a.iter().position_minmax_by_key(|x| x.abs()), OneElement(0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":98851,"byte_end":98927,"line_start":2915,"line_end":2915,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":98932,"byte_end":98935,"line_start":2916,"line_end":2916,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 0, 1, 5, -10];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":98940,"byte_end":98975,"line_start":2917,"line_end":2917,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(a.iter().position_minmax_by_key(|x| x.abs()), MinMax(1, 4));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":98980,"byte_end":99055,"line_start":2918,"line_end":2918,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":99060,"byte_end":99063,"line_start":2919,"line_end":2919,"column_start":5,"column_end":8}},{"value":"/ let a = [1_i32, 1, -1, -1];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":99068,"byte_end":99099,"line_start":2920,"line_end":2920,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(a.iter().position_minmax_by_key(|x| x.abs()), MinMax(0, 3));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":99104,"byte_end":99179,"line_start":2921,"line_end":2921,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":99184,"byte_end":99191,"line_start":2922,"line_end":2922,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":99196,"byte_end":99199,"line_start":2923,"line_end":2923,"column_start":5,"column_end":8}},{"value":"/ [`MinMaxResult`]: enum.MinMaxResult.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":99204,"byte_end":99248,"line_start":2924,"line_end":2924,"column_start":5,"column_end":49}},{"value":"/ [`position_minmax`]: #method.position_minmax","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":99253,"byte_end":99301,"line_start":2925,"line_end":2925,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2423},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":100987,"byte_end":101005,"line_start":2969,"line_end":2969,"column_start":8,"column_end":26},"name":"position_minmax_by","qualname":"::Itertools::position_minmax_by","value":"pub fn position_minmax_by<F>(Self, F) -> MinMaxResult<usize> where\nSelf: Sized, F: FnMut(&Self::Item, &Self::Item) -> Ordering","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Return the postions of the minimum and maximum elements of an\n iterator, as determined by the specified comparison function.","sig":null,"attributes":[{"value":"/ Return the postions of the minimum and maximum elements of an","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":99734,"byte_end":99799,"line_start":2937,"line_end":2937,"column_start":5,"column_end":70}},{"value":"/ iterator, as determined by the specified comparison function.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":99804,"byte_end":99869,"line_start":2938,"line_end":2938,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":99874,"byte_end":99877,"line_start":2939,"line_end":2939,"column_start":5,"column_end":8}},{"value":"/ The return value is a variant of [`MinMaxResult`] like for","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":99882,"byte_end":99944,"line_start":2940,"line_end":2940,"column_start":5,"column_end":67}},{"value":"/ [`position_minmax`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":99949,"byte_end":99973,"line_start":2941,"line_end":2941,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":99978,"byte_end":99981,"line_start":2942,"line_end":2942,"column_start":5,"column_end":8}},{"value":"/ For the minimum, if several elements are equally minimum, the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":99986,"byte_end":100051,"line_start":2943,"line_end":2943,"column_start":5,"column_end":70}},{"value":"/ position of the first of them is returned. For the maximum, if","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":100056,"byte_end":100122,"line_start":2944,"line_end":2944,"column_start":5,"column_end":71}},{"value":"/ several elements are equally maximum, the position of the last","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":100127,"byte_end":100193,"line_start":2945,"line_end":2945,"column_start":5,"column_end":71}},{"value":"/ of them is returned.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":100198,"byte_end":100222,"line_start":2946,"line_end":2946,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":100227,"byte_end":100230,"line_start":2947,"line_end":2947,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":100235,"byte_end":100249,"line_start":2948,"line_end":2948,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":100254,"byte_end":100257,"line_start":2949,"line_end":2949,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":100262,"byte_end":100269,"line_start":2950,"line_end":2950,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":100274,"byte_end":100303,"line_start":2951,"line_end":2951,"column_start":5,"column_end":34}},{"value":"/ use itertools::MinMaxResult::{NoElements, OneElement, MinMax};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":100308,"byte_end":100374,"line_start":2952,"line_end":2952,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":100379,"byte_end":100382,"line_start":2953,"line_end":2953,"column_start":5,"column_end":8}},{"value":"/ let a: [i32; 0] = [];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":100387,"byte_end":100412,"line_start":2954,"line_end":2954,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(a.iter().position_minmax_by(|x, y| x.cmp(y)), NoElements);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":100417,"byte_end":100490,"line_start":2955,"line_end":2955,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":100495,"byte_end":100498,"line_start":2956,"line_end":2956,"column_start":5,"column_end":8}},{"value":"/ let a = [10_i32];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":100503,"byte_end":100524,"line_start":2957,"line_end":2957,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(a.iter().position_minmax_by(|x, y| x.cmp(y)), OneElement(0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":100529,"byte_end":100605,"line_start":2958,"line_end":2958,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":100610,"byte_end":100613,"line_start":2959,"line_end":2959,"column_start":5,"column_end":8}},{"value":"/ let a = [-3_i32, 0, 1, 5, -10];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":100618,"byte_end":100653,"line_start":2960,"line_end":2960,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(a.iter().position_minmax_by(|x, y| x.cmp(y)), MinMax(4, 3));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":100658,"byte_end":100733,"line_start":2961,"line_end":2961,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":100738,"byte_end":100741,"line_start":2962,"line_end":2962,"column_start":5,"column_end":8}},{"value":"/ let a = [1_i32, 1, -1, -1];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":100746,"byte_end":100777,"line_start":2963,"line_end":2963,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(a.iter().position_minmax_by(|x, y| x.cmp(y)), MinMax(2, 1));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":100782,"byte_end":100857,"line_start":2964,"line_end":2964,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":100862,"byte_end":100869,"line_start":2965,"line_end":2965,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":100874,"byte_end":100877,"line_start":2966,"line_end":2966,"column_start":5,"column_end":8}},{"value":"/ [`MinMaxResult`]: enum.MinMaxResult.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":100882,"byte_end":100926,"line_start":2967,"line_end":2967,"column_start":5,"column_end":49}},{"value":"/ [`position_minmax`]: #method.position_minmax","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":100931,"byte_end":100979,"line_start":2968,"line_end":2968,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2436},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":102343,"byte_end":102354,"line_start":2997,"line_end":2997,"column_start":8,"column_end":19},"name":"exactly_one","qualname":"::Itertools::exactly_one","value":"pub fn exactly_one(Self) -> Result<Self::Item, ExactlyOneError<Self>> where\nSelf: Sized","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" If the iterator yields exactly one element, that element will be returned, otherwise\n an error will be returned containing an iterator that has the same output as the input\n iterator.","sig":null,"attributes":[{"value":"/ If the iterator yields exactly one element, that element will be returned, otherwise","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":101423,"byte_end":101511,"line_start":2980,"line_end":2980,"column_start":5,"column_end":93}},{"value":"/ an error will be returned containing an iterator that has the same output as the input","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":101516,"byte_end":101606,"line_start":2981,"line_end":2981,"column_start":5,"column_end":95}},{"value":"/ iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":101611,"byte_end":101624,"line_start":2982,"line_end":2982,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":101629,"byte_end":101632,"line_start":2983,"line_end":2983,"column_start":5,"column_end":8}},{"value":"/ This provides an additional layer of validation over just calling `Iterator::next()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":101637,"byte_end":101726,"line_start":2984,"line_end":2984,"column_start":5,"column_end":94}},{"value":"/ If your assumption that there should only be one element yielded is false this provides","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":101731,"byte_end":101822,"line_start":2985,"line_end":2985,"column_start":5,"column_end":96}},{"value":"/ the opportunity to detect and handle that, preventing errors at a distance.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":101827,"byte_end":101906,"line_start":2986,"line_end":2986,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":101911,"byte_end":101914,"line_start":2987,"line_end":2987,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":101919,"byte_end":101933,"line_start":2988,"line_end":2988,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":101938,"byte_end":101945,"line_start":2989,"line_end":2989,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":101950,"byte_end":101979,"line_start":2990,"line_end":2990,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":101984,"byte_end":101987,"line_start":2991,"line_end":2991,"column_start":5,"column_end":8}},{"value":"/ assert_eq!((0..10).filter(|&x| x == 2).exactly_one().unwrap(), 2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":101992,"byte_end":102062,"line_start":2992,"line_end":2992,"column_start":5,"column_end":75}},{"value":"/ assert!((0..10).filter(|&x| x > 1 && x < 4).exactly_one().unwrap_err().eq(2..4));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":102067,"byte_end":102152,"line_start":2993,"line_end":2993,"column_start":5,"column_end":90}},{"value":"/ assert!((0..10).filter(|&x| x > 1 && x < 5).exactly_one().unwrap_err().eq(2..5));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":102157,"byte_end":102242,"line_start":2994,"line_end":2994,"column_start":5,"column_end":90}},{"value":"/ assert!((0..10).filter(|&_| false).exactly_one().unwrap_err().eq(0..0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":102247,"byte_end":102323,"line_start":2995,"line_end":2995,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":102328,"byte_end":102335,"line_start":2996,"line_end":2996,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2437},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":103410,"byte_end":103419,"line_start":3031,"line_end":3031,"column_start":8,"column_end":17},"name":"multipeek","qualname":"::Itertools::multipeek","value":"pub fn multipeek(Self) -> MultiPeek<Self> where Self: Sized","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" An iterator adaptor that allows the user to peek at multiple `.next()`\n values without advancing the base iterator.","sig":null,"attributes":[{"value":"/ An iterator adaptor that allows the user to peek at multiple `.next()`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":102891,"byte_end":102965,"line_start":3016,"line_end":3016,"column_start":5,"column_end":79}},{"value":"/ values without advancing the base iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":102970,"byte_end":103017,"line_start":3017,"line_end":3017,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":103022,"byte_end":103025,"line_start":3018,"line_end":3018,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":103030,"byte_end":103044,"line_start":3019,"line_end":3019,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":103049,"byte_end":103056,"line_start":3020,"line_end":3020,"column_start":5,"column_end":12}},{"value":"/ use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":103061,"byte_end":103090,"line_start":3021,"line_end":3021,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":103095,"byte_end":103098,"line_start":3022,"line_end":3022,"column_start":5,"column_end":8}},{"value":"/ let mut iter = (0..10).multipeek();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":103103,"byte_end":103142,"line_start":3023,"line_end":3023,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(iter.peek(), Some(&0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":103147,"byte_end":103185,"line_start":3024,"line_end":3024,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(iter.peek(), Some(&1));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":103190,"byte_end":103228,"line_start":3025,"line_end":3025,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(iter.peek(), Some(&2));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":103233,"byte_end":103271,"line_start":3026,"line_end":3026,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(iter.next(), Some(0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":103276,"byte_end":103313,"line_start":3027,"line_end":3027,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(iter.peek(), Some(&1));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":103318,"byte_end":103356,"line_start":3028,"line_end":3028,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":103361,"byte_end":103368,"line_start":3029,"line_end":3029,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_alloc\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":103373,"byte_end":103402,"line_start":3030,"line_end":3030,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2438},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":104036,"byte_end":104042,"line_start":3052,"line_end":3052,"column_start":8,"column_end":14},"name":"counts","qualname":"::Itertools::counts","value":"pub fn counts(Self) -> HashMap<Self::Item, usize> where Self: Sized,\nSelf::Item: Eq + Hash","parent":{"krate":0,"index":2161},"children":[],"decl_id":null,"docs":" Collect the items in this iterator and return a `HashMap` which\n contains each item that appears in the iterator and the number\n of times it appears.","sig":null,"attributes":[{"value":"/ Collect the items in this iterator and return a `HashMap` which","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":103533,"byte_end":103600,"line_start":3038,"line_end":3038,"column_start":5,"column_end":72}},{"value":"/ contains each item that appears in the iterator and the number","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":103605,"byte_end":103671,"line_start":3039,"line_end":3039,"column_start":5,"column_end":71}},{"value":"/ of times it appears.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":103676,"byte_end":103700,"line_start":3040,"line_end":3040,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":103705,"byte_end":103708,"line_start":3041,"line_end":3041,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":103713,"byte_end":103727,"line_start":3042,"line_end":3042,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":103732,"byte_end":103739,"line_start":3043,"line_end":3043,"column_start":5,"column_end":12}},{"value":"/ # use itertools::Itertools;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":103744,"byte_end":103775,"line_start":3044,"line_end":3044,"column_start":5,"column_end":36}},{"value":"/ let counts = [1, 1, 1, 3, 3, 5].into_iter().counts();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":103780,"byte_end":103837,"line_start":3045,"line_end":3045,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(counts[&1], 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":103842,"byte_end":103872,"line_start":3046,"line_end":3046,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(counts[&3], 2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":103877,"byte_end":103907,"line_start":3047,"line_end":3047,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(counts[&5], 1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":103912,"byte_end":103942,"line_start":3048,"line_end":3048,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(counts.get(&0), None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":103947,"byte_end":103984,"line_start":3049,"line_end":3049,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":103989,"byte_end":103996,"line_start":3050,"line_end":3050,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"use_std\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":104001,"byte_end":104028,"line_start":3051,"line_end":3051,"column_start":5,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":2442},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":104733,"byte_end":104738,"line_start":3076,"line_end":3076,"column_start":8,"column_end":13},"name":"equal","qualname":"::equal","value":"pub fn equal<I, J>(I, J) -> bool where I: IntoIterator, J: IntoIterator,\nI::Item: PartialEq<J::Item>","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if both iterables produce equal sequences\n (elements pairwise equal and sequences of the same length),\n `false` otherwise.","sig":null,"attributes":[{"value":"/ Return `true` if both iterables produce equal sequences","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":104336,"byte_end":104395,"line_start":3065,"line_end":3065,"column_start":1,"column_end":60}},{"value":"/ (elements pairwise equal and sequences of the same length),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":104396,"byte_end":104459,"line_start":3066,"line_end":3066,"column_start":1,"column_end":64}},{"value":"/ `false` otherwise.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":104460,"byte_end":104482,"line_start":3067,"line_end":3067,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":104483,"byte_end":104486,"line_start":3068,"line_end":3068,"column_start":1,"column_end":4}},{"value":"/ This is an `IntoIterator` enabled function that is similar to the standard","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":104487,"byte_end":104565,"line_start":3069,"line_end":3069,"column_start":1,"column_end":79}},{"value":"/ library method `Iterator::eq`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":104566,"byte_end":104600,"line_start":3070,"line_end":3070,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":104601,"byte_end":104604,"line_start":3071,"line_end":3071,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":104605,"byte_end":104612,"line_start":3072,"line_end":3072,"column_start":1,"column_end":8}},{"value":"/ assert!(itertools::equal(vec![1, 2, 3], 1..4));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":104613,"byte_end":104664,"line_start":3073,"line_end":3073,"column_start":1,"column_end":52}},{"value":"/ assert!(!itertools::equal(&[0, 0], &[0, 0, 0]));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":104665,"byte_end":104717,"line_start":3074,"line_end":3074,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":104718,"byte_end":104725,"line_start":3075,"line_end":3075,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2445},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":105558,"byte_end":105570,"line_start":3104,"line_end":3104,"column_start":8,"column_end":20},"name":"assert_equal","qualname":"::assert_equal","value":"pub fn assert_equal<I, J>(I, J) where I: IntoIterator, J: IntoIterator,\nI::Item: fmt::Debug + PartialEq<J::Item>, J::Item: fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":" Assert that two iterables produce equal sequences, with the same\n semantics as *equal(a, b)*.","sig":null,"attributes":[{"value":"/ Assert that two iterables produce equal sequences, with the same","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":105176,"byte_end":105244,"line_start":3094,"line_end":3094,"column_start":1,"column_end":69}},{"value":"/ semantics as *equal(a, b)*.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":105245,"byte_end":105276,"line_start":3095,"line_end":3095,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":105277,"byte_end":105280,"line_start":3096,"line_end":3096,"column_start":1,"column_end":4}},{"value":"/ **Panics** on assertion failure with a message that shows the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":105281,"byte_end":105346,"line_start":3097,"line_end":3097,"column_start":1,"column_end":66}},{"value":"/ two iteration elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":105347,"byte_end":105374,"line_start":3098,"line_end":3098,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":105375,"byte_end":105378,"line_start":3099,"line_end":3099,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":105379,"byte_end":105392,"line_start":3100,"line_end":3100,"column_start":1,"column_end":14}},{"value":"/ assert_equal(\"exceed\".split('c'), \"excess\".split('c'));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":105393,"byte_end":105452,"line_start":3101,"line_end":3101,"column_start":1,"column_end":60}},{"value":"/ // ^PANIC: panicked at 'Failed assertion Some(\"eed\") == Some(\"ess\") for iteration 1',","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":105453,"byte_end":105542,"line_start":3102,"line_end":3102,"column_start":1,"column_end":90}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":105543,"byte_end":105550,"line_start":3103,"line_end":3103,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2448},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":106797,"byte_end":106806,"line_start":3146,"line_end":3146,"column_start":8,"column_end":17},"name":"partition","qualname":"::partition","value":"pub fn partition<'a, A: 'a, I, F>(I, F) -> usize where I: IntoIterator<Item =\n&'a mut A>, I::IntoIter: DoubleEndedIterator, F: FnMut(&A) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Partition a sequence using predicate `pred` so that elements\n that map to `true` are placed before elements which map to `false`.","sig":null,"attributes":[{"value":"/ Partition a sequence using predicate `pred` so that elements","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":106258,"byte_end":106322,"line_start":3129,"line_end":3129,"column_start":1,"column_end":65}},{"value":"/ that map to `true` are placed before elements which map to `false`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":106323,"byte_end":106394,"line_start":3130,"line_end":3130,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":106395,"byte_end":106398,"line_start":3131,"line_end":3131,"column_start":1,"column_end":4}},{"value":"/ The order within the partitions is arbitrary.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":106399,"byte_end":106448,"line_start":3132,"line_end":3132,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":106449,"byte_end":106452,"line_start":3133,"line_end":3133,"column_start":1,"column_end":4}},{"value":"/ Return the index of the split point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":106453,"byte_end":106493,"line_start":3134,"line_end":3134,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":106494,"byte_end":106497,"line_start":3135,"line_end":3135,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":106498,"byte_end":106505,"line_start":3136,"line_end":3136,"column_start":1,"column_end":8}},{"value":"/ use itertools::partition;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":106506,"byte_end":106535,"line_start":3137,"line_end":3137,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":106536,"byte_end":106539,"line_start":3138,"line_end":3138,"column_start":1,"column_end":4}},{"value":"/ # // use repeated numbers to not promise any ordering","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":106540,"byte_end":106597,"line_start":3139,"line_end":3139,"column_start":1,"column_end":58}},{"value":"/ let mut data = [7, 1, 1, 7, 1, 1, 7];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":106598,"byte_end":106639,"line_start":3140,"line_end":3140,"column_start":1,"column_end":42}},{"value":"/ let split_index = partition(&mut data, |elt| *elt >= 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":106640,"byte_end":106700,"line_start":3141,"line_end":3141,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":106701,"byte_end":106704,"line_start":3142,"line_end":3142,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(data, [7, 7, 7, 1, 1, 1, 1]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":106705,"byte_end":106749,"line_start":3143,"line_end":3143,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(split_index, 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":106750,"byte_end":106781,"line_start":3144,"line_end":3144,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":106782,"byte_end":106789,"line_start":3145,"line_end":3145,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4409},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":107742,"byte_end":107750,"line_start":3176,"line_end":3176,"column_start":5,"column_end":13},"name":"Continue","qualname":"::FoldWhile::Continue","value":"FoldWhile::Continue(T)","parent":{"krate":0,"index":4407},"children":[],"decl_id":null,"docs":" Continue folding with this value\n","sig":null,"attributes":[{"value":"/ Continue folding with this value","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":107701,"byte_end":107737,"line_start":3175,"line_end":3175,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4412},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":107811,"byte_end":107815,"line_start":3178,"line_end":3178,"column_start":5,"column_end":9},"name":"Done","qualname":"::FoldWhile::Done","value":"FoldWhile::Done(T)","parent":{"krate":0,"index":4407},"children":[],"decl_id":null,"docs":" Fold is complete and will return this value\n","sig":null,"attributes":[{"value":"/ Fold is complete and will return this value","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":107759,"byte_end":107806,"line_start":3177,"line_end":3177,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":4407},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":107682,"byte_end":107691,"line_start":3174,"line_end":3174,"column_start":10,"column_end":19},"name":"FoldWhile","qualname":"::FoldWhile","value":"pub enum FoldWhile<T> { Continue(T), Done(T), }","parent":null,"children":[{"krate":0,"index":4409},{"krate":0,"index":4412}],"decl_id":null,"docs":" An enum used for controlling the execution of `.fold_while()`.","sig":null,"attributes":[{"value":"/ An enum used for controlling the execution of `.fold_while()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":107469,"byte_end":107535,"line_start":3170,"line_end":3170,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":107536,"byte_end":107539,"line_start":3171,"line_end":3171,"column_start":1,"column_end":4}},{"value":"/ See [`.fold_while()`](trait.Itertools.html#method.fold_while) for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":107540,"byte_end":107627,"line_start":3172,"line_end":3172,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":2455},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":107907,"byte_end":107917,"line_start":3183,"line_end":3183,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FoldWhile<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Return the value in the continue or done.\n","sig":null,"attributes":[{"value":"/ Return the value in the continue or done.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":107850,"byte_end":107895,"line_start":3182,"line_end":3182,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2456},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":108110,"byte_end":108117,"line_start":3190,"line_end":3190,"column_start":12,"column_end":19},"name":"is_done","qualname":"<FoldWhile<T>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if `self` is `Done`, false if it is `Continue`.\n","sig":null,"attributes":[{"value":"/ Return true if `self` is `Done`, false if it is `Continue`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":108035,"byte_end":108098,"line_start":3189,"line_end":3189,"column_start":5,"column_end":68}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":139057,"byte_end":139067,"line_start":15,"line_end":15,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2457}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":139168,"byte_end":139178,"line_start":22,"line_end":22,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2458}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":139430,"byte_end":139440,"line_start":34,"line_end":34,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":140894,"byte_end":140904,"line_start":83,"line_end":83,"column_start":74,"column_end":84},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":141265,"byte_end":141266,"line_start":91,"line_end":91,"column_start":49,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":142284,"byte_end":142306,"line_start":126,"line_end":126,"column_start":41,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":142618,"byte_end":142625,"line_start":142,"line_end":142,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":142761,"byte_end":142762,"line_start":148,"line_end":148,"column_start":57,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":144090,"byte_end":144121,"line_start":191,"line_end":191,"column_start":50,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs","byte_start":145529,"byte_end":145543,"line_start":16,"line_end":16,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs","byte_start":146260,"byte_end":146274,"line_start":48,"line_end":48,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs","byte_start":146499,"byte_end":146513,"line_start":58,"line_end":58,"column_start":34,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs","byte_start":147016,"byte_end":147034,"line_start":74,"line_end":74,"column_start":53,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":447},{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs","byte_start":147758,"byte_end":147778,"line_start":104,"line_end":104,"column_start":45,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":462},{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs","byte_start":149632,"byte_end":149644,"line_start":52,"line_end":52,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs","byte_start":151735,"byte_end":151751,"line_start":119,"line_end":119,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs","byte_start":152399,"byte_end":152411,"line_start":148,"line_end":148,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":110406,"byte_end":110416,"line_start":52,"line_end":52,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":111830,"byte_end":111848,"line_start":108,"line_end":108,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":113839,"byte_end":113846,"line_start":182,"line_end":182,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":114465,"byte_end":114472,"line_start":207,"line_end":207,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":116861,"byte_end":116868,"line_start":301,"line_end":301,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":119294,"byte_end":119302,"line_start":377,"line_end":377,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2587}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":119521,"byte_end":119529,"line_start":386,"line_end":386,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":605},{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":120566,"byte_end":120570,"line_start":428,"line_end":428,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":121192,"byte_end":121196,"line_start":456,"line_end":456,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":121401,"byte_end":121409,"line_start":467,"line_end":467,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":122940,"byte_end":122947,"line_start":518,"line_end":518,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2602}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":123163,"byte_end":123164,"line_start":525,"line_end":525,"column_start":55,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":123635,"byte_end":123642,"line_start":545,"line_end":545,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2603}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":123862,"byte_end":123869,"line_start":555,"line_end":555,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":125287,"byte_end":125299,"line_start":601,"line_end":601,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2604}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":125627,"byte_end":125639,"line_start":614,"line_end":614,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":126711,"byte_end":126720,"line_start":655,"line_end":655,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":128024,"byte_end":128041,"line_start":705,"line_end":705,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":697},{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":128300,"byte_end":128317,"line_start":721,"line_end":721,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":128429,"byte_end":128446,"line_start":727,"line_end":727,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":132643,"byte_end":132651,"line_start":844,"line_end":844,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":134534,"byte_end":134545,"line_start":915,"line_end":915,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":136219,"byte_end":136228,"line_start":981,"line_end":981,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":136717,"byte_end":136726,"line_start":1003,"line_end":1003,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":137572,"byte_end":137578,"line_start":1036,"line_end":1036,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":138444,"byte_end":138450,"line_start":1072,"line_end":1072,"column_start":34,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":138556,"byte_end":138562,"line_start":1078,"line_end":1078,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":154782,"byte_end":154794,"line_start":16,"line_end":16,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":819},{"krate":0,"index":822},{"krate":0,"index":827},{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":159407,"byte_end":159419,"line_start":168,"line_end":168,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":159782,"byte_end":159794,"line_start":182,"line_end":182,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/cons_tuples_impl.rs","byte_start":168005,"byte_end":168015,"line_start":52,"line_end":52,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3312}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs","byte_start":168792,"byte_end":168804,"line_start":16,"line_end":16,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3313}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs","byte_start":168934,"byte_end":168946,"line_start":23,"line_end":23,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3314}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs","byte_start":169404,"byte_end":169416,"line_start":44,"line_end":44,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs","byte_start":170688,"byte_end":170700,"line_start":83,"line_end":83,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":972},{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations_with_replacement.rs","byte_start":172524,"byte_end":172551,"line_start":20,"line_end":20,"column_start":24,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3323}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations_with_replacement.rs","byte_start":172696,"byte_end":172723,"line_start":28,"line_end":28,"column_start":9,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":989}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations_with_replacement.rs","byte_start":173392,"byte_end":173419,"line_start":55,"line_end":55,"column_start":22,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":995},{"krate":0,"index":996}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs","byte_start":175768,"byte_end":175783,"line_start":28,"line_end":28,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1025},{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs","byte_start":176208,"byte_end":176223,"line_start":46,"line_end":46,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs","byte_start":176865,"byte_end":176880,"line_start":73,"line_end":73,"column_start":31,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs","byte_start":176935,"byte_end":176950,"line_start":75,"line_end":75,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1037}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs","byte_start":177314,"byte_end":177329,"line_start":88,"line_end":88,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs","byte_start":178003,"byte_end":178018,"line_start":108,"line_end":108,"column_start":19,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/format.rs","byte_start":182157,"byte_end":182167,"line_start":50,"line_end":50,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/format.rs","byte_start":182928,"byte_end":182934,"line_start":73,"line_end":73,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1094}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":184446,"byte_end":184460,"line_start":14,"line_end":14,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1124}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":184595,"byte_end":184609,"line_start":20,"line_end":20,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1130},{"krate":0,"index":1131}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":185735,"byte_end":185746,"line_start":56,"line_end":56,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1144},{"krate":0,"index":1147},{"krate":0,"index":1152},{"krate":0,"index":1155},{"krate":0,"index":1157},{"krate":0,"index":1159},{"krate":0,"index":1162},{"krate":0,"index":1166},{"krate":0,"index":1168},{"krate":0,"index":1171},{"krate":0,"index":1175},{"krate":0,"index":1177},{"krate":0,"index":1180},{"krate":0,"index":1184},{"krate":0,"index":1186}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":205430,"byte_end":205431,"line_start":10,"line_end":10,"column_start":46,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1233},{"krate":0,"index":1234}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":205736,"byte_end":205746,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1236}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":205936,"byte_end":205946,"line_start":40,"line_end":40,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1240},{"krate":0,"index":1241}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":206988,"byte_end":206998,"line_start":77,"line_end":77,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1270}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":213776,"byte_end":213786,"line_start":263,"line_end":263,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1275}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":215598,"byte_end":215605,"line_start":320,"line_end":320,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1290},{"krate":0,"index":1291}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":216812,"byte_end":216818,"line_start":366,"line_end":366,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1311},{"krate":0,"index":1312}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":217721,"byte_end":217726,"line_start":402,"line_end":402,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1327}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":217897,"byte_end":217902,"line_start":411,"line_end":411,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1333},{"krate":0,"index":1334}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":219734,"byte_end":219744,"line_start":475,"line_end":475,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1343},{"krate":0,"index":1344}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":220730,"byte_end":220736,"line_start":517,"line_end":517,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1358},{"krate":0,"index":1359}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":221488,"byte_end":221493,"line_start":550,"line_end":550,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1370}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":221652,"byte_end":221657,"line_start":559,"line_end":559,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1374},{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs","byte_start":222172,"byte_end":222196,"line_start":11,"line_end":11,"column_start":48,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":1388}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs","byte_start":222892,"byte_end":222893,"line_start":34,"line_end":34,"column_start":59,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1396}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs","byte_start":223800,"byte_end":223815,"line_start":70,"line_end":70,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":226157,"byte_end":226165,"line_start":23,"line_end":23,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1438},{"krate":0,"index":1440},{"krate":0,"index":1441}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":227061,"byte_end":227069,"line_start":54,"line_end":54,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3448}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":228787,"byte_end":228797,"line_start":112,"line_end":112,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1457}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":228932,"byte_end":228933,"line_start":118,"line_end":118,"column_start":56,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1461}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":230033,"byte_end":230041,"line_start":159,"line_end":159,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3453}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":230880,"byte_end":230888,"line_start":183,"line_end":183,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3454}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":231037,"byte_end":231045,"line_start":191,"line_end":191,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1483},{"krate":0,"index":1484},{"krate":0,"index":1486}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lazy_buffer.rs","byte_start":231947,"byte_end":231957,"line_start":11,"line_end":11,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1497},{"krate":0,"index":1498},{"krate":0,"index":1499},{"krate":0,"index":1500}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lazy_buffer.rs","byte_start":232906,"byte_end":232916,"line_start":56,"line_end":56,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1504},{"krate":0,"index":1505}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/merge_join.rs","byte_start":234264,"byte_end":234275,"line_start":34,"line_end":34,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3466}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/merge_join.rs","byte_start":234495,"byte_end":234506,"line_start":44,"line_end":44,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3467}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/merge_join.rs","byte_start":234731,"byte_end":234742,"line_start":53,"line_end":53,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1554}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs","byte_start":239410,"byte_end":239422,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1558}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs","byte_start":243467,"byte_end":243476,"line_start":28,"line_end":28,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1581}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs","byte_start":243629,"byte_end":243638,"line_start":37,"line_end":37,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1584}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs","byte_start":244282,"byte_end":244291,"line_start":59,"line_end":59,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1587}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs","byte_start":244758,"byte_end":244767,"line_start":78,"line_end":78,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1591},{"krate":0,"index":1592},{"krate":0,"index":1594}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs","byte_start":245130,"byte_end":245139,"line_start":94,"line_end":94,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/pad_tail.rs","byte_start":245958,"byte_end":245966,"line_start":32,"line_end":32,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1610},{"krate":0,"index":1611},{"krate":0,"index":1612}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/pad_tail.rs","byte_start":246732,"byte_end":246740,"line_start":63,"line_end":63,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1616}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/pad_tail.rs","byte_start":247200,"byte_end":247208,"line_start":80,"line_end":80,"column_start":34,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":248147,"byte_end":248154,"line_start":33,"line_end":33,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1637},{"krate":0,"index":1638}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":249340,"byte_end":249347,"line_start":74,"line_end":74,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1641},{"krate":0,"index":1642},{"krate":0,"index":1644}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":249674,"byte_end":249681,"line_start":89,"line_end":89,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":249740,"byte_end":249747,"line_start":91,"line_end":91,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1649}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs","byte_start":250809,"byte_end":250817,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1667}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs","byte_start":251137,"byte_end":251144,"line_start":37,"line_end":37,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1671}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs","byte_start":251563,"byte_end":251571,"line_start":56,"line_end":56,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1675}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs","byte_start":252517,"byte_end":252533,"line_start":96,"line_end":96,"column_start":29,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1690},{"krate":0,"index":1691},{"krate":0,"index":1692}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs","byte_start":254867,"byte_end":254879,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3570}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs","byte_start":255454,"byte_end":255466,"line_start":55,"line_end":55,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3597}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs","byte_start":256332,"byte_end":256344,"line_start":96,"line_end":96,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1725},{"krate":0,"index":1726},{"krate":0,"index":1729},{"krate":0,"index":1731}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs","byte_start":259017,"byte_end":259029,"line_start":170,"line_end":170,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1734}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs","byte_start":260241,"byte_end":260254,"line_start":208,"line_end":208,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1736},{"krate":0,"index":1737}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/powerset.rs","byte_start":263041,"byte_end":263049,"line_start":19,"line_end":19,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3598}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/powerset.rs","byte_start":263169,"byte_end":263177,"line_start":26,"line_end":26,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3599}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/powerset.rs","byte_start":263543,"byte_end":263551,"line_start":44,"line_end":44,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1783}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":265193,"byte_end":265207,"line_start":14,"line_end":14,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1792}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs","byte_start":267932,"byte_end":267940,"line_start":28,"line_end":28,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1811}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs","byte_start":268442,"byte_end":268450,"line_start":49,"line_end":49,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1814},{"krate":0,"index":1815},{"krate":0,"index":1817}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":270407,"byte_end":270413,"line_start":53,"line_end":53,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3627}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":270487,"byte_end":270493,"line_start":58,"line_end":58,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1835},{"krate":0,"index":1836},{"krate":0,"index":1837}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":271037,"byte_end":271043,"line_start":76,"line_end":76,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1840}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/repeatn.rs","byte_start":272022,"byte_end":272029,"line_start":23,"line_end":23,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1852},{"krate":0,"index":1853},{"krate":0,"index":1854}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/repeatn.rs","byte_start":272419,"byte_end":272426,"line_start":43,"line_end":43,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1857}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/repeatn.rs","byte_start":272576,"byte_end":272583,"line_start":52,"line_end":52,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":275958,"byte_end":275968,"line_start":15,"line_end":15,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3644}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":276809,"byte_end":276819,"line_start":49,"line_end":49,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1898},{"krate":0,"index":1899},{"krate":0,"index":1900}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":278480,"byte_end":278486,"line_start":109,"line_end":109,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3645}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":278873,"byte_end":278879,"line_start":124,"line_end":124,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1912},{"krate":0,"index":1913}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":279436,"byte_end":279443,"line_start":147,"line_end":147,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3664}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":279546,"byte_end":279553,"line_start":153,"line_end":153,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1920},{"krate":0,"index":1921},{"krate":0,"index":1922}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tee.rs","byte_start":281262,"byte_end":281265,"line_start":37,"line_end":37,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1943},{"krate":0,"index":1944},{"krate":0,"index":1945}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tee.rs","byte_start":282365,"byte_end":282368,"line_start":75,"line_end":75,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":282980,"byte_end":282981,"line_start":18,"line_end":18,"column_start":44,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":283295,"byte_end":283306,"line_start":32,"line_end":32,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1966}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":283478,"byte_end":283489,"line_start":43,"line_end":43,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1969},{"krate":0,"index":1970},{"krate":0,"index":1971}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":284167,"byte_end":284178,"line_start":71,"line_end":71,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":284856,"byte_end":284862,"line_start":100,"line_end":100,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1982},{"krate":0,"index":1983}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":285087,"byte_end":285093,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1987}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":286707,"byte_end":286719,"line_start":169,"line_end":169,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1997},{"krate":0,"index":1998}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":288231,"byte_end":288251,"line_start":220,"line_end":220,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2005},{"krate":0,"index":2006}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs","byte_start":291822,"byte_end":291830,"line_start":19,"line_end":19,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3915}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs","byte_start":292619,"byte_end":292627,"line_start":50,"line_end":50,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2050},{"krate":0,"index":2051},{"krate":0,"index":2052},{"krate":0,"index":2053}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs","byte_start":293364,"byte_end":293372,"line_start":79,"line_end":79,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2059}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs","byte_start":293768,"byte_end":293774,"line_start":95,"line_end":95,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2064},{"krate":0,"index":2065}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs","byte_start":294505,"byte_end":294511,"line_start":123,"line_end":123,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2068}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs","byte_start":295257,"byte_end":295263,"line_start":148,"line_end":148,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3922}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs","byte_start":296094,"byte_end":296106,"line_start":16,"line_end":16,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3923}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs","byte_start":296929,"byte_end":296937,"line_start":49,"line_end":49,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2091}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs","byte_start":297216,"byte_end":297228,"line_start":61,"line_end":61,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2094},{"krate":0,"index":2095},{"krate":0,"index":2096}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs","byte_start":298464,"byte_end":298476,"line_start":95,"line_end":95,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_eq_impl.rs","byte_start":299394,"byte_end":299399,"line_start":37,"line_end":37,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2109},{"krate":0,"index":2110},{"krate":0,"index":2111}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_eq_impl.rs","byte_start":299977,"byte_end":299982,"line_start":57,"line_end":57,"column_start":34,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_longest.rs","byte_start":300911,"byte_end":300921,"line_start":33,"line_end":33,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2141},{"krate":0,"index":2142},{"krate":0,"index":2143}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_longest.rs","byte_start":301543,"byte_end":301553,"line_start":55,"line_end":55,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2147}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_longest.rs","byte_start":302374,"byte_end":302384,"line_start":75,"line_end":75,"column_start":34,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":104311,"byte_end":104312,"line_start":3063,"line_end":3063,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":107831,"byte_end":107840,"line_start":3181,"line_end":3181,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2455},{"krate":0,"index":2456}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":5432,"byte_end":5436,"line_start":183,"line_end":183,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":844}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":139057,"byte_end":139067,"line_start":15,"line_end":15,"column_start":46,"column_end":56},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":319},"to":{"krate":2,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":139168,"byte_end":139178,"line_start":22,"line_end":22,"column_start":30,"column_end":40},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":319},"to":{"krate":2,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":139430,"byte_end":139440,"line_start":34,"line_end":34,"column_start":28,"column_end":38},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":319},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":140894,"byte_end":140904,"line_start":83,"line_end":83,"column_start":74,"column_end":84},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":319},"to":{"krate":2,"index":7520}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":141265,"byte_end":141266,"line_start":91,"line_end":91,"column_start":49,"column_end":50},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":357},"to":{"krate":0,"index":334}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":142284,"byte_end":142306,"line_start":126,"line_end":126,"column_start":41,"column_end":63},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2459},"to":{"krate":0,"index":334}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":142618,"byte_end":142625,"line_start":142,"line_end":142,"column_start":42,"column_end":49},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2466},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":142761,"byte_end":142762,"line_start":148,"line_end":148,"column_start":57,"column_end":58},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":379},"to":{"krate":0,"index":367}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/coalesce.rs","byte_start":144090,"byte_end":144121,"line_start":191,"line_end":191,"column_start":50,"column_end":81},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2470},"to":{"krate":0,"index":334}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs","byte_start":145529,"byte_end":145543,"line_start":16,"line_end":16,"column_start":25,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2477},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs","byte_start":146260,"byte_end":146274,"line_start":48,"line_end":48,"column_start":36,"column_end":50},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2477},"to":{"krate":2,"index":7113}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs","byte_start":146499,"byte_end":146513,"line_start":58,"line_end":58,"column_start":34,"column_end":48},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2477},"to":{"krate":2,"index":7138}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs","byte_start":147016,"byte_end":147034,"line_start":74,"line_end":74,"column_start":53,"column_end":71},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2486},"to":{"krate":0,"index":410}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/map.rs","byte_start":147758,"byte_end":147778,"line_start":104,"line_end":104,"column_start":45,"column_end":65},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2493},"to":{"krate":0,"index":410}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs","byte_start":149632,"byte_end":149644,"line_start":52,"line_end":52,"column_start":9,"column_end":21},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs","byte_start":151735,"byte_end":151751,"line_start":119,"line_end":119,"column_start":9,"column_end":25},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/multi_product.rs","byte_start":152399,"byte_end":152411,"line_start":148,"line_end":148,"column_start":22,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2500},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":110406,"byte_end":110416,"line_start":52,"line_end":52,"column_start":25,"column_end":35},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2525},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":111830,"byte_end":111848,"line_start":108,"line_end":108,"column_start":25,"column_end":43},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2539},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":113839,"byte_end":113846,"line_start":182,"line_end":182,"column_start":9,"column_end":16},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2553},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":114465,"byte_end":114472,"line_start":207,"line_end":207,"column_start":22,"column_end":29},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2553},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":116861,"byte_end":116868,"line_start":301,"line_end":301,"column_start":25,"column_end":32},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2563},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":119294,"byte_end":119302,"line_start":377,"line_end":377,"column_start":27,"column_end":35},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":119521,"byte_end":119529,"line_start":386,"line_end":386,"column_start":28,"column_end":36},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":120566,"byte_end":120570,"line_start":428,"line_end":428,"column_start":22,"column_end":26},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":2588},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":121192,"byte_end":121196,"line_start":456,"line_end":456,"column_start":31,"column_end":35},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2588},"to":{"krate":2,"index":7138}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":121401,"byte_end":121409,"line_start":467,"line_end":467,"column_start":43,"column_end":51},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2598},"to":{"krate":0,"index":617}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":122940,"byte_end":122947,"line_start":518,"line_end":518,"column_start":30,"column_end":37},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":629},"to":{"krate":2,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":123163,"byte_end":123164,"line_start":525,"line_end":525,"column_start":55,"column_end":56},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":643},"to":{"krate":0,"index":617}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":123635,"byte_end":123642,"line_start":545,"line_end":545,"column_start":25,"column_end":32},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":629},"to":{"krate":2,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":123862,"byte_end":123869,"line_start":555,"line_end":555,"column_start":28,"column_end":35},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":629},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":125287,"byte_end":125299,"line_start":601,"line_end":601,"column_start":31,"column_end":43},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":660},"to":{"krate":2,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":125627,"byte_end":125639,"line_start":614,"line_end":614,"column_start":29,"column_end":41},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":660},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":126711,"byte_end":126720,"line_start":655,"line_end":655,"column_start":25,"column_end":34},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2605},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":127585,"byte_end":127590,"line_start":688,"line_end":688,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2830},"to":{"krate":0,"index":688}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":128024,"byte_end":128041,"line_start":705,"line_end":705,"column_start":25,"column_end":42},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2614},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":128300,"byte_end":128317,"line_start":721,"line_end":721,"column_start":21,"column_end":38},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2628},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":128429,"byte_end":128446,"line_start":727,"line_end":727,"column_start":32,"column_end":49},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":2628},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":132643,"byte_end":132651,"line_start":844,"line_end":844,"column_start":31,"column_end":39},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":2945},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":134534,"byte_end":134545,"line_start":915,"line_end":915,"column_start":34,"column_end":45},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":731},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":136219,"byte_end":136228,"line_start":981,"line_end":981,"column_start":25,"column_end":34},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":2954},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":136717,"byte_end":136726,"line_start":1003,"line_end":1003,"column_start":36,"column_end":45},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":2954},"to":{"krate":2,"index":7113}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":137572,"byte_end":137578,"line_start":1036,"line_end":1036,"column_start":25,"column_end":31},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":2964},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":138444,"byte_end":138450,"line_start":1072,"line_end":1072,"column_start":34,"column_end":40},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":2964},"to":{"krate":2,"index":7138}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/adaptors/mod.rs","byte_start":138556,"byte_end":138562,"line_start":1078,"line_end":1078,"column_start":36,"column_end":42},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":2964},"to":{"krate":2,"index":7113}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":154782,"byte_end":154794,"line_start":16,"line_end":16,"column_start":12,"column_end":24},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2973},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":159407,"byte_end":159419,"line_start":168,"line_end":168,"column_start":9,"column_end":21},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2973},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/either_or_both.rs","byte_start":159782,"byte_end":159794,"line_start":182,"line_end":182,"column_start":43,"column_end":55},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2973},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/cons_tuples_impl.rs","byte_start":168005,"byte_end":168015,"line_start":52,"line_end":52,"column_start":22,"column_end":32},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":3304},"to":{"krate":2,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs","byte_start":168792,"byte_end":168804,"line_start":16,"line_end":16,"column_start":19,"column_end":31},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":953},"to":{"krate":2,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs","byte_start":168934,"byte_end":168946,"line_start":23,"line_end":23,"column_start":24,"column_end":36},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":953},"to":{"krate":2,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs","byte_start":169404,"byte_end":169416,"line_start":44,"line_end":44,"column_start":19,"column_end":31},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":953},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations.rs","byte_start":170688,"byte_end":170700,"line_start":83,"line_end":83,"column_start":22,"column_end":34},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":953},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations_with_replacement.rs","byte_start":172524,"byte_end":172551,"line_start":20,"line_end":20,"column_start":24,"column_end":51},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":3315},"to":{"krate":2,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations_with_replacement.rs","byte_start":172696,"byte_end":172723,"line_start":28,"line_end":28,"column_start":9,"column_end":36},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":3315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/combinations_with_replacement.rs","byte_start":173392,"byte_end":173419,"line_start":55,"line_end":55,"column_start":22,"column_end":49},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":3315},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs","byte_start":175768,"byte_end":175783,"line_start":28,"line_end":28,"column_start":9,"column_end":24},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":3324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs","byte_start":176208,"byte_end":176223,"line_start":46,"line_end":46,"column_start":22,"column_end":37},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":3324},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs","byte_start":176865,"byte_end":176880,"line_start":73,"line_end":73,"column_start":31,"column_end":46},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":3324},"to":{"krate":2,"index":7138}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs","byte_start":176935,"byte_end":176950,"line_start":75,"line_end":75,"column_start":21,"column_end":36},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":3324},"to":{"krate":2,"index":8836}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs","byte_start":177314,"byte_end":177329,"line_start":88,"line_end":88,"column_start":19,"column_end":34},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":3324},"to":{"krate":2,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/exactly_one_err.rs","byte_start":178003,"byte_end":178018,"line_start":108,"line_end":108,"column_start":19,"column_end":34},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":3324},"to":{"krate":1,"index":2326}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/format.rs","byte_start":182157,"byte_end":182167,"line_start":50,"line_end":50,"column_start":33,"column_end":43},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":3332},"to":{"krate":2,"index":8836}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/format.rs","byte_start":182928,"byte_end":182934,"line_start":73,"line_end":73,"column_start":13,"column_end":19},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":3343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":184446,"byte_end":184460,"line_start":14,"line_end":14,"column_start":12,"column_end":26},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":3388},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":184595,"byte_end":184609,"line_start":20,"line_end":20,"column_start":31,"column_end":45},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":3388},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/grouping_map.rs","byte_start":185735,"byte_end":185746,"line_start":56,"line_end":56,"column_start":15,"column_end":26},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":3402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":205430,"byte_end":205431,"line_start":10,"line_end":10,"column_start":46,"column_end":47},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1232},"to":{"krate":0,"index":1224}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":205736,"byte_end":205746,"line_start":29,"line_end":29,"column_start":6,"column_end":16},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":3411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":205936,"byte_end":205946,"line_start":40,"line_end":40,"column_start":32,"column_end":42},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":3411},"to":{"krate":0,"index":1224}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":206988,"byte_end":206998,"line_start":77,"line_end":77,"column_start":15,"column_end":25},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1242},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":213776,"byte_end":213786,"line_start":263,"line_end":263,"column_start":15,"column_end":25},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1242},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":215598,"byte_end":215605,"line_start":320,"line_end":320,"column_start":15,"column_end":22},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":216812,"byte_end":216818,"line_start":366,"line_end":366,"column_start":32,"column_end":38},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1300},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":217721,"byte_end":217726,"line_start":402,"line_end":402,"column_start":28,"column_end":33},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1314},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":217897,"byte_end":217902,"line_start":411,"line_end":411,"column_start":32,"column_end":37},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1314},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":219734,"byte_end":219744,"line_start":475,"line_end":475,"column_start":9,"column_end":19},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":220730,"byte_end":220736,"line_start":517,"line_end":517,"column_start":26,"column_end":32},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1351},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":221488,"byte_end":221493,"line_start":550,"line_end":550,"column_start":22,"column_end":27},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1361},"to":{"krate":2,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/groupbylazy.rs","byte_start":221652,"byte_end":221657,"line_start":559,"line_end":559,"column_start":26,"column_end":31},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1361},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs","byte_start":222172,"byte_end":222196,"line_start":11,"line_end":11,"column_start":48,"column_end":72},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":3417},"to":{"krate":0,"index":1383}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs","byte_start":222892,"byte_end":222893,"line_start":34,"line_end":34,"column_start":59,"column_end":60},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1395},"to":{"krate":0,"index":1383}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/intersperse.rs","byte_start":223800,"byte_end":223815,"line_start":70,"line_end":70,"column_start":29,"column_end":44},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":3427},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":226157,"byte_end":226165,"line_start":23,"line_end":23,"column_start":9,"column_end":17},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":3441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":227061,"byte_end":227069,"line_start":54,"line_end":54,"column_start":19,"column_end":27},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":3441},"to":{"krate":2,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":228787,"byte_end":228797,"line_start":112,"line_end":112,"column_start":44,"column_end":54},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":3449},"to":{"krate":0,"index":1452}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":228932,"byte_end":228933,"line_start":118,"line_end":118,"column_start":56,"column_end":57},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1460},"to":{"krate":0,"index":1452}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":230033,"byte_end":230041,"line_start":159,"line_end":159,"column_start":27,"column_end":35},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1464},"to":{"krate":2,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":230880,"byte_end":230888,"line_start":183,"line_end":183,"column_start":22,"column_end":30},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1464},"to":{"krate":2,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/kmerge_impl.rs","byte_start":231037,"byte_end":231045,"line_start":191,"line_end":191,"column_start":25,"column_end":33},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1464},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lazy_buffer.rs","byte_start":231947,"byte_end":231957,"line_start":11,"line_end":11,"column_start":9,"column_end":19},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":3455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lazy_buffer.rs","byte_start":232906,"byte_end":232916,"line_start":56,"line_end":56,"column_start":25,"column_end":35},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":3455},"to":{"krate":2,"index":3132}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/merge_join.rs","byte_start":234264,"byte_end":234275,"line_start":34,"line_end":34,"column_start":25,"column_end":36},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1530},"to":{"krate":2,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/merge_join.rs","byte_start":234495,"byte_end":234506,"line_start":44,"line_end":44,"column_start":30,"column_end":41},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1530},"to":{"krate":2,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/merge_join.rs","byte_start":234731,"byte_end":234742,"line_start":53,"line_end":53,"column_start":28,"column_end":39},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1530},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/minmax.rs","byte_start":239410,"byte_end":239422,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":3468},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs","byte_start":243467,"byte_end":243476,"line_start":28,"line_end":28,"column_start":9,"column_end":18},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":3493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs","byte_start":243629,"byte_end":243638,"line_start":37,"line_end":37,"column_start":19,"column_end":28},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs","byte_start":244282,"byte_end":244291,"line_start":59,"line_end":59,"column_start":25,"column_end":34},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3493},"to":{"krate":0,"index":1662}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs","byte_start":244758,"byte_end":244767,"line_start":78,"line_end":78,"column_start":22,"column_end":31},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":3493},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/multipeek_impl.rs","byte_start":245130,"byte_end":245139,"line_start":94,"line_end":94,"column_start":31,"column_end":40},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":3493},"to":{"krate":2,"index":7138}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/pad_tail.rs","byte_start":245958,"byte_end":245966,"line_start":32,"line_end":32,"column_start":25,"column_end":33},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":3504},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/pad_tail.rs","byte_start":246732,"byte_end":246740,"line_start":63,"line_end":63,"column_start":36,"column_end":44},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":3504},"to":{"krate":2,"index":7113}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/pad_tail.rs","byte_start":247200,"byte_end":247208,"line_start":80,"line_end":80,"column_start":34,"column_end":42},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":3504},"to":{"krate":2,"index":7138}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":248147,"byte_end":248154,"line_start":33,"line_end":33,"column_start":9,"column_end":16},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":3515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":249340,"byte_end":249347,"line_start":74,"line_end":74,"column_start":22,"column_end":29},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":3515},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":249674,"byte_end":249681,"line_start":89,"line_end":89,"column_start":31,"column_end":38},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":3515},"to":{"krate":2,"index":7138}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peek_nth.rs","byte_start":249740,"byte_end":249747,"line_start":91,"line_end":91,"column_start":25,"column_end":32},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":3515},"to":{"krate":0,"index":1662}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs","byte_start":250495,"byte_end":250503,"line_start":14,"line_end":14,"column_start":25,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":7249},"to":{"krate":0,"index":1662}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs","byte_start":250809,"byte_end":250817,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"kind":{"Impl":{"id":107}},"from":{"krate":2,"index":38990},"to":{"krate":0,"index":1662}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs","byte_start":251137,"byte_end":251144,"line_start":37,"line_end":37,"column_start":25,"column_end":32},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2553},"to":{"krate":0,"index":1662}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs","byte_start":251563,"byte_end":251571,"line_start":56,"line_end":56,"column_start":25,"column_end":33},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":3611},"to":{"krate":0,"index":1662}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/peeking_take_while.rs","byte_start":252517,"byte_end":252533,"line_start":96,"line_end":96,"column_start":29,"column_end":45},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1677},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs","byte_start":254867,"byte_end":254879,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1707},"to":{"krate":2,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs","byte_start":255454,"byte_end":255466,"line_start":55,"line_end":55,"column_start":24,"column_end":36},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1707},"to":{"krate":2,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs","byte_start":256332,"byte_end":256344,"line_start":96,"line_end":96,"column_start":22,"column_end":34},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1707},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs","byte_start":259017,"byte_end":259029,"line_start":170,"line_end":170,"column_start":9,"column_end":21},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/permutations.rs","byte_start":260241,"byte_end":260254,"line_start":208,"line_end":208,"column_start":6,"column_end":19},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":3586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/powerset.rs","byte_start":263041,"byte_end":263049,"line_start":19,"line_end":19,"column_start":19,"column_end":27},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1768},"to":{"krate":2,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/powerset.rs","byte_start":263169,"byte_end":263177,"line_start":26,"line_end":26,"column_start":24,"column_end":32},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1768},"to":{"krate":2,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/powerset.rs","byte_start":263543,"byte_end":263551,"line_start":44,"line_end":44,"column_start":22,"column_end":30},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1768},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/process_results_impl.rs","byte_start":265193,"byte_end":265207,"line_start":14,"line_end":14,"column_start":32,"column_end":46},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":3600},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs","byte_start":267932,"byte_end":267940,"line_start":28,"line_end":28,"column_start":19,"column_end":27},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":3611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/put_back_n_impl.rs","byte_start":268442,"byte_end":268450,"line_start":49,"line_end":49,"column_start":32,"column_end":40},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":3611},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":270407,"byte_end":270413,"line_start":53,"line_end":53,"column_start":19,"column_end":25},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":3621},"to":{"krate":2,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":270487,"byte_end":270493,"line_start":58,"line_end":58,"column_start":25,"column_end":31},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":3621},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/rciter_impl.rs","byte_start":271037,"byte_end":271043,"line_start":76,"line_end":76,"column_start":33,"column_end":39},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":3621},"to":{"krate":2,"index":7113}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/repeatn.rs","byte_start":272022,"byte_end":272029,"line_start":23,"line_end":23,"column_start":22,"column_end":29},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":3628},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/repeatn.rs","byte_start":272419,"byte_end":272426,"line_start":43,"line_end":43,"column_start":33,"column_end":40},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":3628},"to":{"krate":2,"index":7113}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/repeatn.rs","byte_start":272576,"byte_end":272583,"line_start":52,"line_end":52,"column_start":31,"column_end":38},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":3628},"to":{"krate":2,"index":7138}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":275958,"byte_end":275968,"line_start":15,"line_end":15,"column_start":24,"column_end":34},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":3638},"to":{"krate":2,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":276809,"byte_end":276819,"line_start":49,"line_end":49,"column_start":25,"column_end":35},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":3638},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":278480,"byte_end":278486,"line_start":109,"line_end":109,"column_start":28,"column_end":34},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3646},"to":{"krate":2,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":278873,"byte_end":278879,"line_start":124,"line_end":124,"column_start":29,"column_end":35},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3646},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":279436,"byte_end":279443,"line_start":147,"line_end":147,"column_start":28,"column_end":35},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3655},"to":{"krate":2,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/sources.rs","byte_start":279546,"byte_end":279553,"line_start":153,"line_end":153,"column_start":26,"column_end":33},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":3655},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tee.rs","byte_start":281262,"byte_end":281265,"line_start":37,"line_end":37,"column_start":22,"column_end":25},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":3675},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tee.rs","byte_start":282365,"byte_end":282368,"line_start":75,"line_end":75,"column_start":31,"column_end":34},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":3675},"to":{"krate":2,"index":7138}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":282920,"byte_end":282932,"line_start":15,"line_end":15,"column_start":7,"column_end":19},"kind":"SuperTrait","from":{"krate":0,"index":2007},"to":{"krate":0,"index":1961}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":282980,"byte_end":282981,"line_start":18,"line_end":18,"column_start":44,"column_end":45},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1963},"to":{"krate":0,"index":1961}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":283295,"byte_end":283306,"line_start":32,"line_end":32,"column_start":9,"column_end":20},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":3682},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":283478,"byte_end":283489,"line_start":43,"line_end":43,"column_start":22,"column_end":33},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3682},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":284167,"byte_end":284178,"line_start":71,"line_end":71,"column_start":31,"column_end":42},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3682},"to":{"krate":2,"index":7138}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":284856,"byte_end":284862,"line_start":100,"line_end":100,"column_start":25,"column_end":31},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":3692},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":285087,"byte_end":285093,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":3692},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":286707,"byte_end":286719,"line_start":169,"line_end":169,"column_start":25,"column_end":37},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":3701},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":288231,"byte_end":288251,"line_start":220,"line_end":220,"column_start":25,"column_end":45},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":3714},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/tuple_impl.rs","byte_start":288492,"byte_end":288497,"line_start":232,"line_end":232,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2830},"to":{"krate":0,"index":2007}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs","byte_start":291822,"byte_end":291830,"line_start":19,"line_end":19,"column_start":30,"column_end":38},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":3903},"to":{"krate":2,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs","byte_start":292619,"byte_end":292627,"line_start":50,"line_end":50,"column_start":28,"column_end":36},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":3903},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs","byte_start":293364,"byte_end":293372,"line_start":79,"line_end":79,"column_start":39,"column_end":47},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3903},"to":{"krate":2,"index":7113}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs","byte_start":293768,"byte_end":293774,"line_start":95,"line_end":95,"column_start":22,"column_end":28},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3916},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs","byte_start":294505,"byte_end":294511,"line_start":123,"line_end":123,"column_start":33,"column_end":39},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":3916},"to":{"krate":2,"index":7113}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/unique_impl.rs","byte_start":295257,"byte_end":295263,"line_start":148,"line_end":148,"column_start":24,"column_end":30},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3916},"to":{"krate":2,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs","byte_start":296094,"byte_end":296106,"line_start":16,"line_end":16,"column_start":19,"column_end":31},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2081},"to":{"krate":2,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs","byte_start":296929,"byte_end":296937,"line_start":49,"line_end":49,"column_start":9,"column_end":17},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":3924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs","byte_start":297216,"byte_end":297228,"line_start":61,"line_end":61,"column_start":32,"column_end":44},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2081},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/with_position.rs","byte_start":298464,"byte_end":298476,"line_start":95,"line_end":95,"column_start":31,"column_end":43},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2081},"to":{"krate":2,"index":7138}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_eq_impl.rs","byte_start":299394,"byte_end":299399,"line_start":37,"line_end":37,"column_start":25,"column_end":30},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3952},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_eq_impl.rs","byte_start":299977,"byte_end":299982,"line_start":57,"line_end":57,"column_start":34,"column_end":39},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3952},"to":{"krate":2,"index":7138}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_longest.rs","byte_start":300911,"byte_end":300921,"line_start":33,"line_end":33,"column_start":25,"column_end":35},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3965},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_longest.rs","byte_start":301543,"byte_end":301553,"line_start":55,"line_end":55,"column_start":36,"column_end":46},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3965},"to":{"krate":2,"index":7113}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/zip_longest.rs","byte_start":302374,"byte_end":302384,"line_start":75,"line_end":75,"column_start":34,"column_end":44},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3965},"to":{"krate":2,"index":7138}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":10669,"byte_end":10677,"line_start":361,"line_end":361,"column_start":23,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":7249},"to":{"krate":0,"index":2161}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":104311,"byte_end":104312,"line_start":3063,"line_end":3063,"column_start":31,"column_end":32},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2441},"to":{"krate":0,"index":2161}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/itertools-0.10.0/src/lib.rs","byte_start":107831,"byte_end":107840,"line_start":3181,"line_end":3181,"column_start":9,"column_end":18},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":4407},"to":{"krate":4294967295,"index":4294967295}}]}