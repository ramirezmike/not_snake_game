{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0","program":"/home/mramirez/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","gfx_hal","--edition=2018","/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=57213968fa04689b","-C","extra-filename=-57213968fa04689b","--out-dir","/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps","-L","dependency=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps","--extern","bitflags=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libbitflags-58aa9227c8b3902c.rmeta","--extern","naga=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libnaga-9dc08eb6ecfc8044.rmeta","--extern","raw_window_handle=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libraw_window_handle-5e283c1691b07185.rmeta","--extern","thiserror=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libthiserror-82e67b6f2084ec78.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/mramirez/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libgfx_hal-57213968fa04689b.rmeta"},"prelude":{"crate_id":{"name":"gfx_hal","disambiguator":[8828984109774290376,9137775165702316504]},"crate_root":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src","external_crates":[{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[397594041871667817,11704163070354659695]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17044353007700780372,2918200604221815240]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15333840167806743833,9889193056877993824]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4550415707075219492,6623162258675921486]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8289379911494056514,13856099756999900329]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10514502805115346386,576110030083780649]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9878185313679130060,1975285035821961205]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4010603182529655334,7152219772350788052]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[1807637986128902209,18379128151258407121]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11140927657351163542,6267109750485550558]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[13809795498598848728,13320395723520943315]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13869841232067652907,9875669357213642224]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15533050656730733495,14669839968799848603]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[14371692877540073659,8181723439448527964]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[639541300699627395,1995254029228069844]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[12482123824895737424,11765111494567609733]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[1169880241773671279,8605314106566979368]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[5016943468141875609,13494347935157563341]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","num":19,"id":{"name":"bitflags","disambiguator":[13397336182039615717,16087761768397167672]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","num":20,"id":{"name":"thiserror","disambiguator":[2205512963606995726,5152328715464138865]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","num":21,"id":{"name":"thiserror_impl","disambiguator":[3048880832107397393,15433919117434819417]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","num":22,"id":{"name":"naga","disambiguator":[5106403883123171278,10544305422277642895]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","num":23,"id":{"name":"spirv_headers","disambiguator":[4440022559321819747,17947104322996726087]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","num":24,"id":{"name":"num_traits","disambiguator":[252308066493949436,2163249747488123429]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","num":25,"id":{"name":"petgraph","disambiguator":[1608358839161402569,625720476303738642]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","num":26,"id":{"name":"fixedbitset","disambiguator":[17266127087240835524,10087726882440464653]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","num":27,"id":{"name":"indexmap","disambiguator":[5828254732639855931,9406981498523653207]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","num":28,"id":{"name":"hashbrown","disambiguator":[8298503007030453831,6187886020237225386]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","num":29,"id":{"name":"ahash","disambiguator":[8167947935135209263,11163943892117107900]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","num":30,"id":{"name":"bit_set","disambiguator":[6370869751160875217,8183669224277818769]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","num":31,"id":{"name":"bit_vec","disambiguator":[1631992315532329730,10908655395390977164]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","num":32,"id":{"name":"log","disambiguator":[3410414810508890113,15122554718325273992]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","num":33,"id":{"name":"cfg_if","disambiguator":[3051334588151808042,8832791441195491324]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","num":34,"id":{"name":"fxhash","disambiguator":[12179643530549644737,5720268790445742921]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","num":35,"id":{"name":"byteorder","disambiguator":[13778836417791981908,11302133446922456731]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","num":36,"id":{"name":"raw_window_handle","disambiguator":[9780639447689656874,2824686148409801030]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","num":37,"id":{"name":"libc","disambiguator":[18406178008256737583,6506690069580327237]}}],"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":0,"byte_end":29454,"line_start":1,"line_end":680,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":40994,"byte_end":40995,"line_start":29,"line_end":29,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"ClearValue, AttachmentClear","parent":{"krate":0,"index":80}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":41020,"byte_end":41021,"line_start":30,"line_end":30,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"BufferImageCopy, ImageResolve, ImageBlit, BufferCopy, ImageCopy","parent":{"krate":0,"index":80}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":160282,"byte_end":160283,"line_start":15,"line_end":15,"column_start":14,"column_end":15},"alias_span":null,"name":"*","value":"ComputePipelineDesc","parent":{"krate":0,"index":650}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":160297,"byte_end":160298,"line_start":15,"line_end":15,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"DescriptorRangeDesc, DescriptorPoolCreateFlags, DescriptorSetWrite, DescriptorSetIndex, DescriptorSetLayoutBinding, DescriptorPool, Descriptor, DescriptorSetCopy","parent":{"krate":0,"index":650}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":160310,"byte_end":160311,"line_start":15,"line_end":15,"column_start":42,"column_end":43},"alias_span":null,"name":"*","value":"DepthValue, DepthBias, Rect, StencilValue, GraphicsPipelineDesc, ClearRect, Viewport, ColorValue","parent":{"krate":0,"index":650}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":160330,"byte_end":160331,"line_start":15,"line_end":15,"column_start":62,"column_end":63},"alias_span":null,"name":"*","value":"BufferIndex, PatchSize","parent":{"krate":0,"index":650}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":160348,"byte_end":160349,"line_start":15,"line_end":15,"column_start":80,"column_end":81},"alias_span":null,"name":"*","value":"Comparison, Face","parent":{"krate":0,"index":650}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":160367,"byte_end":160368,"line_start":15,"line_end":15,"column_start":99,"column_end":100},"alias_span":null,"name":"*","value":"Specialization","parent":{"krate":0,"index":650}},{"kind":"Use","ref_id":{"krate":0,"index":902},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":214639,"byte_end":214650,"line_start":19,"line_end":19,"column_start":24,"column_end":35},"alias_span":null,"name":"QueueFamily","value":"","parent":{"krate":0,"index":886}},{"kind":"Use","ref_id":{"krate":0,"index":10656},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":214652,"byte_end":214665,"line_start":19,"line_end":19,"column_start":37,"column_end":50},"alias_span":null,"name":"QueueFamilyId","value":"","parent":{"krate":0,"index":886}},{"kind":"Use","ref_id":{"krate":0,"index":10657},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":214652,"byte_end":214665,"line_start":19,"line_end":19,"column_start":37,"column_end":50},"alias_span":null,"name":"QueueFamilyId","value":"","parent":{"krate":0,"index":886}},{"kind":"Use","ref_id":{"krate":0,"index":10674},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":214667,"byte_end":214677,"line_start":19,"line_end":19,"column_start":52,"column_end":62},"alias_span":null,"name":"QueueGroup","value":"","parent":{"krate":0,"index":886}},{"kind":"Use","ref_id":{"krate":0,"index":54},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":2115,"byte_end":2129,"line_start":68,"line_end":68,"column_start":18,"column_end":32},"alias_span":null,"name":"PhysicalDevice","value":"","parent":{"krate":0,"index":1023}},{"kind":"Use","ref_id":{"krate":0,"index":180},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":2148,"byte_end":2161,"line_start":69,"line_end":69,"column_start":18,"column_end":31},"alias_span":null,"name":"CommandBuffer","value":"","parent":{"krate":0,"index":1023}},{"kind":"Use","ref_id":{"krate":0,"index":323},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":2179,"byte_end":2185,"line_start":70,"line_end":70,"column_start":17,"column_end":23},"alias_span":null,"name":"Device","value":"","parent":{"krate":0,"index":1023}},{"kind":"Use","ref_id":{"krate":0,"index":641},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":2201,"byte_end":2212,"line_start":71,"line_end":71,"column_start":15,"column_end":26},"alias_span":null,"name":"CommandPool","value":"","parent":{"krate":0,"index":1023}},{"kind":"Use","ref_id":{"krate":0,"index":710},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":2227,"byte_end":2241,"line_start":72,"line_end":72,"column_start":14,"column_end":28},"alias_span":null,"name":"DescriptorPool","value":"","parent":{"krate":0,"index":1023}},{"kind":"Use","ref_id":{"krate":0,"index":952},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":2259,"byte_end":2271,"line_start":73,"line_end":73,"column_start":17,"column_end":29},"alias_span":null,"name":"CommandQueue","value":"","parent":{"krate":0,"index":1023}},{"kind":"Use","ref_id":{"krate":0,"index":902},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":2273,"byte_end":2284,"line_start":73,"line_end":73,"column_start":31,"column_end":42},"alias_span":null,"name":"QueueFamily","value":"","parent":{"krate":0,"index":1023}},{"kind":"Use","ref_id":{"krate":0,"index":1008},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":2304,"byte_end":2323,"line_start":74,"line_end":74,"column_start":18,"column_end":37},"alias_span":null,"name":"PresentationSurface","value":"","parent":{"krate":0,"index":1023}},{"kind":"Use","ref_id":{"krate":0,"index":1003},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":2325,"byte_end":2332,"line_start":74,"line_end":74,"column_start":39,"column_end":46},"alias_span":null,"name":"Surface","value":"","parent":{"krate":0,"index":1023}},{"kind":"Use","ref_id":{"krate":0,"index":1065},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":2343,"byte_end":2351,"line_start":75,"line_end":75,"column_start":9,"column_end":17},"alias_span":null,"name":"Instance","value":"","parent":{"krate":0,"index":1023}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":0,"byte_end":29454,"line_start":1,"line_end":680,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":64},{"krate":0,"index":80},{"krate":0,"index":268},{"krate":0,"index":431},{"krate":0,"index":460},{"krate":0,"index":554},{"krate":0,"index":577},{"krate":0,"index":623},{"krate":0,"index":650},{"krate":0,"index":877},{"krate":0,"index":886},{"krate":0,"index":961},{"krate":0,"index":1023},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1064},{"krate":0,"index":11085},{"krate":0,"index":11087},{"krate":0,"index":11088},{"krate":0,"index":11089},{"krate":0,"index":11092},{"krate":0,"index":11093},{"krate":0,"index":11095},{"krate":0,"index":11097},{"krate":0,"index":11099},{"krate":0,"index":11101},{"krate":0,"index":11104},{"krate":0,"index":11183},{"krate":0,"index":11185},{"krate":0,"index":11187},{"krate":0,"index":11189},{"krate":0,"index":11191},{"krate":0,"index":11272},{"krate":0,"index":11275},{"krate":0,"index":11277},{"krate":0,"index":11280},{"krate":0,"index":11282},{"krate":0,"index":11285},{"krate":0,"index":11287},{"krate":0,"index":11290},{"krate":0,"index":11292},{"krate":0,"index":11295},{"krate":0,"index":11298},{"krate":0,"index":11539},{"krate":0,"index":11541},{"krate":0,"index":11542},{"krate":0,"index":11543},{"krate":0,"index":11546},{"krate":0,"index":11547},{"krate":0,"index":11549},{"krate":0,"index":11551},{"krate":0,"index":11553},{"krate":0,"index":11555},{"krate":0,"index":11537},{"krate":0,"index":11558},{"krate":0,"index":11563},{"krate":0,"index":11565},{"krate":0,"index":11567},{"krate":0,"index":11569},{"krate":0,"index":11571},{"krate":0,"index":11578},{"krate":0,"index":11581},{"krate":0,"index":11583},{"krate":0,"index":11586},{"krate":0,"index":11588},{"krate":0,"index":11591},{"krate":0,"index":11593},{"krate":0,"index":11596},{"krate":0,"index":11598},{"krate":0,"index":11601},{"krate":0,"index":11604},{"krate":0,"index":11623},{"krate":0,"index":11625},{"krate":0,"index":11626},{"krate":0,"index":11627},{"krate":0,"index":11630},{"krate":0,"index":11631},{"krate":0,"index":11633},{"krate":0,"index":11635},{"krate":0,"index":11637},{"krate":0,"index":11639},{"krate":0,"index":11621},{"krate":0,"index":11642},{"krate":0,"index":11655},{"krate":0,"index":11657},{"krate":0,"index":11659},{"krate":0,"index":11661},{"krate":0,"index":11663},{"krate":0,"index":11678},{"krate":0,"index":11681},{"krate":0,"index":11683},{"krate":0,"index":11686},{"krate":0,"index":11688},{"krate":0,"index":11691},{"krate":0,"index":11693},{"krate":0,"index":11696},{"krate":0,"index":11698},{"krate":0,"index":11701},{"krate":0,"index":11704},{"krate":0,"index":11745},{"krate":0,"index":11748},{"krate":0,"index":11750},{"krate":0,"index":11751},{"krate":0,"index":11753},{"krate":0,"index":11755},{"krate":0,"index":11756},{"krate":0,"index":11759},{"krate":0,"index":11847},{"krate":0,"index":11853},{"krate":0,"index":11854},{"krate":0,"index":11856},{"krate":0,"index":11858},{"krate":0,"index":11859},{"krate":0,"index":11862},{"krate":0,"index":11867},{"krate":0,"index":11869},{"krate":0,"index":11870},{"krate":0,"index":11872},{"krate":0,"index":11873},{"krate":0,"index":11875},{"krate":0,"index":11878},{"krate":0,"index":11880},{"krate":0,"index":11881},{"krate":0,"index":11883},{"krate":0,"index":11899},{"krate":0,"index":11885},{"krate":0,"index":11886},{"krate":0,"index":11888},{"krate":0,"index":11890},{"krate":0,"index":11891},{"krate":0,"index":11893},{"krate":0,"index":11894},{"krate":0,"index":11896},{"krate":0,"index":11897},{"krate":0,"index":1065},{"krate":0,"index":11901},{"krate":0,"index":11904},{"krate":0,"index":11905},{"krate":0,"index":11907},{"krate":0,"index":11909},{"krate":0,"index":11910},{"krate":0,"index":11913},{"krate":0,"index":11914},{"krate":0,"index":11916},{"krate":0,"index":11918},{"krate":0,"index":11920},{"krate":0,"index":1072},{"krate":0,"index":1074},{"krate":0,"index":1078},{"krate":0,"index":1082}],"decl_id":null,"docs":" Low-level graphics abstraction for Rust. Mostly operates on data, not types.\n Designed for use by libraries and higher-level abstractions only.","sig":null,"attributes":[{"value":"warn(trivial_casts, trivial_numeric_casts, unused_extern_crates,\n       unused_import_braces, unused_qualifications)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":0,"byte_end":135,"line_start":1,"line_end":7,"column_start":1,"column_end":3}},{"value":"deny(broken_intra_doc_links, missing_debug_implementations, missing_docs,\n       unused)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":136,"byte_end":239,"line_start":8,"line_end":13,"column_start":1,"column_end":3}},{"value":"/ Low-level graphics abstraction for Rust. Mostly operates on data, not types.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":241,"byte_end":321,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/ Designed for use by libraries and higher-level abstractions only.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":322,"byte_end":391,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":392,"byte_end":395,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This crate provides a [hardware abstraction layer][hal] for [graphics adapters][gpus],","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":396,"byte_end":486,"line_start":18,"line_end":18,"column_start":1,"column_end":91}},{"value":"/ for both compute and graphics operations. The API design is heavily inspired by","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":487,"byte_end":570,"line_start":19,"line_end":19,"column_start":1,"column_end":84}},{"value":"/ the [Vulkan API](https://www.khronos.org/vulkan/), and borrows some of the terminology.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":571,"byte_end":662,"line_start":20,"line_end":20,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":663,"byte_end":666,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [hal]: https://en.wikipedia.org/wiki/Hardware_abstraction","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":667,"byte_end":728,"line_start":22,"line_end":22,"column_start":1,"column_end":62}},{"value":"/ [gpus]: https://en.wikipedia.org/wiki/Video_card","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":729,"byte_end":781,"line_start":23,"line_end":23,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":782,"byte_end":785,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":786,"byte_end":797,"line_start":25,"line_end":25,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":798,"byte_end":801,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Most of the functionality is implemented in separate crates, one for each backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":802,"byte_end":888,"line_start":27,"line_end":27,"column_start":1,"column_end":87}},{"value":"/ This crate only exposes a few generic traits and structures. You can import","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":889,"byte_end":968,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ all the necessary traits through the [`prelude`][prelude] module.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":969,"byte_end":1038,"line_start":29,"line_end":29,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":1039,"byte_end":1042,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The first step to using `gfx-hal` is to initialize one of the available","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":1043,"byte_end":1118,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ [backends][Backend], by creating an [`Instance`][Instance]. Then proceed by","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":1119,"byte_end":1198,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ [enumerating][Instance::enumerate_adapters] the available","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":1199,"byte_end":1260,"line_start":33,"line_end":33,"column_start":1,"column_end":62}},{"value":"/ [graphics adapters][adapter::Adapter] and querying their available","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":1261,"byte_end":1331,"line_start":34,"line_end":34,"column_start":1,"column_end":71}},{"value":"/ [features][Features] and [queues][queue::family::QueueFamily].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":1332,"byte_end":1398,"line_start":35,"line_end":35,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":1399,"byte_end":1402,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ You can use the [`open`][adapter::PhysicalDevice::open] method on a","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":1403,"byte_end":1474,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ [`PhysicalDevice`][adapter::PhysicalDevice] to get a [logical device","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":1475,"byte_end":1547,"line_start":38,"line_end":38,"column_start":1,"column_end":73}},{"value":"/ handle][device::Device], from which you can manage all the other device-specific","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":1548,"byte_end":1632,"line_start":39,"line_end":39,"column_start":1,"column_end":85}},{"value":"/ resources.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":1633,"byte_end":1647,"line_start":40,"line_end":40,"column_start":1,"column_end":15}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"adapter","qualname":"::adapter","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":1111},{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1117},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1126},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1132},{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1141},{"krate":0,"index":1144},{"krate":0,"index":1146},{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1155},{"krate":0,"index":1159},{"krate":0,"index":54},{"krate":0,"index":1162},{"krate":0,"index":1178},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1186},{"krate":0,"index":1188},{"krate":0,"index":1193},{"krate":0,"index":1195},{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1200},{"krate":0,"index":1201},{"krate":0,"index":1204},{"krate":0,"index":1209}],"decl_id":null,"docs":" Physical graphics devices.","sig":null,"attributes":[{"value":"/ Physical graphics devices.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":29456,"byte_end":29486,"line_start":1,"line_end":1,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":29487,"byte_end":29490,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The [`PhysicalDevice`][PhysicalDevice] trait specifies the API a backend","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":29491,"byte_end":29567,"line_start":3,"line_end":3,"column_start":1,"column_end":77}},{"value":"/ must provide for dealing with and querying a physical device, such as","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":29568,"byte_end":29641,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/ a particular GPU.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":29642,"byte_end":29663,"line_start":5,"line_end":5,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":29664,"byte_end":29667,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ An [adapter][Adapter] is a struct containing a physical device and metadata","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":29668,"byte_end":29747,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ for a particular GPU, generally created from an [instance][crate::Instance]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":29748,"byte_end":29827,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/ of that [backend][crate::Backend].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":29828,"byte_end":29866,"line_start":9,"line_end":9,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1111},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":30208,"byte_end":30218,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"name":"MemoryType","qualname":"::adapter::MemoryType","value":"MemoryType { properties, heap_index }","parent":null,"children":[{"krate":0,"index":1112},{"krate":0,"index":1113}],"decl_id":null,"docs":" A description for a single type of memory in a heap.\n","sig":null,"attributes":[{"value":"/ A description for a single type of memory in a heap.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":30032,"byte_end":30088,"line_start":19,"line_end":19,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":1112},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":30352,"byte_end":30362,"line_start":25,"line_end":25,"column_start":9,"column_end":19},"name":"properties","qualname":"::adapter::MemoryType::properties","value":"memory::Properties","parent":{"krate":0,"index":1111},"children":[],"decl_id":null,"docs":" Properties of the associated memory, such as synchronization\n properties or whether it's on the CPU or GPU.\n","sig":null,"attributes":[{"value":"/ Properties of the associated memory, such as synchronization","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":30225,"byte_end":30289,"line_start":23,"line_end":23,"column_start":5,"column_end":69}},{"value":"/ properties or whether it's on the CPU or GPU.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":30294,"byte_end":30343,"line_start":24,"line_end":24,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1113},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":30459,"byte_end":30469,"line_start":27,"line_end":27,"column_start":9,"column_end":19},"name":"heap_index","qualname":"::adapter::MemoryType::heap_index","value":"usize","parent":{"krate":0,"index":1111},"children":[],"decl_id":null,"docs":" Index to the underlying memory heap in `Gpu::memory_heaps`\n","sig":null,"attributes":[{"value":"/ Index to the underlying memory heap in `Gpu::memory_heaps`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":30388,"byte_end":30450,"line_start":26,"line_end":26,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1126},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":30637,"byte_end":30647,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"MemoryHeap","qualname":"::adapter::MemoryHeap","value":"MemoryHeap { size, flags }","parent":null,"children":[{"krate":0,"index":1127},{"krate":0,"index":1128}],"decl_id":null,"docs":" A description for a memory heap.\n","sig":null,"attributes":[{"value":"/ A description for a memory heap.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":30481,"byte_end":30517,"line_start":30,"line_end":30,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":1127},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":30690,"byte_end":30694,"line_start":35,"line_end":35,"column_start":9,"column_end":13},"name":"size","qualname":"::adapter::MemoryHeap::size","value":"u64","parent":{"krate":0,"index":1126},"children":[],"decl_id":null,"docs":" Total size of the heap.\n","sig":null,"attributes":[{"value":"/ Total size of the heap.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":30654,"byte_end":30681,"line_start":34,"line_end":34,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1128},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":30729,"byte_end":30734,"line_start":37,"line_end":37,"column_start":9,"column_end":14},"name":"flags","qualname":"::adapter::MemoryHeap::flags","value":"memory::HeapFlags","parent":{"krate":0,"index":1126},"children":[],"decl_id":null,"docs":" Heap flags.\n","sig":null,"attributes":[{"value":"/ Heap flags.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":30705,"byte_end":30720,"line_start":36,"line_end":36,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1141},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":30939,"byte_end":30955,"line_start":43,"line_end":43,"column_start":12,"column_end":28},"name":"MemoryProperties","qualname":"::adapter::MemoryProperties","value":"MemoryProperties { memory_types, memory_heaps }","parent":null,"children":[{"krate":0,"index":1142},{"krate":0,"index":1143}],"decl_id":null,"docs":" Types of memory supported by this adapter and available memory.\n","sig":null,"attributes":[{"value":"/ Types of memory supported by this adapter and available memory.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":30758,"byte_end":30825,"line_start":40,"line_end":40,"column_start":1,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":1142},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":31089,"byte_end":31101,"line_start":46,"line_end":46,"column_start":9,"column_end":21},"name":"memory_types","qualname":"::adapter::MemoryProperties::memory_types","value":"std::vec::Vec<adapter::MemoryType>","parent":{"krate":0,"index":1141},"children":[],"decl_id":null,"docs":" Each memory type is associated with one heap of `memory_heaps`.\n Multiple types can point to the same heap.\n","sig":null,"attributes":[{"value":"/ Each memory type is associated with one heap of `memory_heaps`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":30962,"byte_end":31029,"line_start":44,"line_end":44,"column_start":5,"column_end":72}},{"value":"/ Multiple types can point to the same heap.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":31034,"byte_end":31080,"line_start":45,"line_end":45,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1143},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":31175,"byte_end":31187,"line_start":48,"line_end":48,"column_start":9,"column_end":21},"name":"memory_heaps","qualname":"::adapter::MemoryProperties::memory_heaps","value":"std::vec::Vec<adapter::MemoryHeap>","parent":{"krate":0,"index":1141},"children":[],"decl_id":null,"docs":" Memory heaps with their size in bytes.\n","sig":null,"attributes":[{"value":"/ Memory heaps with their size in bytes.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":31124,"byte_end":31166,"line_start":47,"line_end":47,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1155},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":31454,"byte_end":31457,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"Gpu","qualname":"::adapter::Gpu","value":"Gpu { device, queue_groups }","parent":null,"children":[{"krate":0,"index":1157},{"krate":0,"index":1158}],"decl_id":null,"docs":" Represents a combination of a [logical device][crate::device::Device] and the\n [hardware queues][QueueGroup] it provides.","sig":null,"attributes":[{"value":"/ Represents a combination of a [logical device][crate::device::Device] and the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":31209,"byte_end":31290,"line_start":51,"line_end":51,"column_start":1,"column_end":82}},{"value":"/ [hardware queues][QueueGroup] it provides.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":31291,"byte_end":31337,"line_start":52,"line_end":52,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":31338,"byte_end":31341,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ This structure is typically created from an [adapter][crate::adapter::Adapter].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":31342,"byte_end":31425,"line_start":54,"line_end":54,"column_start":1,"column_end":84}}]},{"kind":"Field","id":{"krate":0,"index":1157},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":31549,"byte_end":31555,"line_start":58,"line_end":58,"column_start":9,"column_end":15},"name":"device","qualname":"::adapter::Gpu::device","value":"<B as Backend>::Device","parent":{"krate":0,"index":1155},"children":[],"decl_id":null,"docs":" [Logical device][crate::device::Device] for a given backend.\n","sig":null,"attributes":[{"value":"/ [Logical device][crate::device::Device] for a given backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":31476,"byte_end":31540,"line_start":57,"line_end":57,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1158},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":31659,"byte_end":31671,"line_start":60,"line_end":60,"column_start":9,"column_end":21},"name":"queue_groups","qualname":"::adapter::Gpu::queue_groups","value":"std::vec::Vec<queue::family::QueueGroup<B>>","parent":{"krate":0,"index":1155},"children":[],"decl_id":null,"docs":" The [command queues][crate::queue::CommandQueue] that the device provides.\n","sig":null,"attributes":[{"value":"/ The [command queues][crate::queue::CommandQueue] that the device provides.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":31572,"byte_end":31650,"line_start":59,"line_end":59,"column_start":5,"column_end":83}}]},{"kind":"Trait","id":{"krate":0,"index":54},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":31796,"byte_end":31810,"line_start":64,"line_end":64,"column_start":11,"column_end":25},"name":"PhysicalDevice","qualname":"::adapter::PhysicalDevice","value":"PhysicalDevice<B: Backend>: fmt::Debug + Any + Send + Sync","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63}],"decl_id":null,"docs":" Represents a physical device (such as a GPU) capable of supporting the given backend.\n","sig":null,"attributes":[{"value":"/ Represents a physical device (such as a GPU) capable of supporting the given backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":31696,"byte_end":31785,"line_start":63,"line_end":63,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":33189,"byte_end":33193,"line_start":96,"line_end":96,"column_start":15,"column_end":19},"name":"open","qualname":"::adapter::PhysicalDevice::open","value":"pub unsafe fn open(&Self, &[(&B::QueueFamily, &[QueuePriority])], Features)\n-> Result<Gpu<B>, device::CreationError>","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Create a new [logical device][crate::device::Device] with the requested features.\n If `requested_features` is [empty][crate::Features::empty], then only\n the core features are supported.","sig":null,"attributes":[{"value":"/ Create a new [logical device][crate::device::Device] with the requested features.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":31861,"byte_end":31946,"line_start":65,"line_end":65,"column_start":5,"column_end":90}},{"value":"/ If `requested_features` is [empty][crate::Features::empty], then only","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":31951,"byte_end":32024,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ the core features are supported.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":32029,"byte_end":32065,"line_start":67,"line_end":67,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":32070,"byte_end":32073,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":32078,"byte_end":32093,"line_start":69,"line_end":69,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":32098,"byte_end":32101,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ * `families` - which [queue families][crate::queue::family::QueueFamily]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":32106,"byte_end":32182,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/   to create queues from. The implementation may allocate more processing time to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":32187,"byte_end":32271,"line_start":72,"line_end":72,"column_start":5,"column_end":89}},{"value":"/   the queues with higher [priority][QueuePriority].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":32276,"byte_end":32331,"line_start":73,"line_end":73,"column_start":5,"column_end":60}},{"value":"/ * `requested_features` - device features to enable. Must be a subset of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":32336,"byte_end":32411,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/   the [features][PhysicalDevice::features] supported by this device.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":32416,"byte_end":32488,"line_start":75,"line_end":75,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":32493,"byte_end":32496,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":32501,"byte_end":32513,"line_start":77,"line_end":77,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":32518,"byte_end":32521,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ - Returns `TooManyObjects` if the implementation can't create a new logical device.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":32526,"byte_end":32613,"line_start":79,"line_end":79,"column_start":5,"column_end":92}},{"value":"/ - Returns `MissingFeature` if the implementation does not support a requested feature.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":32618,"byte_end":32708,"line_start":80,"line_end":80,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":32713,"byte_end":32716,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":32721,"byte_end":32735,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":32740,"byte_end":32743,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":32748,"byte_end":32761,"line_start":84,"line_end":84,"column_start":5,"column_end":18}},{"value":"/ # extern crate gfx_backend_empty as empty;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":32766,"byte_end":32812,"line_start":85,"line_end":85,"column_start":5,"column_end":51}},{"value":"/ # extern crate gfx_hal;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":32817,"byte_end":32844,"line_start":86,"line_end":86,"column_start":5,"column_end":32}},{"value":"/ # fn main() {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":32849,"byte_end":32866,"line_start":87,"line_end":87,"column_start":5,"column_end":22}},{"value":"/ use gfx_hal::{adapter::PhysicalDevice, Features};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":32871,"byte_end":32924,"line_start":88,"line_end":88,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":32929,"byte_end":32932,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # let physical_device: empty::PhysicalDevice = return;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":32937,"byte_end":32995,"line_start":90,"line_end":90,"column_start":5,"column_end":63}},{"value":"/ # let family: empty::QueueFamily = return;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":33000,"byte_end":33046,"line_start":91,"line_end":91,"column_start":5,"column_end":51}},{"value":"/ # unsafe {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":33051,"byte_end":33065,"line_start":92,"line_end":92,"column_start":5,"column_end":19}},{"value":"/ let gpu = physical_device.open(&[(&family, &[1.0; 1])], Features::empty());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":33070,"byte_end":33149,"line_start":93,"line_end":93,"column_start":5,"column_end":84}},{"value":"/ # }}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":33154,"byte_end":33162,"line_start":94,"line_end":94,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":33167,"byte_end":33174,"line_start":95,"line_end":95,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":33409,"byte_end":33426,"line_start":103,"line_end":103,"column_start":8,"column_end":25},"name":"format_properties","qualname":"::adapter::PhysicalDevice::format_properties","value":"pub fn format_properties(&Self, Option<format::Format>) -> format::Properties","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Fetch details for a particular format.\n","sig":null,"attributes":[{"value":"/ Fetch details for a particular format.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":33359,"byte_end":33401,"line_start":102,"line_end":102,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":33550,"byte_end":33573,"line_start":106,"line_end":106,"column_start":8,"column_end":31},"name":"image_format_properties","qualname":"::adapter::PhysicalDevice::image_format_properties","value":"pub fn image_format_properties(&Self, format::Format, u8, image::Tiling,\n                               image::Usage, image::ViewCapabilities)\n-> Option<image::FormatProperties>","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Fetch details for a particular image format.\n","sig":null,"attributes":[{"value":"/ Fetch details for a particular image format.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":33494,"byte_end":33542,"line_start":105,"line_end":105,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":33869,"byte_end":33886,"line_start":116,"line_end":116,"column_start":8,"column_end":25},"name":"memory_properties","qualname":"::adapter::PhysicalDevice::memory_properties","value":"pub fn memory_properties(&Self) -> MemoryProperties","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Fetch details for the memory regions provided by the device.\n","sig":null,"attributes":[{"value":"/ Fetch details for the memory regions provided by the device.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":33797,"byte_end":33861,"line_start":115,"line_end":115,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":34082,"byte_end":34090,"line_start":120,"line_end":120,"column_start":8,"column_end":16},"name":"features","qualname":"::adapter::PhysicalDevice::features","value":"pub fn features(&Self) -> Features","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Returns the features of this `PhysicalDevice`. This usually depends on the graphics API being\n used, as well as the actual platform underneath.\n","sig":null,"attributes":[{"value":"/ Returns the features of this `PhysicalDevice`. This usually depends on the graphics API being","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":33920,"byte_end":34017,"line_start":118,"line_end":118,"column_start":5,"column_end":102}},{"value":"/ used, as well as the actual platform underneath.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":34022,"byte_end":34074,"line_start":119,"line_end":119,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":34306,"byte_end":34318,"line_start":124,"line_end":124,"column_start":8,"column_end":20},"name":"capabilities","qualname":"::adapter::PhysicalDevice::capabilities","value":"pub fn capabilities(&Self) -> Capabilities","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Returns the capabilities of this `PhysicalDevice`. Similarly to `Features`, they\n","sig":null,"attributes":[{"value":"/ Returns the capabilities of this `PhysicalDevice`. Similarly to `Features`, they","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":34116,"byte_end":34200,"line_start":122,"line_end":122,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":34413,"byte_end":34419,"line_start":127,"line_end":127,"column_start":8,"column_end":14},"name":"limits","qualname":"::adapter::PhysicalDevice::limits","value":"pub fn limits(&Self) -> Limits","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Returns the resource limits of this `PhysicalDevice`.\n","sig":null,"attributes":[{"value":"/ Returns the resource limits of this `PhysicalDevice`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":34348,"byte_end":34405,"line_start":126,"line_end":126,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":34507,"byte_end":34521,"line_start":130,"line_end":130,"column_start":8,"column_end":22},"name":"is_valid_cache","qualname":"::adapter::PhysicalDevice::is_valid_cache","value":"pub fn is_valid_cache(&Self, &[u8]) -> bool","parent":{"krate":0,"index":54},"children":[],"decl_id":null,"docs":" Check cache compatibility with the `PhysicalDevice`.\n","sig":null,"attributes":[{"value":"/ Check cache compatibility with the `PhysicalDevice`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":34443,"byte_end":34499,"line_start":129,"line_end":129,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1163},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":34762,"byte_end":34767,"line_start":140,"line_end":140,"column_start":5,"column_end":10},"name":"Other","qualname":"::adapter::DeviceType::Other","value":"DeviceType::Other","parent":{"krate":0,"index":1162},"children":[],"decl_id":null,"docs":" Other\n","sig":null,"attributes":[{"value":"/ Other","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":34748,"byte_end":34757,"line_start":139,"line_end":139,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1166},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":34796,"byte_end":34809,"line_start":142,"line_end":142,"column_start":5,"column_end":18},"name":"IntegratedGpu","qualname":"::adapter::DeviceType::IntegratedGpu","value":"DeviceType::IntegratedGpu","parent":{"krate":0,"index":1162},"children":[],"decl_id":null,"docs":" Integrated\n","sig":null,"attributes":[{"value":"/ Integrated","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":34777,"byte_end":34791,"line_start":141,"line_end":141,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1169},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":34836,"byte_end":34847,"line_start":144,"line_end":144,"column_start":5,"column_end":16},"name":"DiscreteGpu","qualname":"::adapter::DeviceType::DiscreteGpu","value":"DeviceType::DiscreteGpu","parent":{"krate":0,"index":1162},"children":[],"decl_id":null,"docs":" Discrete\n","sig":null,"attributes":[{"value":"/ Discrete","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":34819,"byte_end":34831,"line_start":143,"line_end":143,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1172},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":34882,"byte_end":34892,"line_start":146,"line_end":146,"column_start":5,"column_end":15},"name":"VirtualGpu","qualname":"::adapter::DeviceType::VirtualGpu","value":"DeviceType::VirtualGpu","parent":{"krate":0,"index":1162},"children":[],"decl_id":null,"docs":" Virtual / Hosted\n","sig":null,"attributes":[{"value":"/ Virtual / Hosted","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":34857,"byte_end":34877,"line_start":145,"line_end":145,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1175},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":34935,"byte_end":34938,"line_start":148,"line_end":148,"column_start":5,"column_end":8},"name":"Cpu","qualname":"::adapter::DeviceType::Cpu","value":"DeviceType::Cpu","parent":{"krate":0,"index":1162},"children":[],"decl_id":null,"docs":" CPU / Software Rendering\n","sig":null,"attributes":[{"value":"/ CPU / Software Rendering","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":34902,"byte_end":34930,"line_start":147,"line_end":147,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":1162},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":34731,"byte_end":34741,"line_start":138,"line_end":138,"column_start":10,"column_end":20},"name":"DeviceType","qualname":"::adapter::DeviceType","value":"pub enum DeviceType {\n    Other = ,\n    IntegratedGpu = ,\n    DiscreteGpu = ,\n    VirtualGpu = ,\n    Cpu = ,\n}","parent":null,"children":[{"krate":0,"index":1163},{"krate":0,"index":1166},{"krate":0,"index":1169},{"krate":0,"index":1172},{"krate":0,"index":1175}],"decl_id":null,"docs":" The type of a physical graphics device\n","sig":null,"attributes":[{"value":"/ The type of a physical graphics device","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":34577,"byte_end":34619,"line_start":135,"line_end":135,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1188},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":35109,"byte_end":35120,"line_start":154,"line_end":154,"column_start":12,"column_end":23},"name":"AdapterInfo","qualname":"::adapter::AdapterInfo","value":"AdapterInfo { name, vendor, device, device_type }","parent":null,"children":[{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":1192}],"decl_id":null,"docs":" Metadata about a backend [adapter][Adapter].\n","sig":null,"attributes":[{"value":"/ Metadata about a backend [adapter][Adapter].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":34947,"byte_end":34995,"line_start":151,"line_end":151,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":1189},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":35152,"byte_end":35156,"line_start":156,"line_end":156,"column_start":9,"column_end":13},"name":"name","qualname":"::adapter::AdapterInfo::name","value":"std::string::String","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Adapter name\n","sig":null,"attributes":[{"value":"/ Adapter name","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":35127,"byte_end":35143,"line_start":155,"line_end":155,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":1190},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":35210,"byte_end":35216,"line_start":158,"line_end":158,"column_start":9,"column_end":15},"name":"vendor","qualname":"::adapter::AdapterInfo::vendor","value":"usize","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" PCI ID of the device vendor\n","sig":null,"attributes":[{"value":"/ PCI ID of the device vendor","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":35170,"byte_end":35201,"line_start":157,"line_end":157,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1191},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":35262,"byte_end":35268,"line_start":160,"line_end":160,"column_start":9,"column_end":15},"name":"device","qualname":"::adapter::AdapterInfo::device","value":"usize","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" PCI ID of the device\n","sig":null,"attributes":[{"value":"/ PCI ID of the device","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":35229,"byte_end":35253,"line_start":159,"line_end":159,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1192},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":35308,"byte_end":35319,"line_start":162,"line_end":162,"column_start":9,"column_end":20},"name":"device_type","qualname":"::adapter::AdapterInfo::device_type","value":"adapter::DeviceType","parent":{"krate":0,"index":1188},"children":[],"decl_id":null,"docs":" Type of device\n","sig":null,"attributes":[{"value":"/ Type of device","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":35281,"byte_end":35299,"line_start":161,"line_end":161,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1204},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":35734,"byte_end":35741,"line_start":173,"line_end":173,"column_start":12,"column_end":19},"name":"Adapter","qualname":"::adapter::Adapter","value":"Adapter { info, physical_device, queue_families }","parent":null,"children":[{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208}],"decl_id":null,"docs":" Information about a graphics device, supported by the backend.","sig":null,"attributes":[{"value":"/ Information about a graphics device, supported by the backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":35336,"byte_end":35402,"line_start":165,"line_end":165,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":35403,"byte_end":35406,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ The list of available adapters is obtained by calling","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":35407,"byte_end":35464,"line_start":167,"line_end":167,"column_start":1,"column_end":58}},{"value":"/ [`Instance::enumerate_adapters`][crate::Instance::enumerate_adapters].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":35465,"byte_end":35539,"line_start":168,"line_end":168,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":35540,"byte_end":35543,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ To create a [`Gpu`][Gpu] from this type you can use the [`open`](PhysicalDevice::open)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":35544,"byte_end":35634,"line_start":170,"line_end":170,"column_start":1,"column_end":91}},{"value":"/ method on its [`physical_device`][Adapter::physical_device] field.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":35635,"byte_end":35705,"line_start":171,"line_end":171,"column_start":1,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1206},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":35812,"byte_end":35816,"line_start":175,"line_end":175,"column_start":9,"column_end":13},"name":"info","qualname":"::adapter::Adapter::info","value":"adapter::AdapterInfo","parent":{"krate":0,"index":1204},"children":[],"decl_id":null,"docs":" General information about this adapter.\n","sig":null,"attributes":[{"value":"/ General information about this adapter.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":35760,"byte_end":35803,"line_start":174,"line_end":174,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1207},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":35889,"byte_end":35904,"line_start":177,"line_end":177,"column_start":9,"column_end":24},"name":"physical_device","qualname":"::adapter::Adapter::physical_device","value":"<B as Backend>::PhysicalDevice","parent":{"krate":0,"index":1204},"children":[],"decl_id":null,"docs":" Actual [physical device][PhysicalDevice].\n","sig":null,"attributes":[{"value":"/ Actual [physical device][PhysicalDevice].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":35835,"byte_end":35880,"line_start":176,"line_end":176,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":1208},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":36020,"byte_end":36034,"line_start":179,"line_end":179,"column_start":9,"column_end":23},"name":"queue_families","qualname":"::adapter::Adapter::queue_families","value":"std::vec::Vec<<B as Backend>::QueueFamily>","parent":{"krate":0,"index":1204},"children":[],"decl_id":null,"docs":" [Queue families][crate::queue::family::QueueFamily] supported by this adapter.\n","sig":null,"attributes":[{"value":"/ [Queue families][crate::queue::family::QueueFamily] supported by this adapter.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":35929,"byte_end":36011,"line_start":178,"line_end":178,"column_start":5,"column_end":87}}]},{"kind":"Mod","id":{"krate":0,"index":64},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buffer","qualname":"::buffer","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":1212},{"krate":0,"index":1215},{"krate":0,"index":1217},{"krate":0,"index":1219},{"krate":0,"index":1221},{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1234},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1240},{"krate":0,"index":1245},{"krate":0,"index":1247},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1258},{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1264},{"krate":0,"index":1269},{"krate":0,"index":1271},{"krate":0,"index":1279},{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1289},{"krate":0,"index":1291},{"krate":0,"index":1293},{"krate":0,"index":1295},{"krate":0,"index":1298},{"krate":0,"index":1311},{"krate":0,"index":1313},{"krate":0,"index":1315},{"krate":0,"index":1317},{"krate":0,"index":1319},{"krate":0,"index":1334},{"krate":0,"index":1337},{"krate":0,"index":1339},{"krate":0,"index":1342},{"krate":0,"index":1344},{"krate":0,"index":1347},{"krate":0,"index":1349},{"krate":0,"index":1352},{"krate":0,"index":1354},{"krate":0,"index":1357},{"krate":0,"index":1360},{"krate":0,"index":78},{"krate":0,"index":1401},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1411},{"krate":0,"index":1413},{"krate":0,"index":1415},{"krate":0,"index":1417},{"krate":0,"index":1420},{"krate":0,"index":1436},{"krate":0,"index":1438},{"krate":0,"index":1440},{"krate":0,"index":1442},{"krate":0,"index":1444},{"krate":0,"index":1462},{"krate":0,"index":1465},{"krate":0,"index":1467},{"krate":0,"index":1470},{"krate":0,"index":1472},{"krate":0,"index":1475},{"krate":0,"index":1477},{"krate":0,"index":1480},{"krate":0,"index":1482},{"krate":0,"index":1485},{"krate":0,"index":1488}],"decl_id":null,"docs":" Memory buffers.","sig":null,"attributes":[{"value":"/ Memory buffers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":36060,"byte_end":36079,"line_start":1,"line_end":1,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":36080,"byte_end":36083,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Buffers interpret memory slices as linear contiguous data array.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":36084,"byte_end":36152,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":36153,"byte_end":36156,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ They can be used as shader resources, vertex buffers, index buffers or for","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":36157,"byte_end":36235,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"/ specifying the action commands for indirect execution.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":36236,"byte_end":36294,"line_start":6,"line_end":6,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":72},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":36397,"byte_end":36403,"line_start":11,"line_end":11,"column_start":10,"column_end":16},"name":"Offset","qualname":"::buffer::Offset","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" An offset inside a buffer, in bytes.\n","sig":null,"attributes":[{"value":"/ An offset inside a buffer, in bytes.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":36347,"byte_end":36387,"line_start":10,"line_end":10,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":73},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":36479,"byte_end":36485,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"name":"Stride","qualname":"::buffer::Stride","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" An stride between elements inside a buffer, in bytes.\n","sig":null,"attributes":[{"value":"/ An stride between elements inside a buffer, in bytes.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":36412,"byte_end":36469,"line_start":13,"line_end":13,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1212},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":36652,"byte_end":36660,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"SubRange","qualname":"::buffer::SubRange","value":"SubRange { offset, size }","parent":null,"children":[{"krate":0,"index":1213},{"krate":0,"index":1214}],"decl_id":null,"docs":" A subrange of the buffer.\n","sig":null,"attributes":[{"value":"/ A subrange of the buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":36494,"byte_end":36523,"line_start":16,"line_end":16,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1213},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":36703,"byte_end":36709,"line_start":21,"line_end":21,"column_start":9,"column_end":15},"name":"offset","qualname":"::buffer::SubRange::offset","value":"u64","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":" Offset to the subrange.\n","sig":null,"attributes":[{"value":"/ Offset to the subrange.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":36667,"byte_end":36694,"line_start":20,"line_end":20,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1214},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":36803,"byte_end":36807,"line_start":23,"line_end":23,"column_start":9,"column_end":13},"name":"size","qualname":"::buffer::SubRange::size","value":"std::option::Option<u64>","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":" Size of the subrange, or None for the remaining size of the buffer.\n","sig":null,"attributes":[{"value":"/ Size of the subrange, or None for the remaining size of the buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":36723,"byte_end":36794,"line_start":22,"line_end":22,"column_start":5,"column_end":76}}]},{"kind":"Const","id":{"krate":0,"index":75},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":36889,"byte_end":36894,"line_start":28,"line_end":28,"column_start":15,"column_end":20},"name":"WHOLE","qualname":"::buffer::SubRange::WHOLE","value":"Self","parent":{"krate":0,"index":74},"children":[],"decl_id":null,"docs":" Whole buffer subrange.\n","sig":null,"attributes":[{"value":"/ Whole buffer subrange.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":36848,"byte_end":36874,"line_start":27,"line_end":27,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":37053,"byte_end":37060,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"size_to","qualname":"<SubRange>::size_to","value":"pub fn size_to(&Self, Offset) -> Offset","parent":null,"children":[],"decl_id":null,"docs":" Return the stored size, if present, or computed size based on the limit.\n","sig":null,"attributes":[{"value":"/ Return the stored size, if present, or computed size based on the limit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":36965,"byte_end":37041,"line_start":33,"line_end":33,"column_start":5,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":77},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":37180,"byte_end":37185,"line_start":40,"line_end":40,"column_start":10,"column_end":15},"name":"State","qualname":"::buffer::State","value":"Access","parent":null,"children":[],"decl_id":null,"docs":" Buffer state.\n","sig":null,"attributes":[{"value":"/ Buffer state.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":37153,"byte_end":37170,"line_start":39,"line_end":39,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1249},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":37379,"byte_end":37390,"line_start":47,"line_end":47,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::buffer::CreationError::OutOfMemory","value":"CreationError::OutOfMemory(OutOfMemory)","parent":{"krate":0,"index":1231},"children":[],"decl_id":null,"docs":" Out of either host or device memory.\n","sig":null,"attributes":[{"value":"/ Out of either host or device memory.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":37308,"byte_end":37348,"line_start":45,"line_end":45,"column_start":5,"column_end":45}},{"value":"error(transparent)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":37353,"byte_end":37374,"line_start":46,"line_end":46,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1252},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":37596,"byte_end":37612,"line_start":52,"line_end":52,"column_start":5,"column_end":21},"name":"UnsupportedUsage","qualname":"::buffer::CreationError::UnsupportedUsage","value":"CreationError::UnsupportedUsage(Usage)","parent":{"krate":0,"index":1231},"children":[],"decl_id":null,"docs":" Requested buffer usage is not supported.","sig":null,"attributes":[{"value":"/ Requested buffer usage is not supported.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":37417,"byte_end":37461,"line_start":48,"line_end":48,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":37466,"byte_end":37469,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Older GL version don't support constant buffers or multiple usage flags.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":37474,"byte_end":37550,"line_start":50,"line_end":50,"column_start":5,"column_end":81}},{"value":"error(\"Unsupported usage: {0:?}\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":37555,"byte_end":37591,"line_start":51,"line_end":51,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":1231},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":37288,"byte_end":37301,"line_start":44,"line_end":44,"column_start":10,"column_end":23},"name":"CreationError","qualname":"::buffer::CreationError","value":"pub enum CreationError { OutOfMemory(OutOfMemory), UnsupportedUsage(Usage), }","parent":null,"children":[{"krate":0,"index":1249},{"krate":0,"index":1252}],"decl_id":null,"docs":" Error creating a buffer.\n","sig":null,"attributes":[{"value":"/ Error creating a buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":37197,"byte_end":37225,"line_start":42,"line_end":42,"column_start":1,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1273},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":37815,"byte_end":37826,"line_start":60,"line_end":60,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::buffer::ViewCreationError::OutOfMemory","value":"ViewCreationError::OutOfMemory(OutOfMemory)","parent":{"krate":0,"index":1255},"children":[],"decl_id":null,"docs":" Out of either host or device memory.\n","sig":null,"attributes":[{"value":"/ Out of either host or device memory.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":37744,"byte_end":37784,"line_start":58,"line_end":58,"column_start":5,"column_end":45}},{"value":"error(transparent)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":37789,"byte_end":37810,"line_start":59,"line_end":59,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1276},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":37940,"byte_end":37957,"line_start":63,"line_end":63,"column_start":5,"column_end":22},"name":"UnsupportedFormat","qualname":"::buffer::ViewCreationError::UnsupportedFormat","value":"ViewCreationError::UnsupportedFormat(Option<Format>)","parent":{"krate":0,"index":1255},"children":[],"decl_id":null,"docs":" Buffer view format is not supported.\n","sig":null,"attributes":[{"value":"/ Buffer view format is not supported.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":37853,"byte_end":37893,"line_start":61,"line_end":61,"column_start":5,"column_end":45}},{"value":"error(\"Unsupported format: {0:?}\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":37898,"byte_end":37935,"line_start":62,"line_end":62,"column_start":5,"column_end":42}}]},{"kind":"Enum","id":{"krate":0,"index":1255},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":37720,"byte_end":37737,"line_start":57,"line_end":57,"column_start":10,"column_end":27},"name":"ViewCreationError","qualname":"::buffer::ViewCreationError","value":"pub enum ViewCreationError {\n    OutOfMemory(OutOfMemory),\n    UnsupportedFormat(Option<Format>),\n}","parent":null,"children":[{"krate":0,"index":1273},{"krate":0,"index":1276}],"decl_id":null,"docs":" Error creating a buffer view.\n","sig":null,"attributes":[{"value":"/ Error creating a buffer view.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":37624,"byte_end":37657,"line_start":55,"line_end":55,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1279},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":38099,"byte_end":38104,"line_start":69,"line_end":69,"column_start":16,"column_end":21},"name":"Usage","qualname":"::buffer::Usage","value":"Usage {  }","parent":null,"children":[{"krate":0,"index":1280}],"decl_id":null,"docs":" Buffer usage flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1320},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":38138,"byte_end":38150,"line_start":71,"line_end":71,"column_start":15,"column_end":27},"name":"TRANSFER_SRC","qualname":"::buffer::Usage::TRANSFER_SRC","value":"Usage","parent":{"krate":0,"index":1319},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1321},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":38185,"byte_end":38197,"line_start":73,"line_end":73,"column_start":15,"column_end":27},"name":"TRANSFER_DST","qualname":"::buffer::Usage::TRANSFER_DST","value":"Usage","parent":{"krate":0,"index":1319},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1322},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":38231,"byte_end":38244,"line_start":75,"line_end":75,"column_start":15,"column_end":28},"name":"UNIFORM_TEXEL","qualname":"::buffer::Usage::UNIFORM_TEXEL","value":"Usage","parent":{"krate":0,"index":1319},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1323},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":38278,"byte_end":38291,"line_start":77,"line_end":77,"column_start":15,"column_end":28},"name":"STORAGE_TEXEL","qualname":"::buffer::Usage::STORAGE_TEXEL","value":"Usage","parent":{"krate":0,"index":1319},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1324},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":38325,"byte_end":38332,"line_start":79,"line_end":79,"column_start":15,"column_end":22},"name":"UNIFORM","qualname":"::buffer::Usage::UNIFORM","value":"Usage","parent":{"krate":0,"index":1319},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1325},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":38367,"byte_end":38374,"line_start":81,"line_end":81,"column_start":15,"column_end":22},"name":"STORAGE","qualname":"::buffer::Usage::STORAGE","value":"Usage","parent":{"krate":0,"index":1319},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1326},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":38409,"byte_end":38414,"line_start":83,"line_end":83,"column_start":15,"column_end":20},"name":"INDEX","qualname":"::buffer::Usage::INDEX","value":"Usage","parent":{"krate":0,"index":1319},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1327},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":38449,"byte_end":38455,"line_start":85,"line_end":85,"column_start":15,"column_end":21},"name":"VERTEX","qualname":"::buffer::Usage::VERTEX","value":"Usage","parent":{"krate":0,"index":1319},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1328},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":38490,"byte_end":38498,"line_start":87,"line_end":87,"column_start":15,"column_end":23},"name":"INDIRECT","qualname":"::buffer::Usage::INDIRECT","value":"Usage","parent":{"krate":0,"index":1319},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":38608,"byte_end":38620,"line_start":93,"line_end":93,"column_start":12,"column_end":24},"name":"can_transfer","qualname":"<Usage>::can_transfer","value":"pub fn can_transfer(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the buffer can be used in transfer operations.\n","sig":null,"attributes":[{"value":"/ Returns if the buffer can be used in transfer operations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":38535,"byte_end":38596,"line_start":92,"line_end":92,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1401},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":38898,"byte_end":38904,"line_start":103,"line_end":103,"column_start":16,"column_end":22},"name":"Access","qualname":"::buffer::Access","value":"Access {  }","parent":null,"children":[{"krate":0,"index":1402}],"decl_id":null,"docs":" Buffer access flags.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1445},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":38988,"byte_end":39009,"line_start":105,"line_end":105,"column_start":15,"column_end":36},"name":"INDIRECT_COMMAND_READ","qualname":"::buffer::Access::INDIRECT_COMMAND_READ","value":"Access","parent":{"krate":0,"index":1444},"children":[],"decl_id":null,"docs":" Read commands instruction for indirect execution.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1446},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":39309,"byte_end":39326,"line_start":110,"line_end":110,"column_start":15,"column_end":32},"name":"INDEX_BUFFER_READ","qualname":"::buffer::Access::INDEX_BUFFER_READ","value":"Access","parent":{"krate":0,"index":1444},"children":[],"decl_id":null,"docs":" Read index values for indexed draw commands.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1447},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":39521,"byte_end":39539,"line_start":113,"line_end":113,"column_start":15,"column_end":33},"name":"VERTEX_BUFFER_READ","qualname":"::buffer::Access::VERTEX_BUFFER_READ","value":"Access","parent":{"krate":0,"index":1444},"children":[],"decl_id":null,"docs":" Read vertices from vertex buffer for draw commands in the [`VERTEX_INPUT`](\n ../pso/struct.PipelineStage.html#associatedconstant.VERTEX_INPUT) stage.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1448},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":39573,"byte_end":39585,"line_start":115,"line_end":115,"column_start":15,"column_end":27},"name":"UNIFORM_READ","qualname":"::buffer::Access::UNIFORM_READ","value":"Access","parent":{"krate":0,"index":1444},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1449},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":39619,"byte_end":39630,"line_start":117,"line_end":117,"column_start":15,"column_end":26},"name":"SHADER_READ","qualname":"::buffer::Access::SHADER_READ","value":"Access","parent":{"krate":0,"index":1444},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1450},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":39665,"byte_end":39677,"line_start":119,"line_end":119,"column_start":15,"column_end":27},"name":"SHADER_WRITE","qualname":"::buffer::Access::SHADER_WRITE","value":"Access","parent":{"krate":0,"index":1444},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1451},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":39712,"byte_end":39725,"line_start":121,"line_end":121,"column_start":15,"column_end":28},"name":"TRANSFER_READ","qualname":"::buffer::Access::TRANSFER_READ","value":"Access","parent":{"krate":0,"index":1444},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1452},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":39761,"byte_end":39775,"line_start":123,"line_end":123,"column_start":15,"column_end":29},"name":"TRANSFER_WRITE","qualname":"::buffer::Access::TRANSFER_WRITE","value":"Access","parent":{"krate":0,"index":1444},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1453},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":39812,"byte_end":39821,"line_start":125,"line_end":125,"column_start":15,"column_end":24},"name":"HOST_READ","qualname":"::buffer::Access::HOST_READ","value":"Access","parent":{"krate":0,"index":1444},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1454},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":39858,"byte_end":39868,"line_start":127,"line_end":127,"column_start":15,"column_end":25},"name":"HOST_WRITE","qualname":"::buffer::Access::HOST_WRITE","value":"Access","parent":{"krate":0,"index":1444},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1455},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":39905,"byte_end":39916,"line_start":129,"line_end":129,"column_start":15,"column_end":26},"name":"MEMORY_READ","qualname":"::buffer::Access::MEMORY_READ","value":"Access","parent":{"krate":0,"index":1444},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1456},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":39953,"byte_end":39965,"line_start":131,"line_end":131,"column_start":15,"column_end":27},"name":"MEMORY_WRITE","qualname":"::buffer::Access::MEMORY_WRITE","value":"Access","parent":{"krate":0,"index":1444},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":80},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"command","qualname":"::command","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":95},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":157},{"krate":0,"index":160},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":1627},{"krate":0,"index":1629},{"krate":0,"index":1630},{"krate":0,"index":1631},{"krate":0,"index":1634},{"krate":0,"index":1635},{"krate":0,"index":1637},{"krate":0,"index":1639},{"krate":0,"index":1641},{"krate":0,"index":1643},{"krate":0,"index":1625},{"krate":0,"index":1646},{"krate":0,"index":1653},{"krate":0,"index":1655},{"krate":0,"index":1657},{"krate":0,"index":1659},{"krate":0,"index":1661},{"krate":0,"index":1670},{"krate":0,"index":1673},{"krate":0,"index":1675},{"krate":0,"index":1678},{"krate":0,"index":1680},{"krate":0,"index":1683},{"krate":0,"index":1685},{"krate":0,"index":1688},{"krate":0,"index":1690},{"krate":0,"index":1693},{"krate":0,"index":1696},{"krate":0,"index":1719},{"krate":0,"index":1724},{"krate":0,"index":1726},{"krate":0,"index":1727},{"krate":0,"index":1729},{"krate":0,"index":1730},{"krate":0,"index":1732},{"krate":0,"index":1737},{"krate":0,"index":1739},{"krate":0,"index":1744},{"krate":0,"index":1748},{"krate":0,"index":1756},{"krate":0,"index":176},{"krate":0,"index":180}],"decl_id":null,"docs":" Command buffers.","sig":null,"attributes":[{"value":"/ Command buffers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":39987,"byte_end":40007,"line_start":1,"line_end":1,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":40008,"byte_end":40011,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A command buffer collects a list of commands to be submitted to the device.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":40012,"byte_end":40091,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":40092,"byte_end":40095,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Each command buffer has specific capabilities for graphics, compute or transfer operations,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":40096,"byte_end":40191,"line_start":5,"line_end":5,"column_start":1,"column_end":96}},{"value":"/ and can be either a *primary* command buffer or a *secondary* command buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":40192,"byte_end":40273,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":40274,"byte_end":40277,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Operations are always initiated by a primary command buffer,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":40278,"byte_end":40342,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"/ but a primary command buffer can contain calls to secondary command buffers","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":40343,"byte_end":40422,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ that contain snippets of commands that do specific things, similar to function calls.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":40423,"byte_end":40512,"line_start":10,"line_end":10,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":40513,"byte_end":40516,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ All the possible commands are exposed by the [`CommandBuffer`][CommandBuffer] trait.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":40517,"byte_end":40605,"line_start":12,"line_end":12,"column_start":1,"column_end":89}}]},{"kind":"Union","id":{"krate":0,"index":1538},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":64622,"byte_end":64632,"line_start":7,"line_end":7,"column_start":11,"column_end":21},"name":"ClearColor","qualname":"::command::clear::ClearColor","value":"ClearColor { float32, sint32, uint32 }","parent":null,"children":[{"krate":0,"index":1539},{"krate":0,"index":1541},{"krate":0,"index":1543}],"decl_id":null,"docs":" A clear color union, which can be either `f32`, `i32`, or `u32`.\n","sig":null,"attributes":[{"value":"/ A clear color union, which can be either `f32`, `i32`, or `u32`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":64509,"byte_end":64577,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":64578,"byte_end":64588,"line_start":5,"line_end":5,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1539},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":64665,"byte_end":64672,"line_start":9,"line_end":9,"column_start":9,"column_end":16},"name":"float32","qualname":"::command::clear::ClearColor::float32","value":"[f32; 4]","parent":{"krate":0,"index":1538},"children":[],"decl_id":null,"docs":" `f32` variant\n","sig":null,"attributes":[{"value":"/ `f32` variant","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":64639,"byte_end":64656,"line_start":8,"line_end":8,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1541},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":64714,"byte_end":64720,"line_start":11,"line_end":11,"column_start":9,"column_end":15},"name":"sint32","qualname":"::command::clear::ClearColor::sint32","value":"[i32; 4]","parent":{"krate":0,"index":1538},"children":[],"decl_id":null,"docs":" `i32` variant\n","sig":null,"attributes":[{"value":"/ `i32` variant","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":64688,"byte_end":64705,"line_start":10,"line_end":10,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1543},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":64762,"byte_end":64768,"line_start":13,"line_end":13,"column_start":9,"column_end":15},"name":"uint32","qualname":"::command::clear::ClearColor::uint32","value":"[u32; 4]","parent":{"krate":0,"index":1538},"children":[],"decl_id":null,"docs":" `u32` variant\n","sig":null,"attributes":[{"value":"/ `u32` variant","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":64736,"byte_end":64753,"line_start":12,"line_end":12,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1548},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":65086,"byte_end":65103,"line_start":26,"line_end":26,"column_start":12,"column_end":29},"name":"ClearDepthStencil","qualname":"::command::clear::ClearDepthStencil","value":"ClearDepthStencil { depth, stencil }","parent":null,"children":[{"krate":0,"index":1549},{"krate":0,"index":1550}],"decl_id":null,"docs":" A combination of depth and stencil clear values.\n","sig":null,"attributes":[{"value":"/ A combination of depth and stencil clear values.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":64918,"byte_end":64970,"line_start":22,"line_end":22,"column_start":1,"column_end":53}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":64971,"byte_end":64981,"line_start":23,"line_end":23,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1549},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":65134,"byte_end":65139,"line_start":28,"line_end":28,"column_start":9,"column_end":14},"name":"depth","qualname":"::command::clear::ClearDepthStencil::depth","value":"f32","parent":{"krate":0,"index":1548},"children":[],"decl_id":null,"docs":" Depth value\n","sig":null,"attributes":[{"value":"/ Depth value","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":65110,"byte_end":65125,"line_start":27,"line_end":27,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":1550},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":65176,"byte_end":65183,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"name":"stencil","qualname":"::command::clear::ClearDepthStencil::stencil","value":"u32","parent":{"krate":0,"index":1548},"children":[],"decl_id":null,"docs":" Stencil value\n","sig":null,"attributes":[{"value":"/ Stencil value","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":65150,"byte_end":65167,"line_start":29,"line_end":29,"column_start":5,"column_end":22}}]},{"kind":"Union","id":{"krate":0,"index":1556},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":65417,"byte_end":65427,"line_start":39,"line_end":39,"column_start":11,"column_end":21},"name":"ClearValue","qualname":"::command::clear::ClearValue","value":"ClearValue { color, depth_stencil }","parent":null,"children":[{"krate":0,"index":1557},{"krate":0,"index":1558},{"krate":0,"index":1559}],"decl_id":null,"docs":" A set of clear values for a single attachment.","sig":null,"attributes":[{"value":"/ A set of clear values for a single attachment.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":65193,"byte_end":65243,"line_start":33,"line_end":33,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":65244,"byte_end":65247,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ These are passed to a command buffer by","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":65248,"byte_end":65291,"line_start":35,"line_end":35,"column_start":1,"column_end":44}},{"value":"/ [beginning a render pass][crate::command::CommandBuffer::begin_render_pass].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":65292,"byte_end":65372,"line_start":36,"line_end":36,"column_start":1,"column_end":81}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":65373,"byte_end":65383,"line_start":37,"line_end":37,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1557},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":65458,"byte_end":65463,"line_start":41,"line_end":41,"column_start":9,"column_end":14},"name":"color","qualname":"::command::clear::ClearValue::color","value":"command::clear::ClearColor","parent":{"krate":0,"index":1556},"children":[],"decl_id":null,"docs":" Clear color\n","sig":null,"attributes":[{"value":"/ Clear color","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":65434,"byte_end":65449,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":1558},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":65517,"byte_end":65530,"line_start":43,"line_end":43,"column_start":9,"column_end":22},"name":"depth_stencil","qualname":"::command::clear::ClearValue::depth_stencil","value":"command::clear::ClearDepthStencil","parent":{"krate":0,"index":1556},"children":[],"decl_id":null,"docs":" Clear depth and stencil\n","sig":null,"attributes":[{"value":"/ Clear depth and stencil","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":65481,"byte_end":65508,"line_start":42,"line_end":42,"column_start":5,"column_end":32}}]},{"kind":"StructVariant","id":{"krate":0,"index":1565},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":66118,"byte_end":66123,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Color","qualname":"::command::clear::AttachmentClear::Color","value":"AttachmentClear::Color { index, value }","parent":{"krate":0,"index":1564},"children":[],"decl_id":null,"docs":" Clear color attachment.\n","sig":null,"attributes":[{"value":"/ Clear color attachment.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":66086,"byte_end":66113,"line_start":65,"line_end":65,"column_start":5,"column_end":32}}]},{"kind":"StructVariant","id":{"krate":0,"index":1568},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":66317,"byte_end":66329,"line_start":73,"line_end":73,"column_start":5,"column_end":17},"name":"DepthStencil","qualname":"::command::clear::AttachmentClear::DepthStencil","value":"AttachmentClear::DepthStencil { depth, stencil }","parent":{"krate":0,"index":1564},"children":[],"decl_id":null,"docs":" Clear depth-stencil attachment.\n","sig":null,"attributes":[{"value":"/ Clear depth-stencil attachment.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":66277,"byte_end":66312,"line_start":72,"line_end":72,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":1564},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":66064,"byte_end":66079,"line_start":64,"line_end":64,"column_start":10,"column_end":25},"name":"AttachmentClear","qualname":"::command::clear::AttachmentClear","value":"pub enum AttachmentClear {\n    Color {\n        index: usize,\n        value: ClearColor,\n    },\n    DepthStencil {\n        depth: Option<pso::DepthValue>,\n        stencil: Option<pso::StencilValue>,\n    },\n}","parent":null,"children":[{"krate":0,"index":1565},{"krate":0,"index":1568}],"decl_id":null,"docs":" Attachment clear description for the current subpass.\n","sig":null,"attributes":[{"value":"/ Attachment clear description for the current subpass.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":65967,"byte_end":66024,"line_start":62,"line_end":62,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1576},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":66784,"byte_end":66794,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"BufferCopy","qualname":"::command::structs::BufferCopy","value":"BufferCopy { src, dst, size }","parent":null,"children":[{"krate":0,"index":1577},{"krate":0,"index":1578},{"krate":0,"index":1579}],"decl_id":null,"docs":" Specifies a source region and a destination\n region in a buffer for copying.  All values\n are in units of bytes.\n","sig":null,"attributes":[{"value":"/ Specifies a source region and a destination","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":66557,"byte_end":66604,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"/ region in a buffer for copying.  All values","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":66605,"byte_end":66652,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"/ are in units of bytes.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":66653,"byte_end":66679,"line_start":7,"line_end":7,"column_start":1,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":1577},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":66842,"byte_end":66845,"line_start":12,"line_end":12,"column_start":9,"column_end":12},"name":"src","qualname":"::command::structs::BufferCopy::src","value":"u64","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Buffer region source offset.\n","sig":null,"attributes":[{"value":"/ Buffer region source offset.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":66801,"byte_end":66833,"line_start":11,"line_end":11,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":1578},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":66913,"byte_end":66916,"line_start":14,"line_end":14,"column_start":9,"column_end":12},"name":"dst","qualname":"::command::structs::BufferCopy::dst","value":"u64","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Buffer region destination offset.\n","sig":null,"attributes":[{"value":"/ Buffer region destination offset.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":66867,"byte_end":66904,"line_start":13,"line_end":13,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1579},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":66963,"byte_end":66967,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"name":"size","qualname":"::command::structs::BufferCopy::size","value":"u64","parent":{"krate":0,"index":1576},"children":[],"decl_id":null,"docs":" Region size.\n","sig":null,"attributes":[{"value":"/ Region size.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":66938,"byte_end":66954,"line_start":15,"line_end":15,"column_start":5,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":1585},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":67179,"byte_end":67188,"line_start":23,"line_end":23,"column_start":12,"column_end":21},"name":"ImageCopy","qualname":"::command::structs::ImageCopy","value":"ImageCopy { src_subresource, src_offset, dst_subresource, dst_offset, extent }","parent":null,"children":[{"krate":0,"index":1586},{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1589},{"krate":0,"index":1590}],"decl_id":null,"docs":" Bundles together all the parameters needed to copy data from one `Image`\n to another.\n","sig":null,"attributes":[{"value":"/ Bundles together all the parameters needed to copy data from one `Image`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":66988,"byte_end":67064,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ to another.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":67065,"byte_end":67080,"line_start":20,"line_end":20,"column_start":1,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":1586},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":67243,"byte_end":67258,"line_start":25,"line_end":25,"column_start":9,"column_end":24},"name":"src_subresource","qualname":"::command::structs::ImageCopy::src_subresource","value":"image::SubresourceLayers","parent":{"krate":0,"index":1585},"children":[],"decl_id":null,"docs":" The image subresource to copy from.\n","sig":null,"attributes":[{"value":"/ The image subresource to copy from.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":67195,"byte_end":67234,"line_start":24,"line_end":24,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1587},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":67321,"byte_end":67331,"line_start":27,"line_end":27,"column_start":9,"column_end":19},"name":"src_offset","qualname":"::command::structs::ImageCopy::src_offset","value":"image::Offset","parent":{"krate":0,"index":1585},"children":[],"decl_id":null,"docs":" The source offset.\n","sig":null,"attributes":[{"value":"/ The source offset.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":67290,"byte_end":67312,"line_start":26,"line_end":26,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":1588},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":67398,"byte_end":67413,"line_start":29,"line_end":29,"column_start":9,"column_end":24},"name":"dst_subresource","qualname":"::command::structs::ImageCopy::dst_subresource","value":"image::SubresourceLayers","parent":{"krate":0,"index":1585},"children":[],"decl_id":null,"docs":" The image subresource to copy to.\n","sig":null,"attributes":[{"value":"/ The image subresource to copy to.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":67352,"byte_end":67389,"line_start":28,"line_end":28,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1589},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":67481,"byte_end":67491,"line_start":31,"line_end":31,"column_start":9,"column_end":19},"name":"dst_offset","qualname":"::command::structs::ImageCopy::dst_offset","value":"image::Offset","parent":{"krate":0,"index":1585},"children":[],"decl_id":null,"docs":" The destination offset.\n","sig":null,"attributes":[{"value":"/ The destination offset.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":67445,"byte_end":67472,"line_start":30,"line_end":30,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1590},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":67558,"byte_end":67564,"line_start":33,"line_end":33,"column_start":9,"column_end":15},"name":"extent","qualname":"::command::structs::ImageCopy::extent","value":"image::Extent","parent":{"krate":0,"index":1585},"children":[],"decl_id":null,"docs":" The extent of the region to copy.\n","sig":null,"attributes":[{"value":"/ The extent of the region to copy.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":67512,"byte_end":67549,"line_start":32,"line_end":32,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1595},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":67777,"byte_end":67792,"line_start":40,"line_end":40,"column_start":12,"column_end":27},"name":"BufferImageCopy","qualname":"::command::structs::BufferImageCopy","value":"BufferImageCopy { buffer_offset, buffer_width, buffer_height, image_layers, image_offset, image_extent }","parent":null,"children":[{"krate":0,"index":1596},{"krate":0,"index":1597},{"krate":0,"index":1598},{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1601}],"decl_id":null,"docs":" Bundles together all the parameters needed to copy a buffer\n to an image or vice-versa.\n","sig":null,"attributes":[{"value":"/ Bundles together all the parameters needed to copy a buffer","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":67584,"byte_end":67647,"line_start":36,"line_end":36,"column_start":1,"column_end":64}},{"value":"/ to an image or vice-versa.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":67648,"byte_end":67678,"line_start":37,"line_end":37,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":1596},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":67835,"byte_end":67848,"line_start":42,"line_end":42,"column_start":9,"column_end":22},"name":"buffer_offset","qualname":"::command::structs::BufferImageCopy::buffer_offset","value":"u64","parent":{"krate":0,"index":1595},"children":[],"decl_id":null,"docs":" Buffer offset in bytes.\n","sig":null,"attributes":[{"value":"/ Buffer offset in bytes.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":67799,"byte_end":67826,"line_start":41,"line_end":41,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1597},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":67917,"byte_end":67929,"line_start":44,"line_end":44,"column_start":9,"column_end":21},"name":"buffer_width","qualname":"::command::structs::BufferImageCopy::buffer_width","value":"u32","parent":{"krate":0,"index":1595},"children":[],"decl_id":null,"docs":" Width of a buffer 'row' in texels.\n","sig":null,"attributes":[{"value":"/ Width of a buffer 'row' in texels.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":67870,"byte_end":67908,"line_start":43,"line_end":43,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1598},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":67996,"byte_end":68009,"line_start":46,"line_end":46,"column_start":9,"column_end":22},"name":"buffer_height","qualname":"::command::structs::BufferImageCopy::buffer_height","value":"u32","parent":{"krate":0,"index":1595},"children":[],"decl_id":null,"docs":" Height of a buffer 'image slice' in texels.\n","sig":null,"attributes":[{"value":"/ Height of a buffer 'image slice' in texels.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":67940,"byte_end":67987,"line_start":45,"line_end":45,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1599},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":68055,"byte_end":68067,"line_start":48,"line_end":48,"column_start":9,"column_end":21},"name":"image_layers","qualname":"::command::structs::BufferImageCopy::image_layers","value":"image::SubresourceLayers","parent":{"krate":0,"index":1595},"children":[],"decl_id":null,"docs":" The image subresource.\n","sig":null,"attributes":[{"value":"/ The image subresource.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":68020,"byte_end":68046,"line_start":47,"line_end":47,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":1600},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":68159,"byte_end":68171,"line_start":50,"line_end":50,"column_start":9,"column_end":21},"name":"image_offset","qualname":"::command::structs::BufferImageCopy::image_offset","value":"image::Offset","parent":{"krate":0,"index":1595},"children":[],"decl_id":null,"docs":" The offset of the portion of the image to copy.\n","sig":null,"attributes":[{"value":"/ The offset of the portion of the image to copy.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":68099,"byte_end":68150,"line_start":49,"line_end":49,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1601},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":68246,"byte_end":68258,"line_start":52,"line_end":52,"column_start":9,"column_end":21},"name":"image_extent","qualname":"::command::structs::BufferImageCopy::image_extent","value":"image::Extent","parent":{"krate":0,"index":1595},"children":[],"decl_id":null,"docs":" Size of the portion of the image to copy.\n","sig":null,"attributes":[{"value":"/ Size of the portion of the image to copy.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":68192,"byte_end":68237,"line_start":51,"line_end":51,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1606},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":68498,"byte_end":68510,"line_start":60,"line_end":60,"column_start":12,"column_end":24},"name":"ImageResolve","qualname":"::command::structs::ImageResolve","value":"ImageResolve { src_subresource, src_offset, dst_subresource, dst_offset, extent }","parent":null,"children":[{"krate":0,"index":1607},{"krate":0,"index":1608},{"krate":0,"index":1609},{"krate":0,"index":1610},{"krate":0,"index":1611}],"decl_id":null,"docs":" Parameters for an image resolve operation,\n where a multi-sampled image is copied into a single-sampled\n image.\n","sig":null,"attributes":[{"value":"/ Parameters for an image resolve operation,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":68278,"byte_end":68324,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/ where a multi-sampled image is copied into a single-sampled","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":68325,"byte_end":68388,"line_start":56,"line_end":56,"column_start":1,"column_end":64}},{"value":"/ image.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":68389,"byte_end":68399,"line_start":57,"line_end":57,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1607},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":68554,"byte_end":68569,"line_start":62,"line_end":62,"column_start":9,"column_end":24},"name":"src_subresource","qualname":"::command::structs::ImageResolve::src_subresource","value":"image::SubresourceLayers","parent":{"krate":0,"index":1606},"children":[],"decl_id":null,"docs":" Source image and layers.\n","sig":null,"attributes":[{"value":"/ Source image and layers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":68517,"byte_end":68545,"line_start":61,"line_end":61,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":1608},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":68634,"byte_end":68644,"line_start":64,"line_end":64,"column_start":9,"column_end":19},"name":"src_offset","qualname":"::command::structs::ImageResolve::src_offset","value":"image::Offset","parent":{"krate":0,"index":1606},"children":[],"decl_id":null,"docs":" Source image offset.\n","sig":null,"attributes":[{"value":"/ Source image offset.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":68601,"byte_end":68625,"line_start":63,"line_end":63,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1609},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":68707,"byte_end":68722,"line_start":66,"line_end":66,"column_start":9,"column_end":24},"name":"dst_subresource","qualname":"::command::structs::ImageResolve::dst_subresource","value":"image::SubresourceLayers","parent":{"krate":0,"index":1606},"children":[],"decl_id":null,"docs":" Destination image and layers.\n","sig":null,"attributes":[{"value":"/ Destination image and layers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":68665,"byte_end":68698,"line_start":65,"line_end":65,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1610},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":68792,"byte_end":68802,"line_start":68,"line_end":68,"column_start":9,"column_end":19},"name":"dst_offset","qualname":"::command::structs::ImageResolve::dst_offset","value":"image::Offset","parent":{"krate":0,"index":1606},"children":[],"decl_id":null,"docs":" Destination image offset.\n","sig":null,"attributes":[{"value":"/ Destination image offset.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":68754,"byte_end":68783,"line_start":67,"line_end":67,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1611},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":68849,"byte_end":68855,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"name":"extent","qualname":"::command::structs::ImageResolve::extent","value":"image::Extent","parent":{"krate":0,"index":1606},"children":[],"decl_id":null,"docs":" Image extent.\n","sig":null,"attributes":[{"value":"/ Image extent.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":68823,"byte_end":68840,"line_start":69,"line_end":69,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1616},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":69111,"byte_end":69120,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"ImageBlit","qualname":"::command::structs::ImageBlit","value":"ImageBlit { src_subresource, src_bounds, dst_subresource, dst_bounds }","parent":null,"children":[{"krate":0,"index":1617},{"krate":0,"index":1618},{"krate":0,"index":1619},{"krate":0,"index":1620}],"decl_id":null,"docs":" Parameters for an image blit operation, where a portion of one image\n is copied into another, possibly with scaling and filtering.\n","sig":null,"attributes":[{"value":"/ Parameters for an image blit operation, where a portion of one image","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":68875,"byte_end":68947,"line_start":73,"line_end":73,"column_start":1,"column_end":73}},{"value":"/ is copied into another, possibly with scaling and filtering.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":68948,"byte_end":69012,"line_start":74,"line_end":74,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":1617},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":69164,"byte_end":69179,"line_start":79,"line_end":79,"column_start":9,"column_end":24},"name":"src_subresource","qualname":"::command::structs::ImageBlit::src_subresource","value":"image::SubresourceLayers","parent":{"krate":0,"index":1616},"children":[],"decl_id":null,"docs":" Source image and layers.\n","sig":null,"attributes":[{"value":"/ Source image and layers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":69127,"byte_end":69155,"line_start":78,"line_end":78,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":1618},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":69244,"byte_end":69254,"line_start":81,"line_end":81,"column_start":9,"column_end":19},"name":"src_bounds","qualname":"::command::structs::ImageBlit::src_bounds","value":"std::ops::Range<image::Offset>","parent":{"krate":0,"index":1616},"children":[],"decl_id":null,"docs":" Source image bounds.\n","sig":null,"attributes":[{"value":"/ Source image bounds.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":69211,"byte_end":69235,"line_start":80,"line_end":80,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1619},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":69324,"byte_end":69339,"line_start":83,"line_end":83,"column_start":9,"column_end":24},"name":"dst_subresource","qualname":"::command::structs::ImageBlit::dst_subresource","value":"image::SubresourceLayers","parent":{"krate":0,"index":1616},"children":[],"decl_id":null,"docs":" Destination image and layers.\n","sig":null,"attributes":[{"value":"/ Destination image and layers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":69282,"byte_end":69315,"line_start":82,"line_end":82,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1620},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":69409,"byte_end":69419,"line_start":85,"line_end":85,"column_start":9,"column_end":19},"name":"dst_bounds","qualname":"::command::structs::ImageBlit::dst_bounds","value":"std::ops::Range<image::Offset>","parent":{"krate":0,"index":1616},"children":[],"decl_id":null,"docs":" Destination image bounds.\n","sig":null,"attributes":[{"value":"/ Destination image bounds.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/structs.rs","byte_start":69371,"byte_end":69400,"line_start":84,"line_end":84,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":175},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":41069,"byte_end":41088,"line_start":33,"line_end":33,"column_start":10,"column_end":29},"name":"DescriptorSetOffset","qualname":"::command::DescriptorSetOffset","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Offset for dynamic descriptors.\n","sig":null,"attributes":[{"value":"/ Offset for dynamic descriptors.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":41024,"byte_end":41059,"line_start":32,"line_end":32,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":1627},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":41205,"byte_end":41223,"line_start":38,"line_end":38,"column_start":16,"column_end":34},"name":"CommandBufferFlags","qualname":"::command::CommandBufferFlags","value":"CommandBufferFlags {  }","parent":null,"children":[{"krate":0,"index":1628}],"decl_id":null,"docs":" Option flags for various command buffer settings.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1662},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":41390,"byte_end":41405,"line_start":41,"line_end":41,"column_start":15,"column_end":30},"name":"ONE_TIME_SUBMIT","qualname":"::command::CommandBufferFlags::ONE_TIME_SUBMIT","value":"CommandBufferFlags","parent":{"krate":0,"index":1661},"children":[],"decl_id":null,"docs":" Says that the command buffer will be recorded, submitted only once, and then reset and re-filled\n for another submission.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1663},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":41595,"byte_end":41615,"line_start":45,"line_end":45,"column_start":15,"column_end":35},"name":"RENDER_PASS_CONTINUE","qualname":"::command::CommandBufferFlags::RENDER_PASS_CONTINUE","value":"CommandBufferFlags","parent":{"krate":0,"index":1661},"children":[],"decl_id":null,"docs":" If set on a secondary command buffer, it says the command buffer takes place entirely inside\n a render pass. Ignored on primary command buffer.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1664},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":41796,"byte_end":41812,"line_start":49,"line_end":49,"column_start":15,"column_end":31},"name":"SIMULTANEOUS_USE","qualname":"::command::CommandBufferFlags::SIMULTANEOUS_USE","value":"CommandBufferFlags","parent":{"krate":0,"index":1661},"children":[],"decl_id":null,"docs":" Says that a command buffer can be recorded into multiple primary command buffers,\n and submitted to a queue while it is still pending.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1720},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":42076,"byte_end":42083,"line_start":58,"line_end":58,"column_start":5,"column_end":12},"name":"Primary","qualname":"::command::Level::Primary","value":"Level::Primary","parent":{"krate":0,"index":1719},"children":[],"decl_id":null,"docs":" Can be submitted to a queue for execution, but cannot be called from other\n command buffers.\n","sig":null,"attributes":[{"value":"/ Can be submitted to a queue for execution, but cannot be called from other","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":41968,"byte_end":42046,"line_start":56,"line_end":56,"column_start":5,"column_end":83}},{"value":"/ command buffers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":42051,"byte_end":42071,"line_start":57,"line_end":57,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1722},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":42175,"byte_end":42184,"line_start":60,"line_end":60,"column_start":5,"column_end":14},"name":"Secondary","qualname":"::command::Level::Secondary","value":"Level::Secondary","parent":{"krate":0,"index":1719},"children":[],"decl_id":null,"docs":" Cannot be submitted directly, but can be called from primary command buffers.\n","sig":null,"attributes":[{"value":"/ Cannot be submitted directly, but can be called from primary command buffers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":42089,"byte_end":42170,"line_start":59,"line_end":59,"column_start":5,"column_end":86}}]},{"kind":"Enum","id":{"krate":0,"index":1719},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":41956,"byte_end":41961,"line_start":55,"line_end":55,"column_start":10,"column_end":15},"name":"Level","qualname":"::command::Level","value":"pub enum Level { Primary, Secondary, }","parent":null,"children":[{"krate":0,"index":1720},{"krate":0,"index":1722}],"decl_id":null,"docs":" An enum that indicates whether a command buffer is primary or secondary.\n","sig":null,"attributes":[{"value":"/ An enum that indicates whether a command buffer is primary or secondary.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":41829,"byte_end":41905,"line_start":53,"line_end":53,"column_start":1,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1733},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":42426,"byte_end":42432,"line_start":68,"line_end":68,"column_start":5,"column_end":11},"name":"Inline","qualname":"::command::SubpassContents::Inline","value":"SubpassContents::Inline","parent":{"krate":0,"index":1732},"children":[],"decl_id":null,"docs":" Contents of the subpass will be inline in the command buffer,\n NOT in secondary command buffers.\n","sig":null,"attributes":[{"value":"/ Contents of the subpass will be inline in the command buffer,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":42314,"byte_end":42379,"line_start":66,"line_end":66,"column_start":5,"column_end":70}},{"value":"/ NOT in secondary command buffers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":42384,"byte_end":42421,"line_start":67,"line_end":67,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1735},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":42645,"byte_end":42661,"line_start":72,"line_end":72,"column_start":5,"column_end":21},"name":"SecondaryBuffers","qualname":"::command::SubpassContents::SecondaryBuffers","value":"SubpassContents::SecondaryBuffers","parent":{"krate":0,"index":1732},"children":[],"decl_id":null,"docs":" Contents of the subpass will be in secondary command buffers, and\n the primary command buffer will only contain `execute_command()` calls\n until the subpass or render pass is complete.\n","sig":null,"attributes":[{"value":"/ Contents of the subpass will be in secondary command buffers, and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":42438,"byte_end":42507,"line_start":69,"line_end":69,"column_start":5,"column_end":74}},{"value":"/ the primary command buffer will only contain `execute_command()` calls","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":42512,"byte_end":42586,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ until the subpass or render pass is complete.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":42591,"byte_end":42640,"line_start":71,"line_end":71,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":1732},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":42292,"byte_end":42307,"line_start":65,"line_end":65,"column_start":10,"column_end":25},"name":"SubpassContents","qualname":"::command::SubpassContents","value":"pub enum SubpassContents { Inline, SecondaryBuffers, }","parent":null,"children":[{"krate":0,"index":1733},{"krate":0,"index":1735}],"decl_id":null,"docs":" Specifies how commands for the following render passes will be recorded.\n","sig":null,"attributes":[{"value":"/ Specifies how commands for the following render passes will be recorded.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":42189,"byte_end":42265,"line_start":63,"line_end":63,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":1739},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":42751,"byte_end":42771,"line_start":77,"line_end":77,"column_start":12,"column_end":32},"name":"RenderAttachmentInfo","qualname":"::command::RenderAttachmentInfo","value":"RenderAttachmentInfo { image_view, clear_value }","parent":null,"children":[{"krate":0,"index":1742},{"krate":0,"index":1743}],"decl_id":null,"docs":" A render attachment provided to `begin_render_pass`.\n","sig":null,"attributes":[{"value":"/ A render attachment provided to `begin_render_pass`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":42666,"byte_end":42722,"line_start":75,"line_end":75,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":1742},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":42836,"byte_end":42846,"line_start":79,"line_end":79,"column_start":9,"column_end":19},"name":"image_view","qualname":"::command::RenderAttachmentInfo::image_view","value":"&'a <B as Backend>::ImageView","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":" View of the attachment image.\n","sig":null,"attributes":[{"value":"/ View of the attachment image.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":42794,"byte_end":42827,"line_start":78,"line_end":78,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1743},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":42906,"byte_end":42917,"line_start":81,"line_end":81,"column_start":9,"column_end":20},"name":"clear_value","qualname":"::command::RenderAttachmentInfo::clear_value","value":"command::clear::ClearValue","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":" Clear value, if needed.\n","sig":null,"attributes":[{"value":"/ Clear value, if needed.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":42870,"byte_end":42897,"line_start":80,"line_end":80,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1748},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":42985,"byte_end":43013,"line_start":86,"line_end":86,"column_start":12,"column_end":40},"name":"CommandBufferInheritanceInfo","qualname":"::command::CommandBufferInheritanceInfo","value":"CommandBufferInheritanceInfo { subpass, framebuffer, occlusion_query_enable, occlusion_query_flags, pipeline_statistics }","parent":null,"children":[{"krate":0,"index":1751},{"krate":0,"index":1752},{"krate":0,"index":1753},{"krate":0,"index":1754},{"krate":0,"index":1755}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":42934,"byte_end":42956,"line_start":84,"line_end":84,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1751},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":43040,"byte_end":43047,"line_start":87,"line_end":87,"column_start":9,"column_end":16},"name":"subpass","qualname":"::command::CommandBufferInheritanceInfo::subpass","value":"std::option::Option<pass::Subpass<'a, B>>","parent":{"krate":0,"index":1748},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1752},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":43087,"byte_end":43098,"line_start":88,"line_end":88,"column_start":9,"column_end":20},"name":"framebuffer","qualname":"::command::CommandBufferInheritanceInfo::framebuffer","value":"std::option::Option<&'a <B as Backend>::Framebuffer>","parent":{"krate":0,"index":1748},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1753},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":43136,"byte_end":43158,"line_start":89,"line_end":89,"column_start":9,"column_end":31},"name":"occlusion_query_enable","qualname":"::command::CommandBufferInheritanceInfo::occlusion_query_enable","value":"bool","parent":{"krate":0,"index":1748},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1754},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":43174,"byte_end":43195,"line_start":90,"line_end":90,"column_start":9,"column_end":30},"name":"occlusion_query_flags","qualname":"::command::CommandBufferInheritanceInfo::occlusion_query_flags","value":"query::ControlFlags","parent":{"krate":0,"index":1748},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1755},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":43226,"byte_end":43245,"line_start":91,"line_end":91,"column_start":9,"column_end":28},"name":"pipeline_statistics","qualname":"::command::CommandBufferInheritanceInfo::pipeline_statistics","value":"query::PipelineStatistic","parent":{"krate":0,"index":1748},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":180},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":43781,"byte_end":43794,"line_start":108,"line_end":108,"column_start":11,"column_end":24},"name":"CommandBuffer","qualname":"::command::CommandBuffer","value":"CommandBuffer<B: Backend>: fmt::Debug + Any + Send + Sync","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267}],"decl_id":null,"docs":" A trait that describes all the operations that must be\n provided by a `Backend`'s command buffer.\n","sig":null,"attributes":[{"value":"/ A trait that describes all the operations that must be","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":43666,"byte_end":43724,"line_start":106,"line_end":106,"column_start":1,"column_end":59}},{"value":"/ provided by a `Backend`'s command buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":43725,"byte_end":43770,"line_start":107,"line_end":107,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":43910,"byte_end":43915,"line_start":110,"line_end":110,"column_start":15,"column_end":20},"name":"begin","qualname":"::command::CommandBuffer::begin","value":"pub unsafe fn begin(&mut Self, CommandBufferFlags,\n                    CommandBufferInheritanceInfo<, B>)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Begins recording commands to a command buffer.\n","sig":null,"attributes":[{"value":"/ Begins recording commands to a command buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":43845,"byte_end":43895,"line_start":109,"line_end":109,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":44149,"byte_end":44162,"line_start":118,"line_end":118,"column_start":15,"column_end":28},"name":"begin_primary","qualname":"::command::CommandBuffer::begin_primary","value":"pub unsafe fn begin_primary(&mut Self, CommandBufferFlags)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Begins recording a primary command buffer\n (that has no inheritance information).\n","sig":null,"attributes":[{"value":"/ Begins recording a primary command buffer","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":44042,"byte_end":44087,"line_start":116,"line_end":116,"column_start":5,"column_end":50}},{"value":"/ (that has no inheritance information).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":44092,"byte_end":44134,"line_start":117,"line_end":117,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":44347,"byte_end":44353,"line_start":123,"line_end":123,"column_start":15,"column_end":21},"name":"finish","qualname":"::command::CommandBuffer::finish","value":"pub unsafe fn finish(&mut Self)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Finish recording commands to a command buffer.\n","sig":null,"attributes":[{"value":"/ Finish recording commands to a command buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":44282,"byte_end":44332,"line_start":122,"line_end":122,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":44504,"byte_end":44509,"line_start":127,"line_end":127,"column_start":15,"column_end":20},"name":"reset","qualname":"::command::CommandBuffer::reset","value":"pub unsafe fn reset(&mut Self, bool)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Empties the command buffer, optionally releasing all\n resources from the commands that have been submitted.\n","sig":null,"attributes":[{"value":"/ Empties the command buffer, optionally releasing all","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":44371,"byte_end":44427,"line_start":125,"line_end":125,"column_start":5,"column_end":61}},{"value":"/ resources from the commands that have been submitted.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":44432,"byte_end":44489,"line_start":126,"line_end":126,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":44813,"byte_end":44829,"line_start":133,"line_end":133,"column_start":15,"column_end":31},"name":"pipeline_barrier","qualname":"::command::CommandBuffer::pipeline_barrier","value":"pub unsafe fn pipeline_barrier<'a,\n                               T>(&mut Self, Range<pso::PipelineStage>,\n                                  Dependencies, T) where T: Iterator<Item =\nBarrier>","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Inserts a synchronization dependency between pipeline stages\n in the command buffer.\n","sig":null,"attributes":[{"value":"/ Inserts a synchronization dependency between pipeline stages","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":44703,"byte_end":44767,"line_start":131,"line_end":131,"column_start":5,"column_end":69}},{"value":"/ in the command buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":44772,"byte_end":44798,"line_start":132,"line_end":132,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":45078,"byte_end":45089,"line_start":142,"line_end":142,"column_start":15,"column_end":26},"name":"fill_buffer","qualname":"::command::CommandBuffer::fill_buffer","value":"pub unsafe fn fill_buffer(&mut Self, &B::Buffer, buffer::SubRange, u32)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Fill a buffer with the given `u32` value.\n","sig":null,"attributes":[{"value":"/ Fill a buffer with the given `u32` value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":45018,"byte_end":45063,"line_start":141,"line_end":141,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":45227,"byte_end":45240,"line_start":145,"line_end":145,"column_start":15,"column_end":28},"name":"update_buffer","qualname":"::command::CommandBuffer::update_buffer","value":"pub unsafe fn update_buffer(&mut Self, &B::Buffer, buffer::Offset, &[u8])","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Copy data from the given slice into a buffer.\n","sig":null,"attributes":[{"value":"/ Copy data from the given slice into a buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":45163,"byte_end":45212,"line_start":144,"line_end":144,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":45383,"byte_end":45394,"line_start":148,"line_end":148,"column_start":15,"column_end":26},"name":"clear_image","qualname":"::command::CommandBuffer::clear_image","value":"pub unsafe fn clear_image<T>(&mut Self, &B::Image, Layout, ClearValue, T)\nwhere T: Iterator<Item = SubresourceRange>","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Clears an image to the given color/depth/stencil.\n","sig":null,"attributes":[{"value":"/ Clears an image to the given color/depth/stencil.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":45315,"byte_end":45368,"line_start":147,"line_end":147,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":45726,"byte_end":45743,"line_start":159,"line_end":159,"column_start":15,"column_end":32},"name":"clear_attachments","qualname":"::command::CommandBuffer::clear_attachments","value":"pub unsafe fn clear_attachments<T, U>(&mut Self, T, U) where T: Iterator<Item\n= AttachmentClear>, U: Iterator<Item = pso::ClearRect>","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Takes an iterator of attachments and an iterator of rect's,\n and clears the given rect's for *each* attachment.\n","sig":null,"attributes":[{"value":"/ Takes an iterator of attachments and an iterator of rect's,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":45589,"byte_end":45652,"line_start":157,"line_end":157,"column_start":5,"column_end":68}},{"value":"/ and clears the given rect's for *each* attachment.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":45657,"byte_end":45711,"line_start":158,"line_end":158,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":46047,"byte_end":46060,"line_start":166,"line_end":166,"column_start":15,"column_end":28},"name":"resolve_image","qualname":"::command::CommandBuffer::resolve_image","value":"pub unsafe fn resolve_image<T>(&mut Self, &B::Image, Layout, &B::Image,\n                               Layout, T) where T: Iterator<Item =\nImageResolve>","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" \"Resolves\" a multisampled image, converting it into a non-multisampled\n image. Takes an iterator of regions to apply the resolution to.\n","sig":null,"attributes":[{"value":"/ \"Resolves\" a multisampled image, converting it into a non-multisampled","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":45886,"byte_end":45960,"line_start":164,"line_end":164,"column_start":5,"column_end":79}},{"value":"/ image. Takes an iterator of regions to apply the resolution to.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":45965,"byte_end":46032,"line_start":165,"line_end":165,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":46409,"byte_end":46419,"line_start":178,"line_end":178,"column_start":15,"column_end":25},"name":"blit_image","qualname":"::command::CommandBuffer::blit_image","value":"pub unsafe fn blit_image<T>(&mut Self, &B::Image, Layout, &B::Image, Layout,\n                            Filter, T) where T: Iterator<Item = ImageBlit>","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Copies regions from the source to destination image,\n applying scaling, filtering and potentially format conversion.\n","sig":null,"attributes":[{"value":"/ Copies regions from the source to destination image,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":46267,"byte_end":46323,"line_start":176,"line_end":176,"column_start":5,"column_end":61}},{"value":"/ applying scaling, filtering and potentially format conversion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":46328,"byte_end":46394,"line_start":177,"line_end":177,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":46765,"byte_end":46782,"line_start":191,"line_end":191,"column_start":15,"column_end":32},"name":"bind_index_buffer","qualname":"::command::CommandBuffer::bind_index_buffer","value":"pub unsafe fn bind_index_buffer(&mut Self, &B::Buffer, buffer::SubRange,\n                                IndexType)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Bind the index buffer view, making it the \"current\" one that draw commands\n will operate on.\n","sig":null,"attributes":[{"value":"/ Bind the index buffer view, making it the \"current\" one that draw commands","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":46647,"byte_end":46725,"line_start":189,"line_end":189,"column_start":5,"column_end":83}},{"value":"/ will operate on.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":46730,"byte_end":46750,"line_start":190,"line_end":190,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":47799,"byte_end":47818,"line_start":213,"line_end":213,"column_start":15,"column_end":34},"name":"bind_vertex_buffers","qualname":"::command::CommandBuffer::bind_vertex_buffers","value":"pub unsafe fn bind_vertex_buffers<'a, T>(&mut Self, pso::BufferIndex, T) where\nT: Iterator<Item = (&'a B::Buffer, buffer::SubRange)>","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Bind the vertex buffer set, making it the \"current\" one that draw commands\n will operate on.","sig":null,"attributes":[{"value":"/ Bind the vertex buffer set, making it the \"current\" one that draw commands","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":46897,"byte_end":46975,"line_start":198,"line_end":198,"column_start":5,"column_end":83}},{"value":"/ will operate on.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":46980,"byte_end":47000,"line_start":199,"line_end":199,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":47005,"byte_end":47008,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Each buffer passed corresponds to the vertex input binding with the same index,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":47013,"byte_end":47096,"line_start":201,"line_end":201,"column_start":5,"column_end":88}},{"value":"/ starting from an offset index `first_binding`. For example an iterator with","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":47101,"byte_end":47180,"line_start":202,"line_end":202,"column_start":5,"column_end":84}},{"value":"/ two items and `first_binding` of 1 would fill vertex buffer binding numbers","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":47185,"byte_end":47264,"line_start":203,"line_end":203,"column_start":5,"column_end":84}},{"value":"/ 1 and 2.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":47269,"byte_end":47281,"line_start":204,"line_end":204,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":47286,"byte_end":47289,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ This binding number refers only to binding points for vertex buffers and is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":47294,"byte_end":47373,"line_start":206,"line_end":206,"column_start":5,"column_end":84}},{"value":"/ completely separate from the binding numbers of `Descriptor`s in `DescriptorSet`s.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":47378,"byte_end":47464,"line_start":207,"line_end":207,"column_start":5,"column_end":91}},{"value":"/ It needs to match with the `VertexBufferDesc` and `AttributeDesc`s to which the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":47469,"byte_end":47552,"line_start":208,"line_end":208,"column_start":5,"column_end":88}},{"value":"/ data from each bound vertex buffer should flow.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":47557,"byte_end":47608,"line_start":209,"line_end":209,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":47613,"byte_end":47616,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ The `buffers` iterator should yield the `Buffer` to bind, as well as a subrange,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":47621,"byte_end":47705,"line_start":211,"line_end":211,"column_start":5,"column_end":89}},{"value":"/ in bytes, into that buffer where the vertex data that should be bound.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":47710,"byte_end":47784,"line_start":212,"line_end":212,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":48794,"byte_end":48807,"line_start":234,"line_end":234,"column_start":15,"column_end":28},"name":"set_viewports","qualname":"::command::CommandBuffer::set_viewports","value":"pub unsafe fn set_viewports<T>(&mut Self, u32, T) where T: Iterator<Item =\npso::Viewport>","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Set the [viewport][crate::pso::Viewport] parameters for the rasterizer.","sig":null,"attributes":[{"value":"/ Set the [viewport][crate::pso::Viewport] parameters for the rasterizer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":47960,"byte_end":48035,"line_start":217,"line_end":217,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":48040,"byte_end":48043,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ Each viewport passed corresponds to the viewport with the same index,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":48048,"byte_end":48121,"line_start":219,"line_end":219,"column_start":5,"column_end":78}},{"value":"/ starting from an offset index `first_viewport`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":48126,"byte_end":48177,"line_start":220,"line_end":220,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":48182,"byte_end":48185,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":48190,"byte_end":48202,"line_start":222,"line_end":222,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":48207,"byte_end":48210,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ This function does not return an error. Invalid usage of this function","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":48215,"byte_end":48289,"line_start":224,"line_end":224,"column_start":5,"column_end":79}},{"value":"/ will result in undefined behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":48294,"byte_end":48332,"line_start":225,"line_end":225,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":48337,"byte_end":48340,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ - Command buffer must be in recording state.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":48345,"byte_end":48393,"line_start":227,"line_end":227,"column_start":5,"column_end":53}},{"value":"/ - Number of viewports must be between 1 and `max_viewports - first_viewport`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":48398,"byte_end":48479,"line_start":228,"line_end":228,"column_start":5,"column_end":86}},{"value":"/ - The first viewport must be less than `max_viewports`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":48484,"byte_end":48543,"line_start":229,"line_end":229,"column_start":5,"column_end":64}},{"value":"/ - Only queues with graphics capability support this function.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":48548,"byte_end":48613,"line_start":230,"line_end":230,"column_start":5,"column_end":70}},{"value":"/ - The bound pipeline must not have baked viewport state.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":48618,"byte_end":48678,"line_start":231,"line_end":231,"column_start":5,"column_end":65}},{"value":"/ - All viewports used by the pipeline must be specified before the first","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":48683,"byte_end":48758,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/   draw call.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":48763,"byte_end":48779,"line_start":233,"line_end":233,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":49710,"byte_end":49722,"line_start":255,"line_end":255,"column_start":15,"column_end":27},"name":"set_scissors","qualname":"::command::CommandBuffer::set_scissors","value":"pub unsafe fn set_scissors<T>(&mut Self, u32, T) where T: Iterator<Item =\npso::Rect>","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Set the scissor rectangles for the rasterizer.","sig":null,"attributes":[{"value":"/ Set the scissor rectangles for the rasterizer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":48915,"byte_end":48965,"line_start":238,"line_end":238,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":48970,"byte_end":48973,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ Each scissor corresponds to the viewport with the same index, starting","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":48978,"byte_end":49052,"line_start":240,"line_end":240,"column_start":5,"column_end":79}},{"value":"/ from an offset index `first_scissor`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":49057,"byte_end":49098,"line_start":241,"line_end":241,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":49103,"byte_end":49106,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":49111,"byte_end":49123,"line_start":243,"line_end":243,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":49128,"byte_end":49131,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This function does not return an error. Invalid usage of this function","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":49136,"byte_end":49210,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ will result in undefined behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":49215,"byte_end":49253,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":49258,"byte_end":49261,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ - Command buffer must be in recording state.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":49266,"byte_end":49314,"line_start":248,"line_end":248,"column_start":5,"column_end":53}},{"value":"/ - Number of scissors must be between 1 and `max_viewports - first_scissor`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":49319,"byte_end":49398,"line_start":249,"line_end":249,"column_start":5,"column_end":84}},{"value":"/ - The first scissor must be less than `max_viewports`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":49403,"byte_end":49461,"line_start":250,"line_end":250,"column_start":5,"column_end":63}},{"value":"/ - Only queues with graphics capability support this function.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":49466,"byte_end":49531,"line_start":251,"line_end":251,"column_start":5,"column_end":70}},{"value":"/ - The bound pipeline must not have baked scissor state.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":49536,"byte_end":49595,"line_start":252,"line_end":252,"column_start":5,"column_end":64}},{"value":"/ - All scissors used by the pipeline must be specified before the first draw","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":49600,"byte_end":49679,"line_start":253,"line_end":253,"column_start":5,"column_end":84}},{"value":"/   call.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":49684,"byte_end":49695,"line_start":254,"line_end":254,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":50034,"byte_end":50055,"line_start":262,"line_end":262,"column_start":15,"column_end":36},"name":"set_stencil_reference","qualname":"::command::CommandBuffer::set_stencil_reference","value":"pub unsafe fn set_stencil_reference(&mut Self, pso::Face, pso::StencilValue)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Sets the stencil reference value for comparison operations and store operations.\n Will be used on the LHS of stencil compare ops and as store value when the\n store op is Reference.\n","sig":null,"attributes":[{"value":"/ Sets the stencil reference value for comparison operations and store operations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":49821,"byte_end":49905,"line_start":259,"line_end":259,"column_start":5,"column_end":89}},{"value":"/ Will be used on the LHS of stencil compare ops and as store value when the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":49910,"byte_end":49988,"line_start":260,"line_end":260,"column_start":5,"column_end":83}},{"value":"/ store op is Reference.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":49993,"byte_end":50019,"line_start":261,"line_end":261,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":50163,"byte_end":50184,"line_start":265,"line_end":265,"column_start":15,"column_end":36},"name":"set_stencil_read_mask","qualname":"::command::CommandBuffer::set_stencil_read_mask","value":"pub unsafe fn set_stencil_read_mask(&mut Self, pso::Face, pso::StencilValue)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Sets the stencil read mask.\n","sig":null,"attributes":[{"value":"/ Sets the stencil read mask.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":50117,"byte_end":50148,"line_start":264,"line_end":264,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":50293,"byte_end":50315,"line_start":268,"line_end":268,"column_start":15,"column_end":37},"name":"set_stencil_write_mask","qualname":"::command::CommandBuffer::set_stencil_write_mask","value":"pub unsafe fn set_stencil_write_mask(&mut Self, pso::Face, pso::StencilValue)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Sets the stencil write mask.\n","sig":null,"attributes":[{"value":"/ Sets the stencil write mask.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":50246,"byte_end":50278,"line_start":267,"line_end":267,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":50438,"byte_end":50457,"line_start":271,"line_end":271,"column_start":15,"column_end":34},"name":"set_blend_constants","qualname":"::command::CommandBuffer::set_blend_constants","value":"pub unsafe fn set_blend_constants(&mut Self, pso::ColorValue)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Set the blend constant values dynamically.\n","sig":null,"attributes":[{"value":"/ Set the blend constant values dynamically.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":50377,"byte_end":50423,"line_start":270,"line_end":270,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":50563,"byte_end":50579,"line_start":274,"line_end":274,"column_start":15,"column_end":31},"name":"set_depth_bounds","qualname":"::command::CommandBuffer::set_depth_bounds","value":"pub unsafe fn set_depth_bounds(&mut Self, Range<f32>)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Set the depth bounds test values dynamically.\n","sig":null,"attributes":[{"value":"/ Set the depth bounds test values dynamically.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":50499,"byte_end":50548,"line_start":273,"line_end":273,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":50740,"byte_end":50754,"line_start":279,"line_end":279,"column_start":15,"column_end":29},"name":"set_line_width","qualname":"::command::CommandBuffer::set_line_width","value":"pub unsafe fn set_line_width(&mut Self, f32)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Set the line width dynamically.","sig":null,"attributes":[{"value":"/ Set the line width dynamically.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":50617,"byte_end":50652,"line_start":276,"line_end":276,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":50657,"byte_end":50660,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Only valid to call if `Features::LINE_WIDTH` is enabled.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":50665,"byte_end":50725,"line_start":278,"line_end":278,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":50834,"byte_end":50848,"line_start":282,"line_end":282,"column_start":15,"column_end":29},"name":"set_depth_bias","qualname":"::command::CommandBuffer::set_depth_bias","value":"pub unsafe fn set_depth_bias(&mut Self, pso::DepthBias)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Set the depth bias dynamically.\n","sig":null,"attributes":[{"value":"/ Set the depth bias dynamically.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":50784,"byte_end":50819,"line_start":281,"line_end":281,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":51419,"byte_end":51436,"line_start":294,"line_end":294,"column_start":15,"column_end":32},"name":"begin_render_pass","qualname":"::command::CommandBuffer::begin_render_pass","value":"pub unsafe fn begin_render_pass<'a,\n                                T>(&mut Self, &B::RenderPass, &B::Framebuffer,\n                                   pso::Rect, T, SubpassContents) where\nT: Iterator<Item = RenderAttachmentInfo>","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Begins recording commands for a render pass on the given framebuffer.","sig":null,"attributes":[{"value":"/ Begins recording commands for a render pass on the given framebuffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":50894,"byte_end":50967,"line_start":284,"line_end":284,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":50972,"byte_end":50975,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":50980,"byte_end":50995,"line_start":286,"line_end":286,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":51000,"byte_end":51003,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ * `render_area` - section of the framebuffer to render.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":51008,"byte_end":51067,"line_start":288,"line_end":288,"column_start":5,"column_end":64}},{"value":"/ * `attachments` - iterator of [attachments][crate::command::RenderAttachmentInfo]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":51072,"byte_end":51157,"line_start":289,"line_end":289,"column_start":5,"column_end":90}},{"value":"/   that has both the image views and the clear values","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":51162,"byte_end":51218,"line_start":290,"line_end":290,"column_start":5,"column_end":61}},{"value":"/ * `first_subpass` - specifies, for the first subpass, whether the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":51223,"byte_end":51292,"line_start":291,"line_end":291,"column_start":5,"column_end":74}},{"value":"/   rendering commands are provided inline or whether the render","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":51297,"byte_end":51363,"line_start":292,"line_end":292,"column_start":5,"column_end":71}},{"value":"/   pass is composed of subpasses.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":51368,"byte_end":51404,"line_start":293,"line_end":293,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":51781,"byte_end":51793,"line_start":305,"line_end":305,"column_start":15,"column_end":27},"name":"next_subpass","qualname":"::command::CommandBuffer::next_subpass","value":"pub unsafe fn next_subpass(&mut Self, SubpassContents)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Steps to the next subpass in the current render pass.\n","sig":null,"attributes":[{"value":"/ Steps to the next subpass in the current render pass.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":51709,"byte_end":51766,"line_start":304,"line_end":304,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":51915,"byte_end":51930,"line_start":308,"line_end":308,"column_start":15,"column_end":30},"name":"end_render_pass","qualname":"::command::CommandBuffer::end_render_pass","value":"pub unsafe fn end_render_pass(&mut Self)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Finishes recording commands for the current a render pass.\n","sig":null,"attributes":[{"value":"/ Finishes recording commands for the current a render pass.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":51838,"byte_end":51900,"line_start":307,"line_end":307,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":52280,"byte_end":52302,"line_start":319,"line_end":319,"column_start":15,"column_end":37},"name":"bind_graphics_pipeline","qualname":"::command::CommandBuffer::bind_graphics_pipeline","value":"pub unsafe fn bind_graphics_pipeline(&mut Self, &B::GraphicsPipeline)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Bind a graphics pipeline.","sig":null,"attributes":[{"value":"/ Bind a graphics pipeline.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":51948,"byte_end":51977,"line_start":310,"line_end":310,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":51982,"byte_end":51985,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":51990,"byte_end":52002,"line_start":312,"line_end":312,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":52007,"byte_end":52010,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ This function does not return an error. Invalid usage of this function","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":52015,"byte_end":52089,"line_start":314,"line_end":314,"column_start":5,"column_end":79}},{"value":"/ will result in an error on `finish`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":52094,"byte_end":52134,"line_start":315,"line_end":315,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":52139,"byte_end":52142,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ - Command buffer must be in recording state.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":52147,"byte_end":52195,"line_start":317,"line_end":317,"column_start":5,"column_end":53}},{"value":"/ - Only queues with graphics capability support this function.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":52200,"byte_end":52265,"line_start":318,"line_end":318,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":52552,"byte_end":52581,"line_start":323,"line_end":323,"column_start":15,"column_end":44},"name":"bind_graphics_descriptor_sets","qualname":"::command::CommandBuffer::bind_graphics_descriptor_sets","value":"pub unsafe fn bind_graphics_descriptor_sets<'a, I,\n                                            J>(&mut Self, &B::PipelineLayout,\n                                               usize, I, J) where\nI: Iterator<Item = &'a B::DescriptorSet>, J: Iterator<Item =\nDescriptorSetOffset>","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Takes an iterator of graphics `DescriptorSet`'s, and binds them to the command buffer.\n `first_set` is the index that the first descriptor is mapped to in the command buffer.\n","sig":null,"attributes":[{"value":"/ Takes an iterator of graphics `DescriptorSet`'s, and binds them to the command buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":52352,"byte_end":52442,"line_start":321,"line_end":321,"column_start":5,"column_end":95}},{"value":"/ `first_set` is the index that the first descriptor is mapped to in the command buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":52447,"byte_end":52537,"line_start":322,"line_end":322,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":53157,"byte_end":53178,"line_start":342,"line_end":342,"column_start":15,"column_end":36},"name":"bind_compute_pipeline","qualname":"::command::CommandBuffer::bind_compute_pipeline","value":"pub unsafe fn bind_compute_pipeline(&mut Self, &B::ComputePipeline)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Bind a compute pipeline.","sig":null,"attributes":[{"value":"/ Bind a compute pipeline.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":52827,"byte_end":52855,"line_start":333,"line_end":333,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":52860,"byte_end":52863,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":52868,"byte_end":52880,"line_start":335,"line_end":335,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":52885,"byte_end":52888,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ This function does not return an error. Invalid usage of this function","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":52893,"byte_end":52967,"line_start":337,"line_end":337,"column_start":5,"column_end":79}},{"value":"/ will result in an error on `finish`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":52972,"byte_end":53012,"line_start":338,"line_end":338,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":53017,"byte_end":53020,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ - Command buffer must be in recording state.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":53025,"byte_end":53073,"line_start":340,"line_end":340,"column_start":5,"column_end":53}},{"value":"/ - Only queues with compute capability support this function.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":53078,"byte_end":53142,"line_start":341,"line_end":341,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":53426,"byte_end":53454,"line_start":346,"line_end":346,"column_start":15,"column_end":43},"name":"bind_compute_descriptor_sets","qualname":"::command::CommandBuffer::bind_compute_descriptor_sets","value":"pub unsafe fn bind_compute_descriptor_sets<'a, I,\n                                           J>(&mut Self, &B::PipelineLayout,\n                                              usize, I, J) where\nI: Iterator<Item = &'a B::DescriptorSet>, J: Iterator<Item =\nDescriptorSetOffset>","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Takes an iterator of compute `DescriptorSet`'s, and binds them to the command buffer,\n `first_set` is the index that the first descriptor is mapped to in the command buffer.\n","sig":null,"attributes":[{"value":"/ Takes an iterator of compute `DescriptorSet`'s, and binds them to the command buffer,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":53227,"byte_end":53316,"line_start":344,"line_end":344,"column_start":5,"column_end":94}},{"value":"/ `first_set` is the index that the first descriptor is mapped to in the command buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":53321,"byte_end":53411,"line_start":345,"line_end":345,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":54454,"byte_end":54462,"line_start":372,"line_end":372,"column_start":15,"column_end":23},"name":"dispatch","qualname":"::command::CommandBuffer::dispatch","value":"pub unsafe fn dispatch(&mut Self, WorkGroupCount)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Execute a workgroup in the compute pipeline. `x`, `y` and `z` are the\n number of local workgroups to dispatch along each \"axis\"; a total of `x`*`y`*`z`\n local workgroups will be created.","sig":null,"attributes":[{"value":"/ Execute a workgroup in the compute pipeline. `x`, `y` and `z` are the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":53700,"byte_end":53773,"line_start":356,"line_end":356,"column_start":5,"column_end":78}},{"value":"/ number of local workgroups to dispatch along each \"axis\"; a total of `x`*`y`*`z`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":53778,"byte_end":53862,"line_start":357,"line_end":357,"column_start":5,"column_end":89}},{"value":"/ local workgroups will be created.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":53867,"byte_end":53904,"line_start":358,"line_end":358,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":53909,"byte_end":53912,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":53917,"byte_end":53929,"line_start":360,"line_end":360,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":53934,"byte_end":53937,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ This function does not return an error. Invalid usage of this function","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":53942,"byte_end":54016,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ will result in an error on `finish`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":54021,"byte_end":54061,"line_start":363,"line_end":363,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":54066,"byte_end":54069,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ - Command buffer must be in recording state.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":54074,"byte_end":54122,"line_start":365,"line_end":365,"column_start":5,"column_end":53}},{"value":"/ - A compute pipeline must be bound using `bind_compute_pipeline`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":54127,"byte_end":54196,"line_start":366,"line_end":366,"column_start":5,"column_end":74}},{"value":"/ - Only queues with compute capability support this function.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":54201,"byte_end":54265,"line_start":367,"line_end":367,"column_start":5,"column_end":69}},{"value":"/ - This function must be called outside of a render pass.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":54270,"byte_end":54330,"line_start":368,"line_end":368,"column_start":5,"column_end":65}},{"value":"/ - `count` must be less than or equal to `Limits::max_compute_work_group_count`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":54335,"byte_end":54417,"line_start":369,"line_end":369,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":54422,"byte_end":54425,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ TODO:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":54430,"byte_end":54439,"line_start":371,"line_end":371,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":54622,"byte_end":54639,"line_start":376,"line_end":376,"column_start":15,"column_end":32},"name":"dispatch_indirect","qualname":"::command::CommandBuffer::dispatch_indirect","value":"pub unsafe fn dispatch_indirect(&mut Self, &B::Buffer, buffer::Offset)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Works similarly to `dispatch()` but reads parameters from the given\n buffer during execution.\n","sig":null,"attributes":[{"value":"/ Works similarly to `dispatch()` but reads parameters from the given","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":54503,"byte_end":54574,"line_start":374,"line_end":374,"column_start":5,"column_end":76}},{"value":"/ buffer during execution.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":54579,"byte_end":54607,"line_start":375,"line_end":375,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":54789,"byte_end":54800,"line_start":379,"line_end":379,"column_start":15,"column_end":26},"name":"copy_buffer","qualname":"::command::CommandBuffer::copy_buffer","value":"pub unsafe fn copy_buffer<T>(&mut Self, &B::Buffer, &B::Buffer, T) where\nT: Iterator<Item = BufferCopy>","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Adds a command to copy regions from the source to destination buffer.\n","sig":null,"attributes":[{"value":"/ Adds a command to copy regions from the source to destination buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":54701,"byte_end":54774,"line_start":378,"line_end":378,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":55219,"byte_end":55229,"line_start":387,"line_end":387,"column_start":15,"column_end":25},"name":"copy_image","qualname":"::command::CommandBuffer::copy_image","value":"pub unsafe fn copy_image<T>(&mut Self, &B::Image, Layout, &B::Image, Layout,\n                            T) where T: Iterator<Item = ImageCopy>","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Copies regions from the source to the destination images, which\n have the given layouts.  No format conversion is done; the source and destination\n `Layout`'s **must** have the same sized image formats (such as `Rgba8Unorm` and\n `R32`, both of which are 32 bits).\n","sig":null,"attributes":[{"value":"/ Copies regions from the source to the destination images, which","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":54916,"byte_end":54983,"line_start":383,"line_end":383,"column_start":5,"column_end":72}},{"value":"/ have the given layouts.  No format conversion is done; the source and destination","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":54988,"byte_end":55073,"line_start":384,"line_end":384,"column_start":5,"column_end":90}},{"value":"/ `Layout`'s **must** have the same sized image formats (such as `Rgba8Unorm` and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":55078,"byte_end":55161,"line_start":385,"line_end":385,"column_start":5,"column_end":88}},{"value":"/ `R32`, both of which are 32 bits).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":55166,"byte_end":55204,"line_start":386,"line_end":386,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":55515,"byte_end":55535,"line_start":398,"line_end":398,"column_start":15,"column_end":35},"name":"copy_buffer_to_image","qualname":"::command::CommandBuffer::copy_buffer_to_image","value":"pub unsafe fn copy_buffer_to_image<T>(&mut Self, &B::Buffer, &B::Image,\n                                      Layout, T) where T: Iterator<Item =\nBufferImageCopy>","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Copies regions from the source buffer to the destination image.\n","sig":null,"attributes":[{"value":"/ Copies regions from the source buffer to the destination image.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":55433,"byte_end":55500,"line_start":397,"line_end":397,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":55800,"byte_end":55820,"line_start":408,"line_end":408,"column_start":15,"column_end":35},"name":"copy_image_to_buffer","qualname":"::command::CommandBuffer::copy_image_to_buffer","value":"pub unsafe fn copy_image_to_buffer<T>(&mut Self, &B::Image, Layout,\n                                      &B::Buffer, T) where T: Iterator<Item =\nBufferImageCopy>","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Copies regions from the source image to the destination buffer.\n","sig":null,"attributes":[{"value":"/ Copies regions from the source image to the destination buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":55718,"byte_end":55785,"line_start":407,"line_end":407,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":56330,"byte_end":56334,"line_start":422,"line_end":422,"column_start":15,"column_end":19},"name":"draw","qualname":"::command::CommandBuffer::draw","value":"pub unsafe fn draw(&mut Self, Range<VertexCount>, Range<InstanceCount>)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Performs a non-indexed drawing operation, fetching vertex attributes\n from the currently bound vertex buffers.  It performs instanced\n drawing, drawing `instances.len()`\n times with an `instanceIndex` starting with the start of the range.\n","sig":null,"attributes":[{"value":"/ Performs a non-indexed drawing operation, fetching vertex attributes","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":56052,"byte_end":56124,"line_start":418,"line_end":418,"column_start":5,"column_end":77}},{"value":"/ from the currently bound vertex buffers.  It performs instanced","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":56129,"byte_end":56196,"line_start":419,"line_end":419,"column_start":5,"column_end":72}},{"value":"/ drawing, drawing `instances.len()`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":56201,"byte_end":56239,"line_start":420,"line_end":420,"column_start":5,"column_end":43}},{"value":"/ times with an `instanceIndex` starting with the start of the range.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":56244,"byte_end":56315,"line_start":421,"line_end":421,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":56797,"byte_end":56809,"line_start":430,"line_end":430,"column_start":15,"column_end":27},"name":"draw_indexed","qualname":"::command::CommandBuffer::draw_indexed","value":"pub unsafe fn draw_indexed(&mut Self, Range<IndexCount>, VertexOffset,\n                           Range<InstanceCount>)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Performs indexed drawing, drawing the range of indices\n given by the current index buffer and any bound vertex buffers.\n `base_vertex` specifies the vertex offset corresponding to index 0.\n That is, the offset into the vertex buffer is `(current_index + base_vertex)`","sig":null,"attributes":[{"value":"/ Performs indexed drawing, drawing the range of indices","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":56415,"byte_end":56473,"line_start":424,"line_end":424,"column_start":5,"column_end":63}},{"value":"/ given by the current index buffer and any bound vertex buffers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":56478,"byte_end":56545,"line_start":425,"line_end":425,"column_start":5,"column_end":72}},{"value":"/ `base_vertex` specifies the vertex offset corresponding to index 0.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":56550,"byte_end":56621,"line_start":426,"line_end":426,"column_start":5,"column_end":76}},{"value":"/ That is, the offset into the vertex buffer is `(current_index + base_vertex)`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":56626,"byte_end":56707,"line_start":427,"line_end":427,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":56712,"byte_end":56715,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ It also performs instanced drawing, identical to `draw()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":56720,"byte_end":56782,"line_start":429,"line_end":429,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":57504,"byte_end":57517,"line_start":446,"line_end":446,"column_start":15,"column_end":28},"name":"draw_indirect","qualname":"::command::CommandBuffer::draw_indirect","value":"pub unsafe fn draw_indirect(&mut Self, &B::Buffer, buffer::Offset, DrawCount,\n                            buffer::Stride)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Functions identically to `draw()`, except the parameters are read\n from the given buffer, starting at `offset` and increasing `stride`\n bytes with each successive draw.  Performs `draw_count` draws total.\n `draw_count` may be zero.","sig":null,"attributes":[{"value":"/ Functions identically to `draw()`, except the parameters are read","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":56954,"byte_end":57023,"line_start":437,"line_end":437,"column_start":5,"column_end":74}},{"value":"/ from the given buffer, starting at `offset` and increasing `stride`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":57028,"byte_end":57099,"line_start":438,"line_end":438,"column_start":5,"column_end":76}},{"value":"/ bytes with each successive draw.  Performs `draw_count` draws total.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":57104,"byte_end":57176,"line_start":439,"line_end":439,"column_start":5,"column_end":77}},{"value":"/ `draw_count` may be zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":57181,"byte_end":57210,"line_start":440,"line_end":440,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":57215,"byte_end":57218,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ Each draw command in the buffer is a series of 4 `u32` values specifying,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":57223,"byte_end":57300,"line_start":442,"line_end":442,"column_start":5,"column_end":82}},{"value":"/ in order, the number of vertices to draw, the number of instances to draw,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":57305,"byte_end":57383,"line_start":443,"line_end":443,"column_start":5,"column_end":83}},{"value":"/ the index of the first vertex to draw, and the instance ID of the first","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":57388,"byte_end":57463,"line_start":444,"line_end":444,"column_start":5,"column_end":80}},{"value":"/ instance to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":57468,"byte_end":57489,"line_start":445,"line_end":445,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":58114,"byte_end":58135,"line_start":461,"line_end":461,"column_start":15,"column_end":36},"name":"draw_indexed_indirect","qualname":"::command::CommandBuffer::draw_indexed_indirect","value":"pub unsafe fn draw_indexed_indirect(&mut Self, &B::Buffer, buffer::Offset,\n                                    DrawCount, buffer::Stride)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Like `draw_indirect()`, this does indexed drawing a la `draw_indexed()` but\n reads the draw parameters out of the given buffer.","sig":null,"attributes":[{"value":"/ Like `draw_indirect()`, this does indexed drawing a la `draw_indexed()` but","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":57673,"byte_end":57752,"line_start":454,"line_end":454,"column_start":5,"column_end":84}},{"value":"/ reads the draw parameters out of the given buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":57757,"byte_end":57811,"line_start":455,"line_end":455,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":57816,"byte_end":57819,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ Each draw command in the buffer is a series of 5 values specifying,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":57824,"byte_end":57895,"line_start":457,"line_end":457,"column_start":5,"column_end":76}},{"value":"/ in order, the number of indices, the number of instances, the first index,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":57900,"byte_end":57978,"line_start":458,"line_end":458,"column_start":5,"column_end":83}},{"value":"/ the vertex offset, and the first instance.  All are `u32`'s except","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":57983,"byte_end":58053,"line_start":459,"line_end":459,"column_start":5,"column_end":75}},{"value":"/ the vertex offset, which is an `i32`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":58058,"byte_end":58099,"line_start":460,"line_end":460,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":58799,"byte_end":58818,"line_start":477,"line_end":477,"column_start":15,"column_end":34},"name":"draw_indirect_count","qualname":"::command::CommandBuffer::draw_indirect_count","value":"pub unsafe fn draw_indirect_count(&mut Self, &B::Buffer, buffer::Offset,\n                                  &B::Buffer, buffer::Offset, u32,\n                                  buffer::Stride)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Functions identically to `draw_indirect()`, except the amount of draw\n calls are specified by the u32 in `count_buffer` at `count_buffer_offset`.\n There is a limit of `max_draw_count` invocations.","sig":null,"attributes":[{"value":"/ Functions identically to `draw_indirect()`, except the amount of draw","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":58291,"byte_end":58364,"line_start":469,"line_end":469,"column_start":5,"column_end":78}},{"value":"/ calls are specified by the u32 in `count_buffer` at `count_buffer_offset`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":58369,"byte_end":58447,"line_start":470,"line_end":470,"column_start":5,"column_end":83}},{"value":"/ There is a limit of `max_draw_count` invocations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":58452,"byte_end":58505,"line_start":471,"line_end":471,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":58510,"byte_end":58513,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ Each draw command in the buffer is a series of 4 `u32` values specifying,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":58518,"byte_end":58595,"line_start":473,"line_end":473,"column_start":5,"column_end":82}},{"value":"/ in order, the number of vertices to draw, the number of instances to draw,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":58600,"byte_end":58678,"line_start":474,"line_end":474,"column_start":5,"column_end":83}},{"value":"/ the index of the first vertex to draw, and the instance ID of the first","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":58683,"byte_end":58758,"line_start":475,"line_end":475,"column_start":5,"column_end":80}},{"value":"/ instance to draw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":58763,"byte_end":58784,"line_start":476,"line_end":476,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":59582,"byte_end":59609,"line_start":495,"line_end":495,"column_start":15,"column_end":42},"name":"draw_indexed_indirect_count","qualname":"::command::CommandBuffer::draw_indexed_indirect_count","value":"pub unsafe fn draw_indexed_indirect_count(&mut Self, &B::Buffer,\n                                          buffer::Offset, &B::Buffer,\n                                          buffer::Offset, u32, buffer::Stride)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Functions identically to `draw_indexed_indirect()`, except the amount of draw\n calls are specified by the u32 in `count_buffer` at `count_buffer_offset`.\n There is a limit of `max_draw_count` invocations.","sig":null,"attributes":[{"value":"/ Functions identically to `draw_indexed_indirect()`, except the amount of draw","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":59057,"byte_end":59138,"line_start":487,"line_end":487,"column_start":5,"column_end":86}},{"value":"/ calls are specified by the u32 in `count_buffer` at `count_buffer_offset`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":59143,"byte_end":59221,"line_start":488,"line_end":488,"column_start":5,"column_end":83}},{"value":"/ There is a limit of `max_draw_count` invocations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":59226,"byte_end":59279,"line_start":489,"line_end":489,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":59284,"byte_end":59287,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ Each draw command in the buffer is a series of 5 values specifying,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":59292,"byte_end":59363,"line_start":491,"line_end":491,"column_start":5,"column_end":76}},{"value":"/ in order, the number of indices, the number of instances, the first index,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":59368,"byte_end":59446,"line_start":492,"line_end":492,"column_start":5,"column_end":83}},{"value":"/ the vertex offset, and the first instance.  All are `u32`'s except","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":59451,"byte_end":59521,"line_start":493,"line_end":493,"column_start":5,"column_end":75}},{"value":"/ the vertex offset, which is an `i32`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":59526,"byte_end":59567,"line_start":494,"line_end":494,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":59931,"byte_end":59946,"line_start":506,"line_end":506,"column_start":15,"column_end":30},"name":"draw_mesh_tasks","qualname":"::command::CommandBuffer::draw_mesh_tasks","value":"pub unsafe fn draw_mesh_tasks(&mut Self, TaskCount, TaskCount)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Dispatches `task_count` of threads. Similar to compute dispatch.\n","sig":null,"attributes":[{"value":"/ Dispatches `task_count` of threads. Similar to compute dispatch.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":59848,"byte_end":59916,"line_start":505,"line_end":505,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":60119,"byte_end":60143,"line_start":509,"line_end":509,"column_start":15,"column_end":39},"name":"draw_mesh_tasks_indirect","qualname":"::command::CommandBuffer::draw_mesh_tasks_indirect","value":"pub unsafe fn draw_mesh_tasks_indirect(&mut Self, &B::Buffer, buffer::Offset,\n                                       DrawCount, buffer::Stride)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Indirect version of `draw_mesh_tasks`. Analogous to `draw_indirect`, but for mesh shaders.\n","sig":null,"attributes":[{"value":"/ Indirect version of `draw_mesh_tasks`. Analogous to `draw_indirect`, but for mesh shaders.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":60010,"byte_end":60104,"line_start":508,"line_end":508,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":60588,"byte_end":60618,"line_start":521,"line_end":521,"column_start":15,"column_end":45},"name":"draw_mesh_tasks_indirect_count","qualname":"::command::CommandBuffer::draw_mesh_tasks_indirect_count","value":"pub unsafe fn draw_mesh_tasks_indirect_count(&mut Self, &B::Buffer,\n                                             buffer::Offset, &B::Buffer,\n                                             buffer::Offset, DrawCount,\n                                             buffer::Stride)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Like `draw_mesh_tasks_indirect` except that the draw count is read by\n the device from a buffer during execution. The command will read an\n unsigned 32-bit integer from `count_buffer` located at `count_buffer_offset`\n and use this as the draw count.\n","sig":null,"attributes":[{"value":"/ Like `draw_mesh_tasks_indirect` except that the draw count is read by","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":60299,"byte_end":60372,"line_start":517,"line_end":517,"column_start":5,"column_end":78}},{"value":"/ the device from a buffer during execution. The command will read an","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":60377,"byte_end":60448,"line_start":518,"line_end":518,"column_start":5,"column_end":76}},{"value":"/ unsigned 32-bit integer from `count_buffer` located at `count_buffer_offset`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":60453,"byte_end":60533,"line_start":519,"line_end":519,"column_start":5,"column_end":85}},{"value":"/ and use this as the draw count.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":60538,"byte_end":60573,"line_start":520,"line_end":520,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":60957,"byte_end":60966,"line_start":532,"line_end":532,"column_start":15,"column_end":24},"name":"set_event","qualname":"::command::CommandBuffer::set_event","value":"pub unsafe fn set_event(&mut Self, &B::Event, pso::PipelineStage)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Signals an event once all specified stages of the shader pipeline have completed.\n","sig":null,"attributes":[{"value":"/ Signals an event once all specified stages of the shader pipeline have completed.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":60857,"byte_end":60942,"line_start":531,"line_end":531,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":61129,"byte_end":61140,"line_start":535,"line_end":535,"column_start":15,"column_end":26},"name":"reset_event","qualname":"::command::CommandBuffer::reset_event","value":"pub unsafe fn reset_event(&mut Self, &B::Event, pso::PipelineStage)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Resets an event once all specified stages of the shader pipeline have completed.\n","sig":null,"attributes":[{"value":"/ Resets an event once all specified stages of the shader pipeline have completed.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":61030,"byte_end":61114,"line_start":534,"line_end":534,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":61605,"byte_end":61616,"line_start":543,"line_end":543,"column_start":15,"column_end":26},"name":"wait_events","qualname":"::command::CommandBuffer::wait_events","value":"pub unsafe fn wait_events<'a, I,\n                          J>(&mut Self, I, Range<pso::PipelineStage>, J) where\nI: Iterator<Item = &'a B::Event>, J: Iterator<Item = Barrier>","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Waits at some shader stage(s) until all events have been signalled.","sig":null,"attributes":[{"value":"/ Waits at some shader stage(s) until all events have been signalled.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":61204,"byte_end":61275,"line_start":537,"line_end":537,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":61280,"byte_end":61283,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ - `src_stages` specifies the shader pipeline stages in which the events were signalled.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":61288,"byte_end":61379,"line_start":539,"line_end":539,"column_start":5,"column_end":96}},{"value":"/ - `dst_stages` specifies the shader pipeline stages at which execution should wait.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":61384,"byte_end":61471,"line_start":540,"line_end":540,"column_start":5,"column_end":92}},{"value":"/ - `barriers` specifies a series of memory barriers to be executed before pipeline execution","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":61476,"byte_end":61571,"line_start":541,"line_end":541,"column_start":5,"column_end":100}},{"value":"/   resumes.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":61576,"byte_end":61590,"line_start":542,"line_end":542,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":62059,"byte_end":62070,"line_start":555,"line_end":555,"column_start":15,"column_end":26},"name":"begin_query","qualname":"::command::CommandBuffer::begin_query","value":"pub unsafe fn begin_query(&mut Self, query::Query<, B>, query::ControlFlags)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Begins a query operation.  Queries count operations or record timestamps\n resulting from commands that occur between the beginning and end of the query,\n and save the results to the query pool.\n","sig":null,"attributes":[{"value":"/ Begins a query operation.  Queries count operations or record timestamps","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":61833,"byte_end":61909,"line_start":552,"line_end":552,"column_start":5,"column_end":81}},{"value":"/ resulting from commands that occur between the beginning and end of the query,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":61914,"byte_end":61996,"line_start":553,"line_end":553,"column_start":5,"column_end":87}},{"value":"/ and save the results to the query pool.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":62001,"byte_end":62044,"line_start":554,"line_end":554,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":62171,"byte_end":62180,"line_start":558,"line_end":558,"column_start":15,"column_end":24},"name":"end_query","qualname":"::command::CommandBuffer::end_query","value":"pub unsafe fn end_query(&mut Self, query::Query<, B>)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" End a query.\n","sig":null,"attributes":[{"value":"/ End a query.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":62140,"byte_end":62156,"line_start":557,"line_end":557,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":62301,"byte_end":62317,"line_start":561,"line_end":561,"column_start":15,"column_end":31},"name":"reset_query_pool","qualname":"::command::CommandBuffer::reset_query_pool","value":"pub unsafe fn reset_query_pool(&mut Self, &B::QueryPool, Range<query::Id>)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Reset/clear the values in the given range of the query pool.\n","sig":null,"attributes":[{"value":"/ Reset/clear the values in the given range of the query pool.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":62222,"byte_end":62286,"line_start":560,"line_end":560,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":62435,"byte_end":62458,"line_start":564,"line_end":564,"column_start":15,"column_end":38},"name":"copy_query_pool_results","qualname":"::command::CommandBuffer::copy_query_pool_results","value":"pub unsafe fn copy_query_pool_results(&mut Self, &B::QueryPool,\n                                      Range<query::Id>, &B::Buffer,\n                                      buffer::Offset, buffer::Stride,\n                                      query::ResultFlags)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Copy query results into a buffer.\n","sig":null,"attributes":[{"value":"/ Copy query results into a buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":62383,"byte_end":62420,"line_start":563,"line_end":563,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":62736,"byte_end":62751,"line_start":575,"line_end":575,"column_start":15,"column_end":30},"name":"write_timestamp","qualname":"::command::CommandBuffer::write_timestamp","value":"pub unsafe fn write_timestamp(&mut Self, pso::PipelineStage,\n                              query::Query<, B>)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Requests a timestamp to be written.\n","sig":null,"attributes":[{"value":"/ Requests a timestamp to be written.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":62682,"byte_end":62721,"line_start":574,"line_end":574,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":63220,"byte_end":63243,"line_start":582,"line_end":582,"column_start":15,"column_end":38},"name":"push_graphics_constants","qualname":"::command::CommandBuffer::push_graphics_constants","value":"pub unsafe fn push_graphics_constants(&mut Self, &B::PipelineLayout,\n                                      pso::ShaderStageFlags, u32, &[u32])","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Modify constant data in a graphics pipeline. Push constants are intended to modify data in a\n pipeline more quickly than a updating the values inside a descriptor set.","sig":null,"attributes":[{"value":"/ Modify constant data in a graphics pipeline. Push constants are intended to modify data in a","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":62820,"byte_end":62916,"line_start":577,"line_end":577,"column_start":5,"column_end":101}},{"value":"/ pipeline more quickly than a updating the values inside a descriptor set.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":62921,"byte_end":62998,"line_start":578,"line_end":578,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":63003,"byte_end":63006,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ Push constants must be aligned to 4 bytes, and to guarantee alignment, this function takes a","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":63011,"byte_end":63107,"line_start":580,"line_end":580,"column_start":5,"column_end":101}},{"value":"/ `&[u32]` instead of a `&[u8]`. Note that the offset is still specified in units of bytes.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":63112,"byte_end":63205,"line_start":581,"line_end":581,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":63798,"byte_end":63820,"line_start":595,"line_end":595,"column_start":15,"column_end":37},"name":"push_compute_constants","qualname":"::command::CommandBuffer::push_compute_constants","value":"pub unsafe fn push_compute_constants(&mut Self, &B::PipelineLayout, u32,\n                                     &[u32])","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Modify constant data in a compute pipeline. Push constants are intended to modify data in a\n pipeline more quickly than a updating the values inside a descriptor set.","sig":null,"attributes":[{"value":"/ Modify constant data in a compute pipeline. Push constants are intended to modify data in a","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":63399,"byte_end":63494,"line_start":590,"line_end":590,"column_start":5,"column_end":100}},{"value":"/ pipeline more quickly than a updating the values inside a descriptor set.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":63499,"byte_end":63576,"line_start":591,"line_end":591,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":63581,"byte_end":63584,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ Push constants must be aligned to 4 bytes, and to guarantee alignment, this function takes a","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":63589,"byte_end":63685,"line_start":593,"line_end":593,"column_start":5,"column_end":101}},{"value":"/ `&[u32]` instead of a `&[u8]`. Note that the offset is still specified in units of bytes.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":63690,"byte_end":63783,"line_start":594,"line_end":594,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":64000,"byte_end":64016,"line_start":603,"line_end":603,"column_start":15,"column_end":31},"name":"execute_commands","qualname":"::command::CommandBuffer::execute_commands","value":"pub unsafe fn execute_commands<'a, T>(&mut Self, T) where T: Iterator<Item =\n&'a B::CommandBuffer>","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Execute the given secondary command buffers.\n","sig":null,"attributes":[{"value":"/ Execute the given secondary command buffers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":63937,"byte_end":63985,"line_start":602,"line_end":602,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":64185,"byte_end":64204,"line_start":608,"line_end":608,"column_start":15,"column_end":34},"name":"insert_debug_marker","qualname":"::command::CommandBuffer::insert_debug_marker","value":"pub unsafe fn insert_debug_marker(&mut Self, &str, u32)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Debug mark the current spot in the command buffer.\n","sig":null,"attributes":[{"value":"/ Debug mark the current spot in the command buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":64116,"byte_end":64170,"line_start":607,"line_end":607,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":64328,"byte_end":64346,"line_start":610,"line_end":610,"column_start":15,"column_end":33},"name":"begin_debug_marker","qualname":"::command::CommandBuffer::begin_debug_marker","value":"pub unsafe fn begin_debug_marker(&mut Self, &str, u32)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" Start a debug marker at the current place in the command buffer.\n","sig":null,"attributes":[{"value":"/ Start a debug marker at the current place in the command buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":64245,"byte_end":64313,"line_start":609,"line_end":609,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":64446,"byte_end":64462,"line_start":612,"line_end":612,"column_start":15,"column_end":31},"name":"end_debug_marker","qualname":"::command::CommandBuffer::end_debug_marker","value":"pub unsafe fn end_debug_marker(&mut Self)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" End the last started debug marker scope.\n","sig":null,"attributes":[{"value":"/ End the last started debug marker scope.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":64387,"byte_end":64431,"line_start":611,"line_end":611,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":268},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"device","qualname":"::device","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":273},{"krate":0,"index":276},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":283},{"krate":0,"index":286},{"krate":0,"index":289},{"krate":0,"index":292},{"krate":0,"index":295},{"krate":0,"index":298},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":314},{"krate":0,"index":317},{"krate":0,"index":320},{"krate":0,"index":1770},{"krate":0,"index":1760},{"krate":0,"index":1762},{"krate":0,"index":1764},{"krate":0,"index":1765},{"krate":0,"index":1767},{"krate":0,"index":1768},{"krate":0,"index":1772},{"krate":0,"index":1773},{"krate":0,"index":1775},{"krate":0,"index":1777},{"krate":0,"index":1778},{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1787},{"krate":0,"index":1788},{"krate":0,"index":1790},{"krate":0,"index":1792},{"krate":0,"index":1793},{"krate":0,"index":1796},{"krate":0,"index":1801},{"krate":0,"index":1803},{"krate":0,"index":1805},{"krate":0,"index":1813},{"krate":0,"index":1814},{"krate":0,"index":1816},{"krate":0,"index":1818},{"krate":0,"index":1819},{"krate":0,"index":1822},{"krate":0,"index":1827},{"krate":0,"index":1829},{"krate":0,"index":1836},{"krate":0,"index":1837},{"krate":0,"index":1839},{"krate":0,"index":1841},{"krate":0,"index":1842},{"krate":0,"index":1845},{"krate":0,"index":1850},{"krate":0,"index":1852},{"krate":0,"index":1867},{"krate":0,"index":1868},{"krate":0,"index":1870},{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1876},{"krate":0,"index":1881},{"krate":0,"index":1883},{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1897},{"krate":0,"index":1899},{"krate":0,"index":1900},{"krate":0,"index":1903},{"krate":0,"index":1908},{"krate":0,"index":1910},{"krate":0,"index":1919},{"krate":0,"index":1924},{"krate":0,"index":1926},{"krate":0,"index":1928},{"krate":0,"index":1929},{"krate":0,"index":1931},{"krate":0,"index":1932},{"krate":0,"index":1934},{"krate":0,"index":1936},{"krate":0,"index":1937},{"krate":0,"index":1940},{"krate":0,"index":1945},{"krate":0,"index":1947},{"krate":0,"index":1957},{"krate":0,"index":1962},{"krate":0,"index":323}],"decl_id":null,"docs":" Logical graphics device.","sig":null,"attributes":[{"value":"/ Logical graphics device.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":69446,"byte_end":69474,"line_start":1,"line_end":1,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":69475,"byte_end":69478,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Device","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":69479,"byte_end":69491,"line_start":3,"line_end":3,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":69492,"byte_end":69495,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module exposes the [`Device`][Device] trait, which provides methods for creating","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":69496,"byte_end":69585,"line_start":5,"line_end":5,"column_start":1,"column_end":90}},{"value":"/ and managing graphics resources such as buffers, images and memory.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":69586,"byte_end":69657,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":69658,"byte_end":69661,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The `Adapter` and `Device` types are very similar to the Vulkan concept of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":69662,"byte_end":69740,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ \"physical devices\" vs. \"logical devices\"; an `Adapter` is single GPU","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":69741,"byte_end":69813,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/ (or CPU) that implements a backend, a `Device` is a","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":69814,"byte_end":69869,"line_start":10,"line_end":10,"column_start":1,"column_end":56}},{"value":"/ handle to that physical device that has the requested capabilities","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":69870,"byte_end":69940,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ and is used to actually do things.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":69941,"byte_end":69979,"line_start":12,"line_end":12,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1770},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":70393,"byte_end":70403,"line_start":31,"line_end":31,"column_start":12,"column_end":22},"name":"DeviceLost","qualname":"::device::DeviceLost","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error occurred caused device to be lost.\n","sig":null,"attributes":[{"value":"/ Error occurred caused device to be lost.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":70260,"byte_end":70304,"line_start":28,"line_end":28,"column_start":1,"column_end":45}},{"value":"error(\"Device lost\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":70358,"byte_end":70381,"line_start":30,"line_end":30,"column_start":1,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1783},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":70581,"byte_end":70585,"line_start":38,"line_end":38,"column_start":5,"column_end":9},"name":"Host","qualname":"::device::OutOfMemory::Host","value":"OutOfMemory::Host","parent":{"krate":0,"index":1772},"children":[],"decl_id":null,"docs":" Host memory exhausted.\n","sig":null,"attributes":[{"value":"/ Host memory exhausted.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":70515,"byte_end":70541,"line_start":36,"line_end":36,"column_start":5,"column_end":31}},{"value":"error(\"Out of host memory\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":70546,"byte_end":70576,"line_start":37,"line_end":37,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1785},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":70661,"byte_end":70667,"line_start":41,"line_end":41,"column_start":5,"column_end":11},"name":"Device","qualname":"::device::OutOfMemory::Device","value":"OutOfMemory::Device","parent":{"krate":0,"index":1772},"children":[],"decl_id":null,"docs":" Device memory exhausted.\n","sig":null,"attributes":[{"value":"/ Device memory exhausted.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":70591,"byte_end":70619,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"error(\"Out of device memory\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":70624,"byte_end":70656,"line_start":40,"line_end":40,"column_start":5,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":1772},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":70497,"byte_end":70508,"line_start":35,"line_end":35,"column_start":10,"column_end":21},"name":"OutOfMemory","qualname":"::device::OutOfMemory","value":"pub enum OutOfMemory { Host, Device, }","parent":null,"children":[{"krate":0,"index":1783},{"krate":0,"index":1785}],"decl_id":null,"docs":" Error allocating memory.\n","sig":null,"attributes":[{"value":"/ Error allocating memory.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":70406,"byte_end":70434,"line_start":33,"line_end":33,"column_start":1,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1807},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":70876,"byte_end":70887,"line_start":49,"line_end":49,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::device::WaitError::OutOfMemory","value":"WaitError::OutOfMemory(OutOfMemory)","parent":{"krate":0,"index":1787},"children":[],"decl_id":null,"docs":" Out of either host or device memory.\n","sig":null,"attributes":[{"value":"/ Out of either host or device memory.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":70805,"byte_end":70845,"line_start":47,"line_end":47,"column_start":5,"column_end":45}},{"value":"error(transparent)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":70850,"byte_end":70871,"line_start":48,"line_end":48,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1810},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":70963,"byte_end":70973,"line_start":52,"line_end":52,"column_start":5,"column_end":15},"name":"DeviceLost","qualname":"::device::WaitError::DeviceLost","value":"WaitError::DeviceLost(DeviceLost)","parent":{"krate":0,"index":1787},"children":[],"decl_id":null,"docs":" Device is lost\n","sig":null,"attributes":[{"value":"/ Device is lost","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":70914,"byte_end":70932,"line_start":50,"line_end":50,"column_start":5,"column_end":23}},{"value":"error(transparent)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":70937,"byte_end":70958,"line_start":51,"line_end":51,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":1787},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":70789,"byte_end":70798,"line_start":46,"line_end":46,"column_start":10,"column_end":19},"name":"WaitError","qualname":"::device::WaitError","value":"pub enum WaitError { OutOfMemory(OutOfMemory), DeviceLost(DeviceLost), }","parent":null,"children":[{"krate":0,"index":1807},{"krate":0,"index":1810}],"decl_id":null,"docs":" Error occurring when waiting for fences or events.\n","sig":null,"attributes":[{"value":"/ Error occurring when waiting for fences or events.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":70672,"byte_end":70726,"line_start":44,"line_end":44,"column_start":1,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1831},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":71195,"byte_end":71206,"line_start":60,"line_end":60,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::device::AllocationError::OutOfMemory","value":"AllocationError::OutOfMemory(OutOfMemory)","parent":{"krate":0,"index":1813},"children":[],"decl_id":null,"docs":" Out of either host or device memory.\n","sig":null,"attributes":[{"value":"/ Out of either host or device memory.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":71124,"byte_end":71164,"line_start":58,"line_end":58,"column_start":5,"column_end":45}},{"value":"error(transparent)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":71169,"byte_end":71190,"line_start":59,"line_end":59,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1834},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":71307,"byte_end":71321,"line_start":64,"line_end":64,"column_start":5,"column_end":19},"name":"TooManyObjects","qualname":"::device::AllocationError::TooManyObjects","value":"AllocationError::TooManyObjects","parent":{"krate":0,"index":1813},"children":[],"decl_id":null,"docs":" Cannot create any more objects.\n","sig":null,"attributes":[{"value":"/ Cannot create any more objects.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":71234,"byte_end":71269,"line_start":62,"line_end":62,"column_start":5,"column_end":40}},{"value":"error(\"Too many objects\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":71274,"byte_end":71302,"line_start":63,"line_end":63,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":1813},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":71102,"byte_end":71117,"line_start":57,"line_end":57,"column_start":10,"column_end":25},"name":"AllocationError","qualname":"::device::AllocationError","value":"pub enum AllocationError { OutOfMemory(OutOfMemory), TooManyObjects, }","parent":null,"children":[{"krate":0,"index":1831},{"krate":0,"index":1834}],"decl_id":null,"docs":" Possible cause of allocation failure.\n","sig":null,"attributes":[{"value":"/ Possible cause of allocation failure.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":70998,"byte_end":71039,"line_start":55,"line_end":55,"column_start":1,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1854},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":71521,"byte_end":71532,"line_start":72,"line_end":72,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::device::CreationError::OutOfMemory","value":"CreationError::OutOfMemory(OutOfMemory)","parent":{"krate":0,"index":1836},"children":[],"decl_id":null,"docs":" Out of either host or device memory.\n","sig":null,"attributes":[{"value":"/ Out of either host or device memory.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":71450,"byte_end":71490,"line_start":70,"line_end":70,"column_start":5,"column_end":45}},{"value":"error(transparent)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":71495,"byte_end":71516,"line_start":71,"line_end":71,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1857},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":71690,"byte_end":71710,"line_start":75,"line_end":75,"column_start":5,"column_end":25},"name":"InitializationFailed","qualname":"::device::CreationError::InitializationFailed","value":"CreationError::InitializationFailed","parent":{"krate":0,"index":1836},"children":[],"decl_id":null,"docs":" Device initialization failed due to implementation specific errors.\n","sig":null,"attributes":[{"value":"/ Device initialization failed due to implementation specific errors.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":71559,"byte_end":71630,"line_start":73,"line_end":73,"column_start":5,"column_end":76}},{"value":"error(\"Implementation specific error occurred\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":71635,"byte_end":71685,"line_start":74,"line_end":74,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1859},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":71866,"byte_end":71882,"line_start":79,"line_end":79,"column_start":5,"column_end":21},"name":"MissingExtension","qualname":"::device::CreationError::MissingExtension","value":"CreationError::MissingExtension","parent":{"krate":0,"index":1836},"children":[],"decl_id":null,"docs":" At least one of the user requested extensions if not supported by the\n physical device.\n","sig":null,"attributes":[{"value":"/ At least one of the user requested extensions if not supported by the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":71716,"byte_end":71789,"line_start":76,"line_end":76,"column_start":5,"column_end":78}},{"value":"/ physical device.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":71794,"byte_end":71814,"line_start":77,"line_end":77,"column_start":5,"column_end":25}},{"value":"error(\"Requested extension is missing\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":71819,"byte_end":71861,"line_start":78,"line_end":78,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1861},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":72157,"byte_end":72171,"line_start":86,"line_end":86,"column_start":5,"column_end":19},"name":"MissingFeature","qualname":"::device::CreationError::MissingFeature","value":"CreationError::MissingFeature","parent":{"krate":0,"index":1836},"children":[],"decl_id":null,"docs":" At least one of the user requested features if not supported by the\n physical device.","sig":null,"attributes":[{"value":"/ At least one of the user requested features if not supported by the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":71888,"byte_end":71959,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/ physical device.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":71964,"byte_end":71984,"line_start":81,"line_end":81,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":71989,"byte_end":71992,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Use [`features`](trait.PhysicalDevice.html#tymethod.features)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":71997,"byte_end":72062,"line_start":83,"line_end":83,"column_start":5,"column_end":70}},{"value":"/ for checking the supported features.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":72067,"byte_end":72107,"line_start":84,"line_end":84,"column_start":5,"column_end":45}},{"value":"error(\"Requested feature is missing\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":72112,"byte_end":72152,"line_start":85,"line_end":85,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1863},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":72437,"byte_end":72451,"line_start":92,"line_end":92,"column_start":5,"column_end":19},"name":"TooManyObjects","qualname":"::device::CreationError::TooManyObjects","value":"CreationError::TooManyObjects","parent":{"krate":0,"index":1836},"children":[],"decl_id":null,"docs":" Too many logical devices have been created from this physical device.","sig":null,"attributes":[{"value":"/ Too many logical devices have been created from this physical device.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":72177,"byte_end":72250,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":72255,"byte_end":72258,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ The implementation may only support one logical device for each physical","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":72263,"byte_end":72339,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ device or lacks resources to allocate a new device.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":72344,"byte_end":72399,"line_start":90,"line_end":90,"column_start":5,"column_end":60}},{"value":"error(\"Too many objects\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":72404,"byte_end":72432,"line_start":91,"line_end":91,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1865},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":72725,"byte_end":72735,"line_start":99,"line_end":99,"column_start":5,"column_end":15},"name":"DeviceLost","qualname":"::device::CreationError::DeviceLost","value":"CreationError::DeviceLost","parent":{"krate":0,"index":1836},"children":[],"decl_id":null,"docs":" The logical or physical device are lost during the device creation\n process.","sig":null,"attributes":[{"value":"/ The logical or physical device are lost during the device creation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":72457,"byte_end":72527,"line_start":93,"line_end":93,"column_start":5,"column_end":75}},{"value":"/ process.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":72532,"byte_end":72544,"line_start":94,"line_end":94,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":72549,"byte_end":72552,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ This may be caused by hardware failure, physical device removal,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":72557,"byte_end":72625,"line_start":96,"line_end":96,"column_start":5,"column_end":73}},{"value":"/ power outage, etc.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":72630,"byte_end":72652,"line_start":97,"line_end":97,"column_start":5,"column_end":27}},{"value":"error(\"Logical or Physical device was lost during creation\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":72657,"byte_end":72720,"line_start":98,"line_end":98,"column_start":5,"column_end":68}}]},{"kind":"Enum","id":{"krate":0,"index":1836},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":71430,"byte_end":71443,"line_start":69,"line_end":69,"column_start":10,"column_end":23},"name":"CreationError","qualname":"::device::CreationError","value":"pub enum CreationError {\n    OutOfMemory(OutOfMemory),\n    InitializationFailed,\n    MissingExtension,\n    MissingFeature,\n    TooManyObjects,\n    DeviceLost,\n}","parent":null,"children":[{"krate":0,"index":1854},{"krate":0,"index":1857},{"krate":0,"index":1859},{"krate":0,"index":1861},{"krate":0,"index":1863},{"krate":0,"index":1865}],"decl_id":null,"docs":" Device creation errors during `open`.\n","sig":null,"attributes":[{"value":"/ Device creation errors during `open`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":71326,"byte_end":71367,"line_start":67,"line_end":67,"column_start":1,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1885},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":72919,"byte_end":72930,"line_start":107,"line_end":107,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::device::MapError::OutOfMemory","value":"MapError::OutOfMemory(OutOfMemory)","parent":{"krate":0,"index":1867},"children":[],"decl_id":null,"docs":" Out of either host or device memory.\n","sig":null,"attributes":[{"value":"/ Out of either host or device memory.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":72848,"byte_end":72888,"line_start":105,"line_end":105,"column_start":5,"column_end":45}},{"value":"error(transparent)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":72893,"byte_end":72914,"line_start":106,"line_end":106,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1888},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":73077,"byte_end":73088,"line_start":110,"line_end":110,"column_start":5,"column_end":16},"name":"OutOfBounds","qualname":"::device::MapError::OutOfBounds","value":"MapError::OutOfBounds","parent":{"krate":0,"index":1867},"children":[],"decl_id":null,"docs":" The requested mapping range is outside of the resource.\n","sig":null,"attributes":[{"value":"/ The requested mapping range is outside of the resource.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":72957,"byte_end":73016,"line_start":108,"line_end":108,"column_start":5,"column_end":64}},{"value":"error(\"Requested range is outside the resource\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":73021,"byte_end":73072,"line_start":109,"line_end":109,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1890},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":73269,"byte_end":73282,"line_start":113,"line_end":113,"column_start":5,"column_end":18},"name":"MappingFailed","qualname":"::device::MapError::MappingFailed","value":"MapError::MappingFailed","parent":{"krate":0,"index":1867},"children":[],"decl_id":null,"docs":" Failed to allocate an appropriately sized contiguous virtual address range.\n","sig":null,"attributes":[{"value":"/ Failed to allocate an appropriately sized contiguous virtual address range.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":73094,"byte_end":73173,"line_start":111,"line_end":111,"column_start":5,"column_end":84}},{"value":"error(\"Unable to allocate an appropriately sized contiguous virtual address range\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":73178,"byte_end":73264,"line_start":112,"line_end":112,"column_start":5,"column_end":91}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1892},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":73365,"byte_end":73371,"line_start":116,"line_end":116,"column_start":5,"column_end":11},"name":"Access","qualname":"::device::MapError::Access","value":"MapError::Access","parent":{"krate":0,"index":1867},"children":[],"decl_id":null,"docs":" Memory is not CPU visible.\n","sig":null,"attributes":[{"value":"/ Memory is not CPU visible.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":73288,"byte_end":73318,"line_start":114,"line_end":114,"column_start":5,"column_end":35}},{"value":"error(\"Memory is not CPU visible\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":73323,"byte_end":73360,"line_start":115,"line_end":115,"column_start":5,"column_end":42}}]},{"kind":"Enum","id":{"krate":0,"index":1867},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":72833,"byte_end":72841,"line_start":104,"line_end":104,"column_start":10,"column_end":18},"name":"MapError","qualname":"::device::MapError","value":"pub enum MapError {\n    OutOfMemory(OutOfMemory),\n    OutOfBounds,\n    MappingFailed,\n    Access,\n}","parent":null,"children":[{"krate":0,"index":1885},{"krate":0,"index":1888},{"krate":0,"index":1890},{"krate":0,"index":1892}],"decl_id":null,"docs":" Error accessing a mapping.\n","sig":null,"attributes":[{"value":"/ Error accessing a mapping.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":72740,"byte_end":72770,"line_start":102,"line_end":102,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1912},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":73576,"byte_end":73587,"line_start":124,"line_end":124,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::device::BindError::OutOfMemory","value":"BindError::OutOfMemory(OutOfMemory)","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" Out of either host or device memory.\n","sig":null,"attributes":[{"value":"/ Out of either host or device memory.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":73505,"byte_end":73545,"line_start":122,"line_end":122,"column_start":5,"column_end":45}},{"value":"error(transparent)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":73550,"byte_end":73571,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1915},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":73725,"byte_end":73736,"line_start":127,"line_end":127,"column_start":5,"column_end":16},"name":"WrongMemory","qualname":"::device::BindError::WrongMemory","value":"BindError::WrongMemory","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" Requested binding to memory that doesn't support the required operations.\n","sig":null,"attributes":[{"value":"/ Requested binding to memory that doesn't support the required operations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":73614,"byte_end":73691,"line_start":125,"line_end":125,"column_start":5,"column_end":82}},{"value":"error(\"Wrong memory\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":73696,"byte_end":73720,"line_start":126,"line_end":126,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1917},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":73846,"byte_end":73857,"line_start":130,"line_end":130,"column_start":5,"column_end":16},"name":"OutOfBounds","qualname":"::device::BindError::OutOfBounds","value":"BindError::OutOfBounds","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" Requested binding to an invalid memory.\n","sig":null,"attributes":[{"value":"/ Requested binding to an invalid memory.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":73742,"byte_end":73785,"line_start":128,"line_end":128,"column_start":5,"column_end":48}},{"value":"error(\"Requested range is outside the resource\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":73790,"byte_end":73841,"line_start":129,"line_end":129,"column_start":5,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":1894},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":73489,"byte_end":73498,"line_start":121,"line_end":121,"column_start":10,"column_end":19},"name":"BindError","qualname":"::device::BindError","value":"pub enum BindError { OutOfMemory(OutOfMemory), WrongMemory, OutOfBounds, }","parent":null,"children":[{"krate":0,"index":1912},{"krate":0,"index":1915},{"krate":0,"index":1917}],"decl_id":null,"docs":" Error binding a resource to memory allocation.\n","sig":null,"attributes":[{"value":"/ Error binding a resource to memory allocation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":73376,"byte_end":73426,"line_start":119,"line_end":119,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1920},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":74047,"byte_end":74050,"line_start":138,"line_end":138,"column_start":5,"column_end":8},"name":"Any","qualname":"::device::WaitFor::Any","value":"WaitFor::Any","parent":{"krate":0,"index":1919},"children":[],"decl_id":null,"docs":" Wait for any target.\n","sig":null,"attributes":[{"value":"/ Wait for any target.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":74018,"byte_end":74042,"line_start":137,"line_end":137,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1922},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":74094,"byte_end":74097,"line_start":140,"line_end":140,"column_start":5,"column_end":8},"name":"All","qualname":"::device::WaitFor::All","value":"WaitFor::All","parent":{"krate":0,"index":1919},"children":[],"decl_id":null,"docs":" Wait for all targets at once.\n","sig":null,"attributes":[{"value":"/ Wait for all targets at once.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":74056,"byte_end":74089,"line_start":139,"line_end":139,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":1919},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":74004,"byte_end":74011,"line_start":136,"line_end":136,"column_start":10,"column_end":17},"name":"WaitFor","qualname":"::device::WaitFor","value":"pub enum WaitFor { Any, All, }","parent":null,"children":[{"krate":0,"index":1920},{"krate":0,"index":1922}],"decl_id":null,"docs":" Specifies the waiting targets.\n","sig":null,"attributes":[{"value":"/ Specifies the waiting targets.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":73862,"byte_end":73896,"line_start":133,"line_end":133,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1949},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":74301,"byte_end":74312,"line_start":148,"line_end":148,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::device::ShaderError::Unsupported","value":"ShaderError::Unsupported","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Unsupported module.\n","sig":null,"attributes":[{"value":"/ Unsupported module.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":74226,"byte_end":74249,"line_start":146,"line_end":146,"column_start":5,"column_end":28}},{"value":"error(\"Shader module is not supported\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":74254,"byte_end":74296,"line_start":147,"line_end":147,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1951},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":74400,"byte_end":74417,"line_start":151,"line_end":151,"column_start":5,"column_end":22},"name":"CompilationFailed","qualname":"::device::ShaderError::CompilationFailed","value":"ShaderError::CompilationFailed(String)","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Compilation failed.\n","sig":null,"attributes":[{"value":"/ Compilation failed.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":74318,"byte_end":74341,"line_start":149,"line_end":149,"column_start":5,"column_end":28}},{"value":"error(\"Shader module failed to compile: {0:}\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":74346,"byte_end":74395,"line_start":150,"line_end":150,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1954},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":74491,"byte_end":74502,"line_start":154,"line_end":154,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::device::ShaderError::OutOfMemory","value":"ShaderError::OutOfMemory(OutOfMemory)","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Device ran out of memory.\n","sig":null,"attributes":[{"value":"/ Device ran out of memory.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":74431,"byte_end":74460,"line_start":152,"line_end":152,"column_start":5,"column_end":34}},{"value":"error(transparent)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":74465,"byte_end":74486,"line_start":153,"line_end":153,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":1931},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":74208,"byte_end":74219,"line_start":145,"line_end":145,"column_start":10,"column_end":21},"name":"ShaderError","qualname":"::device::ShaderError","value":"pub enum ShaderError {\n    Unsupported,\n    CompilationFailed(String),\n    OutOfMemory(OutOfMemory),\n}","parent":null,"children":[{"krate":0,"index":1949},{"krate":0,"index":1951},{"krate":0,"index":1954}],"decl_id":null,"docs":" An error from creating a shader module.\n","sig":null,"attributes":[{"value":"/ An error from creating a shader module.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":74102,"byte_end":74145,"line_start":143,"line_end":143,"column_start":1,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1959},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":74663,"byte_end":74668,"line_start":162,"line_end":162,"column_start":5,"column_end":10},"name":"SpirV","qualname":"::device::ShaderModuleDesc::SpirV","value":"ShaderModuleDesc::SpirV(&'a [u32])","parent":{"krate":0,"index":1957},"children":[],"decl_id":null,"docs":" SPIR-V word array.\n","sig":null,"attributes":[{"value":"/ SPIR-V word array.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":74636,"byte_end":74658,"line_start":161,"line_end":161,"column_start":5,"column_end":27}}]},{"kind":"Enum","id":{"krate":0,"index":1957},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":74609,"byte_end":74625,"line_start":160,"line_end":160,"column_start":10,"column_end":26},"name":"ShaderModuleDesc","qualname":"::device::ShaderModuleDesc","value":"pub enum ShaderModuleDesc<'a> { SpirV(&'a [u32]), }","parent":null,"children":[{"krate":0,"index":1959}],"decl_id":null,"docs":" Source shader code for a module.\n","sig":null,"attributes":[{"value":"/ Source shader code for a module.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":74528,"byte_end":74564,"line_start":157,"line_end":157,"column_start":1,"column_end":37}},{"value":"non_exhaustive","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":74582,"byte_end":74599,"line_start":159,"line_end":159,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":323},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":75558,"byte_end":75564,"line_start":184,"line_end":184,"column_start":11,"column_end":17},"name":"Device","qualname":"::device::Device","value":"Device<B: Backend>: fmt::Debug + Any + Send + Sync","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":384},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430}],"decl_id":null,"docs":" Logical device handle, responsible for creating and managing resources\n for the physical device it was created from.","sig":null,"attributes":[{"value":"/ Logical device handle, responsible for creating and managing resources","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":74684,"byte_end":74758,"line_start":165,"line_end":165,"column_start":1,"column_end":75}},{"value":"/ for the physical device it was created from.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":74759,"byte_end":74807,"line_start":166,"line_end":166,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":74808,"byte_end":74811,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ ## Resource Construction and Handling","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":74812,"byte_end":74853,"line_start":168,"line_end":168,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":74854,"byte_end":74857,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ This device structure can then be used to create and manage different resources,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":74858,"byte_end":74942,"line_start":170,"line_end":170,"column_start":1,"column_end":85}},{"value":"/ like [buffers][Device::create_buffer], [shader modules][Device::create_shader_module]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":74943,"byte_end":75032,"line_start":171,"line_end":171,"column_start":1,"column_end":90}},{"value":"/ and [images][Device::create_image]. See the individual methods for more information.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":75033,"byte_end":75121,"line_start":172,"line_end":172,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":75122,"byte_end":75125,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ ## Mutability","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":75126,"byte_end":75143,"line_start":174,"line_end":174,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":75144,"byte_end":75147,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ All the methods get `&self`. Any internal mutability of the `Device` is hidden from the user.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":75148,"byte_end":75245,"line_start":176,"line_end":176,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":75246,"byte_end":75249,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ ## Synchronization","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":75250,"byte_end":75272,"line_start":178,"line_end":178,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":75273,"byte_end":75276,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ `Device` should be usable concurrently from multiple threads. The `Send` and `Sync` bounds","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":75277,"byte_end":75371,"line_start":180,"line_end":180,"column_start":1,"column_end":95}},{"value":"/ are not enforced at the HAL level due to OpenGL constraint (to be revised). Users can still","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":75372,"byte_end":75467,"line_start":181,"line_end":181,"column_start":1,"column_end":96}},{"value":"/ benefit from the backends that support synchronization of the `Device`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":75468,"byte_end":75543,"line_start":182,"line_end":182,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":75544,"byte_end":75547,"line_start":183,"line_end":183,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":75974,"byte_end":75989,"line_start":193,"line_end":193,"column_start":15,"column_end":30},"name":"allocate_memory","qualname":"::device::Device::allocate_memory","value":"pub unsafe fn allocate_memory(&Self, MemoryTypeId, u64)\n-> Result<B::Memory, AllocationError>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Allocates a memory segment of a specified type.","sig":null,"attributes":[{"value":"/ Allocates a memory segment of a specified type.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":75615,"byte_end":75666,"line_start":185,"line_end":185,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":75671,"byte_end":75674,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ There is only a limited amount of allocations allowed depending on the implementation!","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":75679,"byte_end":75769,"line_start":187,"line_end":187,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":75774,"byte_end":75777,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":75782,"byte_end":75797,"line_start":189,"line_end":189,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":75802,"byte_end":75805,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ * `memory_type` - Index of the memory type in the memory properties of the associated physical device.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":75810,"byte_end":75916,"line_start":191,"line_end":191,"column_start":5,"column_end":111}},{"value":"/ * `size` - Size of the allocation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":75921,"byte_end":75959,"line_start":192,"line_end":192,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":76147,"byte_end":76158,"line_start":200,"line_end":200,"column_start":15,"column_end":26},"name":"free_memory","qualname":"::device::Device::free_memory","value":"pub unsafe fn free_memory(&Self, B::Memory)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Free device memory\n","sig":null,"attributes":[{"value":"/ Free device memory","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":76110,"byte_end":76132,"line_start":199,"line_end":199,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":76435,"byte_end":76454,"line_start":206,"line_end":206,"column_start":15,"column_end":34},"name":"create_command_pool","qualname":"::device::Device::create_command_pool","value":"pub unsafe fn create_command_pool(&Self, QueueFamilyId,\n                                  CommandPoolCreateFlags)\n-> Result<B::CommandPool, OutOfMemory>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Create a new [command pool][crate::pool::CommandPool] for a given queue family.","sig":null,"attributes":[{"value":"/ Create a new [command pool][crate::pool::CommandPool] for a given queue family.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":76191,"byte_end":76274,"line_start":202,"line_end":202,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":76279,"byte_end":76282,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ *Note*: the family has to be associated with one of [the queue groups","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":76287,"byte_end":76360,"line_start":204,"line_end":204,"column_start":5,"column_end":78}},{"value":"/ of this device][crate::adapter::Gpu::queue_groups].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":76365,"byte_end":76420,"line_start":205,"line_end":205,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":76641,"byte_end":76661,"line_start":213,"line_end":213,"column_start":15,"column_end":35},"name":"destroy_command_pool","qualname":"::device::Device::destroy_command_pool","value":"pub unsafe fn destroy_command_pool(&Self, B::CommandPool)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Destroy a command pool.\n","sig":null,"attributes":[{"value":"/ Destroy a command pool.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":76599,"byte_end":76626,"line_start":212,"line_end":212,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":77331,"byte_end":77349,"line_start":227,"line_end":227,"column_start":15,"column_end":33},"name":"create_render_pass","qualname":"::device::Device::create_render_pass","value":"pub unsafe fn create_render_pass<'a, Ia, Is, Id>(&Self, Ia, Is, Id)\n-> Result<B::RenderPass, OutOfMemory> where Ia: Iterator<Item =\npass::Attachment>, Is: Iterator<Item = pass::SubpassDesc>, Id: Iterator<Item =\npass::SubpassDependency>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Create a [render pass][crate::pass] with the given attachments and subpasses.","sig":null,"attributes":[{"value":"/ Create a [render pass][crate::pass] with the given attachments and subpasses.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":76697,"byte_end":76778,"line_start":215,"line_end":215,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":76783,"byte_end":76786,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The use of a render pass in a command buffer is a *render pass* instance.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":76791,"byte_end":76868,"line_start":217,"line_end":217,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":76873,"byte_end":76876,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":76881,"byte_end":76896,"line_start":219,"line_end":219,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":76901,"byte_end":76904,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ * `attachments` - [image attachments][crate::pass::Attachment] to be used in","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":76909,"byte_end":76989,"line_start":221,"line_end":221,"column_start":5,"column_end":85}},{"value":"/   this render pass. Usually you need at least one attachment, to be used as output.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":76994,"byte_end":77081,"line_start":222,"line_end":222,"column_start":5,"column_end":92}},{"value":"/ * `subpasses` - [subpasses][crate::pass::SubpassDesc] to use.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":77086,"byte_end":77151,"line_start":223,"line_end":223,"column_start":5,"column_end":70}},{"value":"/   You need to use at least one subpass.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":77156,"byte_end":77199,"line_start":224,"line_end":224,"column_start":5,"column_end":48}},{"value":"/ * `dependencies` - [dependencies between subpasses][crate::pass::SubpassDependency].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":77204,"byte_end":77292,"line_start":225,"line_end":225,"column_start":5,"column_end":93}},{"value":"/   Can be empty.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":77297,"byte_end":77316,"line_start":226,"line_end":226,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":77735,"byte_end":77754,"line_start":239,"line_end":239,"column_start":15,"column_end":34},"name":"destroy_render_pass","qualname":"::device::Device::destroy_render_pass","value":"pub unsafe fn destroy_render_pass(&Self, B::RenderPass)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Destroys a *render pass* created by this device.\n","sig":null,"attributes":[{"value":"/ Destroys a *render pass* created by this device.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":77668,"byte_end":77720,"line_start":238,"line_end":238,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":78724,"byte_end":78746,"line_start":257,"line_end":257,"column_start":15,"column_end":37},"name":"create_pipeline_layout","qualname":"::device::Device::create_pipeline_layout","value":"pub unsafe fn create_pipeline_layout<'a, Is, Ic>(&Self, Is, Ic)\n-> Result<B::PipelineLayout, OutOfMemory> where Is: Iterator<Item =\n&'a B::DescriptorSetLayout>, Ic: Iterator<Item =\n(pso::ShaderStageFlags, Range<u32>)>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Create a new pipeline layout object.","sig":null,"attributes":[{"value":"/ Create a new pipeline layout object.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":77787,"byte_end":77827,"line_start":241,"line_end":241,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":77832,"byte_end":77835,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":77840,"byte_end":77855,"line_start":243,"line_end":243,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":77860,"byte_end":77863,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ * `set_layouts` - Descriptor set layouts","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":77868,"byte_end":77912,"line_start":245,"line_end":245,"column_start":5,"column_end":49}},{"value":"/ * `push_constants` - Ranges of push constants. A shader stage may only contain one push","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":77917,"byte_end":78008,"line_start":246,"line_end":246,"column_start":5,"column_end":96}},{"value":"/     constant block. The range is defined in units of bytes.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":78013,"byte_end":78076,"line_start":247,"line_end":247,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":78081,"byte_end":78084,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ # PipelineLayout","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":78089,"byte_end":78109,"line_start":249,"line_end":249,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":78114,"byte_end":78117,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Access to descriptor sets from a pipeline is accomplished through a *pipeline layout*.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":78122,"byte_end":78212,"line_start":251,"line_end":251,"column_start":5,"column_end":95}},{"value":"/ Zero or more descriptor set layouts and zero or more push constant ranges are combined to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":78217,"byte_end":78310,"line_start":252,"line_end":252,"column_start":5,"column_end":98}},{"value":"/ form a pipeline layout object which describes the complete set of resources that **can** be","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":78315,"byte_end":78410,"line_start":253,"line_end":253,"column_start":5,"column_end":100}},{"value":"/ accessed by a pipeline. The pipeline layout represents a sequence of descriptor sets with","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":78415,"byte_end":78508,"line_start":254,"line_end":254,"column_start":5,"column_end":98}},{"value":"/ each having a specific layout. This sequence of layouts is used to determine the interface","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":78513,"byte_end":78607,"line_start":255,"line_end":255,"column_start":5,"column_end":99}},{"value":"/ between shader stages and shader resources. Each pipeline is created using a pipeline layout.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":78612,"byte_end":78709,"line_start":256,"line_end":256,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":79064,"byte_end":79087,"line_start":267,"line_end":267,"column_start":15,"column_end":38},"name":"destroy_pipeline_layout","qualname":"::device::Device::destroy_pipeline_layout","value":"pub unsafe fn destroy_pipeline_layout(&Self, B::PipelineLayout)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Destroy a pipeline layout object\n","sig":null,"attributes":[{"value":"/ Destroy a pipeline layout object","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":79013,"byte_end":79049,"line_start":266,"line_end":266,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":79178,"byte_end":79199,"line_start":270,"line_end":270,"column_start":15,"column_end":36},"name":"create_pipeline_cache","qualname":"::device::Device::create_pipeline_cache","value":"pub unsafe fn create_pipeline_cache(&Self, Option<&[u8]>)\n-> Result<B::PipelineCache, OutOfMemory>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Create a pipeline cache object.\n","sig":null,"attributes":[{"value":"/ Create a pipeline cache object.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":79128,"byte_end":79163,"line_start":269,"line_end":269,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":79358,"byte_end":79381,"line_start":276,"line_end":276,"column_start":15,"column_end":38},"name":"get_pipeline_cache_data","qualname":"::device::Device::get_pipeline_cache_data","value":"pub unsafe fn get_pipeline_cache_data(&Self, &B::PipelineCache)\n-> Result<Vec<u8>, OutOfMemory>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Retrieve data from pipeline cache object.\n","sig":null,"attributes":[{"value":"/ Retrieve data from pipeline cache object.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":79298,"byte_end":79343,"line_start":275,"line_end":275,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":79556,"byte_end":79577,"line_start":282,"line_end":282,"column_start":15,"column_end":36},"name":"merge_pipeline_caches","qualname":"::device::Device::merge_pipeline_caches","value":"pub unsafe fn merge_pipeline_caches<'a, I>(&Self, &mut B::PipelineCache, I)\n-> Result<(), OutOfMemory> where I: Iterator<Item = &'a B::PipelineCache>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Merge a number of source pipeline caches into the target one.\n","sig":null,"attributes":[{"value":"/ Merge a number of source pipeline caches into the target one.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":79476,"byte_end":79541,"line_start":281,"line_end":281,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":79809,"byte_end":79831,"line_start":291,"line_end":291,"column_start":15,"column_end":37},"name":"destroy_pipeline_cache","qualname":"::device::Device::destroy_pipeline_cache","value":"pub unsafe fn destroy_pipeline_cache(&Self, B::PipelineCache)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Destroy a pipeline cache object.\n","sig":null,"attributes":[{"value":"/ Destroy a pipeline cache object.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":79758,"byte_end":79794,"line_start":290,"line_end":290,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":80219,"byte_end":80243,"line_start":302,"line_end":302,"column_start":15,"column_end":39},"name":"create_graphics_pipeline","qualname":"::device::Device::create_graphics_pipeline","value":"pub unsafe fn create_graphics_pipeline<'a>(&Self, &pso::GraphicsPipelineDesc,\n                                           Option<&B::PipelineCache>)\n-> Result<B::GraphicsPipeline, pso::CreationError>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Create a graphics pipeline.","sig":null,"attributes":[{"value":"/ Create a graphics pipeline.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":79870,"byte_end":79901,"line_start":293,"line_end":293,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":79906,"byte_end":79909,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":79914,"byte_end":79929,"line_start":295,"line_end":295,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":79934,"byte_end":79937,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ * `desc` - the [description][crate::pso::GraphicsPipelineDesc] of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":79942,"byte_end":80011,"line_start":297,"line_end":297,"column_start":5,"column_end":74}},{"value":"/   the graphics pipeline to create.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":80016,"byte_end":80054,"line_start":298,"line_end":298,"column_start":5,"column_end":43}},{"value":"/ * `cache` - the pipeline cache,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":80059,"byte_end":80094,"line_start":299,"line_end":299,"column_start":5,"column_end":40}},{"value":"/   [obtained from this device][Device::create_pipeline_cache],","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":80099,"byte_end":80164,"line_start":300,"line_end":300,"column_start":5,"column_end":70}},{"value":"/   used for faster PSO creation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":80169,"byte_end":80204,"line_start":301,"line_end":301,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":80635,"byte_end":80660,"line_start":312,"line_end":312,"column_start":15,"column_end":40},"name":"destroy_graphics_pipeline","qualname":"::device::Device::destroy_graphics_pipeline","value":"pub unsafe fn destroy_graphics_pipeline(&Self, B::GraphicsPipeline)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Destroy a graphics pipeline.","sig":null,"attributes":[{"value":"/ Destroy a graphics pipeline.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":80418,"byte_end":80450,"line_start":308,"line_end":308,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":80455,"byte_end":80458,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ The graphics pipeline shouldn't be destroyed before any submitted command buffer,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":80463,"byte_end":80548,"line_start":310,"line_end":310,"column_start":5,"column_end":90}},{"value":"/ which references the graphics pipeline, has finished execution.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":80553,"byte_end":80620,"line_start":311,"line_end":311,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":80750,"byte_end":80773,"line_start":315,"line_end":315,"column_start":15,"column_end":38},"name":"create_compute_pipeline","qualname":"::device::Device::create_compute_pipeline","value":"pub unsafe fn create_compute_pipeline<'a>(&Self, &pso::ComputePipelineDesc,\n                                          Option<&B::PipelineCache>)\n-> Result<B::ComputePipeline, pso::CreationError>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Create a compute pipeline.\n","sig":null,"attributes":[{"value":"/ Create a compute pipeline.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":80705,"byte_end":80735,"line_start":314,"line_end":314,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":81160,"byte_end":81184,"line_start":325,"line_end":325,"column_start":15,"column_end":39},"name":"destroy_compute_pipeline","qualname":"::device::Device::destroy_compute_pipeline","value":"pub unsafe fn destroy_compute_pipeline(&Self, B::ComputePipeline)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Destroy a compute pipeline.","sig":null,"attributes":[{"value":"/ Destroy a compute pipeline.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":80946,"byte_end":80977,"line_start":321,"line_end":321,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":80982,"byte_end":80985,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ The compute pipeline shouldn't be destroyed before any submitted command buffer,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":80990,"byte_end":81074,"line_start":323,"line_end":323,"column_start":5,"column_end":89}},{"value":"/ which references the compute pipeline, has finished execution.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":81079,"byte_end":81145,"line_start":324,"line_end":324,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":81395,"byte_end":81413,"line_start":331,"line_end":331,"column_start":15,"column_end":33},"name":"create_framebuffer","qualname":"::device::Device::create_framebuffer","value":"pub unsafe fn create_framebuffer<I>(&Self, &B::RenderPass, I, image::Extent)\n-> Result<B::Framebuffer, OutOfMemory> where I: Iterator<Item =\nimage::FramebufferAttachment>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Create a new framebuffer object.","sig":null,"attributes":[{"value":"/ Create a new framebuffer object.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":81228,"byte_end":81264,"line_start":327,"line_end":327,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":81269,"byte_end":81272,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":81277,"byte_end":81289,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/ - `extent.width`, `extent.height` and `extent.depth` **must** be greater than `0`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":81294,"byte_end":81380,"line_start":330,"line_end":330,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":81835,"byte_end":81854,"line_start":344,"line_end":344,"column_start":15,"column_end":34},"name":"destroy_framebuffer","qualname":"::device::Device::destroy_framebuffer","value":"pub unsafe fn destroy_framebuffer(&Self, B::Framebuffer)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Destroy a framebuffer.","sig":null,"attributes":[{"value":"/ Destroy a framebuffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":81636,"byte_end":81662,"line_start":340,"line_end":340,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":81667,"byte_end":81670,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ The framebuffer shouldn't be destroyed before any submitted command buffer,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":81675,"byte_end":81754,"line_start":342,"line_end":342,"column_start":5,"column_end":84}},{"value":"/ which references the framebuffer, has finished execution.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":81759,"byte_end":81820,"line_start":343,"line_end":343,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":82258,"byte_end":82278,"line_start":352,"line_end":352,"column_start":15,"column_end":35},"name":"create_shader_module","qualname":"::device::Device::create_shader_module","value":"pub unsafe fn create_shader_module(&Self, &[u32])\n-> Result<B::ShaderModule, ShaderError>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Create a new shader module object from the SPIR-V binary data.","sig":null,"attributes":[{"value":"/ Create a new shader module object from the SPIR-V binary data.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":81889,"byte_end":81955,"line_start":346,"line_end":346,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":81960,"byte_end":81963,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ Once a shader module has been created, any [entry points][crate::pso::EntryPoint]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":81968,"byte_end":82053,"line_start":348,"line_end":348,"column_start":5,"column_end":90}},{"value":"/ it contains can be used in pipeline shader stages of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":82058,"byte_end":82114,"line_start":349,"line_end":349,"column_start":5,"column_end":61}},{"value":"/ [compute pipelines][crate::pso::ComputePipelineDesc] and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":82119,"byte_end":82179,"line_start":350,"line_end":350,"column_start":5,"column_end":65}},{"value":"/ [graphics pipelines][crate::pso::GraphicsPipelineDesc].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":82184,"byte_end":82243,"line_start":351,"line_end":351,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":82416,"byte_end":82446,"line_start":355,"line_end":355,"column_start":15,"column_end":45},"name":"create_shader_module_from_naga","qualname":"::device::Device::create_shader_module_from_naga","value":"pub unsafe fn create_shader_module_from_naga(&Self, naga::Module)\n-> Result<B::ShaderModule, (ShaderError, naga::Module)>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Create a new shader module from the `naga` module.\n","sig":null,"attributes":[{"value":"/ Create a new shader module from the `naga` module.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":82347,"byte_end":82401,"line_start":354,"line_end":354,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":82774,"byte_end":82795,"line_start":365,"line_end":365,"column_start":15,"column_end":36},"name":"destroy_shader_module","qualname":"::device::Device::destroy_shader_module","value":"pub unsafe fn destroy_shader_module(&Self, B::ShaderModule)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Destroy a shader module module","sig":null,"attributes":[{"value":"/ Destroy a shader module module","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":82616,"byte_end":82650,"line_start":362,"line_end":362,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":82655,"byte_end":82658,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ A shader module can be destroyed while pipelines created using its shaders are still in use.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":82663,"byte_end":82759,"line_start":364,"line_end":364,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":82985,"byte_end":82998,"line_start":370,"line_end":370,"column_start":15,"column_end":28},"name":"create_buffer","qualname":"::device::Device::create_buffer","value":"pub unsafe fn create_buffer(&Self, u64, buffer::Usage)\n-> Result<B::Buffer, buffer::CreationError>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Create a new buffer (unbound).","sig":null,"attributes":[{"value":"/ Create a new buffer (unbound).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":82834,"byte_end":82868,"line_start":367,"line_end":367,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":82873,"byte_end":82876,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ The created buffer won't have associated memory until `bind_buffer_memory` is called.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":82881,"byte_end":82970,"line_start":369,"line_end":369,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":83177,"byte_end":83200,"line_start":377,"line_end":377,"column_start":15,"column_end":38},"name":"get_buffer_requirements","qualname":"::device::Device::get_buffer_requirements","value":"pub unsafe fn get_buffer_requirements(&Self, &B::Buffer) -> Requirements","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Get memory requirements for the buffer\n","sig":null,"attributes":[{"value":"/ Get memory requirements for the buffer","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":83120,"byte_end":83162,"line_start":376,"line_end":376,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":83451,"byte_end":83469,"line_start":383,"line_end":383,"column_start":15,"column_end":33},"name":"bind_buffer_memory","qualname":"::device::Device::bind_buffer_memory","value":"pub unsafe fn bind_buffer_memory(&Self, &B::Memory, u64, &mut B::Buffer)\n-> Result<(), BindError>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Bind memory to a buffer.","sig":null,"attributes":[{"value":"/ Bind memory to a buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":83247,"byte_end":83275,"line_start":379,"line_end":379,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":83280,"byte_end":83283,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Be sure to check that there is enough memory available for the buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":83288,"byte_end":83362,"line_start":381,"line_end":381,"column_start":5,"column_end":79}},{"value":"/ Use `get_buffer_requirements` to acquire the memory requirements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":83367,"byte_end":83436,"line_start":382,"line_end":382,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":83785,"byte_end":83799,"line_start":394,"line_end":394,"column_start":15,"column_end":29},"name":"destroy_buffer","qualname":"::device::Device::destroy_buffer","value":"pub unsafe fn destroy_buffer(&Self, B::Buffer)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Destroy a buffer.","sig":null,"attributes":[{"value":"/ Destroy a buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":83601,"byte_end":83622,"line_start":390,"line_end":390,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":83627,"byte_end":83630,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ The buffer shouldn't be destroyed before any submitted command buffer,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":83635,"byte_end":83709,"line_start":392,"line_end":392,"column_start":5,"column_end":79}},{"value":"/ which references the images, has finished execution.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":83714,"byte_end":83770,"line_start":393,"line_end":393,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":83882,"byte_end":83900,"line_start":397,"line_end":397,"column_start":15,"column_end":33},"name":"create_buffer_view","qualname":"::device::Device::create_buffer_view","value":"pub unsafe fn create_buffer_view(&Self, &B::Buffer, Option<format::Format>,\n                                 buffer::SubRange)\n-> Result<B::BufferView, buffer::ViewCreationError>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Create a new buffer view object\n","sig":null,"attributes":[{"value":"/ Create a new buffer view object","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":83832,"byte_end":83867,"line_start":396,"line_end":396,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":84123,"byte_end":84142,"line_start":405,"line_end":405,"column_start":15,"column_end":34},"name":"destroy_buffer_view","qualname":"::device::Device::destroy_buffer_view","value":"pub unsafe fn destroy_buffer_view(&Self, B::BufferView)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Destroy a buffer view object\n","sig":null,"attributes":[{"value":"/ Destroy a buffer view object","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":84076,"byte_end":84108,"line_start":404,"line_end":404,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":84288,"byte_end":84300,"line_start":410,"line_end":410,"column_start":15,"column_end":27},"name":"create_image","qualname":"::device::Device::create_image","value":"pub unsafe fn create_image(&Self, image::Kind, image::Level, format::Format,\n                           image::Tiling, image::Usage,\n                           image::ViewCapabilities)\n-> Result<B::Image, image::CreationError>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Create a new image object\n","sig":null,"attributes":[{"value":"/ Create a new image object","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":84244,"byte_end":84273,"line_start":409,"line_end":409,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":84624,"byte_end":84646,"line_start":421,"line_end":421,"column_start":15,"column_end":37},"name":"get_image_requirements","qualname":"::device::Device::get_image_requirements","value":"pub unsafe fn get_image_requirements(&Self, &B::Image) -> Requirements","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Get memory requirements for the Image\n","sig":null,"attributes":[{"value":"/ Get memory requirements for the Image","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":84568,"byte_end":84609,"line_start":420,"line_end":420,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":84712,"byte_end":84743,"line_start":424,"line_end":424,"column_start":15,"column_end":46},"name":"get_image_subresource_footprint","qualname":"::device::Device::get_image_subresource_footprint","value":"pub unsafe fn get_image_subresource_footprint(&Self, &B::Image,\n                                              image::Subresource)\n-> image::SubresourceFootprint","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":84694,"byte_end":84697,"line_start":423,"line_end":423,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":84926,"byte_end":84943,"line_start":431,"line_end":431,"column_start":15,"column_end":32},"name":"bind_image_memory","qualname":"::device::Device::bind_image_memory","value":"pub unsafe fn bind_image_memory(&Self, &B::Memory, u64, &mut B::Image)\n-> Result<(), BindError>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Bind device memory to an image object\n","sig":null,"attributes":[{"value":"/ Bind device memory to an image object","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":84870,"byte_end":84911,"line_start":430,"line_end":430,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":85259,"byte_end":85272,"line_start":442,"line_end":442,"column_start":15,"column_end":28},"name":"destroy_image","qualname":"::device::Device::destroy_image","value":"pub unsafe fn destroy_image(&Self, B::Image)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Destroy an image.","sig":null,"attributes":[{"value":"/ Destroy an image.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":85076,"byte_end":85097,"line_start":438,"line_end":438,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":85102,"byte_end":85105,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ The image shouldn't be destroyed before any submitted command buffer,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":85110,"byte_end":85183,"line_start":440,"line_end":440,"column_start":5,"column_end":78}},{"value":"/ which references the images, has finished execution.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":85188,"byte_end":85244,"line_start":441,"line_end":441,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":85365,"byte_end":85382,"line_start":445,"line_end":445,"column_start":15,"column_end":32},"name":"create_image_view","qualname":"::device::Device::create_image_view","value":"pub unsafe fn create_image_view(&Self, &B::Image, image::ViewKind,\n                                format::Format, format::Swizzle,\n                                image::SubresourceRange)\n-> Result<B::ImageView, image::ViewCreationError>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Create an image view from an existing image\n","sig":null,"attributes":[{"value":"/ Create an image view from an existing image","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":85303,"byte_end":85350,"line_start":444,"line_end":444,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":85676,"byte_end":85694,"line_start":455,"line_end":455,"column_start":15,"column_end":33},"name":"destroy_image_view","qualname":"::device::Device::destroy_image_view","value":"pub unsafe fn destroy_image_view(&Self, B::ImageView)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Destroy an image view object\n","sig":null,"attributes":[{"value":"/ Destroy an image view object","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":85629,"byte_end":85661,"line_start":454,"line_end":454,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":85774,"byte_end":85788,"line_start":458,"line_end":458,"column_start":15,"column_end":29},"name":"create_sampler","qualname":"::device::Device::create_sampler","value":"pub unsafe fn create_sampler(&Self, &image::SamplerDesc)\n-> Result<B::Sampler, AllocationError>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Create a new sampler object\n","sig":null,"attributes":[{"value":"/ Create a new sampler object","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":85728,"byte_end":85759,"line_start":457,"line_end":457,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":85934,"byte_end":85949,"line_start":464,"line_end":464,"column_start":15,"column_end":30},"name":"destroy_sampler","qualname":"::device::Device::destroy_sampler","value":"pub unsafe fn destroy_sampler(&Self, B::Sampler)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Destroy a sampler object\n","sig":null,"attributes":[{"value":"/ Destroy a sampler object","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":85891,"byte_end":85919,"line_start":463,"line_end":463,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":86182,"byte_end":86204,"line_start":470,"line_end":470,"column_start":15,"column_end":37},"name":"create_descriptor_pool","qualname":"::device::Device::create_descriptor_pool","value":"pub unsafe fn create_descriptor_pool<I>(&Self, usize, I,\n                                        DescriptorPoolCreateFlags)\n-> Result<B::DescriptorPool, OutOfMemory> where I: Iterator<Item =\npso::DescriptorRangeDesc>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Create a descriptor pool.","sig":null,"attributes":[{"value":"/ Create a descriptor pool.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":85984,"byte_end":86013,"line_start":466,"line_end":466,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":86018,"byte_end":86021,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ Descriptor pools allow allocation of descriptor sets.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":86026,"byte_end":86083,"line_start":468,"line_end":468,"column_start":5,"column_end":62}},{"value":"/ The pool can't be modified directly, only through updating descriptor sets.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":86088,"byte_end":86167,"line_start":469,"line_end":469,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":86740,"byte_end":86763,"line_start":484,"line_end":484,"column_start":15,"column_end":38},"name":"destroy_descriptor_pool","qualname":"::device::Device::destroy_descriptor_pool","value":"pub unsafe fn destroy_descriptor_pool(&Self, B::DescriptorPool)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Destroy a descriptor pool object","sig":null,"attributes":[{"value":"/ Destroy a descriptor pool object","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":86438,"byte_end":86474,"line_start":479,"line_end":479,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":86479,"byte_end":86482,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ When a pool is destroyed, all descriptor sets allocated from the pool are implicitly freed","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":86487,"byte_end":86581,"line_start":481,"line_end":481,"column_start":5,"column_end":99}},{"value":"/ and become invalid. Descriptor sets allocated from a given pool do not need to be freed","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":86586,"byte_end":86677,"line_start":482,"line_end":482,"column_start":5,"column_end":96}},{"value":"/ before destroying that descriptor pool.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":86682,"byte_end":86725,"line_start":483,"line_end":483,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":87242,"byte_end":87270,"line_start":492,"line_end":492,"column_start":15,"column_end":43},"name":"create_descriptor_set_layout","qualname":"::device::Device::create_descriptor_set_layout","value":"pub unsafe fn create_descriptor_set_layout<'a, I, J>(&Self, I, J)\n-> Result<B::DescriptorSetLayout, OutOfMemory> where I: Iterator<Item =\npso::DescriptorSetLayoutBinding>, J: Iterator<Item = &'a B::Sampler>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Create a descriptor set layout.","sig":null,"attributes":[{"value":"/ Create a descriptor set layout.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":86802,"byte_end":86837,"line_start":486,"line_end":486,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":86842,"byte_end":86845,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ A descriptor set layout object is defined by an array of zero or more descriptor bindings.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":86850,"byte_end":86944,"line_start":488,"line_end":488,"column_start":5,"column_end":99}},{"value":"/ Each individual descriptor binding is specified by a descriptor type, a count (array size)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":86949,"byte_end":87043,"line_start":489,"line_end":489,"column_start":5,"column_end":99}},{"value":"/ of the number of descriptors in the binding, a set of shader stages that **can** access the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":87048,"byte_end":87143,"line_start":490,"line_end":490,"column_start":5,"column_end":100}},{"value":"/ binding, and (if using immutable samplers) an array of sampler descriptors.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":87148,"byte_end":87227,"line_start":491,"line_end":491,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":87579,"byte_end":87608,"line_start":502,"line_end":502,"column_start":15,"column_end":44},"name":"destroy_descriptor_set_layout","qualname":"::device::Device::destroy_descriptor_set_layout","value":"pub unsafe fn destroy_descriptor_set_layout(&Self, B::DescriptorSetLayout)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Destroy a descriptor set layout object\n","sig":null,"attributes":[{"value":"/ Destroy a descriptor set layout object","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":87522,"byte_end":87564,"line_start":501,"line_end":501,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":87735,"byte_end":87755,"line_start":505,"line_end":505,"column_start":15,"column_end":35},"name":"write_descriptor_set","qualname":"::device::Device::write_descriptor_set","value":"pub unsafe fn write_descriptor_set<'a, I>(&Self, pso::DescriptorSetWrite)\nwhere I: Iterator<Item = pso::Descriptor>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Specifying the parameters of a descriptor set write operation.\n","sig":null,"attributes":[{"value":"/ Specifying the parameters of a descriptor set write operation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":87654,"byte_end":87720,"line_start":504,"line_end":504,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":87948,"byte_end":87967,"line_start":510,"line_end":510,"column_start":15,"column_end":34},"name":"copy_descriptor_set","qualname":"::device::Device::copy_descriptor_set","value":"pub unsafe fn copy_descriptor_set<'a>(&Self, pso::DescriptorSetCopy)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Structure specifying a copy descriptor set operation.\n","sig":null,"attributes":[{"value":"/ Structure specifying a copy descriptor set operation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":87876,"byte_end":87933,"line_start":509,"line_end":509,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":88208,"byte_end":88218,"line_start":515,"line_end":515,"column_start":15,"column_end":25},"name":"map_memory","qualname":"::device::Device::map_memory","value":"pub unsafe fn map_memory(&Self, &mut B::Memory, Segment)\n-> Result<*mut u8, MapError>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Map a memory object into application address space","sig":null,"attributes":[{"value":"/ Map a memory object into application address space","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":88020,"byte_end":88074,"line_start":512,"line_end":512,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":88079,"byte_end":88082,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Call `map_memory()` to retrieve a host virtual address pointer to a region of a mappable memory object","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":88087,"byte_end":88193,"line_start":514,"line_end":514,"column_start":5,"column_end":111}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":88379,"byte_end":88405,"line_start":522,"line_end":522,"column_start":15,"column_end":41},"name":"flush_mapped_memory_ranges","qualname":"::device::Device::flush_mapped_memory_ranges","value":"pub unsafe fn flush_mapped_memory_ranges<'a, I>(&Self, I)\n-> Result<(), OutOfMemory> where I: Iterator<Item = (&'a B::Memory, Segment)>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Flush mapped memory ranges\n","sig":null,"attributes":[{"value":"/ Flush mapped memory ranges","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":88334,"byte_end":88364,"line_start":521,"line_end":521,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":88607,"byte_end":88638,"line_start":527,"line_end":527,"column_start":15,"column_end":46},"name":"invalidate_mapped_memory_ranges","qualname":"::device::Device::invalidate_mapped_memory_ranges","value":"pub unsafe fn invalidate_mapped_memory_ranges<'a, I>(&Self, I)\n-> Result<(), OutOfMemory> where I: Iterator<Item = (&'a B::Memory, Segment)>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Invalidate ranges of non-coherent memory from the host caches\n","sig":null,"attributes":[{"value":"/ Invalidate ranges of non-coherent memory from the host caches","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":88527,"byte_end":88592,"line_start":526,"line_end":526,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":88862,"byte_end":88874,"line_start":532,"line_end":532,"column_start":15,"column_end":27},"name":"unmap_memory","qualname":"::device::Device::unmap_memory","value":"pub unsafe fn unmap_memory(&Self, &mut B::Memory)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Unmap a memory object once host access to it is no longer needed by the application\n","sig":null,"attributes":[{"value":"/ Unmap a memory object once host access to it is no longer needed by the application","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":88760,"byte_end":88847,"line_start":531,"line_end":531,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":88954,"byte_end":88970,"line_start":535,"line_end":535,"column_start":8,"column_end":24},"name":"create_semaphore","qualname":"::device::Device::create_semaphore","value":"pub fn create_semaphore(&Self) -> Result<B::Semaphore, OutOfMemory>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Create a new semaphore object.\n","sig":null,"attributes":[{"value":"/ Create a new semaphore object.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":88912,"byte_end":88946,"line_start":534,"line_end":534,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":89067,"byte_end":89084,"line_start":538,"line_end":538,"column_start":15,"column_end":32},"name":"destroy_semaphore","qualname":"::device::Device::destroy_semaphore","value":"pub unsafe fn destroy_semaphore(&Self, B::Semaphore)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Destroy a semaphore object.\n","sig":null,"attributes":[{"value":"/ Destroy a semaphore object.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":89021,"byte_end":89052,"line_start":537,"line_end":537,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":89955,"byte_end":89967,"line_start":561,"line_end":561,"column_start":8,"column_end":20},"name":"create_fence","qualname":"::device::Device::create_fence","value":"pub fn create_fence(&Self, bool) -> Result<B::Fence, OutOfMemory>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Create a new fence object.","sig":null,"attributes":[{"value":"/ Create a new fence object.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":89123,"byte_end":89153,"line_start":540,"line_end":540,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":89158,"byte_end":89161,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ Fences are a synchronization primitive that **can** be used to insert a dependency from","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":89166,"byte_end":89257,"line_start":542,"line_end":542,"column_start":5,"column_end":96}},{"value":"/ a queue to the host.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":89262,"byte_end":89286,"line_start":543,"line_end":543,"column_start":5,"column_end":29}},{"value":"/ Fences have two states - signaled and unsignaled.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":89291,"byte_end":89344,"line_start":544,"line_end":544,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":89349,"byte_end":89352,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ A fence **can** be signaled as part of the execution of a","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":89357,"byte_end":89418,"line_start":546,"line_end":546,"column_start":5,"column_end":66}},{"value":"/ [queue submission][crate::queue::CommandQueue::submit] command.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":89423,"byte_end":89490,"line_start":547,"line_end":547,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":89495,"byte_end":89498,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Fences **can** be unsignaled on the host with","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":89503,"byte_end":89552,"line_start":549,"line_end":549,"column_start":5,"column_end":54}},{"value":"/ [`reset_fences`][Device::reset_fences].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":89557,"byte_end":89600,"line_start":550,"line_end":550,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":89605,"byte_end":89608,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ Fences **can** be waited on by the host with the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":89613,"byte_end":89665,"line_start":552,"line_end":552,"column_start":5,"column_end":57}},{"value":"/ [`wait_for_fences`][Device::wait_for_fences] command.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":89670,"byte_end":89727,"line_start":553,"line_end":553,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":89732,"byte_end":89735,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ A fence's current state **can** be queried with","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":89740,"byte_end":89791,"line_start":555,"line_end":555,"column_start":5,"column_end":56}},{"value":"/ [`get_fence_status`][Device::get_fence_status].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":89796,"byte_end":89847,"line_start":556,"line_end":556,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":89852,"byte_end":89855,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":89860,"byte_end":89875,"line_start":558,"line_end":558,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":89880,"byte_end":89883,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ * `signaled` - the fence will be in its signaled state.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":89888,"byte_end":89947,"line_start":560,"line_end":560,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":90104,"byte_end":90115,"line_start":564,"line_end":564,"column_start":15,"column_end":26},"name":"reset_fence","qualname":"::device::Device::reset_fence","value":"pub unsafe fn reset_fence(&Self, &mut B::Fence) -> Result<(), OutOfMemory>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Resets a given fence to its original, unsignaled state.\n","sig":null,"attributes":[{"value":"/ Resets a given fence to its original, unsignaled state.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":90030,"byte_end":90089,"line_start":563,"line_end":563,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":90305,"byte_end":90319,"line_start":568,"line_end":568,"column_start":15,"column_end":29},"name":"wait_for_fence","qualname":"::device::Device::wait_for_fence","value":"pub unsafe fn wait_for_fence(&Self, &B::Fence, u64) -> Result<bool, WaitError>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Blocks until the given fence is signaled.\n Returns true if the fence was signaled before the timeout.\n","sig":null,"attributes":[{"value":"/ Blocks until the given fence is signaled.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":90178,"byte_end":90223,"line_start":566,"line_end":566,"column_start":5,"column_end":50}},{"value":"/ Returns true if the fence was signaled before the timeout.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":90228,"byte_end":90290,"line_start":567,"line_end":567,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":90617,"byte_end":90632,"line_start":574,"line_end":574,"column_start":15,"column_end":30},"name":"wait_for_fences","qualname":"::device::Device::wait_for_fences","value":"pub unsafe fn wait_for_fences<'a, I>(&Self, I, WaitFor, u64)\n-> Result<bool, WaitError> where I: Iterator<Item = &'a B::Fence>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Blocks until all or one of the given fences are signaled.\n Returns true if fences were signaled before the timeout.\n","sig":null,"attributes":[{"value":"/ Blocks until all or one of the given fences are signaled.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":90476,"byte_end":90537,"line_start":572,"line_end":572,"column_start":5,"column_end":66}},{"value":"/ Returns true if fences were signaled before the timeout.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":90542,"byte_end":90602,"line_start":573,"line_end":573,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":92210,"byte_end":92226,"line_start":622,"line_end":622,"column_start":15,"column_end":31},"name":"get_fence_status","qualname":"::device::Device::get_fence_status","value":"pub unsafe fn get_fence_status(&Self, &B::Fence) -> Result<bool, DeviceLost>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" true for signaled, false for not ready\n","sig":null,"attributes":[{"value":"/ true for signaled, false for not ready","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":92153,"byte_end":92195,"line_start":621,"line_end":621,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":92327,"byte_end":92340,"line_start":625,"line_end":625,"column_start":15,"column_end":28},"name":"destroy_fence","qualname":"::device::Device::destroy_fence","value":"pub unsafe fn destroy_fence(&Self, B::Fence)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Destroy a fence object\n","sig":null,"attributes":[{"value":"/ Destroy a fence object","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":92286,"byte_end":92312,"line_start":624,"line_end":624,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":92406,"byte_end":92418,"line_start":628,"line_end":628,"column_start":8,"column_end":20},"name":"create_event","qualname":"::device::Device::create_event","value":"pub fn create_event(&Self) -> Result<B::Event, OutOfMemory>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Create an event object.\n","sig":null,"attributes":[{"value":"/ Create an event object.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":92371,"byte_end":92398,"line_start":627,"line_end":627,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":92508,"byte_end":92521,"line_start":631,"line_end":631,"column_start":15,"column_end":28},"name":"destroy_event","qualname":"::device::Device::destroy_event","value":"pub unsafe fn destroy_event(&Self, B::Event)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Destroy an event object.\n","sig":null,"attributes":[{"value":"/ Destroy an event object.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":92465,"byte_end":92493,"line_start":630,"line_end":630,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":92679,"byte_end":92695,"line_start":636,"line_end":636,"column_start":15,"column_end":31},"name":"get_event_status","qualname":"::device::Device::get_event_status","value":"pub unsafe fn get_event_status(&Self, &B::Event) -> Result<bool, WaitError>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Query the status of an event.","sig":null,"attributes":[{"value":"/ Query the status of an event.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":92552,"byte_end":92585,"line_start":633,"line_end":633,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":92590,"byte_end":92593,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if the event is set, or `false` if it is reset.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":92598,"byte_end":92664,"line_start":635,"line_end":635,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":92787,"byte_end":92796,"line_start":639,"line_end":639,"column_start":15,"column_end":24},"name":"set_event","qualname":"::device::Device::set_event","value":"pub unsafe fn set_event(&Self, &mut B::Event) -> Result<(), OutOfMemory>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Sets an event.\n","sig":null,"attributes":[{"value":"/ Sets an event.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":92754,"byte_end":92772,"line_start":638,"line_end":638,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":92894,"byte_end":92905,"line_start":642,"line_end":642,"column_start":15,"column_end":26},"name":"reset_event","qualname":"::device::Device::reset_event","value":"pub unsafe fn reset_event(&Self, &mut B::Event) -> Result<(), OutOfMemory>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Resets an event.\n","sig":null,"attributes":[{"value":"/ Resets an event.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":92859,"byte_end":92879,"line_start":641,"line_end":641,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":93173,"byte_end":93190,"line_start":648,"line_end":648,"column_start":15,"column_end":32},"name":"create_query_pool","qualname":"::device::Device::create_query_pool","value":"pub unsafe fn create_query_pool(&Self, query::Type, query::Id)\n-> Result<B::QueryPool, query::CreationError>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Create a new query pool object","sig":null,"attributes":[{"value":"/ Create a new query pool object","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":92968,"byte_end":93002,"line_start":644,"line_end":644,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":93007,"byte_end":93010,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ Queries are managed using query pool objects. Each query pool is a collection of a specific","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":93015,"byte_end":93110,"line_start":646,"line_end":646,"column_start":5,"column_end":100}},{"value":"/ number of queries of a particular type.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":93115,"byte_end":93158,"line_start":647,"line_end":647,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":93362,"byte_end":93380,"line_start":655,"line_end":655,"column_start":15,"column_end":33},"name":"destroy_query_pool","qualname":"::device::Device::destroy_query_pool","value":"pub unsafe fn destroy_query_pool(&Self, B::QueryPool)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Destroy a query pool object\n","sig":null,"attributes":[{"value":"/ Destroy a query pool object","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":93316,"byte_end":93347,"line_start":654,"line_end":654,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":93597,"byte_end":93619,"line_start":659,"line_end":659,"column_start":15,"column_end":37},"name":"get_query_pool_results","qualname":"::device::Device::get_query_pool_results","value":"pub unsafe fn get_query_pool_results(&Self, &B::QueryPool, Range<query::Id>,\n                                     &mut [u8], buffer::Stride,\n                                     query::ResultFlags)\n-> Result<bool, WaitError>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Get query pool results into the specified CPU memory.\n Returns `Ok(false)` if the results are not ready yet and neither of `WAIT` or `PARTIAL` flags are set.\n","sig":null,"attributes":[{"value":"/ Get query pool results into the specified CPU memory.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":93414,"byte_end":93471,"line_start":657,"line_end":657,"column_start":5,"column_end":62}},{"value":"/ Returns `Ok(false)` if the results are not ready yet and neither of `WAIT` or `PARTIAL` flags are set.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":93476,"byte_end":93582,"line_start":658,"line_end":658,"column_start":5,"column_end":111}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":93982,"byte_end":93991,"line_start":671,"line_end":671,"column_start":8,"column_end":17},"name":"wait_idle","qualname":"::device::Device::wait_idle","value":"pub fn wait_idle(&Self) -> Result<(), OutOfMemory>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Wait for all queues associated with this device to idle.","sig":null,"attributes":[{"value":"/ Wait for all queues associated with this device to idle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":93831,"byte_end":93891,"line_start":668,"line_end":668,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":93896,"byte_end":93899,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ Host access to all queues needs to be **externally** sycnhronized!","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":93904,"byte_end":93974,"line_start":670,"line_end":670,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":94230,"byte_end":94244,"line_start":675,"line_end":675,"column_start":15,"column_end":29},"name":"set_image_name","qualname":"::device::Device::set_image_name","value":"pub unsafe fn set_image_name(&Self, &mut B::Image, &str)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Associate a name with an image, for easier debugging in external tools or with validation\n layers that can print a friendly name when referring to objects in error messages\n","sig":null,"attributes":[{"value":"/ Associate a name with an image, for easier debugging in external tools or with validation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":94032,"byte_end":94125,"line_start":673,"line_end":673,"column_start":5,"column_end":98}},{"value":"/ layers that can print a friendly name when referring to objects in error messages","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":94130,"byte_end":94215,"line_start":674,"line_end":674,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":94489,"byte_end":94504,"line_start":678,"line_end":678,"column_start":15,"column_end":30},"name":"set_buffer_name","qualname":"::device::Device::set_buffer_name","value":"pub unsafe fn set_buffer_name(&Self, &mut B::Buffer, &str)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Associate a name with a buffer, for easier debugging in external tools or with validation\n layers that can print a friendly name when referring to objects in error messages\n","sig":null,"attributes":[{"value":"/ Associate a name with a buffer, for easier debugging in external tools or with validation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":94291,"byte_end":94384,"line_start":676,"line_end":676,"column_start":5,"column_end":98}},{"value":"/ layers that can print a friendly name when referring to objects in error messages","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":94389,"byte_end":94474,"line_start":677,"line_end":677,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":94759,"byte_end":94782,"line_start":681,"line_end":681,"column_start":15,"column_end":38},"name":"set_command_buffer_name","qualname":"::device::Device::set_command_buffer_name","value":"pub unsafe fn set_command_buffer_name(&Self, &mut B::CommandBuffer, &str)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Associate a name with a command buffer, for easier debugging in external tools or with\n validation layers that can print a friendly name when referring to objects in error messages\n","sig":null,"attributes":[{"value":"/ Associate a name with a command buffer, for easier debugging in external tools or with","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":94553,"byte_end":94643,"line_start":679,"line_end":679,"column_start":5,"column_end":95}},{"value":"/ validation layers that can print a friendly name when referring to objects in error messages","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":94648,"byte_end":94744,"line_start":680,"line_end":680,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":95047,"byte_end":95065,"line_start":684,"line_end":684,"column_start":15,"column_end":33},"name":"set_semaphore_name","qualname":"::device::Device::set_semaphore_name","value":"pub unsafe fn set_semaphore_name(&Self, &mut B::Semaphore, &str)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Associate a name with a semaphore, for easier debugging in external tools or with validation\n layers that can print a friendly name when referring to objects in error messages\n","sig":null,"attributes":[{"value":"/ Associate a name with a semaphore, for easier debugging in external tools or with validation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":94846,"byte_end":94942,"line_start":682,"line_end":682,"column_start":5,"column_end":101}},{"value":"/ layers that can print a friendly name when referring to objects in error messages","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":94947,"byte_end":95032,"line_start":683,"line_end":683,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":95317,"byte_end":95331,"line_start":687,"line_end":687,"column_start":15,"column_end":29},"name":"set_fence_name","qualname":"::device::Device::set_fence_name","value":"pub unsafe fn set_fence_name(&Self, &mut B::Fence, &str)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Associate a name with a fence, for easier debugging in external tools or with validation\n layers that can print a friendly name when referring to objects in error messages\n","sig":null,"attributes":[{"value":"/ Associate a name with a fence, for easier debugging in external tools or with validation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":95120,"byte_end":95212,"line_start":685,"line_end":685,"column_start":5,"column_end":97}},{"value":"/ layers that can print a friendly name when referring to objects in error messages","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":95217,"byte_end":95302,"line_start":686,"line_end":686,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":95581,"byte_end":95601,"line_start":690,"line_end":690,"column_start":15,"column_end":35},"name":"set_framebuffer_name","qualname":"::device::Device::set_framebuffer_name","value":"pub unsafe fn set_framebuffer_name(&Self, &mut B::Framebuffer, &str)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Associate a name with a framebuffer, for easier debugging in external tools or with\n validation layers that can print a friendly name when referring to objects in error messages\n","sig":null,"attributes":[{"value":"/ Associate a name with a framebuffer, for easier debugging in external tools or with","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":95378,"byte_end":95465,"line_start":688,"line_end":688,"column_start":5,"column_end":92}},{"value":"/ validation layers that can print a friendly name when referring to objects in error messages","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":95470,"byte_end":95566,"line_start":689,"line_end":689,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":95863,"byte_end":95883,"line_start":693,"line_end":693,"column_start":15,"column_end":35},"name":"set_render_pass_name","qualname":"::device::Device::set_render_pass_name","value":"pub unsafe fn set_render_pass_name(&Self, &mut B::RenderPass, &str)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Associate a name with a render pass, for easier debugging in external tools or with\n validation layers that can print a friendly name when referring to objects in error messages\n","sig":null,"attributes":[{"value":"/ Associate a name with a render pass, for easier debugging in external tools or with","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":95660,"byte_end":95747,"line_start":691,"line_end":691,"column_start":5,"column_end":92}},{"value":"/ validation layers that can print a friendly name when referring to objects in error messages","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":95752,"byte_end":95848,"line_start":692,"line_end":692,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":96147,"byte_end":96170,"line_start":696,"line_end":696,"column_start":15,"column_end":38},"name":"set_descriptor_set_name","qualname":"::device::Device::set_descriptor_set_name","value":"pub unsafe fn set_descriptor_set_name(&Self, &mut B::DescriptorSet, &str)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Associate a name with a descriptor set, for easier debugging in external tools or with\n validation layers that can print a friendly name when referring to objects in error messages\n","sig":null,"attributes":[{"value":"/ Associate a name with a descriptor set, for easier debugging in external tools or with","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":95941,"byte_end":96031,"line_start":694,"line_end":694,"column_start":5,"column_end":95}},{"value":"/ validation layers that can print a friendly name when referring to objects in error messages","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":96036,"byte_end":96132,"line_start":695,"line_end":695,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":96455,"byte_end":96485,"line_start":700,"line_end":700,"column_start":15,"column_end":45},"name":"set_descriptor_set_layout_name","qualname":"::device::Device::set_descriptor_set_layout_name","value":"pub unsafe fn set_descriptor_set_layout_name(&Self,\n                                             &mut B::DescriptorSetLayout,\n                                             &str)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Associate a name with a descriptor set layout, for easier debugging in external tools or\n with validation layers that can print a friendly name when referring to objects in error\n messages\n","sig":null,"attributes":[{"value":"/ Associate a name with a descriptor set layout, for easier debugging in external tools or","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":96234,"byte_end":96326,"line_start":697,"line_end":697,"column_start":5,"column_end":97}},{"value":"/ with validation layers that can print a friendly name when referring to objects in error","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":96331,"byte_end":96423,"line_start":698,"line_end":698,"column_start":5,"column_end":97}},{"value":"/ messages","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":96428,"byte_end":96440,"line_start":699,"line_end":699,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":96800,"byte_end":96824,"line_start":707,"line_end":707,"column_start":15,"column_end":39},"name":"set_pipeline_layout_name","qualname":"::device::Device::set_pipeline_layout_name","value":"pub unsafe fn set_pipeline_layout_name(&Self, &mut B::PipelineLayout, &str)","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" Associate a name with a pipeline layout, for easier debugging in external tools or with\n validation layers that can print a friendly name when referring to objects in error messages\n","sig":null,"attributes":[{"value":"/ Associate a name with a pipeline layout, for easier debugging in external tools or with","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":96593,"byte_end":96684,"line_start":705,"line_end":705,"column_start":5,"column_end":96}},{"value":"/ validation layers that can print a friendly name when referring to objects in error messages","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":96689,"byte_end":96785,"line_start":706,"line_end":706,"column_start":5,"column_end":101}}]},{"kind":"Mod","id":{"krate":0,"index":431},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"format","qualname":"::format","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","parent":null,"children":[{"krate":0,"index":1967},{"krate":0,"index":1969},{"krate":0,"index":1970},{"krate":0,"index":1971},{"krate":0,"index":1974},{"krate":0,"index":1975},{"krate":0,"index":1977},{"krate":0,"index":1979},{"krate":0,"index":1981},{"krate":0,"index":1983},{"krate":0,"index":1965},{"krate":0,"index":1986},{"krate":0,"index":1993},{"krate":0,"index":1995},{"krate":0,"index":1997},{"krate":0,"index":1999},{"krate":0,"index":2001},{"krate":0,"index":2010},{"krate":0,"index":2013},{"krate":0,"index":2015},{"krate":0,"index":2018},{"krate":0,"index":2020},{"krate":0,"index":2023},{"krate":0,"index":2025},{"krate":0,"index":2028},{"krate":0,"index":2030},{"krate":0,"index":2033},{"krate":0,"index":2036},{"krate":0,"index":2059},{"krate":0,"index":2064},{"krate":0,"index":2066},{"krate":0,"index":2067},{"krate":0,"index":2069},{"krate":0,"index":2070},{"krate":0,"index":2072},{"krate":0,"index":2075},{"krate":0,"index":2077},{"krate":0,"index":2078},{"krate":0,"index":2081},{"krate":0,"index":432},{"krate":0,"index":2083},{"krate":0,"index":2088},{"krate":0,"index":2090},{"krate":0,"index":2091},{"krate":0,"index":2093},{"krate":0,"index":2094},{"krate":0,"index":2096},{"krate":0,"index":2099},{"krate":0,"index":2101},{"krate":0,"index":2102},{"krate":0,"index":2105},{"krate":0,"index":434},{"krate":0,"index":2107},{"krate":0,"index":2126},{"krate":0,"index":2128},{"krate":0,"index":2129},{"krate":0,"index":2131},{"krate":0,"index":2132},{"krate":0,"index":2134},{"krate":0,"index":2137},{"krate":0,"index":2139},{"krate":0,"index":2140},{"krate":0,"index":2142},{"krate":0,"index":2144},{"krate":0,"index":2150},{"krate":0,"index":2152},{"krate":0,"index":2153},{"krate":0,"index":2155},{"krate":0,"index":2156},{"krate":0,"index":2158},{"krate":0,"index":2161},{"krate":0,"index":2163},{"krate":0,"index":2164},{"krate":0,"index":2167},{"krate":0,"index":435},{"krate":0,"index":437},{"krate":0,"index":2169},{"krate":0,"index":2173},{"krate":0,"index":2175},{"krate":0,"index":2177},{"krate":0,"index":2178},{"krate":0,"index":2180},{"krate":0,"index":2181},{"krate":0,"index":2184},{"krate":0,"index":2185},{"krate":0,"index":2187},{"krate":0,"index":2192},{"krate":0,"index":2194},{"krate":0,"index":2195},{"krate":0,"index":2196},{"krate":0,"index":2199},{"krate":0,"index":2200},{"krate":0,"index":2202},{"krate":0,"index":2204},{"krate":0,"index":2206},{"krate":0,"index":2208},{"krate":0,"index":2190},{"krate":0,"index":2211},{"krate":0,"index":2228},{"krate":0,"index":2230},{"krate":0,"index":2232},{"krate":0,"index":2234},{"krate":0,"index":2236},{"krate":0,"index":2255},{"krate":0,"index":2258},{"krate":0,"index":2260},{"krate":0,"index":2263},{"krate":0,"index":2265},{"krate":0,"index":2268},{"krate":0,"index":2270},{"krate":0,"index":2273},{"krate":0,"index":2275},{"krate":0,"index":2278},{"krate":0,"index":2281},{"krate":0,"index":2336},{"krate":0,"index":2338},{"krate":0,"index":2339},{"krate":0,"index":2340},{"krate":0,"index":2343},{"krate":0,"index":2344},{"krate":0,"index":2346},{"krate":0,"index":2348},{"krate":0,"index":2350},{"krate":0,"index":2352},{"krate":0,"index":2334},{"krate":0,"index":2355},{"krate":0,"index":2363},{"krate":0,"index":2365},{"krate":0,"index":2367},{"krate":0,"index":2369},{"krate":0,"index":2371},{"krate":0,"index":2381},{"krate":0,"index":2384},{"krate":0,"index":2386},{"krate":0,"index":2389},{"krate":0,"index":2391},{"krate":0,"index":2394},{"krate":0,"index":2396},{"krate":0,"index":2399},{"krate":0,"index":2401},{"krate":0,"index":2404},{"krate":0,"index":2407},{"krate":0,"index":2433},{"krate":0,"index":2452},{"krate":0,"index":2454},{"krate":0,"index":2455},{"krate":0,"index":2457},{"krate":0,"index":2458},{"krate":0,"index":2460},{"krate":0,"index":2463},{"krate":0,"index":2465},{"krate":0,"index":2466},{"krate":0,"index":2468},{"krate":0,"index":2473},{"krate":0,"index":2604},{"krate":0,"index":2606},{"krate":0,"index":2607},{"krate":0,"index":2609},{"krate":0,"index":2610},{"krate":0,"index":2612},{"krate":0,"index":2615},{"krate":0,"index":2617},{"krate":0,"index":2618},{"krate":0,"index":2620},{"krate":0,"index":2470},{"krate":0,"index":2622},{"krate":0,"index":2626},{"krate":0,"index":2628},{"krate":0,"index":2629},{"krate":0,"index":2631},{"krate":0,"index":2632},{"krate":0,"index":2634},{"krate":0,"index":2637},{"krate":0,"index":2639},{"krate":0,"index":2640},{"krate":0,"index":2643},{"krate":0,"index":440},{"krate":0,"index":3016},{"krate":0,"index":3388},{"krate":0,"index":3390},{"krate":0,"index":3391},{"krate":0,"index":3393},{"krate":0,"index":3394},{"krate":0,"index":3396},{"krate":0,"index":3399},{"krate":0,"index":3401},{"krate":0,"index":3402},{"krate":0,"index":3404},{"krate":0,"index":2645},{"krate":0,"index":2646},{"krate":0,"index":3406},{"krate":0,"index":3408},{"krate":0,"index":3410},{"krate":0,"index":3411},{"krate":0,"index":3413},{"krate":0,"index":3414},{"krate":0,"index":3416},{"krate":0,"index":3419},{"krate":0,"index":3421},{"krate":0,"index":3422},{"krate":0,"index":3424},{"krate":0,"index":2648},{"krate":0,"index":3426},{"krate":0,"index":3428},{"krate":0,"index":3430},{"krate":0,"index":3431},{"krate":0,"index":3433},{"krate":0,"index":3434},{"krate":0,"index":3436},{"krate":0,"index":3439},{"krate":0,"index":3441},{"krate":0,"index":3442},{"krate":0,"index":3444},{"krate":0,"index":2650},{"krate":0,"index":3446},{"krate":0,"index":3448},{"krate":0,"index":3450},{"krate":0,"index":3451},{"krate":0,"index":3453},{"krate":0,"index":3454},{"krate":0,"index":3456},{"krate":0,"index":3459},{"krate":0,"index":3461},{"krate":0,"index":3462},{"krate":0,"index":3464},{"krate":0,"index":2652},{"krate":0,"index":3466},{"krate":0,"index":3468},{"krate":0,"index":3470},{"krate":0,"index":3471},{"krate":0,"index":3473},{"krate":0,"index":3474},{"krate":0,"index":3476},{"krate":0,"index":3479},{"krate":0,"index":3481},{"krate":0,"index":3482},{"krate":0,"index":3484},{"krate":0,"index":2654},{"krate":0,"index":3486},{"krate":0,"index":3488},{"krate":0,"index":3490},{"krate":0,"index":3491},{"krate":0,"index":3493},{"krate":0,"index":3494},{"krate":0,"index":3496},{"krate":0,"index":3499},{"krate":0,"index":3501},{"krate":0,"index":3502},{"krate":0,"index":3504},{"krate":0,"index":2656},{"krate":0,"index":3506},{"krate":0,"index":3508},{"krate":0,"index":3510},{"krate":0,"index":3511},{"krate":0,"index":3513},{"krate":0,"index":3514},{"krate":0,"index":3516},{"krate":0,"index":3519},{"krate":0,"index":3521},{"krate":0,"index":3522},{"krate":0,"index":3524},{"krate":0,"index":2658},{"krate":0,"index":3526},{"krate":0,"index":3528},{"krate":0,"index":3530},{"krate":0,"index":3531},{"krate":0,"index":3533},{"krate":0,"index":3534},{"krate":0,"index":3536},{"krate":0,"index":3539},{"krate":0,"index":3541},{"krate":0,"index":3542},{"krate":0,"index":3544},{"krate":0,"index":2660},{"krate":0,"index":3546},{"krate":0,"index":3548},{"krate":0,"index":3550},{"krate":0,"index":3551},{"krate":0,"index":3553},{"krate":0,"index":3554},{"krate":0,"index":3556},{"krate":0,"index":3559},{"krate":0,"index":3561},{"krate":0,"index":3562},{"krate":0,"index":3564},{"krate":0,"index":2662},{"krate":0,"index":3566},{"krate":0,"index":3568},{"krate":0,"index":3570},{"krate":0,"index":3571},{"krate":0,"index":3573},{"krate":0,"index":3574},{"krate":0,"index":3576},{"krate":0,"index":3579},{"krate":0,"index":3581},{"krate":0,"index":3582},{"krate":0,"index":3584},{"krate":0,"index":2664},{"krate":0,"index":3586},{"krate":0,"index":3588},{"krate":0,"index":3590},{"krate":0,"index":3591},{"krate":0,"index":3593},{"krate":0,"index":3594},{"krate":0,"index":3596},{"krate":0,"index":3599},{"krate":0,"index":3601},{"krate":0,"index":3602},{"krate":0,"index":3604},{"krate":0,"index":2666},{"krate":0,"index":3606},{"krate":0,"index":3608},{"krate":0,"index":3610},{"krate":0,"index":3611},{"krate":0,"index":3613},{"krate":0,"index":3614},{"krate":0,"index":3616},{"krate":0,"index":3619},{"krate":0,"index":3621},{"krate":0,"index":3622},{"krate":0,"index":3624},{"krate":0,"index":2668},{"krate":0,"index":3626},{"krate":0,"index":3628},{"krate":0,"index":3630},{"krate":0,"index":3631},{"krate":0,"index":3633},{"krate":0,"index":3634},{"krate":0,"index":3636},{"krate":0,"index":3639},{"krate":0,"index":3641},{"krate":0,"index":3642},{"krate":0,"index":3644},{"krate":0,"index":2670},{"krate":0,"index":3646},{"krate":0,"index":3648},{"krate":0,"index":3650},{"krate":0,"index":3651},{"krate":0,"index":3653},{"krate":0,"index":3654},{"krate":0,"index":3656},{"krate":0,"index":3659},{"krate":0,"index":3661},{"krate":0,"index":3662},{"krate":0,"index":3664},{"krate":0,"index":2672},{"krate":0,"index":3666},{"krate":0,"index":3668},{"krate":0,"index":3670},{"krate":0,"index":3671},{"krate":0,"index":3673},{"krate":0,"index":3674},{"krate":0,"index":3676},{"krate":0,"index":3679},{"krate":0,"index":3681},{"krate":0,"index":3682},{"krate":0,"index":3684},{"krate":0,"index":2674},{"krate":0,"index":3686},{"krate":0,"index":3688},{"krate":0,"index":3690},{"krate":0,"index":3691},{"krate":0,"index":3693},{"krate":0,"index":3694},{"krate":0,"index":3696},{"krate":0,"index":3699},{"krate":0,"index":3701},{"krate":0,"index":3702},{"krate":0,"index":3704},{"krate":0,"index":2676},{"krate":0,"index":3706},{"krate":0,"index":3708},{"krate":0,"index":3710},{"krate":0,"index":3711},{"krate":0,"index":3713},{"krate":0,"index":3714},{"krate":0,"index":3716},{"krate":0,"index":3719},{"krate":0,"index":3721},{"krate":0,"index":3722},{"krate":0,"index":3724},{"krate":0,"index":2678},{"krate":0,"index":3726},{"krate":0,"index":3728},{"krate":0,"index":3730},{"krate":0,"index":3731},{"krate":0,"index":3733},{"krate":0,"index":3734},{"krate":0,"index":3736},{"krate":0,"index":3739},{"krate":0,"index":3741},{"krate":0,"index":3742},{"krate":0,"index":3744},{"krate":0,"index":2680},{"krate":0,"index":3746},{"krate":0,"index":3748},{"krate":0,"index":3750},{"krate":0,"index":3751},{"krate":0,"index":3753},{"krate":0,"index":3754},{"krate":0,"index":3756},{"krate":0,"index":3759},{"krate":0,"index":3761},{"krate":0,"index":3762},{"krate":0,"index":3764},{"krate":0,"index":2682},{"krate":0,"index":3766},{"krate":0,"index":3768},{"krate":0,"index":3770},{"krate":0,"index":3771},{"krate":0,"index":3773},{"krate":0,"index":3774},{"krate":0,"index":3776},{"krate":0,"index":3779},{"krate":0,"index":3781},{"krate":0,"index":3782},{"krate":0,"index":3784},{"krate":0,"index":2684},{"krate":0,"index":3786},{"krate":0,"index":3788},{"krate":0,"index":3790},{"krate":0,"index":3791},{"krate":0,"index":3793},{"krate":0,"index":3794},{"krate":0,"index":3796},{"krate":0,"index":3799},{"krate":0,"index":3801},{"krate":0,"index":3802},{"krate":0,"index":3804},{"krate":0,"index":2686},{"krate":0,"index":3806},{"krate":0,"index":3808},{"krate":0,"index":3810},{"krate":0,"index":3811},{"krate":0,"index":3813},{"krate":0,"index":3814},{"krate":0,"index":3816},{"krate":0,"index":3819},{"krate":0,"index":3821},{"krate":0,"index":3822},{"krate":0,"index":3824},{"krate":0,"index":2688},{"krate":0,"index":3826},{"krate":0,"index":3828},{"krate":0,"index":3830},{"krate":0,"index":3831},{"krate":0,"index":3833},{"krate":0,"index":3834},{"krate":0,"index":3836},{"krate":0,"index":3839},{"krate":0,"index":3841},{"krate":0,"index":3842},{"krate":0,"index":3844},{"krate":0,"index":2690},{"krate":0,"index":3846},{"krate":0,"index":3848},{"krate":0,"index":3850},{"krate":0,"index":3851},{"krate":0,"index":3853},{"krate":0,"index":3854},{"krate":0,"index":3856},{"krate":0,"index":3859},{"krate":0,"index":3861},{"krate":0,"index":3862},{"krate":0,"index":3864},{"krate":0,"index":2692},{"krate":0,"index":3866},{"krate":0,"index":3868},{"krate":0,"index":3870},{"krate":0,"index":3871},{"krate":0,"index":3873},{"krate":0,"index":3874},{"krate":0,"index":3876},{"krate":0,"index":3879},{"krate":0,"index":3881},{"krate":0,"index":3882},{"krate":0,"index":3884},{"krate":0,"index":2694},{"krate":0,"index":3886},{"krate":0,"index":3888},{"krate":0,"index":3890},{"krate":0,"index":3891},{"krate":0,"index":3893},{"krate":0,"index":3894},{"krate":0,"index":3896},{"krate":0,"index":3899},{"krate":0,"index":3901},{"krate":0,"index":3902},{"krate":0,"index":3904},{"krate":0,"index":2696},{"krate":0,"index":3906},{"krate":0,"index":3908},{"krate":0,"index":3910},{"krate":0,"index":3911},{"krate":0,"index":3913},{"krate":0,"index":3914},{"krate":0,"index":3916},{"krate":0,"index":3919},{"krate":0,"index":3921},{"krate":0,"index":3922},{"krate":0,"index":3924},{"krate":0,"index":2698},{"krate":0,"index":3926},{"krate":0,"index":3928},{"krate":0,"index":3930},{"krate":0,"index":3931},{"krate":0,"index":3933},{"krate":0,"index":3934},{"krate":0,"index":3936},{"krate":0,"index":3939},{"krate":0,"index":3941},{"krate":0,"index":3942},{"krate":0,"index":3944},{"krate":0,"index":2700},{"krate":0,"index":3946},{"krate":0,"index":3948},{"krate":0,"index":3950},{"krate":0,"index":3951},{"krate":0,"index":3953},{"krate":0,"index":3954},{"krate":0,"index":3956},{"krate":0,"index":3959},{"krate":0,"index":3961},{"krate":0,"index":3962},{"krate":0,"index":3964},{"krate":0,"index":2702},{"krate":0,"index":3966},{"krate":0,"index":3968},{"krate":0,"index":3970},{"krate":0,"index":3971},{"krate":0,"index":3973},{"krate":0,"index":3974},{"krate":0,"index":3976},{"krate":0,"index":3979},{"krate":0,"index":3981},{"krate":0,"index":3982},{"krate":0,"index":3984},{"krate":0,"index":2704},{"krate":0,"index":3986},{"krate":0,"index":3988},{"krate":0,"index":3990},{"krate":0,"index":3991},{"krate":0,"index":3993},{"krate":0,"index":3994},{"krate":0,"index":3996},{"krate":0,"index":3999},{"krate":0,"index":4001},{"krate":0,"index":4002},{"krate":0,"index":4004},{"krate":0,"index":2706},{"krate":0,"index":4006},{"krate":0,"index":4008},{"krate":0,"index":4010},{"krate":0,"index":4011},{"krate":0,"index":4013},{"krate":0,"index":4014},{"krate":0,"index":4016},{"krate":0,"index":4019},{"krate":0,"index":4021},{"krate":0,"index":4022},{"krate":0,"index":4024},{"krate":0,"index":2708},{"krate":0,"index":4026},{"krate":0,"index":4028},{"krate":0,"index":4030},{"krate":0,"index":4031},{"krate":0,"index":4033},{"krate":0,"index":4034},{"krate":0,"index":4036},{"krate":0,"index":4039},{"krate":0,"index":4041},{"krate":0,"index":4042},{"krate":0,"index":4044},{"krate":0,"index":2710},{"krate":0,"index":4046},{"krate":0,"index":4048},{"krate":0,"index":4050},{"krate":0,"index":4051},{"krate":0,"index":4053},{"krate":0,"index":4054},{"krate":0,"index":4056},{"krate":0,"index":4059},{"krate":0,"index":4061},{"krate":0,"index":4062},{"krate":0,"index":4064},{"krate":0,"index":2712},{"krate":0,"index":4066},{"krate":0,"index":4068},{"krate":0,"index":4070},{"krate":0,"index":4071},{"krate":0,"index":4073},{"krate":0,"index":4074},{"krate":0,"index":4076},{"krate":0,"index":4079},{"krate":0,"index":4081},{"krate":0,"index":4082},{"krate":0,"index":4084},{"krate":0,"index":2714},{"krate":0,"index":4086},{"krate":0,"index":4088},{"krate":0,"index":4090},{"krate":0,"index":4091},{"krate":0,"index":4093},{"krate":0,"index":4094},{"krate":0,"index":4096},{"krate":0,"index":4099},{"krate":0,"index":4101},{"krate":0,"index":4102},{"krate":0,"index":4104},{"krate":0,"index":2716},{"krate":0,"index":4106},{"krate":0,"index":4108},{"krate":0,"index":4110},{"krate":0,"index":4111},{"krate":0,"index":4113},{"krate":0,"index":4114},{"krate":0,"index":4116},{"krate":0,"index":4119},{"krate":0,"index":4121},{"krate":0,"index":4122},{"krate":0,"index":4124},{"krate":0,"index":2718},{"krate":0,"index":4126},{"krate":0,"index":4128},{"krate":0,"index":4130},{"krate":0,"index":4131},{"krate":0,"index":4133},{"krate":0,"index":4134},{"krate":0,"index":4136},{"krate":0,"index":4139},{"krate":0,"index":4141},{"krate":0,"index":4142},{"krate":0,"index":4144},{"krate":0,"index":2720},{"krate":0,"index":4146},{"krate":0,"index":4148},{"krate":0,"index":4150},{"krate":0,"index":4151},{"krate":0,"index":4153},{"krate":0,"index":4154},{"krate":0,"index":4156},{"krate":0,"index":4159},{"krate":0,"index":4161},{"krate":0,"index":4162},{"krate":0,"index":4164},{"krate":0,"index":2722},{"krate":0,"index":4166},{"krate":0,"index":4168},{"krate":0,"index":4170},{"krate":0,"index":4171},{"krate":0,"index":4173},{"krate":0,"index":4174},{"krate":0,"index":4176},{"krate":0,"index":4179},{"krate":0,"index":4181},{"krate":0,"index":4182},{"krate":0,"index":4184},{"krate":0,"index":2724},{"krate":0,"index":4186},{"krate":0,"index":4188},{"krate":0,"index":4190},{"krate":0,"index":4191},{"krate":0,"index":4193},{"krate":0,"index":4194},{"krate":0,"index":4196},{"krate":0,"index":4199},{"krate":0,"index":4201},{"krate":0,"index":4202},{"krate":0,"index":4204},{"krate":0,"index":2726},{"krate":0,"index":4206},{"krate":0,"index":4208},{"krate":0,"index":4210},{"krate":0,"index":4211},{"krate":0,"index":4213},{"krate":0,"index":4214},{"krate":0,"index":4216},{"krate":0,"index":4219},{"krate":0,"index":4221},{"krate":0,"index":4222},{"krate":0,"index":4224},{"krate":0,"index":2728},{"krate":0,"index":4226},{"krate":0,"index":4228},{"krate":0,"index":4230},{"krate":0,"index":4231},{"krate":0,"index":4233},{"krate":0,"index":4234},{"krate":0,"index":4236},{"krate":0,"index":4239},{"krate":0,"index":4241},{"krate":0,"index":4242},{"krate":0,"index":4244},{"krate":0,"index":2730},{"krate":0,"index":4246},{"krate":0,"index":4248},{"krate":0,"index":4250},{"krate":0,"index":4251},{"krate":0,"index":4253},{"krate":0,"index":4254},{"krate":0,"index":4256},{"krate":0,"index":4259},{"krate":0,"index":4261},{"krate":0,"index":4262},{"krate":0,"index":4264},{"krate":0,"index":2732},{"krate":0,"index":4266},{"krate":0,"index":4268},{"krate":0,"index":4270},{"krate":0,"index":4271},{"krate":0,"index":4273},{"krate":0,"index":4274},{"krate":0,"index":4276},{"krate":0,"index":4279},{"krate":0,"index":4281},{"krate":0,"index":4282},{"krate":0,"index":4284},{"krate":0,"index":2734},{"krate":0,"index":4286},{"krate":0,"index":4288},{"krate":0,"index":4290},{"krate":0,"index":4291},{"krate":0,"index":4293},{"krate":0,"index":4294},{"krate":0,"index":4296},{"krate":0,"index":4299},{"krate":0,"index":4301},{"krate":0,"index":4302},{"krate":0,"index":4304},{"krate":0,"index":2736},{"krate":0,"index":4306},{"krate":0,"index":4308},{"krate":0,"index":4310},{"krate":0,"index":4311},{"krate":0,"index":4313},{"krate":0,"index":4314},{"krate":0,"index":4316},{"krate":0,"index":4319},{"krate":0,"index":4321},{"krate":0,"index":4322},{"krate":0,"index":4324},{"krate":0,"index":2738},{"krate":0,"index":4326},{"krate":0,"index":4328},{"krate":0,"index":4330},{"krate":0,"index":4331},{"krate":0,"index":4333},{"krate":0,"index":4334},{"krate":0,"index":4336},{"krate":0,"index":4339},{"krate":0,"index":4341},{"krate":0,"index":4342},{"krate":0,"index":4344},{"krate":0,"index":2740},{"krate":0,"index":4346},{"krate":0,"index":4348},{"krate":0,"index":4350},{"krate":0,"index":4351},{"krate":0,"index":4353},{"krate":0,"index":4354},{"krate":0,"index":4356},{"krate":0,"index":4359},{"krate":0,"index":4361},{"krate":0,"index":4362},{"krate":0,"index":4364},{"krate":0,"index":2742},{"krate":0,"index":4366},{"krate":0,"index":4368},{"krate":0,"index":4370},{"krate":0,"index":4371},{"krate":0,"index":4373},{"krate":0,"index":4374},{"krate":0,"index":4376},{"krate":0,"index":4379},{"krate":0,"index":4381},{"krate":0,"index":4382},{"krate":0,"index":4384},{"krate":0,"index":2744},{"krate":0,"index":4386},{"krate":0,"index":4388},{"krate":0,"index":4390},{"krate":0,"index":4391},{"krate":0,"index":4393},{"krate":0,"index":4394},{"krate":0,"index":4396},{"krate":0,"index":4399},{"krate":0,"index":4401},{"krate":0,"index":4402},{"krate":0,"index":4404},{"krate":0,"index":2746},{"krate":0,"index":4406},{"krate":0,"index":4408},{"krate":0,"index":4410},{"krate":0,"index":4411},{"krate":0,"index":4413},{"krate":0,"index":4414},{"krate":0,"index":4416},{"krate":0,"index":4419},{"krate":0,"index":4421},{"krate":0,"index":4422},{"krate":0,"index":4424},{"krate":0,"index":2748},{"krate":0,"index":4426},{"krate":0,"index":4428},{"krate":0,"index":4430},{"krate":0,"index":4431},{"krate":0,"index":4433},{"krate":0,"index":4434},{"krate":0,"index":4436},{"krate":0,"index":4439},{"krate":0,"index":4441},{"krate":0,"index":4442},{"krate":0,"index":4444},{"krate":0,"index":2750},{"krate":0,"index":4446},{"krate":0,"index":4448},{"krate":0,"index":4450},{"krate":0,"index":4451},{"krate":0,"index":4453},{"krate":0,"index":4454},{"krate":0,"index":4456},{"krate":0,"index":4459},{"krate":0,"index":4461},{"krate":0,"index":4462},{"krate":0,"index":4464},{"krate":0,"index":2752},{"krate":0,"index":4466},{"krate":0,"index":4468},{"krate":0,"index":4470},{"krate":0,"index":4471},{"krate":0,"index":4473},{"krate":0,"index":4474},{"krate":0,"index":4476},{"krate":0,"index":4479},{"krate":0,"index":4481},{"krate":0,"index":4482},{"krate":0,"index":4484},{"krate":0,"index":2754},{"krate":0,"index":4486},{"krate":0,"index":4488},{"krate":0,"index":4490},{"krate":0,"index":4491},{"krate":0,"index":4493},{"krate":0,"index":4494},{"krate":0,"index":4496},{"krate":0,"index":4499},{"krate":0,"index":4501},{"krate":0,"index":4502},{"krate":0,"index":4504},{"krate":0,"index":2756},{"krate":0,"index":4506},{"krate":0,"index":4508},{"krate":0,"index":4510},{"krate":0,"index":4511},{"krate":0,"index":4513},{"krate":0,"index":4514},{"krate":0,"index":4516},{"krate":0,"index":4519},{"krate":0,"index":4521},{"krate":0,"index":4522},{"krate":0,"index":4524},{"krate":0,"index":2758},{"krate":0,"index":4526},{"krate":0,"index":4528},{"krate":0,"index":4530},{"krate":0,"index":4531},{"krate":0,"index":4533},{"krate":0,"index":4534},{"krate":0,"index":4536},{"krate":0,"index":4539},{"krate":0,"index":4541},{"krate":0,"index":4542},{"krate":0,"index":4544},{"krate":0,"index":2760},{"krate":0,"index":4546},{"krate":0,"index":4548},{"krate":0,"index":4550},{"krate":0,"index":4551},{"krate":0,"index":4553},{"krate":0,"index":4554},{"krate":0,"index":4556},{"krate":0,"index":4559},{"krate":0,"index":4561},{"krate":0,"index":4562},{"krate":0,"index":4564},{"krate":0,"index":2762},{"krate":0,"index":4566},{"krate":0,"index":4568},{"krate":0,"index":4570},{"krate":0,"index":4571},{"krate":0,"index":4573},{"krate":0,"index":4574},{"krate":0,"index":4576},{"krate":0,"index":4579},{"krate":0,"index":4581},{"krate":0,"index":4582},{"krate":0,"index":4584},{"krate":0,"index":2764},{"krate":0,"index":4586},{"krate":0,"index":4588},{"krate":0,"index":4590},{"krate":0,"index":4591},{"krate":0,"index":4593},{"krate":0,"index":4594},{"krate":0,"index":4596},{"krate":0,"index":4599},{"krate":0,"index":4601},{"krate":0,"index":4602},{"krate":0,"index":4604},{"krate":0,"index":2766},{"krate":0,"index":4606},{"krate":0,"index":4608},{"krate":0,"index":4610},{"krate":0,"index":4611},{"krate":0,"index":4613},{"krate":0,"index":4614},{"krate":0,"index":4616},{"krate":0,"index":4619},{"krate":0,"index":4621},{"krate":0,"index":4622},{"krate":0,"index":4624},{"krate":0,"index":2768},{"krate":0,"index":4626},{"krate":0,"index":4628},{"krate":0,"index":4630},{"krate":0,"index":4631},{"krate":0,"index":4633},{"krate":0,"index":4634},{"krate":0,"index":4636},{"krate":0,"index":4639},{"krate":0,"index":4641},{"krate":0,"index":4642},{"krate":0,"index":4644},{"krate":0,"index":2770},{"krate":0,"index":4646},{"krate":0,"index":4648},{"krate":0,"index":4650},{"krate":0,"index":4651},{"krate":0,"index":4653},{"krate":0,"index":4654},{"krate":0,"index":4656},{"krate":0,"index":4659},{"krate":0,"index":4661},{"krate":0,"index":4662},{"krate":0,"index":4664},{"krate":0,"index":2772},{"krate":0,"index":4666},{"krate":0,"index":4668},{"krate":0,"index":4670},{"krate":0,"index":4671},{"krate":0,"index":4673},{"krate":0,"index":4674},{"krate":0,"index":4676},{"krate":0,"index":4679},{"krate":0,"index":4681},{"krate":0,"index":4682},{"krate":0,"index":4684},{"krate":0,"index":2774},{"krate":0,"index":4686},{"krate":0,"index":4688},{"krate":0,"index":4690},{"krate":0,"index":4691},{"krate":0,"index":4693},{"krate":0,"index":4694},{"krate":0,"index":4696},{"krate":0,"index":4699},{"krate":0,"index":4701},{"krate":0,"index":4702},{"krate":0,"index":4704},{"krate":0,"index":2776},{"krate":0,"index":4706},{"krate":0,"index":4708},{"krate":0,"index":4710},{"krate":0,"index":4711},{"krate":0,"index":4713},{"krate":0,"index":4714},{"krate":0,"index":4716},{"krate":0,"index":4719},{"krate":0,"index":4721},{"krate":0,"index":4722},{"krate":0,"index":4724},{"krate":0,"index":2778},{"krate":0,"index":4726},{"krate":0,"index":4728},{"krate":0,"index":4730},{"krate":0,"index":4731},{"krate":0,"index":4733},{"krate":0,"index":4734},{"krate":0,"index":4736},{"krate":0,"index":4739},{"krate":0,"index":4741},{"krate":0,"index":4742},{"krate":0,"index":4744},{"krate":0,"index":2780},{"krate":0,"index":4746},{"krate":0,"index":4748},{"krate":0,"index":4750},{"krate":0,"index":4751},{"krate":0,"index":4753},{"krate":0,"index":4754},{"krate":0,"index":4756},{"krate":0,"index":4759},{"krate":0,"index":4761},{"krate":0,"index":4762},{"krate":0,"index":4764},{"krate":0,"index":2782},{"krate":0,"index":4766},{"krate":0,"index":4768},{"krate":0,"index":4770},{"krate":0,"index":4771},{"krate":0,"index":4773},{"krate":0,"index":4774},{"krate":0,"index":4776},{"krate":0,"index":4779},{"krate":0,"index":4781},{"krate":0,"index":4782},{"krate":0,"index":4784},{"krate":0,"index":2784},{"krate":0,"index":4786},{"krate":0,"index":4788},{"krate":0,"index":4790},{"krate":0,"index":4791},{"krate":0,"index":4793},{"krate":0,"index":4794},{"krate":0,"index":4796},{"krate":0,"index":4799},{"krate":0,"index":4801},{"krate":0,"index":4802},{"krate":0,"index":4804},{"krate":0,"index":2786},{"krate":0,"index":4806},{"krate":0,"index":4808},{"krate":0,"index":4810},{"krate":0,"index":4811},{"krate":0,"index":4813},{"krate":0,"index":4814},{"krate":0,"index":4816},{"krate":0,"index":4819},{"krate":0,"index":4821},{"krate":0,"index":4822},{"krate":0,"index":4824},{"krate":0,"index":2788},{"krate":0,"index":4826},{"krate":0,"index":4828},{"krate":0,"index":4830},{"krate":0,"index":4831},{"krate":0,"index":4833},{"krate":0,"index":4834},{"krate":0,"index":4836},{"krate":0,"index":4839},{"krate":0,"index":4841},{"krate":0,"index":4842},{"krate":0,"index":4844},{"krate":0,"index":2790},{"krate":0,"index":4846},{"krate":0,"index":4848},{"krate":0,"index":4850},{"krate":0,"index":4851},{"krate":0,"index":4853},{"krate":0,"index":4854},{"krate":0,"index":4856},{"krate":0,"index":4859},{"krate":0,"index":4861},{"krate":0,"index":4862},{"krate":0,"index":4864},{"krate":0,"index":2792},{"krate":0,"index":4866},{"krate":0,"index":4868},{"krate":0,"index":4870},{"krate":0,"index":4871},{"krate":0,"index":4873},{"krate":0,"index":4874},{"krate":0,"index":4876},{"krate":0,"index":4879},{"krate":0,"index":4881},{"krate":0,"index":4882},{"krate":0,"index":4884},{"krate":0,"index":2794},{"krate":0,"index":4886},{"krate":0,"index":4888},{"krate":0,"index":4890},{"krate":0,"index":4891},{"krate":0,"index":4893},{"krate":0,"index":4894},{"krate":0,"index":4896},{"krate":0,"index":4899},{"krate":0,"index":4901},{"krate":0,"index":4902},{"krate":0,"index":4904},{"krate":0,"index":2796},{"krate":0,"index":4906},{"krate":0,"index":4908},{"krate":0,"index":4910},{"krate":0,"index":4911},{"krate":0,"index":4913},{"krate":0,"index":4914},{"krate":0,"index":4916},{"krate":0,"index":4919},{"krate":0,"index":4921},{"krate":0,"index":4922},{"krate":0,"index":4924},{"krate":0,"index":2798},{"krate":0,"index":4926},{"krate":0,"index":4928},{"krate":0,"index":4930},{"krate":0,"index":4931},{"krate":0,"index":4933},{"krate":0,"index":4934},{"krate":0,"index":4936},{"krate":0,"index":4939},{"krate":0,"index":4941},{"krate":0,"index":4942},{"krate":0,"index":4944},{"krate":0,"index":2800},{"krate":0,"index":4946},{"krate":0,"index":4948},{"krate":0,"index":4950},{"krate":0,"index":4951},{"krate":0,"index":4953},{"krate":0,"index":4954},{"krate":0,"index":4956},{"krate":0,"index":4959},{"krate":0,"index":4961},{"krate":0,"index":4962},{"krate":0,"index":4964},{"krate":0,"index":2802},{"krate":0,"index":4966},{"krate":0,"index":4968},{"krate":0,"index":4970},{"krate":0,"index":4971},{"krate":0,"index":4973},{"krate":0,"index":4974},{"krate":0,"index":4976},{"krate":0,"index":4979},{"krate":0,"index":4981},{"krate":0,"index":4982},{"krate":0,"index":4984},{"krate":0,"index":2804},{"krate":0,"index":4986},{"krate":0,"index":4988},{"krate":0,"index":4990},{"krate":0,"index":4991},{"krate":0,"index":4993},{"krate":0,"index":4994},{"krate":0,"index":4996},{"krate":0,"index":4999},{"krate":0,"index":5001},{"krate":0,"index":5002},{"krate":0,"index":5004},{"krate":0,"index":2806},{"krate":0,"index":5006},{"krate":0,"index":5008},{"krate":0,"index":5010},{"krate":0,"index":5011},{"krate":0,"index":5013},{"krate":0,"index":5014},{"krate":0,"index":5016},{"krate":0,"index":5019},{"krate":0,"index":5021},{"krate":0,"index":5022},{"krate":0,"index":5024},{"krate":0,"index":2808},{"krate":0,"index":5026},{"krate":0,"index":5028},{"krate":0,"index":5030},{"krate":0,"index":5031},{"krate":0,"index":5033},{"krate":0,"index":5034},{"krate":0,"index":5036},{"krate":0,"index":5039},{"krate":0,"index":5041},{"krate":0,"index":5042},{"krate":0,"index":5044},{"krate":0,"index":2810},{"krate":0,"index":5046},{"krate":0,"index":5048},{"krate":0,"index":5050},{"krate":0,"index":5051},{"krate":0,"index":5053},{"krate":0,"index":5054},{"krate":0,"index":5056},{"krate":0,"index":5059},{"krate":0,"index":5061},{"krate":0,"index":5062},{"krate":0,"index":5064},{"krate":0,"index":2812},{"krate":0,"index":5066},{"krate":0,"index":5068},{"krate":0,"index":5070},{"krate":0,"index":5071},{"krate":0,"index":5073},{"krate":0,"index":5074},{"krate":0,"index":5076},{"krate":0,"index":5079},{"krate":0,"index":5081},{"krate":0,"index":5082},{"krate":0,"index":5084},{"krate":0,"index":2814},{"krate":0,"index":5086},{"krate":0,"index":5088},{"krate":0,"index":5090},{"krate":0,"index":5091},{"krate":0,"index":5093},{"krate":0,"index":5094},{"krate":0,"index":5096},{"krate":0,"index":5099},{"krate":0,"index":5101},{"krate":0,"index":5102},{"krate":0,"index":5104},{"krate":0,"index":2816},{"krate":0,"index":5106},{"krate":0,"index":5108},{"krate":0,"index":5110},{"krate":0,"index":5111},{"krate":0,"index":5113},{"krate":0,"index":5114},{"krate":0,"index":5116},{"krate":0,"index":5119},{"krate":0,"index":5121},{"krate":0,"index":5122},{"krate":0,"index":5124},{"krate":0,"index":2818},{"krate":0,"index":5126},{"krate":0,"index":5128},{"krate":0,"index":5130},{"krate":0,"index":5131},{"krate":0,"index":5133},{"krate":0,"index":5134},{"krate":0,"index":5136},{"krate":0,"index":5139},{"krate":0,"index":5141},{"krate":0,"index":5142},{"krate":0,"index":5144},{"krate":0,"index":2820},{"krate":0,"index":5146},{"krate":0,"index":5148},{"krate":0,"index":5150},{"krate":0,"index":5151},{"krate":0,"index":5153},{"krate":0,"index":5154},{"krate":0,"index":5156},{"krate":0,"index":5159},{"krate":0,"index":5161},{"krate":0,"index":5162},{"krate":0,"index":5164},{"krate":0,"index":2822},{"krate":0,"index":5166},{"krate":0,"index":5168},{"krate":0,"index":5170},{"krate":0,"index":5171},{"krate":0,"index":5173},{"krate":0,"index":5174},{"krate":0,"index":5176},{"krate":0,"index":5179},{"krate":0,"index":5181},{"krate":0,"index":5182},{"krate":0,"index":5184},{"krate":0,"index":2824},{"krate":0,"index":5186},{"krate":0,"index":5188},{"krate":0,"index":5190},{"krate":0,"index":5191},{"krate":0,"index":5193},{"krate":0,"index":5194},{"krate":0,"index":5196},{"krate":0,"index":5199},{"krate":0,"index":5201},{"krate":0,"index":5202},{"krate":0,"index":5204},{"krate":0,"index":2826},{"krate":0,"index":5206},{"krate":0,"index":5208},{"krate":0,"index":5210},{"krate":0,"index":5211},{"krate":0,"index":5213},{"krate":0,"index":5214},{"krate":0,"index":5216},{"krate":0,"index":5219},{"krate":0,"index":5221},{"krate":0,"index":5222},{"krate":0,"index":5224},{"krate":0,"index":2828},{"krate":0,"index":5226},{"krate":0,"index":5228},{"krate":0,"index":5230},{"krate":0,"index":5231},{"krate":0,"index":5233},{"krate":0,"index":5234},{"krate":0,"index":5236},{"krate":0,"index":5239},{"krate":0,"index":5241},{"krate":0,"index":5242},{"krate":0,"index":5244},{"krate":0,"index":2830},{"krate":0,"index":5246},{"krate":0,"index":5248},{"krate":0,"index":5250},{"krate":0,"index":5251},{"krate":0,"index":5253},{"krate":0,"index":5254},{"krate":0,"index":5256},{"krate":0,"index":5259},{"krate":0,"index":5261},{"krate":0,"index":5262},{"krate":0,"index":5264},{"krate":0,"index":2832},{"krate":0,"index":5266},{"krate":0,"index":5268},{"krate":0,"index":5270},{"krate":0,"index":5271},{"krate":0,"index":5273},{"krate":0,"index":5274},{"krate":0,"index":5276},{"krate":0,"index":5279},{"krate":0,"index":5281},{"krate":0,"index":5282},{"krate":0,"index":5284},{"krate":0,"index":2834},{"krate":0,"index":5286},{"krate":0,"index":5288},{"krate":0,"index":5290},{"krate":0,"index":5291},{"krate":0,"index":5293},{"krate":0,"index":5294},{"krate":0,"index":5296},{"krate":0,"index":5299},{"krate":0,"index":5301},{"krate":0,"index":5302},{"krate":0,"index":5304},{"krate":0,"index":2836},{"krate":0,"index":5306},{"krate":0,"index":5308},{"krate":0,"index":5310},{"krate":0,"index":5311},{"krate":0,"index":5313},{"krate":0,"index":5314},{"krate":0,"index":5316},{"krate":0,"index":5319},{"krate":0,"index":5321},{"krate":0,"index":5322},{"krate":0,"index":5324},{"krate":0,"index":2838},{"krate":0,"index":5326},{"krate":0,"index":5328},{"krate":0,"index":5330},{"krate":0,"index":5331},{"krate":0,"index":5333},{"krate":0,"index":5334},{"krate":0,"index":5336},{"krate":0,"index":5339},{"krate":0,"index":5341},{"krate":0,"index":5342},{"krate":0,"index":5344},{"krate":0,"index":2840},{"krate":0,"index":5346},{"krate":0,"index":5348},{"krate":0,"index":5350},{"krate":0,"index":5351},{"krate":0,"index":5353},{"krate":0,"index":5354},{"krate":0,"index":5356},{"krate":0,"index":5359},{"krate":0,"index":5361},{"krate":0,"index":5362},{"krate":0,"index":5364},{"krate":0,"index":2842},{"krate":0,"index":5366},{"krate":0,"index":5368},{"krate":0,"index":5370},{"krate":0,"index":5371},{"krate":0,"index":5373},{"krate":0,"index":5374},{"krate":0,"index":5376},{"krate":0,"index":5379},{"krate":0,"index":5381},{"krate":0,"index":5382},{"krate":0,"index":5384},{"krate":0,"index":2844},{"krate":0,"index":5386},{"krate":0,"index":5388},{"krate":0,"index":5390},{"krate":0,"index":5391},{"krate":0,"index":5393},{"krate":0,"index":5394},{"krate":0,"index":5396},{"krate":0,"index":5399},{"krate":0,"index":5401},{"krate":0,"index":5402},{"krate":0,"index":5404},{"krate":0,"index":2846},{"krate":0,"index":5406},{"krate":0,"index":5408},{"krate":0,"index":5410},{"krate":0,"index":5411},{"krate":0,"index":5413},{"krate":0,"index":5414},{"krate":0,"index":5416},{"krate":0,"index":5419},{"krate":0,"index":5421},{"krate":0,"index":5422},{"krate":0,"index":5424},{"krate":0,"index":2848},{"krate":0,"index":5426},{"krate":0,"index":5428},{"krate":0,"index":5430},{"krate":0,"index":5431},{"krate":0,"index":5433},{"krate":0,"index":5434},{"krate":0,"index":5436},{"krate":0,"index":5439},{"krate":0,"index":5441},{"krate":0,"index":5442},{"krate":0,"index":5444},{"krate":0,"index":2850},{"krate":0,"index":5446},{"krate":0,"index":5448},{"krate":0,"index":5450},{"krate":0,"index":5451},{"krate":0,"index":5453},{"krate":0,"index":5454},{"krate":0,"index":5456},{"krate":0,"index":5459},{"krate":0,"index":5461},{"krate":0,"index":5462},{"krate":0,"index":5464},{"krate":0,"index":2852},{"krate":0,"index":5466},{"krate":0,"index":5468},{"krate":0,"index":5470},{"krate":0,"index":5471},{"krate":0,"index":5473},{"krate":0,"index":5474},{"krate":0,"index":5476},{"krate":0,"index":5479},{"krate":0,"index":5481},{"krate":0,"index":5482},{"krate":0,"index":5484},{"krate":0,"index":2854},{"krate":0,"index":5486},{"krate":0,"index":5488},{"krate":0,"index":5490},{"krate":0,"index":5491},{"krate":0,"index":5493},{"krate":0,"index":5494},{"krate":0,"index":5496},{"krate":0,"index":5499},{"krate":0,"index":5501},{"krate":0,"index":5502},{"krate":0,"index":5504},{"krate":0,"index":2856},{"krate":0,"index":5506},{"krate":0,"index":5508},{"krate":0,"index":5510},{"krate":0,"index":5511},{"krate":0,"index":5513},{"krate":0,"index":5514},{"krate":0,"index":5516},{"krate":0,"index":5519},{"krate":0,"index":5521},{"krate":0,"index":5522},{"krate":0,"index":5524},{"krate":0,"index":2858},{"krate":0,"index":5526},{"krate":0,"index":5528},{"krate":0,"index":5530},{"krate":0,"index":5531},{"krate":0,"index":5533},{"krate":0,"index":5534},{"krate":0,"index":5536},{"krate":0,"index":5539},{"krate":0,"index":5541},{"krate":0,"index":5542},{"krate":0,"index":5544},{"krate":0,"index":2860},{"krate":0,"index":5546},{"krate":0,"index":5548},{"krate":0,"index":5550},{"krate":0,"index":5551},{"krate":0,"index":5553},{"krate":0,"index":5554},{"krate":0,"index":5556},{"krate":0,"index":5559},{"krate":0,"index":5561},{"krate":0,"index":5562},{"krate":0,"index":5564},{"krate":0,"index":2862},{"krate":0,"index":5566},{"krate":0,"index":5568},{"krate":0,"index":5570},{"krate":0,"index":5571},{"krate":0,"index":5573},{"krate":0,"index":5574},{"krate":0,"index":5576},{"krate":0,"index":5579},{"krate":0,"index":5581},{"krate":0,"index":5582},{"krate":0,"index":5584},{"krate":0,"index":2864},{"krate":0,"index":5586},{"krate":0,"index":5588},{"krate":0,"index":5590},{"krate":0,"index":5591},{"krate":0,"index":5593},{"krate":0,"index":5594},{"krate":0,"index":5596},{"krate":0,"index":5599},{"krate":0,"index":5601},{"krate":0,"index":5602},{"krate":0,"index":5604},{"krate":0,"index":2866},{"krate":0,"index":5606},{"krate":0,"index":5608},{"krate":0,"index":5610},{"krate":0,"index":5611},{"krate":0,"index":5613},{"krate":0,"index":5614},{"krate":0,"index":5616},{"krate":0,"index":5619},{"krate":0,"index":5621},{"krate":0,"index":5622},{"krate":0,"index":5624},{"krate":0,"index":2868},{"krate":0,"index":5626},{"krate":0,"index":5628},{"krate":0,"index":5630},{"krate":0,"index":5631},{"krate":0,"index":5633},{"krate":0,"index":5634},{"krate":0,"index":5636},{"krate":0,"index":5639},{"krate":0,"index":5641},{"krate":0,"index":5642},{"krate":0,"index":5644},{"krate":0,"index":2870},{"krate":0,"index":5646},{"krate":0,"index":5648},{"krate":0,"index":5650},{"krate":0,"index":5651},{"krate":0,"index":5653},{"krate":0,"index":5654},{"krate":0,"index":5656},{"krate":0,"index":5659},{"krate":0,"index":5661},{"krate":0,"index":5662},{"krate":0,"index":5664},{"krate":0,"index":2872},{"krate":0,"index":5666},{"krate":0,"index":5668},{"krate":0,"index":5670},{"krate":0,"index":5671},{"krate":0,"index":5673},{"krate":0,"index":5674},{"krate":0,"index":5676},{"krate":0,"index":5679},{"krate":0,"index":5681},{"krate":0,"index":5682},{"krate":0,"index":5684},{"krate":0,"index":2874},{"krate":0,"index":5686},{"krate":0,"index":5688},{"krate":0,"index":5690},{"krate":0,"index":5691},{"krate":0,"index":5693},{"krate":0,"index":5694},{"krate":0,"index":5696},{"krate":0,"index":5699},{"krate":0,"index":5701},{"krate":0,"index":5702},{"krate":0,"index":5704},{"krate":0,"index":2876},{"krate":0,"index":5706},{"krate":0,"index":5708},{"krate":0,"index":5710},{"krate":0,"index":5711},{"krate":0,"index":5713},{"krate":0,"index":5714},{"krate":0,"index":5716},{"krate":0,"index":5719},{"krate":0,"index":5721},{"krate":0,"index":5722},{"krate":0,"index":5724},{"krate":0,"index":2878},{"krate":0,"index":5726},{"krate":0,"index":5728},{"krate":0,"index":5730},{"krate":0,"index":5731},{"krate":0,"index":5733},{"krate":0,"index":5734},{"krate":0,"index":5736},{"krate":0,"index":5739},{"krate":0,"index":5741},{"krate":0,"index":5742},{"krate":0,"index":5744},{"krate":0,"index":2880},{"krate":0,"index":5746},{"krate":0,"index":5748},{"krate":0,"index":5750},{"krate":0,"index":5751},{"krate":0,"index":5753},{"krate":0,"index":5754},{"krate":0,"index":5756},{"krate":0,"index":5759},{"krate":0,"index":5761},{"krate":0,"index":5762},{"krate":0,"index":5764},{"krate":0,"index":2882},{"krate":0,"index":5766},{"krate":0,"index":5768},{"krate":0,"index":5770},{"krate":0,"index":5771},{"krate":0,"index":5773},{"krate":0,"index":5774},{"krate":0,"index":5776},{"krate":0,"index":5779},{"krate":0,"index":5781},{"krate":0,"index":5782},{"krate":0,"index":5784},{"krate":0,"index":2884},{"krate":0,"index":5786},{"krate":0,"index":5788},{"krate":0,"index":5790},{"krate":0,"index":5791},{"krate":0,"index":5793},{"krate":0,"index":5794},{"krate":0,"index":5796},{"krate":0,"index":5799},{"krate":0,"index":5801},{"krate":0,"index":5802},{"krate":0,"index":5804},{"krate":0,"index":2886},{"krate":0,"index":5806},{"krate":0,"index":5808},{"krate":0,"index":5810},{"krate":0,"index":5811},{"krate":0,"index":5813},{"krate":0,"index":5814},{"krate":0,"index":5816},{"krate":0,"index":5819},{"krate":0,"index":5821},{"krate":0,"index":5822},{"krate":0,"index":5824},{"krate":0,"index":2888},{"krate":0,"index":5826},{"krate":0,"index":5828},{"krate":0,"index":5830},{"krate":0,"index":5831},{"krate":0,"index":5833},{"krate":0,"index":5834},{"krate":0,"index":5836},{"krate":0,"index":5839},{"krate":0,"index":5841},{"krate":0,"index":5842},{"krate":0,"index":5844},{"krate":0,"index":2890},{"krate":0,"index":5846},{"krate":0,"index":5848},{"krate":0,"index":5850},{"krate":0,"index":5851},{"krate":0,"index":5853},{"krate":0,"index":5854},{"krate":0,"index":5856},{"krate":0,"index":5859},{"krate":0,"index":5861},{"krate":0,"index":5862},{"krate":0,"index":5864},{"krate":0,"index":2892},{"krate":0,"index":5866},{"krate":0,"index":5868},{"krate":0,"index":5870},{"krate":0,"index":5871},{"krate":0,"index":5873},{"krate":0,"index":5874},{"krate":0,"index":5876},{"krate":0,"index":5879},{"krate":0,"index":5881},{"krate":0,"index":5882},{"krate":0,"index":5884},{"krate":0,"index":2894},{"krate":0,"index":5886},{"krate":0,"index":5888},{"krate":0,"index":5890},{"krate":0,"index":5891},{"krate":0,"index":5893},{"krate":0,"index":5894},{"krate":0,"index":5896},{"krate":0,"index":5899},{"krate":0,"index":5901},{"krate":0,"index":5902},{"krate":0,"index":5904},{"krate":0,"index":2896},{"krate":0,"index":5906},{"krate":0,"index":5908},{"krate":0,"index":5910},{"krate":0,"index":5911},{"krate":0,"index":5913},{"krate":0,"index":5914},{"krate":0,"index":5916},{"krate":0,"index":5919},{"krate":0,"index":5921},{"krate":0,"index":5922},{"krate":0,"index":5924},{"krate":0,"index":2898},{"krate":0,"index":5926},{"krate":0,"index":5928},{"krate":0,"index":5930},{"krate":0,"index":5931},{"krate":0,"index":5933},{"krate":0,"index":5934},{"krate":0,"index":5936},{"krate":0,"index":5939},{"krate":0,"index":5941},{"krate":0,"index":5942},{"krate":0,"index":5944},{"krate":0,"index":2900},{"krate":0,"index":5946},{"krate":0,"index":5948},{"krate":0,"index":5950},{"krate":0,"index":5951},{"krate":0,"index":5953},{"krate":0,"index":5954},{"krate":0,"index":5956},{"krate":0,"index":5959},{"krate":0,"index":5961},{"krate":0,"index":5962},{"krate":0,"index":5964},{"krate":0,"index":2902},{"krate":0,"index":5966},{"krate":0,"index":5968},{"krate":0,"index":5970},{"krate":0,"index":5971},{"krate":0,"index":5973},{"krate":0,"index":5974},{"krate":0,"index":5976},{"krate":0,"index":5979},{"krate":0,"index":5981},{"krate":0,"index":5982},{"krate":0,"index":5984},{"krate":0,"index":2904},{"krate":0,"index":5986},{"krate":0,"index":5988},{"krate":0,"index":5990},{"krate":0,"index":5991},{"krate":0,"index":5993},{"krate":0,"index":5994},{"krate":0,"index":5996},{"krate":0,"index":5999},{"krate":0,"index":6001},{"krate":0,"index":6002},{"krate":0,"index":6004},{"krate":0,"index":2906},{"krate":0,"index":6006},{"krate":0,"index":6008},{"krate":0,"index":6010},{"krate":0,"index":6011},{"krate":0,"index":6013},{"krate":0,"index":6014},{"krate":0,"index":6016},{"krate":0,"index":6019},{"krate":0,"index":6021},{"krate":0,"index":6022},{"krate":0,"index":6024},{"krate":0,"index":2908},{"krate":0,"index":6026},{"krate":0,"index":6028},{"krate":0,"index":6030},{"krate":0,"index":6031},{"krate":0,"index":6033},{"krate":0,"index":6034},{"krate":0,"index":6036},{"krate":0,"index":6039},{"krate":0,"index":6041},{"krate":0,"index":6042},{"krate":0,"index":6044},{"krate":0,"index":2910},{"krate":0,"index":6046},{"krate":0,"index":6048},{"krate":0,"index":6050},{"krate":0,"index":6051},{"krate":0,"index":6053},{"krate":0,"index":6054},{"krate":0,"index":6056},{"krate":0,"index":6059},{"krate":0,"index":6061},{"krate":0,"index":6062},{"krate":0,"index":6064},{"krate":0,"index":2912},{"krate":0,"index":6066},{"krate":0,"index":6068},{"krate":0,"index":6070},{"krate":0,"index":6071},{"krate":0,"index":6073},{"krate":0,"index":6074},{"krate":0,"index":6076},{"krate":0,"index":6079},{"krate":0,"index":6081},{"krate":0,"index":6082},{"krate":0,"index":6084},{"krate":0,"index":2914},{"krate":0,"index":6086},{"krate":0,"index":6088},{"krate":0,"index":6090},{"krate":0,"index":6091},{"krate":0,"index":6093},{"krate":0,"index":6094},{"krate":0,"index":6096},{"krate":0,"index":6099},{"krate":0,"index":6101},{"krate":0,"index":6102},{"krate":0,"index":6104},{"krate":0,"index":2916},{"krate":0,"index":6106},{"krate":0,"index":6108},{"krate":0,"index":6110},{"krate":0,"index":6111},{"krate":0,"index":6113},{"krate":0,"index":6114},{"krate":0,"index":6116},{"krate":0,"index":6119},{"krate":0,"index":6121},{"krate":0,"index":6122},{"krate":0,"index":6124},{"krate":0,"index":2918},{"krate":0,"index":6126},{"krate":0,"index":6128},{"krate":0,"index":6130},{"krate":0,"index":6131},{"krate":0,"index":6133},{"krate":0,"index":6134},{"krate":0,"index":6136},{"krate":0,"index":6139},{"krate":0,"index":6141},{"krate":0,"index":6142},{"krate":0,"index":6144},{"krate":0,"index":2920},{"krate":0,"index":6146},{"krate":0,"index":6148},{"krate":0,"index":6150},{"krate":0,"index":6151},{"krate":0,"index":6153},{"krate":0,"index":6154},{"krate":0,"index":6156},{"krate":0,"index":6159},{"krate":0,"index":6161},{"krate":0,"index":6162},{"krate":0,"index":6164},{"krate":0,"index":2922},{"krate":0,"index":6166},{"krate":0,"index":6168},{"krate":0,"index":6170},{"krate":0,"index":6171},{"krate":0,"index":6173},{"krate":0,"index":6174},{"krate":0,"index":6176},{"krate":0,"index":6179},{"krate":0,"index":6181},{"krate":0,"index":6182},{"krate":0,"index":6184},{"krate":0,"index":2924},{"krate":0,"index":6186},{"krate":0,"index":6188},{"krate":0,"index":6190},{"krate":0,"index":6191},{"krate":0,"index":6193},{"krate":0,"index":6194},{"krate":0,"index":6196},{"krate":0,"index":6199},{"krate":0,"index":6201},{"krate":0,"index":6202},{"krate":0,"index":6204},{"krate":0,"index":2926},{"krate":0,"index":6206},{"krate":0,"index":6208},{"krate":0,"index":6210},{"krate":0,"index":6211},{"krate":0,"index":6213},{"krate":0,"index":6214},{"krate":0,"index":6216},{"krate":0,"index":6219},{"krate":0,"index":6221},{"krate":0,"index":6222},{"krate":0,"index":6224},{"krate":0,"index":2928},{"krate":0,"index":6226},{"krate":0,"index":6228},{"krate":0,"index":6230},{"krate":0,"index":6231},{"krate":0,"index":6233},{"krate":0,"index":6234},{"krate":0,"index":6236},{"krate":0,"index":6239},{"krate":0,"index":6241},{"krate":0,"index":6242},{"krate":0,"index":6244},{"krate":0,"index":2930},{"krate":0,"index":6246},{"krate":0,"index":6248},{"krate":0,"index":6250},{"krate":0,"index":6251},{"krate":0,"index":6253},{"krate":0,"index":6254},{"krate":0,"index":6256},{"krate":0,"index":6259},{"krate":0,"index":6261},{"krate":0,"index":6262},{"krate":0,"index":6264},{"krate":0,"index":2932},{"krate":0,"index":6266},{"krate":0,"index":6268},{"krate":0,"index":6270},{"krate":0,"index":6271},{"krate":0,"index":6273},{"krate":0,"index":6274},{"krate":0,"index":6276},{"krate":0,"index":6279},{"krate":0,"index":6281},{"krate":0,"index":6282},{"krate":0,"index":6284},{"krate":0,"index":2934},{"krate":0,"index":6286},{"krate":0,"index":6288},{"krate":0,"index":6290},{"krate":0,"index":6291},{"krate":0,"index":6293},{"krate":0,"index":6294},{"krate":0,"index":6296},{"krate":0,"index":6299},{"krate":0,"index":6301},{"krate":0,"index":6302},{"krate":0,"index":6304},{"krate":0,"index":2936},{"krate":0,"index":6306},{"krate":0,"index":6308},{"krate":0,"index":6310},{"krate":0,"index":6311},{"krate":0,"index":6313},{"krate":0,"index":6314},{"krate":0,"index":6316},{"krate":0,"index":6319},{"krate":0,"index":6321},{"krate":0,"index":6322},{"krate":0,"index":6324},{"krate":0,"index":2938},{"krate":0,"index":6326},{"krate":0,"index":6328},{"krate":0,"index":6330},{"krate":0,"index":6331},{"krate":0,"index":6333},{"krate":0,"index":6334},{"krate":0,"index":6336},{"krate":0,"index":6339},{"krate":0,"index":6341},{"krate":0,"index":6342},{"krate":0,"index":6344},{"krate":0,"index":2940},{"krate":0,"index":6346},{"krate":0,"index":6348},{"krate":0,"index":6350},{"krate":0,"index":6351},{"krate":0,"index":6353},{"krate":0,"index":6354},{"krate":0,"index":6356},{"krate":0,"index":6359},{"krate":0,"index":6361},{"krate":0,"index":6362},{"krate":0,"index":6364},{"krate":0,"index":2942},{"krate":0,"index":6366},{"krate":0,"index":6368},{"krate":0,"index":6370},{"krate":0,"index":6371},{"krate":0,"index":6373},{"krate":0,"index":6374},{"krate":0,"index":6376},{"krate":0,"index":6379},{"krate":0,"index":6381},{"krate":0,"index":6382},{"krate":0,"index":6384},{"krate":0,"index":2944},{"krate":0,"index":6386},{"krate":0,"index":6388},{"krate":0,"index":6390},{"krate":0,"index":6391},{"krate":0,"index":6393},{"krate":0,"index":6394},{"krate":0,"index":6396},{"krate":0,"index":6399},{"krate":0,"index":6401},{"krate":0,"index":6402},{"krate":0,"index":6404},{"krate":0,"index":2946},{"krate":0,"index":6406},{"krate":0,"index":6408},{"krate":0,"index":6410},{"krate":0,"index":6411},{"krate":0,"index":6413},{"krate":0,"index":6414},{"krate":0,"index":6416},{"krate":0,"index":6419},{"krate":0,"index":6421},{"krate":0,"index":6422},{"krate":0,"index":6424},{"krate":0,"index":2948},{"krate":0,"index":6426},{"krate":0,"index":6428},{"krate":0,"index":6430},{"krate":0,"index":6431},{"krate":0,"index":6433},{"krate":0,"index":6434},{"krate":0,"index":6436},{"krate":0,"index":6439},{"krate":0,"index":6441},{"krate":0,"index":6442},{"krate":0,"index":6444},{"krate":0,"index":2950},{"krate":0,"index":6446},{"krate":0,"index":6448},{"krate":0,"index":6450},{"krate":0,"index":6451},{"krate":0,"index":6453},{"krate":0,"index":6454},{"krate":0,"index":6456},{"krate":0,"index":6459},{"krate":0,"index":6461},{"krate":0,"index":6462},{"krate":0,"index":6464},{"krate":0,"index":2952},{"krate":0,"index":6466},{"krate":0,"index":6468},{"krate":0,"index":6470},{"krate":0,"index":6471},{"krate":0,"index":6473},{"krate":0,"index":6474},{"krate":0,"index":6476},{"krate":0,"index":6479},{"krate":0,"index":6481},{"krate":0,"index":6482},{"krate":0,"index":6484},{"krate":0,"index":2954},{"krate":0,"index":6486},{"krate":0,"index":6488},{"krate":0,"index":6490},{"krate":0,"index":6491},{"krate":0,"index":6493},{"krate":0,"index":6494},{"krate":0,"index":6496},{"krate":0,"index":6499},{"krate":0,"index":6501},{"krate":0,"index":6502},{"krate":0,"index":6504},{"krate":0,"index":2956},{"krate":0,"index":6506},{"krate":0,"index":6508},{"krate":0,"index":6510},{"krate":0,"index":6511},{"krate":0,"index":6513},{"krate":0,"index":6514},{"krate":0,"index":6516},{"krate":0,"index":6519},{"krate":0,"index":6521},{"krate":0,"index":6522},{"krate":0,"index":6524},{"krate":0,"index":2958},{"krate":0,"index":6526},{"krate":0,"index":6528},{"krate":0,"index":6530},{"krate":0,"index":6531},{"krate":0,"index":6533},{"krate":0,"index":6534},{"krate":0,"index":6536},{"krate":0,"index":6539},{"krate":0,"index":6541},{"krate":0,"index":6542},{"krate":0,"index":6544},{"krate":0,"index":2960},{"krate":0,"index":6546},{"krate":0,"index":6548},{"krate":0,"index":6550},{"krate":0,"index":6551},{"krate":0,"index":6553},{"krate":0,"index":6554},{"krate":0,"index":6556},{"krate":0,"index":6559},{"krate":0,"index":6561},{"krate":0,"index":6562},{"krate":0,"index":6564},{"krate":0,"index":2962},{"krate":0,"index":6566},{"krate":0,"index":6568},{"krate":0,"index":6570},{"krate":0,"index":6571},{"krate":0,"index":6573},{"krate":0,"index":6574},{"krate":0,"index":6576},{"krate":0,"index":6579},{"krate":0,"index":6581},{"krate":0,"index":6582},{"krate":0,"index":6584},{"krate":0,"index":2964},{"krate":0,"index":6586},{"krate":0,"index":6588},{"krate":0,"index":6590},{"krate":0,"index":6591},{"krate":0,"index":6593},{"krate":0,"index":6594},{"krate":0,"index":6596},{"krate":0,"index":6599},{"krate":0,"index":6601},{"krate":0,"index":6602},{"krate":0,"index":6604},{"krate":0,"index":2966},{"krate":0,"index":6606},{"krate":0,"index":6608},{"krate":0,"index":6610},{"krate":0,"index":6611},{"krate":0,"index":6613},{"krate":0,"index":6614},{"krate":0,"index":6616},{"krate":0,"index":6619},{"krate":0,"index":6621},{"krate":0,"index":6622},{"krate":0,"index":6624},{"krate":0,"index":2968},{"krate":0,"index":6626},{"krate":0,"index":6628},{"krate":0,"index":6630},{"krate":0,"index":6631},{"krate":0,"index":6633},{"krate":0,"index":6634},{"krate":0,"index":6636},{"krate":0,"index":6639},{"krate":0,"index":6641},{"krate":0,"index":6642},{"krate":0,"index":6644},{"krate":0,"index":2970},{"krate":0,"index":6646},{"krate":0,"index":6648},{"krate":0,"index":6650},{"krate":0,"index":6651},{"krate":0,"index":6653},{"krate":0,"index":6654},{"krate":0,"index":6656},{"krate":0,"index":6659},{"krate":0,"index":6661},{"krate":0,"index":6662},{"krate":0,"index":6664},{"krate":0,"index":2972},{"krate":0,"index":6666},{"krate":0,"index":6668},{"krate":0,"index":6670},{"krate":0,"index":6671},{"krate":0,"index":6673},{"krate":0,"index":6674},{"krate":0,"index":6676},{"krate":0,"index":6679},{"krate":0,"index":6681},{"krate":0,"index":6682},{"krate":0,"index":6684},{"krate":0,"index":2974},{"krate":0,"index":6686},{"krate":0,"index":6688},{"krate":0,"index":6690},{"krate":0,"index":6691},{"krate":0,"index":6693},{"krate":0,"index":6694},{"krate":0,"index":6696},{"krate":0,"index":6699},{"krate":0,"index":6701},{"krate":0,"index":6702},{"krate":0,"index":6704},{"krate":0,"index":2976},{"krate":0,"index":6706},{"krate":0,"index":6708},{"krate":0,"index":6710},{"krate":0,"index":6711},{"krate":0,"index":6713},{"krate":0,"index":6714},{"krate":0,"index":6716},{"krate":0,"index":6719},{"krate":0,"index":6721},{"krate":0,"index":6722},{"krate":0,"index":6724},{"krate":0,"index":2978},{"krate":0,"index":6726},{"krate":0,"index":6728},{"krate":0,"index":6730},{"krate":0,"index":6731},{"krate":0,"index":6733},{"krate":0,"index":6734},{"krate":0,"index":6736},{"krate":0,"index":6739},{"krate":0,"index":6741},{"krate":0,"index":6742},{"krate":0,"index":6744},{"krate":0,"index":2980},{"krate":0,"index":6746},{"krate":0,"index":6748},{"krate":0,"index":6750},{"krate":0,"index":6751},{"krate":0,"index":6753},{"krate":0,"index":6754},{"krate":0,"index":6756},{"krate":0,"index":6759},{"krate":0,"index":6761},{"krate":0,"index":6762},{"krate":0,"index":6764},{"krate":0,"index":2982},{"krate":0,"index":6766},{"krate":0,"index":6768},{"krate":0,"index":6770},{"krate":0,"index":6771},{"krate":0,"index":6773},{"krate":0,"index":6774},{"krate":0,"index":6776},{"krate":0,"index":6779},{"krate":0,"index":6781},{"krate":0,"index":6782},{"krate":0,"index":6784},{"krate":0,"index":2984},{"krate":0,"index":6786},{"krate":0,"index":6788},{"krate":0,"index":6790},{"krate":0,"index":6791},{"krate":0,"index":6793},{"krate":0,"index":6794},{"krate":0,"index":6796},{"krate":0,"index":6799},{"krate":0,"index":6801},{"krate":0,"index":6802},{"krate":0,"index":6804},{"krate":0,"index":2986},{"krate":0,"index":6806},{"krate":0,"index":6808},{"krate":0,"index":6810},{"krate":0,"index":6811},{"krate":0,"index":6813},{"krate":0,"index":6814},{"krate":0,"index":6816},{"krate":0,"index":6819},{"krate":0,"index":6821},{"krate":0,"index":6822},{"krate":0,"index":6824},{"krate":0,"index":2988},{"krate":0,"index":6826},{"krate":0,"index":6828},{"krate":0,"index":6830},{"krate":0,"index":6831},{"krate":0,"index":6833},{"krate":0,"index":6834},{"krate":0,"index":6836},{"krate":0,"index":6839},{"krate":0,"index":6841},{"krate":0,"index":6842},{"krate":0,"index":6844},{"krate":0,"index":2990},{"krate":0,"index":6846},{"krate":0,"index":6848},{"krate":0,"index":6850},{"krate":0,"index":6851},{"krate":0,"index":6853},{"krate":0,"index":6854},{"krate":0,"index":6856},{"krate":0,"index":6859},{"krate":0,"index":6861},{"krate":0,"index":6862},{"krate":0,"index":6864},{"krate":0,"index":2992},{"krate":0,"index":6866},{"krate":0,"index":6868},{"krate":0,"index":6870},{"krate":0,"index":6871},{"krate":0,"index":6873},{"krate":0,"index":6874},{"krate":0,"index":6876},{"krate":0,"index":6879},{"krate":0,"index":6881},{"krate":0,"index":6882},{"krate":0,"index":6884},{"krate":0,"index":2994},{"krate":0,"index":6886},{"krate":0,"index":6888},{"krate":0,"index":6890},{"krate":0,"index":6891},{"krate":0,"index":6893},{"krate":0,"index":6894},{"krate":0,"index":6896},{"krate":0,"index":6899},{"krate":0,"index":6901},{"krate":0,"index":6902},{"krate":0,"index":6904},{"krate":0,"index":2996},{"krate":0,"index":6906},{"krate":0,"index":6908},{"krate":0,"index":6910},{"krate":0,"index":6911},{"krate":0,"index":6913},{"krate":0,"index":6914},{"krate":0,"index":6916},{"krate":0,"index":6919},{"krate":0,"index":6921},{"krate":0,"index":6922},{"krate":0,"index":6924},{"krate":0,"index":2998},{"krate":0,"index":6926},{"krate":0,"index":6928},{"krate":0,"index":6930},{"krate":0,"index":6931},{"krate":0,"index":6933},{"krate":0,"index":6934},{"krate":0,"index":6936},{"krate":0,"index":6939},{"krate":0,"index":6941},{"krate":0,"index":6942},{"krate":0,"index":6944},{"krate":0,"index":3000},{"krate":0,"index":6946},{"krate":0,"index":6948},{"krate":0,"index":6950},{"krate":0,"index":6951},{"krate":0,"index":6953},{"krate":0,"index":6954},{"krate":0,"index":6956},{"krate":0,"index":6959},{"krate":0,"index":6961},{"krate":0,"index":6962},{"krate":0,"index":6964},{"krate":0,"index":3002},{"krate":0,"index":6966},{"krate":0,"index":6968},{"krate":0,"index":6970},{"krate":0,"index":6971},{"krate":0,"index":6973},{"krate":0,"index":6974},{"krate":0,"index":6976},{"krate":0,"index":6979},{"krate":0,"index":6981},{"krate":0,"index":6982},{"krate":0,"index":6984},{"krate":0,"index":3004},{"krate":0,"index":6986},{"krate":0,"index":6988},{"krate":0,"index":6990},{"krate":0,"index":6991},{"krate":0,"index":6993},{"krate":0,"index":6994},{"krate":0,"index":6996},{"krate":0,"index":6999},{"krate":0,"index":7001},{"krate":0,"index":7002},{"krate":0,"index":7004},{"krate":0,"index":3006},{"krate":0,"index":7006},{"krate":0,"index":7008},{"krate":0,"index":7010},{"krate":0,"index":7011},{"krate":0,"index":7013},{"krate":0,"index":7014},{"krate":0,"index":7016},{"krate":0,"index":7019},{"krate":0,"index":7021},{"krate":0,"index":7022},{"krate":0,"index":7024},{"krate":0,"index":3008},{"krate":0,"index":7026},{"krate":0,"index":7028},{"krate":0,"index":7030},{"krate":0,"index":7031},{"krate":0,"index":7033},{"krate":0,"index":7034},{"krate":0,"index":7036},{"krate":0,"index":7039},{"krate":0,"index":7041},{"krate":0,"index":7042},{"krate":0,"index":7044},{"krate":0,"index":3010},{"krate":0,"index":7046},{"krate":0,"index":7048},{"krate":0,"index":7050},{"krate":0,"index":7051},{"krate":0,"index":7053},{"krate":0,"index":7054},{"krate":0,"index":7056},{"krate":0,"index":7059},{"krate":0,"index":7061},{"krate":0,"index":7062},{"krate":0,"index":7064},{"krate":0,"index":3012},{"krate":0,"index":7066},{"krate":0,"index":7068},{"krate":0,"index":7070},{"krate":0,"index":7071},{"krate":0,"index":7073},{"krate":0,"index":7074},{"krate":0,"index":7076},{"krate":0,"index":7079},{"krate":0,"index":7081},{"krate":0,"index":7082},{"krate":0,"index":7084},{"krate":0,"index":3014},{"krate":0,"index":443},{"krate":0,"index":449},{"krate":0,"index":451},{"krate":0,"index":454},{"krate":0,"index":457}],"decl_id":null,"docs":" Universal format specification.\n Applicable to textures, views, and vertex buffers.","sig":null,"attributes":[{"value":"/ Universal format specification.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":96889,"byte_end":96924,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/ Applicable to textures, views, and vertex buffers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":96925,"byte_end":96979,"line_start":2,"line_end":2,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":96980,"byte_end":96983,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ For a more detailed description of all the specific format specifiers,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":96984,"byte_end":97058,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"/ please see [the official Vulkan documentation](https://www.khronos.org/registry/vulkan/specs/1.0/man/html/VkFormat.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":97059,"byte_end":97183,"line_start":5,"line_end":5,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":97184,"byte_end":97187,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `gfx-rs` splits a `Format` into two sub-components, a `SurfaceType` and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":97188,"byte_end":97263,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ a `ChannelType`.  The `SurfaceType` specifies how the large the channels are,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":97264,"byte_end":97345,"line_start":8,"line_end":8,"column_start":1,"column_end":82}},{"value":"/ for instance `R32_G32_B32_A32`.  The `ChannelType` specifies how the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":97346,"byte_end":97418,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/ components are interpreted, for instance `Sfloat` or `Sint`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":97419,"byte_end":97483,"line_start":10,"line_end":10,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1967},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":97884,"byte_end":97891,"line_start":20,"line_end":20,"column_start":16,"column_end":23},"name":"Aspects","qualname":"::format::Aspects","value":"Aspects {  }","parent":null,"children":[{"krate":0,"index":1968}],"decl_id":null,"docs":" Bitflags which describe what properties of an image\n a format specifies or does not specify.  For example,\n the `Rgba8Unorm` format only specifies a `COLOR` aspect,\n while `D32SfloatS8Uint` specifies both a depth and stencil\n aspect but no color.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2002},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":97938,"byte_end":97943,"line_start":22,"line_end":22,"column_start":15,"column_end":20},"name":"COLOR","qualname":"::format::Aspects::COLOR","value":"Aspects","parent":{"krate":0,"index":2001},"children":[],"decl_id":null,"docs":" Color aspect.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2003},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":97991,"byte_end":97996,"line_start":24,"line_end":24,"column_start":15,"column_end":20},"name":"DEPTH","qualname":"::format::Aspects::DEPTH","value":"Aspects","parent":{"krate":0,"index":2001},"children":[],"decl_id":null,"docs":" Depth aspect.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2004},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":98046,"byte_end":98053,"line_start":26,"line_end":26,"column_start":15,"column_end":22},"name":"STENCIL","qualname":"::format::Aspects::STENCIL","value":"Aspects","parent":{"krate":0,"index":2001},"children":[],"decl_id":null,"docs":" Stencil aspect.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2059},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":98179,"byte_end":98189,"line_start":32,"line_end":32,"column_start":12,"column_end":22},"name":"FormatDesc","qualname":"::format::FormatDesc","value":"FormatDesc { bits, dim, packed, aspects }","parent":null,"children":[{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2063}],"decl_id":null,"docs":" Description of a format.\n","sig":null,"attributes":[{"value":"/ Description of a format.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":98071,"byte_end":98099,"line_start":30,"line_end":30,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":2060},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":98747,"byte_end":98751,"line_start":41,"line_end":41,"column_start":9,"column_end":13},"name":"bits","qualname":"::format::FormatDesc::bits","value":"u16","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" Total number of bits.","sig":null,"attributes":[{"value":"/ Total number of bits.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":98196,"byte_end":98221,"line_start":33,"line_end":33,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":98226,"byte_end":98229,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ * Depth/Stencil formats are opaque formats, where the total number of bits is unknown.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":98234,"byte_end":98324,"line_start":35,"line_end":35,"column_start":5,"column_end":95}},{"value":"/   A dummy value is used for these formats instead (sum of depth and stencil bits).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":98329,"byte_end":98415,"line_start":36,"line_end":36,"column_start":5,"column_end":91}},{"value":"/   For copy operations, the number of bits of the corresponding aspect should be used.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":98420,"byte_end":98509,"line_start":37,"line_end":37,"column_start":5,"column_end":94}},{"value":"/ * The total number can be larger than the sum of individual format bits","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":98514,"byte_end":98589,"line_start":38,"line_end":38,"column_start":5,"column_end":80}},{"value":"/   (`color`, `alpha`, `depth` and `stencil`) for packed formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":98594,"byte_end":98661,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"/ * For compressed formats, this denotes the number of bits per block.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":98666,"byte_end":98738,"line_start":40,"line_end":40,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":2061},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":98822,"byte_end":98825,"line_start":43,"line_end":43,"column_start":9,"column_end":12},"name":"dim","qualname":"::format::FormatDesc::dim","value":"(u8, u8)","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" Dimensions (width, height) of the texel blocks.\n","sig":null,"attributes":[{"value":"/ Dimensions (width, height) of the texel blocks.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":98762,"byte_end":98813,"line_start":42,"line_end":42,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":2062},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":99053,"byte_end":99059,"line_start":48,"line_end":48,"column_start":9,"column_end":15},"name":"packed","qualname":"::format::FormatDesc::packed","value":"bool","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" The format representation depends on the endianness of the platform.","sig":null,"attributes":[{"value":"/ The format representation depends on the endianness of the platform.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":98841,"byte_end":98913,"line_start":44,"line_end":44,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":98918,"byte_end":98921,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ * On little-endian systems, the actual oreder of components is reverse of what","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":98926,"byte_end":99008,"line_start":46,"line_end":46,"column_start":5,"column_end":87}},{"value":"/   a surface type specifies.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":99013,"byte_end":99044,"line_start":47,"line_end":47,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":2063},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":99098,"byte_end":99105,"line_start":50,"line_end":50,"column_start":9,"column_end":16},"name":"aspects","qualname":"::format::FormatDesc::aspects","value":"format::Aspects","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":" Format aspects\n","sig":null,"attributes":[{"value":"/ Format aspects","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":99071,"byte_end":99089,"line_start":49,"line_end":49,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":99191,"byte_end":99204,"line_start":55,"line_end":55,"column_start":12,"column_end":25},"name":"is_compressed","qualname":"<FormatDesc>::is_compressed","value":"pub fn is_compressed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the format is compressed.\n","sig":null,"attributes":[{"value":"/ Check if the format is compressed.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":99141,"byte_end":99179,"line_start":54,"line_end":54,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":2083},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":99391,"byte_end":99401,"line_start":62,"line_end":62,"column_start":12,"column_end":22},"name":"FormatBits","qualname":"::format::FormatBits","value":"FormatBits { color, alpha, depth, stencil }","parent":null,"children":[{"krate":0,"index":2084},{"krate":0,"index":2085},{"krate":0,"index":2086},{"krate":0,"index":2087}],"decl_id":null,"docs":" Description of the bits distribution of a format.\n","sig":null,"attributes":[{"value":"/ Description of the bits distribution of a format.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":99258,"byte_end":99311,"line_start":60,"line_end":60,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2084},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":99518,"byte_end":99523,"line_start":66,"line_end":66,"column_start":9,"column_end":14},"name":"color","qualname":"::format::FormatBits::color","value":"u8","parent":{"krate":0,"index":2083},"children":[],"decl_id":null,"docs":" Number of color bits (summed for R/G/B).","sig":null,"attributes":[{"value":"/ Number of color bits (summed for R/G/B).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":99408,"byte_end":99452,"line_start":63,"line_end":63,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":99457,"byte_end":99460,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ For compressed formats, this value is 0.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":99465,"byte_end":99509,"line_start":65,"line_end":65,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2085},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":99624,"byte_end":99629,"line_start":70,"line_end":70,"column_start":9,"column_end":14},"name":"alpha","qualname":"::format::FormatBits::alpha","value":"u8","parent":{"krate":0,"index":2083},"children":[],"decl_id":null,"docs":" Number of alpha bits.","sig":null,"attributes":[{"value":"/ Number of alpha bits.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":99533,"byte_end":99558,"line_start":67,"line_end":67,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":99563,"byte_end":99566,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ For compressed formats, this value is 0.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":99571,"byte_end":99615,"line_start":69,"line_end":69,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2086},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":99672,"byte_end":99677,"line_start":72,"line_end":72,"column_start":9,"column_end":14},"name":"depth","qualname":"::format::FormatBits::depth","value":"u8","parent":{"krate":0,"index":2083},"children":[],"decl_id":null,"docs":" Number of depth bits\n","sig":null,"attributes":[{"value":"/ Number of depth bits","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":99639,"byte_end":99663,"line_start":71,"line_end":71,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":2087},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":99722,"byte_end":99729,"line_start":74,"line_end":74,"column_start":9,"column_end":16},"name":"stencil","qualname":"::format::FormatBits::stencil","value":"u8","parent":{"krate":0,"index":2083},"children":[],"decl_id":null,"docs":" Number of stencil bits\n","sig":null,"attributes":[{"value":"/ Number of stencil bits","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":99687,"byte_end":99713,"line_start":73,"line_end":73,"column_start":5,"column_end":31}}]},{"kind":"Const","id":{"krate":0,"index":434},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":99801,"byte_end":99810,"line_start":78,"line_end":78,"column_start":11,"column_end":20},"name":"BITS_ZERO","qualname":"::format::BITS_ZERO","value":"FormatBits","parent":null,"children":[],"decl_id":null,"docs":" Format bits configuration with no bits assigned.\n","sig":null,"attributes":[{"value":"/ Format bits configuration with no bits assigned.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":99738,"byte_end":99790,"line_start":77,"line_end":77,"column_start":1,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2108},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":100259,"byte_end":100263,"line_start":93,"line_end":93,"column_start":5,"column_end":9},"name":"Zero","qualname":"::format::Component::Zero","value":"Component::Zero","parent":{"krate":0,"index":2107},"children":[],"decl_id":null,"docs":" Hardcoded zero\n","sig":null,"attributes":[{"value":"/ Hardcoded zero","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":100236,"byte_end":100254,"line_start":92,"line_end":92,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2111},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":100295,"byte_end":100298,"line_start":95,"line_end":95,"column_start":5,"column_end":8},"name":"One","qualname":"::format::Component::One","value":"Component::One","parent":{"krate":0,"index":2107},"children":[],"decl_id":null,"docs":" Hardcoded one\n","sig":null,"attributes":[{"value":"/ Hardcoded one","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":100273,"byte_end":100290,"line_start":94,"line_end":94,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2114},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":100328,"byte_end":100329,"line_start":97,"line_end":97,"column_start":5,"column_end":6},"name":"R","qualname":"::format::Component::R","value":"Component::R","parent":{"krate":0,"index":2107},"children":[],"decl_id":null,"docs":" Red channel\n","sig":null,"attributes":[{"value":"/ Red channel","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":100308,"byte_end":100323,"line_start":96,"line_end":96,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2117},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":100361,"byte_end":100362,"line_start":99,"line_end":99,"column_start":5,"column_end":6},"name":"G","qualname":"::format::Component::G","value":"Component::G","parent":{"krate":0,"index":2107},"children":[],"decl_id":null,"docs":" Green channel\n","sig":null,"attributes":[{"value":"/ Green channel","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":100339,"byte_end":100356,"line_start":98,"line_end":98,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2120},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":100393,"byte_end":100394,"line_start":101,"line_end":101,"column_start":5,"column_end":6},"name":"B","qualname":"::format::Component::B","value":"Component::B","parent":{"krate":0,"index":2107},"children":[],"decl_id":null,"docs":" Blue channel\n","sig":null,"attributes":[{"value":"/ Blue channel","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":100372,"byte_end":100388,"line_start":100,"line_end":100,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2123},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":100427,"byte_end":100428,"line_start":103,"line_end":103,"column_start":5,"column_end":6},"name":"A","qualname":"::format::Component::A","value":"Component::A","parent":{"krate":0,"index":2107},"children":[],"decl_id":null,"docs":" Alpha channel.\n","sig":null,"attributes":[{"value":"/ Alpha channel.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":100404,"byte_end":100422,"line_start":102,"line_end":102,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":2107},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":100188,"byte_end":100197,"line_start":90,"line_end":90,"column_start":10,"column_end":19},"name":"Component","qualname":"::format::Component","value":"pub enum Component { Zero = , One = , R = , G = , B = , A = , }","parent":null,"children":[{"krate":0,"index":2108},{"krate":0,"index":2111},{"krate":0,"index":2114},{"krate":0,"index":2117},{"krate":0,"index":2120},{"krate":0,"index":2123}],"decl_id":null,"docs":" Source channel in a swizzle configuration. Some may redirect onto\n different physical channels, some may be hardcoded to 0 or 1.\n","sig":null,"attributes":[{"value":"/ Source channel in a swizzle configuration. Some may redirect onto","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":99900,"byte_end":99969,"line_start":85,"line_end":85,"column_start":1,"column_end":70}},{"value":"/ different physical channels, some may be hardcoded to 0 or 1.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":99970,"byte_end":100035,"line_start":86,"line_end":86,"column_start":1,"column_end":66}},{"value":"repr(u8)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":100036,"byte_end":100047,"line_start":87,"line_end":87,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2144},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":101002,"byte_end":101009,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"name":"Swizzle","qualname":"::format::Swizzle","value":"","parent":null,"children":[],"decl_id":null,"docs":" Channel swizzle configuration for the resource views.\n This specifies a \"swizzle\" operation which remaps the various\n channels of a format into a different order.  For example,\n `Swizzle(Component::B, Component::G, Component::R, Component::A)`\n will swap `RGBA` formats into `BGRA` formats and back.","sig":null,"attributes":[{"value":"/ Channel swizzle configuration for the resource views.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":100437,"byte_end":100494,"line_start":106,"line_end":106,"column_start":1,"column_end":58}},{"value":"/ This specifies a \"swizzle\" operation which remaps the various","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":100495,"byte_end":100560,"line_start":107,"line_end":107,"column_start":1,"column_end":66}},{"value":"/ channels of a format into a different order.  For example,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":100561,"byte_end":100623,"line_start":108,"line_end":108,"column_start":1,"column_end":63}},{"value":"/ `Swizzle(Component::B, Component::G, Component::R, Component::A)`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":100624,"byte_end":100693,"line_start":109,"line_end":109,"column_start":1,"column_end":70}},{"value":"/ will swap `RGBA` formats into `BGRA` formats and back.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":100694,"byte_end":100752,"line_start":110,"line_end":110,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":100753,"byte_end":100756,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ Note: It's not currently mirrored at compile-time,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":100757,"byte_end":100811,"line_start":112,"line_end":112,"column_start":1,"column_end":55}},{"value":"/ thus providing less safety and convenience.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":100812,"byte_end":100859,"line_start":113,"line_end":113,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":2146},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":101010,"byte_end":101023,"line_start":116,"line_end":116,"column_start":20,"column_end":33},"name":"0","qualname":"::format::Swizzle::0","value":"format::Component","parent":{"krate":0,"index":2144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":101025,"byte_end":101038,"line_start":116,"line_end":116,"column_start":35,"column_end":48},"name":"1","qualname":"::format::Swizzle::1","value":"format::Component","parent":{"krate":0,"index":2144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2148},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":101040,"byte_end":101053,"line_start":116,"line_end":116,"column_start":50,"column_end":63},"name":"2","qualname":"::format::Swizzle::2","value":"format::Component","parent":{"krate":0,"index":2144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2149},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":101055,"byte_end":101068,"line_start":116,"line_end":116,"column_start":65,"column_end":78},"name":"3","qualname":"::format::Swizzle::3","value":"format::Component","parent":{"krate":0,"index":2144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":436},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":101171,"byte_end":101173,"line_start":120,"line_end":120,"column_start":15,"column_end":17},"name":"NO","qualname":"::format::Swizzle::NO","value":"Swizzle","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":" A trivially non-swizzling configuration; performs no changes.\n","sig":null,"attributes":[{"value":"/ A trivially non-swizzling configuration; performs no changes.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":101091,"byte_end":101156,"line_start":119,"line_end":119,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":2169},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":101513,"byte_end":101523,"line_start":132,"line_end":132,"column_start":12,"column_end":22},"name":"Properties","qualname":"::format::Properties","value":"Properties { linear_tiling, optimal_tiling, buffer_features }","parent":null,"children":[{"krate":0,"index":2170},{"krate":0,"index":2171},{"krate":0,"index":2172}],"decl_id":null,"docs":" Format properties of the physical device.\n","sig":null,"attributes":[{"value":"/ Format properties of the physical device.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":101333,"byte_end":101378,"line_start":129,"line_end":129,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2170},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":101731,"byte_end":101744,"line_start":136,"line_end":136,"column_start":9,"column_end":22},"name":"linear_tiling","qualname":"::format::Properties::linear_tiling","value":"format::ImageFeature","parent":{"krate":0,"index":2169},"children":[],"decl_id":null,"docs":" A bitmask of the features supported when an image with linear tiling is requested.\n Linear tiling has a known layout in-memory so data can be copied to and from host\n memory.\n","sig":null,"attributes":[{"value":"/ A bitmask of the features supported when an image with linear tiling is requested.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":101530,"byte_end":101616,"line_start":133,"line_end":133,"column_start":5,"column_end":91}},{"value":"/ Linear tiling has a known layout in-memory so data can be copied to and from host","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":101621,"byte_end":101706,"line_start":134,"line_end":134,"column_start":5,"column_end":90}},{"value":"/ memory.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":101711,"byte_end":101722,"line_start":135,"line_end":135,"column_start":5,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":2171},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":101949,"byte_end":101963,"line_start":139,"line_end":139,"column_start":9,"column_end":23},"name":"optimal_tiling","qualname":"::format::Properties::optimal_tiling","value":"format::ImageFeature","parent":{"krate":0,"index":2169},"children":[],"decl_id":null,"docs":" A bitmask of the features supported when an image with optimal tiling is requested.\n Optimal tiling is arranged however the GPU wants; its exact layout is undefined.\n","sig":null,"attributes":[{"value":"/ A bitmask of the features supported when an image with optimal tiling is requested.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":101764,"byte_end":101851,"line_start":137,"line_end":137,"column_start":5,"column_end":92}},{"value":"/ Optimal tiling is arranged however the GPU wants; its exact layout is undefined.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":101856,"byte_end":101940,"line_start":138,"line_end":138,"column_start":5,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":2172},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":102030,"byte_end":102045,"line_start":141,"line_end":141,"column_start":9,"column_end":24},"name":"buffer_features","qualname":"::format::Properties::buffer_features","value":"format::BufferFeature","parent":{"krate":0,"index":2169},"children":[],"decl_id":null,"docs":" The features supported by buffers.\n","sig":null,"attributes":[{"value":"/ The features supported by buffers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":101983,"byte_end":102021,"line_start":140,"line_end":140,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":2192},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":102250,"byte_end":102262,"line_start":149,"line_end":149,"column_start":16,"column_end":28},"name":"ImageFeature","qualname":"::format::ImageFeature","value":"ImageFeature {  }","parent":null,"children":[{"krate":0,"index":2193}],"decl_id":null,"docs":" Image feature flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2237},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":102323,"byte_end":102330,"line_start":151,"line_end":151,"column_start":15,"column_end":22},"name":"SAMPLED","qualname":"::format::ImageFeature::SAMPLED","value":"ImageFeature","parent":{"krate":0,"index":2236},"children":[],"decl_id":null,"docs":" Image view can be sampled.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2238},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":102447,"byte_end":102461,"line_start":153,"line_end":153,"column_start":15,"column_end":29},"name":"SAMPLED_LINEAR","qualname":"::format::ImageFeature::SAMPLED_LINEAR","value":"ImageFeature","parent":{"krate":0,"index":2236},"children":[],"decl_id":null,"docs":" Image can be sampled with a linear sampler or as blit source with linear sampling.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2239},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":102550,"byte_end":102564,"line_start":155,"line_end":155,"column_start":15,"column_end":29},"name":"SAMPLED_MINMAX","qualname":"::format::ImageFeature::SAMPLED_MINMAX","value":"ImageFeature","parent":{"krate":0,"index":2236},"children":[],"decl_id":null,"docs":" Image can be sampled with a min/max reduction sampler.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2240},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":102675,"byte_end":102682,"line_start":158,"line_end":158,"column_start":15,"column_end":22},"name":"STORAGE","qualname":"::format::ImageFeature::STORAGE","value":"ImageFeature","parent":{"krate":0,"index":2236},"children":[],"decl_id":null,"docs":" Image view can be used as storage image with exclusive read & write access.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2241},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":102794,"byte_end":102812,"line_start":160,"line_end":160,"column_start":15,"column_end":33},"name":"STORAGE_READ_WRITE","qualname":"::format::ImageFeature::STORAGE_READ_WRITE","value":"ImageFeature","parent":{"krate":0,"index":2236},"children":[],"decl_id":null,"docs":" Image view can be used as storage image with simultaneous read/write access.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2242},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":102901,"byte_end":102915,"line_start":162,"line_end":162,"column_start":15,"column_end":29},"name":"STORAGE_ATOMIC","qualname":"::format::ImageFeature::STORAGE_ATOMIC","value":"ImageFeature","parent":{"krate":0,"index":2236},"children":[],"decl_id":null,"docs":" Image view can be used as storage image with atomics.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2243},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":103005,"byte_end":103021,"line_start":165,"line_end":165,"column_start":15,"column_end":31},"name":"COLOR_ATTACHMENT","qualname":"::format::ImageFeature::COLOR_ATTACHMENT","value":"ImageFeature","parent":{"krate":0,"index":2236},"children":[],"decl_id":null,"docs":" Image view can be used as color and input attachment.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2244},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":103127,"byte_end":103149,"line_start":167,"line_end":167,"column_start":15,"column_end":37},"name":"COLOR_ATTACHMENT_BLEND","qualname":"::format::ImageFeature::COLOR_ATTACHMENT_BLEND","value":"ImageFeature","parent":{"krate":0,"index":2236},"children":[],"decl_id":null,"docs":" Image view can be used as color (with blending) and input attachment.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2245},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":103247,"byte_end":103271,"line_start":169,"line_end":169,"column_start":15,"column_end":39},"name":"DEPTH_STENCIL_ATTACHMENT","qualname":"::format::ImageFeature::DEPTH_STENCIL_ATTACHMENT","value":"ImageFeature","parent":{"krate":0,"index":2236},"children":[],"decl_id":null,"docs":" Image view can be used as depth-stencil and input attachment.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2246},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":103355,"byte_end":103363,"line_start":172,"line_end":172,"column_start":15,"column_end":23},"name":"BLIT_SRC","qualname":"::format::ImageFeature::BLIT_SRC","value":"ImageFeature","parent":{"krate":0,"index":2236},"children":[],"decl_id":null,"docs":" Image can be used as source for blit commands.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2247},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":103452,"byte_end":103460,"line_start":174,"line_end":174,"column_start":15,"column_end":23},"name":"BLIT_DST","qualname":"::format::ImageFeature::BLIT_DST","value":"ImageFeature","parent":{"krate":0,"index":2236},"children":[],"decl_id":null,"docs":" Image can be used as destination for blit commands.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2248},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":103523,"byte_end":103535,"line_start":176,"line_end":176,"column_start":15,"column_end":27},"name":"TRANSFER_SRC","qualname":"::format::ImageFeature::TRANSFER_SRC","value":"ImageFeature","parent":{"krate":0,"index":2236},"children":[],"decl_id":null,"docs":" Image can be copied from.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2249},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":103596,"byte_end":103608,"line_start":178,"line_end":178,"column_start":15,"column_end":27},"name":"TRANSFER_DST","qualname":"::format::ImageFeature::TRANSFER_DST","value":"ImageFeature","parent":{"krate":0,"index":2236},"children":[],"decl_id":null,"docs":" Image can be copied to.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2336},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":103775,"byte_end":103788,"line_start":186,"line_end":186,"column_start":16,"column_end":29},"name":"BufferFeature","qualname":"::format::BufferFeature","value":"BufferFeature {  }","parent":null,"children":[{"krate":0,"index":2337}],"decl_id":null,"docs":" Buffer feature flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2372},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":103871,"byte_end":103884,"line_start":188,"line_end":188,"column_start":15,"column_end":28},"name":"UNIFORM_TEXEL","qualname":"::format::BufferFeature::UNIFORM_TEXEL","value":"BufferFeature","parent":{"krate":0,"index":2371},"children":[],"decl_id":null,"docs":" Buffer view can be used as uniform texel buffer.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2373},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":103967,"byte_end":103980,"line_start":190,"line_end":190,"column_start":15,"column_end":28},"name":"STORAGE_TEXEL","qualname":"::format::BufferFeature::STORAGE_TEXEL","value":"BufferFeature","parent":{"krate":0,"index":2371},"children":[],"decl_id":null,"docs":" Buffer view can be used as storage texel buffer.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2374},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":104079,"byte_end":104099,"line_start":192,"line_end":192,"column_start":15,"column_end":35},"name":"STORAGE_TEXEL_ATOMIC","qualname":"::format::BufferFeature::STORAGE_TEXEL_ATOMIC","value":"BufferFeature","parent":{"krate":0,"index":2371},"children":[],"decl_id":null,"docs":" Buffer view can be used as storage texel buffer (with atomics).\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2375},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":104175,"byte_end":104181,"line_start":194,"line_end":194,"column_start":15,"column_end":21},"name":"VERTEX","qualname":"::format::BufferFeature::VERTEX","value":"BufferFeature","parent":{"krate":0,"index":2371},"children":[],"decl_id":null,"docs":" Image view can be used as vertex buffer.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2434},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":104501,"byte_end":104506,"line_start":205,"line_end":205,"column_start":5,"column_end":10},"name":"Unorm","qualname":"::format::ChannelType::Unorm","value":"ChannelType::Unorm","parent":{"krate":0,"index":2433},"children":[],"decl_id":null,"docs":" Unsigned normalized.\n","sig":null,"attributes":[{"value":"/ Unsigned normalized.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":104472,"byte_end":104496,"line_start":204,"line_end":204,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2436},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":104539,"byte_end":104544,"line_start":207,"line_end":207,"column_start":5,"column_end":10},"name":"Snorm","qualname":"::format::ChannelType::Snorm","value":"ChannelType::Snorm","parent":{"krate":0,"index":2433},"children":[],"decl_id":null,"docs":" Signed normalized.\n","sig":null,"attributes":[{"value":"/ Signed normalized.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":104512,"byte_end":104534,"line_start":206,"line_end":206,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2438},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":104576,"byte_end":104580,"line_start":209,"line_end":209,"column_start":5,"column_end":9},"name":"Uint","qualname":"::format::ChannelType::Uint","value":"ChannelType::Uint","parent":{"krate":0,"index":2433},"children":[],"decl_id":null,"docs":" Unsigned integer.\n","sig":null,"attributes":[{"value":"/ Unsigned integer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":104550,"byte_end":104571,"line_start":208,"line_end":208,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2440},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":104610,"byte_end":104614,"line_start":211,"line_end":211,"column_start":5,"column_end":9},"name":"Sint","qualname":"::format::ChannelType::Sint","value":"ChannelType::Sint","parent":{"krate":0,"index":2433},"children":[],"decl_id":null,"docs":" Signed integer.\n","sig":null,"attributes":[{"value":"/ Signed integer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":104586,"byte_end":104605,"line_start":210,"line_end":210,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2442},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":104653,"byte_end":104659,"line_start":213,"line_end":213,"column_start":5,"column_end":11},"name":"Ufloat","qualname":"::format::ChannelType::Ufloat","value":"ChannelType::Ufloat","parent":{"krate":0,"index":2433},"children":[],"decl_id":null,"docs":" Unsigned floating-point.\n","sig":null,"attributes":[{"value":"/ Unsigned floating-point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":104620,"byte_end":104648,"line_start":212,"line_end":212,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2444},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":104696,"byte_end":104702,"line_start":215,"line_end":215,"column_start":5,"column_end":11},"name":"Sfloat","qualname":"::format::ChannelType::Sfloat","value":"ChannelType::Sfloat","parent":{"krate":0,"index":2433},"children":[],"decl_id":null,"docs":" Signed floating-point.\n","sig":null,"attributes":[{"value":"/ Signed floating-point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":104665,"byte_end":104691,"line_start":214,"line_end":214,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2446},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":104741,"byte_end":104748,"line_start":217,"line_end":217,"column_start":5,"column_end":12},"name":"Uscaled","qualname":"::format::ChannelType::Uscaled","value":"ChannelType::Uscaled","parent":{"krate":0,"index":2433},"children":[],"decl_id":null,"docs":" Unsigned scaled integer.\n","sig":null,"attributes":[{"value":"/ Unsigned scaled integer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":104708,"byte_end":104736,"line_start":216,"line_end":216,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2448},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":104785,"byte_end":104792,"line_start":219,"line_end":219,"column_start":5,"column_end":12},"name":"Sscaled","qualname":"::format::ChannelType::Sscaled","value":"ChannelType::Sscaled","parent":{"krate":0,"index":2433},"children":[],"decl_id":null,"docs":" Signed scaled integer.\n","sig":null,"attributes":[{"value":"/ Signed scaled integer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":104754,"byte_end":104780,"line_start":218,"line_end":218,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2450},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":104852,"byte_end":104856,"line_start":221,"line_end":221,"column_start":5,"column_end":9},"name":"Srgb","qualname":"::format::ChannelType::Srgb","value":"ChannelType::Srgb","parent":{"krate":0,"index":2433},"children":[],"decl_id":null,"docs":" Unsigned normalized, SRGB non-linear encoded.\n","sig":null,"attributes":[{"value":"/ Unsigned normalized, SRGB non-linear encoded.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":104798,"byte_end":104847,"line_start":220,"line_end":220,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":2433},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":104454,"byte_end":104465,"line_start":203,"line_end":203,"column_start":10,"column_end":21},"name":"ChannelType","qualname":"::format::ChannelType","value":"pub enum ChannelType {\n    Unorm,\n    Snorm,\n    Uint,\n    Sint,\n    Ufloat,\n    Sfloat,\n    Uscaled,\n    Sscaled,\n    Srgb,\n}","parent":null,"children":[{"krate":0,"index":2434},{"krate":0,"index":2436},{"krate":0,"index":2438},{"krate":0,"index":2440},{"krate":0,"index":2442},{"krate":0,"index":2444},{"krate":0,"index":2446},{"krate":0,"index":2448},{"krate":0,"index":2450}],"decl_id":null,"docs":" Type of a surface channel. This is how we interpret the\n storage allocated with `SurfaceType`.\n","sig":null,"attributes":[{"value":"/ Type of a surface channel. This is how we interpret the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":104200,"byte_end":104259,"line_start":198,"line_end":198,"column_start":1,"column_end":60}},{"value":"/ storage allocated with `SurfaceType`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":104260,"byte_end":104301,"line_start":199,"line_end":199,"column_start":1,"column_end":42}},{"value":"repr(u8)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":104302,"byte_end":104313,"line_start":200,"line_end":200,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2622},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":110492,"byte_end":110502,"line_start":337,"line_end":337,"column_start":12,"column_end":22},"name":"BaseFormat","qualname":"::format::BaseFormat","value":"","parent":null,"children":[],"decl_id":null,"docs":" Generic run-time base format.\n","sig":null,"attributes":[{"value":"/ Generic run-time base format.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":110316,"byte_end":110349,"line_start":334,"line_end":334,"column_start":1,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":2624},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":110503,"byte_end":110518,"line_start":337,"line_end":337,"column_start":23,"column_end":38},"name":"0","qualname":"::format::BaseFormat::0","value":"format::SurfaceType","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2625},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":110520,"byte_end":110535,"line_start":337,"line_end":337,"column_start":40,"column_end":55},"name":"1","qualname":"::format::BaseFormat::1","value":"format::ChannelType","parent":{"krate":0,"index":2622},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":440},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":110585,"byte_end":110593,"line_start":340,"line_end":340,"column_start":11,"column_end":19},"name":"AsFormat","qualname":"::format::AsFormat","value":"AsFormat","parent":null,"children":[{"krate":0,"index":441}],"decl_id":null,"docs":" Conversion trait into `Format`;\n","sig":null,"attributes":[{"value":"/ Conversion trait into `Format`;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":110539,"byte_end":110574,"line_start":339,"line_end":339,"column_start":1,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":441},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":110633,"byte_end":110637,"line_start":342,"line_end":342,"column_start":11,"column_end":15},"name":"SELF","qualname":"::format::AsFormat::SELF","value":"Format","parent":{"krate":0,"index":440},"children":[],"decl_id":null,"docs":" Associated format.\n","sig":null,"attributes":[{"value":"/ Associated format.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":110600,"byte_end":110622,"line_start":341,"line_end":341,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":3406},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":113146,"byte_end":113154,"line_start":407,"line_end":407,"column_start":5,"column_end":13},"name":"Rg4Unorm","qualname":"::format::Rg4Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112106,"byte_end":112180,"line_start":379,"line_end":379,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112193,"byte_end":112247,"line_start":380,"line_end":380,"column_start":13,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":3426},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":113177,"byte_end":113187,"line_start":408,"line_end":408,"column_start":5,"column_end":15},"name":"Rgba4Unorm","qualname":"::format::Rgba4Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3446},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":113216,"byte_end":113226,"line_start":409,"line_end":409,"column_start":5,"column_end":15},"name":"Bgra4Unorm","qualname":"::format::Bgra4Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3466},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":113255,"byte_end":113266,"line_start":410,"line_end":410,"column_start":5,"column_end":16},"name":"R5g6b5Unorm","qualname":"::format::R5g6b5Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3486},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":113292,"byte_end":113303,"line_start":411,"line_end":411,"column_start":5,"column_end":16},"name":"B5g6r5Unorm","qualname":"::format::B5g6r5Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3506},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":113329,"byte_end":113342,"line_start":412,"line_end":412,"column_start":5,"column_end":18},"name":"R5g5b5a1Unorm","qualname":"::format::R5g5b5a1Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3526},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":113371,"byte_end":113384,"line_start":413,"line_end":413,"column_start":5,"column_end":18},"name":"B5g5r5a1Unorm","qualname":"::format::B5g5r5a1Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3546},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":113413,"byte_end":113426,"line_start":414,"line_end":414,"column_start":5,"column_end":18},"name":"A1r5g5b5Unorm","qualname":"::format::A1r5g5b5Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3566},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":113455,"byte_end":113462,"line_start":415,"line_end":415,"column_start":5,"column_end":12},"name":"R8Unorm","qualname":"::format::R8Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3586},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":113482,"byte_end":113489,"line_start":416,"line_end":416,"column_start":5,"column_end":12},"name":"R8Snorm","qualname":"::format::R8Snorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3606},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":113509,"byte_end":113518,"line_start":417,"line_end":417,"column_start":5,"column_end":14},"name":"R8Uscaled","qualname":"::format::R8Uscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3626},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":113540,"byte_end":113549,"line_start":418,"line_end":418,"column_start":5,"column_end":14},"name":"R8Sscaled","qualname":"::format::R8Sscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3646},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":113571,"byte_end":113577,"line_start":419,"line_end":419,"column_start":5,"column_end":11},"name":"R8Uint","qualname":"::format::R8Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3666},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":113596,"byte_end":113602,"line_start":420,"line_end":420,"column_start":5,"column_end":11},"name":"R8Sint","qualname":"::format::R8Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3686},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":113621,"byte_end":113627,"line_start":421,"line_end":421,"column_start":5,"column_end":11},"name":"R8Srgb","qualname":"::format::R8Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3706},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":113646,"byte_end":113654,"line_start":422,"line_end":422,"column_start":5,"column_end":13},"name":"Rg8Unorm","qualname":"::format::Rg8Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3726},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":113677,"byte_end":113685,"line_start":423,"line_end":423,"column_start":5,"column_end":13},"name":"Rg8Snorm","qualname":"::format::Rg8Snorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3746},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":113708,"byte_end":113718,"line_start":424,"line_end":424,"column_start":5,"column_end":15},"name":"Rg8Uscaled","qualname":"::format::Rg8Uscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3766},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":113743,"byte_end":113753,"line_start":425,"line_end":425,"column_start":5,"column_end":15},"name":"Rg8Sscaled","qualname":"::format::Rg8Sscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3786},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":113778,"byte_end":113785,"line_start":426,"line_end":426,"column_start":5,"column_end":12},"name":"Rg8Uint","qualname":"::format::Rg8Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3806},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":113807,"byte_end":113814,"line_start":427,"line_end":427,"column_start":5,"column_end":12},"name":"Rg8Sint","qualname":"::format::Rg8Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3826},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":113836,"byte_end":113843,"line_start":428,"line_end":428,"column_start":5,"column_end":12},"name":"Rg8Srgb","qualname":"::format::Rg8Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3846},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":113865,"byte_end":113874,"line_start":429,"line_end":429,"column_start":5,"column_end":14},"name":"Rgb8Unorm","qualname":"::format::Rgb8Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3866},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":113900,"byte_end":113909,"line_start":430,"line_end":430,"column_start":5,"column_end":14},"name":"Rgb8Snorm","qualname":"::format::Rgb8Snorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3886},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":113935,"byte_end":113946,"line_start":431,"line_end":431,"column_start":5,"column_end":16},"name":"Rgb8Uscaled","qualname":"::format::Rgb8Uscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3906},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":113974,"byte_end":113985,"line_start":432,"line_end":432,"column_start":5,"column_end":16},"name":"Rgb8Sscaled","qualname":"::format::Rgb8Sscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3926},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":114013,"byte_end":114021,"line_start":433,"line_end":433,"column_start":5,"column_end":13},"name":"Rgb8Uint","qualname":"::format::Rgb8Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3946},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":114046,"byte_end":114054,"line_start":434,"line_end":434,"column_start":5,"column_end":13},"name":"Rgb8Sint","qualname":"::format::Rgb8Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3966},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":114079,"byte_end":114087,"line_start":435,"line_end":435,"column_start":5,"column_end":13},"name":"Rgb8Srgb","qualname":"::format::Rgb8Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3986},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":114112,"byte_end":114121,"line_start":436,"line_end":436,"column_start":5,"column_end":14},"name":"Bgr8Unorm","qualname":"::format::Bgr8Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4006},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":114147,"byte_end":114156,"line_start":437,"line_end":437,"column_start":5,"column_end":14},"name":"Bgr8Snorm","qualname":"::format::Bgr8Snorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4026},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":114182,"byte_end":114193,"line_start":438,"line_end":438,"column_start":5,"column_end":16},"name":"Bgr8Uscaled","qualname":"::format::Bgr8Uscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4046},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":114221,"byte_end":114232,"line_start":439,"line_end":439,"column_start":5,"column_end":16},"name":"Bgr8Sscaled","qualname":"::format::Bgr8Sscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4066},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":114260,"byte_end":114268,"line_start":440,"line_end":440,"column_start":5,"column_end":13},"name":"Bgr8Uint","qualname":"::format::Bgr8Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4086},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":114293,"byte_end":114301,"line_start":441,"line_end":441,"column_start":5,"column_end":13},"name":"Bgr8Sint","qualname":"::format::Bgr8Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4106},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":114326,"byte_end":114334,"line_start":442,"line_end":442,"column_start":5,"column_end":13},"name":"Bgr8Srgb","qualname":"::format::Bgr8Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4126},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":114359,"byte_end":114369,"line_start":443,"line_end":443,"column_start":5,"column_end":15},"name":"Rgba8Unorm","qualname":"::format::Rgba8Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4146},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":114398,"byte_end":114408,"line_start":444,"line_end":444,"column_start":5,"column_end":15},"name":"Rgba8Snorm","qualname":"::format::Rgba8Snorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4166},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":114437,"byte_end":114449,"line_start":445,"line_end":445,"column_start":5,"column_end":17},"name":"Rgba8Uscaled","qualname":"::format::Rgba8Uscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4186},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":114480,"byte_end":114492,"line_start":446,"line_end":446,"column_start":5,"column_end":17},"name":"Rgba8Sscaled","qualname":"::format::Rgba8Sscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4206},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":114523,"byte_end":114532,"line_start":447,"line_end":447,"column_start":5,"column_end":14},"name":"Rgba8Uint","qualname":"::format::Rgba8Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4226},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":114560,"byte_end":114569,"line_start":448,"line_end":448,"column_start":5,"column_end":14},"name":"Rgba8Sint","qualname":"::format::Rgba8Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4246},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":114597,"byte_end":114606,"line_start":449,"line_end":449,"column_start":5,"column_end":14},"name":"Rgba8Srgb","qualname":"::format::Rgba8Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4266},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":114634,"byte_end":114644,"line_start":450,"line_end":450,"column_start":5,"column_end":15},"name":"Bgra8Unorm","qualname":"::format::Bgra8Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4286},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":114673,"byte_end":114683,"line_start":451,"line_end":451,"column_start":5,"column_end":15},"name":"Bgra8Snorm","qualname":"::format::Bgra8Snorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4306},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":114712,"byte_end":114724,"line_start":452,"line_end":452,"column_start":5,"column_end":17},"name":"Bgra8Uscaled","qualname":"::format::Bgra8Uscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4326},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":114755,"byte_end":114767,"line_start":453,"line_end":453,"column_start":5,"column_end":17},"name":"Bgra8Sscaled","qualname":"::format::Bgra8Sscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4346},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":114798,"byte_end":114807,"line_start":454,"line_end":454,"column_start":5,"column_end":14},"name":"Bgra8Uint","qualname":"::format::Bgra8Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4366},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":114835,"byte_end":114844,"line_start":455,"line_end":455,"column_start":5,"column_end":14},"name":"Bgra8Sint","qualname":"::format::Bgra8Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4386},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":114872,"byte_end":114881,"line_start":456,"line_end":456,"column_start":5,"column_end":14},"name":"Bgra8Srgb","qualname":"::format::Bgra8Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4406},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":114909,"byte_end":114919,"line_start":457,"line_end":457,"column_start":5,"column_end":15},"name":"Abgr8Unorm","qualname":"::format::Abgr8Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4426},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":114948,"byte_end":114958,"line_start":458,"line_end":458,"column_start":5,"column_end":15},"name":"Abgr8Snorm","qualname":"::format::Abgr8Snorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4446},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":114987,"byte_end":114999,"line_start":459,"line_end":459,"column_start":5,"column_end":17},"name":"Abgr8Uscaled","qualname":"::format::Abgr8Uscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4466},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":115030,"byte_end":115042,"line_start":460,"line_end":460,"column_start":5,"column_end":17},"name":"Abgr8Sscaled","qualname":"::format::Abgr8Sscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4486},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":115073,"byte_end":115082,"line_start":461,"line_end":461,"column_start":5,"column_end":14},"name":"Abgr8Uint","qualname":"::format::Abgr8Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4506},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":115110,"byte_end":115119,"line_start":462,"line_end":462,"column_start":5,"column_end":14},"name":"Abgr8Sint","qualname":"::format::Abgr8Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4526},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":115147,"byte_end":115156,"line_start":463,"line_end":463,"column_start":5,"column_end":14},"name":"Abgr8Srgb","qualname":"::format::Abgr8Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4546},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":115184,"byte_end":115200,"line_start":464,"line_end":464,"column_start":5,"column_end":21},"name":"A2r10g10b10Unorm","qualname":"::format::A2r10g10b10Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4566},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":115232,"byte_end":115248,"line_start":465,"line_end":465,"column_start":5,"column_end":21},"name":"A2r10g10b10Snorm","qualname":"::format::A2r10g10b10Snorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4586},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":115280,"byte_end":115298,"line_start":466,"line_end":466,"column_start":5,"column_end":23},"name":"A2r10g10b10Uscaled","qualname":"::format::A2r10g10b10Uscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4606},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":115332,"byte_end":115350,"line_start":467,"line_end":467,"column_start":5,"column_end":23},"name":"A2r10g10b10Sscaled","qualname":"::format::A2r10g10b10Sscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4626},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":115384,"byte_end":115399,"line_start":468,"line_end":468,"column_start":5,"column_end":20},"name":"A2r10g10b10Uint","qualname":"::format::A2r10g10b10Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4646},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":115430,"byte_end":115445,"line_start":469,"line_end":469,"column_start":5,"column_end":20},"name":"A2r10g10b10Sint","qualname":"::format::A2r10g10b10Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4666},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":115476,"byte_end":115492,"line_start":470,"line_end":470,"column_start":5,"column_end":21},"name":"A2b10g10r10Unorm","qualname":"::format::A2b10g10r10Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4686},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":115524,"byte_end":115540,"line_start":471,"line_end":471,"column_start":5,"column_end":21},"name":"A2b10g10r10Snorm","qualname":"::format::A2b10g10r10Snorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4706},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":115572,"byte_end":115590,"line_start":472,"line_end":472,"column_start":5,"column_end":23},"name":"A2b10g10r10Uscaled","qualname":"::format::A2b10g10r10Uscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4726},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":115624,"byte_end":115642,"line_start":473,"line_end":473,"column_start":5,"column_end":23},"name":"A2b10g10r10Sscaled","qualname":"::format::A2b10g10r10Sscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4746},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":115676,"byte_end":115691,"line_start":474,"line_end":474,"column_start":5,"column_end":20},"name":"A2b10g10r10Uint","qualname":"::format::A2b10g10r10Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4766},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":115722,"byte_end":115737,"line_start":475,"line_end":475,"column_start":5,"column_end":20},"name":"A2b10g10r10Sint","qualname":"::format::A2b10g10r10Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4786},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":115768,"byte_end":115776,"line_start":476,"line_end":476,"column_start":5,"column_end":13},"name":"R16Unorm","qualname":"::format::R16Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4806},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":115797,"byte_end":115805,"line_start":477,"line_end":477,"column_start":5,"column_end":13},"name":"R16Snorm","qualname":"::format::R16Snorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4826},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":115826,"byte_end":115836,"line_start":478,"line_end":478,"column_start":5,"column_end":15},"name":"R16Uscaled","qualname":"::format::R16Uscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4846},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":115859,"byte_end":115869,"line_start":479,"line_end":479,"column_start":5,"column_end":15},"name":"R16Sscaled","qualname":"::format::R16Sscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4866},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":115892,"byte_end":115899,"line_start":480,"line_end":480,"column_start":5,"column_end":12},"name":"R16Uint","qualname":"::format::R16Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4886},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":115919,"byte_end":115926,"line_start":481,"line_end":481,"column_start":5,"column_end":12},"name":"R16Sint","qualname":"::format::R16Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4906},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":115946,"byte_end":115955,"line_start":482,"line_end":482,"column_start":5,"column_end":14},"name":"R16Sfloat","qualname":"::format::R16Sfloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4926},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":115977,"byte_end":115986,"line_start":483,"line_end":483,"column_start":5,"column_end":14},"name":"Rg16Unorm","qualname":"::format::Rg16Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4946},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":116011,"byte_end":116020,"line_start":484,"line_end":484,"column_start":5,"column_end":14},"name":"Rg16Snorm","qualname":"::format::Rg16Snorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4966},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":116045,"byte_end":116056,"line_start":485,"line_end":485,"column_start":5,"column_end":16},"name":"Rg16Uscaled","qualname":"::format::Rg16Uscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":4986},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":116083,"byte_end":116094,"line_start":486,"line_end":486,"column_start":5,"column_end":16},"name":"Rg16Sscaled","qualname":"::format::Rg16Sscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5006},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":116121,"byte_end":116129,"line_start":487,"line_end":487,"column_start":5,"column_end":13},"name":"Rg16Uint","qualname":"::format::Rg16Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5026},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":116153,"byte_end":116161,"line_start":488,"line_end":488,"column_start":5,"column_end":13},"name":"Rg16Sint","qualname":"::format::Rg16Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5046},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":116185,"byte_end":116195,"line_start":489,"line_end":489,"column_start":5,"column_end":15},"name":"Rg16Sfloat","qualname":"::format::Rg16Sfloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5066},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":116221,"byte_end":116231,"line_start":490,"line_end":490,"column_start":5,"column_end":15},"name":"Rgb16Unorm","qualname":"::format::Rgb16Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5086},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":116260,"byte_end":116270,"line_start":491,"line_end":491,"column_start":5,"column_end":15},"name":"Rgb16Snorm","qualname":"::format::Rgb16Snorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5106},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":116299,"byte_end":116311,"line_start":492,"line_end":492,"column_start":5,"column_end":17},"name":"Rgb16Uscaled","qualname":"::format::Rgb16Uscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5126},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":116342,"byte_end":116354,"line_start":493,"line_end":493,"column_start":5,"column_end":17},"name":"Rgb16Sscaled","qualname":"::format::Rgb16Sscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5146},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":116385,"byte_end":116394,"line_start":494,"line_end":494,"column_start":5,"column_end":14},"name":"Rgb16Uint","qualname":"::format::Rgb16Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5166},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":116422,"byte_end":116431,"line_start":495,"line_end":495,"column_start":5,"column_end":14},"name":"Rgb16Sint","qualname":"::format::Rgb16Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5186},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":116459,"byte_end":116470,"line_start":496,"line_end":496,"column_start":5,"column_end":16},"name":"Rgb16Sfloat","qualname":"::format::Rgb16Sfloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5206},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":116500,"byte_end":116511,"line_start":497,"line_end":497,"column_start":5,"column_end":16},"name":"Rgba16Unorm","qualname":"::format::Rgba16Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5226},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":116544,"byte_end":116555,"line_start":498,"line_end":498,"column_start":5,"column_end":16},"name":"Rgba16Snorm","qualname":"::format::Rgba16Snorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5246},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":116588,"byte_end":116601,"line_start":499,"line_end":499,"column_start":5,"column_end":18},"name":"Rgba16Uscaled","qualname":"::format::Rgba16Uscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5266},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":116636,"byte_end":116649,"line_start":500,"line_end":500,"column_start":5,"column_end":18},"name":"Rgba16Sscaled","qualname":"::format::Rgba16Sscaled","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5286},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":116684,"byte_end":116694,"line_start":501,"line_end":501,"column_start":5,"column_end":15},"name":"Rgba16Uint","qualname":"::format::Rgba16Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5306},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":116726,"byte_end":116736,"line_start":502,"line_end":502,"column_start":5,"column_end":15},"name":"Rgba16Sint","qualname":"::format::Rgba16Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5326},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":116768,"byte_end":116780,"line_start":503,"line_end":503,"column_start":5,"column_end":17},"name":"Rgba16Sfloat","qualname":"::format::Rgba16Sfloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5346},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":116814,"byte_end":116821,"line_start":504,"line_end":504,"column_start":5,"column_end":12},"name":"R32Uint","qualname":"::format::R32Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5366},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":116841,"byte_end":116848,"line_start":505,"line_end":505,"column_start":5,"column_end":12},"name":"R32Sint","qualname":"::format::R32Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5386},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":116868,"byte_end":116877,"line_start":506,"line_end":506,"column_start":5,"column_end":14},"name":"R32Sfloat","qualname":"::format::R32Sfloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5406},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":116899,"byte_end":116907,"line_start":507,"line_end":507,"column_start":5,"column_end":13},"name":"Rg32Uint","qualname":"::format::Rg32Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5426},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":116931,"byte_end":116939,"line_start":508,"line_end":508,"column_start":5,"column_end":13},"name":"Rg32Sint","qualname":"::format::Rg32Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5446},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":116963,"byte_end":116973,"line_start":509,"line_end":509,"column_start":5,"column_end":15},"name":"Rg32Sfloat","qualname":"::format::Rg32Sfloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5466},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":116999,"byte_end":117008,"line_start":510,"line_end":510,"column_start":5,"column_end":14},"name":"Rgb32Uint","qualname":"::format::Rgb32Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5486},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":117036,"byte_end":117045,"line_start":511,"line_end":511,"column_start":5,"column_end":14},"name":"Rgb32Sint","qualname":"::format::Rgb32Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5506},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":117073,"byte_end":117084,"line_start":512,"line_end":512,"column_start":5,"column_end":16},"name":"Rgb32Sfloat","qualname":"::format::Rgb32Sfloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5526},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":117114,"byte_end":117124,"line_start":513,"line_end":513,"column_start":5,"column_end":15},"name":"Rgba32Uint","qualname":"::format::Rgba32Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5546},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":117156,"byte_end":117166,"line_start":514,"line_end":514,"column_start":5,"column_end":15},"name":"Rgba32Sint","qualname":"::format::Rgba32Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5566},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":117198,"byte_end":117210,"line_start":515,"line_end":515,"column_start":5,"column_end":17},"name":"Rgba32Sfloat","qualname":"::format::Rgba32Sfloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5586},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":117244,"byte_end":117251,"line_start":516,"line_end":516,"column_start":5,"column_end":12},"name":"R64Uint","qualname":"::format::R64Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5606},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":117271,"byte_end":117278,"line_start":517,"line_end":517,"column_start":5,"column_end":12},"name":"R64Sint","qualname":"::format::R64Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5626},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":117298,"byte_end":117307,"line_start":518,"line_end":518,"column_start":5,"column_end":14},"name":"R64Sfloat","qualname":"::format::R64Sfloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5646},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":117329,"byte_end":117337,"line_start":519,"line_end":519,"column_start":5,"column_end":13},"name":"Rg64Uint","qualname":"::format::Rg64Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5666},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":117361,"byte_end":117369,"line_start":520,"line_end":520,"column_start":5,"column_end":13},"name":"Rg64Sint","qualname":"::format::Rg64Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5686},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":117393,"byte_end":117403,"line_start":521,"line_end":521,"column_start":5,"column_end":15},"name":"Rg64Sfloat","qualname":"::format::Rg64Sfloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5706},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":117429,"byte_end":117438,"line_start":522,"line_end":522,"column_start":5,"column_end":14},"name":"Rgb64Uint","qualname":"::format::Rgb64Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5726},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":117466,"byte_end":117475,"line_start":523,"line_end":523,"column_start":5,"column_end":14},"name":"Rgb64Sint","qualname":"::format::Rgb64Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5746},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":117503,"byte_end":117514,"line_start":524,"line_end":524,"column_start":5,"column_end":16},"name":"Rgb64Sfloat","qualname":"::format::Rgb64Sfloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5766},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":117544,"byte_end":117554,"line_start":525,"line_end":525,"column_start":5,"column_end":15},"name":"Rgba64Uint","qualname":"::format::Rgba64Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5786},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":117586,"byte_end":117596,"line_start":526,"line_end":526,"column_start":5,"column_end":15},"name":"Rgba64Sint","qualname":"::format::Rgba64Sint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5806},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":117628,"byte_end":117640,"line_start":527,"line_end":527,"column_start":5,"column_end":17},"name":"Rgba64Sfloat","qualname":"::format::Rgba64Sfloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5826},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":117674,"byte_end":117689,"line_start":528,"line_end":528,"column_start":5,"column_end":20},"name":"B10g11r11Ufloat","qualname":"::format::B10g11r11Ufloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5846},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":117719,"byte_end":117733,"line_start":529,"line_end":529,"column_start":5,"column_end":19},"name":"E5b9g9r9Ufloat","qualname":"::format::E5b9g9r9Ufloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5866},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":117763,"byte_end":117771,"line_start":530,"line_end":530,"column_start":5,"column_end":13},"name":"D16Unorm","qualname":"::format::D16Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5886},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":117792,"byte_end":117802,"line_start":531,"line_end":531,"column_start":5,"column_end":15},"name":"X8D24Unorm","qualname":"::format::X8D24Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5906},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":117825,"byte_end":117834,"line_start":532,"line_end":532,"column_start":5,"column_end":14},"name":"D32Sfloat","qualname":"::format::D32Sfloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5926},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":117856,"byte_end":117862,"line_start":533,"line_end":533,"column_start":5,"column_end":11},"name":"S8Uint","qualname":"::format::S8Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5946},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":117881,"byte_end":117895,"line_start":534,"line_end":534,"column_start":5,"column_end":19},"name":"D16UnormS8Uint","qualname":"::format::D16UnormS8Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5966},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":117919,"byte_end":117933,"line_start":535,"line_end":535,"column_start":5,"column_end":19},"name":"D24UnormS8Uint","qualname":"::format::D24UnormS8Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5986},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":117957,"byte_end":117972,"line_start":536,"line_end":536,"column_start":5,"column_end":20},"name":"D32SfloatS8Uint","qualname":"::format::D32SfloatS8Uint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6006},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":117997,"byte_end":118008,"line_start":537,"line_end":537,"column_start":5,"column_end":16},"name":"Bc1RgbUnorm","qualname":"::format::Bc1RgbUnorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6026},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":118033,"byte_end":118043,"line_start":538,"line_end":538,"column_start":5,"column_end":15},"name":"Bc1RgbSrgb","qualname":"::format::Bc1RgbSrgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6046},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":118067,"byte_end":118079,"line_start":539,"line_end":539,"column_start":5,"column_end":17},"name":"Bc1RgbaUnorm","qualname":"::format::Bc1RgbaUnorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6066},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":118105,"byte_end":118116,"line_start":540,"line_end":540,"column_start":5,"column_end":16},"name":"Bc1RgbaSrgb","qualname":"::format::Bc1RgbaSrgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6086},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":118141,"byte_end":118149,"line_start":541,"line_end":541,"column_start":5,"column_end":13},"name":"Bc2Unorm","qualname":"::format::Bc2Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6106},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":118170,"byte_end":118177,"line_start":542,"line_end":542,"column_start":5,"column_end":12},"name":"Bc2Srgb","qualname":"::format::Bc2Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6126},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":118197,"byte_end":118205,"line_start":543,"line_end":543,"column_start":5,"column_end":13},"name":"Bc3Unorm","qualname":"::format::Bc3Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6146},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":118226,"byte_end":118233,"line_start":544,"line_end":544,"column_start":5,"column_end":12},"name":"Bc3Srgb","qualname":"::format::Bc3Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6166},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":118253,"byte_end":118261,"line_start":545,"line_end":545,"column_start":5,"column_end":13},"name":"Bc4Unorm","qualname":"::format::Bc4Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6186},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":118282,"byte_end":118290,"line_start":546,"line_end":546,"column_start":5,"column_end":13},"name":"Bc4Snorm","qualname":"::format::Bc4Snorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6206},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":118311,"byte_end":118319,"line_start":547,"line_end":547,"column_start":5,"column_end":13},"name":"Bc5Unorm","qualname":"::format::Bc5Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6226},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":118340,"byte_end":118348,"line_start":548,"line_end":548,"column_start":5,"column_end":13},"name":"Bc5Snorm","qualname":"::format::Bc5Snorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6246},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":118369,"byte_end":118379,"line_start":549,"line_end":549,"column_start":5,"column_end":15},"name":"Bc6hUfloat","qualname":"::format::Bc6hUfloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6266},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":118401,"byte_end":118411,"line_start":550,"line_end":550,"column_start":5,"column_end":15},"name":"Bc6hSfloat","qualname":"::format::Bc6hSfloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6286},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":118433,"byte_end":118441,"line_start":551,"line_end":551,"column_start":5,"column_end":13},"name":"Bc7Unorm","qualname":"::format::Bc7Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6306},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":118462,"byte_end":118469,"line_start":552,"line_end":552,"column_start":5,"column_end":12},"name":"Bc7Srgb","qualname":"::format::Bc7Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6326},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":118489,"byte_end":118504,"line_start":553,"line_end":553,"column_start":5,"column_end":20},"name":"Etc2R8g8b8Unorm","qualname":"::format::Etc2R8g8b8Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6346},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":118535,"byte_end":118549,"line_start":554,"line_end":554,"column_start":5,"column_end":19},"name":"Etc2R8g8b8Srgb","qualname":"::format::Etc2R8g8b8Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6366},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":118579,"byte_end":118596,"line_start":555,"line_end":555,"column_start":5,"column_end":22},"name":"Etc2R8g8b8a1Unorm","qualname":"::format::Etc2R8g8b8a1Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6386},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":118630,"byte_end":118646,"line_start":556,"line_end":556,"column_start":5,"column_end":21},"name":"Etc2R8g8b8a1Srgb","qualname":"::format::Etc2R8g8b8a1Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6406},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":118679,"byte_end":118696,"line_start":557,"line_end":557,"column_start":5,"column_end":22},"name":"Etc2R8g8b8a8Unorm","qualname":"::format::Etc2R8g8b8a8Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6426},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":118730,"byte_end":118746,"line_start":558,"line_end":558,"column_start":5,"column_end":21},"name":"Etc2R8g8b8a8Srgb","qualname":"::format::Etc2R8g8b8a8Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6446},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":118779,"byte_end":118790,"line_start":559,"line_end":559,"column_start":5,"column_end":16},"name":"EacR11Unorm","qualname":"::format::EacR11Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6466},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":118815,"byte_end":118826,"line_start":560,"line_end":560,"column_start":5,"column_end":16},"name":"EacR11Snorm","qualname":"::format::EacR11Snorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6486},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":118851,"byte_end":118865,"line_start":561,"line_end":561,"column_start":5,"column_end":19},"name":"EacR11g11Unorm","qualname":"::format::EacR11g11Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6506},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":118894,"byte_end":118908,"line_start":562,"line_end":562,"column_start":5,"column_end":19},"name":"EacR11g11Snorm","qualname":"::format::EacR11g11Snorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6526},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":118937,"byte_end":118949,"line_start":563,"line_end":563,"column_start":5,"column_end":17},"name":"Astc4x4Unorm","qualname":"::format::Astc4x4Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6546},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":118975,"byte_end":118986,"line_start":564,"line_end":564,"column_start":5,"column_end":16},"name":"Astc4x4Srgb","qualname":"::format::Astc4x4Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6566},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":119011,"byte_end":119023,"line_start":565,"line_end":565,"column_start":5,"column_end":17},"name":"Astc5x4Unorm","qualname":"::format::Astc5x4Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6586},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":119049,"byte_end":119060,"line_start":566,"line_end":566,"column_start":5,"column_end":16},"name":"Astc5x4Srgb","qualname":"::format::Astc5x4Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6606},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":119085,"byte_end":119097,"line_start":567,"line_end":567,"column_start":5,"column_end":17},"name":"Astc5x5Unorm","qualname":"::format::Astc5x5Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6626},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":119123,"byte_end":119134,"line_start":568,"line_end":568,"column_start":5,"column_end":16},"name":"Astc5x5Srgb","qualname":"::format::Astc5x5Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6646},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":119159,"byte_end":119171,"line_start":569,"line_end":569,"column_start":5,"column_end":17},"name":"Astc6x5Unorm","qualname":"::format::Astc6x5Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6666},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":119197,"byte_end":119208,"line_start":570,"line_end":570,"column_start":5,"column_end":16},"name":"Astc6x5Srgb","qualname":"::format::Astc6x5Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6686},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":119233,"byte_end":119245,"line_start":571,"line_end":571,"column_start":5,"column_end":17},"name":"Astc6x6Unorm","qualname":"::format::Astc6x6Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6706},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":119271,"byte_end":119282,"line_start":572,"line_end":572,"column_start":5,"column_end":16},"name":"Astc6x6Srgb","qualname":"::format::Astc6x6Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6726},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":119307,"byte_end":119319,"line_start":573,"line_end":573,"column_start":5,"column_end":17},"name":"Astc8x5Unorm","qualname":"::format::Astc8x5Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6746},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":119345,"byte_end":119356,"line_start":574,"line_end":574,"column_start":5,"column_end":16},"name":"Astc8x5Srgb","qualname":"::format::Astc8x5Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6766},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":119381,"byte_end":119393,"line_start":575,"line_end":575,"column_start":5,"column_end":17},"name":"Astc8x6Unorm","qualname":"::format::Astc8x6Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6786},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":119419,"byte_end":119430,"line_start":576,"line_end":576,"column_start":5,"column_end":16},"name":"Astc8x6Srgb","qualname":"::format::Astc8x6Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6806},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":119455,"byte_end":119467,"line_start":577,"line_end":577,"column_start":5,"column_end":17},"name":"Astc8x8Unorm","qualname":"::format::Astc8x8Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6826},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":119493,"byte_end":119504,"line_start":578,"line_end":578,"column_start":5,"column_end":16},"name":"Astc8x8Srgb","qualname":"::format::Astc8x8Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6846},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":119529,"byte_end":119542,"line_start":579,"line_end":579,"column_start":5,"column_end":18},"name":"Astc10x5Unorm","qualname":"::format::Astc10x5Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6866},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":119569,"byte_end":119581,"line_start":580,"line_end":580,"column_start":5,"column_end":17},"name":"Astc10x5Srgb","qualname":"::format::Astc10x5Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6886},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":119607,"byte_end":119620,"line_start":581,"line_end":581,"column_start":5,"column_end":18},"name":"Astc10x6Unorm","qualname":"::format::Astc10x6Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6906},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":119647,"byte_end":119659,"line_start":582,"line_end":582,"column_start":5,"column_end":17},"name":"Astc10x6Srgb","qualname":"::format::Astc10x6Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6926},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":119685,"byte_end":119698,"line_start":583,"line_end":583,"column_start":5,"column_end":18},"name":"Astc10x8Unorm","qualname":"::format::Astc10x8Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6946},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":119725,"byte_end":119737,"line_start":584,"line_end":584,"column_start":5,"column_end":17},"name":"Astc10x8Srgb","qualname":"::format::Astc10x8Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6966},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":119763,"byte_end":119777,"line_start":585,"line_end":585,"column_start":5,"column_end":19},"name":"Astc10x10Unorm","qualname":"::format::Astc10x10Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":6986},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":119805,"byte_end":119818,"line_start":586,"line_end":586,"column_start":5,"column_end":18},"name":"Astc10x10Srgb","qualname":"::format::Astc10x10Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":7006},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":119845,"byte_end":119859,"line_start":587,"line_end":587,"column_start":5,"column_end":19},"name":"Astc12x10Unorm","qualname":"::format::Astc12x10Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":7026},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":119887,"byte_end":119900,"line_start":588,"line_end":588,"column_start":5,"column_end":18},"name":"Astc12x10Srgb","qualname":"::format::Astc12x10Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":7046},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":119927,"byte_end":119941,"line_start":589,"line_end":589,"column_start":5,"column_end":19},"name":"Astc12x12Unorm","qualname":"::format::Astc12x12Unorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":7066},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":119969,"byte_end":119982,"line_start":590,"line_end":590,"column_start":5,"column_end":18},"name":"Astc12x12Srgb","qualname":"::format::Astc12x12Srgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" A struct equivalent to the matching `Format` enum member, which allows\n an API to be strongly typed on particular formats.\n","sig":null,"attributes":[{"value":"/ A struct equivalent to the matching `Format` enum member, which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112562,"byte_end":112636,"line_start":390,"line_end":390,"column_start":13,"column_end":87}},{"value":"/ an API to be strongly typed on particular formats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112649,"byte_end":112703,"line_start":391,"line_end":391,"column_start":13,"column_end":67}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":112716,"byte_end":112738,"line_start":392,"line_end":392,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":120115,"byte_end":120126,"line_start":597,"line_end":597,"column_start":12,"column_end":23},"name":"base_format","qualname":"<Format>::base_format","value":"pub fn base_format(Self) -> BaseFormat","parent":null,"children":[],"decl_id":null,"docs":" Get base format.","sig":null,"attributes":[{"value":"/ Get base format.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":120026,"byte_end":120046,"line_start":594,"line_end":594,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":120051,"byte_end":120054,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if format is `Undefined`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":120059,"byte_end":120103,"line_start":596,"line_end":596,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":120332,"byte_end":120344,"line_start":603,"line_end":603,"column_start":12,"column_end":24},"name":"surface_desc","qualname":"<Format>::surface_desc","value":"pub fn surface_desc(&Self) -> FormatDesc","parent":null,"children":[],"decl_id":null,"docs":" A shortcut to obtain surface format description.\n","sig":null,"attributes":[{"value":"/ A shortcut to obtain surface format description.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":120268,"byte_end":120320,"line_start":602,"line_end":602,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":120472,"byte_end":120480,"line_start":608,"line_end":608,"column_start":12,"column_end":20},"name":"is_color","qualname":"<Format>::is_color","value":"pub fn is_color(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the format has a color aspect.\n","sig":null,"attributes":[{"value":"/ Returns if the format has a color aspect.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":120415,"byte_end":120460,"line_start":607,"line_end":607,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":120626,"byte_end":120634,"line_start":613,"line_end":613,"column_start":12,"column_end":20},"name":"is_depth","qualname":"<Format>::is_depth","value":"pub fn is_depth(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the format has a depth aspect.\n","sig":null,"attributes":[{"value":"/ Returns if the format has a depth aspect.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":120569,"byte_end":120614,"line_start":612,"line_end":612,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":120782,"byte_end":120792,"line_start":618,"line_end":618,"column_start":12,"column_end":22},"name":"is_stencil","qualname":"<Format>::is_stencil","value":"pub fn is_stencil(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the format has a stencil aspect.\n","sig":null,"attributes":[{"value":"/ Returns if the format has a stencil aspect.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":120723,"byte_end":120770,"line_start":617,"line_end":617,"column_start":5,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":460},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"image","qualname":"::image","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":465},{"krate":0,"index":468},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":475},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":7086},{"krate":0,"index":7090},{"krate":0,"index":7092},{"krate":0,"index":7093},{"krate":0,"index":7095},{"krate":0,"index":7097},{"krate":0,"index":7100},{"krate":0,"index":7101},{"krate":0,"index":7104},{"krate":0,"index":7105},{"krate":0,"index":494},{"krate":0,"index":7107},{"krate":0,"index":7111},{"krate":0,"index":7113},{"krate":0,"index":7114},{"krate":0,"index":7116},{"krate":0,"index":7118},{"krate":0,"index":7121},{"krate":0,"index":7122},{"krate":0,"index":7125},{"krate":0,"index":7126},{"krate":0,"index":498},{"krate":0,"index":7128},{"krate":0,"index":7135},{"krate":0,"index":7137},{"krate":0,"index":7138},{"krate":0,"index":7140},{"krate":0,"index":7141},{"krate":0,"index":7143},{"krate":0,"index":7146},{"krate":0,"index":7148},{"krate":0,"index":7149},{"krate":0,"index":7151},{"krate":0,"index":7153},{"krate":0,"index":7154},{"krate":0,"index":7156},{"krate":0,"index":7158},{"krate":0,"index":7159},{"krate":0,"index":7162},{"krate":0,"index":7167},{"krate":0,"index":7169},{"krate":0,"index":7191},{"krate":0,"index":7192},{"krate":0,"index":7194},{"krate":0,"index":7196},{"krate":0,"index":7197},{"krate":0,"index":7200},{"krate":0,"index":7205},{"krate":0,"index":7207},{"krate":0,"index":7209},{"krate":0,"index":7231},{"krate":0,"index":7232},{"krate":0,"index":7234},{"krate":0,"index":7236},{"krate":0,"index":7237},{"krate":0,"index":7240},{"krate":0,"index":7241},{"krate":0,"index":7248},{"krate":0,"index":7253},{"krate":0,"index":7255},{"krate":0,"index":7256},{"krate":0,"index":7258},{"krate":0,"index":7259},{"krate":0,"index":7261},{"krate":0,"index":7264},{"krate":0,"index":7266},{"krate":0,"index":7267},{"krate":0,"index":7269},{"krate":0,"index":7271},{"krate":0,"index":7284},{"krate":0,"index":7286},{"krate":0,"index":7287},{"krate":0,"index":7289},{"krate":0,"index":7290},{"krate":0,"index":7292},{"krate":0,"index":7295},{"krate":0,"index":7297},{"krate":0,"index":7298},{"krate":0,"index":7300},{"krate":0,"index":501},{"krate":0,"index":7302},{"krate":0,"index":7318},{"krate":0,"index":7320},{"krate":0,"index":7321},{"krate":0,"index":7323},{"krate":0,"index":7324},{"krate":0,"index":7326},{"krate":0,"index":7329},{"krate":0,"index":7331},{"krate":0,"index":7332},{"krate":0,"index":7335},{"krate":0,"index":503},{"krate":0,"index":7337},{"krate":0,"index":7352},{"krate":0,"index":7354},{"krate":0,"index":7355},{"krate":0,"index":7357},{"krate":0,"index":7358},{"krate":0,"index":7360},{"krate":0,"index":7363},{"krate":0,"index":7365},{"krate":0,"index":7366},{"krate":0,"index":7368},{"krate":0,"index":7372},{"krate":0,"index":7374},{"krate":0,"index":7375},{"krate":0,"index":7376},{"krate":0,"index":7379},{"krate":0,"index":7380},{"krate":0,"index":7382},{"krate":0,"index":7384},{"krate":0,"index":7386},{"krate":0,"index":7388},{"krate":0,"index":7370},{"krate":0,"index":7391},{"krate":0,"index":7398},{"krate":0,"index":7400},{"krate":0,"index":7402},{"krate":0,"index":7404},{"krate":0,"index":7406},{"krate":0,"index":7415},{"krate":0,"index":7418},{"krate":0,"index":7420},{"krate":0,"index":7423},{"krate":0,"index":7425},{"krate":0,"index":7428},{"krate":0,"index":7430},{"krate":0,"index":7433},{"krate":0,"index":7435},{"krate":0,"index":7438},{"krate":0,"index":7441},{"krate":0,"index":7464},{"krate":0,"index":7466},{"krate":0,"index":7467},{"krate":0,"index":7468},{"krate":0,"index":7471},{"krate":0,"index":7472},{"krate":0,"index":7474},{"krate":0,"index":7476},{"krate":0,"index":7478},{"krate":0,"index":7480},{"krate":0,"index":7483},{"krate":0,"index":7495},{"krate":0,"index":7497},{"krate":0,"index":7499},{"krate":0,"index":7501},{"krate":0,"index":7503},{"krate":0,"index":7517},{"krate":0,"index":7520},{"krate":0,"index":7522},{"krate":0,"index":7525},{"krate":0,"index":7527},{"krate":0,"index":7530},{"krate":0,"index":7532},{"krate":0,"index":7535},{"krate":0,"index":7537},{"krate":0,"index":7540},{"krate":0,"index":7543},{"krate":0,"index":521},{"krate":0,"index":7581},{"krate":0,"index":7592},{"krate":0,"index":7594},{"krate":0,"index":7595},{"krate":0,"index":7597},{"krate":0,"index":7598},{"krate":0,"index":7600},{"krate":0,"index":7603},{"krate":0,"index":7605},{"krate":0,"index":7606},{"krate":0,"index":7608},{"krate":0,"index":7610},{"krate":0,"index":7613},{"krate":0,"index":7615},{"krate":0,"index":7616},{"krate":0,"index":7618},{"krate":0,"index":7619},{"krate":0,"index":7622},{"krate":0,"index":524},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":7624},{"krate":0,"index":7627},{"krate":0,"index":7629},{"krate":0,"index":7630},{"krate":0,"index":7632},{"krate":0,"index":7633},{"krate":0,"index":7635},{"krate":0,"index":7638},{"krate":0,"index":7639},{"krate":0,"index":7642},{"krate":0,"index":530},{"krate":0,"index":535},{"krate":0,"index":7644},{"krate":0,"index":7651},{"krate":0,"index":7653},{"krate":0,"index":7654},{"krate":0,"index":7656},{"krate":0,"index":7657},{"krate":0,"index":7659},{"krate":0,"index":7662},{"krate":0,"index":7664},{"krate":0,"index":7665},{"krate":0,"index":7667},{"krate":0,"index":540},{"krate":0,"index":7669},{"krate":0,"index":7680},{"krate":0,"index":7682},{"krate":0,"index":7684},{"krate":0,"index":7685},{"krate":0,"index":7687},{"krate":0,"index":7690},{"krate":0,"index":7691},{"krate":0,"index":544},{"krate":0,"index":7694},{"krate":0,"index":7715},{"krate":0,"index":7716},{"krate":0,"index":7718},{"krate":0,"index":7720},{"krate":0,"index":7723},{"krate":0,"index":7724},{"krate":0,"index":7726},{"krate":0,"index":7727},{"krate":0,"index":546},{"krate":0,"index":7729},{"krate":0,"index":7731},{"krate":0,"index":7732},{"krate":0,"index":7733},{"krate":0,"index":7736},{"krate":0,"index":7737},{"krate":0,"index":7739},{"krate":0,"index":7741},{"krate":0,"index":7743},{"krate":0,"index":7745},{"krate":0,"index":7748},{"krate":0,"index":7765},{"krate":0,"index":7767},{"krate":0,"index":7769},{"krate":0,"index":7771},{"krate":0,"index":7773},{"krate":0,"index":7792},{"krate":0,"index":7795},{"krate":0,"index":7797},{"krate":0,"index":7800},{"krate":0,"index":7802},{"krate":0,"index":7805},{"krate":0,"index":7807},{"krate":0,"index":7810},{"krate":0,"index":7812},{"krate":0,"index":7815},{"krate":0,"index":7818},{"krate":0,"index":548},{"krate":0,"index":7871},{"krate":0,"index":7875},{"krate":0,"index":7877},{"krate":0,"index":7878},{"krate":0,"index":7880},{"krate":0,"index":7883},{"krate":0,"index":7884},{"krate":0,"index":7887},{"krate":0,"index":7888},{"krate":0,"index":7890},{"krate":0,"index":7894},{"krate":0,"index":7896},{"krate":0,"index":7898},{"krate":0,"index":7901},{"krate":0,"index":7902},{"krate":0,"index":7905},{"krate":0,"index":7906},{"krate":0,"index":7908},{"krate":0,"index":7914},{"krate":0,"index":7916},{"krate":0,"index":7918},{"krate":0,"index":7920},{"krate":0,"index":7923},{"krate":0,"index":7924},{"krate":0,"index":7927},{"krate":0,"index":7928},{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":7930},{"krate":0,"index":7936},{"krate":0,"index":7938},{"krate":0,"index":7939},{"krate":0,"index":7941},{"krate":0,"index":7942},{"krate":0,"index":7945},{"krate":0,"index":7946},{"krate":0,"index":7948},{"krate":0,"index":7951},{"krate":0,"index":7956},{"krate":0,"index":7958},{"krate":0,"index":7960},{"krate":0,"index":7961},{"krate":0,"index":7964},{"krate":0,"index":7965},{"krate":0,"index":7967},{"krate":0,"index":7970},{"krate":0,"index":7974},{"krate":0,"index":7976},{"krate":0,"index":7978},{"krate":0,"index":7979},{"krate":0,"index":7982},{"krate":0,"index":7983},{"krate":0,"index":7985}],"decl_id":null,"docs":" Image related structures.","sig":null,"attributes":[{"value":"/ Image related structures.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":121218,"byte_end":121247,"line_start":1,"line_end":1,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":121248,"byte_end":121251,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An image is a block of GPU memory representing a grid of texels.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":121252,"byte_end":121320,"line_start":3,"line_end":3,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":488},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":121484,"byte_end":121488,"line_start":13,"line_end":13,"column_start":10,"column_end":14},"name":"Size","qualname":"::image::Size","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Dimension size.\n","sig":null,"attributes":[{"value":"/ Dimension size.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":121455,"byte_end":121474,"line_start":12,"line_end":12,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":489},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":121533,"byte_end":121543,"line_start":15,"line_end":15,"column_start":10,"column_end":20},"name":"NumSamples","qualname":"::image::NumSamples","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Number of MSAA samples.\n","sig":null,"attributes":[{"value":"/ Number of MSAA samples.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":121496,"byte_end":121523,"line_start":14,"line_end":14,"column_start":1,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":490},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":121576,"byte_end":121581,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Layer","qualname":"::image::Layer","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Image layer.\n","sig":null,"attributes":[{"value":"/ Image layer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":121550,"byte_end":121566,"line_start":16,"line_end":16,"column_start":1,"column_end":17}}]},{"kind":"Type","id":{"krate":0,"index":491},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":121622,"byte_end":121627,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"name":"Level","qualname":"::image::Level","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Image mipmap level.\n","sig":null,"attributes":[{"value":"/ Image mipmap level.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":121589,"byte_end":121612,"line_start":18,"line_end":18,"column_start":1,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":492},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":121693,"byte_end":121702,"line_start":21,"line_end":21,"column_start":11,"column_end":20},"name":"MAX_LEVEL","qualname":"::image::MAX_LEVEL","value":"Level","parent":null,"children":[],"decl_id":null,"docs":" Maximum accessible mipmap level of an image.\n","sig":null,"attributes":[{"value":"/ Maximum accessible mipmap level of an image.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":121634,"byte_end":121682,"line_start":20,"line_end":20,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":493},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":121761,"byte_end":121776,"line_start":23,"line_end":23,"column_start":10,"column_end":25},"name":"TexelCoordinate","qualname":"::image::TexelCoordinate","value":"i32","parent":null,"children":[],"decl_id":null,"docs":" A texel coordinate in an image.\n","sig":null,"attributes":[{"value":"/ A texel coordinate in an image.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":121716,"byte_end":121751,"line_start":22,"line_end":22,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7086},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":121993,"byte_end":121999,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"Extent","qualname":"::image::Extent","value":"Extent { width, height, depth }","parent":null,"children":[{"krate":0,"index":7087},{"krate":0,"index":7088},{"krate":0,"index":7089}],"decl_id":null,"docs":" Describes the size of an image, which may be up to three dimensional.\n","sig":null,"attributes":[{"value":"/ Describes the size of an image, which may be up to three dimensional.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":121785,"byte_end":121858,"line_start":25,"line_end":25,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":7087},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":122030,"byte_end":122035,"line_start":30,"line_end":30,"column_start":9,"column_end":14},"name":"width","qualname":"::image::Extent::width","value":"u32","parent":{"krate":0,"index":7086},"children":[],"decl_id":null,"docs":" Image width\n","sig":null,"attributes":[{"value":"/ Image width","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":122006,"byte_end":122021,"line_start":29,"line_end":29,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":7088},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":122072,"byte_end":122078,"line_start":32,"line_end":32,"column_start":9,"column_end":15},"name":"height","qualname":"::image::Extent::height","value":"u32","parent":{"krate":0,"index":7086},"children":[],"decl_id":null,"docs":" Image height\n","sig":null,"attributes":[{"value":"/ Image height","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":122047,"byte_end":122063,"line_start":31,"line_end":31,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":7089},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":122115,"byte_end":122120,"line_start":34,"line_end":34,"column_start":9,"column_end":14},"name":"depth","qualname":"::image::Extent::depth","value":"u32","parent":{"krate":0,"index":7086},"children":[],"decl_id":null,"docs":" Image depth.\n","sig":null,"attributes":[{"value":"/ Image depth.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":122090,"byte_end":122106,"line_start":33,"line_end":33,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":122210,"byte_end":122218,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Extent>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if one of the dimensions is zero.\n","sig":null,"attributes":[{"value":"/ Return true if one of the dimensions is zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":122149,"byte_end":122198,"line_start":38,"line_end":38,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":122369,"byte_end":122377,"line_start":43,"line_end":43,"column_start":12,"column_end":20},"name":"at_level","qualname":"<Extent>::at_level","value":"pub fn at_level(&Self, Level) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the extent at a particular mipmap level.\n","sig":null,"attributes":[{"value":"/ Get the extent at a particular mipmap level.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":122309,"byte_end":122357,"line_start":42,"line_end":42,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":122649,"byte_end":122653,"line_start":51,"line_end":51,"column_start":12,"column_end":16},"name":"rect","qualname":"<Extent>::rect","value":"pub fn rect(&Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Get a rectangle for the full area of extent.\n","sig":null,"attributes":[{"value":"/ Get a rectangle for the full area of extent.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":122589,"byte_end":122637,"line_start":50,"line_end":50,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":7107},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":123229,"byte_end":123235,"line_start":69,"line_end":69,"column_start":12,"column_end":18},"name":"Offset","qualname":"::image::Offset","value":"Offset { x, y, z }","parent":null,"children":[{"krate":0,"index":7108},{"krate":0,"index":7109},{"krate":0,"index":7110}],"decl_id":null,"docs":" An offset into an `Image` used for image-to-image\n copy operations.  All offsets are in texels, and\n specifying offsets other than 0 for dimensions\n that do not exist is undefined behavior -- for\n example, specifying a `z` offset of `1` in a\n two-dimensional image.\n","sig":null,"attributes":[{"value":"/ An offset into an `Image` used for image-to-image","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":122810,"byte_end":122863,"line_start":61,"line_end":61,"column_start":1,"column_end":54}},{"value":"/ copy operations.  All offsets are in texels, and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":122864,"byte_end":122916,"line_start":62,"line_end":62,"column_start":1,"column_end":53}},{"value":"/ specifying offsets other than 0 for dimensions","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":122917,"byte_end":122967,"line_start":63,"line_end":63,"column_start":1,"column_end":51}},{"value":"/ that do not exist is undefined behavior -- for","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":122968,"byte_end":123018,"line_start":64,"line_end":64,"column_start":1,"column_end":51}},{"value":"/ example, specifying a `z` offset of `1` in a","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":123019,"byte_end":123067,"line_start":65,"line_end":65,"column_start":1,"column_end":49}},{"value":"/ two-dimensional image.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":123068,"byte_end":123094,"line_start":66,"line_end":66,"column_start":1,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":7108},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":123264,"byte_end":123265,"line_start":71,"line_end":71,"column_start":9,"column_end":10},"name":"x","qualname":"::image::Offset::x","value":"i32","parent":{"krate":0,"index":7107},"children":[],"decl_id":null,"docs":" X offset.\n","sig":null,"attributes":[{"value":"/ X offset.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":123242,"byte_end":123255,"line_start":70,"line_end":70,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":7109},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":123310,"byte_end":123311,"line_start":73,"line_end":73,"column_start":9,"column_end":10},"name":"y","qualname":"::image::Offset::y","value":"i32","parent":{"krate":0,"index":7107},"children":[],"decl_id":null,"docs":" Y offset.\n","sig":null,"attributes":[{"value":"/ Y offset.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":123288,"byte_end":123301,"line_start":72,"line_end":72,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":7110},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":123356,"byte_end":123357,"line_start":75,"line_end":75,"column_start":9,"column_end":10},"name":"z","qualname":"::image::Offset::z","value":"i32","parent":{"krate":0,"index":7107},"children":[],"decl_id":null,"docs":" Z offset.\n","sig":null,"attributes":[{"value":"/ Z offset.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":123334,"byte_end":123347,"line_start":74,"line_end":74,"column_start":5,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":499},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":123437,"byte_end":123441,"line_start":80,"line_end":80,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::image::Offset::ZERO","value":"Self","parent":{"krate":0,"index":498},"children":[],"decl_id":null,"docs":" Zero offset shortcut.\n","sig":null,"attributes":[{"value":"/ Zero offset shortcut.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":123397,"byte_end":123422,"line_start":79,"line_end":79,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":123556,"byte_end":123567,"line_start":83,"line_end":83,"column_start":12,"column_end":23},"name":"into_bounds","qualname":"<Offset>::into_bounds","value":"pub fn into_bounds(Self, &Extent) -> Range<Offset>","parent":null,"children":[],"decl_id":null,"docs":" Convert the offset into 2-sided bounds given the extent.\n","sig":null,"attributes":[{"value":"/ Convert the offset into 2-sided bounds given the extent.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":123484,"byte_end":123544,"line_start":82,"line_end":82,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7129},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":124073,"byte_end":124080,"line_start":99,"line_end":99,"column_start":5,"column_end":12},"name":"Optimal","qualname":"::image::Tiling::Optimal","value":"Tiling::Optimal","parent":{"krate":0,"index":7128},"children":[],"decl_id":null,"docs":" Optimal tiling for GPU memory access. Implementation-dependent.\n","sig":null,"attributes":[{"value":"/ Optimal tiling for GPU memory access. Implementation-dependent.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":124001,"byte_end":124068,"line_start":98,"line_end":98,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7132},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":124214,"byte_end":124220,"line_start":102,"line_end":102,"column_start":5,"column_end":11},"name":"Linear","qualname":"::image::Tiling::Linear","value":"Tiling::Linear","parent":{"krate":0,"index":7128},"children":[],"decl_id":null,"docs":" Optimal for CPU read/write. Texels are laid out in row-major order,\n possibly with some padding on each row.\n","sig":null,"attributes":[{"value":"/ Optimal for CPU read/write. Texels are laid out in row-major order,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":124090,"byte_end":124161,"line_start":100,"line_end":100,"column_start":5,"column_end":76}},{"value":"/ possibly with some padding on each row.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":124166,"byte_end":124209,"line_start":101,"line_end":101,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":7128},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":123988,"byte_end":123994,"line_start":97,"line_end":97,"column_start":10,"column_end":16},"name":"Tiling","qualname":"::image::Tiling","value":"pub enum Tiling { Optimal = , Linear = , }","parent":null,"children":[{"krate":0,"index":7129},{"krate":0,"index":7132}],"decl_id":null,"docs":" Image tiling modes.\n","sig":null,"attributes":[{"value":"/ Image tiling modes.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":123811,"byte_end":123834,"line_start":93,"line_end":93,"column_start":1,"column_end":24}},{"value":"repr(u32)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":123835,"byte_end":123847,"line_start":94,"line_end":94,"column_start":1,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7171},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":124420,"byte_end":124431,"line_start":110,"line_end":110,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::image::CreationError::OutOfMemory","value":"CreationError::OutOfMemory(device::OutOfMemory)","parent":{"krate":0,"index":7153},"children":[],"decl_id":null,"docs":" Out of either host or device memory.\n","sig":null,"attributes":[{"value":"/ Out of either host or device memory.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":124349,"byte_end":124389,"line_start":108,"line_end":108,"column_start":5,"column_end":45}},{"value":"error(transparent)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":124394,"byte_end":124415,"line_start":109,"line_end":109,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7174},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":124559,"byte_end":124565,"line_start":113,"line_end":113,"column_start":5,"column_end":11},"name":"Format","qualname":"::image::CreationError::Format","value":"CreationError::Format(format::Format)","parent":{"krate":0,"index":7153},"children":[],"decl_id":null,"docs":" The format is not supported by the device.\n","sig":null,"attributes":[{"value":"/ The format is not supported by the device.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":124466,"byte_end":124512,"line_start":111,"line_end":111,"column_start":5,"column_end":51}},{"value":"error(\"Unsupported format: {0:?}\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":124517,"byte_end":124554,"line_start":112,"line_end":112,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7177},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":124712,"byte_end":124716,"line_start":116,"line_end":116,"column_start":5,"column_end":9},"name":"Kind","qualname":"::image::CreationError::Kind","value":"CreationError::Kind","parent":{"krate":0,"index":7153},"children":[],"decl_id":null,"docs":" The kind doesn't support a particular operation.\n","sig":null,"attributes":[{"value":"/ The kind doesn't support a particular operation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":124587,"byte_end":124639,"line_start":114,"line_end":114,"column_start":5,"column_end":57}},{"value":"error(\"Specified kind doesn't support particular operation\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":124644,"byte_end":124707,"line_start":115,"line_end":115,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7179},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":124858,"byte_end":124865,"line_start":119,"line_end":119,"column_start":5,"column_end":12},"name":"Samples","qualname":"::image::CreationError::Samples","value":"CreationError::Samples(NumSamples)","parent":{"krate":0,"index":7153},"children":[],"decl_id":null,"docs":" Failed to map a given multisampled kind to the device.\n","sig":null,"attributes":[{"value":"/ Failed to map a given multisampled kind to the device.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":124722,"byte_end":124780,"line_start":117,"line_end":117,"column_start":5,"column_end":63}},{"value":"error(\"Specified format doesn't support specified sampling {0:}\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":124785,"byte_end":124853,"line_start":118,"line_end":118,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7182},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":124997,"byte_end":125001,"line_start":122,"line_end":122,"column_start":5,"column_end":9},"name":"Size","qualname":"::image::CreationError::Size","value":"CreationError::Size(Size)","parent":{"krate":0,"index":7153},"children":[],"decl_id":null,"docs":" Unsupported size in one of the dimensions.\n","sig":null,"attributes":[{"value":"/ Unsupported size in one of the dimensions.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":124883,"byte_end":124929,"line_start":120,"line_end":120,"column_start":5,"column_end":51}},{"value":"error(\"Unsupported size in one of the dimensions {0:}\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":124934,"byte_end":124992,"line_start":121,"line_end":121,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7185},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":125173,"byte_end":125177,"line_start":125,"line_end":125,"column_start":5,"column_end":9},"name":"Data","qualname":"::image::CreationError::Data","value":"CreationError::Data(usize)","parent":{"krate":0,"index":7153},"children":[],"decl_id":null,"docs":" The given data has a different size than the target image slice.\n","sig":null,"attributes":[{"value":"/ The given data has a different size than the target image slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":125013,"byte_end":125081,"line_start":123,"line_end":123,"column_start":5,"column_end":73}},{"value":"error(\"The given data has a different size ({0:}) than the target image slice\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":125086,"byte_end":125168,"line_start":124,"line_end":124,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7188},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":125281,"byte_end":125286,"line_start":128,"line_end":128,"column_start":5,"column_end":10},"name":"Usage","qualname":"::image::CreationError::Usage","value":"CreationError::Usage(Usage)","parent":{"krate":0,"index":7153},"children":[],"decl_id":null,"docs":" The mentioned usage mode is not supported\n","sig":null,"attributes":[{"value":"/ The mentioned usage mode is not supported","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":125190,"byte_end":125235,"line_start":126,"line_end":126,"column_start":5,"column_end":50}},{"value":"error(\"Unsupported usage: {0:?}\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":125240,"byte_end":125276,"line_start":127,"line_end":127,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":7153},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":124329,"byte_end":124342,"line_start":107,"line_end":107,"column_start":10,"column_end":23},"name":"CreationError","qualname":"::image::CreationError","value":"pub enum CreationError {\n    OutOfMemory(device::OutOfMemory),\n    Format(format::Format),\n    Kind,\n    Samples(NumSamples),\n    Size(Size),\n    Data(usize),\n    Usage(Usage),\n}","parent":null,"children":[{"krate":0,"index":7171},{"krate":0,"index":7174},{"krate":0,"index":7177},{"krate":0,"index":7179},{"krate":0,"index":7182},{"krate":0,"index":7185},{"krate":0,"index":7188}],"decl_id":null,"docs":" Pure image object creation error.\n","sig":null,"attributes":[{"value":"/ Pure image object creation error.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":124229,"byte_end":124266,"line_start":105,"line_end":105,"column_start":1,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7211},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":125489,"byte_end":125500,"line_start":136,"line_end":136,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::image::ViewCreationError::OutOfMemory","value":"ViewCreationError::OutOfMemory(device::OutOfMemory)","parent":{"krate":0,"index":7191},"children":[],"decl_id":null,"docs":" Out of either Host or Device memory\n","sig":null,"attributes":[{"value":"/ Out of either Host or Device memory","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":125419,"byte_end":125458,"line_start":134,"line_end":134,"column_start":5,"column_end":44}},{"value":"error(transparent)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":125463,"byte_end":125484,"line_start":135,"line_end":135,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7214},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":125669,"byte_end":125674,"line_start":139,"line_end":139,"column_start":5,"column_end":10},"name":"Usage","qualname":"::image::ViewCreationError::Usage","value":"ViewCreationError::Usage(Usage)","parent":{"krate":0,"index":7191},"children":[],"decl_id":null,"docs":" The required usage flag is not present in the image.\n","sig":null,"attributes":[{"value":"/ The required usage flag is not present in the image.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":125535,"byte_end":125591,"line_start":137,"line_end":137,"column_start":5,"column_end":61}},{"value":"error(\"Specified usage flags are not present in the image {0:?}\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":125596,"byte_end":125664,"line_start":138,"line_end":138,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7217},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":125792,"byte_end":125797,"line_start":142,"line_end":142,"column_start":5,"column_end":10},"name":"Level","qualname":"::image::ViewCreationError::Level","value":"ViewCreationError::Level(Level)","parent":{"krate":0,"index":7191},"children":[],"decl_id":null,"docs":" Selected mip level doesn't exist.\n","sig":null,"attributes":[{"value":"/ Selected mip level doesn't exist.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":125687,"byte_end":125724,"line_start":140,"line_end":140,"column_start":5,"column_end":42}},{"value":"error(\"Selected level doesn't exist in the image {0:}\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":125729,"byte_end":125787,"line_start":141,"line_end":141,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7220},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":125880,"byte_end":125885,"line_start":145,"line_end":145,"column_start":5,"column_end":10},"name":"Layer","qualname":"::image::ViewCreationError::Layer","value":"ViewCreationError::Layer(LayerError)","parent":{"krate":0,"index":7191},"children":[],"decl_id":null,"docs":" Selected array layer doesn't exist.\n","sig":null,"attributes":[{"value":"/ Selected array layer doesn't exist.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":125810,"byte_end":125849,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"error(transparent)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":125854,"byte_end":125875,"line_start":144,"line_end":144,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7223},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":126013,"byte_end":126022,"line_start":148,"line_end":148,"column_start":5,"column_end":14},"name":"BadFormat","qualname":"::image::ViewCreationError::BadFormat","value":"ViewCreationError::BadFormat(format::Format)","parent":{"krate":0,"index":7191},"children":[],"decl_id":null,"docs":" An incompatible format was requested for the view.\n","sig":null,"attributes":[{"value":"/ An incompatible format was requested for the view.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":125911,"byte_end":125965,"line_start":146,"line_end":146,"column_start":5,"column_end":59}},{"value":"error(\"Incompatible format: {0:?}\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":125970,"byte_end":126008,"line_start":147,"line_end":147,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7226},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":126147,"byte_end":126154,"line_start":151,"line_end":151,"column_start":5,"column_end":12},"name":"BadKind","qualname":"::image::ViewCreationError::BadKind","value":"ViewCreationError::BadKind(ViewKind)","parent":{"krate":0,"index":7191},"children":[],"decl_id":null,"docs":" An incompatible view kind was requested for the view.\n","sig":null,"attributes":[{"value":"/ An incompatible view kind was requested for the view.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":126044,"byte_end":126101,"line_start":149,"line_end":149,"column_start":5,"column_end":62}},{"value":"error(\"Incompatible kind: {0:?}\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":126106,"byte_end":126142,"line_start":150,"line_end":150,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7229},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":126270,"byte_end":126281,"line_start":154,"line_end":154,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::image::ViewCreationError::Unsupported","value":"ViewCreationError::Unsupported","parent":{"krate":0,"index":7191},"children":[],"decl_id":null,"docs":" The backend refused for some reason.\n","sig":null,"attributes":[{"value":"/ The backend refused for some reason.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":126170,"byte_end":126210,"line_start":152,"line_end":152,"column_start":5,"column_end":45}},{"value":"error(\"Implementation specific error occurred\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":126215,"byte_end":126265,"line_start":153,"line_end":153,"column_start":5,"column_end":55}}]},{"kind":"Enum","id":{"krate":0,"index":7191},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":125395,"byte_end":125412,"line_start":133,"line_end":133,"column_start":10,"column_end":27},"name":"ViewCreationError","qualname":"::image::ViewCreationError","value":"pub enum ViewCreationError {\n    OutOfMemory(device::OutOfMemory),\n    Usage(Usage),\n    Level(Level),\n    Layer(LayerError),\n    BadFormat(format::Format),\n    BadKind(ViewKind),\n    Unsupported,\n}","parent":null,"children":[{"krate":0,"index":7211},{"krate":0,"index":7214},{"krate":0,"index":7217},{"krate":0,"index":7220},{"krate":0,"index":7223},{"krate":0,"index":7226},{"krate":0,"index":7229}],"decl_id":null,"docs":" Error creating an `ImageView`.\n","sig":null,"attributes":[{"value":"/ Error creating an `ImageView`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":125298,"byte_end":125332,"line_start":131,"line_end":131,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7243},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":126537,"byte_end":126548,"line_start":162,"line_end":162,"column_start":5,"column_end":16},"name":"NotExpected","qualname":"::image::LayerError::NotExpected","value":"LayerError::NotExpected(Kind)","parent":{"krate":0,"index":7231},"children":[],"decl_id":null,"docs":" The source image kind doesn't support array slices.\n","sig":null,"attributes":[{"value":"/ The source image kind doesn't support array slices.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":126416,"byte_end":126471,"line_start":160,"line_end":160,"column_start":5,"column_end":60}},{"value":"error(\"Source image doesn't support view kind {0:?}\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":126476,"byte_end":126532,"line_start":161,"line_end":161,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7246},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":126669,"byte_end":126680,"line_start":165,"line_end":165,"column_start":5,"column_end":16},"name":"OutOfBounds","qualname":"::image::LayerError::OutOfBounds","value":"LayerError::OutOfBounds","parent":{"krate":0,"index":7231},"children":[],"decl_id":null,"docs":" Selected layers are outside of the provided range.\n","sig":null,"attributes":[{"value":"/ Selected layers are outside of the provided range.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":126560,"byte_end":126614,"line_start":163,"line_end":163,"column_start":5,"column_end":59}},{"value":"error(\"Selected layers are out of bounds\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":126619,"byte_end":126664,"line_start":164,"line_end":164,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":7231},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":126399,"byte_end":126409,"line_start":159,"line_end":159,"column_start":10,"column_end":20},"name":"LayerError","qualname":"::image::LayerError","value":"pub enum LayerError { NotExpected(Kind), OutOfBounds, }","parent":null,"children":[{"krate":0,"index":7243},{"krate":0,"index":7246}],"decl_id":null,"docs":" An error associated with selected image layer.\n","sig":null,"attributes":[{"value":"/ An error associated with selected image layer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":126286,"byte_end":126336,"line_start":157,"line_end":157,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7249},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":127155,"byte_end":127162,"line_start":177,"line_end":177,"column_start":5,"column_end":12},"name":"Nearest","qualname":"::image::Filter::Nearest","value":"Filter::Nearest","parent":{"krate":0,"index":7248},"children":[],"decl_id":null,"docs":" Selects a single texel from the current mip level and uses its value.","sig":null,"attributes":[{"value":"/ Selects a single texel from the current mip level and uses its value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":127004,"byte_end":127077,"line_start":174,"line_end":174,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":127082,"byte_end":127085,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Mip filtering selects the filtered value from one level.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":127090,"byte_end":127150,"line_start":176,"line_end":176,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7251},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":127384,"byte_end":127390,"line_start":182,"line_end":182,"column_start":5,"column_end":11},"name":"Linear","qualname":"::image::Filter::Linear","value":"Filter::Linear","parent":{"krate":0,"index":7248},"children":[],"decl_id":null,"docs":" Selects multiple texels and calculates the value via multivariate interpolation.\n     * 1D: Linear interpolation\n     * 2D/Cube: Bilinear interpolation\n     * 3D: Trilinear interpolation\n","sig":null,"attributes":[{"value":"/ Selects multiple texels and calculates the value via multivariate interpolation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":127168,"byte_end":127252,"line_start":178,"line_end":178,"column_start":5,"column_end":89}},{"value":"/     * 1D: Linear interpolation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":127257,"byte_end":127291,"line_start":179,"line_end":179,"column_start":5,"column_end":39}},{"value":"/     * 2D/Cube: Bilinear interpolation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":127296,"byte_end":127337,"line_start":180,"line_end":180,"column_start":5,"column_end":46}},{"value":"/     * 3D: Trilinear interpolation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":127342,"byte_end":127379,"line_start":181,"line_end":181,"column_start":5,"column_end":42}}]},{"kind":"Enum","id":{"krate":0,"index":7248},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":126991,"byte_end":126997,"line_start":173,"line_end":173,"column_start":10,"column_end":16},"name":"Filter","qualname":"::image::Filter","value":"pub enum Filter { Nearest, Linear, }","parent":null,"children":[{"krate":0,"index":7249},{"krate":0,"index":7251}],"decl_id":null,"docs":" How to [filter](https://en.wikipedia.org/wiki/Texture_filtering) the\n image when sampling. They correspond to increasing levels of quality,\n but also cost.\n","sig":null,"attributes":[{"value":"/ How to [filter](https://en.wikipedia.org/wiki/Texture_filtering) the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":126685,"byte_end":126757,"line_start":168,"line_end":168,"column_start":1,"column_end":73}},{"value":"/ image when sampling. They correspond to increasing levels of quality,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":126758,"byte_end":126831,"line_start":169,"line_end":169,"column_start":1,"column_end":74}},{"value":"/ but also cost.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":126832,"byte_end":126850,"line_start":170,"line_end":170,"column_start":1,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7272},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":127637,"byte_end":127641,"line_start":191,"line_end":191,"column_start":5,"column_end":9},"name":"PosX","qualname":"::image::CubeFace::PosX","value":"CubeFace::PosX","parent":{"krate":0,"index":7271},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7274},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":127647,"byte_end":127651,"line_start":192,"line_end":192,"column_start":5,"column_end":9},"name":"NegX","qualname":"::image::CubeFace::NegX","value":"CubeFace::NegX","parent":{"krate":0,"index":7271},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7276},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":127657,"byte_end":127661,"line_start":193,"line_end":193,"column_start":5,"column_end":9},"name":"PosY","qualname":"::image::CubeFace::PosY","value":"CubeFace::PosY","parent":{"krate":0,"index":7271},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7278},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":127667,"byte_end":127671,"line_start":194,"line_end":194,"column_start":5,"column_end":9},"name":"NegY","qualname":"::image::CubeFace::NegY","value":"CubeFace::NegY","parent":{"krate":0,"index":7271},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7280},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":127677,"byte_end":127681,"line_start":195,"line_end":195,"column_start":5,"column_end":9},"name":"PosZ","qualname":"::image::CubeFace::PosZ","value":"CubeFace::PosZ","parent":{"krate":0,"index":7271},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7282},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":127687,"byte_end":127691,"line_start":196,"line_end":196,"column_start":5,"column_end":9},"name":"NegZ","qualname":"::image::CubeFace::NegZ","value":"CubeFace::NegZ","parent":{"krate":0,"index":7271},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7271},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":127622,"byte_end":127630,"line_start":190,"line_end":190,"column_start":10,"column_end":18},"name":"CubeFace","qualname":"::image::CubeFace","value":"pub enum CubeFace { PosX, NegX, PosY, NegY, PosZ, NegZ, }","parent":null,"children":[{"krate":0,"index":7272},{"krate":0,"index":7274},{"krate":0,"index":7276},{"krate":0,"index":7278},{"krate":0,"index":7280},{"krate":0,"index":7282}],"decl_id":null,"docs":" The face of a cube image to do an operation on.\n","sig":null,"attributes":[{"value":"/ The face of a cube image to do an operation on.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":127395,"byte_end":127446,"line_start":185,"line_end":185,"column_start":1,"column_end":52}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":127447,"byte_end":127469,"line_start":186,"line_end":186,"column_start":1,"column_end":23}},{"value":"repr(u8)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":127601,"byte_end":127612,"line_start":189,"line_end":189,"column_start":1,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":501},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":127780,"byte_end":127790,"line_start":200,"line_end":200,"column_start":11,"column_end":21},"name":"CUBE_FACES","qualname":"::image::CUBE_FACES","value":"[CubeFace; ]","parent":null,"children":[],"decl_id":null,"docs":" A constant array of cube faces in the order they map to the hardware.\n","sig":null,"attributes":[{"value":"/ A constant array of cube faces in the order they map to the hardware.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":127696,"byte_end":127769,"line_start":199,"line_end":199,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7303},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":128274,"byte_end":128276,"line_start":216,"line_end":216,"column_start":5,"column_end":7},"name":"D1","qualname":"::image::Kind::D1","value":"Kind::D1(Size, Layer)","parent":{"krate":0,"index":7302},"children":[],"decl_id":null,"docs":" A single one-dimensional row of texels.\n","sig":null,"attributes":[{"value":"/ A single one-dimensional row of texels.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":128226,"byte_end":128269,"line_start":215,"line_end":215,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7307},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":128326,"byte_end":128328,"line_start":218,"line_end":218,"column_start":5,"column_end":7},"name":"D2","qualname":"::image::Kind::D2","value":"Kind::D2(Size, Size, Layer, NumSamples)","parent":{"krate":0,"index":7302},"children":[],"decl_id":null,"docs":" Two-dimensional image.\n","sig":null,"attributes":[{"value":"/ Two-dimensional image.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":128295,"byte_end":128321,"line_start":217,"line_end":217,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7313},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":128391,"byte_end":128393,"line_start":220,"line_end":220,"column_start":5,"column_end":7},"name":"D3","qualname":"::image::Kind::D3","value":"Kind::D3(Size, Size, Size)","parent":{"krate":0,"index":7302},"children":[],"decl_id":null,"docs":" Volumetric image.\n","sig":null,"attributes":[{"value":"/ Volumetric image.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":128365,"byte_end":128386,"line_start":219,"line_end":219,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":7302},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":128215,"byte_end":128219,"line_start":214,"line_end":214,"column_start":10,"column_end":14},"name":"Kind","qualname":"::image::Kind","value":"pub enum Kind {\n    D1(Size, Layer),\n    D2(Size, Size, Layer, NumSamples),\n    D3(Size, Size, Size),\n}","parent":null,"children":[{"krate":0,"index":7303},{"krate":0,"index":7307},{"krate":0,"index":7313}],"decl_id":null,"docs":" Specifies the dimensionality of an image to be allocated,\n along with the number of mipmap layers and MSAA samples\n if applicable.\n","sig":null,"attributes":[{"value":"/ Specifies the dimensionality of an image to be allocated,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":127934,"byte_end":127995,"line_start":209,"line_end":209,"column_start":1,"column_end":62}},{"value":"/ along with the number of mipmap layers and MSAA samples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":127996,"byte_end":128055,"line_start":210,"line_end":210,"column_start":1,"column_end":60}},{"value":"/ if applicable.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":128056,"byte_end":128074,"line_start":211,"line_end":211,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":128469,"byte_end":128475,"line_start":225,"line_end":225,"column_start":12,"column_end":18},"name":"extent","qualname":"<Kind>::extent","value":"pub fn extent(&Self) -> Extent","parent":null,"children":[],"decl_id":null,"docs":" Get the image extent.\n","sig":null,"attributes":[{"value":"/ Get the image extent.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":128432,"byte_end":128457,"line_start":224,"line_end":224,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":129014,"byte_end":129026,"line_start":246,"line_end":246,"column_start":12,"column_end":24},"name":"level_extent","qualname":"<Kind>::level_extent","value":"pub fn level_extent(&Self, Level) -> Extent","parent":null,"children":[],"decl_id":null,"docs":" Get the extent of a particular mipmap level.\n","sig":null,"attributes":[{"value":"/ Get the extent of a particular mipmap level.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":128954,"byte_end":129002,"line_start":245,"line_end":245,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":129727,"byte_end":129745,"line_start":270,"line_end":270,"column_start":12,"column_end":30},"name":"compute_num_levels","qualname":"<Kind>::compute_num_levels","value":"pub fn compute_num_levels(&Self) -> Level","parent":null,"children":[],"decl_id":null,"docs":" Count the number of mipmap levels.\n","sig":null,"attributes":[{"value":"/ Count the number of mipmap levels.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":129677,"byte_end":129715,"line_start":269,"line_end":269,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":130318,"byte_end":130328,"line_start":288,"line_end":288,"column_start":12,"column_end":22},"name":"num_layers","qualname":"<Kind>::num_layers","value":"pub fn num_layers(&Self) -> Layer","parent":null,"children":[],"decl_id":null,"docs":" Return the number of layers in an array type.","sig":null,"attributes":[{"value":"/ Return the number of layers in an array type.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":130200,"byte_end":130249,"line_start":285,"line_end":285,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":130254,"byte_end":130257,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ Each cube face counts as separate layer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":130262,"byte_end":130306,"line_start":287,"line_end":287,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":130540,"byte_end":130551,"line_start":296,"line_end":296,"column_start":12,"column_end":23},"name":"num_samples","qualname":"<Kind>::num_samples","value":"pub fn num_samples(&Self) -> NumSamples","parent":null,"children":[],"decl_id":null,"docs":" Return the number of MSAA samples for the kind.\n","sig":null,"attributes":[{"value":"/ Return the number of MSAA samples for the kind.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":130477,"byte_end":130528,"line_start":295,"line_end":295,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7338},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":130976,"byte_end":130978,"line_start":310,"line_end":310,"column_start":5,"column_end":7},"name":"D1","qualname":"::image::ViewKind::D1","value":"ViewKind::D1","parent":{"krate":0,"index":7337},"children":[],"decl_id":null,"docs":" A single one-dimensional row of texels.\n","sig":null,"attributes":[{"value":"/ A single one-dimensional row of texels.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":130928,"byte_end":130971,"line_start":309,"line_end":309,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7340},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":131179,"byte_end":131186,"line_start":314,"line_end":314,"column_start":5,"column_end":12},"name":"D1Array","qualname":"::image::ViewKind::D1Array","value":"ViewKind::D1Array","parent":{"krate":0,"index":7337},"children":[],"decl_id":null,"docs":" An array of rows of texels. Equivalent to `D2` except that texels\n in different rows are not sampled, so filtering will be constrained\n to a single row of texels at a time.\n","sig":null,"attributes":[{"value":"/ An array of rows of texels. Equivalent to `D2` except that texels","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":130984,"byte_end":131053,"line_start":311,"line_end":311,"column_start":5,"column_end":74}},{"value":"/ in different rows are not sampled, so filtering will be constrained","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":131058,"byte_end":131129,"line_start":312,"line_end":312,"column_start":5,"column_end":76}},{"value":"/ to a single row of texels at a time.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":131134,"byte_end":131174,"line_start":313,"line_end":313,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7342},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":131257,"byte_end":131259,"line_start":316,"line_end":316,"column_start":5,"column_end":7},"name":"D2","qualname":"::image::ViewKind::D2","value":"ViewKind::D2","parent":{"krate":0,"index":7337},"children":[],"decl_id":null,"docs":" A traditional 2D image, with rows arranged contiguously.\n","sig":null,"attributes":[{"value":"/ A traditional 2D image, with rows arranged contiguously.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":131192,"byte_end":131252,"line_start":315,"line_end":315,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7344},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":131386,"byte_end":131393,"line_start":319,"line_end":319,"column_start":5,"column_end":12},"name":"D2Array","qualname":"::image::ViewKind::D2Array","value":"ViewKind::D2Array","parent":{"krate":0,"index":7337},"children":[],"decl_id":null,"docs":" An array of 2D images. Equivalent to `D3` except that texels in\n a different depth level are not sampled.\n","sig":null,"attributes":[{"value":"/ An array of 2D images. Equivalent to `D3` except that texels in","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":131265,"byte_end":131332,"line_start":317,"line_end":317,"column_start":5,"column_end":72}},{"value":"/ a different depth level are not sampled.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":131337,"byte_end":131381,"line_start":318,"line_end":318,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7346},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":131465,"byte_end":131467,"line_start":321,"line_end":321,"column_start":5,"column_end":7},"name":"D3","qualname":"::image::ViewKind::D3","value":"ViewKind::D3","parent":{"krate":0,"index":7337},"children":[],"decl_id":null,"docs":" A volume image, with each 2D layer arranged contiguously.\n","sig":null,"attributes":[{"value":"/ A volume image, with each 2D layer arranged contiguously.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":131399,"byte_end":131460,"line_start":320,"line_end":320,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7348},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":131532,"byte_end":131536,"line_start":323,"line_end":323,"column_start":5,"column_end":9},"name":"Cube","qualname":"::image::ViewKind::Cube","value":"ViewKind::Cube","parent":{"krate":0,"index":7337},"children":[],"decl_id":null,"docs":" A set of 6 2D images, one for each face of a cube.\n","sig":null,"attributes":[{"value":"/ A set of 6 2D images, one for each face of a cube.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":131473,"byte_end":131527,"line_start":322,"line_end":322,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7350},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":131575,"byte_end":131584,"line_start":325,"line_end":325,"column_start":5,"column_end":14},"name":"CubeArray","qualname":"::image::ViewKind::CubeArray","value":"ViewKind::CubeArray","parent":{"krate":0,"index":7337},"children":[],"decl_id":null,"docs":" An array of Cube images.\n","sig":null,"attributes":[{"value":"/ An array of Cube images.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":131542,"byte_end":131570,"line_start":324,"line_end":324,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":7337},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":130913,"byte_end":130921,"line_start":308,"line_end":308,"column_start":10,"column_end":18},"name":"ViewKind","qualname":"::image::ViewKind","value":"pub enum ViewKind { D1, D1Array, D2, D2Array, D3, Cube, CubeArray, }","parent":null,"children":[{"krate":0,"index":7338},{"krate":0,"index":7340},{"krate":0,"index":7342},{"krate":0,"index":7344},{"krate":0,"index":7346},{"krate":0,"index":7348},{"krate":0,"index":7350}],"decl_id":null,"docs":" Specifies the kind/dimensionality of an image view.\n","sig":null,"attributes":[{"value":"/ Specifies the kind/dimensionality of an image view.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":130717,"byte_end":130772,"line_start":305,"line_end":305,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":7372},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":131757,"byte_end":131773,"line_start":332,"line_end":332,"column_start":16,"column_end":32},"name":"ViewCapabilities","qualname":"::image::ViewCapabilities","value":"ViewCapabilities {  }","parent":null,"children":[{"krate":0,"index":7373}],"decl_id":null,"docs":" Capabilities to create views into an image.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7407},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":131857,"byte_end":131871,"line_start":334,"line_end":334,"column_start":15,"column_end":29},"name":"MUTABLE_FORMAT","qualname":"::image::ViewCapabilities::MUTABLE_FORMAT","value":"ViewCapabilities","parent":{"krate":0,"index":7406},"children":[],"decl_id":null,"docs":" Support creation of views with different formats.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7408},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":131972,"byte_end":131981,"line_start":336,"line_end":336,"column_start":15,"column_end":24},"name":"KIND_CUBE","qualname":"::image::ViewCapabilities::KIND_CUBE","value":"ViewCapabilities","parent":{"krate":0,"index":7406},"children":[],"decl_id":null,"docs":" Support creation of `Cube` and `CubeArray` kinds of views.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7409},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":132072,"byte_end":132085,"line_start":338,"line_end":338,"column_start":15,"column_end":28},"name":"KIND_2D_ARRAY","qualname":"::image::ViewCapabilities::KIND_2D_ARRAY","value":"ViewCapabilities","parent":{"krate":0,"index":7406},"children":[],"decl_id":null,"docs":" Support creation of `D2Array` kind of view.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7464},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":132356,"byte_end":132361,"line_start":347,"line_end":347,"column_start":16,"column_end":21},"name":"Usage","qualname":"::image::Usage","value":"Usage {  }","parent":null,"children":[{"krate":0,"index":7465}],"decl_id":null,"docs":" TODO: Find out if TRANSIENT_ATTACHMENT + INPUT_ATTACHMENT\n are applicable on backends other than Vulkan. --AP\n Image usage flags\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7504},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":132435,"byte_end":132447,"line_start":349,"line_end":349,"column_start":15,"column_end":27},"name":"TRANSFER_SRC","qualname":"::image::Usage::TRANSFER_SRC","value":"Usage","parent":{"krate":0,"index":7503},"children":[],"decl_id":null,"docs":" The image is used as a transfer source.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7505},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":132526,"byte_end":132538,"line_start":351,"line_end":351,"column_start":15,"column_end":27},"name":"TRANSFER_DST","qualname":"::image::Usage::TRANSFER_DST","value":"Usage","parent":{"krate":0,"index":7503},"children":[],"decl_id":null,"docs":" The image is used as a transfer destination.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7506},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":132699,"byte_end":132706,"line_start":353,"line_end":353,"column_start":15,"column_end":22},"name":"SAMPLED","qualname":"::image::Usage::SAMPLED","value":"Usage","parent":{"krate":0,"index":7503},"children":[],"decl_id":null,"docs":" The image is a [sampled image](https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-sampledimage)\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7507},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":132867,"byte_end":132874,"line_start":355,"line_end":355,"column_start":15,"column_end":22},"name":"STORAGE","qualname":"::image::Usage::STORAGE","value":"Usage","parent":{"krate":0,"index":7503},"children":[],"decl_id":null,"docs":" The image is a [storage image](https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-storageimage)\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7508},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":132993,"byte_end":133009,"line_start":357,"line_end":357,"column_start":15,"column_end":31},"name":"COLOR_ATTACHMENT","qualname":"::image::Usage::COLOR_ATTACHMENT","value":"Usage","parent":{"krate":0,"index":7503},"children":[],"decl_id":null,"docs":" The image is used as a color attachment -- that is, color input to a rendering pass.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7509},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":133085,"byte_end":133109,"line_start":359,"line_end":359,"column_start":15,"column_end":39},"name":"DEPTH_STENCIL_ATTACHMENT","qualname":"::image::Usage::DEPTH_STENCIL_ATTACHMENT","value":"Usage","parent":{"krate":0,"index":7503},"children":[],"decl_id":null,"docs":" The image is used as a depth attachment.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7510},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":133144,"byte_end":133164,"line_start":361,"line_end":361,"column_start":15,"column_end":35},"name":"TRANSIENT_ATTACHMENT","qualname":"::image::Usage::TRANSIENT_ATTACHMENT","value":"Usage","parent":{"krate":0,"index":7503},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7511},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":133199,"byte_end":133215,"line_start":363,"line_end":363,"column_start":15,"column_end":31},"name":"INPUT_ATTACHMENT","qualname":"::image::Usage::INPUT_ATTACHMENT","value":"Usage","parent":{"krate":0,"index":7503},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":133330,"byte_end":133342,"line_start":370,"line_end":370,"column_start":12,"column_end":24},"name":"can_transfer","qualname":"<Usage>::can_transfer","value":"pub fn can_transfer(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this image can be used in transfer operations.\n","sig":null,"attributes":[{"value":"/ Returns true if this image can be used in transfer operations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":133252,"byte_end":133318,"line_start":369,"line_end":369,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":133505,"byte_end":133515,"line_start":375,"line_end":375,"column_start":12,"column_end":22},"name":"can_target","qualname":"<Usage>::can_target","value":"pub fn can_target(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this image can be used as a target.\n","sig":null,"attributes":[{"value":"/ Returns true if this image can be used as a target.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":133438,"byte_end":133493,"line_start":374,"line_end":374,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7582},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":134018,"byte_end":134022,"line_start":387,"line_end":387,"column_start":5,"column_end":9},"name":"Tile","qualname":"::image::WrapMode::Tile","value":"WrapMode::Tile","parent":{"krate":0,"index":7581},"children":[],"decl_id":null,"docs":" Tile the image, that is, sample the coordinate modulo `1.0`, so\n addressing the image beyond an edge will \"wrap\" back from the\n other edge.\n","sig":null,"attributes":[{"value":"/ Tile the image, that is, sample the coordinate modulo `1.0`, so","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":133856,"byte_end":133923,"line_start":384,"line_end":384,"column_start":5,"column_end":72}},{"value":"/ addressing the image beyond an edge will \"wrap\" back from the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":133928,"byte_end":133993,"line_start":385,"line_end":385,"column_start":5,"column_end":70}},{"value":"/ other edge.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":133998,"byte_end":134013,"line_start":386,"line_end":386,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7584},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":134104,"byte_end":134110,"line_start":389,"line_end":389,"column_start":5,"column_end":11},"name":"Mirror","qualname":"::image::WrapMode::Mirror","value":"WrapMode::Mirror","parent":{"krate":0,"index":7581},"children":[],"decl_id":null,"docs":" Mirror the image. Like tile, but uses abs(coord) before the modulo.\n","sig":null,"attributes":[{"value":"/ Mirror the image. Like tile, but uses abs(coord) before the modulo.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":134028,"byte_end":134099,"line_start":388,"line_end":388,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7586},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":134185,"byte_end":134190,"line_start":391,"line_end":391,"column_start":5,"column_end":10},"name":"Clamp","qualname":"::image::WrapMode::Clamp","value":"WrapMode::Clamp","parent":{"krate":0,"index":7581},"children":[],"decl_id":null,"docs":" Clamp the image to the value at `0.0` or `1.0` respectively.\n","sig":null,"attributes":[{"value":"/ Clamp the image to the value at `0.0` or `1.0` respectively.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":134116,"byte_end":134180,"line_start":390,"line_end":390,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7588},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":134222,"byte_end":134228,"line_start":393,"line_end":393,"column_start":5,"column_end":11},"name":"Border","qualname":"::image::WrapMode::Border","value":"WrapMode::Border","parent":{"krate":0,"index":7581},"children":[],"decl_id":null,"docs":" Use border color.\n","sig":null,"attributes":[{"value":"/ Use border color.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":134196,"byte_end":134217,"line_start":392,"line_end":392,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7590},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":134363,"byte_end":134374,"line_start":397,"line_end":397,"column_start":5,"column_end":16},"name":"MirrorClamp","qualname":"::image::WrapMode::MirrorClamp","value":"WrapMode::MirrorClamp","parent":{"krate":0,"index":7581},"children":[],"decl_id":null,"docs":" Mirror once and clamp to edge otherwise.","sig":null,"attributes":[{"value":"/ Mirror once and clamp to edge otherwise.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":134234,"byte_end":134278,"line_start":394,"line_end":394,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":134283,"byte_end":134286,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ Only valid if `Features::SAMPLER_MIRROR_CLAMP_EDGE` is enabled.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":134291,"byte_end":134358,"line_start":396,"line_end":396,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":7581},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":133841,"byte_end":133849,"line_start":383,"line_end":383,"column_start":10,"column_end":18},"name":"WrapMode","qualname":"::image::WrapMode","value":"pub enum WrapMode { Tile, Mirror, Clamp, Border, MirrorClamp, }","parent":null,"children":[{"krate":0,"index":7582},{"krate":0,"index":7584},{"krate":0,"index":7586},{"krate":0,"index":7588},{"krate":0,"index":7590}],"decl_id":null,"docs":" Specifies how image coordinates outside the range `[0, 1]` are handled.\n","sig":null,"attributes":[{"value":"/ Specifies how image coordinates outside the range `[0, 1]` are handled.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":133625,"byte_end":133700,"line_start":380,"line_end":380,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":7610},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":134607,"byte_end":134610,"line_start":404,"line_end":404,"column_start":12,"column_end":15},"name":"Lod","qualname":"::image::Lod","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper for the LOD level of an image. Needed so that we can\n implement Eq and Hash for it.\n","sig":null,"attributes":[{"value":"/ A wrapper for the LOD level of an image. Needed so that we can","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":134379,"byte_end":134445,"line_start":400,"line_end":400,"column_start":1,"column_end":67}},{"value":"/ implement Eq and Hash for it.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":134446,"byte_end":134479,"line_start":401,"line_end":401,"column_start":1,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":7612},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":134611,"byte_end":134618,"line_start":404,"line_end":404,"column_start":16,"column_end":23},"name":"0","qualname":"::image::Lod::0","value":"f32","parent":{"krate":0,"index":7610},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":525},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":134675,"byte_end":134680,"line_start":408,"line_end":408,"column_start":15,"column_end":20},"name":"RANGE","qualname":"::image::Lod::RANGE","value":"Range<Self>","parent":{"krate":0,"index":524},"children":[],"decl_id":null,"docs":" Possible LOD range.\n","sig":null,"attributes":[{"value":"/ Possible LOD range.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":134637,"byte_end":134660,"line_start":407,"line_end":407,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":7624},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":135083,"byte_end":135094,"line_start":421,"line_end":421,"column_start":12,"column_end":23},"name":"PackedColor","qualname":"::image::PackedColor","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper for an RGBA color with 8 bits per texel, encoded as a u32.\n","sig":null,"attributes":[{"value":"/ A wrapper for an RGBA color with 8 bits per texel, encoded as a u32.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":134873,"byte_end":134945,"line_start":418,"line_end":418,"column_start":1,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":7626},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":135095,"byte_end":135102,"line_start":421,"line_end":421,"column_start":24,"column_end":31},"name":"0","qualname":"::image::PackedColor::0","value":"u32","parent":{"krate":0,"index":7624},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7645},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":135842,"byte_end":135858,"line_start":449,"line_end":449,"column_start":5,"column_end":21},"name":"TransparentBlack","qualname":"::image::BorderColor::TransparentBlack","value":"BorderColor::TransparentBlack","parent":{"krate":0,"index":7644},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":135834,"byte_end":135837,"line_start":448,"line_end":448,"column_start":5,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7647},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":135872,"byte_end":135883,"line_start":451,"line_end":451,"column_start":5,"column_end":16},"name":"OpaqueBlack","qualname":"::image::BorderColor::OpaqueBlack","value":"BorderColor::OpaqueBlack","parent":{"krate":0,"index":7644},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":135864,"byte_end":135867,"line_start":450,"line_end":450,"column_start":5,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7649},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":135897,"byte_end":135908,"line_start":453,"line_end":453,"column_start":5,"column_end":16},"name":"OpaqueWhite","qualname":"::image::BorderColor::OpaqueWhite","value":"BorderColor::OpaqueWhite","parent":{"krate":0,"index":7644},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":135889,"byte_end":135892,"line_start":452,"line_end":452,"column_start":5,"column_end":8}}]},{"kind":"Enum","id":{"krate":0,"index":7644},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":135816,"byte_end":135827,"line_start":447,"line_end":447,"column_start":10,"column_end":21},"name":"BorderColor","qualname":"::image::BorderColor","value":"pub enum BorderColor { TransparentBlack, OpaqueBlack, OpaqueWhite, }","parent":null,"children":[{"krate":0,"index":7645},{"krate":0,"index":7647},{"krate":0,"index":7649}],"decl_id":null,"docs":" The border color for `WrapMode::Border` wrap mode.\n","sig":null,"attributes":[{"value":"/ The border color for `WrapMode::Border` wrap mode.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":135621,"byte_end":135675,"line_start":444,"line_end":444,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":7669},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":136622,"byte_end":136633,"line_start":473,"line_end":473,"column_start":12,"column_end":23},"name":"SamplerDesc","qualname":"::image::SamplerDesc","value":"SamplerDesc { min_filter, mag_filter, mip_filter, wrap_mode, lod_bias, lod_range, comparison, border, normalized, anisotropy_clamp }","parent":null,"children":[{"krate":0,"index":7670},{"krate":0,"index":7671},{"krate":0,"index":7672},{"krate":0,"index":7673},{"krate":0,"index":7674},{"krate":0,"index":7675},{"krate":0,"index":7676},{"krate":0,"index":7677},{"krate":0,"index":7678},{"krate":0,"index":7679}],"decl_id":null,"docs":" Specifies how to sample from an image.  These are all the parameters\n available that alter how the GPU goes from a coordinate in an image\n to producing an actual value from the texture, including filtering/\n scaling, wrap mode, etc.\n","sig":null,"attributes":[{"value":"/ Specifies how to sample from an image.  These are all the parameters","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":136214,"byte_end":136286,"line_start":466,"line_end":466,"column_start":1,"column_end":73}},{"value":"/ available that alter how the GPU goes from a coordinate in an image","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":136287,"byte_end":136358,"line_start":467,"line_end":467,"column_start":1,"column_end":72}},{"value":"/ to producing an actual value from the texture, including filtering/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":136359,"byte_end":136430,"line_start":468,"line_end":468,"column_start":1,"column_end":72}},{"value":"/ scaling, wrap mode, etc.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":136431,"byte_end":136459,"line_start":469,"line_end":469,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":7670},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":136687,"byte_end":136697,"line_start":475,"line_end":475,"column_start":9,"column_end":19},"name":"min_filter","qualname":"::image::SamplerDesc::min_filter","value":"image::Filter","parent":{"krate":0,"index":7669},"children":[],"decl_id":null,"docs":" Minification filter method to use.\n","sig":null,"attributes":[{"value":"/ Minification filter method to use.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":136640,"byte_end":136678,"line_start":474,"line_end":474,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":7671},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":136759,"byte_end":136769,"line_start":477,"line_end":477,"column_start":9,"column_end":19},"name":"mag_filter","qualname":"::image::SamplerDesc::mag_filter","value":"image::Filter","parent":{"krate":0,"index":7669},"children":[],"decl_id":null,"docs":" Magnification filter method to use.\n","sig":null,"attributes":[{"value":"/ Magnification filter method to use.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":136711,"byte_end":136750,"line_start":476,"line_end":476,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":7672},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":136821,"byte_end":136831,"line_start":479,"line_end":479,"column_start":9,"column_end":19},"name":"mip_filter","qualname":"::image::SamplerDesc::mip_filter","value":"image::Filter","parent":{"krate":0,"index":7669},"children":[],"decl_id":null,"docs":" Mip filter method to use.\n","sig":null,"attributes":[{"value":"/ Mip filter method to use.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":136783,"byte_end":136812,"line_start":478,"line_end":478,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":7673},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":136943,"byte_end":136952,"line_start":482,"line_end":482,"column_start":9,"column_end":18},"name":"wrap_mode","qualname":"::image::SamplerDesc::wrap_mode","value":"(image::WrapMode, image::WrapMode, image::WrapMode)","parent":{"krate":0,"index":7669},"children":[],"decl_id":null,"docs":" Wrapping mode for each of the U, V, and W axis (S, T, and R in OpenGL\n speak).\n","sig":null,"attributes":[{"value":"/ Wrapping mode for each of the U, V, and W axis (S, T, and R in OpenGL","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":136845,"byte_end":136918,"line_start":480,"line_end":480,"column_start":5,"column_end":78}},{"value":"/ speak).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":136923,"byte_end":136934,"line_start":481,"line_end":481,"column_start":5,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":7674},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":137178,"byte_end":137186,"line_start":486,"line_end":486,"column_start":9,"column_end":17},"name":"lod_bias","qualname":"::image::SamplerDesc::lod_bias","value":"image::Lod","parent":{"krate":0,"index":7669},"children":[],"decl_id":null,"docs":" This bias is added to every computed mipmap level (N + lod_bias). For\n example, if it would select mipmap level 2 and lod_bias is 1, it will\n use mipmap level 3.\n","sig":null,"attributes":[{"value":"/ This bias is added to every computed mipmap level (N + lod_bias). For","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":136990,"byte_end":137063,"line_start":483,"line_end":483,"column_start":5,"column_end":78}},{"value":"/ example, if it would select mipmap level 2 and lod_bias is 1, it will","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":137068,"byte_end":137141,"line_start":484,"line_end":484,"column_start":5,"column_end":78}},{"value":"/ use mipmap level 3.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":137146,"byte_end":137169,"line_start":485,"line_end":485,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":7675},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":137266,"byte_end":137275,"line_start":488,"line_end":488,"column_start":9,"column_end":18},"name":"lod_range","qualname":"::image::SamplerDesc::lod_range","value":"std::ops::Range<image::Lod>","parent":{"krate":0,"index":7669},"children":[],"decl_id":null,"docs":" This range is used to clamp LOD level used for sampling.\n","sig":null,"attributes":[{"value":"/ This range is used to clamp LOD level used for sampling.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":137197,"byte_end":137257,"line_start":487,"line_end":487,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":7676},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":137353,"byte_end":137363,"line_start":490,"line_end":490,"column_start":9,"column_end":19},"name":"comparison","qualname":"::image::SamplerDesc::comparison","value":"std::option::Option<pso::output_merger::Comparison>","parent":{"krate":0,"index":7669},"children":[],"decl_id":null,"docs":" Comparison mode, used primary for a shadow map.\n","sig":null,"attributes":[{"value":"/ Comparison mode, used primary for a shadow map.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":137293,"byte_end":137344,"line_start":489,"line_end":489,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":7677},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":137467,"byte_end":137473,"line_start":492,"line_end":492,"column_start":9,"column_end":15},"name":"border","qualname":"::image::SamplerDesc::border","value":"image::BorderColor","parent":{"krate":0,"index":7669},"children":[],"decl_id":null,"docs":" Border color is used when one of the wrap modes is set to border.\n","sig":null,"attributes":[{"value":"/ Border color is used when one of the wrap modes is set to border.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":137389,"byte_end":137458,"line_start":491,"line_end":491,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":7678},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":137562,"byte_end":137572,"line_start":494,"line_end":494,"column_start":9,"column_end":19},"name":"normalized","qualname":"::image::SamplerDesc::normalized","value":"bool","parent":{"krate":0,"index":7669},"children":[],"decl_id":null,"docs":" Specifies whether the texture coordinates are normalized.\n","sig":null,"attributes":[{"value":"/ Specifies whether the texture coordinates are normalized.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":137492,"byte_end":137553,"line_start":493,"line_end":493,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":7679},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":137703,"byte_end":137719,"line_start":498,"line_end":498,"column_start":9,"column_end":25},"name":"anisotropy_clamp","qualname":"::image::SamplerDesc::anisotropy_clamp","value":"std::option::Option<u8>","parent":{"krate":0,"index":7669},"children":[],"decl_id":null,"docs":" Anisotropic filtering.","sig":null,"attributes":[{"value":"/ Anisotropic filtering.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":137584,"byte_end":137610,"line_start":495,"line_end":495,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":137615,"byte_end":137618,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ Can be `Some(_)` only if `Features::SAMPLER_ANISOTROPY` is enabled.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":137623,"byte_end":137694,"line_start":497,"line_end":497,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":137920,"byte_end":137923,"line_start":504,"line_end":504,"column_start":12,"column_end":15},"name":"new","qualname":"<SamplerDesc>::new","value":"pub fn new(Filter, WrapMode) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new sampler description with a given filter method for all filtering operations\n and a wrapping mode, using no LOD modifications.\n","sig":null,"attributes":[{"value":"/ Create a new sampler description with a given filter method for all filtering operations","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":137759,"byte_end":137851,"line_start":502,"line_end":502,"column_start":5,"column_end":97}},{"value":"/ and a wrapping mode, using no LOD modifications.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":137856,"byte_end":137908,"line_start":503,"line_end":503,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7695},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":139062,"byte_end":139069,"line_start":532,"line_end":532,"column_start":5,"column_end":12},"name":"General","qualname":"::image::Layout::General","value":"Layout::General","parent":{"krate":0,"index":7694},"children":[],"decl_id":null,"docs":" General purpose, no restrictions on usage.\n","sig":null,"attributes":[{"value":"/ General purpose, no restrictions on usage.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":139011,"byte_end":139057,"line_start":531,"line_end":531,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7697},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":139141,"byte_end":139163,"line_start":534,"line_end":534,"column_start":5,"column_end":27},"name":"ColorAttachmentOptimal","qualname":"::image::Layout::ColorAttachmentOptimal","value":"Layout::ColorAttachmentOptimal","parent":{"krate":0,"index":7694},"children":[],"decl_id":null,"docs":" Must only be used as a color attachment in a framebuffer.\n","sig":null,"attributes":[{"value":"/ Must only be used as a color attachment in a framebuffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":139075,"byte_end":139136,"line_start":533,"line_end":533,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7699},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":139235,"byte_end":139264,"line_start":536,"line_end":536,"column_start":5,"column_end":34},"name":"DepthStencilAttachmentOptimal","qualname":"::image::Layout::DepthStencilAttachmentOptimal","value":"Layout::DepthStencilAttachmentOptimal","parent":{"krate":0,"index":7694},"children":[],"decl_id":null,"docs":" Must only be used as a depth attachment in a framebuffer.\n","sig":null,"attributes":[{"value":"/ Must only be used as a depth attachment in a framebuffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":139169,"byte_end":139230,"line_start":535,"line_end":535,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7701},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":139399,"byte_end":139426,"line_start":539,"line_end":539,"column_start":5,"column_end":32},"name":"DepthStencilReadOnlyOptimal","qualname":"::image::Layout::DepthStencilReadOnlyOptimal","value":"Layout::DepthStencilReadOnlyOptimal","parent":{"krate":0,"index":7694},"children":[],"decl_id":null,"docs":" Must only be used as a depth attachment in a framebuffer,\n or as a read-only depth or stencil buffer in a shader.\n","sig":null,"attributes":[{"value":"/ Must only be used as a depth attachment in a framebuffer,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":139270,"byte_end":139331,"line_start":537,"line_end":537,"column_start":5,"column_end":66}},{"value":"/ or as a read-only depth or stencil buffer in a shader.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":139336,"byte_end":139394,"line_start":538,"line_end":538,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7703},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":139492,"byte_end":139513,"line_start":541,"line_end":541,"column_start":5,"column_end":26},"name":"ShaderReadOnlyOptimal","qualname":"::image::Layout::ShaderReadOnlyOptimal","value":"Layout::ShaderReadOnlyOptimal","parent":{"krate":0,"index":7694},"children":[],"decl_id":null,"docs":" Must only be used as a read-only image in a shader.\n","sig":null,"attributes":[{"value":"/ Must only be used as a read-only image in a shader.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":139432,"byte_end":139487,"line_start":540,"line_end":540,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7705},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":139583,"byte_end":139601,"line_start":543,"line_end":543,"column_start":5,"column_end":23},"name":"TransferSrcOptimal","qualname":"::image::Layout::TransferSrcOptimal","value":"Layout::TransferSrcOptimal","parent":{"krate":0,"index":7694},"children":[],"decl_id":null,"docs":" Must only be used as the source for a transfer command.\n","sig":null,"attributes":[{"value":"/ Must only be used as the source for a transfer command.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":139519,"byte_end":139578,"line_start":542,"line_end":542,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7707},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":139676,"byte_end":139694,"line_start":545,"line_end":545,"column_start":5,"column_end":23},"name":"TransferDstOptimal","qualname":"::image::Layout::TransferDstOptimal","value":"Layout::TransferDstOptimal","parent":{"krate":0,"index":7694},"children":[],"decl_id":null,"docs":" Must only be used as the destination for a transfer command.\n","sig":null,"attributes":[{"value":"/ Must only be used as the destination for a transfer command.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":139607,"byte_end":139671,"line_start":544,"line_end":544,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7709},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":139958,"byte_end":139967,"line_start":550,"line_end":550,"column_start":5,"column_end":14},"name":"Undefined","qualname":"::image::Layout::Undefined","value":"Layout::Undefined","parent":{"krate":0,"index":7694},"children":[],"decl_id":null,"docs":" No layout, does not support device access.  Only valid as a\n source layout when transforming data to a specific destination\n layout or initializing data.  Does NOT guarentee that the contents\n of the source buffer are preserved.\n","sig":null,"attributes":[{"value":"/ No layout, does not support device access.  Only valid as a","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":139700,"byte_end":139763,"line_start":546,"line_end":546,"column_start":5,"column_end":68}},{"value":"/ source layout when transforming data to a specific destination","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":139768,"byte_end":139834,"line_start":547,"line_end":547,"column_start":5,"column_end":71}},{"value":"/ layout or initializing data.  Does NOT guarentee that the contents","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":139839,"byte_end":139909,"line_start":548,"line_end":548,"column_start":5,"column_end":75}},{"value":"/ of the source buffer are preserved.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":139914,"byte_end":139953,"line_start":549,"line_end":549,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7711},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":140080,"byte_end":140094,"line_start":553,"line_end":553,"column_start":5,"column_end":19},"name":"Preinitialized","qualname":"::image::Layout::Preinitialized","value":"Layout::Preinitialized","parent":{"krate":0,"index":7694},"children":[],"decl_id":null,"docs":" Like `Undefined`, but does guarentee that the contents of the source\n buffer are preserved.\n","sig":null,"attributes":[{"value":"/ Like `Undefined`, but does guarentee that the contents of the source","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":139973,"byte_end":140045,"line_start":551,"line_end":551,"column_start":5,"column_end":77}},{"value":"/ buffer are preserved.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":140050,"byte_end":140075,"line_start":552,"line_end":552,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7713},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":140176,"byte_end":140183,"line_start":555,"line_end":555,"column_start":5,"column_end":12},"name":"Present","qualname":"::image::Layout::Present","value":"Layout::Present","parent":{"krate":0,"index":7694},"children":[],"decl_id":null,"docs":" The layout that an image must be in to be presented to the display.\n","sig":null,"attributes":[{"value":"/ The layout that an image must be in to be presented to the display.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":140100,"byte_end":140171,"line_start":554,"line_end":554,"column_start":5,"column_end":76}}]},{"kind":"Enum","id":{"krate":0,"index":7694},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":138998,"byte_end":139004,"line_start":530,"line_end":530,"column_start":10,"column_end":16},"name":"Layout","qualname":"::image::Layout","value":"pub enum Layout {\n    General,\n    ColorAttachmentOptimal,\n    DepthStencilAttachmentOptimal,\n    DepthStencilReadOnlyOptimal,\n    ShaderReadOnlyOptimal,\n    TransferSrcOptimal,\n    TransferDstOptimal,\n    Undefined,\n    Preinitialized,\n    Present,\n}","parent":null,"children":[{"krate":0,"index":7695},{"krate":0,"index":7697},{"krate":0,"index":7699},{"krate":0,"index":7701},{"krate":0,"index":7703},{"krate":0,"index":7705},{"krate":0,"index":7707},{"krate":0,"index":7709},{"krate":0,"index":7711},{"krate":0,"index":7713}],"decl_id":null,"docs":" Specifies options for how memory for an image is arranged.\n These are hints to the GPU driver and may or may not have actual\n performance effects, but describe constraints on how the data\n may be used that a program *must* obey. They do not specify\n how channel values or such are laid out in memory; the actual\n image data is considered opaque.","sig":null,"attributes":[{"value":"/ Specifies options for how memory for an image is arranged.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":138368,"byte_end":138430,"line_start":520,"line_end":520,"column_start":1,"column_end":63}},{"value":"/ These are hints to the GPU driver and may or may not have actual","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":138431,"byte_end":138499,"line_start":521,"line_end":521,"column_start":1,"column_end":69}},{"value":"/ performance effects, but describe constraints on how the data","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":138500,"byte_end":138565,"line_start":522,"line_end":522,"column_start":1,"column_end":66}},{"value":"/ may be used that a program *must* obey. They do not specify","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":138566,"byte_end":138629,"line_start":523,"line_end":523,"column_start":1,"column_end":64}},{"value":"/ how channel values or such are laid out in memory; the actual","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":138630,"byte_end":138695,"line_start":524,"line_end":524,"column_start":1,"column_end":66}},{"value":"/ image data is considered opaque.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":138696,"byte_end":138732,"line_start":525,"line_end":525,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":138733,"byte_end":138736,"line_start":526,"line_end":526,"column_start":1,"column_end":4}},{"value":"/ Details may be found in [the Vulkan spec](https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#resources-image-layouts)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":138737,"byte_end":138874,"line_start":527,"line_end":527,"column_start":1,"column_end":138}}]},{"kind":"Struct","id":{"krate":0,"index":7729},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":140444,"byte_end":140450,"line_start":567,"line_end":567,"column_start":16,"column_end":22},"name":"Access","qualname":"::image::Access","value":"Access {  }","parent":null,"children":[{"krate":0,"index":7730}],"decl_id":null,"docs":" Bitflags to describe how memory in an image or buffer can be accessed.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7774},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":140550,"byte_end":140571,"line_start":569,"line_end":569,"column_start":15,"column_end":36},"name":"INPUT_ATTACHMENT_READ","qualname":"::image::Access::INPUT_ATTACHMENT_READ","value":"Access","parent":{"krate":0,"index":7773},"children":[],"decl_id":null,"docs":" Read access to an input attachment from within a fragment shader.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7775},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":140696,"byte_end":140707,"line_start":571,"line_end":571,"column_start":15,"column_end":26},"name":"SHADER_READ","qualname":"::image::Access::SHADER_READ","value":"Access","parent":{"krate":0,"index":7773},"children":[],"decl_id":null,"docs":" Read-only state for SRV access, or combine with `SHADER_WRITE` to have r/w access to UAV.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7776},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":140840,"byte_end":140852,"line_start":574,"line_end":574,"column_start":15,"column_end":27},"name":"SHADER_WRITE","qualname":"::image::Access::SHADER_WRITE","value":"Access","parent":{"krate":0,"index":7773},"children":[],"decl_id":null,"docs":" Writeable state for UAV access.\n Combine with `SHADER_READ` to have r/w access to UAV.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7777},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":140954,"byte_end":140975,"line_start":576,"line_end":576,"column_start":15,"column_end":36},"name":"COLOR_ATTACHMENT_READ","qualname":"::image::Access::COLOR_ATTACHMENT_READ","value":"Access","parent":{"krate":0,"index":7773},"children":[],"decl_id":null,"docs":" Read state but can only be combined with `COLOR_ATTACHMENT_WRITE`.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7778},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":141077,"byte_end":141099,"line_start":578,"line_end":578,"column_start":15,"column_end":37},"name":"COLOR_ATTACHMENT_WRITE","qualname":"::image::Access::COLOR_ATTACHMENT_WRITE","value":"Access","parent":{"krate":0,"index":7773},"children":[],"decl_id":null,"docs":" Write-only state but can be combined with `COLOR_ATTACHMENT_READ`.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7779},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":141210,"byte_end":141239,"line_start":580,"line_end":580,"column_start":15,"column_end":44},"name":"DEPTH_STENCIL_ATTACHMENT_READ","qualname":"::image::Access::DEPTH_STENCIL_ATTACHMENT_READ","value":"Access","parent":{"krate":0,"index":7773},"children":[],"decl_id":null,"docs":" Read access to a depth/stencil attachment in a depth or stencil operation.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7780},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":141351,"byte_end":141381,"line_start":582,"line_end":582,"column_start":15,"column_end":45},"name":"DEPTH_STENCIL_ATTACHMENT_WRITE","qualname":"::image::Access::DEPTH_STENCIL_ATTACHMENT_WRITE","value":"Access","parent":{"krate":0,"index":7773},"children":[],"decl_id":null,"docs":" Write access to a depth/stencil attachment in a depth or stencil operation.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7781},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":141464,"byte_end":141477,"line_start":584,"line_end":584,"column_start":15,"column_end":28},"name":"TRANSFER_READ","qualname":"::image::Access::TRANSFER_READ","value":"Access","parent":{"krate":0,"index":7773},"children":[],"decl_id":null,"docs":" Read access to the buffer in a copy operation.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7782},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":141561,"byte_end":141575,"line_start":586,"line_end":586,"column_start":15,"column_end":29},"name":"TRANSFER_WRITE","qualname":"::image::Access::TRANSFER_WRITE","value":"Access","parent":{"krate":0,"index":7773},"children":[],"decl_id":null,"docs":" Write access to the buffer in a copy operation.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7783},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":141684,"byte_end":141693,"line_start":588,"line_end":588,"column_start":15,"column_end":24},"name":"HOST_READ","qualname":"::image::Access::HOST_READ","value":"Access","parent":{"krate":0,"index":7773},"children":[],"decl_id":null,"docs":" Read access for raw memory to be accessed by the host system (ie, CPU).\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7784},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":141793,"byte_end":141803,"line_start":590,"line_end":590,"column_start":15,"column_end":25},"name":"HOST_WRITE","qualname":"::image::Access::HOST_WRITE","value":"Access","parent":{"krate":0,"index":7773},"children":[],"decl_id":null,"docs":" Write access for raw memory to be accessed by the host system.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7785},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":142021,"byte_end":142032,"line_start":594,"line_end":594,"column_start":15,"column_end":26},"name":"MEMORY_READ","qualname":"::image::Access::MEMORY_READ","value":"Access","parent":{"krate":0,"index":7773},"children":[],"decl_id":null,"docs":" Read access for memory to be accessed by a non-specific entity.  This may\n be the host system, or it may be something undefined or specified by an\n extension.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7786},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":142134,"byte_end":142146,"line_start":596,"line_end":596,"column_start":15,"column_end":27},"name":"MEMORY_WRITE","qualname":"::image::Access::MEMORY_WRITE","value":"Access","parent":{"krate":0,"index":7773},"children":[],"decl_id":null,"docs":" Write access for memory to be accessed by a non-specific entity.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":548},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":142243,"byte_end":142248,"line_start":601,"line_end":601,"column_start":10,"column_end":15},"name":"State","qualname":"::image::State","value":"(Access, Layout)","parent":null,"children":[],"decl_id":null,"docs":" Image state, combining access methods and the image's layout.\n","sig":null,"attributes":[{"value":"/ Image state, combining access methods and the image's layout.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":142168,"byte_end":142233,"line_start":600,"line_end":600,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":7871},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":142447,"byte_end":142458,"line_start":606,"line_end":606,"column_start":12,"column_end":23},"name":"Subresource","qualname":"::image::Subresource","value":"Subresource { aspects, level, layer }","parent":null,"children":[{"krate":0,"index":7872},{"krate":0,"index":7873},{"krate":0,"index":7874}],"decl_id":null,"docs":" Selector of a concrete subresource in an image.\n","sig":null,"attributes":[{"value":"/ Selector of a concrete subresource in an image.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":142270,"byte_end":142321,"line_start":603,"line_end":603,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":7872},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":142515,"byte_end":142522,"line_start":608,"line_end":608,"column_start":9,"column_end":16},"name":"aspects","qualname":"::image::Subresource::aspects","value":"format::Aspects","parent":{"krate":0,"index":7871},"children":[],"decl_id":null,"docs":" Included aspects: color/depth/stencil\n","sig":null,"attributes":[{"value":"/ Included aspects: color/depth/stencil","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":142465,"byte_end":142506,"line_start":607,"line_end":607,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":7873},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":142579,"byte_end":142584,"line_start":610,"line_end":610,"column_start":9,"column_end":14},"name":"level","qualname":"::image::Subresource::level","value":"u8","parent":{"krate":0,"index":7871},"children":[],"decl_id":null,"docs":" Selected mipmap level\n","sig":null,"attributes":[{"value":"/ Selected mipmap level","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":142545,"byte_end":142570,"line_start":609,"line_end":609,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":7874},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":142630,"byte_end":142635,"line_start":612,"line_end":612,"column_start":9,"column_end":14},"name":"layer","qualname":"::image::Subresource::layer","value":"u16","parent":{"krate":0,"index":7871},"children":[],"decl_id":null,"docs":" Selected array level\n","sig":null,"attributes":[{"value":"/ Selected array level","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":142597,"byte_end":142621,"line_start":611,"line_end":611,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":7890},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":142833,"byte_end":142850,"line_start":618,"line_end":618,"column_start":12,"column_end":29},"name":"SubresourceLayers","qualname":"::image::SubresourceLayers","value":"SubresourceLayers { aspects, level, layers }","parent":null,"children":[{"krate":0,"index":7891},{"krate":0,"index":7892},{"krate":0,"index":7893}],"decl_id":null,"docs":" A subset of resource layers contained within an image's level.\n","sig":null,"attributes":[{"value":"/ A subset of resource layers contained within an image's level.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":142647,"byte_end":142713,"line_start":615,"line_end":615,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":7891},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":142907,"byte_end":142914,"line_start":620,"line_end":620,"column_start":9,"column_end":16},"name":"aspects","qualname":"::image::SubresourceLayers::aspects","value":"format::Aspects","parent":{"krate":0,"index":7890},"children":[],"decl_id":null,"docs":" Included aspects: color/depth/stencil\n","sig":null,"attributes":[{"value":"/ Included aspects: color/depth/stencil","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":142857,"byte_end":142898,"line_start":619,"line_end":619,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":7892},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":142971,"byte_end":142976,"line_start":622,"line_end":622,"column_start":9,"column_end":14},"name":"level","qualname":"::image::SubresourceLayers::level","value":"u8","parent":{"krate":0,"index":7890},"children":[],"decl_id":null,"docs":" Selected mipmap level\n","sig":null,"attributes":[{"value":"/ Selected mipmap level","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":142937,"byte_end":142962,"line_start":621,"line_end":621,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":7893},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":143023,"byte_end":143029,"line_start":624,"line_end":624,"column_start":9,"column_end":15},"name":"layers","qualname":"::image::SubresourceLayers::layers","value":"std::ops::Range<u16>","parent":{"krate":0,"index":7890},"children":[],"decl_id":null,"docs":" Included array levels\n","sig":null,"attributes":[{"value":"/ Included array levels","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":142989,"byte_end":143014,"line_start":623,"line_end":623,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":7908},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":143229,"byte_end":143245,"line_start":630,"line_end":630,"column_start":12,"column_end":28},"name":"SubresourceRange","qualname":"::image::SubresourceRange","value":"SubresourceRange { aspects, level_start, level_count, layer_start, layer_count }","parent":null,"children":[{"krate":0,"index":7909},{"krate":0,"index":7910},{"krate":0,"index":7911},{"krate":0,"index":7912},{"krate":0,"index":7913}],"decl_id":null,"docs":" A subset of resources contained within an image.\n","sig":null,"attributes":[{"value":"/ A subset of resources contained within an image.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":143048,"byte_end":143100,"line_start":627,"line_end":627,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":7909},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":143302,"byte_end":143309,"line_start":632,"line_end":632,"column_start":9,"column_end":16},"name":"aspects","qualname":"::image::SubresourceRange::aspects","value":"format::Aspects","parent":{"krate":0,"index":7908},"children":[],"decl_id":null,"docs":" Included aspects: color/depth/stencil\n","sig":null,"attributes":[{"value":"/ Included aspects: color/depth/stencil","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":143252,"byte_end":143293,"line_start":631,"line_end":631,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":7910},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":143383,"byte_end":143394,"line_start":634,"line_end":634,"column_start":9,"column_end":20},"name":"level_start","qualname":"::image::SubresourceRange::level_start","value":"u8","parent":{"krate":0,"index":7908},"children":[],"decl_id":null,"docs":" First mipmap level in this subresource\n","sig":null,"attributes":[{"value":"/ First mipmap level in this subresource","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":143332,"byte_end":143374,"line_start":633,"line_end":633,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":7911},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":143574,"byte_end":143585,"line_start":639,"line_end":639,"column_start":9,"column_end":20},"name":"level_count","qualname":"::image::SubresourceRange::level_count","value":"std::option::Option<u8>","parent":{"krate":0,"index":7908},"children":[],"decl_id":null,"docs":" Number of sequential levels in this subresource.","sig":null,"attributes":[{"value":"/ Number of sequential levels in this subresource.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":143407,"byte_end":143459,"line_start":635,"line_end":635,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":143464,"byte_end":143467,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ A value of `None` indicates the subresource contains","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":143472,"byte_end":143528,"line_start":637,"line_end":637,"column_start":5,"column_end":61}},{"value":"/ all of the remaining levels.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":143533,"byte_end":143565,"line_start":638,"line_end":638,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":7912},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":143650,"byte_end":143661,"line_start":641,"line_end":641,"column_start":9,"column_end":20},"name":"layer_start","qualname":"::image::SubresourceRange::layer_start","value":"u16","parent":{"krate":0,"index":7908},"children":[],"decl_id":null,"docs":" First layer in this subresource\n","sig":null,"attributes":[{"value":"/ First layer in this subresource","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":143606,"byte_end":143641,"line_start":640,"line_end":640,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":7913},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":143841,"byte_end":143852,"line_start":646,"line_end":646,"column_start":9,"column_end":20},"name":"layer_count","qualname":"::image::SubresourceRange::layer_count","value":"std::option::Option<u16>","parent":{"krate":0,"index":7908},"children":[],"decl_id":null,"docs":" Number of sequential layers in this subresource.","sig":null,"attributes":[{"value":"/ Number of sequential layers in this subresource.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":143674,"byte_end":143726,"line_start":642,"line_end":642,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":143731,"byte_end":143734,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ A value of `None` indicates the subresource contains","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":143739,"byte_end":143795,"line_start":644,"line_end":644,"column_start":5,"column_end":61}},{"value":"/ all of the remaining layers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":143800,"byte_end":143832,"line_start":645,"line_end":645,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":144354,"byte_end":144373,"line_start":663,"line_end":663,"column_start":12,"column_end":31},"name":"resolve_level_count","qualname":"<SubresourceRange>::resolve_level_count","value":"pub fn resolve_level_count(&Self, Level) -> Level","parent":null,"children":[],"decl_id":null,"docs":" Resolve the concrete level count based on the total number of layers in an image.\n","sig":null,"attributes":[{"value":"/ Resolve the concrete level count based on the total number of layers in an image.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":144257,"byte_end":144342,"line_start":662,"line_end":662,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":144574,"byte_end":144593,"line_start":668,"line_end":668,"column_start":12,"column_end":31},"name":"resolve_layer_count","qualname":"<SubresourceRange>::resolve_layer_count","value":"pub fn resolve_layer_count(&Self, Layer) -> Layer","parent":null,"children":[],"decl_id":null,"docs":" Resolve the concrete layer count based on the total number of layer in an image.\n","sig":null,"attributes":[{"value":"/ Resolve the concrete layer count based on the total number of layer in an image.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":144478,"byte_end":144562,"line_start":667,"line_end":667,"column_start":5,"column_end":89}}]},{"kind":"Struct","id":{"krate":0,"index":7930},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":144850,"byte_end":144866,"line_start":676,"line_end":676,"column_start":12,"column_end":28},"name":"FormatProperties","qualname":"::image::FormatProperties","value":"FormatProperties { max_extent, max_levels, max_layers, sample_count_mask, max_resource_size }","parent":null,"children":[{"krate":0,"index":7931},{"krate":0,"index":7932},{"krate":0,"index":7933},{"krate":0,"index":7934},{"krate":0,"index":7935}],"decl_id":null,"docs":" Image format properties.\n","sig":null,"attributes":[{"value":"/ Image format properties.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":144696,"byte_end":144724,"line_start":673,"line_end":673,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":7931},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":144901,"byte_end":144911,"line_start":678,"line_end":678,"column_start":9,"column_end":19},"name":"max_extent","qualname":"::image::FormatProperties::max_extent","value":"image::Extent","parent":{"krate":0,"index":7930},"children":[],"decl_id":null,"docs":" Maximum extent.\n","sig":null,"attributes":[{"value":"/ Maximum extent.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":144873,"byte_end":144892,"line_start":677,"line_end":677,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":7932},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":144966,"byte_end":144976,"line_start":680,"line_end":680,"column_start":9,"column_end":19},"name":"max_levels","qualname":"::image::FormatProperties::max_levels","value":"u8","parent":{"krate":0,"index":7930},"children":[],"decl_id":null,"docs":" Max number of mipmap levels.\n","sig":null,"attributes":[{"value":"/ Max number of mipmap levels.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":144925,"byte_end":144957,"line_start":679,"line_end":679,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":7933},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":145029,"byte_end":145039,"line_start":682,"line_end":682,"column_start":9,"column_end":19},"name":"max_layers","qualname":"::image::FormatProperties::max_layers","value":"u16","parent":{"krate":0,"index":7930},"children":[],"decl_id":null,"docs":" Max number of array layers.\n","sig":null,"attributes":[{"value":"/ Max number of array layers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":144989,"byte_end":145020,"line_start":681,"line_end":681,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":7934},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":145101,"byte_end":145118,"line_start":684,"line_end":684,"column_start":9,"column_end":26},"name":"sample_count_mask","qualname":"::image::FormatProperties::sample_count_mask","value":"u8","parent":{"krate":0,"index":7930},"children":[],"decl_id":null,"docs":" Bit mask of supported sample counts.\n","sig":null,"attributes":[{"value":"/ Bit mask of supported sample counts.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":145052,"byte_end":145092,"line_start":683,"line_end":683,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":7935},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":145187,"byte_end":145204,"line_start":686,"line_end":686,"column_start":9,"column_end":26},"name":"max_resource_size","qualname":"::image::FormatProperties::max_resource_size","value":"usize","parent":{"krate":0,"index":7930},"children":[],"decl_id":null,"docs":" Maximum size of the resource in bytes.\n","sig":null,"attributes":[{"value":"/ Maximum size of the resource in bytes.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":145136,"byte_end":145178,"line_start":685,"line_end":685,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":7951},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":145377,"byte_end":145397,"line_start":692,"line_end":692,"column_start":12,"column_end":32},"name":"SubresourceFootprint","qualname":"::image::SubresourceFootprint","value":"SubresourceFootprint { slice, row_pitch, array_pitch, depth_pitch }","parent":null,"children":[{"krate":0,"index":7952},{"krate":0,"index":7953},{"krate":0,"index":7954},{"krate":0,"index":7955}],"decl_id":null,"docs":" Footprint of a subresource in memory.\n","sig":null,"attributes":[{"value":"/ Footprint of a subresource in memory.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":145216,"byte_end":145257,"line_start":689,"line_end":689,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":7952},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":145456,"byte_end":145461,"line_start":694,"line_end":694,"column_start":9,"column_end":14},"name":"slice","qualname":"::image::SubresourceFootprint::slice","value":"std::ops::Range<u64>","parent":{"krate":0,"index":7951},"children":[],"decl_id":null,"docs":" Byte slice occupied by the subresource.\n","sig":null,"attributes":[{"value":"/ Byte slice occupied by the subresource.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":145404,"byte_end":145447,"line_start":693,"line_end":693,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":7953},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":145525,"byte_end":145534,"line_start":696,"line_end":696,"column_start":9,"column_end":18},"name":"row_pitch","qualname":"::image::SubresourceFootprint::row_pitch","value":"u64","parent":{"krate":0,"index":7951},"children":[],"decl_id":null,"docs":" Byte distance between rows.\n","sig":null,"attributes":[{"value":"/ Byte distance between rows.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":145485,"byte_end":145516,"line_start":695,"line_end":695,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":7954},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":145599,"byte_end":145610,"line_start":698,"line_end":698,"column_start":9,"column_end":20},"name":"array_pitch","qualname":"::image::SubresourceFootprint::array_pitch","value":"u64","parent":{"krate":0,"index":7951},"children":[],"decl_id":null,"docs":" Byte distance between array layers.\n","sig":null,"attributes":[{"value":"/ Byte distance between array layers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":145551,"byte_end":145590,"line_start":697,"line_end":697,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":7955},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":145675,"byte_end":145686,"line_start":700,"line_end":700,"column_start":9,"column_end":20},"name":"depth_pitch","qualname":"::image::SubresourceFootprint::depth_pitch","value":"u64","parent":{"krate":0,"index":7951},"children":[],"decl_id":null,"docs":" Byte distance between depth slices.\n","sig":null,"attributes":[{"value":"/ Byte distance between depth slices.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":145627,"byte_end":145666,"line_start":699,"line_end":699,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":7970},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":145866,"byte_end":145887,"line_start":706,"line_end":706,"column_start":12,"column_end":33},"name":"FramebufferAttachment","qualname":"::image::FramebufferAttachment","value":"FramebufferAttachment { usage, view_caps, format }","parent":null,"children":[{"krate":0,"index":7971},{"krate":0,"index":7972},{"krate":0,"index":7973}],"decl_id":null,"docs":" Description of a framebuffer attachment.\n","sig":null,"attributes":[{"value":"/ Description of a framebuffer attachment.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":145702,"byte_end":145746,"line_start":703,"line_end":703,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":7971},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":145943,"byte_end":145948,"line_start":708,"line_end":708,"column_start":9,"column_end":14},"name":"usage","qualname":"::image::FramebufferAttachment::usage","value":"image::Usage","parent":{"krate":0,"index":7970},"children":[],"decl_id":null,"docs":" Usage that an image is created with.\n","sig":null,"attributes":[{"value":"/ Usage that an image is created with.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":145894,"byte_end":145934,"line_start":707,"line_end":707,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":7972},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":146022,"byte_end":146031,"line_start":710,"line_end":710,"column_start":9,"column_end":18},"name":"view_caps","qualname":"::image::FramebufferAttachment::view_caps","value":"image::ViewCapabilities","parent":{"krate":0,"index":7970},"children":[],"decl_id":null,"docs":" View capabilities that an image is created with.\n","sig":null,"attributes":[{"value":"/ View capabilities that an image is created with.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":145961,"byte_end":146013,"line_start":709,"line_end":709,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":7973},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":146119,"byte_end":146125,"line_start":713,"line_end":713,"column_start":9,"column_end":15},"name":"format","qualname":"::image::FramebufferAttachment::format","value":"format::Format","parent":{"krate":0,"index":7970},"children":[],"decl_id":null,"docs":" The image view format.\n","sig":null,"attributes":[{"value":"/ The image view format.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":146084,"byte_end":146110,"line_start":712,"line_end":712,"column_start":5,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":554},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"memory","qualname":"::memory","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","parent":null,"children":[{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":559},{"krate":0,"index":562},{"krate":0,"index":565},{"krate":0,"index":568},{"krate":0,"index":7988},{"krate":0,"index":7990},{"krate":0,"index":7991},{"krate":0,"index":7992},{"krate":0,"index":7995},{"krate":0,"index":7996},{"krate":0,"index":7998},{"krate":0,"index":8000},{"krate":0,"index":8002},{"krate":0,"index":8004},{"krate":0,"index":8007},{"krate":0,"index":8016},{"krate":0,"index":8018},{"krate":0,"index":8020},{"krate":0,"index":8022},{"krate":0,"index":8024},{"krate":0,"index":8035},{"krate":0,"index":8038},{"krate":0,"index":8040},{"krate":0,"index":8043},{"krate":0,"index":8045},{"krate":0,"index":8048},{"krate":0,"index":8050},{"krate":0,"index":8053},{"krate":0,"index":8055},{"krate":0,"index":8058},{"krate":0,"index":8061},{"krate":0,"index":8090},{"krate":0,"index":8092},{"krate":0,"index":8093},{"krate":0,"index":8094},{"krate":0,"index":8097},{"krate":0,"index":8098},{"krate":0,"index":8100},{"krate":0,"index":8102},{"krate":0,"index":8104},{"krate":0,"index":8106},{"krate":0,"index":8109},{"krate":0,"index":8114},{"krate":0,"index":8116},{"krate":0,"index":8118},{"krate":0,"index":8120},{"krate":0,"index":8122},{"krate":0,"index":8129},{"krate":0,"index":8132},{"krate":0,"index":8134},{"krate":0,"index":8137},{"krate":0,"index":8139},{"krate":0,"index":8142},{"krate":0,"index":8144},{"krate":0,"index":8147},{"krate":0,"index":8149},{"krate":0,"index":8152},{"krate":0,"index":8155},{"krate":0,"index":8172},{"krate":0,"index":8174},{"krate":0,"index":8175},{"krate":0,"index":8176},{"krate":0,"index":8179},{"krate":0,"index":8180},{"krate":0,"index":8182},{"krate":0,"index":8184},{"krate":0,"index":8186},{"krate":0,"index":8188},{"krate":0,"index":8191},{"krate":0,"index":8198},{"krate":0,"index":8200},{"krate":0,"index":8202},{"krate":0,"index":8204},{"krate":0,"index":8206},{"krate":0,"index":8215},{"krate":0,"index":8218},{"krate":0,"index":8220},{"krate":0,"index":8223},{"krate":0,"index":8225},{"krate":0,"index":8228},{"krate":0,"index":8230},{"krate":0,"index":8233},{"krate":0,"index":8235},{"krate":0,"index":8238},{"krate":0,"index":8241},{"krate":0,"index":8264},{"krate":0,"index":8283},{"krate":0,"index":8287},{"krate":0,"index":571},{"krate":0,"index":8291},{"krate":0,"index":8295},{"krate":0,"index":8297},{"krate":0,"index":8298},{"krate":0,"index":8300},{"krate":0,"index":8303},{"krate":0,"index":8305},{"krate":0,"index":8307},{"krate":0,"index":8309},{"krate":0,"index":8312},{"krate":0,"index":8313},{"krate":0,"index":8316},{"krate":0,"index":8317},{"krate":0,"index":575}],"decl_id":null,"docs":" Types to describe the properties of memory allocated for graphics resources.\n","sig":null,"attributes":[{"value":"/ Types to describe the properties of memory allocated for graphics resources.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":146146,"byte_end":146226,"line_start":1,"line_end":1,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":7988},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":146418,"byte_end":146428,"line_start":9,"line_end":9,"column_start":16,"column_end":26},"name":"Properties","qualname":"::memory::Properties","value":"Properties {  }","parent":null,"children":[{"krate":0,"index":7989}],"decl_id":null,"docs":" Memory property flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8025},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":146494,"byte_end":146506,"line_start":11,"line_end":11,"column_start":15,"column_end":27},"name":"DEVICE_LOCAL","qualname":"::memory::Properties::DEVICE_LOCAL","value":"Properties","parent":{"krate":0,"index":8024},"children":[],"decl_id":null,"docs":" Device local memory on the GPU.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8026},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":146668,"byte_end":146679,"line_start":16,"line_end":16,"column_start":15,"column_end":26},"name":"CPU_VISIBLE","qualname":"::memory::Properties::CPU_VISIBLE","value":"Properties","parent":{"krate":0,"index":8024},"children":[],"decl_id":null,"docs":" Host visible memory can be accessed by the CPU.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8027},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":146804,"byte_end":146812,"line_start":21,"line_end":21,"column_start":15,"column_end":23},"name":"COHERENT","qualname":"::memory::Properties::COHERENT","value":"Properties","parent":{"krate":0,"index":8024},"children":[],"decl_id":null,"docs":" CPU-GPU coherent.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8028},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":146872,"byte_end":146882,"line_start":24,"line_end":24,"column_start":15,"column_end":25},"name":"CPU_CACHED","qualname":"::memory::Properties::CPU_CACHED","value":"Properties","parent":{"krate":0,"index":8024},"children":[],"decl_id":null,"docs":" Cached memory by the CPU\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8029},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":147024,"byte_end":147040,"line_start":28,"line_end":28,"column_start":15,"column_end":31},"name":"LAZILY_ALLOCATED","qualname":"::memory::Properties::LAZILY_ALLOCATED","value":"Properties","parent":{"krate":0,"index":8024},"children":[],"decl_id":null,"docs":" Memory that may be lazily allocated as needed on the GPU\n and *must not* be visible to the CPU.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8090},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":147179,"byte_end":147188,"line_start":35,"line_end":35,"column_start":16,"column_end":25},"name":"HeapFlags","qualname":"::memory::HeapFlags","value":"HeapFlags {  }","parent":null,"children":[{"krate":0,"index":8091}],"decl_id":null,"docs":" Memory heap flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8123},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":147254,"byte_end":147266,"line_start":37,"line_end":37,"column_start":15,"column_end":27},"name":"DEVICE_LOCAL","qualname":"::memory::HeapFlags::DEVICE_LOCAL","value":"HeapFlags","parent":{"krate":0,"index":8122},"children":[],"decl_id":null,"docs":" Device local memory on the GPU.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8172},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":147411,"byte_end":147423,"line_start":44,"line_end":44,"column_start":16,"column_end":28},"name":"Dependencies","qualname":"::memory::Dependencies","value":"Dependencies {  }","parent":null,"children":[{"krate":0,"index":8173}],"decl_id":null,"docs":" Barrier dependency flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8207},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":147514,"byte_end":147523,"line_start":46,"line_end":46,"column_start":15,"column_end":24},"name":"BY_REGION","qualname":"::memory::Dependencies::BY_REGION","value":"Dependencies","parent":{"krate":0,"index":8206},"children":[],"decl_id":null,"docs":" Specifies the memory dependency to be framebuffer-local.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8208},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":147560,"byte_end":147570,"line_start":48,"line_end":48,"column_start":15,"column_end":25},"name":"VIEW_LOCAL","qualname":"::memory::Dependencies::VIEW_LOCAL","value":"Dependencies","parent":{"krate":0,"index":8206},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8209},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":147606,"byte_end":147618,"line_start":50,"line_end":50,"column_start":15,"column_end":27},"name":"DEVICE_GROUP","qualname":"::memory::Dependencies::DEVICE_GROUP","value":"Dependencies","parent":{"krate":0,"index":8206},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8267},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":148076,"byte_end":148086,"line_start":62,"line_end":62,"column_start":5,"column_end":15},"name":"AllBuffers","qualname":"::memory::Barrier::AllBuffers","value":"Barrier::AllBuffers(Range<buffer::Access>)","parent":{"krate":0,"index":8264},"children":[],"decl_id":null,"docs":" Applies the given access flags to all buffers in the range.\n","sig":null,"attributes":[{"value":"/ Applies the given access flags to all buffers in the range.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":148008,"byte_end":148071,"line_start":61,"line_end":61,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8270},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":148182,"byte_end":148191,"line_start":64,"line_end":64,"column_start":5,"column_end":14},"name":"AllImages","qualname":"::memory::Barrier::AllImages","value":"Barrier::AllImages(Range<image::Access>)","parent":{"krate":0,"index":8264},"children":[],"decl_id":null,"docs":" Applies the given access flags to all images in the range.\n","sig":null,"attributes":[{"value":"/ Applies the given access flags to all images in the range.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":148115,"byte_end":148177,"line_start":63,"line_end":63,"column_start":5,"column_end":67}}]},{"kind":"StructVariant","id":{"krate":0,"index":8273},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":148277,"byte_end":148283,"line_start":66,"line_end":66,"column_start":5,"column_end":11},"name":"Buffer","qualname":"::memory::Barrier::Buffer","value":"Barrier::Buffer { states, target, range, families }","parent":{"krate":0,"index":8264},"children":[],"decl_id":null,"docs":" A memory barrier that defines access to a buffer.\n","sig":null,"attributes":[{"value":"/ A memory barrier that defines access to a buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":148219,"byte_end":148272,"line_start":65,"line_end":65,"column_start":5,"column_end":58}}]},{"kind":"StructVariant","id":{"krate":0,"index":8278},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":148941,"byte_end":148946,"line_start":78,"line_end":78,"column_start":5,"column_end":10},"name":"Image","qualname":"::memory::Barrier::Image","value":"Barrier::Image { states, target, range, families }","parent":{"krate":0,"index":8264},"children":[],"decl_id":null,"docs":" A memory barrier that defines access to (a subset of) an image.\n","sig":null,"attributes":[{"value":"/ A memory barrier that defines access to (a subset of) an image.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":148869,"byte_end":148936,"line_start":77,"line_end":77,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":8264},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":147978,"byte_end":147985,"line_start":60,"line_end":60,"column_start":10,"column_end":17},"name":"Barrier","qualname":"::memory::Barrier","value":"pub enum Barrier<'a, B: Backend> {\n    AllBuffers(Range<buffer::Access>),\n    AllImages(Range<image::Access>),\n    Buffer {\n        states: Range<buffer::State>,\n        target: &'a B::Buffer,\n        range: buffer::SubRange,\n        families: Option<Range<queue::QueueFamilyId>>,\n    },\n    Image {\n        states: Range<image::State>,\n        target: &'a B::Image,\n        range: image::SubresourceRange,\n        families: Option<Range<queue::QueueFamilyId>>,\n    },\n}","parent":null,"children":[{"krate":0,"index":8267},{"krate":0,"index":8270},{"krate":0,"index":8273},{"krate":0,"index":8278}],"decl_id":null,"docs":" A [memory barrier](https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-memory-barriers)\n type for either buffers or images.\n","sig":null,"attributes":[{"value":"/ A [memory barrier](https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-memory-barriers)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":147760,"byte_end":147882,"line_start":56,"line_end":56,"column_start":1,"column_end":123}},{"value":"/ type for either buffers or images.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":147883,"byte_end":147921,"line_start":57,"line_end":57,"column_start":1,"column_end":39}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":147922,"byte_end":147944,"line_start":58,"line_end":58,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":149692,"byte_end":149704,"line_start":93,"line_end":93,"column_start":12,"column_end":24},"name":"whole_buffer","qualname":"<Barrier>::whole_buffer","value":"pub fn whole_buffer(&'a B::Buffer, Range<buffer::State>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a barrier for the whole buffer between the given states.\n","sig":null,"attributes":[{"value":"/ Create a barrier for the whole buffer between the given states.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":149613,"byte_end":149680,"line_start":92,"line_end":92,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":8291},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":150029,"byte_end":150041,"line_start":105,"line_end":105,"column_start":12,"column_end":24},"name":"Requirements","qualname":"::memory::Requirements","value":"Requirements { size, alignment, type_mask }","parent":null,"children":[{"krate":0,"index":8292},{"krate":0,"index":8293},{"krate":0,"index":8294}],"decl_id":null,"docs":" Memory requirements for a certain resource (buffer/image).\n","sig":null,"attributes":[{"value":"/ Memory requirements for a certain resource (buffer/image).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":149925,"byte_end":149987,"line_start":103,"line_end":103,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":8292},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":150080,"byte_end":150084,"line_start":107,"line_end":107,"column_start":9,"column_end":13},"name":"size","qualname":"::memory::Requirements::size","value":"u64","parent":{"krate":0,"index":8291},"children":[],"decl_id":null,"docs":" Size in the memory.\n","sig":null,"attributes":[{"value":"/ Size in the memory.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":150048,"byte_end":150071,"line_start":106,"line_end":106,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":8293},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":150125,"byte_end":150134,"line_start":109,"line_end":109,"column_start":9,"column_end":18},"name":"alignment","qualname":"::memory::Requirements::alignment","value":"u64","parent":{"krate":0,"index":8291},"children":[],"decl_id":null,"docs":" Memory alignment.\n","sig":null,"attributes":[{"value":"/ Memory alignment.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":150095,"byte_end":150116,"line_start":108,"line_end":108,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":8294},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":150181,"byte_end":150190,"line_start":111,"line_end":111,"column_start":9,"column_end":18},"name":"type_mask","qualname":"::memory::Requirements::type_mask","value":"u32","parent":{"krate":0,"index":8291},"children":[],"decl_id":null,"docs":" Supported memory types.\n","sig":null,"attributes":[{"value":"/ Supported memory types.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":150145,"byte_end":150172,"line_start":110,"line_end":110,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":8300},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":150372,"byte_end":150379,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"Segment","qualname":"::memory::Segment","value":"Segment { offset, size }","parent":null,"children":[{"krate":0,"index":8301},{"krate":0,"index":8302}],"decl_id":null,"docs":" A linear segment within a memory block.\n","sig":null,"attributes":[{"value":"/ A linear segment within a memory block.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":150200,"byte_end":150243,"line_start":114,"line_end":114,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":8301},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":150421,"byte_end":150427,"line_start":119,"line_end":119,"column_start":9,"column_end":15},"name":"offset","qualname":"::memory::Segment::offset","value":"u64","parent":{"krate":0,"index":8300},"children":[],"decl_id":null,"docs":" Offset to the segment.\n","sig":null,"attributes":[{"value":"/ Offset to the segment.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":150386,"byte_end":150412,"line_start":118,"line_end":118,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":8302},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":150491,"byte_end":150495,"line_start":121,"line_end":121,"column_start":9,"column_end":13},"name":"size","qualname":"::memory::Segment::size","value":"std::option::Option<u64>","parent":{"krate":0,"index":8300},"children":[],"decl_id":null,"docs":" Size of the segment, or None if unbound.\n","sig":null,"attributes":[{"value":"/ Size of the segment, or None if unbound.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":150438,"byte_end":150482,"line_start":120,"line_end":120,"column_start":5,"column_end":49}}]},{"kind":"Const","id":{"krate":0,"index":576},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":150576,"byte_end":150579,"line_start":126,"line_end":126,"column_start":15,"column_end":18},"name":"ALL","qualname":"::memory::Segment::ALL","value":"Self","parent":{"krate":0,"index":575},"children":[],"decl_id":null,"docs":" All the memory available.\n","sig":null,"attributes":[{"value":"/ All the memory available.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":150532,"byte_end":150561,"line_start":125,"line_end":125,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":577},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pass","qualname":"::pass","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":582},{"krate":0,"index":585},{"krate":0,"index":588},{"krate":0,"index":591},{"krate":0,"index":594},{"krate":0,"index":8319},{"krate":0,"index":8326},{"krate":0,"index":8327},{"krate":0,"index":8329},{"krate":0,"index":8331},{"krate":0,"index":8334},{"krate":0,"index":8335},{"krate":0,"index":8337},{"krate":0,"index":8338},{"krate":0,"index":8340},{"krate":0,"index":8345},{"krate":0,"index":8346},{"krate":0,"index":8348},{"krate":0,"index":8350},{"krate":0,"index":8353},{"krate":0,"index":8354},{"krate":0,"index":8356},{"krate":0,"index":8357},{"krate":0,"index":597},{"krate":0,"index":8359},{"krate":0,"index":8362},{"krate":0,"index":8363},{"krate":0,"index":8365},{"krate":0,"index":8367},{"krate":0,"index":8370},{"krate":0,"index":8371},{"krate":0,"index":8373},{"krate":0,"index":8374},{"krate":0,"index":598},{"krate":0,"index":8377},{"krate":0,"index":8383},{"krate":0,"index":8385},{"krate":0,"index":8387},{"krate":0,"index":8390},{"krate":0,"index":8391},{"krate":0,"index":603},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":8394},{"krate":0,"index":8399},{"krate":0,"index":8401},{"krate":0,"index":8403},{"krate":0,"index":8406},{"krate":0,"index":8413},{"krate":0,"index":8416},{"krate":0,"index":8419},{"krate":0,"index":8424},{"krate":0,"index":609},{"krate":0,"index":613},{"krate":0,"index":617},{"krate":0,"index":620}],"decl_id":null,"docs":" Render pass handling.","sig":null,"attributes":[{"value":"/ Render pass handling.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":150647,"byte_end":150672,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":150673,"byte_end":150676,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A *render pass* represents a collection of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":150677,"byte_end":150723,"line_start":3,"line_end":3,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":150724,"byte_end":150727,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - [attachments][crate::pass::Attachment]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":150728,"byte_end":150772,"line_start":5,"line_end":5,"column_start":1,"column_end":45}},{"value":"/ - [subpasses][crate::pass::SubpassDesc]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":150773,"byte_end":150816,"line_start":6,"line_end":6,"column_start":1,"column_end":44}},{"value":"/ - [dependencies][crate::pass::SubpassDependency] between the subpasses","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":150817,"byte_end":150891,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":150892,"byte_end":150895,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ and describes how the attachments are used over the course of the subpasses.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":150896,"byte_end":150976,"line_start":9,"line_end":9,"column_start":1,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8320},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":151370,"byte_end":151374,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Load","qualname":"::pass::AttachmentLoadOp::Load","value":"AttachmentLoadOp::Load","parent":{"krate":0,"index":8319},"children":[],"decl_id":null,"docs":" Preserve existing content in the attachment.\n","sig":null,"attributes":[{"value":"/ Preserve existing content in the attachment.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":151317,"byte_end":151365,"line_start":18,"line_end":18,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8322},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":151410,"byte_end":151415,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"name":"Clear","qualname":"::pass::AttachmentLoadOp::Clear","value":"AttachmentLoadOp::Clear","parent":{"krate":0,"index":8319},"children":[],"decl_id":null,"docs":" Clear the attachment.\n","sig":null,"attributes":[{"value":"/ Clear the attachment.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":151380,"byte_end":151405,"line_start":20,"line_end":20,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8324},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":151467,"byte_end":151475,"line_start":23,"line_end":23,"column_start":5,"column_end":13},"name":"DontCare","qualname":"::pass::AttachmentLoadOp::DontCare","value":"AttachmentLoadOp::DontCare","parent":{"krate":0,"index":8319},"children":[],"decl_id":null,"docs":" Attachment content will be undefined.\n","sig":null,"attributes":[{"value":"/ Attachment content will be undefined.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":151421,"byte_end":151462,"line_start":22,"line_end":22,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":8319},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":151294,"byte_end":151310,"line_start":17,"line_end":17,"column_start":10,"column_end":26},"name":"AttachmentLoadOp","qualname":"::pass::AttachmentLoadOp","value":"pub enum AttachmentLoadOp { Load, Clear, DontCare, }","parent":null,"children":[{"krate":0,"index":8320},{"krate":0,"index":8322},{"krate":0,"index":8324}],"decl_id":null,"docs":" Specifies the operation to be used when reading data from a subpass attachment.\n","sig":null,"attributes":[{"value":"/ Specifies the operation to be used when reading data from a subpass attachment.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":151087,"byte_end":151170,"line_start":14,"line_end":14,"column_start":1,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8341},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":151770,"byte_end":151775,"line_start":31,"line_end":31,"column_start":5,"column_end":10},"name":"Store","qualname":"::pass::AttachmentStoreOp::Store","value":"AttachmentStoreOp::Store","parent":{"krate":0,"index":8340},"children":[],"decl_id":null,"docs":" Content written to the attachment will be preserved.\n","sig":null,"attributes":[{"value":"/ Content written to the attachment will be preserved.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":151709,"byte_end":151765,"line_start":30,"line_end":30,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8343},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":151827,"byte_end":151835,"line_start":33,"line_end":33,"column_start":5,"column_end":13},"name":"DontCare","qualname":"::pass::AttachmentStoreOp::DontCare","value":"AttachmentStoreOp::DontCare","parent":{"krate":0,"index":8340},"children":[],"decl_id":null,"docs":" Attachment content will be undefined.\n","sig":null,"attributes":[{"value":"/ Attachment content will be undefined.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":151781,"byte_end":151822,"line_start":32,"line_end":32,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":8340},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":151685,"byte_end":151702,"line_start":29,"line_end":29,"column_start":10,"column_end":27},"name":"AttachmentStoreOp","qualname":"::pass::AttachmentStoreOp","value":"pub enum AttachmentStoreOp { Store, DontCare, }","parent":null,"children":[{"krate":0,"index":8341},{"krate":0,"index":8343}],"decl_id":null,"docs":" Specifies the operation to be used when writing data to a subpass attachment.\n","sig":null,"attributes":[{"value":"/ Specifies the operation to be used when writing data to a subpass attachment.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":151480,"byte_end":151561,"line_start":26,"line_end":26,"column_start":1,"column_end":82}}]},{"kind":"Type","id":{"krate":0,"index":597},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":151884,"byte_end":151900,"line_start":37,"line_end":37,"column_start":10,"column_end":26},"name":"AttachmentLayout","qualname":"::pass::AttachmentLayout","value":"image::Layout","parent":null,"children":[],"decl_id":null,"docs":" Image layout of an attachment.\n","sig":null,"attributes":[{"value":"/ Image layout of an attachment.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":151840,"byte_end":151874,"line_start":36,"line_end":36,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":8359},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":152071,"byte_end":152084,"line_start":42,"line_end":42,"column_start":12,"column_end":25},"name":"AttachmentOps","qualname":"::pass::AttachmentOps","value":"AttachmentOps { load, store }","parent":null,"children":[{"krate":0,"index":8360},{"krate":0,"index":8361}],"decl_id":null,"docs":" Attachment operations.\n","sig":null,"attributes":[{"value":"/ Attachment operations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":151919,"byte_end":151945,"line_start":39,"line_end":39,"column_start":1,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":8360},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":152215,"byte_end":152219,"line_start":45,"line_end":45,"column_start":9,"column_end":13},"name":"load","qualname":"::pass::AttachmentOps::load","value":"pass::AttachmentLoadOp","parent":{"krate":0,"index":8359},"children":[],"decl_id":null,"docs":" Indicates how the data of the attachment will be loaded at first usage at\n the beginning of the subpass.\n","sig":null,"attributes":[{"value":"/ Indicates how the data of the attachment will be loaded at first usage at","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":152091,"byte_end":152168,"line_start":43,"line_end":43,"column_start":5,"column_end":82}},{"value":"/ the beginning of the subpass.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":152173,"byte_end":152206,"line_start":44,"line_end":44,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":8361},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":152337,"byte_end":152342,"line_start":47,"line_end":47,"column_start":9,"column_end":14},"name":"store","qualname":"::pass::AttachmentOps::store","value":"pass::AttachmentStoreOp","parent":{"krate":0,"index":8359},"children":[],"decl_id":null,"docs":" Whether or not data from the store operation will be preserved after the subpass.\n","sig":null,"attributes":[{"value":"/ Whether or not data from the store operation will be preserved after the subpass.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":152243,"byte_end":152328,"line_start":46,"line_end":46,"column_start":5,"column_end":90}}]},{"kind":"Const","id":{"krate":0,"index":599},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":152458,"byte_end":152467,"line_start":52,"line_end":52,"column_start":15,"column_end":24},"name":"DONT_CARE","qualname":"::pass::AttachmentOps::DONT_CARE","value":"Self","parent":{"krate":0,"index":598},"children":[],"decl_id":null,"docs":" Specifies `DontCare` for both load and store op.\n","sig":null,"attributes":[{"value":"/ Specifies `DontCare` for both load and store op.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":152391,"byte_end":152443,"line_start":51,"line_end":51,"column_start":5,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":600},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":152664,"byte_end":152668,"line_start":58,"line_end":58,"column_start":15,"column_end":19},"name":"INIT","qualname":"::pass::AttachmentOps::INIT","value":"Self","parent":{"krate":0,"index":598},"children":[],"decl_id":null,"docs":" Specifies `Clear` for load op and `Store` for store op.\n","sig":null,"attributes":[{"value":"/ Specifies `Clear` for load op and `Store` for store op.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":152590,"byte_end":152649,"line_start":57,"line_end":57,"column_start":5,"column_end":64}}]},{"kind":"Const","id":{"krate":0,"index":601},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":152858,"byte_end":152866,"line_start":64,"line_end":64,"column_start":15,"column_end":23},"name":"PRESERVE","qualname":"::pass::AttachmentOps::PRESERVE","value":"Self","parent":{"krate":0,"index":598},"children":[],"decl_id":null,"docs":" Specifies `Load` for load op and `Store` for store op.\n","sig":null,"attributes":[{"value":"/ Specifies `Load` for load op and `Store` for store op.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":152785,"byte_end":152843,"line_start":63,"line_end":63,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":153051,"byte_end":153054,"line_start":70,"line_end":70,"column_start":12,"column_end":15},"name":"new","qualname":"<AttachmentOps>::new","value":"pub fn new(AttachmentLoadOp, AttachmentStoreOp) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convenience function to create a new `AttachmentOps`.\n","sig":null,"attributes":[{"value":"/ Convenience function to create a new `AttachmentOps`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":152982,"byte_end":153039,"line_start":69,"line_end":69,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":8377},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":153681,"byte_end":153691,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"Attachment","qualname":"::pass::Attachment","value":"Attachment { format, samples, ops, stencil_ops, layouts }","parent":null,"children":[{"krate":0,"index":8378},{"krate":0,"index":8379},{"krate":0,"index":8380},{"krate":0,"index":8381},{"krate":0,"index":8382}],"decl_id":null,"docs":" An attachment is a description of a resource provided to a render subpass.","sig":null,"attributes":[{"value":"/ An attachment is a description of a resource provided to a render subpass.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":153376,"byte_end":153454,"line_start":82,"line_end":82,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":153455,"byte_end":153458,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ It includes things such as render targets, images that were produced from","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":153459,"byte_end":153536,"line_start":84,"line_end":84,"column_start":1,"column_end":78}},{"value":"/ previous subpasses, etc.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":153537,"byte_end":153565,"line_start":85,"line_end":85,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":8378},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":153926,"byte_end":153932,"line_start":94,"line_end":94,"column_start":9,"column_end":15},"name":"format","qualname":"::pass::Attachment::format","value":"std::option::Option<format::Format>","parent":{"krate":0,"index":8377},"children":[],"decl_id":null,"docs":" Format of this attachment.","sig":null,"attributes":[{"value":"/ Format of this attachment.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":153698,"byte_end":153728,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":153733,"byte_end":153736,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ In the most cases `format` is not `None`. It should be only used for","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":153741,"byte_end":153813,"line_start":91,"line_end":91,"column_start":5,"column_end":77}},{"value":"/ creating dummy renderpasses, which are used as placeholder for compatible","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":153818,"byte_end":153895,"line_start":92,"line_end":92,"column_start":5,"column_end":82}},{"value":"/ renderpasses.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":153900,"byte_end":153917,"line_start":93,"line_end":93,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":8379},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":154160,"byte_end":154167,"line_start":99,"line_end":99,"column_start":9,"column_end":16},"name":"samples","qualname":"::pass::Attachment::samples","value":"u8","parent":{"krate":0,"index":8377},"children":[],"decl_id":null,"docs":" Number of samples to use when loading from this attachment.","sig":null,"attributes":[{"value":"/ Number of samples to use when loading from this attachment.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":153954,"byte_end":154017,"line_start":95,"line_end":95,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":154022,"byte_end":154025,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ If greater than 1, [multisampling](https://en.wikipedia.org/wiki/Multisample_anti-aliasing)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":154030,"byte_end":154125,"line_start":97,"line_end":97,"column_start":5,"column_end":100}},{"value":"/ will take effect.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":154130,"byte_end":154151,"line_start":98,"line_end":98,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":8380},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":154249,"byte_end":154252,"line_start":101,"line_end":101,"column_start":9,"column_end":12},"name":"ops","qualname":"::pass::Attachment::ops","value":"pass::AttachmentOps","parent":{"krate":0,"index":8377},"children":[],"decl_id":null,"docs":" Load and store operations of the attachment.\n","sig":null,"attributes":[{"value":"/ Load and store operations of the attachment.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":154192,"byte_end":154240,"line_start":100,"line_end":100,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":8381},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":154421,"byte_end":154432,"line_start":104,"line_end":104,"column_start":9,"column_end":20},"name":"stencil_ops","qualname":"::pass::Attachment::stencil_ops","value":"pass::AttachmentOps","parent":{"krate":0,"index":8377},"children":[],"decl_id":null,"docs":" Load and store operations of the stencil aspect, if any.\n","sig":null,"attributes":[{"value":"/ Load and store operations of the stencil aspect, if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":154273,"byte_end":154333,"line_start":102,"line_end":102,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":8382},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":154516,"byte_end":154523,"line_start":106,"line_end":106,"column_start":9,"column_end":16},"name":"layouts","qualname":"::pass::Attachment::layouts","value":"std::ops::Range<image::Layout>","parent":{"krate":0,"index":8377},"children":[],"decl_id":null,"docs":" Initial and final image layouts of the renderpass.\n","sig":null,"attributes":[{"value":"/ Initial and final image layouts of the renderpass.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":154453,"byte_end":154507,"line_start":105,"line_end":105,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":154747,"byte_end":154757,"line_start":113,"line_end":113,"column_start":12,"column_end":22},"name":"has_clears","qualname":"<Attachment>::has_clears","value":"pub fn has_clears(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this attachment has some clear operations.","sig":null,"attributes":[{"value":"/ Returns true if this attachment has some clear operations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":154575,"byte_end":154637,"line_start":110,"line_end":110,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":154642,"byte_end":154645,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ Useful when starting a render pass, since there has to be a clear value provided.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":154650,"byte_end":154735,"line_start":112,"line_end":112,"column_start":5,"column_end":90}}]},{"kind":"Type","id":{"krate":0,"index":605},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":154954,"byte_end":154966,"line_start":119,"line_end":119,"column_start":10,"column_end":22},"name":"AttachmentId","qualname":"::pass::AttachmentId","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Index of an attachment within a framebuffer/renderpass,\n","sig":null,"attributes":[{"value":"/ Index of an attachment within a framebuffer/renderpass,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":154885,"byte_end":154944,"line_start":118,"line_end":118,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":606},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":155052,"byte_end":155065,"line_start":121,"line_end":121,"column_start":10,"column_end":23},"name":"AttachmentRef","qualname":"::pass::AttachmentRef","value":"(AttachmentId, AttachmentLayout)","parent":null,"children":[],"decl_id":null,"docs":" Reference to an attachment by index and expected image layout.\n","sig":null,"attributes":[{"value":"/ Reference to an attachment by index and expected image layout.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":154976,"byte_end":155042,"line_start":120,"line_end":120,"column_start":1,"column_end":67}}]},{"kind":"Const","id":{"krate":0,"index":607},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":155185,"byte_end":155202,"line_start":123,"line_end":123,"column_start":11,"column_end":28},"name":"ATTACHMENT_UNUSED","qualname":"::pass::ATTACHMENT_UNUSED","value":"AttachmentId","parent":null,"children":[],"decl_id":null,"docs":" An AttachmentId that can be used instead of providing an attachment.\n","sig":null,"attributes":[{"value":"/ An AttachmentId that can be used instead of providing an attachment.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":155102,"byte_end":155174,"line_start":122,"line_end":122,"column_start":1,"column_end":73}}]},{"kind":"Type","id":{"krate":0,"index":608},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":155257,"byte_end":155266,"line_start":126,"line_end":126,"column_start":10,"column_end":19},"name":"SubpassId","qualname":"::pass::SubpassId","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Index of a subpass.\n","sig":null,"attributes":[{"value":"/ Index of a subpass.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":155224,"byte_end":155247,"line_start":125,"line_end":125,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":8394},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":155626,"byte_end":155643,"line_start":135,"line_end":135,"column_start":12,"column_end":29},"name":"SubpassDependency","qualname":"::pass::SubpassDependency","value":"SubpassDependency { passes, stages, accesses, flags }","parent":null,"children":[{"krate":0,"index":8395},{"krate":0,"index":8396},{"krate":0,"index":8397},{"krate":0,"index":8398}],"decl_id":null,"docs":" Expresses a dependency between multiple [subpasses][SubpassDesc].","sig":null,"attributes":[{"value":"/ Expresses a dependency between multiple [subpasses][SubpassDesc].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":155274,"byte_end":155343,"line_start":128,"line_end":128,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":155344,"byte_end":155347,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ This is used both to describe a source or destination subpass;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":155348,"byte_end":155414,"line_start":130,"line_end":130,"column_start":1,"column_end":67}},{"value":"/ data either explicitly passes from this subpass to the next or from another","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":155415,"byte_end":155494,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ subpass into this one.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":155495,"byte_end":155521,"line_start":132,"line_end":132,"column_start":1,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":8395},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":155838,"byte_end":155844,"line_start":140,"line_end":140,"column_start":9,"column_end":15},"name":"passes","qualname":"::pass::SubpassDependency::passes","value":"std::ops::Range<std::option::Option<u8>>","parent":{"krate":0,"index":8394},"children":[],"decl_id":null,"docs":" Other subpasses this one depends on.","sig":null,"attributes":[{"value":"/ Other subpasses this one depends on.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":155650,"byte_end":155690,"line_start":136,"line_end":136,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":155695,"byte_end":155698,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ If one of the range sides is `None`, it refers to the external","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":155703,"byte_end":155769,"line_start":138,"line_end":138,"column_start":5,"column_end":71}},{"value":"/ scope either before or after the whole render pass.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":155774,"byte_end":155829,"line_start":139,"line_end":139,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":8396},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":155935,"byte_end":155941,"line_start":142,"line_end":142,"column_start":9,"column_end":15},"name":"stages","qualname":"::pass::SubpassDependency::stages","value":"std::ops::Range<pso::PipelineStage>","parent":{"krate":0,"index":8394},"children":[],"decl_id":null,"docs":" Other pipeline stages this subpass depends on.\n","sig":null,"attributes":[{"value":"/ Other pipeline stages this subpass depends on.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":155876,"byte_end":155926,"line_start":141,"line_end":141,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":8397},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":156024,"byte_end":156032,"line_start":144,"line_end":144,"column_start":9,"column_end":17},"name":"accesses","qualname":"::pass::SubpassDependency::accesses","value":"std::ops::Range<image::Access>","parent":{"krate":0,"index":8394},"children":[],"decl_id":null,"docs":" Resource accesses this subpass depends on.\n","sig":null,"attributes":[{"value":"/ Resource accesses this subpass depends on.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":155969,"byte_end":156015,"line_start":143,"line_end":143,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":8398},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":156090,"byte_end":156095,"line_start":146,"line_end":146,"column_start":9,"column_end":14},"name":"flags","qualname":"::pass::SubpassDependency::flags","value":"memory::Dependencies","parent":{"krate":0,"index":8394},"children":[],"decl_id":null,"docs":" Dependency flags.\n","sig":null,"attributes":[{"value":"/ Dependency flags.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":156060,"byte_end":156081,"line_start":145,"line_end":145,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":8406},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":156204,"byte_end":156215,"line_start":151,"line_end":151,"column_start":12,"column_end":23},"name":"SubpassDesc","qualname":"::pass::SubpassDesc","value":"SubpassDesc { colors, depth_stencil, inputs, resolves, preserves }","parent":null,"children":[{"krate":0,"index":8408},{"krate":0,"index":8409},{"krate":0,"index":8410},{"krate":0,"index":8411},{"krate":0,"index":8412}],"decl_id":null,"docs":" Description of a subpass for render pass creation.\n","sig":null,"attributes":[{"value":"/ Description of a subpass for render pass creation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":156114,"byte_end":156168,"line_start":149,"line_end":149,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":8408},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":156287,"byte_end":156293,"line_start":153,"line_end":153,"column_start":9,"column_end":15},"name":"colors","qualname":"::pass::SubpassDesc::colors","value":"&'a [(usize, image::Layout)]","parent":{"krate":0,"index":8406},"children":[],"decl_id":null,"docs":" Which attachments will be used as color buffers.\n","sig":null,"attributes":[{"value":"/ Which attachments will be used as color buffers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":156226,"byte_end":156278,"line_start":152,"line_end":152,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":8409},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":156389,"byte_end":156402,"line_start":155,"line_end":155,"column_start":9,"column_end":22},"name":"depth_stencil","qualname":"::pass::SubpassDesc::depth_stencil","value":"std::option::Option<&'a (usize, image::Layout)>","parent":{"krate":0,"index":8406},"children":[],"decl_id":null,"docs":" Which attachments will be used as depth/stencil buffers.\n","sig":null,"attributes":[{"value":"/ Which attachments will be used as depth/stencil buffers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":156320,"byte_end":156380,"line_start":154,"line_end":154,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":8410},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":156500,"byte_end":156506,"line_start":157,"line_end":157,"column_start":9,"column_end":15},"name":"inputs","qualname":"::pass::SubpassDesc::inputs","value":"&'a [(usize, image::Layout)]","parent":{"krate":0,"index":8406},"children":[],"decl_id":null,"docs":" Which attachments will be used as input attachments.\n","sig":null,"attributes":[{"value":"/ Which attachments will be used as input attachments.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":156435,"byte_end":156491,"line_start":156,"line_end":156,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":8411},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":156900,"byte_end":156908,"line_start":166,"line_end":166,"column_start":9,"column_end":17},"name":"resolves","qualname":"::pass::SubpassDesc::resolves","value":"&'a [(usize, image::Layout)]","parent":{"krate":0,"index":8406},"children":[],"decl_id":null,"docs":" Which attachments will be used as resolve destinations.","sig":null,"attributes":[{"value":"/ Which attachments will be used as resolve destinations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":156533,"byte_end":156592,"line_start":158,"line_end":158,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":156597,"byte_end":156600,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ The number of resolve attachments may be zero or equal to the number of color attachments.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":156605,"byte_end":156699,"line_start":160,"line_end":160,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":156704,"byte_end":156707,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ At the end of a subpass the color attachment will be resolved to the corresponding","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":156712,"byte_end":156798,"line_start":162,"line_end":162,"column_start":5,"column_end":91}},{"value":"/ resolve attachment.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":156803,"byte_end":156826,"line_start":163,"line_end":163,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":156831,"byte_end":156834,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ The resolve attachment must not be multisampled.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":156839,"byte_end":156891,"line_start":165,"line_end":165,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":8412},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":157060,"byte_end":157069,"line_start":169,"line_end":169,"column_start":9,"column_end":18},"name":"preserves","qualname":"::pass::SubpassDesc::preserves","value":"&'a [usize]","parent":{"krate":0,"index":8406},"children":[],"decl_id":null,"docs":" Attachments that are not used by the subpass but must be preserved to be\n passed on to subsequent passes.\n","sig":null,"attributes":[{"value":"/ Attachments that are not used by the subpass but must be preserved to be","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":156935,"byte_end":157011,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ passed on to subsequent passes.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":157016,"byte_end":157051,"line_start":168,"line_end":168,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":8419},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":157155,"byte_end":157162,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"Subpass","qualname":"::pass::Subpass","value":"Subpass { index, main_pass }","parent":null,"children":[{"krate":0,"index":8422},{"krate":0,"index":8423}],"decl_id":null,"docs":" A sub-pass borrow of a pass.\n","sig":null,"attributes":[{"value":"/ A sub-pass borrow of a pass.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":157094,"byte_end":157126,"line_start":172,"line_end":172,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":8422},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":157218,"byte_end":157223,"line_start":176,"line_end":176,"column_start":9,"column_end":14},"name":"index","qualname":"::pass::Subpass::index","value":"u8","parent":{"krate":0,"index":8419},"children":[],"decl_id":null,"docs":" Index of the subpass\n","sig":null,"attributes":[{"value":"/ Index of the subpass","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":157185,"byte_end":157209,"line_start":175,"line_end":175,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":8423},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":157270,"byte_end":157279,"line_start":178,"line_end":178,"column_start":9,"column_end":18},"name":"main_pass","qualname":"::pass::Subpass::main_pass","value":"&'a <B as Backend>::RenderPass","parent":{"krate":0,"index":8419},"children":[],"decl_id":null,"docs":" Main pass borrow.\n","sig":null,"attributes":[{"value":"/ Main pass borrow.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":157240,"byte_end":157261,"line_start":177,"line_end":177,"column_start":5,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":623},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pool","qualname":"::pool","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","parent":null,"children":[{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":628},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":638},{"krate":0,"index":8428},{"krate":0,"index":8430},{"krate":0,"index":8431},{"krate":0,"index":8432},{"krate":0,"index":8435},{"krate":0,"index":8436},{"krate":0,"index":8438},{"krate":0,"index":8440},{"krate":0,"index":8442},{"krate":0,"index":8444},{"krate":0,"index":8447},{"krate":0,"index":8453},{"krate":0,"index":8455},{"krate":0,"index":8457},{"krate":0,"index":8459},{"krate":0,"index":8461},{"krate":0,"index":8469},{"krate":0,"index":8472},{"krate":0,"index":8474},{"krate":0,"index":8477},{"krate":0,"index":8479},{"krate":0,"index":8482},{"krate":0,"index":8484},{"krate":0,"index":8487},{"krate":0,"index":8489},{"krate":0,"index":8492},{"krate":0,"index":8495},{"krate":0,"index":641}],"decl_id":null,"docs":" Command pools\n","sig":null,"attributes":[{"value":"/ Command pools","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":157768,"byte_end":157785,"line_start":1,"line_end":1,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":8428},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":157994,"byte_end":158016,"line_start":10,"line_end":10,"column_start":16,"column_end":38},"name":"CommandPoolCreateFlags","qualname":"::pool::CommandPoolCreateFlags","value":"CommandPoolCreateFlags {  }","parent":null,"children":[{"krate":0,"index":8429}],"decl_id":null,"docs":" Command pool creation flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8462},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":158146,"byte_end":158155,"line_start":13,"line_end":13,"column_start":15,"column_end":24},"name":"TRANSIENT","qualname":"::pool::CommandPoolCreateFlags::TRANSIENT","value":"CommandPoolCreateFlags","parent":{"krate":0,"index":8461},"children":[],"decl_id":null,"docs":" Indicates short-lived command buffers.\n Memory optimization hint for implementations.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8463},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":158237,"byte_end":158253,"line_start":15,"line_end":15,"column_start":15,"column_end":31},"name":"RESET_INDIVIDUAL","qualname":"::pool::CommandPoolCreateFlags::RESET_INDIVIDUAL","value":"CommandPoolCreateFlags","parent":{"krate":0,"index":8461},"children":[],"decl_id":null,"docs":" Allow command buffers to be reset individually.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":641},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":158363,"byte_end":158374,"line_start":20,"line_end":20,"column_start":11,"column_end":22},"name":"CommandPool","qualname":"::pool::CommandPool","value":"CommandPool<B: Backend>: fmt::Debug + Any + Send + Sync","parent":null,"children":[{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":648}],"decl_id":null,"docs":" The allocated command buffers are associated with the creating command queue.\n","sig":null,"attributes":[{"value":"/ The allocated command buffers are associated with the creating command queue.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":158271,"byte_end":158352,"line_start":19,"line_end":19,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":158852,"byte_end":158857,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"name":"reset","qualname":"::pool::CommandPool::reset","value":"pub unsafe fn reset(&mut Self, bool)","parent":{"krate":0,"index":641},"children":[],"decl_id":null,"docs":" Reset the command pool and the corresponding command buffers.","sig":null,"attributes":[{"value":"/ Reset the command pool and the corresponding command buffers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":158425,"byte_end":158490,"line_start":21,"line_end":21,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":158495,"byte_end":158498,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":158503,"byte_end":158518,"line_start":23,"line_end":23,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":158523,"byte_end":158526,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ * `release_resources` - if `true`, this command pool will recycle all the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":158531,"byte_end":158608,"line_start":25,"line_end":25,"column_start":5,"column_end":82}},{"value":"/   resources it own and give them back to the system.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":158613,"byte_end":158669,"line_start":26,"line_end":26,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":158674,"byte_end":158677,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Synchronization","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":158682,"byte_end":158703,"line_start":28,"line_end":28,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":158708,"byte_end":158711,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ You may _not_ free the pool if a command buffer allocated from it","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":158716,"byte_end":158785,"line_start":30,"line_end":30,"column_start":5,"column_end":74}},{"value":"/ is still in use (pool memory still in use).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":158790,"byte_end":158837,"line_start":31,"line_end":31,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":159108,"byte_end":159120,"line_start":39,"line_end":39,"column_start":15,"column_end":27},"name":"allocate_one","qualname":"::pool::CommandPool::allocate_one","value":"pub unsafe fn allocate_one(&mut Self, Level) -> B::CommandBuffer","parent":{"krate":0,"index":641},"children":[],"decl_id":null,"docs":" Allocate a single [command buffer][crate::command::CommandBuffer] from the pool.","sig":null,"attributes":[{"value":"/ Allocate a single [command buffer][crate::command::CommandBuffer] from the pool.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":158900,"byte_end":158984,"line_start":34,"line_end":34,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":158989,"byte_end":158992,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":158997,"byte_end":159012,"line_start":36,"line_end":36,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":159017,"byte_end":159020,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ * `level` - whether this command buffer is primary or secondary.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":159025,"byte_end":159093,"line_start":38,"line_end":38,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":159628,"byte_end":159636,"line_start":52,"line_end":52,"column_start":15,"column_end":23},"name":"allocate","qualname":"::pool::CommandPool::allocate","value":"pub unsafe fn allocate<E>(&mut Self, usize, Level, &mut E) where\nE: Extend<B::CommandBuffer>","parent":{"krate":0,"index":641},"children":[],"decl_id":null,"docs":" Allocate new [command buffers][crate::command::CommandBuffer] from the pool.","sig":null,"attributes":[{"value":"/ Allocate new [command buffers][crate::command::CommandBuffer] from the pool.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":159293,"byte_end":159373,"line_start":45,"line_end":45,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":159378,"byte_end":159381,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":159386,"byte_end":159401,"line_start":47,"line_end":47,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":159406,"byte_end":159409,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ * `num` - how many buffers to return","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":159414,"byte_end":159454,"line_start":49,"line_end":49,"column_start":5,"column_end":45}},{"value":"/ * `level` - whether to allocate primary or secondary command buffers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":159459,"byte_end":159532,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ * `list` - an extendable list of command buffers into which to allocate.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":159537,"byte_end":159613,"line_start":51,"line_end":51,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":159918,"byte_end":159922,"line_start":60,"line_end":60,"column_start":15,"column_end":19},"name":"free","qualname":"::pool::CommandPool::free","value":"pub unsafe fn free<I>(&mut Self, I) where I: Iterator<Item = B::CommandBuffer>","parent":{"krate":0,"index":641},"children":[],"decl_id":null,"docs":" Free [command buffers][crate::command::CommandBuffer] allocated from this pool.\n","sig":null,"attributes":[{"value":"/ Free [command buffers][crate::command::CommandBuffer] allocated from this pool.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":159820,"byte_end":159903,"line_start":59,"line_end":59,"column_start":5,"column_end":88}}]},{"kind":"Mod","id":{"krate":0,"index":650},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pso","qualname":"::pso","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","parent":null,"children":[{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":655},{"krate":0,"index":658},{"krate":0,"index":661},{"krate":0,"index":680},{"krate":0,"index":720},{"krate":0,"index":778},{"krate":0,"index":796},{"krate":0,"index":834},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":9816},{"krate":0,"index":9817},{"krate":0,"index":9819},{"krate":0,"index":9821},{"krate":0,"index":9822},{"krate":0,"index":9825},{"krate":0,"index":9830},{"krate":0,"index":9832},{"krate":0,"index":9850},{"krate":0,"index":9852},{"krate":0,"index":9853},{"krate":0,"index":9854},{"krate":0,"index":9857},{"krate":0,"index":9858},{"krate":0,"index":9860},{"krate":0,"index":9862},{"krate":0,"index":9864},{"krate":0,"index":9866},{"krate":0,"index":9869},{"krate":0,"index":9890},{"krate":0,"index":9892},{"krate":0,"index":9894},{"krate":0,"index":9896},{"krate":0,"index":9898},{"krate":0,"index":9921},{"krate":0,"index":9924},{"krate":0,"index":9926},{"krate":0,"index":9929},{"krate":0,"index":9931},{"krate":0,"index":9934},{"krate":0,"index":9936},{"krate":0,"index":9939},{"krate":0,"index":9941},{"krate":0,"index":9944},{"krate":0,"index":9947},{"krate":0,"index":10014},{"krate":0,"index":10016},{"krate":0,"index":10017},{"krate":0,"index":10018},{"krate":0,"index":10021},{"krate":0,"index":10022},{"krate":0,"index":10024},{"krate":0,"index":10026},{"krate":0,"index":10028},{"krate":0,"index":10030},{"krate":0,"index":10012},{"krate":0,"index":10033},{"krate":0,"index":10047},{"krate":0,"index":10049},{"krate":0,"index":10051},{"krate":0,"index":10053},{"krate":0,"index":10055},{"krate":0,"index":10071},{"krate":0,"index":10074},{"krate":0,"index":10076},{"krate":0,"index":10079},{"krate":0,"index":10081},{"krate":0,"index":10084},{"krate":0,"index":10086},{"krate":0,"index":10089},{"krate":0,"index":10091},{"krate":0,"index":10094},{"krate":0,"index":10097},{"krate":0,"index":10141},{"krate":0,"index":10147},{"krate":0,"index":868},{"krate":0,"index":10151},{"krate":0,"index":10153},{"krate":0,"index":10154},{"krate":0,"index":10155},{"krate":0,"index":10158},{"krate":0,"index":10159},{"krate":0,"index":10161},{"krate":0,"index":10163},{"krate":0,"index":10165},{"krate":0,"index":10167},{"krate":0,"index":10170},{"krate":0,"index":10176},{"krate":0,"index":10178},{"krate":0,"index":10180},{"krate":0,"index":10182},{"krate":0,"index":10184},{"krate":0,"index":10192},{"krate":0,"index":10195},{"krate":0,"index":10197},{"krate":0,"index":10200},{"krate":0,"index":10202},{"krate":0,"index":10205},{"krate":0,"index":10207},{"krate":0,"index":10210},{"krate":0,"index":10212},{"krate":0,"index":10215},{"krate":0,"index":10218},{"krate":0,"index":10238},{"krate":0,"index":10249},{"krate":0,"index":10253},{"krate":0,"index":10260},{"krate":0,"index":10263},{"krate":0,"index":10265},{"krate":0,"index":10268},{"krate":0,"index":10270},{"krate":0,"index":10273},{"krate":0,"index":10277},{"krate":0,"index":10280},{"krate":0,"index":10282},{"krate":0,"index":10286},{"krate":0,"index":872}],"decl_id":null,"docs":" Raw Pipeline State Objects","sig":null,"attributes":[{"value":"/ Raw Pipeline State Objects","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":160008,"byte_end":160038,"line_start":1,"line_end":1,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":160039,"byte_end":160042,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains items used to create and manage Pipelines.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":160043,"byte_end":160110,"line_start":3,"line_end":3,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":8515},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/compute.rs","byte_start":166642,"byte_end":166661,"line_start":10,"line_end":10,"column_start":12,"column_end":31},"name":"ComputePipelineDesc","qualname":"::pso::compute::ComputePipelineDesc","value":"ComputePipelineDesc { label, shader, layout, flags, parent }","parent":null,"children":[{"krate":0,"index":8518},{"krate":0,"index":8519},{"krate":0,"index":8520},{"krate":0,"index":8521},{"krate":0,"index":8522}],"decl_id":null,"docs":" A description of the data needed to construct a compute pipeline.\n","sig":null,"attributes":[{"value":"/ A description of the data needed to construct a compute pipeline.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/compute.rs","byte_start":166544,"byte_end":166613,"line_start":8,"line_end":8,"column_start":1,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":8518},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/compute.rs","byte_start":166711,"byte_end":166716,"line_start":12,"line_end":12,"column_start":9,"column_end":14},"name":"label","qualname":"::pso::compute::ComputePipelineDesc::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":8515},"children":[],"decl_id":null,"docs":" Pipeline label\n","sig":null,"attributes":[{"value":"/ Pipeline label","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/compute.rs","byte_start":166684,"byte_end":166702,"line_start":11,"line_end":11,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":8519},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/compute.rs","byte_start":166805,"byte_end":166811,"line_start":14,"line_end":14,"column_start":9,"column_end":15},"name":"shader","qualname":"::pso::compute::ComputePipelineDesc::shader","value":"pso::EntryPoint<'a, B>","parent":{"krate":0,"index":8515},"children":[],"decl_id":null,"docs":" The shader entry point that performs the computation.\n","sig":null,"attributes":[{"value":"/ The shader entry point that performs the computation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/compute.rs","byte_start":166739,"byte_end":166796,"line_start":13,"line_end":13,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":8520},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/compute.rs","byte_start":166865,"byte_end":166871,"line_start":16,"line_end":16,"column_start":9,"column_end":15},"name":"layout","qualname":"::pso::compute::ComputePipelineDesc::layout","value":"&'a <B as Backend>::PipelineLayout","parent":{"krate":0,"index":8515},"children":[],"decl_id":null,"docs":" Pipeline layout.\n","sig":null,"attributes":[{"value":"/ Pipeline layout.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/compute.rs","byte_start":166836,"byte_end":166856,"line_start":15,"line_end":15,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":8521},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/compute.rs","byte_start":166959,"byte_end":166964,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"name":"flags","qualname":"::pso::compute::ComputePipelineDesc::flags","value":"pso::PipelineCreationFlags","parent":{"krate":0,"index":8515},"children":[],"decl_id":null,"docs":" Any flags necessary for the pipeline creation.\n","sig":null,"attributes":[{"value":"/ Any flags necessary for the pipeline creation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/compute.rs","byte_start":166900,"byte_end":166950,"line_start":17,"line_end":17,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":8522},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/compute.rs","byte_start":167046,"byte_end":167052,"line_start":20,"line_end":20,"column_start":9,"column_end":15},"name":"parent","qualname":"::pso::compute::ComputePipelineDesc::parent","value":"pso::BasePipeline<'a, <B as Backend>::ComputePipeline>","parent":{"krate":0,"index":8515},"children":[],"decl_id":null,"docs":" The parent pipeline to this one, if any.\n","sig":null,"attributes":[{"value":"/ The parent pipeline to this one, if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/compute.rs","byte_start":166993,"byte_end":167037,"line_start":19,"line_end":19,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/compute.rs","byte_start":167199,"byte_end":167202,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<ComputePipelineDesc>::new","value":"pub fn new(EntryPoint, &'a B::PipelineLayout) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty PSO descriptor.\n","sig":null,"attributes":[{"value":"/ Create a new empty PSO descriptor.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/compute.rs","byte_start":167149,"byte_end":167187,"line_start":24,"line_end":24,"column_start":5,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":707},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":168794,"byte_end":168812,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"name":"DescriptorSetIndex","qualname":"::pso::descriptor::DescriptorSetIndex","value":"u16","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":168781,"byte_end":168784,"line_start":25,"line_end":25,"column_start":1,"column_end":4}}]},{"kind":"Type","id":{"krate":0,"index":708},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":168833,"byte_end":168850,"line_start":28,"line_end":28,"column_start":10,"column_end":27},"name":"DescriptorBinding","qualname":"::pso::descriptor::DescriptorBinding","value":"u32","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":168820,"byte_end":168823,"line_start":27,"line_end":27,"column_start":1,"column_end":4}}]},{"kind":"Type","id":{"krate":0,"index":709},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":168871,"byte_end":168891,"line_start":30,"line_end":30,"column_start":10,"column_end":30},"name":"DescriptorArrayIndex","qualname":"::pso::descriptor::DescriptorArrayIndex","value":"usize","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":168858,"byte_end":168861,"line_start":29,"line_end":29,"column_start":1,"column_end":4}}]},{"kind":"StructVariant","id":{"krate":0,"index":8528},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":169166,"byte_end":169173,"line_start":37,"line_end":37,"column_start":5,"column_end":12},"name":"Storage","qualname":"::pso::descriptor::BufferDescriptorType::Storage","value":"BufferDescriptorType::Storage { read_only }","parent":{"krate":0,"index":8527},"children":[],"decl_id":null,"docs":" Storage buffers allow load, store, and atomic operations.\n","sig":null,"attributes":[{"value":"/ Storage buffers allow load, store, and atomic operations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":169100,"byte_end":169161,"line_start":36,"line_end":36,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8530},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":169358,"byte_end":169365,"line_start":42,"line_end":42,"column_start":5,"column_end":12},"name":"Uniform","qualname":"::pso::descriptor::BufferDescriptorType::Uniform","value":"BufferDescriptorType::Uniform","parent":{"krate":0,"index":8527},"children":[],"decl_id":null,"docs":" Uniform buffers provide constant data to be accessed in a shader.\n","sig":null,"attributes":[{"value":"/ Uniform buffers provide constant data to be accessed in a shader.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":169284,"byte_end":169353,"line_start":41,"line_end":41,"column_start":5,"column_end":74}}]},{"kind":"Enum","id":{"krate":0,"index":8527},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":169073,"byte_end":169093,"line_start":35,"line_end":35,"column_start":10,"column_end":30},"name":"BufferDescriptorType","qualname":"::pso::descriptor::BufferDescriptorType","value":"pub enum BufferDescriptorType {\n    Storage {\n        read_only: bool,\n    },\n    Uniform,\n}","parent":null,"children":[{"krate":0,"index":8528},{"krate":0,"index":8530}],"decl_id":null,"docs":" Specific type of a buffer.\n","sig":null,"attributes":[{"value":"/ Specific type of a buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":168902,"byte_end":168932,"line_start":32,"line_end":32,"column_start":1,"column_end":31}}]},{"kind":"StructVariant","id":{"krate":0,"index":8552},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":169633,"byte_end":169643,"line_start":50,"line_end":50,"column_start":5,"column_end":15},"name":"Structured","qualname":"::pso::descriptor::BufferDescriptorFormat::Structured","value":"BufferDescriptorFormat::Structured { dynamic_offset }","parent":{"krate":0,"index":8551},"children":[],"decl_id":null,"docs":" The buffer is interpreted as a structure defined in a shader.\n","sig":null,"attributes":[{"value":"/ The buffer is interpreted as a structure defined in a shader.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":169563,"byte_end":169628,"line_start":49,"line_end":49,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8554},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":169973,"byte_end":169978,"line_start":57,"line_end":57,"column_start":5,"column_end":10},"name":"Texel","qualname":"::pso::descriptor::BufferDescriptorFormat::Texel","value":"BufferDescriptorFormat::Texel","parent":{"krate":0,"index":8551},"children":[],"decl_id":null,"docs":" The buffer is interpreted as a 1-D array of texels, which undergo format\n conversion when loaded in a shader.\n","sig":null,"attributes":[{"value":"/ The buffer is interpreted as a 1-D array of texels, which undergo format","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":169848,"byte_end":169924,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ conversion when loaded in a shader.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":169929,"byte_end":169968,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":8551},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":169534,"byte_end":169556,"line_start":48,"line_end":48,"column_start":10,"column_end":32},"name":"BufferDescriptorFormat","qualname":"::pso::descriptor::BufferDescriptorFormat","value":"pub enum BufferDescriptorFormat {\n    Structured {\n        dynamic_offset: bool,\n    },\n    Texel,\n}","parent":null,"children":[{"krate":0,"index":8552},{"krate":0,"index":8554}],"decl_id":null,"docs":" Format of a buffer.\n","sig":null,"attributes":[{"value":"/ Format of a buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":169370,"byte_end":169393,"line_start":45,"line_end":45,"column_start":1,"column_end":24}}]},{"kind":"StructVariant","id":{"krate":0,"index":8576},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":170243,"byte_end":170250,"line_start":65,"line_end":65,"column_start":5,"column_end":12},"name":"Sampled","qualname":"::pso::descriptor::ImageDescriptorType::Sampled","value":"ImageDescriptorType::Sampled { with_sampler }","parent":{"krate":0,"index":8575},"children":[],"decl_id":null,"docs":" A sampled image allows sampling operations.\n","sig":null,"attributes":[{"value":"/ A sampled image allows sampling operations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":170191,"byte_end":170238,"line_start":64,"line_end":64,"column_start":5,"column_end":52}}]},{"kind":"StructVariant","id":{"krate":0,"index":8578},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":170485,"byte_end":170492,"line_start":71,"line_end":71,"column_start":5,"column_end":12},"name":"Storage","qualname":"::pso::descriptor::ImageDescriptorType::Storage","value":"ImageDescriptorType::Storage { read_only }","parent":{"krate":0,"index":8575},"children":[],"decl_id":null,"docs":" A storage image allows load, store and atomic operations.\n","sig":null,"attributes":[{"value":"/ A storage image allows load, store and atomic operations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":170419,"byte_end":170480,"line_start":70,"line_end":70,"column_start":5,"column_end":66}}]},{"kind":"Enum","id":{"krate":0,"index":8575},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":170165,"byte_end":170184,"line_start":63,"line_end":63,"column_start":10,"column_end":29},"name":"ImageDescriptorType","qualname":"::pso::descriptor::ImageDescriptorType","value":"pub enum ImageDescriptorType {\n    Sampled {\n        with_sampler: bool,\n    },\n    Storage {\n        read_only: bool,\n    },\n}","parent":null,"children":[{"krate":0,"index":8576},{"krate":0,"index":8578}],"decl_id":null,"docs":" Specific type of an image descriptor.\n","sig":null,"attributes":[{"value":"/ Specific type of an image descriptor.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":169983,"byte_end":170024,"line_start":60,"line_end":60,"column_start":1,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8600},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":170838,"byte_end":170845,"line_start":82,"line_end":82,"column_start":5,"column_end":12},"name":"Sampler","qualname":"::pso::descriptor::DescriptorType::Sampler","value":"DescriptorType::Sampler","parent":{"krate":0,"index":8599},"children":[],"decl_id":null,"docs":" A descriptor associated with sampler.\n","sig":null,"attributes":[{"value":"/ A descriptor associated with sampler.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":170792,"byte_end":170833,"line_start":81,"line_end":81,"column_start":5,"column_end":46}}]},{"kind":"StructVariant","id":{"krate":0,"index":8602},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":170898,"byte_end":170903,"line_start":84,"line_end":84,"column_start":5,"column_end":10},"name":"Image","qualname":"::pso::descriptor::DescriptorType::Image","value":"DescriptorType::Image { ty }","parent":{"krate":0,"index":8599},"children":[],"decl_id":null,"docs":" A descriptor associated with an image.\n","sig":null,"attributes":[{"value":"/ A descriptor associated with an image.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":170851,"byte_end":170893,"line_start":83,"line_end":83,"column_start":5,"column_end":47}}]},{"kind":"StructVariant","id":{"krate":0,"index":8604},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":171053,"byte_end":171059,"line_start":89,"line_end":89,"column_start":5,"column_end":11},"name":"Buffer","qualname":"::pso::descriptor::DescriptorType::Buffer","value":"DescriptorType::Buffer { ty, format }","parent":{"krate":0,"index":8599},"children":[],"decl_id":null,"docs":" A descriptor associated with a buffer.\n","sig":null,"attributes":[{"value":"/ A descriptor associated with a buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":171006,"byte_end":171048,"line_start":88,"line_end":88,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8607},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":171303,"byte_end":171318,"line_start":96,"line_end":96,"column_start":5,"column_end":20},"name":"InputAttachment","qualname":"::pso::descriptor::DescriptorType::InputAttachment","value":"DescriptorType::InputAttachment","parent":{"krate":0,"index":8599},"children":[],"decl_id":null,"docs":" A descriptor associated with an input attachment.\n","sig":null,"attributes":[{"value":"/ A descriptor associated with an input attachment.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":171245,"byte_end":171298,"line_start":95,"line_end":95,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":8599},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":170771,"byte_end":170785,"line_start":80,"line_end":80,"column_start":10,"column_end":24},"name":"DescriptorType","qualname":"::pso::descriptor::DescriptorType","value":"pub enum DescriptorType {\n    Sampler,\n    Image {\n        ty: ImageDescriptorType,\n    },\n    Buffer {\n        ty: BufferDescriptorType,\n        format: BufferDescriptorFormat,\n    },\n    InputAttachment,\n}","parent":null,"children":[{"krate":0,"index":8600},{"krate":0,"index":8602},{"krate":0,"index":8604},{"krate":0,"index":8607}],"decl_id":null,"docs":" The type of a descriptor.\n","sig":null,"attributes":[{"value":"/ The type of a descriptor.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":170601,"byte_end":170630,"line_start":77,"line_end":77,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":8628},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":172063,"byte_end":172089,"line_start":113,"line_end":113,"column_start":12,"column_end":38},"name":"DescriptorSetLayoutBinding","qualname":"::pso::descriptor::DescriptorSetLayoutBinding","value":"DescriptorSetLayoutBinding { binding, ty, count, stage_flags, immutable_samplers }","parent":null,"children":[{"krate":0,"index":8629},{"krate":0,"index":8630},{"krate":0,"index":8631},{"krate":0,"index":8632},{"krate":0,"index":8633}],"decl_id":null,"docs":" Information about the contents of and in which stages descriptors may be bound to a descriptor\n set at a certain binding point. Multiple `DescriptorSetLayoutBinding`s are assembled into\n a `DescriptorSetLayout`, which is then allocated into a `DescriptorSet` using a\n [`DescriptorPool`].","sig":null,"attributes":[{"value":"/ Information about the contents of and in which stages descriptors may be bound to a descriptor","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":171323,"byte_end":171421,"line_start":99,"line_end":99,"column_start":1,"column_end":99}},{"value":"/ set at a certain binding point. Multiple `DescriptorSetLayoutBinding`s are assembled into","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":171422,"byte_end":171515,"line_start":100,"line_end":100,"column_start":1,"column_end":94}},{"value":"/ a `DescriptorSetLayout`, which is then allocated into a `DescriptorSet` using a","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":171516,"byte_end":171599,"line_start":101,"line_end":101,"column_start":1,"column_end":84}},{"value":"/ [`DescriptorPool`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":171600,"byte_end":171623,"line_start":102,"line_end":102,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":171624,"byte_end":171627,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ A descriptor set consists of multiple binding points.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":171628,"byte_end":171685,"line_start":104,"line_end":104,"column_start":1,"column_end":58}},{"value":"/ Each binding point contains one or multiple descriptors of a certain type.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":171686,"byte_end":171764,"line_start":105,"line_end":105,"column_start":1,"column_end":79}},{"value":"/ The binding point is only valid for the pipelines stages specified.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":171765,"byte_end":171836,"line_start":106,"line_end":106,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":171837,"byte_end":171840,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ The binding _must_ match with the corresponding shader interface.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":171841,"byte_end":171910,"line_start":108,"line_end":108,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":171911,"byte_end":171914,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ [`DescriptorPool`]: trait.DescriptorPool.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":171915,"byte_end":171964,"line_start":110,"line_end":110,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":8629},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":172135,"byte_end":172142,"line_start":115,"line_end":115,"column_start":9,"column_end":16},"name":"binding","qualname":"::pso::descriptor::DescriptorSetLayoutBinding::binding","value":"u32","parent":{"krate":0,"index":8628},"children":[],"decl_id":null,"docs":" Descriptor bindings range.\n","sig":null,"attributes":[{"value":"/ Descriptor bindings range.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":172096,"byte_end":172126,"line_start":114,"line_end":114,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":8630},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":172210,"byte_end":172212,"line_start":117,"line_end":117,"column_start":9,"column_end":11},"name":"ty","qualname":"::pso::descriptor::DescriptorSetLayoutBinding::ty","value":"pso::descriptor::DescriptorType","parent":{"krate":0,"index":8628},"children":[],"decl_id":null,"docs":" Type of the bound descriptors.\n","sig":null,"attributes":[{"value":"/ Type of the bound descriptors.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":172167,"byte_end":172201,"line_start":116,"line_end":116,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":8631},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":172408,"byte_end":172413,"line_start":122,"line_end":122,"column_start":9,"column_end":14},"name":"count","qualname":"::pso::descriptor::DescriptorSetLayoutBinding::count","value":"usize","parent":{"krate":0,"index":8628},"children":[],"decl_id":null,"docs":" Number of descriptors in the array.","sig":null,"attributes":[{"value":"/ Number of descriptors in the array.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":172234,"byte_end":172273,"line_start":118,"line_end":118,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":172278,"byte_end":172281,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ *Note*: If count is zero, the binding point is reserved","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":172286,"byte_end":172345,"line_start":120,"line_end":120,"column_start":5,"column_end":64}},{"value":"/ and can't be accessed from any shader stages.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":172350,"byte_end":172399,"line_start":121,"line_end":121,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":8632},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":172474,"byte_end":172485,"line_start":124,"line_end":124,"column_start":9,"column_end":20},"name":"stage_flags","qualname":"::pso::descriptor::DescriptorSetLayoutBinding::stage_flags","value":"pso::ShaderStageFlags","parent":{"krate":0,"index":8628},"children":[],"decl_id":null,"docs":" Valid shader stages.\n","sig":null,"attributes":[{"value":"/ Valid shader stages.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":172441,"byte_end":172465,"line_start":123,"line_end":123,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":8633},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":172568,"byte_end":172586,"line_start":126,"line_end":126,"column_start":9,"column_end":27},"name":"immutable_samplers","qualname":"::pso::descriptor::DescriptorSetLayoutBinding::immutable_samplers","value":"bool","parent":{"krate":0,"index":8628},"children":[],"decl_id":null,"docs":" Use the associated list of immutable samplers.\n","sig":null,"attributes":[{"value":"/ Use the associated list of immutable samplers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":172509,"byte_end":172559,"line_start":125,"line_end":125,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":8638},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":172744,"byte_end":172763,"line_start":132,"line_end":132,"column_start":12,"column_end":31},"name":"DescriptorRangeDesc","qualname":"::pso::descriptor::DescriptorRangeDesc","value":"DescriptorRangeDesc { ty, count }","parent":null,"children":[{"krate":0,"index":8639},{"krate":0,"index":8640}],"decl_id":null,"docs":" Set of descriptors of a specific type.\n","sig":null,"attributes":[{"value":"/ Set of descriptors of a specific type.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":172597,"byte_end":172639,"line_start":129,"line_end":129,"column_start":1,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":8639},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":172814,"byte_end":172816,"line_start":134,"line_end":134,"column_start":9,"column_end":11},"name":"ty","qualname":"::pso::descriptor::DescriptorRangeDesc::ty","value":"pso::descriptor::DescriptorType","parent":{"krate":0,"index":8638},"children":[],"decl_id":null,"docs":" Type of the stored descriptors.\n","sig":null,"attributes":[{"value":"/ Type of the stored descriptors.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":172770,"byte_end":172805,"line_start":133,"line_end":133,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":8640},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":172867,"byte_end":172872,"line_start":136,"line_end":136,"column_start":9,"column_end":14},"name":"count","qualname":"::pso::descriptor::DescriptorRangeDesc::count","value":"usize","parent":{"krate":0,"index":8638},"children":[],"decl_id":null,"docs":" Amount of space.\n","sig":null,"attributes":[{"value":"/ Amount of space.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":172838,"byte_end":172858,"line_start":135,"line_end":135,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8664},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":173263,"byte_end":173274,"line_start":146,"line_end":146,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::pso::descriptor::AllocationError::OutOfMemory","value":"AllocationError::OutOfMemory(OutOfMemory)","parent":{"krate":0,"index":8646},"children":[],"decl_id":null,"docs":" OutOfMemory::Host: Memory allocation on the host side failed.\n OutOfMemory::Device: Memory allocation on the device side failed.\n This could be caused by a lack of memory or pool fragmentation.\n","sig":null,"attributes":[{"value":"/ OutOfMemory::Host: Memory allocation on the host side failed.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":173021,"byte_end":173086,"line_start":142,"line_end":142,"column_start":5,"column_end":70}},{"value":"/ OutOfMemory::Device: Memory allocation on the device side failed.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":173091,"byte_end":173160,"line_start":143,"line_end":143,"column_start":5,"column_end":74}},{"value":"/ This could be caused by a lack of memory or pool fragmentation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":173165,"byte_end":173232,"line_start":144,"line_end":144,"column_start":5,"column_end":72}},{"value":"error(transparent)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":173237,"byte_end":173258,"line_start":145,"line_end":145,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8667},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":173477,"byte_end":173492,"line_start":150,"line_end":150,"column_start":5,"column_end":20},"name":"OutOfPoolMemory","qualname":"::pso::descriptor::AllocationError::OutOfPoolMemory","value":"AllocationError::OutOfPoolMemory","parent":{"krate":0,"index":8646},"children":[],"decl_id":null,"docs":" Memory allocation failed as there is not enough in the pool.\n This could be caused by too many descriptor sets being created.\n","sig":null,"attributes":[{"value":"/ Memory allocation failed as there is not enough in the pool.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":173301,"byte_end":173365,"line_start":147,"line_end":147,"column_start":5,"column_end":69}},{"value":"/ This could be caused by too many descriptor sets being created.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":173370,"byte_end":173437,"line_start":148,"line_end":148,"column_start":5,"column_end":72}},{"value":"error(\"Out of pool memory\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":173442,"byte_end":173472,"line_start":149,"line_end":149,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8669},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":173593,"byte_end":173607,"line_start":153,"line_end":153,"column_start":5,"column_end":19},"name":"FragmentedPool","qualname":"::pso::descriptor::AllocationError::FragmentedPool","value":"AllocationError::FragmentedPool","parent":{"krate":0,"index":8646},"children":[],"decl_id":null,"docs":" Memory allocation failed due to pool fragmentation.\n","sig":null,"attributes":[{"value":"/ Memory allocation failed due to pool fragmentation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":173498,"byte_end":173553,"line_start":151,"line_end":151,"column_start":5,"column_end":60}},{"value":"error(\"Pool is fragmented\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":173558,"byte_end":173588,"line_start":152,"line_end":152,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8671},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":173735,"byte_end":173753,"line_start":156,"line_end":156,"column_start":5,"column_end":23},"name":"IncompatibleLayout","qualname":"::pso::descriptor::AllocationError::IncompatibleLayout","value":"AllocationError::IncompatibleLayout","parent":{"krate":0,"index":8646},"children":[],"decl_id":null,"docs":" Descriptor set allocation failed as the layout is incompatible with the pool.\n","sig":null,"attributes":[{"value":"/ Descriptor set allocation failed as the layout is incompatible with the pool.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":173613,"byte_end":173694,"line_start":154,"line_end":154,"column_start":5,"column_end":86}},{"value":"error(\"Incompatible layout\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":173699,"byte_end":173730,"line_start":155,"line_end":155,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":8646},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":172999,"byte_end":173014,"line_start":141,"line_end":141,"column_start":10,"column_end":25},"name":"AllocationError","qualname":"::pso::descriptor::AllocationError","value":"pub enum AllocationError {\n    OutOfMemory(OutOfMemory),\n    OutOfPoolMemory,\n    FragmentedPool,\n    IncompatibleLayout,\n}","parent":null,"children":[{"krate":0,"index":8664},{"krate":0,"index":8667},{"krate":0,"index":8669},{"krate":0,"index":8671}],"decl_id":null,"docs":" An error allocating descriptor sets from a pool.\n","sig":null,"attributes":[{"value":"/ An error allocating descriptor sets from a pool.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":172884,"byte_end":172936,"line_start":139,"line_end":139,"column_start":1,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":710},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":173858,"byte_end":173872,"line_start":160,"line_end":160,"column_start":11,"column_end":25},"name":"DescriptorPool","qualname":"::pso::descriptor::DescriptorPool","value":"DescriptorPool<B: Backend>: Send + Sync + fmt::Debug","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":717},{"krate":0,"index":719}],"decl_id":null,"docs":" A descriptor pool is a collection of memory from which descriptor sets are allocated.\n","sig":null,"attributes":[{"value":"/ A descriptor pool is a collection of memory from which descriptor sets are allocated.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":173758,"byte_end":173847,"line_start":159,"line_end":159,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":174513,"byte_end":174525,"line_start":172,"line_end":172,"column_start":15,"column_end":27},"name":"allocate_one","qualname":"::pso::descriptor::DescriptorPool::allocate_one","value":"pub unsafe fn allocate_one(&mut Self, &B::DescriptorSetLayout)\n-> Result<B::DescriptorSet, AllocationError>","parent":{"krate":0,"index":710},"children":[],"decl_id":null,"docs":" Allocate a descriptor set from the pool.","sig":null,"attributes":[{"value":"/ Allocate a descriptor set from the pool.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":173917,"byte_end":173961,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":173966,"byte_end":173969,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ The descriptor set will be allocated from the pool according to the corresponding set layout. However,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":173974,"byte_end":174080,"line_start":163,"line_end":163,"column_start":5,"column_end":111}},{"value":"/ specific descriptors must still be written to the set before use using a [`DescriptorSetWrite`] or","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":174085,"byte_end":174187,"line_start":164,"line_end":164,"column_start":5,"column_end":107}},{"value":"/ [`DescriptorSetCopy`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":174192,"byte_end":174218,"line_start":165,"line_end":165,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":174223,"byte_end":174226,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Descriptors will become invalid once the pool is reset. Usage of invalidated descriptor sets results","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":174231,"byte_end":174335,"line_start":167,"line_end":167,"column_start":5,"column_end":109}},{"value":"/ in undefined behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":174340,"byte_end":174366,"line_start":168,"line_end":168,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":174371,"byte_end":174374,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ [`DescriptorSetWrite`]: struct.DescriptorSetWrite.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":174379,"byte_end":174437,"line_start":170,"line_end":170,"column_start":5,"column_end":63}},{"value":"/ [`DescriptorSetCopy`]: struct.DescriptorSetCopy.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":174442,"byte_end":174498,"line_start":171,"line_end":171,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":175487,"byte_end":175495,"line_start":193,"line_end":193,"column_start":15,"column_end":23},"name":"allocate","qualname":"::pso::descriptor::DescriptorPool::allocate","value":"pub unsafe fn allocate<'a, I, E>(&mut Self, I, &mut E)\n-> Result<(), AllocationError> where I: Iterator<Item =\n&'a B::DescriptorSetLayout>, E: Extend<B::DescriptorSet>","parent":{"krate":0,"index":710},"children":[],"decl_id":null,"docs":" Allocate multiple descriptor sets from the pool.","sig":null,"attributes":[{"value":"/ Allocate multiple descriptor sets from the pool.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":174780,"byte_end":174832,"line_start":181,"line_end":181,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":174837,"byte_end":174840,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ The descriptor set will be allocated from the pool according to the corresponding set layout. However,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":174845,"byte_end":174951,"line_start":183,"line_end":183,"column_start":5,"column_end":111}},{"value":"/ specific descriptors must still be written to the set before use using a [`DescriptorSetWrite`] or","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":174956,"byte_end":175058,"line_start":184,"line_end":184,"column_start":5,"column_end":107}},{"value":"/ [`DescriptorSetCopy`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":175063,"byte_end":175089,"line_start":185,"line_end":185,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":175094,"byte_end":175097,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Each descriptor set will be allocated from the pool according to the corresponding set layout.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":175102,"byte_end":175200,"line_start":187,"line_end":187,"column_start":5,"column_end":103}},{"value":"/ Descriptors will become invalid once the pool is reset. Usage of invalidated descriptor sets results","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":175205,"byte_end":175309,"line_start":188,"line_end":188,"column_start":5,"column_end":109}},{"value":"/ in undefined behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":175314,"byte_end":175340,"line_start":189,"line_end":189,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":175345,"byte_end":175348,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ [`DescriptorSetWrite`]: struct.DescriptorSetWrite.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":175353,"byte_end":175411,"line_start":191,"line_end":191,"column_start":5,"column_end":63}},{"value":"/ [`DescriptorSetCopy`]: struct.DescriptorSetCopy.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":175416,"byte_end":175472,"line_start":192,"line_end":192,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":175917,"byte_end":175921,"line_start":206,"line_end":206,"column_start":15,"column_end":19},"name":"free","qualname":"::pso::descriptor::DescriptorPool::free","value":"pub unsafe fn free<I>(&mut Self, I) where I: Iterator<Item = B::DescriptorSet>","parent":{"krate":0,"index":710},"children":[],"decl_id":null,"docs":" Free the given descriptor sets provided as an iterator.\n","sig":null,"attributes":[{"value":"/ Free the given descriptor sets provided as an iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":175843,"byte_end":175902,"line_start":205,"line_end":205,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":176317,"byte_end":176322,"line_start":214,"line_end":214,"column_start":15,"column_end":20},"name":"reset","qualname":"::pso::descriptor::DescriptorPool::reset","value":"pub unsafe fn reset(&mut Self)","parent":{"krate":0,"index":710},"children":[],"decl_id":null,"docs":" Resets a descriptor pool, releasing all resources from all the descriptor sets\n allocated from it and freeing the descriptor sets. Invalidates all descriptor\n sets allocated from the pool; trying to use one after the pool has been reset\n is undefined behavior.\n","sig":null,"attributes":[{"value":"/ Resets a descriptor pool, releasing all resources from all the descriptor sets","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":176017,"byte_end":176099,"line_start":210,"line_end":210,"column_start":5,"column_end":87}},{"value":"/ allocated from it and freeing the descriptor sets. Invalidates all descriptor","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":176104,"byte_end":176185,"line_start":211,"line_end":211,"column_start":5,"column_end":86}},{"value":"/ sets allocated from the pool; trying to use one after the pool has been reset","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":176190,"byte_end":176271,"line_start":212,"line_end":212,"column_start":5,"column_end":86}},{"value":"/ is undefined behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":176276,"byte_end":176302,"line_start":213,"line_end":213,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":8673},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":176515,"byte_end":176533,"line_start":221,"line_end":221,"column_start":12,"column_end":30},"name":"DescriptorSetWrite","qualname":"::pso::descriptor::DescriptorSetWrite","value":"DescriptorSetWrite { set, binding, array_offset, descriptors }","parent":null,"children":[{"krate":0,"index":8677},{"krate":0,"index":8678},{"krate":0,"index":8679},{"krate":0,"index":8680}],"decl_id":null,"docs":" Writes the actual descriptors to be bound into a descriptor set.","sig":null,"attributes":[{"value":"/ Writes the actual descriptors to be bound into a descriptor set.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":176338,"byte_end":176406,"line_start":217,"line_end":217,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":176407,"byte_end":176410,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ Should be provided to the `write_descriptor_sets` method of a `Device`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":176411,"byte_end":176486,"line_start":219,"line_end":219,"column_start":1,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":8677},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":176650,"byte_end":176653,"line_start":226,"line_end":226,"column_start":9,"column_end":12},"name":"set","qualname":"::pso::descriptor::DescriptorSetWrite::set","value":"&'a mut <B as Backend>::DescriptorSet","parent":{"krate":0,"index":8673},"children":[],"decl_id":null,"docs":" The descriptor set to modify.\n","sig":null,"attributes":[{"value":"/ The descriptor set to modify.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":176608,"byte_end":176641,"line_start":225,"line_end":225,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":8678},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":176988,"byte_end":176995,"line_start":233,"line_end":233,"column_start":9,"column_end":16},"name":"binding","qualname":"::pso::descriptor::DescriptorSetWrite::binding","value":"u32","parent":{"krate":0,"index":8673},"children":[],"decl_id":null,"docs":" Binding index to start writing at.","sig":null,"attributes":[{"value":"/ Binding index to start writing at.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":176685,"byte_end":176723,"line_start":227,"line_end":227,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":176728,"byte_end":176731,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ *Note*: when there are more descriptors provided than","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":176736,"byte_end":176793,"line_start":229,"line_end":229,"column_start":5,"column_end":62}},{"value":"/ array elements left in the specified binding starting","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":176798,"byte_end":176855,"line_start":230,"line_end":230,"column_start":5,"column_end":62}},{"value":"/ at the specified offset, the updates are spilled onto","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":176860,"byte_end":176917,"line_start":231,"line_end":231,"column_start":5,"column_end":62}},{"value":"/ the next binding (starting with offset 0), and so on.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":176922,"byte_end":176979,"line_start":232,"line_end":232,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":8679},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":177066,"byte_end":177078,"line_start":235,"line_end":235,"column_start":9,"column_end":21},"name":"array_offset","qualname":"::pso::descriptor::DescriptorSetWrite::array_offset","value":"usize","parent":{"krate":0,"index":8673},"children":[],"decl_id":null,"docs":" Offset into the array to copy to.\n","sig":null,"attributes":[{"value":"/ Offset into the array to copy to.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":177020,"byte_end":177057,"line_start":234,"line_end":234,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":8680},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":177151,"byte_end":177162,"line_start":237,"line_end":237,"column_start":9,"column_end":20},"name":"descriptors","qualname":"::pso::descriptor::DescriptorSetWrite::descriptors","value":"I","parent":{"krate":0,"index":8673},"children":[],"decl_id":null,"docs":" Descriptors to write to the set.\n","sig":null,"attributes":[{"value":"/ Descriptors to write to the set.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":177106,"byte_end":177142,"line_start":236,"line_end":236,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8689},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":177462,"byte_end":177469,"line_start":247,"line_end":247,"column_start":5,"column_end":12},"name":"Sampler","qualname":"::pso::descriptor::Descriptor::Sampler","value":"Descriptor::Sampler(&'a B::Sampler)","parent":{"krate":0,"index":8686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8692},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":177491,"byte_end":177496,"line_start":248,"line_end":248,"column_start":5,"column_end":10},"name":"Image","qualname":"::pso::descriptor::Descriptor::Image","value":"Descriptor::Image(&'a B::ImageView, Layout)","parent":{"krate":0,"index":8686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8696},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":177528,"byte_end":177548,"line_start":249,"line_end":249,"column_start":5,"column_end":25},"name":"CombinedImageSampler","qualname":"::pso::descriptor::Descriptor::CombinedImageSampler","value":"Descriptor::CombinedImageSampler(&'a B::ImageView, Layout, &'a B::Sampler)","parent":{"krate":0,"index":8686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8701},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":177596,"byte_end":177602,"line_start":250,"line_end":250,"column_start":5,"column_end":11},"name":"Buffer","qualname":"::pso::descriptor::Descriptor::Buffer","value":"Descriptor::Buffer(&'a B::Buffer, SubRange)","parent":{"krate":0,"index":8686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8705},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":177633,"byte_end":177644,"line_start":251,"line_end":251,"column_start":5,"column_end":16},"name":"TexelBuffer","qualname":"::pso::descriptor::Descriptor::TexelBuffer","value":"Descriptor::TexelBuffer(&'a B::BufferView)","parent":{"krate":0,"index":8686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8686},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":177429,"byte_end":177439,"line_start":246,"line_end":246,"column_start":10,"column_end":20},"name":"Descriptor","qualname":"::pso::descriptor::Descriptor","value":"pub enum Descriptor<'a, B: Backend> {\n    Sampler(&'a B::Sampler),\n    Image(&'a B::ImageView, Layout),\n    CombinedImageSampler(&'a B::ImageView, Layout, &'a B::Sampler),\n    Buffer(&'a B::Buffer, SubRange),\n    TexelBuffer(&'a B::BufferView),\n}","parent":null,"children":[{"krate":0,"index":8689},{"krate":0,"index":8692},{"krate":0,"index":8696},{"krate":0,"index":8701},{"krate":0,"index":8705}],"decl_id":null,"docs":" A handle to a specific shader resource that can be bound for use in a `DescriptorSet`.\n Usually provided in a [`DescriptorSetWrite`]","sig":null,"attributes":[{"value":"/ A handle to a specific shader resource that can be bound for use in a `DescriptorSet`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":177170,"byte_end":177260,"line_start":240,"line_end":240,"column_start":1,"column_end":91}},{"value":"/ Usually provided in a [`DescriptorSetWrite`]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":177261,"byte_end":177309,"line_start":241,"line_end":241,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":177310,"byte_end":177313,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ [`DescriptorSetWrite`]: struct.DescriptorSetWrite.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":177314,"byte_end":177372,"line_start":243,"line_end":243,"column_start":1,"column_end":59}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":177373,"byte_end":177395,"line_start":244,"line_end":244,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":8716},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":177857,"byte_end":177874,"line_start":258,"line_end":258,"column_start":12,"column_end":29},"name":"DescriptorSetCopy","qualname":"::pso::descriptor::DescriptorSetCopy","value":"DescriptorSetCopy { src_set, src_binding, src_array_offset, dst_set, dst_binding, dst_array_offset, count }","parent":null,"children":[{"krate":0,"index":8719},{"krate":0,"index":8720},{"krate":0,"index":8721},{"krate":0,"index":8722},{"krate":0,"index":8723},{"krate":0,"index":8724},{"krate":0,"index":8725}],"decl_id":null,"docs":" Copies a range of descriptors to be bound from one descriptor set to another.","sig":null,"attributes":[{"value":"/ Copies a range of descriptors to be bound from one descriptor set to another.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":177668,"byte_end":177749,"line_start":254,"line_end":254,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":177750,"byte_end":177753,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ Should be provided to the `copy_descriptor_sets` method of a `Device`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":177754,"byte_end":177828,"line_start":256,"line_end":256,"column_start":1,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":8719},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":177938,"byte_end":177945,"line_start":260,"line_end":260,"column_start":9,"column_end":16},"name":"src_set","qualname":"::pso::descriptor::DescriptorSetCopy::src_set","value":"&'a <B as Backend>::DescriptorSet","parent":{"krate":0,"index":8716},"children":[],"decl_id":null,"docs":" Descriptor set to copy from.\n","sig":null,"attributes":[{"value":"/ Descriptor set to copy from.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":177897,"byte_end":177929,"line_start":259,"line_end":259,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":8720},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":178261,"byte_end":178272,"line_start":267,"line_end":267,"column_start":9,"column_end":20},"name":"src_binding","qualname":"::pso::descriptor::DescriptorSetCopy::src_binding","value":"u32","parent":{"krate":0,"index":8716},"children":[],"decl_id":null,"docs":" Binding to copy from.","sig":null,"attributes":[{"value":"/ Binding to copy from.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":177973,"byte_end":177998,"line_start":261,"line_end":261,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":178003,"byte_end":178006,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ *Note*: when there are more descriptors required than","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":178011,"byte_end":178068,"line_start":263,"line_end":263,"column_start":5,"column_end":62}},{"value":"/ array elements left in the specified binding starting","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":178073,"byte_end":178130,"line_start":264,"line_end":264,"column_start":5,"column_end":62}},{"value":"/ at the specified offset, the updates are taken from","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":178135,"byte_end":178190,"line_start":265,"line_end":265,"column_start":5,"column_end":60}},{"value":"/ the next binding (starting with offset 0), and so on.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":178195,"byte_end":178252,"line_start":266,"line_end":266,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":8721},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":178365,"byte_end":178381,"line_start":269,"line_end":269,"column_start":9,"column_end":25},"name":"src_array_offset","qualname":"::pso::descriptor::DescriptorSetCopy::src_array_offset","value":"usize","parent":{"krate":0,"index":8716},"children":[],"decl_id":null,"docs":" Offset into the descriptor array to start copying from.\n","sig":null,"attributes":[{"value":"/ Offset into the descriptor array to start copying from.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":178297,"byte_end":178356,"line_start":268,"line_end":268,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":8722},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":178448,"byte_end":178455,"line_start":271,"line_end":271,"column_start":9,"column_end":16},"name":"dst_set","qualname":"::pso::descriptor::DescriptorSetCopy::dst_set","value":"&'a mut <B as Backend>::DescriptorSet","parent":{"krate":0,"index":8716},"children":[],"decl_id":null,"docs":" Descriptor set to copy to.\n","sig":null,"attributes":[{"value":"/ Descriptor set to copy to.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":178409,"byte_end":178439,"line_start":270,"line_end":270,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":8723},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":178775,"byte_end":178786,"line_start":278,"line_end":278,"column_start":9,"column_end":20},"name":"dst_binding","qualname":"::pso::descriptor::DescriptorSetCopy::dst_binding","value":"u32","parent":{"krate":0,"index":8716},"children":[],"decl_id":null,"docs":" Binding to copy to.","sig":null,"attributes":[{"value":"/ Binding to copy to.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":178487,"byte_end":178510,"line_start":272,"line_end":272,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":178515,"byte_end":178518,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ *Note*: when there are more descriptors provided than","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":178523,"byte_end":178580,"line_start":274,"line_end":274,"column_start":5,"column_end":62}},{"value":"/ array elements left in the specified binding starting","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":178585,"byte_end":178642,"line_start":275,"line_end":275,"column_start":5,"column_end":62}},{"value":"/ at the specified offset, the updates are spilled onto","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":178647,"byte_end":178704,"line_start":276,"line_end":276,"column_start":5,"column_end":62}},{"value":"/ the next binding (starting with offset 0), and so on.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":178709,"byte_end":178766,"line_start":277,"line_end":277,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":8724},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":178868,"byte_end":178884,"line_start":280,"line_end":280,"column_start":9,"column_end":25},"name":"dst_array_offset","qualname":"::pso::descriptor::DescriptorSetCopy::dst_array_offset","value":"usize","parent":{"krate":0,"index":8716},"children":[],"decl_id":null,"docs":" Offset into the descriptor array to copy to.\n","sig":null,"attributes":[{"value":"/ Offset into the descriptor array to copy to.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":178811,"byte_end":178859,"line_start":279,"line_end":279,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":8725},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":178954,"byte_end":178959,"line_start":282,"line_end":282,"column_start":9,"column_end":14},"name":"count","qualname":"::pso::descriptor::DescriptorSetCopy::count","value":"usize","parent":{"krate":0,"index":8716},"children":[],"decl_id":null,"docs":" How many descriptors to copy.\n","sig":null,"attributes":[{"value":"/ How many descriptors to copy.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":178912,"byte_end":178945,"line_start":281,"line_end":281,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":8730},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":179038,"byte_end":179063,"line_start":287,"line_end":287,"column_start":16,"column_end":41},"name":"DescriptorPoolCreateFlags","qualname":"::pso::descriptor::DescriptorPoolCreateFlags","value":"DescriptorPoolCreateFlags {  }","parent":null,"children":[{"krate":0,"index":8731}],"decl_id":null,"docs":" Descriptor pool creation flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":8763},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":179192,"byte_end":179211,"line_start":290,"line_end":290,"column_start":15,"column_end":34},"name":"FREE_DESCRIPTOR_SET","qualname":"::pso::descriptor::DescriptorPoolCreateFlags::FREE_DESCRIPTOR_SET","value":"DescriptorPoolCreateFlags","parent":{"krate":0,"index":8762},"children":[],"decl_id":null,"docs":" Specifies that descriptor sets are allowed to be freed from the pool\n individually.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8812},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":179756,"byte_end":179760,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"name":"Rect","qualname":"::pso::graphics::Rect","value":"Rect { x, y, w, h }","parent":null,"children":[{"krate":0,"index":8813},{"krate":0,"index":8814},{"krate":0,"index":8815},{"krate":0,"index":8816}],"decl_id":null,"docs":" A simple struct describing a rect with integer coordinates.\n","sig":null,"attributes":[{"value":"/ A simple struct describing a rect with integer coordinates.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":179559,"byte_end":179622,"line_start":15,"line_end":15,"column_start":1,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":8813},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":179791,"byte_end":179792,"line_start":20,"line_end":20,"column_start":9,"column_end":10},"name":"x","qualname":"::pso::graphics::Rect::x","value":"i16","parent":{"krate":0,"index":8812},"children":[],"decl_id":null,"docs":" X position.\n","sig":null,"attributes":[{"value":"/ X position.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":179767,"byte_end":179782,"line_start":19,"line_end":19,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":8814},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":179827,"byte_end":179828,"line_start":22,"line_end":22,"column_start":9,"column_end":10},"name":"y","qualname":"::pso::graphics::Rect::y","value":"i16","parent":{"krate":0,"index":8812},"children":[],"decl_id":null,"docs":" Y position.\n","sig":null,"attributes":[{"value":"/ Y position.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":179803,"byte_end":179818,"line_start":21,"line_end":21,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":8815},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":179858,"byte_end":179859,"line_start":24,"line_end":24,"column_start":9,"column_end":10},"name":"w","qualname":"::pso::graphics::Rect::w","value":"i16","parent":{"krate":0,"index":8812},"children":[],"decl_id":null,"docs":" Width.\n","sig":null,"attributes":[{"value":"/ Width.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":179839,"byte_end":179849,"line_start":23,"line_end":23,"column_start":5,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":8816},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":179890,"byte_end":179891,"line_start":26,"line_end":26,"column_start":9,"column_end":10},"name":"h","qualname":"::pso::graphics::Rect::h","value":"i16","parent":{"krate":0,"index":8812},"children":[],"decl_id":null,"docs":" Height.\n","sig":null,"attributes":[{"value":"/ Height.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":179870,"byte_end":179881,"line_start":25,"line_end":25,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":8831},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":180074,"byte_end":180083,"line_start":32,"line_end":32,"column_start":12,"column_end":21},"name":"ClearRect","qualname":"::pso::graphics::ClearRect","value":"ClearRect { rect, layers }","parent":null,"children":[{"krate":0,"index":8832},{"krate":0,"index":8833}],"decl_id":null,"docs":" A simple struct describing a rect with integer coordinates.\n","sig":null,"attributes":[{"value":"/ A simple struct describing a rect with integer coordinates.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":179901,"byte_end":179964,"line_start":29,"line_end":29,"column_start":1,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":8832},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":180113,"byte_end":180117,"line_start":34,"line_end":34,"column_start":9,"column_end":13},"name":"rect","qualname":"::pso::graphics::ClearRect::rect","value":"pso::graphics::Rect","parent":{"krate":0,"index":8831},"children":[],"decl_id":null,"docs":" 2D region.\n","sig":null,"attributes":[{"value":"/ 2D region.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":180090,"byte_end":180104,"line_start":33,"line_end":33,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":8833},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":180154,"byte_end":180160,"line_start":36,"line_end":36,"column_start":9,"column_end":15},"name":"layers","qualname":"::pso::graphics::ClearRect::layers","value":"std::ops::Range<u16>","parent":{"krate":0,"index":8831},"children":[],"decl_id":null,"docs":" Layer range.\n","sig":null,"attributes":[{"value":"/ Layer range.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":180129,"byte_end":180145,"line_start":35,"line_end":35,"column_start":5,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":8842},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":180356,"byte_end":180364,"line_start":42,"line_end":42,"column_start":12,"column_end":20},"name":"Viewport","qualname":"::pso::graphics::Viewport","value":"Viewport { rect, depth }","parent":null,"children":[{"krate":0,"index":8843},{"krate":0,"index":8844}],"decl_id":null,"docs":" A viewport, generally equating to a window on a display.\n","sig":null,"attributes":[{"value":"/ A viewport, generally equating to a window on a display.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":180186,"byte_end":180246,"line_start":39,"line_end":39,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":8843},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":180408,"byte_end":180412,"line_start":44,"line_end":44,"column_start":9,"column_end":13},"name":"rect","qualname":"::pso::graphics::Viewport::rect","value":"pso::graphics::Rect","parent":{"krate":0,"index":8842},"children":[],"decl_id":null,"docs":" The viewport boundaries.\n","sig":null,"attributes":[{"value":"/ The viewport boundaries.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":180371,"byte_end":180399,"line_start":43,"line_end":43,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":8844},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":180463,"byte_end":180468,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"name":"depth","qualname":"::pso::graphics::Viewport::depth","value":"std::ops::Range<f32>","parent":{"krate":0,"index":8842},"children":[],"decl_id":null,"docs":" The viewport depth limits.\n","sig":null,"attributes":[{"value":"/ The viewport depth limits.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":180424,"byte_end":180454,"line_start":45,"line_end":45,"column_start":5,"column_end":35}}]},{"kind":"Type","id":{"krate":0,"index":767},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":180525,"byte_end":180535,"line_start":50,"line_end":50,"column_start":10,"column_end":20},"name":"ColorValue","qualname":"::pso::graphics::ColorValue","value":"[f32; ]","parent":null,"children":[],"decl_id":null,"docs":" A single RGBA float color.\n","sig":null,"attributes":[{"value":"/ A single RGBA float color.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":180485,"byte_end":180515,"line_start":49,"line_end":49,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":769},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":180603,"byte_end":180613,"line_start":52,"line_end":52,"column_start":10,"column_end":20},"name":"DepthValue","qualname":"::pso::graphics::DepthValue","value":"f32","parent":null,"children":[],"decl_id":null,"docs":" A single depth value from a depth buffer.\n","sig":null,"attributes":[{"value":"/ A single depth value from a depth buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":180548,"byte_end":180593,"line_start":51,"line_end":51,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":770},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":180672,"byte_end":180684,"line_start":54,"line_end":54,"column_start":10,"column_end":22},"name":"StencilValue","qualname":"::pso::graphics::StencilValue","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" A single value from a stencil buffer.\n","sig":null,"attributes":[{"value":"/ A single value from a stencil buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":180621,"byte_end":180662,"line_start":53,"line_end":53,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":8853},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":180840,"byte_end":180851,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"BakedStates","qualname":"::pso::graphics::BakedStates","value":"BakedStates { viewport, scissor, blend_color, depth_bounds }","parent":null,"children":[{"krate":0,"index":8854},{"krate":0,"index":8855},{"krate":0,"index":8856},{"krate":0,"index":8857}],"decl_id":null,"docs":" Baked-in pipeline states.\n","sig":null,"attributes":[{"value":"/ Baked-in pipeline states.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":180692,"byte_end":180721,"line_start":55,"line_end":55,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":8854},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":180912,"byte_end":180920,"line_start":60,"line_end":60,"column_start":9,"column_end":17},"name":"viewport","qualname":"::pso::graphics::BakedStates::viewport","value":"std::option::Option<pso::graphics::Viewport>","parent":{"krate":0,"index":8853},"children":[],"decl_id":null,"docs":" Static viewport. TODO: multiple viewports\n","sig":null,"attributes":[{"value":"/ Static viewport. TODO: multiple viewports","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":180858,"byte_end":180903,"line_start":59,"line_end":59,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":8855},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":180996,"byte_end":181003,"line_start":62,"line_end":62,"column_start":9,"column_end":16},"name":"scissor","qualname":"::pso::graphics::BakedStates::scissor","value":"std::option::Option<pso::graphics::Rect>","parent":{"krate":0,"index":8853},"children":[],"decl_id":null,"docs":" Static scissor. TODO: multiple scissors\n","sig":null,"attributes":[{"value":"/ Static scissor. TODO: multiple scissors","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":180944,"byte_end":180987,"line_start":61,"line_end":61,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":8856},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":181064,"byte_end":181075,"line_start":64,"line_end":64,"column_start":9,"column_end":20},"name":"blend_color","qualname":"::pso::graphics::BakedStates::blend_color","value":"std::option::Option<[f32; 4]>","parent":{"krate":0,"index":8853},"children":[],"decl_id":null,"docs":" Static blend constant color.\n","sig":null,"attributes":[{"value":"/ Static blend constant color.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":181023,"byte_end":181055,"line_start":63,"line_end":63,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":8857},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":181134,"byte_end":181146,"line_start":66,"line_end":66,"column_start":9,"column_end":21},"name":"depth_bounds","qualname":"::pso::graphics::BakedStates::depth_bounds","value":"std::option::Option<std::ops::Range<f32>>","parent":{"krate":0,"index":8853},"children":[],"decl_id":null,"docs":" Static depth bounds.\n","sig":null,"attributes":[{"value":"/ Static depth bounds.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":181101,"byte_end":181125,"line_start":65,"line_end":65,"column_start":5,"column_end":29}}]},{"kind":"StructVariant","id":{"krate":0,"index":8871},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":181419,"byte_end":181425,"line_start":72,"line_end":72,"column_start":5,"column_end":11},"name":"Vertex","qualname":"::pso::graphics::PrimitiveAssemblerDesc::Vertex","value":"PrimitiveAssemblerDesc::Vertex { buffers, attributes, input_assembler, vertex, tessellation, geometry }","parent":{"krate":0,"index":8868},"children":[],"decl_id":null,"docs":" Vertex based pipeline\n","sig":null,"attributes":[{"value":"/ Vertex based pipeline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":181389,"byte_end":181414,"line_start":71,"line_end":71,"column_start":5,"column_end":30}}]},{"kind":"StructVariant","id":{"krate":0,"index":8878},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":182565,"byte_end":182569,"line_start":97,"line_end":97,"column_start":5,"column_end":9},"name":"Mesh","qualname":"::pso::graphics::PrimitiveAssemblerDesc::Mesh","value":"PrimitiveAssemblerDesc::Mesh { task, mesh }","parent":{"krate":0,"index":8868},"children":[],"decl_id":null,"docs":" Mesh shading pipeline\n","sig":null,"attributes":[{"value":"/ Mesh shading pipeline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":182535,"byte_end":182560,"line_start":96,"line_end":96,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":8868},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":181344,"byte_end":181366,"line_start":70,"line_end":70,"column_start":10,"column_end":32},"name":"PrimitiveAssemblerDesc","qualname":"::pso::graphics::PrimitiveAssemblerDesc","value":"pub enum PrimitiveAssemblerDesc<'a, B: Backend> {\n    Vertex {\n        buffers: &'a [VertexBufferDesc],\n        attributes: &'a [AttributeDesc],\n        input_assembler: InputAssemblerDesc,\n        vertex: EntryPoint,\n        tessellation: Option<(EntryPoint, EntryPoint)>,\n        geometry: Option<EntryPoint>,\n    },\n    Mesh {\n        task: Option<EntryPoint>,\n        mesh: EntryPoint,\n    },\n}","parent":null,"children":[{"krate":0,"index":8871},{"krate":0,"index":8878}],"decl_id":null,"docs":" Primitive Assembler describes how input data are fetched in the pipeline and formed into primitives before being sent into the fragment shader.\n","sig":null,"attributes":[{"value":"/ Primitive Assembler describes how input data are fetched in the pipeline and formed into primitives before being sent into the fragment shader.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":181187,"byte_end":181334,"line_start":69,"line_end":69,"column_start":1,"column_end":148}}]},{"kind":"Struct","id":{"krate":0,"index":8885},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":183066,"byte_end":183086,"line_start":110,"line_end":110,"column_start":12,"column_end":32},"name":"GraphicsPipelineDesc","qualname":"::pso::graphics::GraphicsPipelineDesc","value":"GraphicsPipelineDesc { label, primitive_assembler, rasterizer, fragment, blender, depth_stencil, multisampling, baked_states, layout, subpass, flags, parent }","parent":null,"children":[{"krate":0,"index":8888},{"krate":0,"index":8889},{"krate":0,"index":8890},{"krate":0,"index":8891},{"krate":0,"index":8892},{"krate":0,"index":8893},{"krate":0,"index":8894},{"krate":0,"index":8895},{"krate":0,"index":8896},{"krate":0,"index":8897},{"krate":0,"index":8898},{"krate":0,"index":8899}],"decl_id":null,"docs":" A description of all the settings that can be altered\n when creating a graphics pipeline.\n","sig":null,"attributes":[{"value":"/ A description of all the settings that can be altered","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":182941,"byte_end":182998,"line_start":107,"line_end":107,"column_start":1,"column_end":58}},{"value":"/ when creating a graphics pipeline.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":182999,"byte_end":183037,"line_start":108,"line_end":108,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":8888},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":183136,"byte_end":183141,"line_start":112,"line_end":112,"column_start":9,"column_end":14},"name":"label","qualname":"::pso::graphics::GraphicsPipelineDesc::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":8885},"children":[],"decl_id":null,"docs":" Pipeline label\n","sig":null,"attributes":[{"value":"/ Pipeline label","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":183109,"byte_end":183127,"line_start":111,"line_end":111,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":8889},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":183196,"byte_end":183215,"line_start":114,"line_end":114,"column_start":9,"column_end":28},"name":"primitive_assembler","qualname":"::pso::graphics::GraphicsPipelineDesc::primitive_assembler","value":"pso::graphics::PrimitiveAssemblerDesc<'a, B>","parent":{"krate":0,"index":8885},"children":[],"decl_id":null,"docs":" Primitive assembler\n","sig":null,"attributes":[{"value":"/ Primitive assembler","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":183164,"byte_end":183187,"line_start":113,"line_end":113,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":8890},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":183281,"byte_end":183291,"line_start":116,"line_end":116,"column_start":9,"column_end":19},"name":"rasterizer","qualname":"::pso::graphics::GraphicsPipelineDesc::rasterizer","value":"pso::graphics::Rasterizer","parent":{"krate":0,"index":8885},"children":[],"decl_id":null,"docs":" Rasterizer setup\n","sig":null,"attributes":[{"value":"/ Rasterizer setup","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":183252,"byte_end":183272,"line_start":115,"line_end":115,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":8891},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":183773,"byte_end":183781,"line_start":126,"line_end":126,"column_start":9,"column_end":17},"name":"fragment","qualname":"::pso::graphics::GraphicsPipelineDesc::fragment","value":"std::option::Option<pso::EntryPoint<'a, B>>","parent":{"krate":0,"index":8885},"children":[],"decl_id":null,"docs":" A shader that outputs a value for a fragment.\n Usually this value is a color that is then displayed as a\n pixel on a screen.","sig":null,"attributes":[{"value":"/ A shader that outputs a value for a fragment.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":183309,"byte_end":183358,"line_start":117,"line_end":117,"column_start":5,"column_end":54}},{"value":"/ Usually this value is a color that is then displayed as a","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":183363,"byte_end":183424,"line_start":118,"line_end":118,"column_start":5,"column_end":66}},{"value":"/ pixel on a screen.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":183429,"byte_end":183451,"line_start":119,"line_end":119,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":183456,"byte_end":183459,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ If a fragment shader is omitted, the results of fragment","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":183464,"byte_end":183524,"line_start":121,"line_end":121,"column_start":5,"column_end":65}},{"value":"/ processing are undefined. Specifically, any fragment color","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":183529,"byte_end":183591,"line_start":122,"line_end":122,"column_start":5,"column_end":67}},{"value":"/ outputs are considered to have undefined values, and the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":183596,"byte_end":183656,"line_start":123,"line_end":123,"column_start":5,"column_end":65}},{"value":"/ fragment depth is considered to be unmodified. This can","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":183661,"byte_end":183720,"line_start":124,"line_end":124,"column_start":5,"column_end":64}},{"value":"/ be useful for depth-only rendering.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":183725,"byte_end":183764,"line_start":125,"line_end":125,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":8892},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":183883,"byte_end":183890,"line_start":128,"line_end":128,"column_start":9,"column_end":16},"name":"blender","qualname":"::pso::graphics::GraphicsPipelineDesc::blender","value":"pso::graphics::BlendDesc","parent":{"krate":0,"index":8885},"children":[],"decl_id":null,"docs":" Description of how blend operations should be performed.\n","sig":null,"attributes":[{"value":"/ Description of how blend operations should be performed.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":183814,"byte_end":183874,"line_start":127,"line_end":127,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":8893},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":183939,"byte_end":183952,"line_start":130,"line_end":130,"column_start":9,"column_end":22},"name":"depth_stencil","qualname":"::pso::graphics::GraphicsPipelineDesc::depth_stencil","value":"pso::output_merger::DepthStencilDesc","parent":{"krate":0,"index":8885},"children":[],"decl_id":null,"docs":" Depth stencil (DSV)\n","sig":null,"attributes":[{"value":"/ Depth stencil (DSV)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":183907,"byte_end":183930,"line_start":129,"line_end":129,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":8894},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":184003,"byte_end":184016,"line_start":132,"line_end":132,"column_start":9,"column_end":22},"name":"multisampling","qualname":"::pso::graphics::GraphicsPipelineDesc::multisampling","value":"std::option::Option<pso::graphics::Multisampling>","parent":{"krate":0,"index":8885},"children":[],"decl_id":null,"docs":" Multisampling.\n","sig":null,"attributes":[{"value":"/ Multisampling.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":183976,"byte_end":183994,"line_start":131,"line_end":131,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":8895},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":184081,"byte_end":184093,"line_start":134,"line_end":134,"column_start":9,"column_end":21},"name":"baked_states","qualname":"::pso::graphics::GraphicsPipelineDesc::baked_states","value":"pso::graphics::BakedStates","parent":{"krate":0,"index":8885},"children":[],"decl_id":null,"docs":" Static pipeline states.\n","sig":null,"attributes":[{"value":"/ Static pipeline states.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":184045,"byte_end":184072,"line_start":133,"line_end":133,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":8896},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":184141,"byte_end":184147,"line_start":136,"line_end":136,"column_start":9,"column_end":15},"name":"layout","qualname":"::pso::graphics::GraphicsPipelineDesc::layout","value":"&'a <B as Backend>::PipelineLayout","parent":{"krate":0,"index":8885},"children":[],"decl_id":null,"docs":" Pipeline layout.\n","sig":null,"attributes":[{"value":"/ Pipeline layout.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":184112,"byte_end":184132,"line_start":135,"line_end":135,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":8897},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":184235,"byte_end":184242,"line_start":138,"line_end":138,"column_start":9,"column_end":16},"name":"subpass","qualname":"::pso::graphics::GraphicsPipelineDesc::subpass","value":"pass::Subpass<'a, B>","parent":{"krate":0,"index":8885},"children":[],"decl_id":null,"docs":" Subpass in which the pipeline can be executed.\n","sig":null,"attributes":[{"value":"/ Subpass in which the pipeline can be executed.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":184176,"byte_end":184226,"line_start":137,"line_end":137,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":8898},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":184336,"byte_end":184341,"line_start":140,"line_end":140,"column_start":9,"column_end":14},"name":"flags","qualname":"::pso::graphics::GraphicsPipelineDesc::flags","value":"pso::PipelineCreationFlags","parent":{"krate":0,"index":8885},"children":[],"decl_id":null,"docs":" Options that may be set to alter pipeline properties.\n","sig":null,"attributes":[{"value":"/ Options that may be set to alter pipeline properties.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":184270,"byte_end":184327,"line_start":139,"line_end":139,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":8899},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":184446,"byte_end":184452,"line_start":143,"line_end":143,"column_start":9,"column_end":15},"name":"parent","qualname":"::pso::graphics::GraphicsPipelineDesc::parent","value":"pso::BasePipeline<'a, <B as Backend>::GraphicsPipeline>","parent":{"krate":0,"index":8885},"children":[],"decl_id":null,"docs":" The parent pipeline, which may be\n `BasePipeline::None`.\n","sig":null,"attributes":[{"value":"/ The parent pipeline, which may be","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":184370,"byte_end":184407,"line_start":141,"line_end":141,"column_start":5,"column_end":42}},{"value":"/ `BasePipeline::None`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":184412,"byte_end":184437,"line_start":142,"line_end":142,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":184601,"byte_end":184604,"line_start":148,"line_end":148,"column_start":12,"column_end":15},"name":"new","qualname":"<GraphicsPipelineDesc>::new","value":"pub fn new(PrimitiveAssemblerDesc, Rasterizer, Option<EntryPoint>,\n           &'a B::PipelineLayout, pass::Subpass) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty PSO descriptor.\n","sig":null,"attributes":[{"value":"/ Create a new empty PSO descriptor.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":184551,"byte_end":184589,"line_start":147,"line_end":147,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8905},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":185562,"byte_end":185567,"line_start":178,"line_end":178,"column_start":5,"column_end":10},"name":"Point","qualname":"::pso::graphics::PolygonMode::Point","value":"PolygonMode::Point","parent":{"krate":0,"index":8904},"children":[],"decl_id":null,"docs":" Rasterize as a point.\n","sig":null,"attributes":[{"value":"/ Rasterize as a point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":185532,"byte_end":185557,"line_start":177,"line_end":177,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8907},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":185623,"byte_end":185627,"line_start":180,"line_end":180,"column_start":5,"column_end":9},"name":"Line","qualname":"::pso::graphics::PolygonMode::Line","value":"PolygonMode::Line","parent":{"krate":0,"index":8904},"children":[],"decl_id":null,"docs":" Rasterize as a line with the given width.\n","sig":null,"attributes":[{"value":"/ Rasterize as a line with the given width.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":185573,"byte_end":185618,"line_start":179,"line_end":179,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8909},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":185662,"byte_end":185666,"line_start":182,"line_end":182,"column_start":5,"column_end":9},"name":"Fill","qualname":"::pso::graphics::PolygonMode::Fill","value":"PolygonMode::Fill","parent":{"krate":0,"index":8904},"children":[],"decl_id":null,"docs":" Rasterize as a face.\n","sig":null,"attributes":[{"value":"/ Rasterize as a face.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":185633,"byte_end":185657,"line_start":181,"line_end":181,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":8904},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":185514,"byte_end":185525,"line_start":176,"line_end":176,"column_start":10,"column_end":21},"name":"PolygonMode","qualname":"::pso::graphics::PolygonMode","value":"pub enum PolygonMode { Point, Line, Fill, }","parent":null,"children":[{"krate":0,"index":8905},{"krate":0,"index":8907},{"krate":0,"index":8909}],"decl_id":null,"docs":" Methods for rasterizing polygons, ie, turning the mesh\n into a raster image.\n","sig":null,"attributes":[{"value":"/ Methods for rasterizing polygons, ie, turning the mesh","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":185305,"byte_end":185363,"line_start":172,"line_end":172,"column_start":1,"column_end":59}},{"value":"/ into a raster image.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":185364,"byte_end":185388,"line_start":173,"line_end":173,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8922},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":186002,"byte_end":186011,"line_start":192,"line_end":192,"column_start":5,"column_end":14},"name":"Clockwise","qualname":"::pso::graphics::FrontFace::Clockwise","value":"FrontFace::Clockwise","parent":{"krate":0,"index":8921},"children":[],"decl_id":null,"docs":" Clockwise winding order.\n","sig":null,"attributes":[{"value":"/ Clockwise winding order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":185969,"byte_end":185997,"line_start":191,"line_end":191,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8924},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":186058,"byte_end":186074,"line_start":194,"line_end":194,"column_start":5,"column_end":21},"name":"CounterClockwise","qualname":"::pso::graphics::FrontFace::CounterClockwise","value":"FrontFace::CounterClockwise","parent":{"krate":0,"index":8921},"children":[],"decl_id":null,"docs":" Counter-clockwise winding order.\n","sig":null,"attributes":[{"value":"/ Counter-clockwise winding order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":186017,"byte_end":186053,"line_start":193,"line_end":193,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":8921},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":185953,"byte_end":185962,"line_start":190,"line_end":190,"column_start":10,"column_end":19},"name":"FrontFace","qualname":"::pso::graphics::FrontFace","value":"pub enum FrontFace { Clockwise, CounterClockwise, }","parent":null,"children":[{"krate":0,"index":8922},{"krate":0,"index":8924}],"decl_id":null,"docs":" The front face winding order of a set of vertices. This is\n the order of vertexes that define which side of a face is\n the \"front\".\n","sig":null,"attributes":[{"value":"/ The front face winding order of a set of vertices. This is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":185671,"byte_end":185733,"line_start":185,"line_end":185,"column_start":1,"column_end":63}},{"value":"/ the order of vertexes that define which side of a face is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":185734,"byte_end":185795,"line_start":186,"line_end":186,"column_start":1,"column_end":62}},{"value":"/ the \"front\".","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":185796,"byte_end":185812,"line_start":187,"line_end":187,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":8944},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":186609,"byte_end":186618,"line_start":206,"line_end":206,"column_start":12,"column_end":21},"name":"DepthBias","qualname":"::pso::graphics::DepthBias","value":"DepthBias { const_factor, clamp, slope_factor }","parent":null,"children":[{"krate":0,"index":8945},{"krate":0,"index":8946},{"krate":0,"index":8947}],"decl_id":null,"docs":" A depth bias allows changing the produced depth values\n for fragments slightly but consistently. This permits\n drawing of multiple polygons in the same plane without\n Z-fighting, such as when trying to draw shadows on a wall.","sig":null,"attributes":[{"value":"/ A depth bias allows changing the produced depth values","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":186079,"byte_end":186137,"line_start":197,"line_end":197,"column_start":1,"column_end":59}},{"value":"/ for fragments slightly but consistently. This permits","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":186138,"byte_end":186195,"line_start":198,"line_end":198,"column_start":1,"column_end":58}},{"value":"/ drawing of multiple polygons in the same plane without","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":186196,"byte_end":186254,"line_start":199,"line_end":199,"column_start":1,"column_end":59}},{"value":"/ Z-fighting, such as when trying to draw shadows on a wall.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":186255,"byte_end":186317,"line_start":200,"line_end":200,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":186318,"byte_end":186321,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ For details of the algorithm and equations, see","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":186322,"byte_end":186373,"line_start":202,"line_end":202,"column_start":1,"column_end":52}},{"value":"/ [the Vulkan spec](https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#primsrast-depthbias).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":186374,"byte_end":186484,"line_start":203,"line_end":203,"column_start":1,"column_end":111}}]},{"kind":"Field","id":{"krate":0,"index":8945},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":186684,"byte_end":186696,"line_start":208,"line_end":208,"column_start":9,"column_end":21},"name":"const_factor","qualname":"::pso::graphics::DepthBias::const_factor","value":"f32","parent":{"krate":0,"index":8944},"children":[],"decl_id":null,"docs":" A constant depth value added to each fragment.\n","sig":null,"attributes":[{"value":"/ A constant depth value added to each fragment.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":186625,"byte_end":186675,"line_start":207,"line_end":207,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":8946},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":186768,"byte_end":186773,"line_start":210,"line_end":210,"column_start":9,"column_end":14},"name":"clamp","qualname":"::pso::graphics::DepthBias::clamp","value":"f32","parent":{"krate":0,"index":8944},"children":[],"decl_id":null,"docs":" The minimum or maximum depth bias of a fragment.\n","sig":null,"attributes":[{"value":"/ The minimum or maximum depth bias of a fragment.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":186707,"byte_end":186759,"line_start":209,"line_end":209,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":8947},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":186845,"byte_end":186857,"line_start":212,"line_end":212,"column_start":9,"column_end":21},"name":"slope_factor","qualname":"::pso::graphics::DepthBias::slope_factor","value":"f32","parent":{"krate":0,"index":8944},"children":[],"decl_id":null,"docs":" A constant bias applied to the fragment's slope.\n","sig":null,"attributes":[{"value":"/ A constant bias applied to the fragment's slope.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":186784,"byte_end":186836,"line_start":211,"line_end":211,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":8959},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":187007,"byte_end":187017,"line_start":218,"line_end":218,"column_start":12,"column_end":22},"name":"Rasterizer","qualname":"::pso::graphics::Rasterizer","value":"Rasterizer { polygon_mode, cull_face, front_face, depth_clamping, depth_bias, conservative, line_width }","parent":null,"children":[{"krate":0,"index":8960},{"krate":0,"index":8961},{"krate":0,"index":8962},{"krate":0,"index":8963},{"krate":0,"index":8964},{"krate":0,"index":8965},{"krate":0,"index":8966}],"decl_id":null,"docs":" Rasterization state.\n","sig":null,"attributes":[{"value":"/ Rasterization state.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":186867,"byte_end":186891,"line_start":215,"line_end":215,"column_start":1,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":8960},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":187069,"byte_end":187081,"line_start":220,"line_end":220,"column_start":9,"column_end":21},"name":"polygon_mode","qualname":"::pso::graphics::Rasterizer::polygon_mode","value":"pso::graphics::PolygonMode","parent":{"krate":0,"index":8959},"children":[],"decl_id":null,"docs":" How to rasterize this primitive.\n","sig":null,"attributes":[{"value":"/ How to rasterize this primitive.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":187024,"byte_end":187060,"line_start":219,"line_end":219,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":8961},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":187141,"byte_end":187150,"line_start":222,"line_end":222,"column_start":9,"column_end":18},"name":"cull_face","qualname":"::pso::graphics::Rasterizer::cull_face","value":"pso::output_merger::Face","parent":{"krate":0,"index":8959},"children":[],"decl_id":null,"docs":" Which face should be culled.\n","sig":null,"attributes":[{"value":"/ Which face should be culled.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":187100,"byte_end":187132,"line_start":221,"line_end":221,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":8962},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":187243,"byte_end":187253,"line_start":224,"line_end":224,"column_start":9,"column_end":19},"name":"front_face","qualname":"::pso::graphics::Rasterizer::front_face","value":"pso::graphics::FrontFace","parent":{"krate":0,"index":8959},"children":[],"decl_id":null,"docs":" Which vertex winding is considered to be the front face for culling.\n","sig":null,"attributes":[{"value":"/ Which vertex winding is considered to be the front face for culling.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":187162,"byte_end":187234,"line_start":223,"line_end":223,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":8963},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":187485,"byte_end":187499,"line_start":228,"line_end":228,"column_start":9,"column_end":23},"name":"depth_clamping","qualname":"::pso::graphics::Rasterizer::depth_clamping","value":"bool","parent":{"krate":0,"index":8959},"children":[],"decl_id":null,"docs":" Whether or not to enable depth clamping; when enabled, instead of\n fragments being omitted when they are outside the bounds of the z-plane,\n they will be clamped to the min or max z value.\n","sig":null,"attributes":[{"value":"/ Whether or not to enable depth clamping; when enabled, instead of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":187270,"byte_end":187339,"line_start":225,"line_end":225,"column_start":5,"column_end":74}},{"value":"/ fragments being omitted when they are outside the bounds of the z-plane,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":187344,"byte_end":187420,"line_start":226,"line_end":226,"column_start":5,"column_end":81}},{"value":"/ they will be clamped to the min or max z value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":187425,"byte_end":187476,"line_start":227,"line_end":227,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":8964},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":187581,"byte_end":187591,"line_start":230,"line_end":230,"column_start":9,"column_end":19},"name":"depth_bias","qualname":"::pso::graphics::Rasterizer::depth_bias","value":"std::option::Option<pso::State<pso::graphics::DepthBias>>","parent":{"krate":0,"index":8959},"children":[],"decl_id":null,"docs":" What depth bias, if any, to use for the drawn primitives.\n","sig":null,"attributes":[{"value":"/ What depth bias, if any, to use for the drawn primitives.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":187511,"byte_end":187572,"line_start":229,"line_end":229,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":8965},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":187717,"byte_end":187729,"line_start":232,"line_end":232,"column_start":9,"column_end":21},"name":"conservative","qualname":"::pso::graphics::Rasterizer::conservative","value":"bool","parent":{"krate":0,"index":8959},"children":[],"decl_id":null,"docs":" Controls how triangles will be rasterized depending on their overlap with pixels.\n","sig":null,"attributes":[{"value":"/ Controls how triangles will be rasterized depending on their overlap with pixels.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":187623,"byte_end":187708,"line_start":231,"line_end":231,"column_start":5,"column_end":90}}]},{"kind":"Field","id":{"krate":0,"index":8966},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":187797,"byte_end":187807,"line_start":234,"line_end":234,"column_start":9,"column_end":19},"name":"line_width","qualname":"::pso::graphics::Rasterizer::line_width","value":"pso::State<f32>","parent":{"krate":0,"index":8959},"children":[],"decl_id":null,"docs":" Controls width of rasterized line segments.\n","sig":null,"attributes":[{"value":"/ Controls width of rasterized line segments.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":187741,"byte_end":187788,"line_start":233,"line_end":233,"column_start":5,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":776},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":187904,"byte_end":187908,"line_start":239,"line_end":239,"column_start":15,"column_end":19},"name":"FILL","qualname":"::pso::graphics::Rasterizer::FILL","value":"Self","parent":{"krate":0,"index":775},"children":[],"decl_id":null,"docs":" Simple polygon-filling rasterizer state\n","sig":null,"attributes":[{"value":"/ Simple polygon-filling rasterizer state","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":187846,"byte_end":187889,"line_start":238,"line_end":238,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":8976},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":188391,"byte_end":188400,"line_start":253,"line_end":253,"column_start":12,"column_end":21},"name":"BlendDesc","qualname":"::pso::graphics::BlendDesc","value":"BlendDesc { logic_op, targets }","parent":null,"children":[{"krate":0,"index":8977},{"krate":0,"index":8978}],"decl_id":null,"docs":" A description of an equation for how to blend transparent, overlapping fragments.\n","sig":null,"attributes":[{"value":"/ A description of an equation for how to blend transparent, overlapping fragments.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":188187,"byte_end":188272,"line_start":250,"line_end":250,"column_start":1,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":8977},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":188482,"byte_end":188490,"line_start":255,"line_end":255,"column_start":9,"column_end":17},"name":"logic_op","qualname":"::pso::graphics::BlendDesc::logic_op","value":"std::option::Option<pso::graphics::LogicOp>","parent":{"krate":0,"index":8976},"children":[],"decl_id":null,"docs":" The logic operation to apply to the blending equation, if any.\n","sig":null,"attributes":[{"value":"/ The logic operation to apply to the blending equation, if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":188407,"byte_end":188473,"line_start":254,"line_end":254,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":8978},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":188581,"byte_end":188588,"line_start":257,"line_end":257,"column_start":9,"column_end":16},"name":"targets","qualname":"::pso::graphics::BlendDesc::targets","value":"std::vec::Vec<pso::output_merger::ColorBlendDesc>","parent":{"krate":0,"index":8976},"children":[],"decl_id":null,"docs":" Which color targets to apply the blending operation to.\n","sig":null,"attributes":[{"value":"/ Which color targets to apply the blending operation to.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":188513,"byte_end":188572,"line_start":256,"line_end":256,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":8990},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":188820,"byte_end":188825,"line_start":265,"line_end":265,"column_start":5,"column_end":10},"name":"Clear","qualname":"::pso::graphics::LogicOp::Clear","value":"LogicOp::Clear","parent":{"krate":0,"index":8989},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8993},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":188835,"byte_end":188838,"line_start":266,"line_end":266,"column_start":5,"column_end":8},"name":"And","qualname":"::pso::graphics::LogicOp::And","value":"LogicOp::And","parent":{"krate":0,"index":8989},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8996},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":188848,"byte_end":188858,"line_start":267,"line_end":267,"column_start":5,"column_end":15},"name":"AndReverse","qualname":"::pso::graphics::LogicOp::AndReverse","value":"LogicOp::AndReverse","parent":{"krate":0,"index":8989},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8999},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":188868,"byte_end":188872,"line_start":268,"line_end":268,"column_start":5,"column_end":9},"name":"Copy","qualname":"::pso::graphics::LogicOp::Copy","value":"LogicOp::Copy","parent":{"krate":0,"index":8989},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9002},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":188882,"byte_end":188893,"line_start":269,"line_end":269,"column_start":5,"column_end":16},"name":"AndInverted","qualname":"::pso::graphics::LogicOp::AndInverted","value":"LogicOp::AndInverted","parent":{"krate":0,"index":8989},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9005},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":188903,"byte_end":188907,"line_start":270,"line_end":270,"column_start":5,"column_end":9},"name":"NoOp","qualname":"::pso::graphics::LogicOp::NoOp","value":"LogicOp::NoOp","parent":{"krate":0,"index":8989},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9008},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":188917,"byte_end":188920,"line_start":271,"line_end":271,"column_start":5,"column_end":8},"name":"Xor","qualname":"::pso::graphics::LogicOp::Xor","value":"LogicOp::Xor","parent":{"krate":0,"index":8989},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9011},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":188930,"byte_end":188932,"line_start":272,"line_end":272,"column_start":5,"column_end":7},"name":"Or","qualname":"::pso::graphics::LogicOp::Or","value":"LogicOp::Or","parent":{"krate":0,"index":8989},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9014},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":188942,"byte_end":188945,"line_start":273,"line_end":273,"column_start":5,"column_end":8},"name":"Nor","qualname":"::pso::graphics::LogicOp::Nor","value":"LogicOp::Nor","parent":{"krate":0,"index":8989},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9017},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":188955,"byte_end":188965,"line_start":274,"line_end":274,"column_start":5,"column_end":15},"name":"Equivalent","qualname":"::pso::graphics::LogicOp::Equivalent","value":"LogicOp::Equivalent","parent":{"krate":0,"index":8989},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9020},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":188975,"byte_end":188981,"line_start":275,"line_end":275,"column_start":5,"column_end":11},"name":"Invert","qualname":"::pso::graphics::LogicOp::Invert","value":"LogicOp::Invert","parent":{"krate":0,"index":8989},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9023},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":188992,"byte_end":189001,"line_start":276,"line_end":276,"column_start":5,"column_end":14},"name":"OrReverse","qualname":"::pso::graphics::LogicOp::OrReverse","value":"LogicOp::OrReverse","parent":{"krate":0,"index":8989},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9026},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":189012,"byte_end":189024,"line_start":277,"line_end":277,"column_start":5,"column_end":17},"name":"CopyInverted","qualname":"::pso::graphics::LogicOp::CopyInverted","value":"LogicOp::CopyInverted","parent":{"krate":0,"index":8989},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9029},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":189035,"byte_end":189045,"line_start":278,"line_end":278,"column_start":5,"column_end":15},"name":"OrInverted","qualname":"::pso::graphics::LogicOp::OrInverted","value":"LogicOp::OrInverted","parent":{"krate":0,"index":8989},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9032},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":189056,"byte_end":189060,"line_start":279,"line_end":279,"column_start":5,"column_end":9},"name":"Nand","qualname":"::pso::graphics::LogicOp::Nand","value":"LogicOp::Nand","parent":{"krate":0,"index":8989},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9035},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":189071,"byte_end":189074,"line_start":280,"line_end":280,"column_start":5,"column_end":8},"name":"Set","qualname":"::pso::graphics::LogicOp::Set","value":"LogicOp::Set","parent":{"krate":0,"index":8989},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8989},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":188806,"byte_end":188813,"line_start":264,"line_end":264,"column_start":10,"column_end":17},"name":"LogicOp","qualname":"::pso::graphics::LogicOp","value":"pub enum LogicOp {\n    Clear = ,\n    And = ,\n    AndReverse = ,\n    Copy = ,\n    AndInverted = ,\n    NoOp = ,\n    Xor = ,\n    Or = ,\n    Nor = ,\n    Equivalent = ,\n    Invert = ,\n    OrReverse = ,\n    CopyInverted = ,\n    OrInverted = ,\n    Nand = ,\n    Set = ,\n}","parent":null,"children":[{"krate":0,"index":8990},{"krate":0,"index":8993},{"krate":0,"index":8996},{"krate":0,"index":8999},{"krate":0,"index":9002},{"krate":0,"index":9005},{"krate":0,"index":9008},{"krate":0,"index":9011},{"krate":0,"index":9014},{"krate":0,"index":9017},{"krate":0,"index":9020},{"krate":0,"index":9023},{"krate":0,"index":9026},{"krate":0,"index":9029},{"krate":0,"index":9032},{"krate":0,"index":9035}],"decl_id":null,"docs":" Logic operations used for specifying blend equations.\n","sig":null,"attributes":[{"value":"/ Logic operations used for specifying blend equations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":188614,"byte_end":188671,"line_start":260,"line_end":260,"column_start":1,"column_end":58}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":188774,"byte_end":188796,"line_start":263,"line_end":263,"column_start":1,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":777},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":189097,"byte_end":189107,"line_start":284,"line_end":284,"column_start":10,"column_end":20},"name":"SampleMask","qualname":"::pso::graphics::SampleMask","value":"u64","parent":null,"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":189084,"byte_end":189087,"line_start":283,"line_end":283,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":9048},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":189166,"byte_end":189179,"line_start":288,"line_end":288,"column_start":12,"column_end":25},"name":"Multisampling","qualname":"::pso::graphics::Multisampling","value":"Multisampling { rasterization_samples, sample_shading, sample_mask, alpha_coverage, alpha_to_one }","parent":null,"children":[{"krate":0,"index":9049},{"krate":0,"index":9050},{"krate":0,"index":9051},{"krate":0,"index":9052},{"krate":0,"index":9053}],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":189116,"byte_end":189119,"line_start":286,"line_end":286,"column_start":1,"column_end":4}}]},{"kind":"Field","id":{"krate":0,"index":9049},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":189198,"byte_end":189219,"line_start":290,"line_end":290,"column_start":9,"column_end":30},"name":"rasterization_samples","qualname":"::pso::graphics::Multisampling::rasterization_samples","value":"u8","parent":{"krate":0,"index":9048},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":189186,"byte_end":189189,"line_start":289,"line_end":289,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":9050},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":189256,"byte_end":189270,"line_start":292,"line_end":292,"column_start":9,"column_end":23},"name":"sample_shading","qualname":"::pso::graphics::Multisampling::sample_shading","value":"std::option::Option<f32>","parent":{"krate":0,"index":9048},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":189244,"byte_end":189247,"line_start":291,"line_end":291,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":9051},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":189301,"byte_end":189312,"line_start":294,"line_end":294,"column_start":9,"column_end":20},"name":"sample_mask","qualname":"::pso::graphics::Multisampling::sample_mask","value":"u64","parent":{"krate":0,"index":9048},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":189289,"byte_end":189292,"line_start":293,"line_end":293,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":9052},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":189622,"byte_end":189636,"line_start":298,"line_end":298,"column_start":9,"column_end":23},"name":"alpha_coverage","qualname":"::pso::graphics::Multisampling::alpha_coverage","value":"bool","parent":{"krate":0,"index":9048},"children":[],"decl_id":null,"docs":" Toggles alpha-to-coverage multisampling, which can produce nicer edges\n when many partially-transparent polygons are overlapping.\n See [here]( https://msdn.microsoft.com/en-us/library/windows/desktop/bb205072(v=vs.85).aspx#Alpha_To_Coverage) for a full description.\n","sig":null,"attributes":[{"value":"/ Toggles alpha-to-coverage multisampling, which can produce nicer edges","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":189330,"byte_end":189404,"line_start":295,"line_end":295,"column_start":5,"column_end":79}},{"value":"/ when many partially-transparent polygons are overlapping.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":189409,"byte_end":189470,"line_start":296,"line_end":296,"column_start":5,"column_end":66}},{"value":"/ See [here]( https://msdn.microsoft.com/en-us/library/windows/desktop/bb205072(v=vs.85).aspx#Alpha_To_Coverage) for a full description.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":189475,"byte_end":189613,"line_start":297,"line_end":297,"column_start":5,"column_end":143}}]},{"kind":"Field","id":{"krate":0,"index":9053},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":189660,"byte_end":189672,"line_start":300,"line_end":300,"column_start":9,"column_end":21},"name":"alpha_to_one","qualname":"::pso::graphics::Multisampling::alpha_to_one","value":"bool","parent":{"krate":0,"index":9048},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":189648,"byte_end":189651,"line_start":299,"line_end":299,"column_start":5,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":786},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":189859,"byte_end":189867,"line_start":7,"line_end":7,"column_start":10,"column_end":18},"name":"Location","qualname":"::pso::input_assembler::Location","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Shader binding location.\n","sig":null,"attributes":[{"value":"/ Shader binding location.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":189821,"byte_end":189849,"line_start":6,"line_end":6,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":787},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":189914,"byte_end":189925,"line_start":9,"line_end":9,"column_start":10,"column_end":21},"name":"BufferIndex","qualname":"::pso::input_assembler::BufferIndex","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Index of a vertex buffer.\n","sig":null,"attributes":[{"value":"/ Index of a vertex buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":189875,"byte_end":189904,"line_start":8,"line_end":8,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":788},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":190008,"byte_end":190018,"line_start":11,"line_end":11,"column_start":10,"column_end":20},"name":"ElemOffset","qualname":"::pso::input_assembler::ElemOffset","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Offset of an attribute from the start of the buffer, in bytes\n","sig":null,"attributes":[{"value":"/ Offset of an attribute from the start of the buffer, in bytes","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":189933,"byte_end":189998,"line_start":10,"line_end":10,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":789},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":190081,"byte_end":190091,"line_start":13,"line_end":13,"column_start":10,"column_end":20},"name":"ElemStride","qualname":"::pso::input_assembler::ElemStride","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Offset between attribute values, in bytes\n","sig":null,"attributes":[{"value":"/ Offset between attribute values, in bytes","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":190026,"byte_end":190071,"line_start":12,"line_end":12,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":790},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":190179,"byte_end":190191,"line_start":15,"line_end":15,"column_start":10,"column_end":22},"name":"InstanceRate","qualname":"::pso::input_assembler::InstanceRate","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Number of instances between each advancement of the vertex buffer.\n","sig":null,"attributes":[{"value":"/ Number of instances between each advancement of the vertex buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":190099,"byte_end":190169,"line_start":14,"line_end":14,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":791},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":190241,"byte_end":190250,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"name":"PatchSize","qualname":"::pso::input_assembler::PatchSize","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Number of vertices in a patch\n","sig":null,"attributes":[{"value":"/ Number of vertices in a patch","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":190198,"byte_end":190231,"line_start":16,"line_end":16,"column_start":1,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9063},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":190542,"byte_end":190548,"line_start":24,"line_end":24,"column_start":5,"column_end":11},"name":"Vertex","qualname":"::pso::input_assembler::VertexInputRate::Vertex","value":"VertexInputRate::Vertex","parent":{"krate":0,"index":9062},"children":[],"decl_id":null,"docs":" Advance the buffer after every vertex\n","sig":null,"attributes":[{"value":"/ Advance the buffer after every vertex","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":190496,"byte_end":190537,"line_start":23,"line_end":23,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9065},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":190602,"byte_end":190610,"line_start":26,"line_end":26,"column_start":5,"column_end":13},"name":"Instance","qualname":"::pso::input_assembler::VertexInputRate::Instance","value":"VertexInputRate::Instance(InstanceRate)","parent":{"krate":0,"index":9062},"children":[],"decl_id":null,"docs":" Advance the buffer after every instance\n","sig":null,"attributes":[{"value":"/ Advance the buffer after every instance","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":190554,"byte_end":190597,"line_start":25,"line_end":25,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":9062},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":190474,"byte_end":190489,"line_start":22,"line_end":22,"column_start":10,"column_end":25},"name":"VertexInputRate","qualname":"::pso::input_assembler::VertexInputRate","value":"pub enum VertexInputRate { Vertex, Instance(InstanceRate), }","parent":null,"children":[{"krate":0,"index":9063},{"krate":0,"index":9065}],"decl_id":null,"docs":" The rate at which to advance input data to shaders for the given buffer\n","sig":null,"attributes":[{"value":"/ The rate at which to advance input data to shaders for the given buffer","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":190258,"byte_end":190333,"line_start":19,"line_end":19,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":190714,"byte_end":190721,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"as_uint","qualname":"<VertexInputRate>::as_uint","value":"pub fn as_uint(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the numeric representation of the rate\n","sig":null,"attributes":[{"value":"/ Get the numeric representation of the rate","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":190656,"byte_end":190702,"line_start":30,"line_end":30,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":9087},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":191054,"byte_end":191061,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"Element","qualname":"::pso::input_assembler::Element","value":"Element { format, offset }","parent":null,"children":[{"krate":0,"index":9089},{"krate":0,"index":9090}],"decl_id":null,"docs":" A struct element descriptor.\n","sig":null,"attributes":[{"value":"/ A struct element descriptor.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":190879,"byte_end":190911,"line_start":39,"line_end":39,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":9089},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":191098,"byte_end":191104,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"name":"format","qualname":"::pso::input_assembler::Element::format","value":"F","parent":{"krate":0,"index":9087},"children":[],"decl_id":null,"docs":" Element format\n","sig":null,"attributes":[{"value":"/ Element format","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":191071,"byte_end":191089,"line_start":43,"line_end":43,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":9090},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":191178,"byte_end":191184,"line_start":46,"line_end":46,"column_start":9,"column_end":15},"name":"offset","qualname":"::pso::input_assembler::Element::offset","value":"u32","parent":{"krate":0,"index":9087},"children":[],"decl_id":null,"docs":" Offset from the beginning of the container, in bytes\n","sig":null,"attributes":[{"value":"/ Offset from the beginning of the container, in bytes","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":191113,"byte_end":191169,"line_start":45,"line_end":45,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":9120},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":191461,"byte_end":191477,"line_start":53,"line_end":53,"column_start":12,"column_end":28},"name":"VertexBufferDesc","qualname":"::pso::input_assembler::VertexBufferDesc","value":"VertexBufferDesc { binding, stride, rate }","parent":null,"children":[{"krate":0,"index":9121},{"krate":0,"index":9122},{"krate":0,"index":9123}],"decl_id":null,"docs":" Vertex buffer description. Notably, completely separate from resource `Descriptor`s\n used in `DescriptorSet`s.\n","sig":null,"attributes":[{"value":"/ Vertex buffer description. Notably, completely separate from resource `Descriptor`s","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":191201,"byte_end":191288,"line_start":49,"line_end":49,"column_start":1,"column_end":88}},{"value":"/ used in `DescriptorSet`s.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":191289,"byte_end":191318,"line_start":50,"line_end":50,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":9121},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":191681,"byte_end":191688,"line_start":57,"line_end":57,"column_start":9,"column_end":16},"name":"binding","qualname":"::pso::input_assembler::VertexBufferDesc::binding","value":"u32","parent":{"krate":0,"index":9120},"children":[],"decl_id":null,"docs":" Binding number of this vertex buffer. This binding number is\n used only for vertex buffers, and is completely separate from\n `Descriptor` and `DescriptorSet` bind points.\n","sig":null,"attributes":[{"value":"/ Binding number of this vertex buffer. This binding number is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":191484,"byte_end":191548,"line_start":54,"line_end":54,"column_start":5,"column_end":69}},{"value":"/ used only for vertex buffers, and is completely separate from","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":191553,"byte_end":191618,"line_start":55,"line_end":55,"column_start":5,"column_end":70}},{"value":"/ `Descriptor` and `DescriptorSet` bind points.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":191623,"byte_end":191672,"line_start":56,"line_end":56,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":9122},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":191821,"byte_end":191827,"line_start":60,"line_end":60,"column_start":9,"column_end":15},"name":"stride","qualname":"::pso::input_assembler::VertexBufferDesc::stride","value":"u32","parent":{"krate":0,"index":9120},"children":[],"decl_id":null,"docs":" Total container size, in bytes.\n Specifies the byte distance between two consecutive elements.\n","sig":null,"attributes":[{"value":"/ Total container size, in bytes.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":191707,"byte_end":191742,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/ Specifies the byte distance between two consecutive elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":191747,"byte_end":191812,"line_start":59,"line_end":59,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":9123},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":192018,"byte_end":192022,"line_start":65,"line_end":65,"column_start":9,"column_end":13},"name":"rate","qualname":"::pso::input_assembler::VertexBufferDesc::rate","value":"pso::input_assembler::VertexInputRate","parent":{"krate":0,"index":9120},"children":[],"decl_id":null,"docs":" The rate at which to advance data for the given buffer","sig":null,"attributes":[{"value":"/ The rate at which to advance data for the given buffer","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":191845,"byte_end":191903,"line_start":61,"line_end":61,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":191908,"byte_end":191911,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ i.e. the rate at which data passed to shaders will get advanced by","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":191916,"byte_end":191986,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/ `stride` bytes","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":191991,"byte_end":192009,"line_start":64,"line_end":64,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":9143},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":192307,"byte_end":192320,"line_start":72,"line_end":72,"column_start":12,"column_end":25},"name":"AttributeDesc","qualname":"::pso::input_assembler::AttributeDesc","value":"AttributeDesc { location, binding, element }","parent":null,"children":[{"krate":0,"index":9144},{"krate":0,"index":9145},{"krate":0,"index":9146}],"decl_id":null,"docs":" Vertex attribute description. Notably, completely separate from resource `Descriptor`s\n used in `DescriptorSet`s.\n","sig":null,"attributes":[{"value":"/ Vertex attribute description. Notably, completely separate from resource `Descriptor`s","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":192044,"byte_end":192134,"line_start":68,"line_end":68,"column_start":1,"column_end":91}},{"value":"/ used in `DescriptorSet`s.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":192135,"byte_end":192164,"line_start":69,"line_end":69,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":9144},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":192629,"byte_end":192637,"line_start":77,"line_end":77,"column_start":9,"column_end":17},"name":"location","qualname":"::pso::input_assembler::AttributeDesc::location","value":"u32","parent":{"krate":0,"index":9143},"children":[],"decl_id":null,"docs":" Attribute binding location in the shader. Attribute locations are\n shared between all vertex buffers in a pipeline, meaning that even if the\n data for this attribute comes from a different vertex buffer, it still cannot\n share the same location with another attribute.\n","sig":null,"attributes":[{"value":"/ Attribute binding location in the shader. Attribute locations are","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":192327,"byte_end":192396,"line_start":73,"line_end":73,"column_start":5,"column_end":74}},{"value":"/ shared between all vertex buffers in a pipeline, meaning that even if the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":192401,"byte_end":192478,"line_start":74,"line_end":74,"column_start":5,"column_end":82}},{"value":"/ data for this attribute comes from a different vertex buffer, it still cannot","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":192483,"byte_end":192564,"line_start":75,"line_end":75,"column_start":5,"column_end":86}},{"value":"/ share the same location with another attribute.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":192569,"byte_end":192620,"line_start":76,"line_end":76,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":9145},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":192713,"byte_end":192720,"line_start":79,"line_end":79,"column_start":9,"column_end":16},"name":"binding","qualname":"::pso::input_assembler::AttributeDesc::binding","value":"u32","parent":{"krate":0,"index":9143},"children":[],"decl_id":null,"docs":" Binding number of the associated vertex buffer.\n","sig":null,"attributes":[{"value":"/ Binding number of the associated vertex buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":192653,"byte_end":192704,"line_start":78,"line_end":78,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":9146},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":192782,"byte_end":192789,"line_start":81,"line_end":81,"column_start":9,"column_end":16},"name":"element","qualname":"::pso::input_assembler::AttributeDesc::element","value":"pso::input_assembler::Element<format::Format>","parent":{"krate":0,"index":9143},"children":[],"decl_id":null,"docs":" Attribute element description.\n","sig":null,"attributes":[{"value":"/ Attribute element description.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":192739,"byte_end":192773,"line_start":80,"line_end":80,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9167},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":193112,"byte_end":193121,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"PointList","qualname":"::pso::input_assembler::Primitive::PointList","value":"Primitive::PointList","parent":{"krate":0,"index":9166},"children":[],"decl_id":null,"docs":" Each vertex represents a single point.\n","sig":null,"attributes":[{"value":"/ Each vertex represents a single point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":193065,"byte_end":193107,"line_start":90,"line_end":90,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9169},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":193307,"byte_end":193315,"line_start":94,"line_end":94,"column_start":5,"column_end":13},"name":"LineList","qualname":"::pso::input_assembler::Primitive::LineList","value":"Primitive::LineList","parent":{"krate":0,"index":9166},"children":[],"decl_id":null,"docs":" Each pair of vertices represent a single line segment. For example, with `[a, b, c, d,\n e]`, `a` and `b` form a line, `c` and `d` form a line, and `e` is discarded.\n","sig":null,"attributes":[{"value":"/ Each pair of vertices represent a single line segment. For example, with `[a, b, c, d,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":193127,"byte_end":193217,"line_start":92,"line_end":92,"column_start":5,"column_end":95}},{"value":"/ e]`, `a` and `b` form a line, `c` and `d` form a line, and `e` is discarded.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":193222,"byte_end":193302,"line_start":93,"line_end":93,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9171},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":193560,"byte_end":193569,"line_start":98,"line_end":98,"column_start":5,"column_end":14},"name":"LineStrip","qualname":"::pso::input_assembler::Primitive::LineStrip","value":"Primitive::LineStrip","parent":{"krate":0,"index":9166},"children":[],"decl_id":null,"docs":" Every two consecutive vertices represent a single line segment. Visually forms a \"path\" of\n lines, as they are all connected. For example, with `[a, b, c]`, `a` and `b` form a line\n line, and `b` and `c` form a line.\n","sig":null,"attributes":[{"value":"/ Every two consecutive vertices represent a single line segment. Visually forms a \"path\" of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":193321,"byte_end":193415,"line_start":95,"line_end":95,"column_start":5,"column_end":99}},{"value":"/ lines, as they are all connected. For example, with `[a, b, c]`, `a` and `b` form a line","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":193420,"byte_end":193512,"line_start":96,"line_end":96,"column_start":5,"column_end":97}},{"value":"/ line, and `b` and `c` form a line.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":193517,"byte_end":193555,"line_start":97,"line_end":97,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9173},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":193744,"byte_end":193756,"line_start":101,"line_end":101,"column_start":5,"column_end":17},"name":"TriangleList","qualname":"::pso::input_assembler::Primitive::TriangleList","value":"Primitive::TriangleList","parent":{"krate":0,"index":9166},"children":[],"decl_id":null,"docs":" Each triplet of vertices represent a single triangle. For example, with `[a, b, c, d, e]`,\n `a`, `b`, and `c` form a triangle, `d` and `e` are discarded.\n","sig":null,"attributes":[{"value":"/ Each triplet of vertices represent a single triangle. For example, with `[a, b, c, d, e]`,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":193575,"byte_end":193669,"line_start":99,"line_end":99,"column_start":5,"column_end":99}},{"value":"/ `a`, `b`, and `c` form a triangle, `d` and `e` are discarded.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":193674,"byte_end":193739,"line_start":100,"line_end":100,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9175},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":193948,"byte_end":193961,"line_start":104,"line_end":104,"column_start":5,"column_end":18},"name":"TriangleStrip","qualname":"::pso::input_assembler::Primitive::TriangleStrip","value":"Primitive::TriangleStrip","parent":{"krate":0,"index":9166},"children":[],"decl_id":null,"docs":" Every three consecutive vertices represent a single triangle. For example, with `[a, b, c,\n d]`, `a`, `b`, and `c` form a triangle, and `b`, `c`, and `d` form a triangle.\n","sig":null,"attributes":[{"value":"/ Every three consecutive vertices represent a single triangle. For example, with `[a, b, c,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":193762,"byte_end":193856,"line_start":102,"line_end":102,"column_start":5,"column_end":99}},{"value":"/ d]`, `a`, `b`, and `c` form a triangle, and `b`, `c`, and `d` form a triangle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":193861,"byte_end":193943,"line_start":103,"line_end":103,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9177},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":194073,"byte_end":194082,"line_start":107,"line_end":107,"column_start":5,"column_end":14},"name":"PatchList","qualname":"::pso::input_assembler::Primitive::PatchList","value":"Primitive::PatchList(PatchSize)","parent":{"krate":0,"index":9166},"children":[],"decl_id":null,"docs":" Patch list,\n used with shaders capable of producing primitives on their own (tessellation)\n","sig":null,"attributes":[{"value":"/ Patch list,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":193967,"byte_end":193982,"line_start":105,"line_end":105,"column_start":5,"column_end":20}},{"value":"/ used with shaders capable of producing primitives on their own (tessellation)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":193987,"byte_end":194068,"line_start":106,"line_end":106,"column_start":5,"column_end":86}}]},{"kind":"Enum","id":{"krate":0,"index":9166},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":193049,"byte_end":193058,"line_start":89,"line_end":89,"column_start":10,"column_end":19},"name":"Primitive","qualname":"::pso::input_assembler::Primitive","value":"pub enum Primitive {\n    PointList,\n    LineList,\n    LineStrip,\n    TriangleList,\n    TriangleStrip,\n    PatchList(PatchSize),\n}","parent":null,"children":[{"krate":0,"index":9167},{"krate":0,"index":9169},{"krate":0,"index":9171},{"krate":0,"index":9173},{"krate":0,"index":9175},{"krate":0,"index":9177}],"decl_id":null,"docs":" Describes the type of geometric primitives,\n created from vertex data.\n","sig":null,"attributes":[{"value":"/ Describes the type of geometric primitives,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":192819,"byte_end":192866,"line_start":84,"line_end":84,"column_start":1,"column_end":48}},{"value":"/ created from vertex data.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":192867,"byte_end":192896,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"repr(u8)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":193028,"byte_end":193039,"line_start":88,"line_end":88,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":9199},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":194289,"byte_end":194307,"line_start":113,"line_end":113,"column_start":12,"column_end":30},"name":"InputAssemblerDesc","qualname":"::pso::input_assembler::InputAssemblerDesc","value":"InputAssemblerDesc { primitive, with_adjacency, restart_index }","parent":null,"children":[{"krate":0,"index":9200},{"krate":0,"index":9201},{"krate":0,"index":9202}],"decl_id":null,"docs":" All the information needed to create an input assembler.\n","sig":null,"attributes":[{"value":"/ All the information needed to create an input assembler.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":194098,"byte_end":194158,"line_start":110,"line_end":110,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":9200},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":194348,"byte_end":194357,"line_start":115,"line_end":115,"column_start":9,"column_end":18},"name":"primitive","qualname":"::pso::input_assembler::InputAssemblerDesc::primitive","value":"pso::input_assembler::Primitive","parent":{"krate":0,"index":9199},"children":[],"decl_id":null,"docs":" Type of the primitive\n","sig":null,"attributes":[{"value":"/ Type of the primitive","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":194314,"byte_end":194339,"line_start":114,"line_end":114,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":9201},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":194954,"byte_end":194968,"line_start":125,"line_end":125,"column_start":9,"column_end":23},"name":"with_adjacency","qualname":"::pso::input_assembler::InputAssemblerDesc::with_adjacency","value":"bool","parent":{"krate":0,"index":9199},"children":[],"decl_id":null,"docs":" When adjacency information is enabled, every even-numbered vertex\n (every other starting from the first) represents an additional\n vertex for the primitive, while odd-numbered vertices (every other starting from the\n second) represent adjacent vertices.","sig":null,"attributes":[{"value":"/ When adjacency information is enabled, every even-numbered vertex","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":194374,"byte_end":194443,"line_start":116,"line_end":116,"column_start":5,"column_end":74}},{"value":"/ (every other starting from the first) represents an additional","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":194448,"byte_end":194514,"line_start":117,"line_end":117,"column_start":5,"column_end":71}},{"value":"/ vertex for the primitive, while odd-numbered vertices (every other starting from the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":194519,"byte_end":194607,"line_start":118,"line_end":118,"column_start":5,"column_end":93}},{"value":"/ second) represent adjacent vertices.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":194612,"byte_end":194652,"line_start":119,"line_end":119,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":194657,"byte_end":194660,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ For example, with `[a, b, c, d, e, f, g, h]`, `[a, c,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":194665,"byte_end":194722,"line_start":121,"line_end":121,"column_start":5,"column_end":62}},{"value":"/ e, g]` form a triangle strip, and `[b, d, f, h]` are the adjacent vertices, where `b`, `d`,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":194727,"byte_end":194822,"line_start":122,"line_end":122,"column_start":5,"column_end":100}},{"value":"/ and `f` are adjacent to the first triangle in the strip, and `d`, `f`, and `h` are adjacent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":194827,"byte_end":194922,"line_start":123,"line_end":123,"column_start":5,"column_end":100}},{"value":"/ to the second.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":194927,"byte_end":194945,"line_start":124,"line_end":124,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":9202},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":195354,"byte_end":195367,"line_start":133,"line_end":133,"column_start":9,"column_end":22},"name":"restart_index","qualname":"::pso::input_assembler::InputAssemblerDesc::restart_index","value":"std::option::Option<IndexType>","parent":{"krate":0,"index":9199},"children":[],"decl_id":null,"docs":" Describes whether or not primitive restart is supported for\n an input assembler. Primitive restart is a feature that\n allows a mark to be placed in an index buffer where it is\n is \"broken\" into multiple pieces of geometry.","sig":null,"attributes":[{"value":"/ Describes whether or not primitive restart is supported for","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":194980,"byte_end":195043,"line_start":126,"line_end":126,"column_start":5,"column_end":68}},{"value":"/ an input assembler. Primitive restart is a feature that","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":195048,"byte_end":195107,"line_start":127,"line_end":127,"column_start":5,"column_end":64}},{"value":"/ allows a mark to be placed in an index buffer where it is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":195112,"byte_end":195173,"line_start":128,"line_end":128,"column_start":5,"column_end":66}},{"value":"/ is \"broken\" into multiple pieces of geometry.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":195178,"byte_end":195227,"line_start":129,"line_end":129,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":195232,"byte_end":195235,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ See <https://www.khronos.org/opengl/wiki/Vertex_Rendering#Primitive_Restart>","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":195240,"byte_end":195320,"line_start":131,"line_end":131,"column_start":5,"column_end":85}},{"value":"/ for more detail.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":195325,"byte_end":195345,"line_start":132,"line_end":132,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":195503,"byte_end":195506,"line_start":138,"line_end":138,"column_start":12,"column_end":15},"name":"new","qualname":"<InputAssemblerDesc>::new","value":"pub fn new(Primitive) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new IA descriptor without primitive restart or adjucency.\n","sig":null,"attributes":[{"value":"/ Create a new IA descriptor without primitive restart or adjucency.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":195421,"byte_end":195491,"line_start":137,"line_end":137,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9219},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":196109,"byte_end":196114,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"Never","qualname":"::pso::output_merger::Comparison::Never","value":"Comparison::Never","parent":{"krate":0,"index":9218},"children":[],"decl_id":null,"docs":" `false`\n","sig":null,"attributes":[{"value":"/ `false`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":196093,"byte_end":196104,"line_start":11,"line_end":11,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9222},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":196140,"byte_end":196144,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Less","qualname":"::pso::output_merger::Comparison::Less","value":"Comparison::Less","parent":{"krate":0,"index":9218},"children":[],"decl_id":null,"docs":" `x < y`\n","sig":null,"attributes":[{"value":"/ `x < y`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":196124,"byte_end":196135,"line_start":13,"line_end":13,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9225},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":196171,"byte_end":196176,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"name":"Equal","qualname":"::pso::output_merger::Comparison::Equal","value":"Comparison::Equal","parent":{"krate":0,"index":9218},"children":[],"decl_id":null,"docs":" `x == y`\n","sig":null,"attributes":[{"value":"/ `x == y`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":196154,"byte_end":196166,"line_start":15,"line_end":15,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9228},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":196203,"byte_end":196212,"line_start":18,"line_end":18,"column_start":5,"column_end":14},"name":"LessEqual","qualname":"::pso::output_merger::Comparison::LessEqual","value":"Comparison::LessEqual","parent":{"krate":0,"index":9218},"children":[],"decl_id":null,"docs":" `x <= y`\n","sig":null,"attributes":[{"value":"/ `x <= y`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":196186,"byte_end":196198,"line_start":17,"line_end":17,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9231},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":196238,"byte_end":196245,"line_start":20,"line_end":20,"column_start":5,"column_end":12},"name":"Greater","qualname":"::pso::output_merger::Comparison::Greater","value":"Comparison::Greater","parent":{"krate":0,"index":9218},"children":[],"decl_id":null,"docs":" `x > y`\n","sig":null,"attributes":[{"value":"/ `x > y`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":196222,"byte_end":196233,"line_start":19,"line_end":19,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9234},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":196272,"byte_end":196280,"line_start":22,"line_end":22,"column_start":5,"column_end":13},"name":"NotEqual","qualname":"::pso::output_merger::Comparison::NotEqual","value":"Comparison::NotEqual","parent":{"krate":0,"index":9218},"children":[],"decl_id":null,"docs":" `x != y`\n","sig":null,"attributes":[{"value":"/ `x != y`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":196255,"byte_end":196267,"line_start":21,"line_end":21,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9237},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":196307,"byte_end":196319,"line_start":24,"line_end":24,"column_start":5,"column_end":17},"name":"GreaterEqual","qualname":"::pso::output_merger::Comparison::GreaterEqual","value":"Comparison::GreaterEqual","parent":{"krate":0,"index":9218},"children":[],"decl_id":null,"docs":" `x >= y`\n","sig":null,"attributes":[{"value":"/ `x >= y`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":196290,"byte_end":196302,"line_start":23,"line_end":23,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9240},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":196344,"byte_end":196350,"line_start":26,"line_end":26,"column_start":5,"column_end":11},"name":"Always","qualname":"::pso::output_merger::Comparison::Always","value":"Comparison::Always","parent":{"krate":0,"index":9218},"children":[],"decl_id":null,"docs":" `true`\n","sig":null,"attributes":[{"value":"/ `true`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":196329,"byte_end":196339,"line_start":25,"line_end":25,"column_start":5,"column_end":15}}]},{"kind":"Enum","id":{"krate":0,"index":9218},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":196076,"byte_end":196086,"line_start":10,"line_end":10,"column_start":10,"column_end":20},"name":"Comparison","qualname":"::pso::output_merger::Comparison","value":"pub enum Comparison {\n    Never = ,\n    Less = ,\n    Equal = ,\n    LessEqual = ,\n    Greater = ,\n    NotEqual = ,\n    GreaterEqual = ,\n    Always = ,\n}","parent":null,"children":[{"krate":0,"index":9219},{"krate":0,"index":9222},{"krate":0,"index":9225},{"krate":0,"index":9228},{"krate":0,"index":9231},{"krate":0,"index":9234},{"krate":0,"index":9237},{"krate":0,"index":9240}],"decl_id":null,"docs":" A pixel-wise comparison function.\n","sig":null,"attributes":[{"value":"/ A pixel-wise comparison function.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":195898,"byte_end":195935,"line_start":7,"line_end":7,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":9261},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":196486,"byte_end":196495,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"ColorMask","qualname":"::pso::output_merger::ColorMask","value":"ColorMask {  }","parent":null,"children":[{"krate":0,"index":9262}],"decl_id":null,"docs":" Target output color mask.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9300},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":196537,"byte_end":196540,"line_start":34,"line_end":34,"column_start":15,"column_end":18},"name":"RED","qualname":"::pso::output_merger::ColorMask::RED","value":"ColorMask","parent":{"krate":0,"index":9299},"children":[],"decl_id":null,"docs":" Red mask\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9301},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":196589,"byte_end":196594,"line_start":36,"line_end":36,"column_start":15,"column_end":20},"name":"GREEN","qualname":"::pso::output_merger::ColorMask::GREEN","value":"ColorMask","parent":{"krate":0,"index":9299},"children":[],"decl_id":null,"docs":" Green mask\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9302},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":196640,"byte_end":196644,"line_start":38,"line_end":38,"column_start":15,"column_end":19},"name":"BLUE","qualname":"::pso::output_merger::ColorMask::BLUE","value":"ColorMask","parent":{"krate":0,"index":9299},"children":[],"decl_id":null,"docs":" Blue mask\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9303},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":196700,"byte_end":196705,"line_start":40,"line_end":40,"column_start":15,"column_end":20},"name":"ALPHA","qualname":"::pso::output_merger::ColorMask::ALPHA","value":"ColorMask","parent":{"krate":0,"index":9299},"children":[],"decl_id":null,"docs":" Alpha channel mask\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9304},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":196763,"byte_end":196768,"line_start":42,"line_end":42,"column_start":15,"column_end":20},"name":"COLOR","qualname":"::pso::output_merger::ColorMask::COLOR","value":"ColorMask","parent":{"krate":0,"index":9299},"children":[],"decl_id":null,"docs":" Mask for RGB channels\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9305},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":196822,"byte_end":196825,"line_start":44,"line_end":44,"column_start":15,"column_end":18},"name":"ALL","qualname":"::pso::output_merger::ColorMask::ALL","value":"ColorMask","parent":{"krate":0,"index":9299},"children":[],"decl_id":null,"docs":" Mask all channels\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9306},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":196881,"byte_end":196885,"line_start":46,"line_end":46,"column_start":15,"column_end":19},"name":"NONE","qualname":"::pso::output_merger::ColorMask::NONE","value":"ColorMask","parent":{"krate":0,"index":9299},"children":[],"decl_id":null,"docs":" Mask no channels.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9374},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":197327,"byte_end":197331,"line_start":63,"line_end":63,"column_start":5,"column_end":9},"name":"Zero","qualname":"::pso::output_merger::Factor::Zero","value":"Factor::Zero","parent":{"krate":0,"index":9373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9377},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":197341,"byte_end":197344,"line_start":64,"line_end":64,"column_start":5,"column_end":8},"name":"One","qualname":"::pso::output_merger::Factor::One","value":"Factor::One","parent":{"krate":0,"index":9373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9380},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":197354,"byte_end":197362,"line_start":65,"line_end":65,"column_start":5,"column_end":13},"name":"SrcColor","qualname":"::pso::output_merger::Factor::SrcColor","value":"Factor::SrcColor","parent":{"krate":0,"index":9373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9383},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":197372,"byte_end":197388,"line_start":66,"line_end":66,"column_start":5,"column_end":21},"name":"OneMinusSrcColor","qualname":"::pso::output_merger::Factor::OneMinusSrcColor","value":"Factor::OneMinusSrcColor","parent":{"krate":0,"index":9373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9386},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":197398,"byte_end":197406,"line_start":67,"line_end":67,"column_start":5,"column_end":13},"name":"DstColor","qualname":"::pso::output_merger::Factor::DstColor","value":"Factor::DstColor","parent":{"krate":0,"index":9373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9389},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":197416,"byte_end":197432,"line_start":68,"line_end":68,"column_start":5,"column_end":21},"name":"OneMinusDstColor","qualname":"::pso::output_merger::Factor::OneMinusDstColor","value":"Factor::OneMinusDstColor","parent":{"krate":0,"index":9373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9392},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":197442,"byte_end":197450,"line_start":69,"line_end":69,"column_start":5,"column_end":13},"name":"SrcAlpha","qualname":"::pso::output_merger::Factor::SrcAlpha","value":"Factor::SrcAlpha","parent":{"krate":0,"index":9373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9395},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":197460,"byte_end":197476,"line_start":70,"line_end":70,"column_start":5,"column_end":21},"name":"OneMinusSrcAlpha","qualname":"::pso::output_merger::Factor::OneMinusSrcAlpha","value":"Factor::OneMinusSrcAlpha","parent":{"krate":0,"index":9373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9398},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":197486,"byte_end":197494,"line_start":71,"line_end":71,"column_start":5,"column_end":13},"name":"DstAlpha","qualname":"::pso::output_merger::Factor::DstAlpha","value":"Factor::DstAlpha","parent":{"krate":0,"index":9373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9401},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":197504,"byte_end":197520,"line_start":72,"line_end":72,"column_start":5,"column_end":21},"name":"OneMinusDstAlpha","qualname":"::pso::output_merger::Factor::OneMinusDstAlpha","value":"Factor::OneMinusDstAlpha","parent":{"krate":0,"index":9373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9404},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":197530,"byte_end":197540,"line_start":73,"line_end":73,"column_start":5,"column_end":15},"name":"ConstColor","qualname":"::pso::output_merger::Factor::ConstColor","value":"Factor::ConstColor","parent":{"krate":0,"index":9373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9407},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":197551,"byte_end":197569,"line_start":74,"line_end":74,"column_start":5,"column_end":23},"name":"OneMinusConstColor","qualname":"::pso::output_merger::Factor::OneMinusConstColor","value":"Factor::OneMinusConstColor","parent":{"krate":0,"index":9373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9410},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":197580,"byte_end":197590,"line_start":75,"line_end":75,"column_start":5,"column_end":15},"name":"ConstAlpha","qualname":"::pso::output_merger::Factor::ConstAlpha","value":"Factor::ConstAlpha","parent":{"krate":0,"index":9373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9413},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":197601,"byte_end":197619,"line_start":76,"line_end":76,"column_start":5,"column_end":23},"name":"OneMinusConstAlpha","qualname":"::pso::output_merger::Factor::OneMinusConstAlpha","value":"Factor::OneMinusConstAlpha","parent":{"krate":0,"index":9373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9416},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":197630,"byte_end":197646,"line_start":77,"line_end":77,"column_start":5,"column_end":21},"name":"SrcAlphaSaturate","qualname":"::pso::output_merger::Factor::SrcAlphaSaturate","value":"Factor::SrcAlphaSaturate","parent":{"krate":0,"index":9373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9419},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":197657,"byte_end":197666,"line_start":78,"line_end":78,"column_start":5,"column_end":14},"name":"Src1Color","qualname":"::pso::output_merger::Factor::Src1Color","value":"Factor::Src1Color","parent":{"krate":0,"index":9373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9422},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":197677,"byte_end":197694,"line_start":79,"line_end":79,"column_start":5,"column_end":22},"name":"OneMinusSrc1Color","qualname":"::pso::output_merger::Factor::OneMinusSrc1Color","value":"Factor::OneMinusSrc1Color","parent":{"krate":0,"index":9373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9425},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":197705,"byte_end":197714,"line_start":80,"line_end":80,"column_start":5,"column_end":14},"name":"Src1Alpha","qualname":"::pso::output_merger::Factor::Src1Alpha","value":"Factor::Src1Alpha","parent":{"krate":0,"index":9373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9428},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":197725,"byte_end":197742,"line_start":81,"line_end":81,"column_start":5,"column_end":22},"name":"OneMinusSrc1Alpha","qualname":"::pso::output_merger::Factor::OneMinusSrc1Alpha","value":"Factor::OneMinusSrc1Alpha","parent":{"krate":0,"index":9373},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9373},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":197314,"byte_end":197320,"line_start":62,"line_end":62,"column_start":10,"column_end":16},"name":"Factor","qualname":"::pso::output_merger::Factor","value":"pub enum Factor {\n    Zero = ,\n    One = ,\n    SrcColor = ,\n    OneMinusSrcColor = ,\n    DstColor = ,\n    OneMinusDstColor = ,\n    SrcAlpha = ,\n    OneMinusSrcAlpha = ,\n    DstAlpha = ,\n    OneMinusDstAlpha = ,\n    ConstColor = ,\n    OneMinusConstColor = ,\n    ConstAlpha = ,\n    OneMinusConstAlpha = ,\n    SrcAlphaSaturate = ,\n    Src1Color = ,\n    OneMinusSrc1Color = ,\n    Src1Alpha = ,\n    OneMinusSrc1Alpha = ,\n}","parent":null,"children":[{"krate":0,"index":9374},{"krate":0,"index":9377},{"krate":0,"index":9380},{"krate":0,"index":9383},{"krate":0,"index":9386},{"krate":0,"index":9389},{"krate":0,"index":9392},{"krate":0,"index":9395},{"krate":0,"index":9398},{"krate":0,"index":9401},{"krate":0,"index":9404},{"krate":0,"index":9407},{"krate":0,"index":9410},{"krate":0,"index":9413},{"krate":0,"index":9416},{"krate":0,"index":9419},{"krate":0,"index":9422},{"krate":0,"index":9425},{"krate":0,"index":9428}],"decl_id":null,"docs":" Defines the possible blending factors.\n During blending, the source or destination fragment may be\n multiplied by a factor to produce the final result.\n","sig":null,"attributes":[{"value":"/ Defines the possible blending factors.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":196989,"byte_end":197031,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/ During blending, the source or destination fragment may be","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":197032,"byte_end":197094,"line_start":57,"line_end":57,"column_start":1,"column_end":63}},{"value":"/ multiplied by a factor to produce the final result.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":197095,"byte_end":197150,"line_start":58,"line_end":58,"column_start":1,"column_end":56}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":197151,"byte_end":197173,"line_start":59,"line_end":59,"column_start":1,"column_end":23}}]},{"kind":"StructVariant","id":{"krate":0,"index":9450},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":198065,"byte_end":198068,"line_start":91,"line_end":91,"column_start":5,"column_end":8},"name":"Add","qualname":"::pso::output_merger::BlendOp::Add","value":"BlendOp::Add { src, dst }","parent":{"krate":0,"index":9449},"children":[],"decl_id":null,"docs":" Adds source and destination.\n Source and destination are multiplied by factors before addition.\n","sig":null,"attributes":[{"value":"/ Adds source and destination.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":197954,"byte_end":197986,"line_start":89,"line_end":89,"column_start":5,"column_end":37}},{"value":"/ Source and destination are multiplied by factors before addition.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":197991,"byte_end":198060,"line_start":90,"line_end":90,"column_start":5,"column_end":74}}]},{"kind":"StructVariant","id":{"krate":0,"index":9453},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":198223,"byte_end":198226,"line_start":94,"line_end":94,"column_start":5,"column_end":8},"name":"Sub","qualname":"::pso::output_merger::BlendOp::Sub","value":"BlendOp::Sub { src, dst }","parent":{"krate":0,"index":9449},"children":[],"decl_id":null,"docs":" Subtracts destination from source.\n Source and destination are multiplied by factors before subtraction.\n","sig":null,"attributes":[{"value":"/ Subtracts destination from source.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":198103,"byte_end":198141,"line_start":92,"line_end":92,"column_start":5,"column_end":43}},{"value":"/ Source and destination are multiplied by factors before subtraction.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":198146,"byte_end":198218,"line_start":93,"line_end":93,"column_start":5,"column_end":77}}]},{"kind":"StructVariant","id":{"krate":0,"index":9456},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":198381,"byte_end":198387,"line_start":97,"line_end":97,"column_start":5,"column_end":11},"name":"RevSub","qualname":"::pso::output_merger::BlendOp::RevSub","value":"BlendOp::RevSub { src, dst }","parent":{"krate":0,"index":9449},"children":[],"decl_id":null,"docs":" Subtracts source from destination.\n Source and destination are multiplied by factors before subtraction.\n","sig":null,"attributes":[{"value":"/ Subtracts source from destination.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":198261,"byte_end":198299,"line_start":95,"line_end":95,"column_start":5,"column_end":43}},{"value":"/ Source and destination are multiplied by factors before subtraction.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":198304,"byte_end":198376,"line_start":96,"line_end":96,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9459},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":198486,"byte_end":198489,"line_start":99,"line_end":99,"column_start":5,"column_end":8},"name":"Min","qualname":"::pso::output_merger::BlendOp::Min","value":"BlendOp::Min","parent":{"krate":0,"index":9449},"children":[],"decl_id":null,"docs":" Component-wise minimum value of source and destination.\n","sig":null,"attributes":[{"value":"/ Component-wise minimum value of source and destination.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":198422,"byte_end":198481,"line_start":98,"line_end":98,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9461},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":198559,"byte_end":198562,"line_start":101,"line_end":101,"column_start":5,"column_end":8},"name":"Max","qualname":"::pso::output_merger::BlendOp::Max","value":"BlendOp::Max","parent":{"krate":0,"index":9449},"children":[],"decl_id":null,"docs":" Component-wise maximum value of source and destination.\n","sig":null,"attributes":[{"value":"/ Component-wise maximum value of source and destination.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":198495,"byte_end":198554,"line_start":100,"line_end":100,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":9449},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":197940,"byte_end":197947,"line_start":88,"line_end":88,"column_start":10,"column_end":17},"name":"BlendOp","qualname":"::pso::output_merger::BlendOp","value":"pub enum BlendOp {\n    Add {\n        src: Factor,\n        dst: Factor,\n    },\n    Sub {\n        src: Factor,\n        dst: Factor,\n    },\n    RevSub {\n        src: Factor,\n        dst: Factor,\n    },\n    Min,\n    Max,\n}","parent":null,"children":[{"krate":0,"index":9450},{"krate":0,"index":9453},{"krate":0,"index":9456},{"krate":0,"index":9459},{"krate":0,"index":9461}],"decl_id":null,"docs":" Blending operations.\n","sig":null,"attributes":[{"value":"/ Blending operations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":197752,"byte_end":197776,"line_start":84,"line_end":84,"column_start":1,"column_end":25}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":197777,"byte_end":197799,"line_start":85,"line_end":85,"column_start":1,"column_end":23}}]},{"kind":"Const","id":{"krate":0,"index":807},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":198651,"byte_end":198658,"line_start":106,"line_end":106,"column_start":15,"column_end":22},"name":"REPLACE","qualname":"::pso::output_merger::BlendOp::REPLACE","value":"Self","parent":{"krate":0,"index":806},"children":[],"decl_id":null,"docs":" Replace the destination value with the source.\n","sig":null,"attributes":[{"value":"/ Replace the destination value with the source.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":198586,"byte_end":198636,"line_start":105,"line_end":105,"column_start":5,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":808},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":198805,"byte_end":198808,"line_start":111,"line_end":111,"column_start":15,"column_end":18},"name":"ADD","qualname":"::pso::output_merger::BlendOp::ADD","value":"Self","parent":{"krate":0,"index":806},"children":[],"decl_id":null,"docs":" Add the source and destination together.\n","sig":null,"attributes":[{"value":"/ Add the source and destination together.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":198746,"byte_end":198790,"line_start":110,"line_end":110,"column_start":5,"column_end":49}}]},{"kind":"Const","id":{"krate":0,"index":809},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":198962,"byte_end":198967,"line_start":116,"line_end":116,"column_start":15,"column_end":20},"name":"ALPHA","qualname":"::pso::output_merger::BlendOp::ALPHA","value":"Self","parent":{"krate":0,"index":806},"children":[],"decl_id":null,"docs":" Alpha blend the source and destination together.\n","sig":null,"attributes":[{"value":"/ Alpha blend the source and destination together.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":198895,"byte_end":198947,"line_start":115,"line_end":115,"column_start":5,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":810},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":199153,"byte_end":199172,"line_start":121,"line_end":121,"column_start":15,"column_end":34},"name":"PREMULTIPLIED_ALPHA","qualname":"::pso::output_merger::BlendOp::PREMULTIPLIED_ALPHA","value":"Self","parent":{"krate":0,"index":806},"children":[],"decl_id":null,"docs":" Alpha blend a premultiplied-alpha source with the destination.\n","sig":null,"attributes":[{"value":"/ Alpha blend a premultiplied-alpha source with the destination.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":199072,"byte_end":199138,"line_start":120,"line_end":120,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":9482},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":199504,"byte_end":199514,"line_start":131,"line_end":131,"column_start":12,"column_end":22},"name":"BlendState","qualname":"::pso::output_merger::BlendState","value":"BlendState { color, alpha }","parent":null,"children":[{"krate":0,"index":9483},{"krate":0,"index":9484}],"decl_id":null,"docs":" Specifies whether to use blending, and if so,\n which operations to use for color and alpha channels.\n","sig":null,"attributes":[{"value":"/ Specifies whether to use blending, and if so,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":199271,"byte_end":199320,"line_start":127,"line_end":127,"column_start":1,"column_end":50}},{"value":"/ which operations to use for color and alpha channels.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":199321,"byte_end":199378,"line_start":128,"line_end":128,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":9483},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":199584,"byte_end":199589,"line_start":133,"line_end":133,"column_start":9,"column_end":14},"name":"color","qualname":"::pso::output_merger::BlendState::color","value":"pso::output_merger::BlendOp","parent":{"krate":0,"index":9482},"children":[],"decl_id":null,"docs":" The blend operation to use for the color channels.\n","sig":null,"attributes":[{"value":"/ The blend operation to use for the color channels.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":199521,"byte_end":199575,"line_start":132,"line_end":132,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":9484},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":199666,"byte_end":199671,"line_start":135,"line_end":135,"column_start":9,"column_end":14},"name":"alpha","qualname":"::pso::output_merger::BlendState::alpha","value":"pso::output_merger::BlendOp","parent":{"krate":0,"index":9482},"children":[],"decl_id":null,"docs":" The blend operation to use for the alpha channel.\n","sig":null,"attributes":[{"value":"/ The blend operation to use for the alpha channel.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":199604,"byte_end":199657,"line_start":134,"line_end":134,"column_start":5,"column_end":58}}]},{"kind":"Const","id":{"krate":0,"index":812},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":199744,"byte_end":199751,"line_start":140,"line_end":140,"column_start":15,"column_end":22},"name":"REPLACE","qualname":"::pso::output_merger::BlendState::REPLACE","value":"Self","parent":{"krate":0,"index":811},"children":[],"decl_id":null,"docs":" Replace the color.\n","sig":null,"attributes":[{"value":"/ Replace the color.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":199707,"byte_end":199729,"line_start":139,"line_end":139,"column_start":5,"column_end":27}}]},{"kind":"Const","id":{"krate":0,"index":813},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":199887,"byte_end":199890,"line_start":145,"line_end":145,"column_start":15,"column_end":18},"name":"ADD","qualname":"::pso::output_merger::BlendState::ADD","value":"Self","parent":{"krate":0,"index":811},"children":[],"decl_id":null,"docs":" Additive blending.\n","sig":null,"attributes":[{"value":"/ Additive blending.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":199850,"byte_end":199872,"line_start":144,"line_end":144,"column_start":5,"column_end":27}}]},{"kind":"Const","id":{"krate":0,"index":814},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":200024,"byte_end":200032,"line_start":150,"line_end":150,"column_start":15,"column_end":23},"name":"MULTIPLY","qualname":"::pso::output_merger::BlendState::MULTIPLY","value":"Self","parent":{"krate":0,"index":811},"children":[],"decl_id":null,"docs":" Multiplicative blending.\n","sig":null,"attributes":[{"value":"/ Multiplicative blending.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":199981,"byte_end":200009,"line_start":149,"line_end":149,"column_start":5,"column_end":33}}]},{"kind":"Const","id":{"krate":0,"index":815},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":200313,"byte_end":200318,"line_start":161,"line_end":161,"column_start":15,"column_end":20},"name":"ALPHA","qualname":"::pso::output_merger::BlendState::ALPHA","value":"Self","parent":{"krate":0,"index":811},"children":[],"decl_id":null,"docs":" Alpha blending.\n","sig":null,"attributes":[{"value":"/ Alpha blending.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":200279,"byte_end":200298,"line_start":160,"line_end":160,"column_start":5,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":816},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":200476,"byte_end":200495,"line_start":166,"line_end":166,"column_start":15,"column_end":34},"name":"PREMULTIPLIED_ALPHA","qualname":"::pso::output_merger::BlendState::PREMULTIPLIED_ALPHA","value":"Self","parent":{"krate":0,"index":811},"children":[],"decl_id":null,"docs":" Pre-multiplied alpha blending.\n","sig":null,"attributes":[{"value":"/ Pre-multiplied alpha blending.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":200427,"byte_end":200461,"line_start":165,"line_end":165,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":9500},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":200784,"byte_end":200798,"line_start":175,"line_end":175,"column_start":12,"column_end":26},"name":"ColorBlendDesc","qualname":"::pso::output_merger::ColorBlendDesc","value":"ColorBlendDesc { mask, blend }","parent":null,"children":[{"krate":0,"index":9501},{"krate":0,"index":9502}],"decl_id":null,"docs":" PSO color target descriptor.\n","sig":null,"attributes":[{"value":"/ PSO color target descriptor.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":200617,"byte_end":200649,"line_start":172,"line_end":172,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":9501},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":200835,"byte_end":200839,"line_start":177,"line_end":177,"column_start":9,"column_end":13},"name":"mask","qualname":"::pso::output_merger::ColorBlendDesc::mask","value":"pso::output_merger::ColorMask","parent":{"krate":0,"index":9500},"children":[],"decl_id":null,"docs":" Color write mask.\n","sig":null,"attributes":[{"value":"/ Color write mask.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":200805,"byte_end":200826,"line_start":176,"line_end":176,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":9502},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":200893,"byte_end":200898,"line_start":179,"line_end":179,"column_start":9,"column_end":14},"name":"blend","qualname":"::pso::output_merger::ColorBlendDesc::blend","value":"std::option::Option<pso::output_merger::BlendState>","parent":{"krate":0,"index":9500},"children":[],"decl_id":null,"docs":" Blend state, if enabled.\n","sig":null,"attributes":[{"value":"/ Blend state, if enabled.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":200856,"byte_end":200884,"line_start":178,"line_end":178,"column_start":5,"column_end":33}}]},{"kind":"Const","id":{"krate":0,"index":818},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":201113,"byte_end":201118,"line_start":185,"line_end":185,"column_start":15,"column_end":20},"name":"EMPTY","qualname":"::pso::output_merger::ColorBlendDesc::EMPTY","value":"Self","parent":{"krate":0,"index":817},"children":[],"decl_id":null,"docs":" Empty blend descriptor just writes out the color without blending.\n","sig":null,"attributes":[{"value":"/ Empty blend descriptor just writes out the color without blending.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":200949,"byte_end":201019,"line_start":183,"line_end":183,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":9520},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":201369,"byte_end":201378,"line_start":194,"line_end":194,"column_start":12,"column_end":21},"name":"DepthTest","qualname":"::pso::output_merger::DepthTest","value":"DepthTest { fun, write }","parent":null,"children":[{"krate":0,"index":9521},{"krate":0,"index":9522}],"decl_id":null,"docs":" Depth test state.\n","sig":null,"attributes":[{"value":"/ Depth test state.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":201205,"byte_end":201226,"line_start":191,"line_end":191,"column_start":1,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":9521},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":201425,"byte_end":201428,"line_start":196,"line_end":196,"column_start":9,"column_end":12},"name":"fun","qualname":"::pso::output_merger::DepthTest::fun","value":"pso::output_merger::Comparison","parent":{"krate":0,"index":9520},"children":[],"decl_id":null,"docs":" Comparison function to use.\n","sig":null,"attributes":[{"value":"/ Comparison function to use.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":201385,"byte_end":201416,"line_start":195,"line_end":195,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":9522},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":201511,"byte_end":201516,"line_start":198,"line_end":198,"column_start":9,"column_end":14},"name":"write","qualname":"::pso::output_merger::DepthTest::write","value":"bool","parent":{"krate":0,"index":9520},"children":[],"decl_id":null,"docs":" Specify whether to write to the depth buffer or not.\n","sig":null,"attributes":[{"value":"/ Specify whether to write to the depth buffer or not.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":201446,"byte_end":201502,"line_start":197,"line_end":197,"column_start":5,"column_end":61}}]},{"kind":"Const","id":{"krate":0,"index":820},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":201598,"byte_end":201602,"line_start":203,"line_end":203,"column_start":15,"column_end":19},"name":"FAIL","qualname":"::pso::output_merger::DepthTest::FAIL","value":"Self","parent":{"krate":0,"index":819},"children":[],"decl_id":null,"docs":" A depth test that always fails.\n","sig":null,"attributes":[{"value":"/ A depth test that always fails.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":201548,"byte_end":201583,"line_start":202,"line_end":202,"column_start":5,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":821},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":201847,"byte_end":201856,"line_start":210,"line_end":210,"column_start":15,"column_end":24},"name":"PASS_TEST","qualname":"::pso::output_merger::DepthTest::PASS_TEST","value":"Self","parent":{"krate":0,"index":819},"children":[],"decl_id":null,"docs":" A depth test that always succeeds but doesn't\n write to the depth buffer\n","sig":null,"attributes":[{"value":"/ A depth test that always succeeds but doesn't","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":201688,"byte_end":201737,"line_start":207,"line_end":207,"column_start":5,"column_end":54}},{"value":"/ write to the depth buffer","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":201742,"byte_end":201771,"line_start":208,"line_end":208,"column_start":5,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":822},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":202046,"byte_end":202056,"line_start":216,"line_end":216,"column_start":15,"column_end":25},"name":"PASS_WRITE","qualname":"::pso::output_merger::DepthTest::PASS_WRITE","value":"Self","parent":{"krate":0,"index":819},"children":[],"decl_id":null,"docs":" A depth test that always succeeds and writes its result\n to the depth buffer.\n","sig":null,"attributes":[{"value":"/ A depth test that always succeeds and writes its result","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":201943,"byte_end":202002,"line_start":214,"line_end":214,"column_start":5,"column_end":64}},{"value":"/ to the depth buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":202007,"byte_end":202031,"line_start":215,"line_end":215,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9543},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":202421,"byte_end":202425,"line_start":228,"line_end":228,"column_start":5,"column_end":9},"name":"Keep","qualname":"::pso::output_merger::StencilOp::Keep","value":"StencilOp::Keep","parent":{"krate":0,"index":9542},"children":[],"decl_id":null,"docs":" Keep the current value in the stencil buffer (no change).\n","sig":null,"attributes":[{"value":"/ Keep the current value in the stencil buffer (no change).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":202355,"byte_end":202416,"line_start":227,"line_end":227,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9546},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":202488,"byte_end":202492,"line_start":230,"line_end":230,"column_start":5,"column_end":9},"name":"Zero","qualname":"::pso::output_merger::StencilOp::Zero","value":"StencilOp::Zero","parent":{"krate":0,"index":9542},"children":[],"decl_id":null,"docs":" Set the value in the stencil buffer to zero.\n","sig":null,"attributes":[{"value":"/ Set the value in the stencil buffer to zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":202435,"byte_end":202483,"line_start":229,"line_end":229,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9549},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":202574,"byte_end":202581,"line_start":232,"line_end":232,"column_start":5,"column_end":12},"name":"Replace","qualname":"::pso::output_merger::StencilOp::Replace","value":"StencilOp::Replace","parent":{"krate":0,"index":9542},"children":[],"decl_id":null,"docs":" Set the stencil buffer value to `reference` from `StencilFace`.\n","sig":null,"attributes":[{"value":"/ Set the stencil buffer value to `reference` from `StencilFace`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":202502,"byte_end":202569,"line_start":231,"line_end":231,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9552},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":202666,"byte_end":202680,"line_start":234,"line_end":234,"column_start":5,"column_end":19},"name":"IncrementClamp","qualname":"::pso::output_merger::StencilOp::IncrementClamp","value":"StencilOp::IncrementClamp","parent":{"krate":0,"index":9542},"children":[],"decl_id":null,"docs":" Increment the stencil buffer value, clamping to its maximum value.\n","sig":null,"attributes":[{"value":"/ Increment the stencil buffer value, clamping to its maximum value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":202591,"byte_end":202661,"line_start":233,"line_end":233,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9555},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":202765,"byte_end":202779,"line_start":236,"line_end":236,"column_start":5,"column_end":19},"name":"DecrementClamp","qualname":"::pso::output_merger::StencilOp::DecrementClamp","value":"StencilOp::DecrementClamp","parent":{"krate":0,"index":9542},"children":[],"decl_id":null,"docs":" Decrement the stencil buffer value, clamping to its minimum value.\n","sig":null,"attributes":[{"value":"/ Decrement the stencil buffer value, clamping to its minimum value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":202690,"byte_end":202760,"line_start":235,"line_end":235,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9558},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":202853,"byte_end":202859,"line_start":238,"line_end":238,"column_start":5,"column_end":11},"name":"Invert","qualname":"::pso::output_merger::StencilOp::Invert","value":"StencilOp::Invert","parent":{"krate":0,"index":9542},"children":[],"decl_id":null,"docs":" Bitwise invert the current value in the stencil buffer.\n","sig":null,"attributes":[{"value":"/ Bitwise invert the current value in the stencil buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":202789,"byte_end":202848,"line_start":237,"line_end":237,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9561},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":202947,"byte_end":202960,"line_start":240,"line_end":240,"column_start":5,"column_end":18},"name":"IncrementWrap","qualname":"::pso::output_merger::StencilOp::IncrementWrap","value":"StencilOp::IncrementWrap","parent":{"krate":0,"index":9542},"children":[],"decl_id":null,"docs":" Increment the stencil buffer value, wrapping around to 0 on overflow.\n","sig":null,"attributes":[{"value":"/ Increment the stencil buffer value, wrapping around to 0 on overflow.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":202869,"byte_end":202942,"line_start":239,"line_end":239,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9564},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":203064,"byte_end":203077,"line_start":242,"line_end":242,"column_start":5,"column_end":18},"name":"DecrementWrap","qualname":"::pso::output_merger::StencilOp::DecrementWrap","value":"StencilOp::DecrementWrap","parent":{"krate":0,"index":9542},"children":[],"decl_id":null,"docs":" Decrement the stencil buffer value, wrapping around to the maximum value on overflow.\n","sig":null,"attributes":[{"value":"/ Decrement the stencil buffer value, wrapping around to the maximum value on overflow.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":202970,"byte_end":203059,"line_start":241,"line_end":241,"column_start":5,"column_end":94}}]},{"kind":"Enum","id":{"krate":0,"index":9542},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":202339,"byte_end":202348,"line_start":226,"line_end":226,"column_start":10,"column_end":19},"name":"StencilOp","qualname":"::pso::output_merger::StencilOp","value":"pub enum StencilOp {\n    Keep = ,\n    Zero = ,\n    Replace = ,\n    IncrementClamp = ,\n    DecrementClamp = ,\n    Invert = ,\n    IncrementWrap = ,\n    DecrementWrap = ,\n}","parent":null,"children":[{"krate":0,"index":9543},{"krate":0,"index":9546},{"krate":0,"index":9549},{"krate":0,"index":9552},{"krate":0,"index":9555},{"krate":0,"index":9558},{"krate":0,"index":9561},{"krate":0,"index":9564}],"decl_id":null,"docs":" The operation to use for stencil masking.\n","sig":null,"attributes":[{"value":"/ The operation to use for stencil masking.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":202141,"byte_end":202186,"line_start":222,"line_end":222,"column_start":1,"column_end":46}},{"value":"repr(u8)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":202187,"byte_end":202198,"line_start":223,"line_end":223,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":9585},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":203283,"byte_end":203294,"line_start":248,"line_end":248,"column_start":12,"column_end":23},"name":"StencilFace","qualname":"::pso::output_merger::StencilFace","value":"StencilFace { fun, op_fail, op_depth_fail, op_pass }","parent":null,"children":[{"krate":0,"index":9586},{"krate":0,"index":9587},{"krate":0,"index":9588},{"krate":0,"index":9589}],"decl_id":null,"docs":" Complete stencil state for a given side of a face.\n","sig":null,"attributes":[{"value":"/ Complete stencil state for a given side of a face.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":203086,"byte_end":203140,"line_start":245,"line_end":245,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":9586},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":203381,"byte_end":203384,"line_start":250,"line_end":250,"column_start":9,"column_end":12},"name":"fun","qualname":"::pso::output_merger::StencilFace::fun","value":"pso::output_merger::Comparison","parent":{"krate":0,"index":9585},"children":[],"decl_id":null,"docs":" Comparison function to use to determine if the stencil test passes.\n","sig":null,"attributes":[{"value":"/ Comparison function to use to determine if the stencil test passes.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":203301,"byte_end":203372,"line_start":249,"line_end":249,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":9587},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":203462,"byte_end":203469,"line_start":252,"line_end":252,"column_start":9,"column_end":16},"name":"op_fail","qualname":"::pso::output_merger::StencilFace::op_fail","value":"pso::output_merger::StencilOp","parent":{"krate":0,"index":9585},"children":[],"decl_id":null,"docs":" What operation to do if the stencil test fails.\n","sig":null,"attributes":[{"value":"/ What operation to do if the stencil test fails.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":203402,"byte_end":203453,"line_start":251,"line_end":251,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":9588},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":203572,"byte_end":203585,"line_start":254,"line_end":254,"column_start":9,"column_end":22},"name":"op_depth_fail","qualname":"::pso::output_merger::StencilFace::op_depth_fail","value":"pso::output_merger::StencilOp","parent":{"krate":0,"index":9585},"children":[],"decl_id":null,"docs":" What operation to do if the stencil test passes but the depth test fails.\n","sig":null,"attributes":[{"value":"/ What operation to do if the stencil test passes but the depth test fails.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":203486,"byte_end":203563,"line_start":253,"line_end":253,"column_start":5,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":9589},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":203676,"byte_end":203683,"line_start":256,"line_end":256,"column_start":9,"column_end":16},"name":"op_pass","qualname":"::pso::output_merger::StencilFace::op_pass","value":"pso::output_merger::StencilOp","parent":{"krate":0,"index":9585},"children":[],"decl_id":null,"docs":" What operation to do if both the depth and stencil test pass.\n","sig":null,"attributes":[{"value":"/ What operation to do if both the depth and stencil test pass.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":203602,"byte_end":203667,"line_start":255,"line_end":255,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":9609},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":204166,"byte_end":204171,"line_start":273,"line_end":273,"column_start":12,"column_end":17},"name":"Sided","qualname":"::pso::output_merger::Sided","value":"Sided { front, back }","parent":null,"children":[{"krate":0,"index":9611},{"krate":0,"index":9612}],"decl_id":null,"docs":" A generic struct holding the properties of two sides of a polygon.\n","sig":null,"attributes":[{"value":"/ A generic struct holding the properties of two sides of a polygon.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":203961,"byte_end":204031,"line_start":270,"line_end":270,"column_start":1,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":9611},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":204227,"byte_end":204232,"line_start":275,"line_end":275,"column_start":9,"column_end":14},"name":"front","qualname":"::pso::output_merger::Sided::front","value":"T","parent":{"krate":0,"index":9609},"children":[],"decl_id":null,"docs":" Information about the front face.\n","sig":null,"attributes":[{"value":"/ Information about the front face.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":204181,"byte_end":204218,"line_start":274,"line_end":274,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":9612},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":204286,"byte_end":204290,"line_start":277,"line_end":277,"column_start":9,"column_end":13},"name":"back","qualname":"::pso::output_merger::Sided::back","value":"T","parent":{"krate":0,"index":9609},"children":[],"decl_id":null,"docs":" Information about the back face.\n","sig":null,"attributes":[{"value":"/ Information about the back face.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":204241,"byte_end":204277,"line_start":276,"line_end":276,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":204434,"byte_end":204437,"line_start":283,"line_end":283,"column_start":12,"column_end":15},"name":"new","qualname":"<Sided<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Sided` structure with both `front` and `back` holding\n the same value.\n","sig":null,"attributes":[{"value":"/ Create a new `Sided` structure with both `front` and `back` holding","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":204327,"byte_end":204398,"line_start":281,"line_end":281,"column_start":5,"column_end":76}},{"value":"/ the same value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":204403,"byte_end":204422,"line_start":282,"line_end":282,"column_start":5,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":828},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":204661,"byte_end":204674,"line_start":293,"line_end":293,"column_start":10,"column_end":23},"name":"StencilValues","qualname":"::pso::output_merger::StencilValues","value":"State<Sided<StencilValue>>","parent":null,"children":[],"decl_id":null,"docs":" Pair of stencil values that could be either baked into a graphics pipeline\n or provided dynamically.\n","sig":null,"attributes":[{"value":"/ Pair of stencil values that could be either baked into a graphics pipeline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":204544,"byte_end":204622,"line_start":291,"line_end":291,"column_start":1,"column_end":79}},{"value":"/ or provided dynamically.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":204623,"byte_end":204651,"line_start":292,"line_end":292,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":9639},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":205058,"byte_end":205069,"line_start":302,"line_end":302,"column_start":12,"column_end":23},"name":"StencilTest","qualname":"::pso::output_merger::StencilTest","value":"StencilTest { faces, read_masks, write_masks, reference_values }","parent":null,"children":[{"krate":0,"index":9640},{"krate":0,"index":9641},{"krate":0,"index":9642},{"krate":0,"index":9643}],"decl_id":null,"docs":" Defines a stencil test. Stencil testing is an operation\n performed to cull fragments;\n the new fragment is tested against the value held in the\n stencil buffer, and if the test fails the fragment is\n discarded.\n","sig":null,"attributes":[{"value":"/ Defines a stencil test. Stencil testing is an operation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":204706,"byte_end":204765,"line_start":295,"line_end":295,"column_start":1,"column_end":60}},{"value":"/ performed to cull fragments;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":204766,"byte_end":204798,"line_start":296,"line_end":296,"column_start":1,"column_end":33}},{"value":"/ the new fragment is tested against the value held in the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":204799,"byte_end":204859,"line_start":297,"line_end":297,"column_start":1,"column_end":61}},{"value":"/ stencil buffer, and if the test fails the fragment is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":204860,"byte_end":204917,"line_start":298,"line_end":298,"column_start":1,"column_end":58}},{"value":"/ discarded.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":204918,"byte_end":204932,"line_start":299,"line_end":299,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":9640},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":205118,"byte_end":205123,"line_start":304,"line_end":304,"column_start":9,"column_end":14},"name":"faces","qualname":"::pso::output_merger::StencilTest::faces","value":"pso::output_merger::Sided<pso::output_merger::StencilFace>","parent":{"krate":0,"index":9639},"children":[],"decl_id":null,"docs":" Operations for stencil faces.\n","sig":null,"attributes":[{"value":"/ Operations for stencil faces.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":205076,"byte_end":205109,"line_start":303,"line_end":303,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":9641},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":205298,"byte_end":205308,"line_start":307,"line_end":307,"column_start":9,"column_end":19},"name":"read_masks","qualname":"::pso::output_merger::StencilTest::read_masks","value":"pso::State<pso::output_merger::Sided<u32>>","parent":{"krate":0,"index":9639},"children":[],"decl_id":null,"docs":" Masks that are ANDd with both the stencil buffer value and the reference value when they\n are read before doing the stencil test.\n","sig":null,"attributes":[{"value":"/ Masks that are ANDd with both the stencil buffer value and the reference value when they","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":205149,"byte_end":205241,"line_start":305,"line_end":305,"column_start":5,"column_end":97}},{"value":"/ are read before doing the stencil test.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":205246,"byte_end":205289,"line_start":306,"line_end":306,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":9642},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":205421,"byte_end":205432,"line_start":309,"line_end":309,"column_start":9,"column_end":20},"name":"write_masks","qualname":"::pso::output_merger::StencilTest::write_masks","value":"pso::State<pso::output_merger::Sided<u32>>","parent":{"krate":0,"index":9639},"children":[],"decl_id":null,"docs":" Mask that are ANDd with the stencil value before writing to the stencil buffer.\n","sig":null,"attributes":[{"value":"/ Mask that are ANDd with the stencil value before writing to the stencil buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":205329,"byte_end":205412,"line_start":308,"line_end":308,"column_start":5,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":9643},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":205510,"byte_end":205526,"line_start":311,"line_end":311,"column_start":9,"column_end":25},"name":"reference_values","qualname":"::pso::output_merger::StencilTest::reference_values","value":"pso::State<pso::output_merger::Sided<u32>>","parent":{"krate":0,"index":9639},"children":[],"decl_id":null,"docs":" The reference values used for stencil tests.\n","sig":null,"attributes":[{"value":"/ The reference values used for stencil tests.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":205453,"byte_end":205501,"line_start":310,"line_end":310,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":9659},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":206028,"byte_end":206044,"line_start":328,"line_end":328,"column_start":12,"column_end":28},"name":"DepthStencilDesc","qualname":"::pso::output_merger::DepthStencilDesc","value":"DepthStencilDesc { depth, depth_bounds, stencil }","parent":null,"children":[{"krate":0,"index":9660},{"krate":0,"index":9661},{"krate":0,"index":9662}],"decl_id":null,"docs":" PSO depth-stencil target descriptor.\n","sig":null,"attributes":[{"value":"/ PSO depth-stencil target descriptor.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":205853,"byte_end":205893,"line_start":325,"line_end":325,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":9660},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":206095,"byte_end":206100,"line_start":330,"line_end":330,"column_start":9,"column_end":14},"name":"depth","qualname":"::pso::output_merger::DepthStencilDesc::depth","value":"std::option::Option<pso::output_merger::DepthTest>","parent":{"krate":0,"index":9659},"children":[],"decl_id":null,"docs":" Optional depth testing/writing.\n","sig":null,"attributes":[{"value":"/ Optional depth testing/writing.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":206051,"byte_end":206086,"line_start":329,"line_end":329,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":9661},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":206166,"byte_end":206178,"line_start":332,"line_end":332,"column_start":9,"column_end":21},"name":"depth_bounds","qualname":"::pso::output_merger::DepthStencilDesc::depth_bounds","value":"bool","parent":{"krate":0,"index":9659},"children":[],"decl_id":null,"docs":" Enable depth bounds testing.\n","sig":null,"attributes":[{"value":"/ Enable depth bounds testing.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":206125,"byte_end":206157,"line_start":331,"line_end":331,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":9662},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":206222,"byte_end":206229,"line_start":334,"line_end":334,"column_start":9,"column_end":16},"name":"stencil","qualname":"::pso::output_merger::DepthStencilDesc::stencil","value":"std::option::Option<pso::output_merger::StencilTest>","parent":{"krate":0,"index":9659},"children":[],"decl_id":null,"docs":" Stencil test/write.\n","sig":null,"attributes":[{"value":"/ Stencil test/write.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":206190,"byte_end":206213,"line_start":333,"line_end":333,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":206359,"byte_end":206369,"line_start":339,"line_end":339,"column_start":12,"column_end":22},"name":"uses_depth","qualname":"<DepthStencilDesc>::uses_depth","value":"pub fn uses_depth(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the descriptor assumes the depth attachment.\n","sig":null,"attributes":[{"value":"/ Returns true if the descriptor assumes the depth attachment.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":206283,"byte_end":206347,"line_start":338,"line_end":338,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":206525,"byte_end":206537,"line_start":343,"line_end":343,"column_start":12,"column_end":24},"name":"uses_stencil","qualname":"<DepthStencilDesc>::uses_stencil","value":"pub fn uses_stencil(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the descriptor assumes the stencil attachment.\n","sig":null,"attributes":[{"value":"/ Returns true if the descriptor assumes the stencil attachment.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":206447,"byte_end":206513,"line_start":342,"line_end":342,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":9680},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":206702,"byte_end":206706,"line_start":351,"line_end":351,"column_start":16,"column_end":20},"name":"Face","qualname":"::pso::output_merger::Face","value":"Face {  }","parent":null,"children":[{"krate":0,"index":9681}],"decl_id":null,"docs":" Face.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9715},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":206810,"byte_end":206814,"line_start":353,"line_end":353,"column_start":15,"column_end":19},"name":"NONE","qualname":"::pso::output_merger::Face::NONE","value":"Face","parent":{"krate":0,"index":9714},"children":[],"decl_id":null,"docs":" Empty face. TODO: remove when constexpr are stabilized to use empty()\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9716},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":206860,"byte_end":206865,"line_start":355,"line_end":355,"column_start":15,"column_end":20},"name":"FRONT","qualname":"::pso::output_merger::Face::FRONT","value":"Face","parent":{"krate":0,"index":9714},"children":[],"decl_id":null,"docs":" Front face.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9717},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":206910,"byte_end":206914,"line_start":357,"line_end":357,"column_start":15,"column_end":19},"name":"BACK","qualname":"::pso::output_merger::Face::BACK","value":"Face","parent":{"krate":0,"index":9714},"children":[],"decl_id":null,"docs":" Back face.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9772},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":207127,"byte_end":207149,"line_start":7,"line_end":7,"column_start":12,"column_end":34},"name":"SpecializationConstant","qualname":"::pso::specialization::SpecializationConstant","value":"SpecializationConstant { id, range }","parent":null,"children":[{"krate":0,"index":9773},{"krate":0,"index":9774}],"decl_id":null,"docs":" Description of a specialization constant for the pipeline.\n","sig":null,"attributes":[{"value":"/ Description of a specialization constant for the pipeline.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":207012,"byte_end":207074,"line_start":5,"line_end":5,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":9773},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":207206,"byte_end":207208,"line_start":9,"line_end":9,"column_start":9,"column_end":11},"name":"id","qualname":"::pso::specialization::SpecializationConstant::id","value":"u32","parent":{"krate":0,"index":9772},"children":[],"decl_id":null,"docs":" Constant identifier in shader source.\n","sig":null,"attributes":[{"value":"/ Constant identifier in shader source.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":207156,"byte_end":207197,"line_start":8,"line_end":8,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":9774},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":207274,"byte_end":207279,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"range","qualname":"::pso::specialization::SpecializationConstant::range","value":"std::ops::Range<u16>","parent":{"krate":0,"index":9772},"children":[],"decl_id":null,"docs":" Value to override specialization constant.\n","sig":null,"attributes":[{"value":"/ Value to override specialization constant.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":207219,"byte_end":207265,"line_start":10,"line_end":10,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":9786},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":207956,"byte_end":207970,"line_start":26,"line_end":26,"column_start":12,"column_end":26},"name":"Specialization","qualname":"::pso::specialization::Specialization","value":"Specialization { constants, data }","parent":null,"children":[{"krate":0,"index":9788},{"krate":0,"index":9789}],"decl_id":null,"docs":" Information required for pipeline specialization.","sig":null,"attributes":[{"value":"/ Information required for pipeline specialization.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":207296,"byte_end":207349,"line_start":14,"line_end":14,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":207350,"byte_end":207353,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Specialization allows for easy configuration of multiple similar pipelines.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":207354,"byte_end":207433,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ For example, there may be a boolean exposed to the shader that switches","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":207434,"byte_end":207509,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/ the [specularity](https://en.wikipedia.org/wiki/Specularity) on/off,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":207510,"byte_end":207582,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ provided via a [specialization constant][SpecializationConstant].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":207583,"byte_end":207652,"line_start":19,"line_end":19,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":207653,"byte_end":207656,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ That would produce separate PSO's for the \"on\" and \"off\" states","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":207657,"byte_end":207724,"line_start":21,"line_end":21,"column_start":1,"column_end":68}},{"value":"/ but they share most of the internal stuff and are fast to produce.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":207725,"byte_end":207795,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ More importantly, they are fast to execute, since the driver","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":207796,"byte_end":207860,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/ can optimize out the branch on that other PSO creation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":207861,"byte_end":207920,"line_start":24,"line_end":24,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":9788},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":208055,"byte_end":208064,"line_start":28,"line_end":28,"column_start":9,"column_end":18},"name":"constants","qualname":"::pso::specialization::Specialization::constants","value":"std::borrow::Cow<'a, [pso::specialization::SpecializationConstant]>","parent":{"krate":0,"index":9786},"children":[],"decl_id":null,"docs":" Array of descriptors of specialization constants to override.\n","sig":null,"attributes":[{"value":"/ Array of descriptors of specialization constants to override.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":207981,"byte_end":208046,"line_start":27,"line_end":27,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":9789},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":208158,"byte_end":208162,"line_start":30,"line_end":30,"column_start":9,"column_end":13},"name":"data","qualname":"::pso::specialization::Specialization::data","value":"std::borrow::Cow<'a, [u8]>","parent":{"krate":0,"index":9786},"children":[],"decl_id":null,"docs":" Raw data of the specialization constants\n","sig":null,"attributes":[{"value":"/ Raw data of the specialization constants","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":208105,"byte_end":208149,"line_start":29,"line_end":29,"column_start":5,"column_end":49}}]},{"kind":"Const","id":{"krate":0,"index":846},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":208261,"byte_end":208266,"line_start":35,"line_end":35,"column_start":15,"column_end":20},"name":"EMPTY","qualname":"::pso::specialization::Specialization::<'_>::EMPTY","value":"Self","parent":{"krate":0,"index":845},"children":[],"decl_id":null,"docs":" Empty specialization instance.\n","sig":null,"attributes":[{"value":"/ Empty specialization instance.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":208212,"byte_end":208246,"line_start":34,"line_end":34,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":9796},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":208531,"byte_end":208552,"line_start":49,"line_end":49,"column_start":12,"column_end":33},"name":"SpecializationStorage","qualname":"::pso::specialization::SpecializationStorage","value":"SpecializationStorage {  }","parent":null,"children":[{"krate":0,"index":9797},{"krate":0,"index":9798}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":849},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":208684,"byte_end":208697,"line_start":56,"line_end":56,"column_start":11,"column_end":24},"name":"SpecConstList","qualname":"::pso::specialization::SpecConstList","value":"SpecConstList: Sized","parent":null,"children":[{"krate":0,"index":850}],"decl_id":null,"docs":" List of specialization constants.\n","sig":null,"attributes":[{"value":"/ List of specialization constants.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":208621,"byte_end":208658,"line_start":54,"line_end":54,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":208714,"byte_end":208718,"line_start":57,"line_end":57,"column_start":8,"column_end":12},"name":"fold","qualname":"::pso::specialization::SpecConstList::fold","value":"pub fn fold(Self, &mut SpecializationStorage)","parent":{"krate":0,"index":849},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9803},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":209144,"byte_end":209160,"line_start":76,"line_end":76,"column_start":12,"column_end":28},"name":"SpecConstListNil","qualname":"::pso::specialization::SpecConstListNil","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9807},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":209206,"byte_end":209223,"line_start":80,"line_end":80,"column_start":12,"column_end":29},"name":"SpecConstListCons","qualname":"::pso::specialization::SpecConstListCons","value":"SpecConstListCons { head, tail }","parent":null,"children":[{"krate":0,"index":9810},{"krate":0,"index":9811}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9810},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":209240,"byte_end":209244,"line_start":81,"line_end":81,"column_start":9,"column_end":13},"name":"head","qualname":"::pso::specialization::SpecConstListCons::head","value":"(u32, H)","parent":{"krate":0,"index":9807},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9811},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":209264,"byte_end":209268,"line_start":82,"line_end":82,"column_start":9,"column_end":13},"name":"tail","qualname":"::pso::specialization::SpecConstListCons::tail","value":"T","parent":{"krate":0,"index":9807},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9834},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":160604,"byte_end":160609,"line_start":23,"line_end":23,"column_start":5,"column_end":10},"name":"Other","qualname":"::pso::CreationError::Other","value":"CreationError::Other","parent":{"krate":0,"index":9816},"children":[],"decl_id":null,"docs":" Unknown other error.\n","sig":null,"attributes":[{"value":"/ Unknown other error.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":160520,"byte_end":160544,"line_start":21,"line_end":21,"column_start":5,"column_end":29}},{"value":"error(\"Implementation specific error occurred\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":160549,"byte_end":160599,"line_start":22,"line_end":22,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9836},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":160759,"byte_end":160778,"line_start":26,"line_end":26,"column_start":5,"column_end":24},"name":"UnsupportedPipeline","qualname":"::pso::CreationError::UnsupportedPipeline","value":"CreationError::UnsupportedPipeline","parent":{"krate":0,"index":9816},"children":[],"decl_id":null,"docs":" Unsupported pipeline on hardware or implementation. Example: mesh shaders on DirectX 11.\n","sig":null,"attributes":[{"value":"/ Unsupported pipeline on hardware or implementation. Example: mesh shaders on DirectX 11.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":160615,"byte_end":160707,"line_start":24,"line_end":24,"column_start":5,"column_end":97}},{"value":"error(\"Pipeline kind is not supported\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":160712,"byte_end":160754,"line_start":25,"line_end":25,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9838},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":160873,"byte_end":160887,"line_start":29,"line_end":29,"column_start":5,"column_end":19},"name":"InvalidSubpass","qualname":"::pso::CreationError::InvalidSubpass","value":"CreationError::InvalidSubpass(pass::SubpassId)","parent":{"krate":0,"index":9816},"children":[],"decl_id":null,"docs":" Invalid subpass (not part of renderpass).\n","sig":null,"attributes":[{"value":"/ Invalid subpass (not part of renderpass).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":160784,"byte_end":160829,"line_start":27,"line_end":27,"column_start":5,"column_end":50}},{"value":"error(\"Invalid subpass: {0:?}\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":160834,"byte_end":160868,"line_start":28,"line_end":28,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9841},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":160998,"byte_end":161015,"line_start":32,"line_end":32,"column_start":5,"column_end":22},"name":"MissingEntryPoint","qualname":"::pso::CreationError::MissingEntryPoint","value":"CreationError::MissingEntryPoint(String)","parent":{"krate":0,"index":9816},"children":[],"decl_id":null,"docs":" The shader is missing an entry point.\n","sig":null,"attributes":[{"value":"/ The shader is missing an entry point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":160910,"byte_end":160951,"line_start":30,"line_end":30,"column_start":5,"column_end":46}},{"value":"error(\"Invalid entry point: {0:}\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":160956,"byte_end":160993,"line_start":31,"line_end":31,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9844},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":161122,"byte_end":161143,"line_start":35,"line_end":35,"column_start":5,"column_end":26},"name":"InvalidSpecialization","qualname":"::pso::CreationError::InvalidSpecialization","value":"CreationError::InvalidSpecialization(String)","parent":{"krate":0,"index":9816},"children":[],"decl_id":null,"docs":" The specialization values are incorrect.\n","sig":null,"attributes":[{"value":"/ The specialization values are incorrect.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":161029,"byte_end":161073,"line_start":33,"line_end":33,"column_start":5,"column_end":49}},{"value":"error(\"Specialization failed: {0:}\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":161078,"byte_end":161117,"line_start":34,"line_end":34,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":9847},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":161228,"byte_end":161239,"line_start":38,"line_end":38,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::pso::CreationError::OutOfMemory","value":"CreationError::OutOfMemory(device::OutOfMemory)","parent":{"krate":0,"index":9816},"children":[],"decl_id":null,"docs":" Out of either host or device memory.\n","sig":null,"attributes":[{"value":"/ Out of either host or device memory.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":161157,"byte_end":161197,"line_start":36,"line_end":36,"column_start":5,"column_end":45}},{"value":"error(transparent)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":161202,"byte_end":161223,"line_start":37,"line_end":37,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":9816},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":160500,"byte_end":160513,"line_start":20,"line_end":20,"column_start":10,"column_end":23},"name":"CreationError","qualname":"::pso::CreationError","value":"pub enum CreationError {\n    Other,\n    UnsupportedPipeline,\n    InvalidSubpass(pass::SubpassId),\n    MissingEntryPoint(String),\n    InvalidSpecialization(String),\n    OutOfMemory(device::OutOfMemory),\n}","parent":null,"children":[{"krate":0,"index":9834},{"krate":0,"index":9836},{"krate":0,"index":9838},{"krate":0,"index":9841},{"krate":0,"index":9844},{"krate":0,"index":9847}],"decl_id":null,"docs":" Error types happening upon PSO creation on the device side.\n","sig":null,"attributes":[{"value":"/ Error types happening upon PSO creation on the device side.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":160374,"byte_end":160437,"line_start":18,"line_end":18,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":9850},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":161525,"byte_end":161538,"line_start":47,"line_end":47,"column_start":16,"column_end":29},"name":"PipelineStage","qualname":"::pso::PipelineStage","value":"PipelineStage {  }","parent":null,"children":[{"krate":0,"index":9851}],"decl_id":null,"docs":" Stages of the logical pipeline.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9899},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":161604,"byte_end":161615,"line_start":49,"line_end":49,"column_start":15,"column_end":26},"name":"TOP_OF_PIPE","qualname":"::pso::PipelineStage::TOP_OF_PIPE","value":"PipelineStage","parent":{"krate":0,"index":9898},"children":[],"decl_id":null,"docs":" Beginning of the command queue.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9900},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":161676,"byte_end":161689,"line_start":51,"line_end":51,"column_start":15,"column_end":28},"name":"DRAW_INDIRECT","qualname":"::pso::PipelineStage::DRAW_INDIRECT","value":"PipelineStage","parent":{"krate":0,"index":9898},"children":[],"decl_id":null,"docs":" Indirect data consumption.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9901},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":161748,"byte_end":161760,"line_start":53,"line_end":53,"column_start":15,"column_end":27},"name":"VERTEX_INPUT","qualname":"::pso::PipelineStage::VERTEX_INPUT","value":"PipelineStage","parent":{"krate":0,"index":9898},"children":[],"decl_id":null,"docs":" Vertex data consumption.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9902},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":161819,"byte_end":161832,"line_start":55,"line_end":55,"column_start":15,"column_end":28},"name":"VERTEX_SHADER","qualname":"::pso::PipelineStage::VERTEX_SHADER","value":"PipelineStage","parent":{"krate":0,"index":9898},"children":[],"decl_id":null,"docs":" Vertex shader execution.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9903},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":161889,"byte_end":161900,"line_start":57,"line_end":57,"column_start":15,"column_end":26},"name":"HULL_SHADER","qualname":"::pso::PipelineStage::HULL_SHADER","value":"PipelineStage","parent":{"krate":0,"index":9898},"children":[],"decl_id":null,"docs":" Hull shader execution.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9904},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":161960,"byte_end":161973,"line_start":59,"line_end":59,"column_start":15,"column_end":28},"name":"DOMAIN_SHADER","qualname":"::pso::PipelineStage::DOMAIN_SHADER","value":"PipelineStage","parent":{"krate":0,"index":9898},"children":[],"decl_id":null,"docs":" Domain shader execution.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9905},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":162035,"byte_end":162050,"line_start":61,"line_end":61,"column_start":15,"column_end":30},"name":"GEOMETRY_SHADER","qualname":"::pso::PipelineStage::GEOMETRY_SHADER","value":"PipelineStage","parent":{"krate":0,"index":9898},"children":[],"decl_id":null,"docs":" Geometry shader execution.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9906},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":162112,"byte_end":162127,"line_start":63,"line_end":63,"column_start":15,"column_end":30},"name":"FRAGMENT_SHADER","qualname":"::pso::PipelineStage::FRAGMENT_SHADER","value":"PipelineStage","parent":{"krate":0,"index":9898},"children":[],"decl_id":null,"docs":" Fragment shader execution.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9907},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":162201,"byte_end":162221,"line_start":65,"line_end":65,"column_start":15,"column_end":35},"name":"EARLY_FRAGMENT_TESTS","qualname":"::pso::PipelineStage::EARLY_FRAGMENT_TESTS","value":"PipelineStage","parent":{"krate":0,"index":9898},"children":[],"decl_id":null,"docs":" Stage of early depth and stencil test.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9908},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":162295,"byte_end":162314,"line_start":67,"line_end":67,"column_start":15,"column_end":34},"name":"LATE_FRAGMENT_TESTS","qualname":"::pso::PipelineStage::LATE_FRAGMENT_TESTS","value":"PipelineStage","parent":{"krate":0,"index":9898},"children":[],"decl_id":null,"docs":" Stage of late depth and stencil test.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9909},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":162390,"byte_end":162413,"line_start":69,"line_end":69,"column_start":15,"column_end":38},"name":"COLOR_ATTACHMENT_OUTPUT","qualname":"::pso::PipelineStage::COLOR_ATTACHMENT_OUTPUT","value":"PipelineStage","parent":{"krate":0,"index":9898},"children":[],"decl_id":null,"docs":" Stage of final color value calculation.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9910},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":162475,"byte_end":162489,"line_start":71,"line_end":71,"column_start":15,"column_end":29},"name":"COMPUTE_SHADER","qualname":"::pso::PipelineStage::COMPUTE_SHADER","value":"PipelineStage","parent":{"krate":0,"index":9898},"children":[],"decl_id":null,"docs":" Compute shader execution,\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9911},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":162558,"byte_end":162566,"line_start":73,"line_end":73,"column_start":15,"column_end":23},"name":"TRANSFER","qualname":"::pso::PipelineStage::TRANSFER","value":"PipelineStage","parent":{"krate":0,"index":9898},"children":[],"decl_id":null,"docs":" Copy/Transfer command execution.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9912},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":162629,"byte_end":162643,"line_start":75,"line_end":75,"column_start":15,"column_end":29},"name":"BOTTOM_OF_PIPE","qualname":"::pso::PipelineStage::BOTTOM_OF_PIPE","value":"PipelineStage","parent":{"krate":0,"index":9898},"children":[],"decl_id":null,"docs":" End of the command queue.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9913},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":162749,"byte_end":162753,"line_start":78,"line_end":78,"column_start":15,"column_end":19},"name":"HOST","qualname":"::pso::PipelineStage::HOST","value":"PipelineStage","parent":{"krate":0,"index":9898},"children":[],"decl_id":null,"docs":" Read/Write access from host.\n (Not a real pipeline stage)\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9914},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":162809,"byte_end":162820,"line_start":80,"line_end":80,"column_start":15,"column_end":26},"name":"TASK_SHADER","qualname":"::pso::PipelineStage::TASK_SHADER","value":"PipelineStage","parent":{"krate":0,"index":9898},"children":[],"decl_id":null,"docs":" Task shader stage.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":9915},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":162877,"byte_end":162888,"line_start":82,"line_end":82,"column_start":15,"column_end":26},"name":"MESH_SHADER","qualname":"::pso::PipelineStage::MESH_SHADER","value":"PipelineStage","parent":{"krate":0,"index":9898},"children":[],"decl_id":null,"docs":" Mesh shader stage.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10014},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":163084,"byte_end":163100,"line_start":90,"line_end":90,"column_start":16,"column_end":32},"name":"ShaderStageFlags","qualname":"::pso::ShaderStageFlags","value":"ShaderStageFlags {  }","parent":null,"children":[{"krate":0,"index":10015}],"decl_id":null,"docs":" Combination of different shader pipeline stages.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10056},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":163155,"byte_end":163161,"line_start":92,"line_end":92,"column_start":15,"column_end":21},"name":"VERTEX","qualname":"::pso::ShaderStageFlags::VERTEX","value":"ShaderStageFlags","parent":{"krate":0,"index":10055},"children":[],"decl_id":null,"docs":" Vertex shader stage.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10057},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":163231,"byte_end":163235,"line_start":94,"line_end":94,"column_start":15,"column_end":19},"name":"HULL","qualname":"::pso::ShaderStageFlags::HULL","value":"ShaderStageFlags","parent":{"krate":0,"index":10055},"children":[],"decl_id":null,"docs":" Hull (tessellation) shader stage.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10058},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":163309,"byte_end":163315,"line_start":96,"line_end":96,"column_start":15,"column_end":21},"name":"DOMAIN","qualname":"::pso::ShaderStageFlags::DOMAIN","value":"ShaderStageFlags","parent":{"krate":0,"index":10055},"children":[],"decl_id":null,"docs":" Domain (tessellation) shader stage.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10059},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":163374,"byte_end":163382,"line_start":98,"line_end":98,"column_start":15,"column_end":23},"name":"GEOMETRY","qualname":"::pso::ShaderStageFlags::GEOMETRY","value":"ShaderStageFlags","parent":{"krate":0,"index":10055},"children":[],"decl_id":null,"docs":" Geometry shader stage.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10060},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":163439,"byte_end":163447,"line_start":100,"line_end":100,"column_start":15,"column_end":23},"name":"FRAGMENT","qualname":"::pso::ShaderStageFlags::FRAGMENT","value":"ShaderStageFlags","parent":{"krate":0,"index":10055},"children":[],"decl_id":null,"docs":" Fragment shader stage.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10061},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":163504,"byte_end":163511,"line_start":102,"line_end":102,"column_start":15,"column_end":22},"name":"COMPUTE","qualname":"::pso::ShaderStageFlags::COMPUTE","value":"ShaderStageFlags","parent":{"krate":0,"index":10055},"children":[],"decl_id":null,"docs":" Compute shader stage.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10062},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":163566,"byte_end":163570,"line_start":104,"line_end":104,"column_start":15,"column_end":19},"name":"TASK","qualname":"::pso::ShaderStageFlags::TASK","value":"ShaderStageFlags","parent":{"krate":0,"index":10055},"children":[],"decl_id":null,"docs":" Task shader stage.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10063},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":163628,"byte_end":163632,"line_start":106,"line_end":106,"column_start":15,"column_end":19},"name":"MESH","qualname":"::pso::ShaderStageFlags::MESH","value":"ShaderStageFlags","parent":{"krate":0,"index":10055},"children":[],"decl_id":null,"docs":" Mesh shader stage.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10064},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":163708,"byte_end":163716,"line_start":108,"line_end":108,"column_start":15,"column_end":23},"name":"GRAPHICS","qualname":"::pso::ShaderStageFlags::GRAPHICS","value":"ShaderStageFlags","parent":{"krate":0,"index":10055},"children":[],"decl_id":null,"docs":" All graphics pipeline shader stages.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10065},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":163894,"byte_end":163897,"line_start":111,"line_end":111,"column_start":15,"column_end":18},"name":"ALL","qualname":"::pso::ShaderStageFlags::ALL","value":"ShaderStageFlags","parent":{"krate":0,"index":10055},"children":[],"decl_id":null,"docs":" All shader stages (matches Vulkan).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10141},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":163979,"byte_end":163989,"line_start":117,"line_end":117,"column_start":12,"column_end":22},"name":"EntryPoint","qualname":"::pso::EntryPoint","value":"EntryPoint { entry, module, specialization }","parent":null,"children":[{"krate":0,"index":10144},{"krate":0,"index":10145},{"krate":0,"index":10146}],"decl_id":null,"docs":" Shader entry point.\n","sig":null,"attributes":[{"value":"/ Shader entry point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":163927,"byte_end":163950,"line_start":115,"line_end":115,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":10144},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":164042,"byte_end":164047,"line_start":119,"line_end":119,"column_start":9,"column_end":14},"name":"entry","qualname":"::pso::EntryPoint::entry","value":"&'a str","parent":{"krate":0,"index":10141},"children":[],"decl_id":null,"docs":" Entry point name.\n","sig":null,"attributes":[{"value":"/ Entry point name.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":164012,"byte_end":164033,"line_start":118,"line_end":118,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":10145},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":164134,"byte_end":164140,"line_start":121,"line_end":121,"column_start":9,"column_end":15},"name":"module","qualname":"::pso::EntryPoint::module","value":"&'a <B as Backend>::ShaderModule","parent":{"krate":0,"index":10141},"children":[],"decl_id":null,"docs":" Reference to the shader module containing this entry point.\n","sig":null,"attributes":[{"value":"/ Reference to the shader module containing this entry point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":164062,"byte_end":164125,"line_start":120,"line_end":120,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":10146},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":164243,"byte_end":164257,"line_start":123,"line_end":123,"column_start":9,"column_end":23},"name":"specialization","qualname":"::pso::EntryPoint::specialization","value":"pso::specialization::Specialization<'a>","parent":{"krate":0,"index":10141},"children":[],"decl_id":null,"docs":" Specialization constants to be used when creating the pipeline.\n","sig":null,"attributes":[{"value":"/ Specialization constants to be used when creating the pipeline.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":164167,"byte_end":164234,"line_start":122,"line_end":122,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":10151},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":164650,"byte_end":164671,"line_start":139,"line_end":139,"column_start":16,"column_end":37},"name":"PipelineCreationFlags","qualname":"::pso::PipelineCreationFlags","value":"PipelineCreationFlags {  }","parent":null,"children":[{"krate":0,"index":10152}],"decl_id":null,"docs":" Pipeline creation flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10185},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":164792,"byte_end":164812,"line_start":143,"line_end":143,"column_start":15,"column_end":35},"name":"DISABLE_OPTIMIZATION","qualname":"::pso::PipelineCreationFlags::DISABLE_OPTIMIZATION","value":"PipelineCreationFlags","parent":{"krate":0,"index":10184},"children":[],"decl_id":null,"docs":" Disable pipeline optimizations.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10186},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":164969,"byte_end":164986,"line_start":147,"line_end":147,"column_start":15,"column_end":32},"name":"ALLOW_DERIVATIVES","qualname":"::pso::PipelineCreationFlags::ALLOW_DERIVATIVES","value":"PipelineCreationFlags","parent":{"krate":0,"index":10184},"children":[],"decl_id":null,"docs":" Allow derivatives (children) of the pipeline.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10241},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":165348,"byte_end":165356,"line_start":158,"line_end":158,"column_start":5,"column_end":13},"name":"Pipeline","qualname":"::pso::BasePipeline::Pipeline","value":"BasePipeline::Pipeline(&'a P)","parent":{"krate":0,"index":10238},"children":[],"decl_id":null,"docs":" Referencing an existing pipeline as parent.\n","sig":null,"attributes":[{"value":"/ Referencing an existing pipeline as parent.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":165296,"byte_end":165343,"line_start":157,"line_end":157,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10244},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":165506,"byte_end":165511,"line_start":162,"line_end":162,"column_start":5,"column_end":10},"name":"Index","qualname":"::pso::BasePipeline::Index","value":"BasePipeline::Index(usize)","parent":{"krate":0,"index":10238},"children":[],"decl_id":null,"docs":" A pipeline in the same create pipelines call.","sig":null,"attributes":[{"value":"/ A pipeline in the same create pipelines call.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":165369,"byte_end":165418,"line_start":159,"line_end":159,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":165423,"byte_end":165426,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The index of the parent must be lower than the index of the child.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":165431,"byte_end":165501,"line_start":161,"line_end":161,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10247},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":165559,"byte_end":165563,"line_start":164,"line_end":164,"column_start":5,"column_end":9},"name":"None","qualname":"::pso::BasePipeline::None","value":"BasePipeline::None","parent":{"krate":0,"index":10238},"children":[],"decl_id":null,"docs":" No parent pipeline exists.\n","sig":null,"attributes":[{"value":"/ No parent pipeline exists.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":165524,"byte_end":165554,"line_start":163,"line_end":163,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":10238},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":165266,"byte_end":165278,"line_start":156,"line_end":156,"column_start":10,"column_end":22},"name":"BasePipeline","qualname":"::pso::BasePipeline","value":"pub enum BasePipeline<'a, P: 'a> { Pipeline(&'a P), Index(usize), None, }","parent":null,"children":[{"krate":0,"index":10241},{"krate":0,"index":10244},{"krate":0,"index":10247}],"decl_id":null,"docs":" A reference to a parent pipeline.  The assumption is that\n a parent and derivative/child pipeline have most settings\n in common, and one may be switched for another more quickly\n than entirely unrelated pipelines would be.\n","sig":null,"attributes":[{"value":"/ A reference to a parent pipeline.  The assumption is that","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":165004,"byte_end":165065,"line_start":151,"line_end":151,"column_start":1,"column_end":62}},{"value":"/ a parent and derivative/child pipeline have most settings","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":165066,"byte_end":165127,"line_start":152,"line_end":152,"column_start":1,"column_end":62}},{"value":"/ in common, and one may be switched for another more quickly","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":165128,"byte_end":165191,"line_start":153,"line_end":153,"column_start":1,"column_end":64}},{"value":"/ than entirely unrelated pipelines would be.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":165192,"byte_end":165239,"line_start":154,"line_end":154,"column_start":1,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10255},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":165819,"byte_end":165825,"line_start":172,"line_end":172,"column_start":5,"column_end":11},"name":"Static","qualname":"::pso::State::Static","value":"State::Static(T)","parent":{"krate":0,"index":10253},"children":[],"decl_id":null,"docs":" Static state that cannot be altered.\n","sig":null,"attributes":[{"value":"/ Static state that cannot be altered.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":165774,"byte_end":165814,"line_start":171,"line_end":171,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10258},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":165886,"byte_end":165893,"line_start":174,"line_end":174,"column_start":5,"column_end":12},"name":"Dynamic","qualname":"::pso::State::Dynamic","value":"State::Dynamic","parent":{"krate":0,"index":10253},"children":[],"decl_id":null,"docs":" Dynamic state set through a command buffer.\n","sig":null,"attributes":[{"value":"/ Dynamic state set through a command buffer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":165834,"byte_end":165881,"line_start":173,"line_end":173,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":10253},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":165759,"byte_end":165764,"line_start":170,"line_end":170,"column_start":10,"column_end":15},"name":"State","qualname":"::pso::State","value":"pub enum State<T> { Static(T), Dynamic, }","parent":null,"children":[{"krate":0,"index":10255},{"krate":0,"index":10258}],"decl_id":null,"docs":" Pipeline state which may be static or dynamic.\n","sig":null,"attributes":[{"value":"/ Pipeline state which may be static or dynamic.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":165568,"byte_end":165618,"line_start":167,"line_end":167,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":165975,"byte_end":165984,"line_start":179,"line_end":179,"column_start":12,"column_end":21},"name":"static_or","qualname":"<State<T>>::static_or","value":"pub fn static_or(Self, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the static value or a default.\n","sig":null,"attributes":[{"value":"/ Returns the static value or a default.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":165921,"byte_end":165963,"line_start":178,"line_end":178,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":166170,"byte_end":166179,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"is_static","qualname":"<State<T>>::is_static","value":"pub fn is_static(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the state is static.\n","sig":null,"attributes":[{"value":"/ Whether the state is static.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":166126,"byte_end":166158,"line_start":186,"line_end":186,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":166358,"byte_end":166368,"line_start":195,"line_end":195,"column_start":12,"column_end":22},"name":"is_dynamic","qualname":"<State<T>>::is_dynamic","value":"pub fn is_dynamic(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the state is dynamic.\n","sig":null,"attributes":[{"value":"/ Whether the state is dynamic.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":166313,"byte_end":166346,"line_start":194,"line_end":194,"column_start":5,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":877},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"query","qualname":"::query","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","parent":null,"children":[{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":882},{"krate":0,"index":885},{"krate":0,"index":10289},{"krate":0,"index":10290},{"krate":0,"index":10292},{"krate":0,"index":10294},{"krate":0,"index":10295},{"krate":0,"index":10298},{"krate":0,"index":10303},{"krate":0,"index":10305},{"krate":0,"index":10313},{"krate":0,"index":10318},{"krate":0,"index":10322},{"krate":0,"index":10324},{"krate":0,"index":10325},{"krate":0,"index":10326},{"krate":0,"index":10329},{"krate":0,"index":10330},{"krate":0,"index":10332},{"krate":0,"index":10334},{"krate":0,"index":10336},{"krate":0,"index":10338},{"krate":0,"index":10341},{"krate":0,"index":10346},{"krate":0,"index":10348},{"krate":0,"index":10350},{"krate":0,"index":10352},{"krate":0,"index":10354},{"krate":0,"index":10361},{"krate":0,"index":10364},{"krate":0,"index":10366},{"krate":0,"index":10369},{"krate":0,"index":10371},{"krate":0,"index":10374},{"krate":0,"index":10376},{"krate":0,"index":10379},{"krate":0,"index":10381},{"krate":0,"index":10384},{"krate":0,"index":10387},{"krate":0,"index":10404},{"krate":0,"index":10406},{"krate":0,"index":10407},{"krate":0,"index":10408},{"krate":0,"index":10411},{"krate":0,"index":10412},{"krate":0,"index":10414},{"krate":0,"index":10416},{"krate":0,"index":10418},{"krate":0,"index":10420},{"krate":0,"index":10423},{"krate":0,"index":10431},{"krate":0,"index":10433},{"krate":0,"index":10435},{"krate":0,"index":10437},{"krate":0,"index":10439},{"krate":0,"index":10449},{"krate":0,"index":10452},{"krate":0,"index":10454},{"krate":0,"index":10457},{"krate":0,"index":10459},{"krate":0,"index":10462},{"krate":0,"index":10464},{"krate":0,"index":10467},{"krate":0,"index":10469},{"krate":0,"index":10472},{"krate":0,"index":10475},{"krate":0,"index":10501},{"krate":0,"index":10509},{"krate":0,"index":10510},{"krate":0,"index":10512},{"krate":0,"index":10514},{"krate":0,"index":10517},{"krate":0,"index":10518},{"krate":0,"index":10520},{"krate":0,"index":10521},{"krate":0,"index":10524},{"krate":0,"index":10526},{"krate":0,"index":10527},{"krate":0,"index":10528},{"krate":0,"index":10531},{"krate":0,"index":10532},{"krate":0,"index":10534},{"krate":0,"index":10536},{"krate":0,"index":10538},{"krate":0,"index":10540},{"krate":0,"index":10543},{"krate":0,"index":10558},{"krate":0,"index":10560},{"krate":0,"index":10562},{"krate":0,"index":10564},{"krate":0,"index":10566},{"krate":0,"index":10583},{"krate":0,"index":10586},{"krate":0,"index":10588},{"krate":0,"index":10591},{"krate":0,"index":10593},{"krate":0,"index":10596},{"krate":0,"index":10598},{"krate":0,"index":10601},{"krate":0,"index":10603},{"krate":0,"index":10606},{"krate":0,"index":10609}],"decl_id":null,"docs":" Commands that can be used to record statistics or other useful values\n as the command buffer is running.","sig":null,"attributes":[{"value":"/ Commands that can be used to record statistics or other useful values","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":210882,"byte_end":210955,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"/ as the command buffer is running.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":210956,"byte_end":210993,"line_start":2,"line_end":2,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":210994,"byte_end":210997,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ They are often intended for profiling or other introspection,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":210998,"byte_end":211063,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/ providing a mechanism for the command buffer to record data about its operation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":211064,"byte_end":211147,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/ as it is running.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":211148,"byte_end":211169,"line_start":6,"line_end":6,"column_start":1,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":885},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":211248,"byte_end":211250,"line_start":11,"line_end":11,"column_start":10,"column_end":12},"name":"Id","qualname":"::query::Id","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" A query identifier.\n","sig":null,"attributes":[{"value":"/ A query identifier.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":211215,"byte_end":211238,"line_start":10,"line_end":10,"column_start":1,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10307},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":211438,"byte_end":211449,"line_start":18,"line_end":18,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::query::CreationError::OutOfMemory","value":"CreationError::OutOfMemory(OutOfMemory)","parent":{"krate":0,"index":10289},"children":[],"decl_id":null,"docs":" Out of either host or device memory.\n","sig":null,"attributes":[{"value":"/ Out of either host or device memory.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":211367,"byte_end":211407,"line_start":16,"line_end":16,"column_start":5,"column_end":45}},{"value":"error(transparent)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":211412,"byte_end":211433,"line_start":17,"line_end":17,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10310},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":211548,"byte_end":211559,"line_start":21,"line_end":21,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::query::CreationError::Unsupported","value":"CreationError::Unsupported(Type)","parent":{"krate":0,"index":10289},"children":[],"decl_id":null,"docs":" Query type unsupported.\n","sig":null,"attributes":[{"value":"/ Query type unsupported.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":211476,"byte_end":211503,"line_start":19,"line_end":19,"column_start":5,"column_end":32}},{"value":"error(\"Unsupported type: {0:?}\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":211508,"byte_end":211543,"line_start":20,"line_end":20,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":10289},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":211347,"byte_end":211360,"line_start":15,"line_end":15,"column_start":10,"column_end":23},"name":"CreationError","qualname":"::query::CreationError","value":"pub enum CreationError { OutOfMemory(OutOfMemory), Unsupported(Type), }","parent":null,"children":[{"krate":0,"index":10307},{"krate":0,"index":10310}],"decl_id":null,"docs":" Query creation error.\n","sig":null,"attributes":[{"value":"/ Query creation error.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":211259,"byte_end":211284,"line_start":13,"line_end":13,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":10313},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":211764,"byte_end":211769,"line_start":27,"line_end":27,"column_start":12,"column_end":17},"name":"Query","qualname":"::query::Query","value":"Query { pool, id }","parent":null,"children":[{"krate":0,"index":10316},{"krate":0,"index":10317}],"decl_id":null,"docs":" A `Query` object has a particular identifier and saves its results to a given `QueryPool`.\n It is passed as a parameter to the command buffer's query methods.\n","sig":null,"attributes":[{"value":"/ A `Query` object has a particular identifier and saves its results to a given `QueryPool`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":211570,"byte_end":211664,"line_start":24,"line_end":24,"column_start":1,"column_end":95}},{"value":"/ It is passed as a parameter to the command buffer's query methods.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":211665,"byte_end":211735,"line_start":25,"line_end":25,"column_start":1,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":10316},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":211804,"byte_end":211808,"line_start":29,"line_end":29,"column_start":9,"column_end":13},"name":"pool","qualname":"::query::Query::pool","value":"&'a <B as Backend>::QueryPool","parent":{"krate":0,"index":10313},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":211792,"byte_end":211795,"line_start":28,"line_end":28,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":10317},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":211844,"byte_end":211846,"line_start":31,"line_end":31,"column_start":9,"column_end":11},"name":"id","qualname":"::query::Query::id","value":"u32","parent":{"krate":0,"index":10313},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":211832,"byte_end":211835,"line_start":30,"line_end":30,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10322},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":211977,"byte_end":211989,"line_start":37,"line_end":37,"column_start":16,"column_end":28},"name":"ControlFlags","qualname":"::query::ControlFlags","value":"ControlFlags {  }","parent":null,"children":[{"krate":0,"index":10323}],"decl_id":null,"docs":" Query control flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10355},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":212158,"byte_end":212165,"line_start":41,"line_end":41,"column_start":15,"column_end":22},"name":"PRECISE","qualname":"::query::ControlFlags::PRECISE","value":"ControlFlags","parent":{"krate":0,"index":10354},"children":[],"decl_id":null,"docs":" Occlusion queries **must** return the exact sampler number.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10404},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":212304,"byte_end":212315,"line_start":48,"line_end":48,"column_start":16,"column_end":27},"name":"ResultFlags","qualname":"::query::ResultFlags","value":"ResultFlags {  }","parent":null,"children":[{"krate":0,"index":10405}],"decl_id":null,"docs":" Query result flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10440},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":212420,"byte_end":212427,"line_start":50,"line_end":50,"column_start":15,"column_end":22},"name":"BITS_64","qualname":"::query::ResultFlags::BITS_64","value":"ResultFlags","parent":{"krate":0,"index":10439},"children":[],"decl_id":null,"docs":" Results will be written as an array of 64-bit unsigned integer values.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10441},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":212543,"byte_end":212547,"line_start":52,"line_end":52,"column_start":15,"column_end":19},"name":"WAIT","qualname":"::query::ResultFlags::WAIT","value":"ResultFlags","parent":{"krate":0,"index":10439},"children":[],"decl_id":null,"docs":" Wait for each query’s status to become available before retrieving its results.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10442},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":212626,"byte_end":212643,"line_start":54,"line_end":54,"column_start":15,"column_end":32},"name":"WITH_AVAILABILITY","qualname":"::query::ResultFlags::WITH_AVAILABILITY","value":"ResultFlags","parent":{"krate":0,"index":10439},"children":[],"decl_id":null,"docs":" Availability status accompanies the results.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10443},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":212718,"byte_end":212725,"line_start":56,"line_end":56,"column_start":15,"column_end":22},"name":"PARTIAL","qualname":"::query::ResultFlags::PARTIAL","value":"ResultFlags","parent":{"krate":0,"index":10439},"children":[],"decl_id":null,"docs":" Returning partial results is acceptable.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10502},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":212966,"byte_end":212975,"line_start":65,"line_end":65,"column_start":5,"column_end":14},"name":"Occlusion","qualname":"::query::Type::Occlusion","value":"Type::Occlusion","parent":{"krate":0,"index":10501},"children":[],"decl_id":null,"docs":" Occlusion query. Count the number of drawn samples between\n the start and end of the query command.\n","sig":null,"attributes":[{"value":"/ Occlusion query. Count the number of drawn samples between","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":212851,"byte_end":212913,"line_start":63,"line_end":63,"column_start":5,"column_end":67}},{"value":"/ the start and end of the query command.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":212918,"byte_end":212961,"line_start":64,"line_end":64,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10504},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":213146,"byte_end":213164,"line_start":69,"line_end":69,"column_start":5,"column_end":23},"name":"PipelineStatistics","qualname":"::query::Type::PipelineStatistics","value":"Type::PipelineStatistics(PipelineStatistic)","parent":{"krate":0,"index":10501},"children":[],"decl_id":null,"docs":" Pipeline statistic query. Counts the number of pipeline stage\n invocations of the given types between the start and end of\n the query command.\n","sig":null,"attributes":[{"value":"/ Pipeline statistic query. Counts the number of pipeline stage","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":212981,"byte_end":213046,"line_start":66,"line_end":66,"column_start":5,"column_end":70}},{"value":"/ invocations of the given types between the start and end of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":213051,"byte_end":213114,"line_start":67,"line_end":67,"column_start":5,"column_end":68}},{"value":"/ the query command.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":213119,"byte_end":213141,"line_start":68,"line_end":68,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10507},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":213299,"byte_end":213308,"line_start":72,"line_end":72,"column_start":5,"column_end":14},"name":"Timestamp","qualname":"::query::Type::Timestamp","value":"Type::Timestamp","parent":{"krate":0,"index":10501},"children":[],"decl_id":null,"docs":" Timestamp query. Timestamps can be recorded to the\n query pool by calling `write_timestamp()`.\n","sig":null,"attributes":[{"value":"/ Timestamp query. Timestamps can be recorded to the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":213189,"byte_end":213243,"line_start":70,"line_end":70,"column_start":5,"column_end":59}},{"value":"/ query pool by calling `write_timestamp()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":213248,"byte_end":213294,"line_start":71,"line_end":71,"column_start":5,"column_end":51}}]},{"kind":"Enum","id":{"krate":0,"index":10501},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":212840,"byte_end":212844,"line_start":62,"line_end":62,"column_start":10,"column_end":14},"name":"Type","qualname":"::query::Type","value":"pub enum Type { Occlusion, PipelineStatistics(PipelineStatistic), Timestamp, }","parent":null,"children":[{"krate":0,"index":10502},{"krate":0,"index":10504},{"krate":0,"index":10507}],"decl_id":null,"docs":" Type of queries in a query pool.\n","sig":null,"attributes":[{"value":"/ Type of queries in a query pool.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":212743,"byte_end":212779,"line_start":60,"line_end":60,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":10524},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":213439,"byte_end":213456,"line_start":78,"line_end":78,"column_start":16,"column_end":33},"name":"PipelineStatistic","qualname":"::query::PipelineStatistic","value":"PipelineStatistic {  }","parent":null,"children":[{"krate":0,"index":10525}],"decl_id":null,"docs":" Pipeline statistic flags\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10567},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":213490,"byte_end":213513,"line_start":80,"line_end":80,"column_start":15,"column_end":38},"name":"INPUT_ASSEMBLY_VERTICES","qualname":"::query::PipelineStatistic::INPUT_ASSEMBLY_VERTICES","value":"PipelineStatistic","parent":{"krate":0,"index":10566},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10568},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":213547,"byte_end":213572,"line_start":82,"line_end":82,"column_start":15,"column_end":40},"name":"INPUT_ASSEMBLY_PRIMITIVES","qualname":"::query::PipelineStatistic::INPUT_ASSEMBLY_PRIMITIVES","value":"PipelineStatistic","parent":{"krate":0,"index":10566},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10569},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":213606,"byte_end":213631,"line_start":84,"line_end":84,"column_start":15,"column_end":40},"name":"VERTEX_SHADER_INVOCATIONS","qualname":"::query::PipelineStatistic::VERTEX_SHADER_INVOCATIONS","value":"PipelineStatistic","parent":{"krate":0,"index":10566},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10570},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":213665,"byte_end":213692,"line_start":86,"line_end":86,"column_start":15,"column_end":42},"name":"GEOMETRY_SHADER_INVOCATIONS","qualname":"::query::PipelineStatistic::GEOMETRY_SHADER_INVOCATIONS","value":"PipelineStatistic","parent":{"krate":0,"index":10566},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10571},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":213726,"byte_end":213752,"line_start":88,"line_end":88,"column_start":15,"column_end":41},"name":"GEOMETRY_SHADER_PRIMITIVES","qualname":"::query::PipelineStatistic::GEOMETRY_SHADER_PRIMITIVES","value":"PipelineStatistic","parent":{"krate":0,"index":10566},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10572},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":213787,"byte_end":213807,"line_start":90,"line_end":90,"column_start":15,"column_end":35},"name":"CLIPPING_INVOCATIONS","qualname":"::query::PipelineStatistic::CLIPPING_INVOCATIONS","value":"PipelineStatistic","parent":{"krate":0,"index":10566},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10573},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":213842,"byte_end":213861,"line_start":92,"line_end":92,"column_start":15,"column_end":34},"name":"CLIPPING_PRIMITIVES","qualname":"::query::PipelineStatistic::CLIPPING_PRIMITIVES","value":"PipelineStatistic","parent":{"krate":0,"index":10566},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10574},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":213896,"byte_end":213923,"line_start":94,"line_end":94,"column_start":15,"column_end":42},"name":"FRAGMENT_SHADER_INVOCATIONS","qualname":"::query::PipelineStatistic::FRAGMENT_SHADER_INVOCATIONS","value":"PipelineStatistic","parent":{"krate":0,"index":10566},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10575},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":213958,"byte_end":213977,"line_start":96,"line_end":96,"column_start":15,"column_end":34},"name":"HULL_SHADER_PATCHES","qualname":"::query::PipelineStatistic::HULL_SHADER_PATCHES","value":"PipelineStatistic","parent":{"krate":0,"index":10566},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10576},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":214013,"byte_end":214038,"line_start":98,"line_end":98,"column_start":15,"column_end":40},"name":"DOMAIN_SHADER_INVOCATIONS","qualname":"::query::PipelineStatistic::DOMAIN_SHADER_INVOCATIONS","value":"PipelineStatistic","parent":{"krate":0,"index":10566},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10577},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/query.rs","byte_start":214074,"byte_end":214100,"line_start":100,"line_end":100,"column_start":15,"column_end":41},"name":"COMPUTE_SHADER_INVOCATIONS","qualname":"::query::PipelineStatistic::COMPUTE_SHADER_INVOCATIONS","value":"PipelineStatistic","parent":{"krate":0,"index":10566},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":886},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"queue","qualname":"::queue","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","parent":null,"children":[{"krate":0,"index":887},{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":914},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":921},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":927},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":944},{"krate":0,"index":10681},{"krate":0,"index":10690},{"krate":0,"index":10692},{"krate":0,"index":10693},{"krate":0,"index":10695},{"krate":0,"index":10696},{"krate":0,"index":10698},{"krate":0,"index":10699},{"krate":0,"index":947},{"krate":0,"index":951},{"krate":0,"index":952}],"decl_id":null,"docs":" Command queues.","sig":null,"attributes":[{"value":"/ Command queues.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":214120,"byte_end":214139,"line_start":1,"line_end":1,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":214140,"byte_end":214143,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Queues are the execution paths of the graphical processing units. These process","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":214144,"byte_end":214227,"line_start":3,"line_end":3,"column_start":1,"column_end":84}},{"value":"/ submitted commands buffers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":214228,"byte_end":214259,"line_start":4,"line_end":4,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":214260,"byte_end":214263,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ There are different types of queues, which can only handle associated command buffers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":214264,"byte_end":214354,"line_start":6,"line_end":6,"column_start":1,"column_end":91}},{"value":"/ `CommandQueue<B, C>` has the capability defined by `C`: graphics, compute and transfer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":214355,"byte_end":214446,"line_start":7,"line_end":7,"column_start":1,"column_end":92}}]},{"kind":"Mod","id":{"krate":0,"index":887},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"family","qualname":"::queue::family","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","parent":null,"children":[{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":892},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":902},{"krate":0,"index":10656},{"krate":0,"index":10659},{"krate":0,"index":10661},{"krate":0,"index":10662},{"krate":0,"index":10664},{"krate":0,"index":10665},{"krate":0,"index":10668},{"krate":0,"index":10669},{"krate":0,"index":10671},{"krate":0,"index":10674},{"krate":0,"index":10678},{"krate":0,"index":906}],"decl_id":null,"docs":" Queue family and groups.\n","sig":null,"attributes":[{"value":"/ Queue family and groups.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":218081,"byte_end":218109,"line_start":1,"line_end":1,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":902},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":218515,"byte_end":218526,"line_start":13,"line_end":13,"column_start":11,"column_end":22},"name":"QueueFamily","qualname":"::queue::family::QueueFamily","value":"QueueFamily: Debug + Any + Send + Sync","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905}],"decl_id":null,"docs":" General information about a queue family, available upon adapter discovery.","sig":null,"attributes":[{"value":"/ General information about a queue family, available upon adapter discovery.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":218186,"byte_end":218265,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":218266,"byte_end":218269,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Note that a backend can expose multiple queue families with the same properties.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":218270,"byte_end":218354,"line_start":9,"line_end":9,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":218355,"byte_end":218358,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Can be obtained from an [adapter][crate::adapter::Adapter] through its","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":218359,"byte_end":218433,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ [`queue_families`][crate::adapter::Adapter::queue_families] field.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":218434,"byte_end":218504,"line_start":12,"line_end":12,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":218599,"byte_end":218609,"line_start":15,"line_end":15,"column_start":8,"column_end":18},"name":"queue_type","qualname":"::queue::family::QueueFamily::queue_type","value":"pub fn queue_type(&Self) -> QueueType","parent":{"krate":0,"index":902},"children":[],"decl_id":null,"docs":" Returns the type of queues.\n","sig":null,"attributes":[{"value":"/ Returns the type of queues.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":218560,"byte_end":218591,"line_start":14,"line_end":14,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":218705,"byte_end":218715,"line_start":17,"line_end":17,"column_start":8,"column_end":18},"name":"max_queues","qualname":"::queue::family::QueueFamily::max_queues","value":"pub fn max_queues(&Self) -> usize","parent":{"krate":0,"index":902},"children":[],"decl_id":null,"docs":" Returns maximum number of queues created from this family.\n","sig":null,"attributes":[{"value":"/ Returns maximum number of queues created from this family.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":218635,"byte_end":218697,"line_start":16,"line_end":16,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":218777,"byte_end":218779,"line_start":19,"line_end":19,"column_start":8,"column_end":10},"name":"id","qualname":"::queue::family::QueueFamily::id","value":"pub fn id(&Self) -> QueueFamilyId","parent":{"krate":0,"index":902},"children":[],"decl_id":null,"docs":" Returns the queue family ID.\n","sig":null,"attributes":[{"value":"/ Returns the queue family ID.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":218737,"byte_end":218769,"line_start":18,"line_end":18,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":10656},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":218989,"byte_end":219002,"line_start":25,"line_end":25,"column_start":12,"column_end":25},"name":"QueueFamilyId","qualname":"::queue::family::QueueFamilyId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Identifier for a queue family of a physical device.\n","sig":null,"attributes":[{"value":"/ Identifier for a queue family of a physical device.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":218808,"byte_end":218863,"line_start":22,"line_end":22,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":10658},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":219003,"byte_end":219012,"line_start":25,"line_end":25,"column_start":26,"column_end":35},"name":"0","qualname":"::queue::family::QueueFamilyId::0","value":"usize","parent":{"krate":0,"index":10656},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10674},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":219130,"byte_end":219140,"line_start":31,"line_end":31,"column_start":12,"column_end":22},"name":"QueueGroup","qualname":"::queue::family::QueueGroup","value":"QueueGroup { family, queues }","parent":null,"children":[{"krate":0,"index":10676},{"krate":0,"index":10677}],"decl_id":null,"docs":" Bare-metal queue group.","sig":null,"attributes":[{"value":"/ Bare-metal queue group.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":219016,"byte_end":219043,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":219044,"byte_end":219047,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Denotes all queues created from one queue family.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":219048,"byte_end":219101,"line_start":29,"line_end":29,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":10676},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":219214,"byte_end":219220,"line_start":33,"line_end":33,"column_start":9,"column_end":15},"name":"family","qualname":"::queue::family::QueueGroup::family","value":"queue::family::QueueFamilyId","parent":{"krate":0,"index":10674},"children":[],"decl_id":null,"docs":" Family index for the queues in this group.\n","sig":null,"attributes":[{"value":"/ Family index for the queues in this group.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":219159,"byte_end":219205,"line_start":32,"line_end":32,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":10677},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":219269,"byte_end":219275,"line_start":35,"line_end":35,"column_start":9,"column_end":15},"name":"queues","qualname":"::queue::family::QueueGroup::queues","value":"std::vec::Vec<<B as Backend>::CommandQueue>","parent":{"krate":0,"index":10674},"children":[],"decl_id":null,"docs":" List of queues.\n","sig":null,"attributes":[{"value":"/ List of queues.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":219241,"byte_end":219260,"line_start":34,"line_end":34,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":219406,"byte_end":219409,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<QueueGroup<B>>::new","value":"pub fn new(QueueFamilyId) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new, empty queue group for a queue family.\n","sig":null,"attributes":[{"value":"/ Create a new, empty queue group for a queue family.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":219339,"byte_end":219394,"line_start":39,"line_end":39,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":219656,"byte_end":219665,"line_start":50,"line_end":50,"column_start":12,"column_end":21},"name":"add_queue","qualname":"<QueueGroup<B>>::add_queue","value":"pub fn add_queue(&mut Self, B::CommandQueue)","parent":null,"children":[],"decl_id":null,"docs":" Add a command queue to the group.","sig":null,"attributes":[{"value":"/ Add a command queue to the group.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":219537,"byte_end":219574,"line_start":47,"line_end":47,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":219579,"byte_end":219582,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ The queue needs to be created from this queue family.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":219587,"byte_end":219644,"line_start":49,"line_end":49,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10682},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":214915,"byte_end":214922,"line_start":26,"line_end":26,"column_start":5,"column_end":12},"name":"General","qualname":"::queue::QueueType::General","value":"QueueType::General","parent":{"krate":0,"index":10681},"children":[],"decl_id":null,"docs":" Supports all operations.\n","sig":null,"attributes":[{"value":"/ Supports all operations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":214882,"byte_end":214910,"line_start":25,"line_end":25,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10684},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":214984,"byte_end":214992,"line_start":28,"line_end":28,"column_start":5,"column_end":13},"name":"Graphics","qualname":"::queue::QueueType::Graphics","value":"QueueType::Graphics","parent":{"krate":0,"index":10681},"children":[],"decl_id":null,"docs":" Only supports graphics and transfer operations.\n","sig":null,"attributes":[{"value":"/ Only supports graphics and transfer operations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":214928,"byte_end":214979,"line_start":27,"line_end":27,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10686},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":215053,"byte_end":215060,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"name":"Compute","qualname":"::queue::QueueType::Compute","value":"QueueType::Compute","parent":{"krate":0,"index":10681},"children":[],"decl_id":null,"docs":" Only supports compute and transfer operations.\n","sig":null,"attributes":[{"value":"/ Only supports compute and transfer operations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":214998,"byte_end":215048,"line_start":29,"line_end":29,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10688},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":215109,"byte_end":215117,"line_start":32,"line_end":32,"column_start":5,"column_end":13},"name":"Transfer","qualname":"::queue::QueueType::Transfer","value":"QueueType::Transfer","parent":{"krate":0,"index":10681},"children":[],"decl_id":null,"docs":" Only supports transfer operations.\n","sig":null,"attributes":[{"value":"/ Only supports transfer operations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":215066,"byte_end":215104,"line_start":31,"line_end":31,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":10681},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":214866,"byte_end":214875,"line_start":24,"line_end":24,"column_start":10,"column_end":19},"name":"QueueType","qualname":"::queue::QueueType","value":"pub enum QueueType { General, Graphics, Compute, Transfer, }","parent":null,"children":[{"krate":0,"index":10682},{"krate":0,"index":10684},{"krate":0,"index":10686},{"krate":0,"index":10688}],"decl_id":null,"docs":" The type of the queue, an enum encompassing `queue::Capability`\n","sig":null,"attributes":[{"value":"/ The type of the queue, an enum encompassing `queue::Capability`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":214681,"byte_end":214748,"line_start":21,"line_end":21,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":215214,"byte_end":215231,"line_start":37,"line_end":37,"column_start":12,"column_end":29},"name":"supports_graphics","qualname":"<QueueType>::supports_graphics","value":"pub fn supports_graphics(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the queue supports graphics operations.\n","sig":null,"attributes":[{"value":"/ Returns true if the queue supports graphics operations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":215143,"byte_end":215202,"line_start":36,"line_end":36,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":215486,"byte_end":215502,"line_start":44,"line_end":44,"column_start":12,"column_end":28},"name":"supports_compute","qualname":"<QueueType>::supports_compute","value":"pub fn supports_compute(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the queue supports compute operations.\n","sig":null,"attributes":[{"value":"/ Returns true if the queue supports compute operations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":215416,"byte_end":215474,"line_start":43,"line_end":43,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":215758,"byte_end":215775,"line_start":51,"line_end":51,"column_start":12,"column_end":29},"name":"supports_transfer","qualname":"<QueueType>::supports_transfer","value":"pub fn supports_transfer(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the queue supports transfer operations.\n","sig":null,"attributes":[{"value":"/ Returns true if the queue supports transfer operations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":215687,"byte_end":215746,"line_start":50,"line_end":50,"column_start":5,"column_end":64}}]},{"kind":"Type","id":{"krate":0,"index":951},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":215939,"byte_end":215952,"line_start":58,"line_end":58,"column_start":10,"column_end":23},"name":"QueuePriority","qualname":"::queue::QueuePriority","value":"f32","parent":null,"children":[],"decl_id":null,"docs":" Scheduling hint for devices about the priority of a queue.  Values range from `0.0` (low) to\n `1.0` (high).\n","sig":null,"attributes":[{"value":"/ Scheduling hint for devices about the priority of a queue.  Values range from `0.0` (low) to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":215815,"byte_end":215911,"line_start":56,"line_end":56,"column_start":1,"column_end":97}},{"value":"/ `1.0` (high).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":215912,"byte_end":215929,"line_start":57,"line_end":57,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":952},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":216270,"byte_end":216282,"line_start":67,"line_end":67,"column_start":11,"column_end":23},"name":"CommandQueue","qualname":"::queue::CommandQueue","value":"CommandQueue<B: Backend>: fmt::Debug + Any + Send + Sync","parent":null,"children":[{"krate":0,"index":954},{"krate":0,"index":959},{"krate":0,"index":960}],"decl_id":null,"docs":" Abstraction for an internal GPU execution engine.","sig":null,"attributes":[{"value":"/ Abstraction for an internal GPU execution engine.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":215961,"byte_end":216014,"line_start":60,"line_end":60,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":216015,"byte_end":216018,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ Commands are executed on the the device by submitting","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":216019,"byte_end":216076,"line_start":62,"line_end":62,"column_start":1,"column_end":58}},{"value":"/ [command buffers][crate::command::CommandBuffer].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":216077,"byte_end":216130,"line_start":63,"line_end":63,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":216131,"byte_end":216134,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Queues can also be used for presenting to a surface","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":216135,"byte_end":216190,"line_start":65,"line_end":65,"column_start":1,"column_end":56}},{"value":"/ (that is, flip the front buffer with the next one in the chain).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":216191,"byte_end":216259,"line_start":66,"line_end":66,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":217098,"byte_end":217104,"line_start":85,"line_end":85,"column_start":15,"column_end":21},"name":"submit","qualname":"::queue::CommandQueue::submit","value":"pub unsafe fn submit<'a, Ic, Iw,\n                     Is>(&mut Self, Ic, Iw, Is, Option<&mut B::Fence>) where\nIc: Iterator<Item = &'a B::CommandBuffer>, Iw: Iterator<Item =\n(&'a B::Semaphore, pso::PipelineStage)>, Is: Iterator<Item = &'a B::Semaphore>","parent":{"krate":0,"index":952},"children":[],"decl_id":null,"docs":" Submit command buffers to queue for execution.","sig":null,"attributes":[{"value":"/ Submit command buffers to queue for execution.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":216333,"byte_end":216383,"line_start":68,"line_end":68,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":216388,"byte_end":216391,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":216396,"byte_end":216411,"line_start":70,"line_end":70,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":216416,"byte_end":216419,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ * `command_buffers` - command buffers to submit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":216424,"byte_end":216476,"line_start":72,"line_end":72,"column_start":5,"column_end":57}},{"value":"/ * `wait_semaphores` - semaphores to wait being signalled before submission.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":216481,"byte_end":216560,"line_start":73,"line_end":73,"column_start":5,"column_end":84}},{"value":"/ * `signal_semaphores` - semaphores to signal after all command buffers","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":216565,"byte_end":216639,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/   in the submission have finished execution.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":216644,"byte_end":216692,"line_start":75,"line_end":75,"column_start":5,"column_end":53}},{"value":"/ * `fence` - must be in unsignaled state, and will be signaled after","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":216697,"byte_end":216768,"line_start":76,"line_end":76,"column_start":5,"column_end":76}},{"value":"/   all command buffers in the submission have finished execution.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":216773,"byte_end":216841,"line_start":77,"line_end":77,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":216846,"byte_end":216849,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":216854,"byte_end":216866,"line_start":79,"line_end":79,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":216871,"byte_end":216874,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ It's not checked that the queue can process the submitted command buffers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":216879,"byte_end":216957,"line_start":81,"line_end":81,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":216962,"byte_end":216965,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ For example, trying to submit compute commands to a graphics queue","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":216970,"byte_end":217040,"line_start":83,"line_end":83,"column_start":5,"column_end":75}},{"value":"/ will result in undefined behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":217045,"byte_end":217083,"line_start":84,"line_end":84,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":217747,"byte_end":217754,"line_start":102,"line_end":102,"column_start":15,"column_end":22},"name":"present","qualname":"::queue::CommandQueue::present","value":"pub unsafe fn present(&mut Self, &mut B::Surface,\n                      <B::Surface as PresentationSurface<B>>::SwapchainImage,\n                      Option<&mut B::Semaphore>)\n-> Result<Option<Suboptimal>, PresentError>","parent":{"krate":0,"index":952},"children":[],"decl_id":null,"docs":" Present a swapchain image directly to a surface, after waiting on `wait_semaphore`.","sig":null,"attributes":[{"value":"/ Present a swapchain image directly to a surface, after waiting on `wait_semaphore`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":217452,"byte_end":217539,"line_start":96,"line_end":96,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":217544,"byte_end":217547,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":217552,"byte_end":217564,"line_start":98,"line_end":98,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":217569,"byte_end":217572,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ Unsafe for the same reasons as [`submit`][CommandQueue::submit].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":217577,"byte_end":217645,"line_start":100,"line_end":100,"column_start":5,"column_end":73}},{"value":"/ No checks are performed to verify that this queue supports present operations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":217650,"byte_end":217732,"line_start":101,"line_end":101,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":218029,"byte_end":218038,"line_start":110,"line_end":110,"column_start":8,"column_end":17},"name":"wait_idle","qualname":"::queue::CommandQueue::wait_idle","value":"pub fn wait_idle(&mut Self) -> Result<(), OutOfMemory>","parent":{"krate":0,"index":952},"children":[],"decl_id":null,"docs":" Wait for the queue to be idle.\n","sig":null,"attributes":[{"value":"/ Wait for the queue to be idle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":217987,"byte_end":218021,"line_start":109,"line_end":109,"column_start":5,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":961},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"window","qualname":"::window","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","parent":null,"children":[{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":966},{"krate":0,"index":969},{"krate":0,"index":972},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":979},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":986},{"krate":0,"index":989},{"krate":0,"index":992},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":10711},{"krate":0,"index":10701},{"krate":0,"index":10703},{"krate":0,"index":10705},{"krate":0,"index":10706},{"krate":0,"index":10708},{"krate":0,"index":10709},{"krate":0,"index":10713},{"krate":0,"index":10714},{"krate":0,"index":10716},{"krate":0,"index":10718},{"krate":0,"index":10719},{"krate":0,"index":10722},{"krate":0,"index":10727},{"krate":0,"index":10729},{"krate":0,"index":10731},{"krate":0,"index":10733},{"krate":0,"index":10746},{"krate":0,"index":10749},{"krate":0,"index":10751},{"krate":0,"index":10752},{"krate":0,"index":10754},{"krate":0,"index":10755},{"krate":0,"index":10758},{"krate":0,"index":997},{"krate":0,"index":999},{"krate":0,"index":10760},{"krate":0,"index":10768},{"krate":0,"index":10770},{"krate":0,"index":1001},{"krate":0,"index":1003},{"krate":0,"index":1008},{"krate":0,"index":1014},{"krate":0,"index":10772},{"krate":0,"index":10774},{"krate":0,"index":10775},{"krate":0,"index":10776},{"krate":0,"index":10779},{"krate":0,"index":10780},{"krate":0,"index":10782},{"krate":0,"index":10784},{"krate":0,"index":10786},{"krate":0,"index":10788},{"krate":0,"index":10791},{"krate":0,"index":10799},{"krate":0,"index":10801},{"krate":0,"index":10803},{"krate":0,"index":10805},{"krate":0,"index":10807},{"krate":0,"index":10817},{"krate":0,"index":10820},{"krate":0,"index":10822},{"krate":0,"index":10825},{"krate":0,"index":10827},{"krate":0,"index":10830},{"krate":0,"index":10832},{"krate":0,"index":10835},{"krate":0,"index":10837},{"krate":0,"index":10840},{"krate":0,"index":10843},{"krate":0,"index":10869},{"krate":0,"index":10871},{"krate":0,"index":10872},{"krate":0,"index":10873},{"krate":0,"index":10876},{"krate":0,"index":10877},{"krate":0,"index":10879},{"krate":0,"index":10881},{"krate":0,"index":10883},{"krate":0,"index":10885},{"krate":0,"index":10888},{"krate":0,"index":10896},{"krate":0,"index":10898},{"krate":0,"index":10900},{"krate":0,"index":10902},{"krate":0,"index":10904},{"krate":0,"index":10914},{"krate":0,"index":10917},{"krate":0,"index":10919},{"krate":0,"index":10922},{"krate":0,"index":10924},{"krate":0,"index":10927},{"krate":0,"index":10929},{"krate":0,"index":10932},{"krate":0,"index":10934},{"krate":0,"index":10937},{"krate":0,"index":10940},{"krate":0,"index":10966},{"krate":0,"index":10974},{"krate":0,"index":10976},{"krate":0,"index":1015},{"krate":0,"index":10978},{"krate":0,"index":10980},{"krate":0,"index":10992},{"krate":0,"index":10982},{"krate":0,"index":10984},{"krate":0,"index":10986},{"krate":0,"index":10987},{"krate":0,"index":10989},{"krate":0,"index":10990},{"krate":0,"index":10994},{"krate":0,"index":10995},{"krate":0,"index":10997},{"krate":0,"index":10999},{"krate":0,"index":11000},{"krate":0,"index":11003},{"krate":0,"index":11008},{"krate":0,"index":11010},{"krate":0,"index":11012},{"krate":0,"index":11014},{"krate":0,"index":11016},{"krate":0,"index":11032},{"krate":0,"index":11033},{"krate":0,"index":11035},{"krate":0,"index":11037},{"krate":0,"index":11038},{"krate":0,"index":11041},{"krate":0,"index":11046},{"krate":0,"index":11048},{"krate":0,"index":11050},{"krate":0,"index":11052},{"krate":0,"index":11054},{"krate":0,"index":11068},{"krate":0,"index":11069},{"krate":0,"index":11071},{"krate":0,"index":11072},{"krate":0,"index":11074},{"krate":0,"index":11075},{"krate":0,"index":11077},{"krate":0,"index":11078},{"krate":0,"index":11080},{"krate":0,"index":11081}],"decl_id":null,"docs":" Windowing system interoperability.","sig":null,"attributes":[{"value":"/ Windowing system interoperability.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":219745,"byte_end":219783,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":219784,"byte_end":219787,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Screen presentation (fullscreen or window) of images requires two objects:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":219788,"byte_end":219866,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":219867,"byte_end":219870,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ * [Surface][Surface] is an abstraction of a native screen or window, for graphics use.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":219871,"byte_end":219961,"line_start":5,"line_end":5,"column_start":1,"column_end":91}},{"value":"/     It hosts a chain of multiple images, which can be presented on a surface (\"swapchain\").","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":219962,"byte_end":220057,"line_start":6,"line_end":6,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":220058,"byte_end":220061,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ## Window","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":220062,"byte_end":220075,"line_start":8,"line_end":8,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":220076,"byte_end":220079,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ `gfx-hal` does not provide any methods for creating a native window or screen.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":220080,"byte_end":220162,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/ This is handled exeternally, either by managing your own window or by using a","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":220163,"byte_end":220244,"line_start":11,"line_end":11,"column_start":1,"column_end":82}},{"value":"/ library such as [winit](https://github.com/rust-windowing/winit), and providing","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":220245,"byte_end":220328,"line_start":12,"line_end":12,"column_start":1,"column_end":84}},{"value":"/ the [raw window handle](https://github.com/rust-windowing/raw-window-handle).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":220329,"byte_end":220410,"line_start":13,"line_end":13,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":220411,"byte_end":220414,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ## Surface","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":220415,"byte_end":220429,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":220430,"byte_end":220433,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Once you have a window handle, you need to [create a surface][crate::Instance::create_surface]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":220434,"byte_end":220532,"line_start":17,"line_end":17,"column_start":1,"column_end":99}},{"value":"/ compatible with the [instance][crate::Instance] of the graphics API you currently use.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":220533,"byte_end":220623,"line_start":18,"line_end":18,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":220624,"byte_end":220627,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ## PresentationSurface","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":220628,"byte_end":220654,"line_start":20,"line_end":20,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":220655,"byte_end":220658,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ A surface has an implicit swapchain in it.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":220659,"byte_end":220705,"line_start":22,"line_end":22,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":220706,"byte_end":220709,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The most interesting part of a swapchain are the contained presentable images/backbuffers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":220710,"byte_end":220804,"line_start":24,"line_end":24,"column_start":1,"column_end":95}},{"value":"/ Presentable images are specialized images, which can be presented on the screen. They are","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":220805,"byte_end":220898,"line_start":25,"line_end":25,"column_start":1,"column_end":94}},{"value":"/ 2D color images with optionally associated depth-stencil images.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":220899,"byte_end":220967,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":220968,"byte_end":220971,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ The common steps for presentation of a frame are acquisition and presentation:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":220972,"byte_end":221054,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":221055,"byte_end":221058,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":221059,"byte_end":221072,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/ # extern crate gfx_backend_empty as empty;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":221073,"byte_end":221119,"line_start":31,"line_end":31,"column_start":1,"column_end":47}},{"value":"/ # extern crate gfx_hal;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":221120,"byte_end":221147,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/ # fn main() {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":221148,"byte_end":221165,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/ # use gfx_hal::prelude::*;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":221166,"byte_end":221196,"line_start":34,"line_end":34,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":221197,"byte_end":221200,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # let mut surface: empty::Surface = return;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":221201,"byte_end":221248,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # let device: empty::Device = return;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":221249,"byte_end":221290,"line_start":37,"line_end":37,"column_start":1,"column_end":42}},{"value":"/ # let mut present_queue: empty::CommandQueue = return;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":221291,"byte_end":221349,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ # unsafe {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":221350,"byte_end":221364,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/ let mut render_semaphore = device.create_semaphore().unwrap();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":221365,"byte_end":221431,"line_start":40,"line_end":40,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":221432,"byte_end":221435,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let (frame, suboptimal) = surface.acquire_image(!0).unwrap();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":221436,"byte_end":221501,"line_start":42,"line_end":42,"column_start":1,"column_end":66}},{"value":"/ // render the scene..","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":221502,"byte_end":221527,"line_start":43,"line_end":43,"column_start":1,"column_end":26}},{"value":"/ // `render_semaphore` will be signalled once rendering has been finished","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":221528,"byte_end":221604,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/ present_queue.present(&mut surface, frame, Some(&mut render_semaphore));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":221605,"byte_end":221681,"line_start":45,"line_end":45,"column_start":1,"column_end":77}},{"value":"/ # }}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":221682,"byte_end":221690,"line_start":46,"line_end":46,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":221691,"byte_end":221698,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":221699,"byte_end":221702,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Queues need to synchronize with the presentation engine, usually done via signalling a semaphore","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":221703,"byte_end":221803,"line_start":49,"line_end":49,"column_start":1,"column_end":101}},{"value":"/ once a frame is available for rendering and waiting on a separate semaphore until scene rendering","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":221804,"byte_end":221905,"line_start":50,"line_end":50,"column_start":1,"column_end":102}},{"value":"/ has finished.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":221906,"byte_end":221923,"line_start":51,"line_end":51,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":221924,"byte_end":221927,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ### Recreation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":221928,"byte_end":221946,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":221947,"byte_end":221950,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ DOC TODO","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":221951,"byte_end":221963,"line_start":55,"line_end":55,"column_start":1,"column_end":13}}]},{"kind":"Const","id":{"krate":0,"index":995},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":222176,"byte_end":222189,"line_start":68,"line_end":68,"column_start":11,"column_end":24},"name":"DEFAULT_USAGE","qualname":"::window::DEFAULT_USAGE","value":"image::Usage","parent":null,"children":[],"decl_id":null,"docs":" Default image usage for the swapchain.\n","sig":null,"attributes":[{"value":"/ Default image usage for the swapchain.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":222123,"byte_end":222165,"line_start":67,"line_end":67,"column_start":1,"column_end":43}}]},{"kind":"Const","id":{"krate":0,"index":996},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":222291,"byte_end":222310,"line_start":70,"line_end":70,"column_start":11,"column_end":30},"name":"DEFAULT_IMAGE_COUNT","qualname":"::window::DEFAULT_IMAGE_COUNT","value":"SwapImageIndex","parent":null,"children":[],"decl_id":null,"docs":" Default image count for the swapchain.\n","sig":null,"attributes":[{"value":"/ Default image count for the swapchain.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":222238,"byte_end":222280,"line_start":69,"line_end":69,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":10711},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":222468,"byte_end":222479,"line_start":75,"line_end":75,"column_start":12,"column_end":23},"name":"SurfaceLost","qualname":"::window::SurfaceLost","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error occurred caused surface to be lost.\n","sig":null,"attributes":[{"value":"/ Error occurred caused surface to be lost.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":222333,"byte_end":222378,"line_start":72,"line_end":72,"column_start":1,"column_end":46}},{"value":"error(\"Surface lost\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":222432,"byte_end":222456,"line_start":74,"line_end":74,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10735},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":222687,"byte_end":222698,"line_start":82,"line_end":82,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::window::SwapchainError::OutOfMemory","value":"SwapchainError::OutOfMemory(device::OutOfMemory)","parent":{"krate":0,"index":10713},"children":[],"decl_id":null,"docs":" Out of either host or device memory.\n","sig":null,"attributes":[{"value":"/ Out of either host or device memory.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":222616,"byte_end":222656,"line_start":80,"line_end":80,"column_start":5,"column_end":45}},{"value":"error(transparent)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":222661,"byte_end":222682,"line_start":81,"line_end":81,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10738},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":222782,"byte_end":222792,"line_start":85,"line_end":85,"column_start":5,"column_end":15},"name":"DeviceLost","qualname":"::window::SwapchainError::DeviceLost","value":"SwapchainError::DeviceLost(device::DeviceLost)","parent":{"krate":0,"index":10713},"children":[],"decl_id":null,"docs":" Device is lost\n","sig":null,"attributes":[{"value":"/ Device is lost","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":222733,"byte_end":222751,"line_start":83,"line_end":83,"column_start":5,"column_end":23}},{"value":"error(transparent)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":222756,"byte_end":222777,"line_start":84,"line_end":84,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10741},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":222876,"byte_end":222887,"line_start":88,"line_end":88,"column_start":5,"column_end":16},"name":"SurfaceLost","qualname":"::window::SwapchainError::SurfaceLost","value":"SwapchainError::SurfaceLost(SurfaceLost)","parent":{"krate":0,"index":10713},"children":[],"decl_id":null,"docs":" Surface is lost\n","sig":null,"attributes":[{"value":"/ Surface is lost","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":222826,"byte_end":222845,"line_start":86,"line_end":86,"column_start":5,"column_end":24}},{"value":"error(transparent)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":222850,"byte_end":222871,"line_start":87,"line_end":87,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":10744},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":222969,"byte_end":222980,"line_start":91,"line_end":91,"column_start":5,"column_end":16},"name":"WindowInUse","qualname":"::window::SwapchainError::WindowInUse","value":"SwapchainError::WindowInUse","parent":{"krate":0,"index":10713},"children":[],"decl_id":null,"docs":" Window in use\n","sig":null,"attributes":[{"value":"/ Window in use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":222914,"byte_end":222931,"line_start":89,"line_end":89,"column_start":5,"column_end":22}},{"value":"error(\"Window is in use\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":222936,"byte_end":222964,"line_start":90,"line_end":90,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":10713},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":222595,"byte_end":222609,"line_start":79,"line_end":79,"column_start":10,"column_end":24},"name":"SwapchainError","qualname":"::window::SwapchainError","value":"pub enum SwapchainError {\n    OutOfMemory(device::OutOfMemory),\n    DeviceLost(device::DeviceLost),\n    SurfaceLost(SurfaceLost),\n    WindowInUse,\n}","parent":null,"children":[{"krate":0,"index":10735},{"krate":0,"index":10738},{"krate":0,"index":10741},{"krate":0,"index":10744}],"decl_id":null,"docs":" Error occurred during swapchain configuration.\n","sig":null,"attributes":[{"value":"/ Error occurred during swapchain configuration.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":222482,"byte_end":222532,"line_start":77,"line_end":77,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":10746},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":223277,"byte_end":223285,"line_start":99,"line_end":99,"column_start":12,"column_end":20},"name":"Extent2D","qualname":"::window::Extent2D","value":"Extent2D { width, height }","parent":null,"children":[{"krate":0,"index":10747},{"krate":0,"index":10748}],"decl_id":null,"docs":" An extent describes the size of a rectangle, such as\n a window or texture. It is not used for referring to a\n sub-rectangle; for that see `command::Rect`.\n","sig":null,"attributes":[{"value":"/ An extent describes the size of a rectangle, such as","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":222985,"byte_end":223041,"line_start":94,"line_end":94,"column_start":1,"column_end":57}},{"value":"/ a window or texture. It is not used for referring to a","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":223042,"byte_end":223100,"line_start":95,"line_end":95,"column_start":1,"column_end":59}},{"value":"/ sub-rectangle; for that see `command::Rect`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":223101,"byte_end":223149,"line_start":96,"line_end":96,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":10747},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":223310,"byte_end":223315,"line_start":101,"line_end":101,"column_start":9,"column_end":14},"name":"width","qualname":"::window::Extent2D::width","value":"u32","parent":{"krate":0,"index":10746},"children":[],"decl_id":null,"docs":" Width\n","sig":null,"attributes":[{"value":"/ Width","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":223292,"byte_end":223301,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":10748},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":223353,"byte_end":223359,"line_start":103,"line_end":103,"column_start":9,"column_end":15},"name":"height","qualname":"::window::Extent2D::height","value":"u32","parent":{"krate":0,"index":10746},"children":[],"decl_id":null,"docs":" Height\n","sig":null,"attributes":[{"value":"/ Height","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":223334,"byte_end":223344,"line_start":102,"line_end":102,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":223628,"byte_end":223637,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"to_extent","qualname":"<Extent2D>::to_extent","value":"pub fn to_extent(&Self) -> image::Extent","parent":null,"children":[],"decl_id":null,"docs":" Convert into a regular image extent.\n","sig":null,"attributes":[{"value":"/ Convert into a regular image extent.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":223576,"byte_end":223616,"line_start":116,"line_end":116,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":10760},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":224003,"byte_end":224022,"line_start":130,"line_end":130,"column_start":12,"column_end":31},"name":"SurfaceCapabilities","qualname":"::window::SurfaceCapabilities","value":"SurfaceCapabilities { image_count, current_extent, extents, max_image_layers, usage, present_modes, composite_alpha_modes }","parent":null,"children":[{"krate":0,"index":10761},{"krate":0,"index":10762},{"krate":0,"index":10763},{"krate":0,"index":10764},{"krate":0,"index":10765},{"krate":0,"index":10766},{"krate":0,"index":10767}],"decl_id":null,"docs":" Describes information about what a `Surface`'s properties are.\n Fetch this with [Surface::capabilities].\n","sig":null,"attributes":[{"value":"/ Describes information about what a `Surface`'s properties are.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":223793,"byte_end":223859,"line_start":126,"line_end":126,"column_start":1,"column_end":67}},{"value":"/ Fetch this with [Surface::capabilities].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":223860,"byte_end":223904,"line_start":127,"line_end":127,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":10761},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":224280,"byte_end":224291,"line_start":136,"line_end":136,"column_start":9,"column_end":20},"name":"image_count","qualname":"::window::SurfaceCapabilities::image_count","value":"std::ops::RangeInclusive<u32>","parent":{"krate":0,"index":10760},"children":[],"decl_id":null,"docs":" Number of presentable images supported by the adapter for a swapchain\n created from this surface.","sig":null,"attributes":[{"value":"/ Number of presentable images supported by the adapter for a swapchain","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":224029,"byte_end":224102,"line_start":131,"line_end":131,"column_start":5,"column_end":78}},{"value":"/ created from this surface.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":224107,"byte_end":224137,"line_start":132,"line_end":132,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":224142,"byte_end":224145,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ - `image_count.start` must be at least 1.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":224150,"byte_end":224195,"line_start":134,"line_end":134,"column_start":5,"column_end":50}},{"value":"/ - `image_count.end` must be larger or equal to `image_count.start`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":224200,"byte_end":224271,"line_start":135,"line_end":135,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":10762},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":224468,"byte_end":224482,"line_start":141,"line_end":141,"column_start":9,"column_end":23},"name":"current_extent","qualname":"::window::SurfaceCapabilities::current_extent","value":"std::option::Option<window::Extent2D>","parent":{"krate":0,"index":10760},"children":[],"decl_id":null,"docs":" Current extent of the surface.","sig":null,"attributes":[{"value":"/ Current extent of the surface.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":224330,"byte_end":224364,"line_start":138,"line_end":138,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":224369,"byte_end":224372,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ `None` if the surface has no explicit size, depending on the swapchain extent.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":224377,"byte_end":224459,"line_start":140,"line_end":140,"column_start":5,"column_end":87}}]},{"kind":"Field","id":{"krate":0,"index":10763},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":224607,"byte_end":224614,"line_start":146,"line_end":146,"column_start":9,"column_end":16},"name":"extents","qualname":"::window::SurfaceCapabilities::extents","value":"std::ops::RangeInclusive<window::Extent2D>","parent":{"krate":0,"index":10760},"children":[],"decl_id":null,"docs":" Range of supported extents.","sig":null,"attributes":[{"value":"/ Range of supported extents.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":224507,"byte_end":224538,"line_start":143,"line_end":143,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":224543,"byte_end":224546,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ `current_extent` must be inside this range.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":224551,"byte_end":224598,"line_start":145,"line_end":145,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":10764},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":224754,"byte_end":224770,"line_start":151,"line_end":151,"column_start":9,"column_end":25},"name":"max_image_layers","qualname":"::window::SurfaceCapabilities::max_image_layers","value":"u16","parent":{"krate":0,"index":10760},"children":[],"decl_id":null,"docs":" Maximum number of layers supported for presentable images.","sig":null,"attributes":[{"value":"/ Maximum number of layers supported for presentable images.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":224647,"byte_end":224709,"line_start":148,"line_end":148,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":224714,"byte_end":224717,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ Must be at least 1.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":224722,"byte_end":224745,"line_start":150,"line_end":150,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":10765},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":224832,"byte_end":224837,"line_start":154,"line_end":154,"column_start":9,"column_end":14},"name":"usage","qualname":"::window::SurfaceCapabilities::usage","value":"image::Usage","parent":{"krate":0,"index":10760},"children":[],"decl_id":null,"docs":" Supported image usage flags.\n","sig":null,"attributes":[{"value":"/ Supported image usage flags.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":224791,"byte_end":224823,"line_start":153,"line_end":153,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":10766},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":224913,"byte_end":224926,"line_start":157,"line_end":157,"column_start":9,"column_end":22},"name":"present_modes","qualname":"::window::SurfaceCapabilities::present_modes","value":"window::PresentMode","parent":{"krate":0,"index":10760},"children":[],"decl_id":null,"docs":" A bitmask of supported presentation modes.\n","sig":null,"attributes":[{"value":"/ A bitmask of supported presentation modes.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":224858,"byte_end":224904,"line_start":156,"line_end":156,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":10767},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":225006,"byte_end":225027,"line_start":160,"line_end":160,"column_start":9,"column_end":30},"name":"composite_alpha_modes","qualname":"::window::SurfaceCapabilities::composite_alpha_modes","value":"window::CompositeAlphaMode","parent":{"krate":0,"index":10760},"children":[],"decl_id":null,"docs":" A bitmask of supported alpha composition modes.\n","sig":null,"attributes":[{"value":"/ A bitmask of supported alpha composition modes.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":224946,"byte_end":224997,"line_start":159,"line_end":159,"column_start":5,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":1003},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":225864,"byte_end":225871,"line_start":183,"line_end":183,"column_start":11,"column_end":18},"name":"Surface","qualname":"::window::Surface","value":"Surface<B: Backend>: fmt::Debug + Any + Send + Sync","parent":null,"children":[{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1007}],"decl_id":null,"docs":" A `Surface` abstracts the surface of a native window.\n","sig":null,"attributes":[{"value":"/ A `Surface` abstracts the surface of a native window.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":225796,"byte_end":225853,"line_start":182,"line_end":182,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":225998,"byte_end":226019,"line_start":185,"line_end":185,"column_start":8,"column_end":29},"name":"supports_queue_family","qualname":"::window::Surface::supports_queue_family","value":"pub fn supports_queue_family(&Self, &B::QueueFamily) -> bool","parent":{"krate":0,"index":1003},"children":[],"decl_id":null,"docs":" Check if the queue family supports presentation to this surface.\n","sig":null,"attributes":[{"value":"/ Check if the queue family supports presentation to this surface.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":225922,"byte_end":225990,"line_start":184,"line_end":184,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":226200,"byte_end":226212,"line_start":190,"line_end":190,"column_start":8,"column_end":20},"name":"capabilities","qualname":"::window::Surface::capabilities","value":"pub fn capabilities(&Self, &B::PhysicalDevice) -> SurfaceCapabilities","parent":{"krate":0,"index":1003},"children":[],"decl_id":null,"docs":" Query surface capabilities for this physical device.","sig":null,"attributes":[{"value":"/ Query surface capabilities for this physical device.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":226066,"byte_end":226122,"line_start":187,"line_end":187,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":226127,"byte_end":226130,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Use this function for configuring swapchain creation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":226135,"byte_end":226192,"line_start":189,"line_end":189,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":226785,"byte_end":226802,"line_start":202,"line_end":202,"column_start":8,"column_end":25},"name":"supported_formats","qualname":"::window::Surface::supported_formats","value":"pub fn supported_formats(&Self, &B::PhysicalDevice) -> Option<Vec<Format>>","parent":{"krate":0,"index":1003},"children":[],"decl_id":null,"docs":" Query surface formats for this physical device.","sig":null,"attributes":[{"value":"/ Query surface formats for this physical device.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":226286,"byte_end":226337,"line_start":192,"line_end":192,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":226342,"byte_end":226345,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ This function may be slow. It's typically used during the initialization only.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":226350,"byte_end":226432,"line_start":194,"line_end":194,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":226437,"byte_end":226440,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ Note: technically the surface support formats may change at the point","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":226445,"byte_end":226518,"line_start":196,"line_end":196,"column_start":5,"column_end":78}},{"value":"/ where an application needs to recreate the swapchain, e.g. when the window","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":226523,"byte_end":226601,"line_start":197,"line_end":197,"column_start":5,"column_end":83}},{"value":"/ is moved to a different monitor.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":226606,"byte_end":226642,"line_start":198,"line_end":198,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":226647,"byte_end":226650,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ If `None` is returned then the surface has no preferred format and the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":226655,"byte_end":226729,"line_start":200,"line_end":200,"column_start":5,"column_end":79}},{"value":"/ application may use any desired format.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":226734,"byte_end":226777,"line_start":201,"line_end":201,"column_start":5,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":1008},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":226982,"byte_end":227001,"line_start":207,"line_end":207,"column_start":11,"column_end":30},"name":"PresentationSurface","qualname":"::window::PresentationSurface","value":"PresentationSurface<B: Backend>: Surface<B>","parent":null,"children":[{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013}],"decl_id":null,"docs":" A surface trait that exposes the ability to present images on the\n associtated swap chain.\n","sig":null,"attributes":[{"value":"/ A surface trait that exposes the ability to present images on the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":226874,"byte_end":226943,"line_start":205,"line_end":205,"column_start":1,"column_end":70}},{"value":"/ associtated swap chain.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":226944,"byte_end":226971,"line_start":206,"line_end":206,"column_start":1,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":1010},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":227090,"byte_end":227104,"line_start":209,"line_end":209,"column_start":10,"column_end":24},"name":"SwapchainImage","qualname":"::window::PresentationSurface::SwapchainImage","value":"type SwapchainImage: Borrow<B::Image> + Borrow<B::ImageView> + fmt::Debug + Send + Sync;","parent":{"krate":0,"index":1008},"children":[],"decl_id":null,"docs":" An opaque type wrapping the swapchain image.\n","sig":null,"attributes":[{"value":"/ An opaque type wrapping the swapchain image.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":227032,"byte_end":227080,"line_start":208,"line_end":208,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":227272,"byte_end":227291,"line_start":212,"line_end":212,"column_start":15,"column_end":34},"name":"configure_swapchain","qualname":"::window::PresentationSurface::configure_swapchain","value":"pub unsafe fn configure_swapchain(&mut Self, &B::Device, SwapchainConfig)\n-> Result<(), SwapchainError>","parent":{"krate":0,"index":1008},"children":[],"decl_id":null,"docs":" Set up the swapchain associated with the surface to have the given format.\n","sig":null,"attributes":[{"value":"/ Set up the swapchain associated with the surface to have the given format.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":227179,"byte_end":227257,"line_start":211,"line_end":211,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":227551,"byte_end":227572,"line_start":221,"line_end":221,"column_start":15,"column_end":36},"name":"unconfigure_swapchain","qualname":"::window::PresentationSurface::unconfigure_swapchain","value":"pub unsafe fn unconfigure_swapchain(&mut Self, &B::Device)","parent":{"krate":0,"index":1008},"children":[],"decl_id":null,"docs":" Remove the associated swapchain from this surface.","sig":null,"attributes":[{"value":"/ Remove the associated swapchain from this surface.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":227415,"byte_end":227469,"line_start":218,"line_end":218,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":227474,"byte_end":227477,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ This has to be done before the surface is dropped.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":227482,"byte_end":227536,"line_start":220,"line_end":220,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":227889,"byte_end":227902,"line_start":230,"line_end":230,"column_start":15,"column_end":28},"name":"acquire_image","qualname":"::window::PresentationSurface::acquire_image","value":"pub unsafe fn acquire_image(&mut Self, u64)\n-> Result<(Self::SwapchainImage, Option<Suboptimal>), AcquireError>","parent":{"krate":0,"index":1008},"children":[],"decl_id":null,"docs":" Acquire a new swapchain image for rendering.","sig":null,"attributes":[{"value":"/ Acquire a new swapchain image for rendering.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":227610,"byte_end":227658,"line_start":223,"line_end":223,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":227663,"byte_end":227666,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ May fail according to one of the reasons indicated in `AcquireError` enum.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":227671,"byte_end":227749,"line_start":225,"line_end":225,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":227754,"byte_end":227757,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Synchronization","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":227762,"byte_end":227783,"line_start":227,"line_end":227,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":227788,"byte_end":227791,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ The acquired image is available to render. No synchronization is required.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":227796,"byte_end":227874,"line_start":229,"line_end":229,"column_start":5,"column_end":83}}]},{"kind":"Type","id":{"krate":0,"index":1014},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":228306,"byte_end":228320,"line_start":242,"line_end":242,"column_start":10,"column_end":24},"name":"SwapImageIndex","qualname":"::window::SwapImageIndex","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Index of an image in the swapchain.","sig":null,"attributes":[{"value":"/ Index of an image in the swapchain.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":228026,"byte_end":228065,"line_start":236,"line_end":236,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":228066,"byte_end":228069,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ The swapchain is a series of one or more images, usually","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":228070,"byte_end":228130,"line_start":238,"line_end":238,"column_start":1,"column_end":61}},{"value":"/ with one being drawn on while the other is displayed by","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":228131,"byte_end":228190,"line_start":239,"line_end":239,"column_start":1,"column_end":60}},{"value":"/ the GPU (aka double-buffering). A `SwapImageIndex` refers","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":228191,"byte_end":228252,"line_start":240,"line_end":240,"column_start":1,"column_end":62}},{"value":"/ to a particular image in the swapchain.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":228253,"byte_end":228296,"line_start":241,"line_end":241,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":10772},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":228493,"byte_end":228504,"line_start":247,"line_end":247,"column_start":16,"column_end":27},"name":"PresentMode","qualname":"::window::PresentMode","value":"PresentMode {  }","parent":null,"children":[{"krate":0,"index":10773}],"decl_id":null,"docs":" Specifies the mode regulating how a swapchain presents frames.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10808},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":228566,"byte_end":228575,"line_start":249,"line_end":249,"column_start":15,"column_end":24},"name":"IMMEDIATE","qualname":"::window::PresentMode::IMMEDIATE","value":"PresentMode","parent":{"krate":0,"index":10807},"children":[],"decl_id":null,"docs":" Don't ever wait for v-sync.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10809},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":228661,"byte_end":228668,"line_start":251,"line_end":251,"column_start":15,"column_end":22},"name":"MAILBOX","qualname":"::window::PresentMode::MAILBOX","value":"PresentMode","parent":{"krate":0,"index":10807},"children":[],"decl_id":null,"docs":" Wait for v-sync, overwrite the last rendered frame.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10810},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":228754,"byte_end":228758,"line_start":253,"line_end":253,"column_start":15,"column_end":19},"name":"FIFO","qualname":"::window::PresentMode::FIFO","value":"PresentMode","parent":{"krate":0,"index":10807},"children":[],"decl_id":null,"docs":" Present frames in the same order they are rendered.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10811},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":228845,"byte_end":228852,"line_start":255,"line_end":255,"column_start":15,"column_end":22},"name":"RELAXED","qualname":"::window::PresentMode::RELAXED","value":"PresentMode","parent":{"krate":0,"index":10807},"children":[],"decl_id":null,"docs":" Don't wait for the next v-sync if we just missed it.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10869},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":229063,"byte_end":229081,"line_start":263,"line_end":263,"column_start":16,"column_end":34},"name":"CompositeAlphaMode","qualname":"::window::CompositeAlphaMode","value":"CompositeAlphaMode {  }","parent":null,"children":[{"krate":0,"index":10870}],"decl_id":null,"docs":" Specifies how the alpha channel of the images should be handled during\n compositing.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10905},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":229293,"byte_end":229299,"line_start":267,"line_end":267,"column_start":15,"column_end":21},"name":"OPAQUE","qualname":"::window::CompositeAlphaMode::OPAQUE","value":"CompositeAlphaMode","parent":{"krate":0,"index":10904},"children":[],"decl_id":null,"docs":" The alpha channel, if it exists, of the images is ignored in the\n compositing process. Instead, the image is treated as if it has a\n constant alpha of 1.0.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10906},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":229572,"byte_end":229585,"line_start":272,"line_end":272,"column_start":15,"column_end":28},"name":"PREMULTIPLIED","qualname":"::window::CompositeAlphaMode::PREMULTIPLIED","value":"CompositeAlphaMode","parent":{"krate":0,"index":10904},"children":[],"decl_id":null,"docs":" The alpha channel, if it exists, of the images is respected in the\n compositing process. The non-alpha channels of the image are\n expected to already be multiplied by the alpha channel by the\n application.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10907},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":229989,"byte_end":230003,"line_start":278,"line_end":278,"column_start":15,"column_end":29},"name":"POSTMULTIPLIED","qualname":"::window::CompositeAlphaMode::POSTMULTIPLIED","value":"CompositeAlphaMode","parent":{"krate":0,"index":10904},"children":[],"decl_id":null,"docs":" The alpha channel, if it exists, of the images is respected in the\n compositing process. The non-alpha channels of the image are not\n expected to already be multiplied by the alpha channel by the\n application; instead, the compositor will multiply the non-alpha\n channels of the image by the alpha channel during compositing.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":10908},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":230457,"byte_end":230464,"line_start":285,"line_end":285,"column_start":15,"column_end":22},"name":"INHERIT","qualname":"::window::CompositeAlphaMode::INHERIT","value":"CompositeAlphaMode","parent":{"krate":0,"index":10904},"children":[],"decl_id":null,"docs":" The way in which the presentation engine treats the alpha channel in\n the images is unknown to gfx-hal. Instead, the application is\n responsible for setting the composite alpha blending mode using\n native window system commands. If the application does not set the\n blending mode using native window system commands, then a\n platform-specific default will be used.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10966},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":230962,"byte_end":230977,"line_start":306,"line_end":306,"column_start":12,"column_end":27},"name":"SwapchainConfig","qualname":"::window::SwapchainConfig","value":"SwapchainConfig { present_mode, composite_alpha_mode, format, extent, image_count, image_layers, image_usage }","parent":null,"children":[{"krate":0,"index":10967},{"krate":0,"index":10968},{"krate":0,"index":10969},{"krate":0,"index":10970},{"krate":0,"index":10971},{"krate":0,"index":10972},{"krate":0,"index":10973}],"decl_id":null,"docs":" Contains all the data necessary to create a new `Swapchain`:\n color, depth, and number of images.","sig":null,"attributes":[{"value":"/ Contains all the data necessary to create a new `Swapchain`:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":230482,"byte_end":230546,"line_start":289,"line_end":289,"column_start":1,"column_end":65}},{"value":"/ color, depth, and number of images.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":230547,"byte_end":230586,"line_start":290,"line_end":290,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":230587,"byte_end":230590,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":230591,"byte_end":230605,"line_start":292,"line_end":292,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":230606,"byte_end":230609,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ This type implements the builder pattern, method calls can be","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":230610,"byte_end":230675,"line_start":294,"line_end":294,"column_start":1,"column_end":66}},{"value":"/ easily chained.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":230676,"byte_end":230695,"line_start":295,"line_end":295,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":230696,"byte_end":230699,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":230700,"byte_end":230713,"line_start":297,"line_end":297,"column_start":1,"column_end":14}},{"value":"/ # extern crate gfx_hal;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":230714,"byte_end":230741,"line_start":298,"line_end":298,"column_start":1,"column_end":28}},{"value":"/ # fn main() {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":230742,"byte_end":230759,"line_start":299,"line_end":299,"column_start":1,"column_end":18}},{"value":"/ # use gfx_hal::window::SwapchainConfig;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":230760,"byte_end":230803,"line_start":300,"line_end":300,"column_start":1,"column_end":44}},{"value":"/ # use gfx_hal::format::Format;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":230804,"byte_end":230838,"line_start":301,"line_end":301,"column_start":1,"column_end":35}},{"value":"/ let config = SwapchainConfig::new(100, 100, Format::Bgra8Unorm, 2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":230839,"byte_end":230910,"line_start":302,"line_end":302,"column_start":1,"column_end":72}},{"value":"/ # }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":230911,"byte_end":230918,"line_start":303,"line_end":303,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":230919,"byte_end":230926,"line_start":304,"line_end":304,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":10967},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":231015,"byte_end":231027,"line_start":308,"line_end":308,"column_start":9,"column_end":21},"name":"present_mode","qualname":"::window::SwapchainConfig::present_mode","value":"window::PresentMode","parent":{"krate":0,"index":10966},"children":[],"decl_id":null,"docs":" Presentation mode.\n","sig":null,"attributes":[{"value":"/ Presentation mode.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":230984,"byte_end":231006,"line_start":307,"line_end":307,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":10968},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":231082,"byte_end":231102,"line_start":310,"line_end":310,"column_start":9,"column_end":29},"name":"composite_alpha_mode","qualname":"::window::SwapchainConfig::composite_alpha_mode","value":"window::CompositeAlphaMode","parent":{"krate":0,"index":10966},"children":[],"decl_id":null,"docs":" Alpha composition mode.\n","sig":null,"attributes":[{"value":"/ Alpha composition mode.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":231046,"byte_end":231073,"line_start":309,"line_end":309,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":10969},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":231173,"byte_end":231179,"line_start":312,"line_end":312,"column_start":9,"column_end":15},"name":"format","qualname":"::window::SwapchainConfig::format","value":"format::Format","parent":{"krate":0,"index":10966},"children":[],"decl_id":null,"docs":" Format of the backbuffer images.\n","sig":null,"attributes":[{"value":"/ Format of the backbuffer images.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":231128,"byte_end":231164,"line_start":311,"line_end":311,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":10970},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":231286,"byte_end":231292,"line_start":315,"line_end":315,"column_start":9,"column_end":15},"name":"extent","qualname":"::window::SwapchainConfig::extent","value":"window::Extent2D","parent":{"krate":0,"index":10966},"children":[],"decl_id":null,"docs":" Requested image extent. Must be in\n `SurfaceCapabilities::extents` range.\n","sig":null,"attributes":[{"value":"/ Requested image extent. Must be in","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":231193,"byte_end":231231,"line_start":313,"line_end":313,"column_start":5,"column_end":43}},{"value":"/ `SurfaceCapabilities::extents` range.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":231236,"byte_end":231277,"line_start":314,"line_end":314,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":10971},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":231416,"byte_end":231427,"line_start":318,"line_end":318,"column_start":9,"column_end":20},"name":"image_count","qualname":"::window::SwapchainConfig::image_count","value":"u32","parent":{"krate":0,"index":10966},"children":[],"decl_id":null,"docs":" Number of images in the swapchain. Must be in\n `SurfaceCapabilities::image_count` range.\n","sig":null,"attributes":[{"value":"/ Number of images in the swapchain. Must be in","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":231308,"byte_end":231357,"line_start":316,"line_end":316,"column_start":5,"column_end":54}},{"value":"/ `SurfaceCapabilities::image_count` range.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":231362,"byte_end":231407,"line_start":317,"line_end":317,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":10972},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":231560,"byte_end":231572,"line_start":321,"line_end":321,"column_start":9,"column_end":21},"name":"image_layers","qualname":"::window::SwapchainConfig::image_layers","value":"u16","parent":{"krate":0,"index":10966},"children":[],"decl_id":null,"docs":" Number of image layers. Must be lower or equal to\n `SurfaceCapabilities::max_image_layers`.\n","sig":null,"attributes":[{"value":"/ Number of image layers. Must be lower or equal to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":231449,"byte_end":231502,"line_start":319,"line_end":319,"column_start":5,"column_end":58}},{"value":"/ `SurfaceCapabilities::max_image_layers`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":231507,"byte_end":231551,"line_start":320,"line_end":320,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":10973},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":231642,"byte_end":231653,"line_start":323,"line_end":323,"column_start":9,"column_end":20},"name":"image_usage","qualname":"::window::SwapchainConfig::image_usage","value":"image::Usage","parent":{"krate":0,"index":10966},"children":[],"decl_id":null,"docs":" Image usage of the backbuffer images.\n","sig":null,"attributes":[{"value":"/ Image usage of the backbuffer images.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":231592,"byte_end":231633,"line_start":322,"line_end":322,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":231770,"byte_end":231773,"line_start":328,"line_end":328,"column_start":12,"column_end":15},"name":"new","qualname":"<SwapchainConfig>::new","value":"pub fn new(u32, u32, Format, SwapImageIndex) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new default configuration (color images only).\n","sig":null,"attributes":[{"value":"/ Create a new default configuration (color images only).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":231699,"byte_end":231758,"line_start":327,"line_end":327,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":232263,"byte_end":232285,"line_start":341,"line_end":341,"column_start":12,"column_end":34},"name":"framebuffer_attachment","qualname":"<SwapchainConfig>::framebuffer_attachment","value":"pub fn framebuffer_attachment(&Self) -> image::FramebufferAttachment","parent":null,"children":[],"decl_id":null,"docs":" Return the framebuffer attachment corresponding to the swapchain image views.\n","sig":null,"attributes":[{"value":"/ Return the framebuffer attachment corresponding to the swapchain image views.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":232170,"byte_end":232251,"line_start":340,"line_end":340,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1018},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":232828,"byte_end":232837,"line_start":354,"line_end":354,"column_start":12,"column_end":21},"name":"from_caps","qualname":"<SwapchainConfig>::from_caps","value":"pub fn from_caps(&SurfaceCapabilities, Format, Extent2D) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a swapchain configuration based on the capabilities\n returned from a physical device query. If the surface does not\n specify a current size, default_extent is clamped and used instead.","sig":null,"attributes":[{"value":"/ Create a swapchain configuration based on the capabilities","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":232514,"byte_end":232576,"line_start":349,"line_end":349,"column_start":5,"column_end":67}},{"value":"/ returned from a physical device query. If the surface does not","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":232581,"byte_end":232647,"line_start":350,"line_end":350,"column_start":5,"column_end":71}},{"value":"/ specify a current size, default_extent is clamped and used instead.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":232652,"byte_end":232723,"line_start":351,"line_end":351,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":232728,"byte_end":232731,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ The default values are taken from `DEFAULT_USAGE` and `DEFAULT_IMAGE_COUNT`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":232736,"byte_end":232816,"line_start":353,"line_end":353,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":234102,"byte_end":234119,"line_start":390,"line_end":390,"column_start":12,"column_end":29},"name":"with_present_mode","qualname":"<SwapchainConfig>::with_present_mode","value":"pub fn with_present_mode(Self, PresentMode) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the presentation mode.\n","sig":null,"attributes":[{"value":"/ Specify the presentation mode.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":234056,"byte_end":234090,"line_start":389,"line_end":389,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":234263,"byte_end":234288,"line_start":396,"line_end":396,"column_start":12,"column_end":37},"name":"with_composite_alpha_mode","qualname":"<SwapchainConfig>::with_composite_alpha_mode","value":"pub fn with_composite_alpha_mode(Self, CompositeAlphaMode) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the presentation mode.\n","sig":null,"attributes":[{"value":"/ Specify the presentation mode.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":234217,"byte_end":234251,"line_start":395,"line_end":395,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":234456,"byte_end":234472,"line_start":402,"line_end":402,"column_start":12,"column_end":28},"name":"with_image_usage","qualname":"<SwapchainConfig>::with_image_usage","value":"pub fn with_image_usage(Self, image::Usage) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the usage of backbuffer images.\n","sig":null,"attributes":[{"value":"/ Specify the usage of backbuffer images.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":234401,"byte_end":234444,"line_start":401,"line_end":401,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":234626,"byte_end":234642,"line_start":408,"line_end":408,"column_start":12,"column_end":28},"name":"with_image_count","qualname":"<SwapchainConfig>::with_image_count","value":"pub fn with_image_count(Self, SwapImageIndex) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the count of backbuffer image.\n","sig":null,"attributes":[{"value":"/ Specify the count of backbuffer image.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":234572,"byte_end":234614,"line_start":407,"line_end":407,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":10978},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":235005,"byte_end":235015,"line_start":419,"line_end":419,"column_start":12,"column_end":22},"name":"Suboptimal","qualname":"::window::Suboptimal","value":"","parent":null,"children":[],"decl_id":null,"docs":" Marker value returned if the swapchain no longer matches the surface properties exactly,\n but can still be used to present to the surface successfully.\n","sig":null,"attributes":[{"value":"/ Marker value returned if the swapchain no longer matches the surface properties exactly,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":234818,"byte_end":234910,"line_start":416,"line_end":416,"column_start":1,"column_end":93}},{"value":"/ but can still be used to present to the surface successfully.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":234911,"byte_end":234976,"line_start":417,"line_end":417,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":10992},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":235192,"byte_end":235201,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"name":"OutOfDate","qualname":"::window::OutOfDate","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error occurred caused surface to be lost.\n","sig":null,"attributes":[{"value":"/ Error occurred caused surface to be lost.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":235018,"byte_end":235063,"line_start":421,"line_end":421,"column_start":1,"column_end":46}},{"value":"error(\"Swapchain is out of date and needs to be re-created\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":235117,"byte_end":235180,"line_start":423,"line_end":423,"column_start":1,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11018},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":235412,"byte_end":235423,"line_start":431,"line_end":431,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::window::AcquireError::OutOfMemory","value":"AcquireError::OutOfMemory(device::OutOfMemory)","parent":{"krate":0,"index":10994},"children":[],"decl_id":null,"docs":" Out of either host or device memory.\n","sig":null,"attributes":[{"value":"/ Out of either host or device memory.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":235341,"byte_end":235381,"line_start":429,"line_end":429,"column_start":5,"column_end":45}},{"value":"error(transparent)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":235386,"byte_end":235407,"line_start":430,"line_end":430,"column_start":5,"column_end":26}}]},{"kind":"StructVariant","id":{"krate":0,"index":11021},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":235568,"byte_end":235576,"line_start":434,"line_end":434,"column_start":5,"column_end":13},"name":"NotReady","qualname":"::window::AcquireError::NotReady","value":"AcquireError::NotReady { timeout }","parent":{"krate":0,"index":10994},"children":[],"decl_id":null,"docs":" No image was ready and no timeout was specified.\n","sig":null,"attributes":[{"value":"/ No image was ready and no timeout was specified.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":235458,"byte_end":235510,"line_start":432,"line_end":432,"column_start":5,"column_end":57}},{"value":"error(\"No image ready (timeout: {timeout:})\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":235515,"byte_end":235563,"line_start":433,"line_end":433,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11023},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":235754,"byte_end":235763,"line_start":440,"line_end":440,"column_start":5,"column_end":14},"name":"OutOfDate","qualname":"::window::AcquireError::OutOfDate","value":"AcquireError::OutOfDate(OutOfDate)","parent":{"krate":0,"index":10994},"children":[],"decl_id":null,"docs":" The swapchain is no longer in sync with the surface, needs to be re-created.\n","sig":null,"attributes":[{"value":"/ The swapchain is no longer in sync with the surface, needs to be re-created.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":235643,"byte_end":235723,"line_start":438,"line_end":438,"column_start":5,"column_end":85}},{"value":"error(transparent)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":235728,"byte_end":235749,"line_start":439,"line_end":439,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11026},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":235883,"byte_end":235894,"line_start":443,"line_end":443,"column_start":5,"column_end":16},"name":"SurfaceLost","qualname":"::window::AcquireError::SurfaceLost","value":"AcquireError::SurfaceLost(SurfaceLost)","parent":{"krate":0,"index":10994},"children":[],"decl_id":null,"docs":" The surface was lost, and the swapchain is no longer usable.\n","sig":null,"attributes":[{"value":"/ The surface was lost, and the swapchain is no longer usable.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":235788,"byte_end":235852,"line_start":441,"line_end":441,"column_start":5,"column_end":69}},{"value":"error(transparent)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":235857,"byte_end":235878,"line_start":442,"line_end":442,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11029},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":235970,"byte_end":235980,"line_start":446,"line_end":446,"column_start":5,"column_end":15},"name":"DeviceLost","qualname":"::window::AcquireError::DeviceLost","value":"AcquireError::DeviceLost(device::DeviceLost)","parent":{"krate":0,"index":10994},"children":[],"decl_id":null,"docs":" Device is lost\n","sig":null,"attributes":[{"value":"/ Device is lost","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":235921,"byte_end":235939,"line_start":444,"line_end":444,"column_start":5,"column_end":23}},{"value":"error(transparent)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":235944,"byte_end":235965,"line_start":445,"line_end":445,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":10994},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":235322,"byte_end":235334,"line_start":428,"line_end":428,"column_start":10,"column_end":22},"name":"AcquireError","qualname":"::window::AcquireError","value":"pub enum AcquireError {\n    OutOfMemory(device::OutOfMemory),\n    NotReady {\n        timeout: bool,\n    },\n    OutOfDate(OutOfDate),\n    SurfaceLost(SurfaceLost),\n    DeviceLost(device::DeviceLost),\n}","parent":null,"children":[{"krate":0,"index":11018},{"krate":0,"index":11021},{"krate":0,"index":11023},{"krate":0,"index":11026},{"krate":0,"index":11029}],"decl_id":null,"docs":" Error on acquiring the next image from a swapchain.\n","sig":null,"attributes":[{"value":"/ Error on acquiring the next image from a swapchain.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":235204,"byte_end":235259,"line_start":426,"line_end":426,"column_start":1,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11056},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":236221,"byte_end":236232,"line_start":454,"line_end":454,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::window::PresentError::OutOfMemory","value":"PresentError::OutOfMemory(device::OutOfMemory)","parent":{"krate":0,"index":11032},"children":[],"decl_id":null,"docs":" Out of either host or device memory.\n","sig":null,"attributes":[{"value":"/ Out of either host or device memory.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":236150,"byte_end":236190,"line_start":452,"line_end":452,"column_start":5,"column_end":45}},{"value":"error(transparent)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":236195,"byte_end":236216,"line_start":453,"line_end":453,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11059},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":236378,"byte_end":236387,"line_start":457,"line_end":457,"column_start":5,"column_end":14},"name":"OutOfDate","qualname":"::window::PresentError::OutOfDate","value":"PresentError::OutOfDate(OutOfDate)","parent":{"krate":0,"index":11032},"children":[],"decl_id":null,"docs":" The swapchain is no longer in sync with the surface, needs to be re-created.\n","sig":null,"attributes":[{"value":"/ The swapchain is no longer in sync with the surface, needs to be re-created.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":236267,"byte_end":236347,"line_start":455,"line_end":455,"column_start":5,"column_end":85}},{"value":"error(transparent)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":236352,"byte_end":236373,"line_start":456,"line_end":456,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11062},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":236507,"byte_end":236518,"line_start":460,"line_end":460,"column_start":5,"column_end":16},"name":"SurfaceLost","qualname":"::window::PresentError::SurfaceLost","value":"PresentError::SurfaceLost(SurfaceLost)","parent":{"krate":0,"index":11032},"children":[],"decl_id":null,"docs":" The surface was lost, and the swapchain is no longer usable.\n","sig":null,"attributes":[{"value":"/ The surface was lost, and the swapchain is no longer usable.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":236412,"byte_end":236476,"line_start":458,"line_end":458,"column_start":5,"column_end":69}},{"value":"error(transparent)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":236481,"byte_end":236502,"line_start":459,"line_end":459,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11065},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":236594,"byte_end":236604,"line_start":463,"line_end":463,"column_start":5,"column_end":15},"name":"DeviceLost","qualname":"::window::PresentError::DeviceLost","value":"PresentError::DeviceLost(device::DeviceLost)","parent":{"krate":0,"index":11032},"children":[],"decl_id":null,"docs":" Device is lost\n","sig":null,"attributes":[{"value":"/ Device is lost","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":236545,"byte_end":236563,"line_start":461,"line_end":461,"column_start":5,"column_end":23}},{"value":"error(transparent)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":236568,"byte_end":236589,"line_start":462,"line_end":462,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":11032},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":236131,"byte_end":236143,"line_start":451,"line_end":451,"column_start":10,"column_end":22},"name":"PresentError","qualname":"::window::PresentError","value":"pub enum PresentError {\n    OutOfMemory(device::OutOfMemory),\n    OutOfDate(OutOfDate),\n    SurfaceLost(SurfaceLost),\n    DeviceLost(device::DeviceLost),\n}","parent":null,"children":[{"krate":0,"index":11056},{"krate":0,"index":11059},{"krate":0,"index":11062},{"krate":0,"index":11065}],"decl_id":null,"docs":" Error on acquiring the next image from a swapchain.\n","sig":null,"attributes":[{"value":"/ Error on acquiring the next image from a swapchain.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":236013,"byte_end":236068,"line_start":449,"line_end":449,"column_start":1,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11083},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":236879,"byte_end":236902,"line_start":471,"line_end":471,"column_start":5,"column_end":28},"name":"UnsupportedWindowHandle","qualname":"::window::InitError::UnsupportedWindowHandle","value":"InitError::UnsupportedWindowHandle","parent":{"krate":0,"index":11068},"children":[],"decl_id":null,"docs":" Window handle is not supported by the backend.\n","sig":null,"attributes":[{"value":"/ Window handle is not supported by the backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":236769,"byte_end":236819,"line_start":469,"line_end":469,"column_start":5,"column_end":55}},{"value":"error(\"Specified window handle is unsupported\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":236824,"byte_end":236874,"line_start":470,"line_end":470,"column_start":5,"column_end":55}}]},{"kind":"Enum","id":{"krate":0,"index":11068},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":236753,"byte_end":236762,"line_start":468,"line_end":468,"column_start":10,"column_end":19},"name":"InitError","qualname":"::window::InitError","value":"pub enum InitError { UnsupportedWindowHandle, }","parent":null,"children":[{"krate":0,"index":11083}],"decl_id":null,"docs":" Error occurred during surface creation.\n","sig":null,"attributes":[{"value":"/ Error occurred during surface creation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":236637,"byte_end":236680,"line_start":466,"line_end":466,"column_start":1,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":1023},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":2067,"byte_end":2074,"line_start":66,"line_end":66,"column_start":9,"column_end":16},"name":"prelude","qualname":"::prelude","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1028},{"krate":0,"index":1031},{"krate":0,"index":1034},{"krate":0,"index":1037},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1044},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1051},{"krate":0,"index":1054}],"decl_id":null,"docs":" Prelude module re-exports all the traits necessary to use `gfx-hal`.\n","sig":null,"attributes":[{"value":"/ Prelude module re-exports all the traits necessary to use `gfx-hal`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":1986,"byte_end":2058,"line_start":65,"line_end":65,"column_start":1,"column_end":73}}]},{"kind":"Type","id":{"krate":0,"index":1057},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":2395,"byte_end":2406,"line_start":80,"line_end":80,"column_start":10,"column_end":21},"name":"VertexCount","qualname":"::VertexCount","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Draw vertex count.\n","sig":null,"attributes":[{"value":"/ Draw vertex count.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":2363,"byte_end":2385,"line_start":79,"line_end":79,"column_start":1,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":1058},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":2452,"byte_end":2464,"line_start":82,"line_end":82,"column_start":10,"column_end":22},"name":"VertexOffset","qualname":"::VertexOffset","value":"i32","parent":null,"children":[],"decl_id":null,"docs":" Draw vertex base offset.\n","sig":null,"attributes":[{"value":"/ Draw vertex base offset.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":2414,"byte_end":2442,"line_start":81,"line_end":81,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":1059},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":2509,"byte_end":2519,"line_start":84,"line_end":84,"column_start":10,"column_end":20},"name":"IndexCount","qualname":"::IndexCount","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Draw number of indices.\n","sig":null,"attributes":[{"value":"/ Draw number of indices.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":2472,"byte_end":2499,"line_start":83,"line_end":83,"column_start":1,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":1060},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":2566,"byte_end":2579,"line_start":86,"line_end":86,"column_start":10,"column_end":23},"name":"InstanceCount","qualname":"::InstanceCount","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Draw number of instances.\n","sig":null,"attributes":[{"value":"/ Draw number of instances.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":2527,"byte_end":2556,"line_start":85,"line_end":85,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1061},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":2627,"byte_end":2636,"line_start":88,"line_end":88,"column_start":10,"column_end":19},"name":"DrawCount","qualname":"::DrawCount","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Indirect draw calls count.\n","sig":null,"attributes":[{"value":"/ Indirect draw calls count.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":2587,"byte_end":2617,"line_start":87,"line_end":87,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":1062},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":2680,"byte_end":2694,"line_start":90,"line_end":90,"column_start":10,"column_end":24},"name":"WorkGroupCount","qualname":"::WorkGroupCount","value":"[u32; ]","parent":null,"children":[],"decl_id":null,"docs":" Number of work groups.\n","sig":null,"attributes":[{"value":"/ Number of work groups.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":2644,"byte_end":2670,"line_start":89,"line_end":89,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":1064},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":2737,"byte_end":2746,"line_start":92,"line_end":92,"column_start":10,"column_end":19},"name":"TaskCount","qualname":"::TaskCount","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Number of tasks.\n","sig":null,"attributes":[{"value":"/ Number of tasks.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":2707,"byte_end":2727,"line_start":91,"line_end":91,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":11085},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":3244,"byte_end":3252,"line_start":104,"line_end":104,"column_start":16,"column_end":24},"name":"Features","qualname":"::Features","value":"Features {  }","parent":null,"children":[{"krate":0,"index":11086}],"decl_id":null,"docs":" Features that the device supports.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11192},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":3331,"byte_end":3340,"line_start":106,"line_end":106,"column_start":15,"column_end":24},"name":"CORE_MASK","qualname":"::Features::CORE_MASK","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Bit mask of Vulkan Core/Extension features.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11193},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":3433,"byte_end":3449,"line_start":108,"line_end":108,"column_start":15,"column_end":31},"name":"PORTABILITY_MASK","qualname":"::Features::PORTABILITY_MASK","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Bit mask of Vulkan Portability features.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11194},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":3548,"byte_end":3559,"line_start":110,"line_end":110,"column_start":15,"column_end":26},"name":"WEBGPU_MASK","qualname":"::Features::WEBGPU_MASK","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Bit mask for extra WebGPU features.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11195},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":3650,"byte_end":3665,"line_start":112,"line_end":112,"column_start":15,"column_end":30},"name":"EXTENSIONS_MASK","qualname":"::Features::EXTENSIONS_MASK","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Bit mask for all extensions.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11196},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":3864,"byte_end":3884,"line_start":116,"line_end":116,"column_start":15,"column_end":35},"name":"ROBUST_BUFFER_ACCESS","qualname":"::Features::ROBUST_BUFFER_ACCESS","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Support for robust buffer access.\n Buffer access by SPIR-V shaders is checked against the buffer/image boundaries.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11197},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":4096,"byte_end":4115,"line_start":119,"line_end":119,"column_start":15,"column_end":34},"name":"FULL_DRAW_INDEX_U32","qualname":"::Features::FULL_DRAW_INDEX_U32","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Support the full 32-bit range of indexed for draw calls.\n If not supported, the maximum index value is determined by `Limits::max_draw_index_value`.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11198},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":4199,"byte_end":4215,"line_start":121,"line_end":121,"column_start":15,"column_end":31},"name":"IMAGE_CUBE_ARRAY","qualname":"::Features::IMAGE_CUBE_ARRAY","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Support cube array image views.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11199},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":4356,"byte_end":4376,"line_start":123,"line_end":123,"column_start":15,"column_end":35},"name":"INDEPENDENT_BLENDING","qualname":"::Features::INDEPENDENT_BLENDING","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Support different color blending settings per attachments on graphics pipeline creation.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11200},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":4453,"byte_end":4468,"line_start":125,"line_end":125,"column_start":15,"column_end":30},"name":"GEOMETRY_SHADER","qualname":"::Features::GEOMETRY_SHADER","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Support geometry shader.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11201},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":4550,"byte_end":4569,"line_start":127,"line_end":127,"column_start":15,"column_end":34},"name":"TESSELLATION_SHADER","qualname":"::Features::TESSELLATION_SHADER","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Support tessellation shaders.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11202},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":4679,"byte_end":4698,"line_start":129,"line_end":129,"column_start":15,"column_end":34},"name":"SAMPLE_RATE_SHADING","qualname":"::Features::SAMPLE_RATE_SHADING","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Support per-sample shading and multisample interpolation.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11203},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":4780,"byte_end":4797,"line_start":131,"line_end":131,"column_start":15,"column_end":32},"name":"DUAL_SRC_BLENDING","qualname":"::Features::DUAL_SRC_BLENDING","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Support dual source blending.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11204},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":4875,"byte_end":4883,"line_start":133,"line_end":133,"column_start":15,"column_end":23},"name":"LOGIC_OP","qualname":"::Features::LOGIC_OP","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Support logic operations.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11205},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":4977,"byte_end":4996,"line_start":135,"line_end":135,"column_start":15,"column_end":34},"name":"MULTI_DRAW_INDIRECT","qualname":"::Features::MULTI_DRAW_INDIRECT","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Support multiple draws per indirect call.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11206},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":5169,"byte_end":5197,"line_start":138,"line_end":138,"column_start":15,"column_end":43},"name":"DRAW_INDIRECT_FIRST_INSTANCE","qualname":"::Features::DRAW_INDIRECT_FIRST_INSTANCE","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Support indirect drawing with first instance value.\n If not supported the first instance value **must** be 0.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11207},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":5273,"byte_end":5284,"line_start":140,"line_end":140,"column_start":15,"column_end":26},"name":"DEPTH_CLAMP","qualname":"::Features::DEPTH_CLAMP","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Support depth clamping.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11208},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":5365,"byte_end":5381,"line_start":142,"line_end":142,"column_start":15,"column_end":31},"name":"DEPTH_BIAS_CLAMP","qualname":"::Features::DEPTH_BIAS_CLAMP","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Support depth bias clamping.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11209},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":5465,"byte_end":5486,"line_start":144,"line_end":144,"column_start":15,"column_end":36},"name":"NON_FILL_POLYGON_MODE","qualname":"::Features::NON_FILL_POLYGON_MODE","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Support non-fill polygon modes.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11210},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":5565,"byte_end":5577,"line_start":146,"line_end":146,"column_start":15,"column_end":27},"name":"DEPTH_BOUNDS","qualname":"::Features::DEPTH_BOUNDS","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Support depth bounds test.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11211},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":5670,"byte_end":5680,"line_start":148,"line_end":148,"column_start":15,"column_end":25},"name":"LINE_WIDTH","qualname":"::Features::LINE_WIDTH","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Support lines with width other than 1.0.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11212},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":5775,"byte_end":5785,"line_start":150,"line_end":150,"column_start":15,"column_end":25},"name":"POINT_SIZE","qualname":"::Features::POINT_SIZE","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Support points with size greater than 1.0.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11213},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":5878,"byte_end":5890,"line_start":152,"line_end":152,"column_start":15,"column_end":27},"name":"ALPHA_TO_ONE","qualname":"::Features::ALPHA_TO_ONE","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Support replacing alpha values with 1.0.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11214},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":5983,"byte_end":5998,"line_start":154,"line_end":154,"column_start":15,"column_end":30},"name":"MULTI_VIEWPORTS","qualname":"::Features::MULTI_VIEWPORTS","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Support multiple viewports and scissors.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11215},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":6081,"byte_end":6099,"line_start":156,"line_end":156,"column_start":15,"column_end":33},"name":"SAMPLER_ANISOTROPY","qualname":"::Features::SAMPLER_ANISOTROPY","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Support anisotropic filtering.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11216},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":6193,"byte_end":6204,"line_start":158,"line_end":158,"column_start":15,"column_end":26},"name":"FORMAT_ETC2","qualname":"::Features::FORMAT_ETC2","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Support ETC2 texture compression formats.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11217},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":6304,"byte_end":6319,"line_start":160,"line_end":160,"column_start":15,"column_end":30},"name":"FORMAT_ASTC_LDR","qualname":"::Features::FORMAT_ASTC_LDR","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Support ASTC (LDR) texture compression formats.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11218},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":6411,"byte_end":6420,"line_start":162,"line_end":162,"column_start":15,"column_end":24},"name":"FORMAT_BC","qualname":"::Features::FORMAT_BC","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Support BC texture compression formats.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11219},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":6646,"byte_end":6669,"line_start":165,"line_end":165,"column_start":15,"column_end":38},"name":"PRECISE_OCCLUSION_QUERY","qualname":"::Features::PRECISE_OCCLUSION_QUERY","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Support precise occlusion queries, returning the actual number of samples.\n If not supported, queries return a non-zero value when at least **one** sample passes.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11220},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":6759,"byte_end":6784,"line_start":167,"line_end":167,"column_start":15,"column_end":40},"name":"PIPELINE_STATISTICS_QUERY","qualname":"::Features::PIPELINE_STATISTICS_QUERY","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Support query of pipeline statistics.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11221},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":7037,"byte_end":7062,"line_start":171,"line_end":171,"column_start":15,"column_end":40},"name":"VERTEX_STORES_AND_ATOMICS","qualname":"::Features::VERTEX_STORES_AND_ATOMICS","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Support unordered access stores and atomic ops in the vertex, geometry\n and tessellation shader stage.\n If not supported, the shader resources **must** be annotated as read-only.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11222},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":7277,"byte_end":7304,"line_start":174,"line_end":174,"column_start":15,"column_end":42},"name":"FRAGMENT_STORES_AND_ATOMICS","qualname":"::Features::FRAGMENT_STORES_AND_ATOMICS","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Support unordered access stores and atomic ops in the fragment shader stage\n If not supported, the shader resources **must** be annotated as read-only.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11223},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":7356,"byte_end":7399,"line_start":176,"line_end":176,"column_start":15,"column_end":58},"name":"SHADER_TESSELLATION_AND_GEOMETRY_POINT_SIZE","qualname":"::Features::SHADER_TESSELLATION_AND_GEOMETRY_POINT_SIZE","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11224},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":7451,"byte_end":7479,"line_start":178,"line_end":178,"column_start":15,"column_end":43},"name":"SHADER_IMAGE_GATHER_EXTENDED","qualname":"::Features::SHADER_IMAGE_GATHER_EXTENDED","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11225},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":7531,"byte_end":7568,"line_start":180,"line_end":180,"column_start":15,"column_end":52},"name":"SHADER_STORAGE_IMAGE_EXTENDED_FORMATS","qualname":"::Features::SHADER_STORAGE_IMAGE_EXTENDED_FORMATS","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11226},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":7620,"byte_end":7652,"line_start":182,"line_end":182,"column_start":15,"column_end":47},"name":"SHADER_STORAGE_IMAGE_MULTISAMPLE","qualname":"::Features::SHADER_STORAGE_IMAGE_MULTISAMPLE","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11227},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":7704,"byte_end":7744,"line_start":184,"line_end":184,"column_start":15,"column_end":55},"name":"SHADER_STORAGE_IMAGE_READ_WITHOUT_FORMAT","qualname":"::Features::SHADER_STORAGE_IMAGE_READ_WITHOUT_FORMAT","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11228},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":7796,"byte_end":7837,"line_start":186,"line_end":186,"column_start":15,"column_end":56},"name":"SHADER_STORAGE_IMAGE_WRITE_WITHOUT_FORMAT","qualname":"::Features::SHADER_STORAGE_IMAGE_WRITE_WITHOUT_FORMAT","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11229},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":7889,"byte_end":7933,"line_start":188,"line_end":188,"column_start":15,"column_end":59},"name":"SHADER_UNIFORM_BUFFER_ARRAY_DYNAMIC_INDEXING","qualname":"::Features::SHADER_UNIFORM_BUFFER_ARRAY_DYNAMIC_INDEXING","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11230},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":7985,"byte_end":8028,"line_start":190,"line_end":190,"column_start":15,"column_end":58},"name":"SHADER_SAMPLED_IMAGE_ARRAY_DYNAMIC_INDEXING","qualname":"::Features::SHADER_SAMPLED_IMAGE_ARRAY_DYNAMIC_INDEXING","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11231},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":8080,"byte_end":8124,"line_start":192,"line_end":192,"column_start":15,"column_end":59},"name":"SHADER_STORAGE_BUFFER_ARRAY_DYNAMIC_INDEXING","qualname":"::Features::SHADER_STORAGE_BUFFER_ARRAY_DYNAMIC_INDEXING","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11232},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":8176,"byte_end":8219,"line_start":194,"line_end":194,"column_start":15,"column_end":58},"name":"SHADER_STORAGE_IMAGE_ARRAY_DYNAMIC_INDEXING","qualname":"::Features::SHADER_STORAGE_IMAGE_ARRAY_DYNAMIC_INDEXING","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11233},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":8271,"byte_end":8291,"line_start":196,"line_end":196,"column_start":15,"column_end":35},"name":"SHADER_CLIP_DISTANCE","qualname":"::Features::SHADER_CLIP_DISTANCE","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11234},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":8343,"byte_end":8363,"line_start":198,"line_end":198,"column_start":15,"column_end":35},"name":"SHADER_CULL_DISTANCE","qualname":"::Features::SHADER_CULL_DISTANCE","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11235},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":8415,"byte_end":8429,"line_start":200,"line_end":200,"column_start":15,"column_end":29},"name":"SHADER_FLOAT64","qualname":"::Features::SHADER_FLOAT64","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11236},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":8481,"byte_end":8493,"line_start":202,"line_end":202,"column_start":15,"column_end":27},"name":"SHADER_INT64","qualname":"::Features::SHADER_INT64","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11237},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":8545,"byte_end":8557,"line_start":204,"line_end":204,"column_start":15,"column_end":27},"name":"SHADER_INT16","qualname":"::Features::SHADER_INT16","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11238},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":8609,"byte_end":8634,"line_start":206,"line_end":206,"column_start":15,"column_end":40},"name":"SHADER_RESOURCE_RESIDENCY","qualname":"::Features::SHADER_RESOURCE_RESIDENCY","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11239},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":8686,"byte_end":8709,"line_start":208,"line_end":208,"column_start":15,"column_end":38},"name":"SHADER_RESOURCE_MIN_LOD","qualname":"::Features::SHADER_RESOURCE_MIN_LOD","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11240},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":8761,"byte_end":8775,"line_start":210,"line_end":210,"column_start":15,"column_end":29},"name":"SPARSE_BINDING","qualname":"::Features::SPARSE_BINDING","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11241},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":8827,"byte_end":8850,"line_start":212,"line_end":212,"column_start":15,"column_end":38},"name":"SPARSE_RESIDENCY_BUFFER","qualname":"::Features::SPARSE_RESIDENCY_BUFFER","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11242},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":8902,"byte_end":8927,"line_start":214,"line_end":214,"column_start":15,"column_end":40},"name":"SPARSE_RESIDENCY_IMAGE_2D","qualname":"::Features::SPARSE_RESIDENCY_IMAGE_2D","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11243},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":8979,"byte_end":9004,"line_start":216,"line_end":216,"column_start":15,"column_end":40},"name":"SPARSE_RESIDENCY_IMAGE_3D","qualname":"::Features::SPARSE_RESIDENCY_IMAGE_3D","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11244},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":9056,"byte_end":9082,"line_start":218,"line_end":218,"column_start":15,"column_end":41},"name":"SPARSE_RESIDENCY_2_SAMPLES","qualname":"::Features::SPARSE_RESIDENCY_2_SAMPLES","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11245},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":9134,"byte_end":9160,"line_start":220,"line_end":220,"column_start":15,"column_end":41},"name":"SPARSE_RESIDENCY_4_SAMPLES","qualname":"::Features::SPARSE_RESIDENCY_4_SAMPLES","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11246},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":9212,"byte_end":9238,"line_start":222,"line_end":222,"column_start":15,"column_end":41},"name":"SPARSE_RESIDENCY_8_SAMPLES","qualname":"::Features::SPARSE_RESIDENCY_8_SAMPLES","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11247},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":9290,"byte_end":9317,"line_start":224,"line_end":224,"column_start":15,"column_end":42},"name":"SPARSE_RESIDENCY_16_SAMPLES","qualname":"::Features::SPARSE_RESIDENCY_16_SAMPLES","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11248},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":9369,"byte_end":9393,"line_start":226,"line_end":226,"column_start":15,"column_end":39},"name":"SPARSE_RESIDENCY_ALIASED","qualname":"::Features::SPARSE_RESIDENCY_ALIASED","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11249},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":9445,"byte_end":9470,"line_start":228,"line_end":228,"column_start":15,"column_end":40},"name":"VARIABLE_MULTISAMPLE_RATE","qualname":"::Features::VARIABLE_MULTISAMPLE_RATE","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11250},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":9522,"byte_end":9539,"line_start":230,"line_end":230,"column_start":15,"column_end":32},"name":"INHERITED_QUERIES","qualname":"::Features::INHERITED_QUERIES","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11251},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":9633,"byte_end":9657,"line_start":232,"line_end":232,"column_start":15,"column_end":39},"name":"TEXTURE_DESCRIPTOR_ARRAY","qualname":"::Features::TEXTURE_DESCRIPTOR_ARRAY","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Support for arrays of texture descriptors\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11252},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":9721,"byte_end":9746,"line_start":234,"line_end":234,"column_start":15,"column_end":40},"name":"SAMPLER_MIRROR_CLAMP_EDGE","qualname":"::Features::SAMPLER_MIRROR_CLAMP_EDGE","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Support for\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11253},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":9881,"byte_end":9916,"line_start":236,"line_end":236,"column_start":15,"column_end":50},"name":"SAMPLED_TEXTURE_DESCRIPTOR_INDEXING","qualname":"::Features::SAMPLED_TEXTURE_DESCRIPTOR_INDEXING","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Allow indexing sampled texture descriptor arrays with dynamically non-uniform data\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11254},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":10051,"byte_end":10086,"line_start":238,"line_end":238,"column_start":15,"column_end":50},"name":"STORAGE_TEXTURE_DESCRIPTOR_INDEXING","qualname":"::Features::STORAGE_TEXTURE_DESCRIPTOR_INDEXING","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Allow indexing storage texture descriptor arrays with dynamically non-uniform data\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11255},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":10187,"byte_end":10211,"line_start":240,"line_end":240,"column_start":15,"column_end":39},"name":"UNSIZED_DESCRIPTOR_ARRAY","qualname":"::Features::UNSIZED_DESCRIPTOR_ARRAY","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Allow descriptor arrays to be unsized in shaders\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11256},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":10322,"byte_end":10341,"line_start":242,"line_end":242,"column_start":15,"column_end":34},"name":"DRAW_INDIRECT_COUNT","qualname":"::Features::DRAW_INDIRECT_COUNT","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Enable draw_indirect_count and draw_indexed_indirect_count\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11257},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":10435,"byte_end":10447,"line_start":245,"line_end":245,"column_start":15,"column_end":27},"name":"TRIANGLE_FAN","qualname":"::Features::TRIANGLE_FAN","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Support triangle fan primitive topology.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11258},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":10558,"byte_end":10585,"line_start":247,"line_end":247,"column_start":15,"column_end":42},"name":"SEPARATE_STENCIL_REF_VALUES","qualname":"::Features::SEPARATE_STENCIL_REF_VALUES","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Support separate stencil reference values for front and back sides.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11259},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":10690,"byte_end":10703,"line_start":249,"line_end":249,"column_start":15,"column_end":28},"name":"INSTANCE_RATE","qualname":"::Features::INSTANCE_RATE","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Support manually specified vertex attribute rates (divisors).\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11260},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":10788,"byte_end":10808,"line_start":251,"line_end":251,"column_start":15,"column_end":35},"name":"SAMPLER_MIP_LOD_BIAS","qualname":"::Features::SAMPLER_MIP_LOD_BIAS","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Support non-zero mipmap bias on samplers.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11261},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":10900,"byte_end":10920,"line_start":253,"line_end":253,"column_start":15,"column_end":35},"name":"SAMPLER_BORDER_COLOR","qualname":"::Features::SAMPLER_BORDER_COLOR","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Support sampler wrap mode that clamps to border.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11262},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":11022,"byte_end":11048,"line_start":255,"line_end":255,"column_start":15,"column_end":41},"name":"MUTABLE_COMPARISON_SAMPLER","qualname":"::Features::MUTABLE_COMPARISON_SAMPLER","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Can create comparison samplers in regular descriptor sets.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11263},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":11154,"byte_end":11182,"line_start":257,"line_end":257,"column_start":15,"column_end":43},"name":"MUTABLE_UNNORMALIZED_SAMPLER","qualname":"::Features::MUTABLE_UNNORMALIZED_SAMPLER","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Can create non-normalized samplers in regular descriptor sets.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11264},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":11296,"byte_end":11304,"line_start":260,"line_end":260,"column_start":15,"column_end":23},"name":"NDC_Y_UP","qualname":"::Features::NDC_Y_UP","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Make the NDC coordinate system pointing Y up, to match D3D and Metal.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11265},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":11376,"byte_end":11387,"line_start":263,"line_end":263,"column_start":15,"column_end":26},"name":"TASK_SHADER","qualname":"::Features::TASK_SHADER","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Supports task shader stage.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11266},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":11458,"byte_end":11469,"line_start":265,"line_end":265,"column_start":15,"column_end":26},"name":"MESH_SHADER","qualname":"::Features::MESH_SHADER","value":"Features","parent":{"krate":0,"index":11191},"children":[],"decl_id":null,"docs":" Supports mesh shader stage.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11539},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":11728,"byte_end":11746,"line_start":274,"line_end":274,"column_start":16,"column_end":34},"name":"PerformanceCaveats","qualname":"::PerformanceCaveats","value":"PerformanceCaveats {  }","parent":null,"children":[{"krate":0,"index":11540}],"decl_id":null,"docs":" Features that the device doesn't support natively, but is able to emulate\n at some performance cost.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11572},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":11846,"byte_end":11874,"line_start":276,"line_end":276,"column_start":15,"column_end":43},"name":"BASE_VERTEX_INSTANCE_DRAWING","qualname":"::PerformanceCaveats::BASE_VERTEX_INSTANCE_DRAWING","value":"PerformanceCaveats","parent":{"krate":0,"index":11571},"children":[],"decl_id":null,"docs":" Emulate indexed, instanced drawing with base vertex and instance.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11623},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":12044,"byte_end":12057,"line_start":284,"line_end":284,"column_start":16,"column_end":29},"name":"DynamicStates","qualname":"::DynamicStates","value":"DynamicStates {  }","parent":null,"children":[{"krate":0,"index":11624}],"decl_id":null,"docs":" Dynamic pipeline states.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11664},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":12132,"byte_end":12140,"line_start":286,"line_end":286,"column_start":15,"column_end":23},"name":"VIEWPORT","qualname":"::DynamicStates::VIEWPORT","value":"DynamicStates","parent":{"krate":0,"index":11663},"children":[],"decl_id":null,"docs":" Supports `BakedStates::viewport == None`\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11665},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":12217,"byte_end":12224,"line_start":288,"line_end":288,"column_start":15,"column_end":22},"name":"SCISSOR","qualname":"::DynamicStates::SCISSOR","value":"DynamicStates","parent":{"krate":0,"index":11663},"children":[],"decl_id":null,"docs":" Supports `BakedStates::scissor == None`\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11666},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":12316,"byte_end":12326,"line_start":290,"line_end":290,"column_start":15,"column_end":25},"name":"LINE_WIDTH","qualname":"::DynamicStates::LINE_WIDTH","value":"DynamicStates","parent":{"krate":0,"index":11663},"children":[],"decl_id":null,"docs":" Supports `Rasterizer::line_width == State::Dynamic(_)`\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11667},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":12407,"byte_end":12418,"line_start":292,"line_end":292,"column_start":15,"column_end":26},"name":"BLEND_COLOR","qualname":"::DynamicStates::BLEND_COLOR","value":"DynamicStates","parent":{"krate":0,"index":11663},"children":[],"decl_id":null,"docs":" Supports `BakedStates::blend_color == None`\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11668},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":12516,"byte_end":12526,"line_start":294,"line_end":294,"column_start":15,"column_end":25},"name":"DEPTH_BIAS","qualname":"::DynamicStates::DEPTH_BIAS","value":"DynamicStates","parent":{"krate":0,"index":11663},"children":[],"decl_id":null,"docs":" Supports `Rasterizer::depth_bias == Some(State::Dynamic(_))`\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11669},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":12608,"byte_end":12620,"line_start":296,"line_end":296,"column_start":15,"column_end":27},"name":"DEPTH_BOUNDS","qualname":"::DynamicStates::DEPTH_BOUNDS","value":"DynamicStates","parent":{"krate":0,"index":11663},"children":[],"decl_id":null,"docs":" Supports `BakedStates::depth_bounds == None`\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11670},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":12713,"byte_end":12730,"line_start":298,"line_end":298,"column_start":15,"column_end":32},"name":"STENCIL_READ_MASK","qualname":"::DynamicStates::STENCIL_READ_MASK","value":"DynamicStates","parent":{"krate":0,"index":11663},"children":[],"decl_id":null,"docs":" Supports `StencilTest::read_masks == State::Dynamic(_)`\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11671},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":12824,"byte_end":12842,"line_start":300,"line_end":300,"column_start":15,"column_end":33},"name":"STENCIL_WRITE_MASK","qualname":"::DynamicStates::STENCIL_WRITE_MASK","value":"DynamicStates","parent":{"krate":0,"index":11663},"children":[],"decl_id":null,"docs":" Supports `StencilTest::write_masks == State::Dynamic(_)`\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":11672},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":12941,"byte_end":12958,"line_start":302,"line_end":302,"column_start":15,"column_end":32},"name":"STENCIL_REFERENCE","qualname":"::DynamicStates::STENCIL_REFERENCE","value":"DynamicStates","parent":{"krate":0,"index":11663},"children":[],"decl_id":null,"docs":" Supports `StencilTest::reference_values == State::Dynamic(_)`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11745},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":13246,"byte_end":13258,"line_start":311,"line_end":311,"column_start":12,"column_end":24},"name":"Capabilities","qualname":"::Capabilities","value":"Capabilities { performance_caveats, dynamic_pipeline_states }","parent":null,"children":[{"krate":0,"index":11746},{"krate":0,"index":11747}],"decl_id":null,"docs":" Capabilities of physical devices that are exposed but\n do not need to be explicitly opted into.\n","sig":null,"attributes":[{"value":"/ Capabilities of physical devices that are exposed but","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":12978,"byte_end":13035,"line_start":306,"line_end":306,"column_start":1,"column_end":58}},{"value":"/ do not need to be explicitly opted into.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":13036,"byte_end":13080,"line_start":307,"line_end":307,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":11746},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":13298,"byte_end":13317,"line_start":313,"line_end":313,"column_start":9,"column_end":28},"name":"performance_caveats","qualname":"::Capabilities::performance_caveats","value":"PerformanceCaveats","parent":{"krate":0,"index":11745},"children":[],"decl_id":null,"docs":" Performance caveats.\n","sig":null,"attributes":[{"value":"/ Performance caveats.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":13265,"byte_end":13289,"line_start":312,"line_end":312,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":11747},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":13380,"byte_end":13403,"line_start":315,"line_end":315,"column_start":9,"column_end":32},"name":"dynamic_pipeline_states","qualname":"::Capabilities::dynamic_pipeline_states","value":"DynamicStates","parent":{"krate":0,"index":11745},"children":[],"decl_id":null,"docs":" Dynamic pipeline states.\n","sig":null,"attributes":[{"value":"/ Dynamic pipeline states.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":13343,"byte_end":13371,"line_start":314,"line_end":314,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":11759},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":13600,"byte_end":13606,"line_start":321,"line_end":321,"column_start":12,"column_end":18},"name":"Limits","qualname":"::Limits","value":"Limits { max_image_1d_size, max_image_2d_size, max_image_3d_size, max_image_cube_size, max_image_array_layers, max_texel_elements, max_uniform_buffer_range, max_storage_buffer_range, max_push_constants_size, max_memory_allocation_count, max_sampler_allocation_count, max_bound_descriptor_sets, max_framebuffer_layers, max_per_stage_descriptor_samplers, max_per_stage_descriptor_uniform_buffers, max_per_stage_descriptor_storage_buffers, max_per_stage_descriptor_sampled_images, max_per_stage_descriptor_storage_images, max_per_stage_descriptor_input_attachments, max_per_stage_resources, max_descriptor_set_samplers, max_descriptor_set_uniform_buffers, max_descriptor_set_uniform_buffers_dynamic, max_descriptor_set_storage_buffers, max_descriptor_set_storage_buffers_dynamic, max_descriptor_set_sampled_images, max_descriptor_set_storage_images, max_descriptor_set_input_attachments, max_vertex_input_attributes, max_vertex_input_bindings, max_vertex_input_attribute_offset, max_vertex_input_binding_stride, max_vertex_output_components, max_patch_size, max_geometry_shader_invocations, max_geometry_input_components, max_geometry_output_components, max_geometry_output_vertices, max_geometry_total_output_components, max_fragment_input_components, max_fragment_output_attachments, max_fragment_dual_source_attachments, max_fragment_combined_output_resources, max_compute_shared_memory_size, max_compute_work_group_count, max_compute_work_group_invocations, max_compute_work_group_size, max_draw_indexed_index_value, max_draw_indirect_count, max_sampler_lod_bias, max_sampler_anisotropy, max_viewports, max_viewport_dimensions, max_framebuffer_extent, min_memory_map_alignment, buffer_image_granularity, min_texel_buffer_offset_alignment, min_uniform_buffer_offset_alignment, min_storage_buffer_offset_alignment, framebuffer_color_sample_counts, framebuffer_depth_sample_counts, framebuffer_stencil_sample_counts, timestamp_compute_and_graphics, timestamp_period, max_color_attachments, standard_sample_locations, optimal_buffer_copy_offset_alignment, optimal_buffer_copy_pitch_alignment, non_coherent_atom_size, min_vertex_input_binding_stride_alignment, max_draw_mesh_tasks_count, max_task_work_group_invocations, max_task_work_group_size, max_task_total_memory_size, max_task_output_count, max_mesh_work_group_invocations, max_mesh_work_group_size, max_mesh_total_memory_size, max_mesh_output_vertices, max_mesh_output_primitives, max_mesh_multiview_view_count, mesh_output_per_vertex_granularity, mesh_output_per_primitive_granularity }","parent":null,"children":[{"krate":0,"index":11760},{"krate":0,"index":11761},{"krate":0,"index":11762},{"krate":0,"index":11763},{"krate":0,"index":11764},{"krate":0,"index":11765},{"krate":0,"index":11766},{"krate":0,"index":11767},{"krate":0,"index":11768},{"krate":0,"index":11769},{"krate":0,"index":11770},{"krate":0,"index":11771},{"krate":0,"index":11772},{"krate":0,"index":11773},{"krate":0,"index":11774},{"krate":0,"index":11775},{"krate":0,"index":11776},{"krate":0,"index":11777},{"krate":0,"index":11778},{"krate":0,"index":11779},{"krate":0,"index":11780},{"krate":0,"index":11781},{"krate":0,"index":11782},{"krate":0,"index":11783},{"krate":0,"index":11784},{"krate":0,"index":11785},{"krate":0,"index":11786},{"krate":0,"index":11787},{"krate":0,"index":11788},{"krate":0,"index":11789},{"krate":0,"index":11790},{"krate":0,"index":11791},{"krate":0,"index":11792},{"krate":0,"index":11793},{"krate":0,"index":11794},{"krate":0,"index":11795},{"krate":0,"index":11796},{"krate":0,"index":11797},{"krate":0,"index":11798},{"krate":0,"index":11799},{"krate":0,"index":11800},{"krate":0,"index":11801},{"krate":0,"index":11802},{"krate":0,"index":11803},{"krate":0,"index":11804},{"krate":0,"index":11805},{"krate":0,"index":11806},{"krate":0,"index":11808},{"krate":0,"index":11809},{"krate":0,"index":11810},{"krate":0,"index":11811},{"krate":0,"index":11812},{"krate":0,"index":11813},{"krate":0,"index":11815},{"krate":0,"index":11816},{"krate":0,"index":11817},{"krate":0,"index":11818},{"krate":0,"index":11819},{"krate":0,"index":11820},{"krate":0,"index":11821},{"krate":0,"index":11822},{"krate":0,"index":11823},{"krate":0,"index":11824},{"krate":0,"index":11825},{"krate":0,"index":11826},{"krate":0,"index":11827},{"krate":0,"index":11828},{"krate":0,"index":11829},{"krate":0,"index":11830},{"krate":0,"index":11831},{"krate":0,"index":11832},{"krate":0,"index":11833},{"krate":0,"index":11834},{"krate":0,"index":11836},{"krate":0,"index":11837},{"krate":0,"index":11838},{"krate":0,"index":11839},{"krate":0,"index":11841},{"krate":0,"index":11842},{"krate":0,"index":11843},{"krate":0,"index":11844},{"krate":0,"index":11845},{"krate":0,"index":11846}],"decl_id":null,"docs":" Resource limits of a particular graphics device.\n","sig":null,"attributes":[{"value":"/ Resource limits of a particular graphics device.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":13423,"byte_end":13475,"line_start":318,"line_end":318,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":11760},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":13658,"byte_end":13675,"line_start":323,"line_end":323,"column_start":9,"column_end":26},"name":"max_image_1d_size","qualname":"::Limits::max_image_1d_size","value":"u32","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" Maximum supported image 1D size.\n","sig":null,"attributes":[{"value":"/ Maximum supported image 1D size.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":13613,"byte_end":13649,"line_start":322,"line_end":322,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":11761},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":13739,"byte_end":13756,"line_start":325,"line_end":325,"column_start":9,"column_end":26},"name":"max_image_2d_size","qualname":"::Limits::max_image_2d_size","value":"u32","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" Maximum supported image 2D size.\n","sig":null,"attributes":[{"value":"/ Maximum supported image 2D size.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":13694,"byte_end":13730,"line_start":324,"line_end":324,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":11762},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":13820,"byte_end":13837,"line_start":327,"line_end":327,"column_start":9,"column_end":26},"name":"max_image_3d_size","qualname":"::Limits::max_image_3d_size","value":"u32","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" Maximum supported image 3D size.\n","sig":null,"attributes":[{"value":"/ Maximum supported image 3D size.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":13775,"byte_end":13811,"line_start":326,"line_end":326,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":11763},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":13903,"byte_end":13922,"line_start":329,"line_end":329,"column_start":9,"column_end":28},"name":"max_image_cube_size","qualname":"::Limits::max_image_cube_size","value":"u32","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" Maximum supported image cube size.\n","sig":null,"attributes":[{"value":"/ Maximum supported image cube size.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":13856,"byte_end":13894,"line_start":328,"line_end":328,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":11764},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":13989,"byte_end":14011,"line_start":331,"line_end":331,"column_start":9,"column_end":31},"name":"max_image_array_layers","qualname":"::Limits::max_image_array_layers","value":"u16","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" Maximum supporter image array size.\n","sig":null,"attributes":[{"value":"/ Maximum supporter image array size.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":13941,"byte_end":13980,"line_start":330,"line_end":330,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":11765},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":14097,"byte_end":14115,"line_start":333,"line_end":333,"column_start":9,"column_end":27},"name":"max_texel_elements","qualname":"::Limits::max_texel_elements","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" Maximum number of elements for the BufferView to see.\n","sig":null,"attributes":[{"value":"/ Maximum number of elements for the BufferView to see.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":14031,"byte_end":14088,"line_start":332,"line_end":332,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":11766},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":14140,"byte_end":14164,"line_start":335,"line_end":335,"column_start":9,"column_end":33},"name":"max_uniform_buffer_range","qualname":"::Limits::max_uniform_buffer_range","value":"u64","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":14128,"byte_end":14131,"line_start":334,"line_end":334,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11767},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":14198,"byte_end":14222,"line_start":337,"line_end":337,"column_start":9,"column_end":33},"name":"max_storage_buffer_range","qualname":"::Limits::max_storage_buffer_range","value":"u64","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":14186,"byte_end":14189,"line_start":336,"line_end":336,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11768},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":14256,"byte_end":14279,"line_start":339,"line_end":339,"column_start":9,"column_end":32},"name":"max_push_constants_size","qualname":"::Limits::max_push_constants_size","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":14244,"byte_end":14247,"line_start":338,"line_end":338,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11769},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":14304,"byte_end":14331,"line_start":341,"line_end":341,"column_start":9,"column_end":36},"name":"max_memory_allocation_count","qualname":"::Limits::max_memory_allocation_count","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":14292,"byte_end":14295,"line_start":340,"line_end":340,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11770},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":14356,"byte_end":14384,"line_start":343,"line_end":343,"column_start":9,"column_end":37},"name":"max_sampler_allocation_count","qualname":"::Limits::max_sampler_allocation_count","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":14344,"byte_end":14347,"line_start":342,"line_end":342,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11771},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":14409,"byte_end":14434,"line_start":345,"line_end":345,"column_start":9,"column_end":34},"name":"max_bound_descriptor_sets","qualname":"::Limits::max_bound_descriptor_sets","value":"u16","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":14397,"byte_end":14400,"line_start":344,"line_end":344,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11772},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":14477,"byte_end":14499,"line_start":347,"line_end":347,"column_start":9,"column_end":31},"name":"max_framebuffer_layers","qualname":"::Limits::max_framebuffer_layers","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":14465,"byte_end":14468,"line_start":346,"line_end":346,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11773},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":14524,"byte_end":14557,"line_start":349,"line_end":349,"column_start":9,"column_end":42},"name":"max_per_stage_descriptor_samplers","qualname":"::Limits::max_per_stage_descriptor_samplers","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":14512,"byte_end":14515,"line_start":348,"line_end":348,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11774},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":14582,"byte_end":14622,"line_start":351,"line_end":351,"column_start":9,"column_end":49},"name":"max_per_stage_descriptor_uniform_buffers","qualname":"::Limits::max_per_stage_descriptor_uniform_buffers","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":14570,"byte_end":14573,"line_start":350,"line_end":350,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11775},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":14647,"byte_end":14687,"line_start":353,"line_end":353,"column_start":9,"column_end":49},"name":"max_per_stage_descriptor_storage_buffers","qualname":"::Limits::max_per_stage_descriptor_storage_buffers","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":14635,"byte_end":14638,"line_start":352,"line_end":352,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11776},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":14712,"byte_end":14751,"line_start":355,"line_end":355,"column_start":9,"column_end":48},"name":"max_per_stage_descriptor_sampled_images","qualname":"::Limits::max_per_stage_descriptor_sampled_images","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":14700,"byte_end":14703,"line_start":354,"line_end":354,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11777},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":14776,"byte_end":14815,"line_start":357,"line_end":357,"column_start":9,"column_end":48},"name":"max_per_stage_descriptor_storage_images","qualname":"::Limits::max_per_stage_descriptor_storage_images","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":14764,"byte_end":14767,"line_start":356,"line_end":356,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11778},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":14840,"byte_end":14882,"line_start":359,"line_end":359,"column_start":9,"column_end":51},"name":"max_per_stage_descriptor_input_attachments","qualname":"::Limits::max_per_stage_descriptor_input_attachments","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":14828,"byte_end":14831,"line_start":358,"line_end":358,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11779},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":14907,"byte_end":14930,"line_start":361,"line_end":361,"column_start":9,"column_end":32},"name":"max_per_stage_resources","qualname":"::Limits::max_per_stage_resources","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":14895,"byte_end":14898,"line_start":360,"line_end":360,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11780},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":14956,"byte_end":14983,"line_start":364,"line_end":364,"column_start":9,"column_end":36},"name":"max_descriptor_set_samplers","qualname":"::Limits::max_descriptor_set_samplers","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":14944,"byte_end":14947,"line_start":363,"line_end":363,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11781},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":15008,"byte_end":15042,"line_start":366,"line_end":366,"column_start":9,"column_end":43},"name":"max_descriptor_set_uniform_buffers","qualname":"::Limits::max_descriptor_set_uniform_buffers","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":14996,"byte_end":14999,"line_start":365,"line_end":365,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11782},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":15067,"byte_end":15109,"line_start":368,"line_end":368,"column_start":9,"column_end":51},"name":"max_descriptor_set_uniform_buffers_dynamic","qualname":"::Limits::max_descriptor_set_uniform_buffers_dynamic","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":15055,"byte_end":15058,"line_start":367,"line_end":367,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11783},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":15134,"byte_end":15168,"line_start":370,"line_end":370,"column_start":9,"column_end":43},"name":"max_descriptor_set_storage_buffers","qualname":"::Limits::max_descriptor_set_storage_buffers","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":15122,"byte_end":15125,"line_start":369,"line_end":369,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11784},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":15193,"byte_end":15235,"line_start":372,"line_end":372,"column_start":9,"column_end":51},"name":"max_descriptor_set_storage_buffers_dynamic","qualname":"::Limits::max_descriptor_set_storage_buffers_dynamic","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":15181,"byte_end":15184,"line_start":371,"line_end":371,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11785},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":15260,"byte_end":15293,"line_start":374,"line_end":374,"column_start":9,"column_end":42},"name":"max_descriptor_set_sampled_images","qualname":"::Limits::max_descriptor_set_sampled_images","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":15248,"byte_end":15251,"line_start":373,"line_end":373,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11786},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":15318,"byte_end":15351,"line_start":376,"line_end":376,"column_start":9,"column_end":42},"name":"max_descriptor_set_storage_images","qualname":"::Limits::max_descriptor_set_storage_images","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":15306,"byte_end":15309,"line_start":375,"line_end":375,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11787},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":15376,"byte_end":15412,"line_start":378,"line_end":378,"column_start":9,"column_end":45},"name":"max_descriptor_set_input_attachments","qualname":"::Limits::max_descriptor_set_input_attachments","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":15364,"byte_end":15367,"line_start":377,"line_end":377,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11788},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":15527,"byte_end":15554,"line_start":381,"line_end":381,"column_start":9,"column_end":36},"name":"max_vertex_input_attributes","qualname":"::Limits::max_vertex_input_attributes","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" Maximum number of vertex input attributes that can be specified for a graphics pipeline.\n","sig":null,"attributes":[{"value":"/ Maximum number of vertex input attributes that can be specified for a graphics pipeline.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":15426,"byte_end":15518,"line_start":380,"line_end":380,"column_start":5,"column_end":97}}]},{"kind":"Field","id":{"krate":0,"index":11789},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":15690,"byte_end":15715,"line_start":383,"line_end":383,"column_start":9,"column_end":34},"name":"max_vertex_input_bindings","qualname":"::Limits::max_vertex_input_bindings","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" Maximum number of vertex buffers that can be specified for providing vertex attributes to a graphics pipeline.\n","sig":null,"attributes":[{"value":"/ Maximum number of vertex buffers that can be specified for providing vertex attributes to a graphics pipeline.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":15567,"byte_end":15681,"line_start":382,"line_end":382,"column_start":5,"column_end":119}}]},{"kind":"Field","id":{"krate":0,"index":11790},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":15832,"byte_end":15865,"line_start":385,"line_end":385,"column_start":9,"column_end":42},"name":"max_vertex_input_attribute_offset","qualname":"::Limits::max_vertex_input_attribute_offset","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" Maximum vertex input attribute offset that can be added to the vertex input binding stride.\n","sig":null,"attributes":[{"value":"/ Maximum vertex input attribute offset that can be added to the vertex input binding stride.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":15728,"byte_end":15823,"line_start":384,"line_end":384,"column_start":5,"column_end":100}}]},{"kind":"Field","id":{"krate":0,"index":11791},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":15975,"byte_end":16006,"line_start":387,"line_end":387,"column_start":9,"column_end":40},"name":"max_vertex_input_binding_stride","qualname":"::Limits::max_vertex_input_binding_stride","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" Maximum vertex input binding stride that can be specified in a vertex input binding.\n","sig":null,"attributes":[{"value":"/ Maximum vertex input binding stride that can be specified in a vertex input binding.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":15878,"byte_end":15966,"line_start":386,"line_end":386,"column_start":5,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":11792},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":16120,"byte_end":16148,"line_start":389,"line_end":389,"column_start":9,"column_end":37},"name":"max_vertex_output_components","qualname":"::Limits::max_vertex_output_components","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" Maximum number of components of output variables which can be output by a vertex shader.\n","sig":null,"attributes":[{"value":"/ Maximum number of components of output variables which can be output by a vertex shader.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":16019,"byte_end":16111,"line_start":388,"line_end":388,"column_start":5,"column_end":97}}]},{"kind":"Field","id":{"krate":0,"index":11793},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":16217,"byte_end":16231,"line_start":392,"line_end":392,"column_start":9,"column_end":23},"name":"max_patch_size","qualname":"::Limits::max_patch_size","value":"u8","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" Maximum number of vertices for each patch.\n","sig":null,"attributes":[{"value":"/ Maximum number of vertices for each patch.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":16162,"byte_end":16208,"line_start":391,"line_end":391,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":11794},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":16265,"byte_end":16296,"line_start":394,"line_end":394,"column_start":9,"column_end":40},"name":"max_geometry_shader_invocations","qualname":"::Limits::max_geometry_shader_invocations","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":16253,"byte_end":16256,"line_start":393,"line_end":393,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11795},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":16321,"byte_end":16350,"line_start":396,"line_end":396,"column_start":9,"column_end":38},"name":"max_geometry_input_components","qualname":"::Limits::max_geometry_input_components","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":16309,"byte_end":16312,"line_start":395,"line_end":395,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11796},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":16375,"byte_end":16405,"line_start":398,"line_end":398,"column_start":9,"column_end":39},"name":"max_geometry_output_components","qualname":"::Limits::max_geometry_output_components","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":16363,"byte_end":16366,"line_start":397,"line_end":397,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11797},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":16430,"byte_end":16458,"line_start":400,"line_end":400,"column_start":9,"column_end":37},"name":"max_geometry_output_vertices","qualname":"::Limits::max_geometry_output_vertices","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":16418,"byte_end":16421,"line_start":399,"line_end":399,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11798},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":16483,"byte_end":16519,"line_start":402,"line_end":402,"column_start":9,"column_end":45},"name":"max_geometry_total_output_components","qualname":"::Limits::max_geometry_total_output_components","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":16471,"byte_end":16474,"line_start":401,"line_end":401,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11799},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":16544,"byte_end":16573,"line_start":404,"line_end":404,"column_start":9,"column_end":38},"name":"max_fragment_input_components","qualname":"::Limits::max_fragment_input_components","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":16532,"byte_end":16535,"line_start":403,"line_end":403,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11800},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":16598,"byte_end":16629,"line_start":406,"line_end":406,"column_start":9,"column_end":40},"name":"max_fragment_output_attachments","qualname":"::Limits::max_fragment_output_attachments","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":16586,"byte_end":16589,"line_start":405,"line_end":405,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11801},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":16654,"byte_end":16690,"line_start":408,"line_end":408,"column_start":9,"column_end":45},"name":"max_fragment_dual_source_attachments","qualname":"::Limits::max_fragment_dual_source_attachments","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":16642,"byte_end":16645,"line_start":407,"line_end":407,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11802},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":16715,"byte_end":16753,"line_start":410,"line_end":410,"column_start":9,"column_end":47},"name":"max_fragment_combined_output_resources","qualname":"::Limits::max_fragment_combined_output_resources","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":16703,"byte_end":16706,"line_start":409,"line_end":409,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11803},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":16779,"byte_end":16809,"line_start":413,"line_end":413,"column_start":9,"column_end":39},"name":"max_compute_shared_memory_size","qualname":"::Limits::max_compute_shared_memory_size","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":16767,"byte_end":16770,"line_start":412,"line_end":412,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11804},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":16834,"byte_end":16862,"line_start":415,"line_end":415,"column_start":9,"column_end":37},"name":"max_compute_work_group_count","qualname":"::Limits::max_compute_work_group_count","value":"[u32; 3]","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":16822,"byte_end":16825,"line_start":414,"line_end":414,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11805},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":16896,"byte_end":16930,"line_start":417,"line_end":417,"column_start":9,"column_end":43},"name":"max_compute_work_group_invocations","qualname":"::Limits::max_compute_work_group_invocations","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":16884,"byte_end":16887,"line_start":416,"line_end":416,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11806},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":16955,"byte_end":16982,"line_start":419,"line_end":419,"column_start":9,"column_end":36},"name":"max_compute_work_group_size","qualname":"::Limits::max_compute_work_group_size","value":"[u32; 3]","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":16943,"byte_end":16946,"line_start":418,"line_end":418,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11808},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":17011,"byte_end":17039,"line_start":422,"line_end":422,"column_start":9,"column_end":37},"name":"max_draw_indexed_index_value","qualname":"::Limits::max_draw_indexed_index_value","value":"u32","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":16999,"byte_end":17002,"line_start":421,"line_end":421,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11809},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":17069,"byte_end":17092,"line_start":424,"line_end":424,"column_start":9,"column_end":32},"name":"max_draw_indirect_count","qualname":"::Limits::max_draw_indirect_count","value":"u32","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":17057,"byte_end":17060,"line_start":423,"line_end":423,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11810},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":17126,"byte_end":17146,"line_start":427,"line_end":427,"column_start":9,"column_end":29},"name":"max_sampler_lod_bias","qualname":"::Limits::max_sampler_lod_bias","value":"f32","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":17114,"byte_end":17117,"line_start":426,"line_end":426,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11811},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":17207,"byte_end":17229,"line_start":429,"line_end":429,"column_start":9,"column_end":31},"name":"max_sampler_anisotropy","qualname":"::Limits::max_sampler_anisotropy","value":"f32","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" Maximum degree of sampler anisotropy.\n","sig":null,"attributes":[{"value":"/ Maximum degree of sampler anisotropy.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":17157,"byte_end":17198,"line_start":428,"line_end":428,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":11812},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":17282,"byte_end":17295,"line_start":432,"line_end":432,"column_start":9,"column_end":22},"name":"max_viewports","qualname":"::Limits::max_viewports","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" Maximum number of viewports.\n","sig":null,"attributes":[{"value":"/ Maximum number of viewports.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":17241,"byte_end":17273,"line_start":431,"line_end":431,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":11813},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":17320,"byte_end":17343,"line_start":434,"line_end":434,"column_start":9,"column_end":32},"name":"max_viewport_dimensions","qualname":"::Limits::max_viewport_dimensions","value":"[u32; 2]","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":17308,"byte_end":17311,"line_start":433,"line_end":433,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11815},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":17379,"byte_end":17401,"line_start":436,"line_end":436,"column_start":9,"column_end":31},"name":"max_framebuffer_extent","qualname":"::Limits::max_framebuffer_extent","value":"image::Extent","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":17367,"byte_end":17370,"line_start":435,"line_end":435,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11816},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":17435,"byte_end":17459,"line_start":439,"line_end":439,"column_start":9,"column_end":33},"name":"min_memory_map_alignment","qualname":"::Limits::min_memory_map_alignment","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":17423,"byte_end":17426,"line_start":438,"line_end":438,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11817},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":17484,"byte_end":17508,"line_start":441,"line_end":441,"column_start":9,"column_end":33},"name":"buffer_image_granularity","qualname":"::Limits::buffer_image_granularity","value":"u64","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":17472,"byte_end":17475,"line_start":440,"line_end":440,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11818},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":17623,"byte_end":17656,"line_start":443,"line_end":443,"column_start":9,"column_end":42},"name":"min_texel_buffer_offset_alignment","qualname":"::Limits::min_texel_buffer_offset_alignment","value":"u64","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" The alignment of the start of buffer used as a texel buffer, in bytes, non-zero.\n","sig":null,"attributes":[{"value":"/ The alignment of the start of buffer used as a texel buffer, in bytes, non-zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":17530,"byte_end":17614,"line_start":442,"line_end":442,"column_start":5,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":11819},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":17780,"byte_end":17815,"line_start":445,"line_end":445,"column_start":9,"column_end":44},"name":"min_uniform_buffer_offset_alignment","qualname":"::Limits::min_uniform_buffer_offset_alignment","value":"u64","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" The alignment of the start of buffer used for uniform buffer updates, in bytes, non-zero.\n","sig":null,"attributes":[{"value":"/ The alignment of the start of buffer used for uniform buffer updates, in bytes, non-zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":17678,"byte_end":17771,"line_start":444,"line_end":444,"column_start":5,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":11820},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":17932,"byte_end":17967,"line_start":447,"line_end":447,"column_start":9,"column_end":44},"name":"min_storage_buffer_offset_alignment","qualname":"::Limits::min_storage_buffer_offset_alignment","value":"u64","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" The alignment of the start of buffer used as a storage buffer, in bytes, non-zero.\n","sig":null,"attributes":[{"value":"/ The alignment of the start of buffer used as a storage buffer, in bytes, non-zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":17837,"byte_end":17923,"line_start":446,"line_end":446,"column_start":5,"column_end":91}}]},{"kind":"Field","id":{"krate":0,"index":11821},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":18091,"byte_end":18122,"line_start":449,"line_end":449,"column_start":9,"column_end":40},"name":"framebuffer_color_sample_counts","qualname":"::Limits::framebuffer_color_sample_counts","value":"u8","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" Number of samples supported for color attachments of framebuffers (floating/fixed point).\n","sig":null,"attributes":[{"value":"/ Number of samples supported for color attachments of framebuffers (floating/fixed point).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":17989,"byte_end":18082,"line_start":448,"line_end":448,"column_start":5,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":11822},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":18226,"byte_end":18257,"line_start":451,"line_end":451,"column_start":9,"column_end":40},"name":"framebuffer_depth_sample_counts","qualname":"::Limits::framebuffer_depth_sample_counts","value":"u8","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" Number of samples supported for depth attachments of framebuffers.\n","sig":null,"attributes":[{"value":"/ Number of samples supported for depth attachments of framebuffers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":18147,"byte_end":18217,"line_start":450,"line_end":450,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":11823},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":18363,"byte_end":18396,"line_start":453,"line_end":453,"column_start":9,"column_end":42},"name":"framebuffer_stencil_sample_counts","qualname":"::Limits::framebuffer_stencil_sample_counts","value":"u8","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" Number of samples supported for stencil attachments of framebuffers.\n","sig":null,"attributes":[{"value":"/ Number of samples supported for stencil attachments of framebuffers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":18282,"byte_end":18354,"line_start":452,"line_end":452,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":11824},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":18501,"byte_end":18531,"line_start":455,"line_end":455,"column_start":9,"column_end":39},"name":"timestamp_compute_and_graphics","qualname":"::Limits::timestamp_compute_and_graphics","value":"bool","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" Timestamp queries are supported on all compute and graphics queues.\n","sig":null,"attributes":[{"value":"/ Timestamp queries are supported on all compute and graphics queues.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":18421,"byte_end":18492,"line_start":454,"line_end":454,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":11825},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":18638,"byte_end":18654,"line_start":457,"line_end":457,"column_start":9,"column_end":25},"name":"timestamp_period","qualname":"::Limits::timestamp_period","value":"f32","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" The amount of nanoseconds that causes a timestamp query value to increment by one.\n","sig":null,"attributes":[{"value":"/ The amount of nanoseconds that causes a timestamp query value to increment by one.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":18543,"byte_end":18629,"line_start":456,"line_end":456,"column_start":5,"column_end":91}}]},{"kind":"Field","id":{"krate":0,"index":11826},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":18761,"byte_end":18782,"line_start":459,"line_end":459,"column_start":9,"column_end":30},"name":"max_color_attachments","qualname":"::Limits::max_color_attachments","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" Maximum number of color attachments that can be used by a subpass in a render pass.\n","sig":null,"attributes":[{"value":"/ Maximum number of color attachments that can be used by a subpass in a render pass.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":18665,"byte_end":18752,"line_start":458,"line_end":458,"column_start":5,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":11827},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":18807,"byte_end":18832,"line_start":461,"line_end":461,"column_start":9,"column_end":34},"name":"standard_sample_locations","qualname":"::Limits::standard_sample_locations","value":"bool","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":18795,"byte_end":18798,"line_start":460,"line_end":460,"column_start":5,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":11828},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":18944,"byte_end":18980,"line_start":463,"line_end":463,"column_start":9,"column_end":45},"name":"optimal_buffer_copy_offset_alignment","qualname":"::Limits::optimal_buffer_copy_offset_alignment","value":"u64","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" The alignment of the start of the buffer used as a GPU copy source, in bytes, non-zero.\n","sig":null,"attributes":[{"value":"/ The alignment of the start of the buffer used as a GPU copy source, in bytes, non-zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":18844,"byte_end":18935,"line_start":462,"line_end":462,"column_start":5,"column_end":96}}]},{"kind":"Field","id":{"krate":0,"index":11829},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":19150,"byte_end":19185,"line_start":466,"line_end":466,"column_start":9,"column_end":44},"name":"optimal_buffer_copy_pitch_alignment","qualname":"::Limits::optimal_buffer_copy_pitch_alignment","value":"u64","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" The alignment of the row pitch of the texture data stored in a buffer that is\n used in a GPU copy operation, in bytes, non-zero.\n","sig":null,"attributes":[{"value":"/ The alignment of the row pitch of the texture data stored in a buffer that is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":19002,"byte_end":19083,"line_start":464,"line_end":464,"column_start":5,"column_end":86}},{"value":"/ used in a GPU copy operation, in bytes, non-zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":19088,"byte_end":19141,"line_start":465,"line_end":465,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":11830},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":19307,"byte_end":19329,"line_start":468,"line_end":468,"column_start":9,"column_end":31},"name":"non_coherent_atom_size","qualname":"::Limits::non_coherent_atom_size","value":"usize","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" Size and alignment in bytes that bounds concurrent access to host-mapped device memory.\n","sig":null,"attributes":[{"value":"/ Size and alignment in bytes that bounds concurrent access to host-mapped device memory.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":19207,"byte_end":19298,"line_start":467,"line_end":467,"column_start":5,"column_end":96}}]},{"kind":"Field","id":{"krate":0,"index":11831},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":19398,"byte_end":19439,"line_start":471,"line_end":471,"column_start":9,"column_end":50},"name":"min_vertex_input_binding_stride_alignment","qualname":"::Limits::min_vertex_input_binding_stride_alignment","value":"u64","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" The alignment of the vertex buffer stride.\n","sig":null,"attributes":[{"value":"/ The alignment of the vertex buffer stride.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":19343,"byte_end":19389,"line_start":470,"line_end":470,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":11832},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":19570,"byte_end":19595,"line_start":474,"line_end":474,"column_start":9,"column_end":34},"name":"max_draw_mesh_tasks_count","qualname":"::Limits::max_draw_mesh_tasks_count","value":"u32","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" The maximum number of local workgroups that can be launched by a single draw mesh tasks command\n","sig":null,"attributes":[{"value":"/ The maximum number of local workgroups that can be launched by a single draw mesh tasks command","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":19462,"byte_end":19561,"line_start":473,"line_end":473,"column_start":5,"column_end":104}}]},{"kind":"Field","id":{"krate":0,"index":11833},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":19918,"byte_end":19949,"line_start":478,"line_end":478,"column_start":9,"column_end":40},"name":"max_task_work_group_invocations","qualname":"::Limits::max_task_work_group_invocations","value":"u32","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" The maximum total number of task shader invocations in a single local workgroup. The product of the X, Y, and\n Z sizes, as specified by the LocalSize execution mode in shader modules or by the object decorated by the\n WorkgroupSize decoration, must be less than or equal to this limit.\n","sig":null,"attributes":[{"value":"/ The maximum total number of task shader invocations in a single local workgroup. The product of the X, Y, and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":19606,"byte_end":19719,"line_start":475,"line_end":475,"column_start":5,"column_end":118}},{"value":"/ Z sizes, as specified by the LocalSize execution mode in shader modules or by the object decorated by the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":19724,"byte_end":19833,"line_start":476,"line_end":476,"column_start":5,"column_end":114}},{"value":"/ WorkgroupSize decoration, must be less than or equal to this limit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":19838,"byte_end":19909,"line_start":477,"line_end":477,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":11834},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":20348,"byte_end":20372,"line_start":483,"line_end":483,"column_start":9,"column_end":33},"name":"max_task_work_group_size","qualname":"::Limits::max_task_work_group_size","value":"[u32; 3]","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" The maximum size of a local task workgroup. These three values represent the maximum local workgroup size in\n the X, Y, and Z dimensions, respectively. The x, y, and z sizes, as specified by the LocalSize execution mode\n or by the object decorated by the WorkgroupSize decoration in shader modules, must be less than or equal to\n the corresponding limit.\n","sig":null,"attributes":[{"value":"/ The maximum size of a local task workgroup. These three values represent the maximum local workgroup size in","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":19960,"byte_end":20072,"line_start":479,"line_end":479,"column_start":5,"column_end":117}},{"value":"/ the X, Y, and Z dimensions, respectively. The x, y, and z sizes, as specified by the LocalSize execution mode","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":20077,"byte_end":20190,"line_start":480,"line_end":480,"column_start":5,"column_end":118}},{"value":"/ or by the object decorated by the WorkgroupSize decoration in shader modules, must be less than or equal to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":20195,"byte_end":20306,"line_start":481,"line_end":481,"column_start":5,"column_end":116}},{"value":"/ the corresponding limit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":20311,"byte_end":20339,"line_start":482,"line_end":482,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":11836},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":20505,"byte_end":20531,"line_start":485,"line_end":485,"column_start":9,"column_end":35},"name":"max_task_total_memory_size","qualname":"::Limits::max_task_total_memory_size","value":"u32","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" The maximum number of bytes that the task shader can use in total for shared and output memory combined.\n","sig":null,"attributes":[{"value":"/ The maximum number of bytes that the task shader can use in total for shared and output memory combined.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":20388,"byte_end":20496,"line_start":484,"line_end":484,"column_start":5,"column_end":113}}]},{"kind":"Field","id":{"krate":0,"index":11837},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":20630,"byte_end":20651,"line_start":487,"line_end":487,"column_start":9,"column_end":30},"name":"max_task_output_count","qualname":"::Limits::max_task_output_count","value":"u32","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" The maximum number of output tasks a single task shader workgroup can emit.\n","sig":null,"attributes":[{"value":"/ The maximum number of output tasks a single task shader workgroup can emit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":20542,"byte_end":20621,"line_start":486,"line_end":486,"column_start":5,"column_end":84}}]},{"kind":"Field","id":{"krate":0,"index":11838},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":20974,"byte_end":21005,"line_start":491,"line_end":491,"column_start":9,"column_end":40},"name":"max_mesh_work_group_invocations","qualname":"::Limits::max_mesh_work_group_invocations","value":"u32","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" The maximum total number of mesh shader invocations in a single local workgroup. The product of the X, Y, and\n Z sizes, as specified by the LocalSize execution mode in shader modules or by the object decorated by the\n WorkgroupSize decoration, must be less than or equal to this limit.\n","sig":null,"attributes":[{"value":"/ The maximum total number of mesh shader invocations in a single local workgroup. The product of the X, Y, and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":20662,"byte_end":20775,"line_start":488,"line_end":488,"column_start":5,"column_end":118}},{"value":"/ Z sizes, as specified by the LocalSize execution mode in shader modules or by the object decorated by the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":20780,"byte_end":20889,"line_start":489,"line_end":489,"column_start":5,"column_end":114}},{"value":"/ WorkgroupSize decoration, must be less than or equal to this limit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":20894,"byte_end":20965,"line_start":490,"line_end":490,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":11839},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":21404,"byte_end":21428,"line_start":496,"line_end":496,"column_start":9,"column_end":33},"name":"max_mesh_work_group_size","qualname":"::Limits::max_mesh_work_group_size","value":"[u32; 3]","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" The maximum size of a local mesh workgroup. These three values represent the maximum local workgroup size in\n the X, Y, and Z dimensions, respectively. The x, y, and z sizes, as specified by the LocalSize execution mode\n or by the object decorated by the WorkgroupSize decoration in shader modules, must be less than or equal to the\n corresponding limit.\n","sig":null,"attributes":[{"value":"/ The maximum size of a local mesh workgroup. These three values represent the maximum local workgroup size in","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":21016,"byte_end":21128,"line_start":492,"line_end":492,"column_start":5,"column_end":117}},{"value":"/ the X, Y, and Z dimensions, respectively. The x, y, and z sizes, as specified by the LocalSize execution mode","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":21133,"byte_end":21246,"line_start":493,"line_end":493,"column_start":5,"column_end":118}},{"value":"/ or by the object decorated by the WorkgroupSize decoration in shader modules, must be less than or equal to the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":21251,"byte_end":21366,"line_start":494,"line_end":494,"column_start":5,"column_end":120}},{"value":"/ corresponding limit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":21371,"byte_end":21395,"line_start":495,"line_end":495,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":11841},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":21561,"byte_end":21587,"line_start":498,"line_end":498,"column_start":9,"column_end":35},"name":"max_mesh_total_memory_size","qualname":"::Limits::max_mesh_total_memory_size","value":"u32","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" The maximum number of bytes that the mesh shader can use in total for shared and output memory combined.\n","sig":null,"attributes":[{"value":"/ The maximum number of bytes that the mesh shader can use in total for shared and output memory combined.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":21444,"byte_end":21552,"line_start":497,"line_end":497,"column_start":5,"column_end":113}}]},{"kind":"Field","id":{"krate":0,"index":11842},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":21673,"byte_end":21697,"line_start":500,"line_end":500,"column_start":9,"column_end":33},"name":"max_mesh_output_vertices","qualname":"::Limits::max_mesh_output_vertices","value":"u32","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" The maximum number of vertices a mesh shader output can store.\n","sig":null,"attributes":[{"value":"/ The maximum number of vertices a mesh shader output can store.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":21598,"byte_end":21664,"line_start":499,"line_end":499,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":11843},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":21785,"byte_end":21811,"line_start":502,"line_end":502,"column_start":9,"column_end":35},"name":"max_mesh_output_primitives","qualname":"::Limits::max_mesh_output_primitives","value":"u32","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" The maximum number of primitives a mesh shader output can store.\n","sig":null,"attributes":[{"value":"/ The maximum number of primitives a mesh shader output can store.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":21708,"byte_end":21776,"line_start":501,"line_end":501,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":11844},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":21896,"byte_end":21925,"line_start":504,"line_end":504,"column_start":9,"column_end":38},"name":"max_mesh_multiview_view_count","qualname":"::Limits::max_mesh_multiview_view_count","value":"u32","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" The maximum number of multi-view views a mesh shader can use.\n","sig":null,"attributes":[{"value":"/ The maximum number of multi-view views a mesh shader can use.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":21822,"byte_end":21887,"line_start":503,"line_end":503,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":11845},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":22152,"byte_end":22186,"line_start":507,"line_end":507,"column_start":9,"column_end":43},"name":"mesh_output_per_vertex_granularity","qualname":"::Limits::mesh_output_per_vertex_granularity","value":"u32","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" The granularity with which mesh vertex outputs are allocated. The value can be used to compute the memory size\n used by the mesh shader, which must be less than or equal to maxMeshTotalMemorySize.\n","sig":null,"attributes":[{"value":"/ The granularity with which mesh vertex outputs are allocated. The value can be used to compute the memory size","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":21936,"byte_end":22050,"line_start":505,"line_end":505,"column_start":5,"column_end":119}},{"value":"/ used by the mesh shader, which must be less than or equal to maxMeshTotalMemorySize.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":22055,"byte_end":22143,"line_start":506,"line_end":506,"column_start":5,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":11846},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":22409,"byte_end":22446,"line_start":510,"line_end":510,"column_start":9,"column_end":46},"name":"mesh_output_per_primitive_granularity","qualname":"::Limits::mesh_output_per_primitive_granularity","value":"u32","parent":{"krate":0,"index":11759},"children":[],"decl_id":null,"docs":" The granularity with which mesh outputs qualified as per-primitive are allocated. The value can be used to\n compute the memory size used by the mesh shader, which must be less than or equal to\n","sig":null,"attributes":[{"value":"/ The granularity with which mesh outputs qualified as per-primitive are allocated. The value can be used to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":22197,"byte_end":22307,"line_start":508,"line_end":508,"column_start":5,"column_end":115}},{"value":"/ compute the memory size used by the mesh shader, which must be less than or equal to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":22312,"byte_end":22400,"line_start":509,"line_end":509,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":11863},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":22723,"byte_end":22726,"line_start":519,"line_end":519,"column_start":5,"column_end":8},"name":"U16","qualname":"::IndexType::U16","value":"IndexType::U16","parent":{"krate":0,"index":11862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11865},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":22732,"byte_end":22735,"line_start":520,"line_end":520,"column_start":5,"column_end":8},"name":"U32","qualname":"::IndexType::U32","value":"IndexType::U32","parent":{"krate":0,"index":11862},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":11862},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":22707,"byte_end":22716,"line_start":518,"line_end":518,"column_start":10,"column_end":19},"name":"IndexType","qualname":"::IndexType","value":"pub enum IndexType { U16, U32, }","parent":null,"children":[{"krate":0,"index":11863},{"krate":0,"index":11865}],"decl_id":null,"docs":" An enum describing the type of an index value in a slice's index buffer\n","sig":null,"attributes":[{"value":"/ An enum describing the type of an index value in a slice's index buffer","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":22456,"byte_end":22531,"line_start":513,"line_end":513,"column_start":1,"column_end":76}},{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":22532,"byte_end":22554,"line_start":514,"line_end":514,"column_start":1,"column_end":23}},{"value":"repr(u8)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":22686,"byte_end":22697,"line_start":517,"line_end":517,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":11899},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":22967,"byte_end":22985,"line_start":527,"line_end":527,"column_start":12,"column_end":30},"name":"UnsupportedBackend","qualname":"::UnsupportedBackend","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error creating an instance of a backend on the platform that\n doesn't support this backend.\n","sig":null,"attributes":[{"value":"/ Error creating an instance of a backend on the platform that","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":22740,"byte_end":22804,"line_start":523,"line_end":523,"column_start":1,"column_end":65}},{"value":"/ doesn't support this backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":22805,"byte_end":22838,"line_start":524,"line_end":524,"column_start":1,"column_end":34}},{"value":"error(\"Backend is not supported on this platform\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":22902,"byte_end":22955,"line_start":526,"line_end":526,"column_start":1,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":1065},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":23876,"byte_end":23884,"line_start":552,"line_end":552,"column_start":11,"column_end":19},"name":"Instance","qualname":"::Instance","value":"Instance<B: Backend>: Any + Send + Sync + Sized","parent":null,"children":[{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1071}],"decl_id":null,"docs":" An instantiated backend.","sig":null,"attributes":[{"value":"/ An instantiated backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":22988,"byte_end":23016,"line_start":529,"line_end":529,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":23017,"byte_end":23020,"line_start":530,"line_end":530,"column_start":1,"column_end":4}},{"value":"/ Any startup the backend needs to perform will be done when creating the type that implements","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":23021,"byte_end":23117,"line_start":531,"line_end":531,"column_start":1,"column_end":97}},{"value":"/ `Instance`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":23118,"byte_end":23133,"line_start":532,"line_end":532,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":23134,"byte_end":23137,"line_start":533,"line_end":533,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":23138,"byte_end":23152,"line_start":534,"line_end":534,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":23153,"byte_end":23156,"line_start":535,"line_end":535,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":23157,"byte_end":23168,"line_start":536,"line_end":536,"column_start":1,"column_end":12}},{"value":"/ # extern crate gfx_backend_empty;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":23169,"byte_end":23206,"line_start":537,"line_end":537,"column_start":1,"column_end":38}},{"value":"/ # extern crate gfx_hal;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":23207,"byte_end":23234,"line_start":538,"line_end":538,"column_start":1,"column_end":28}},{"value":"/ use gfx_backend_empty as backend;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":23235,"byte_end":23272,"line_start":539,"line_end":539,"column_start":1,"column_end":38}},{"value":"/ use gfx_hal::Instance;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":23273,"byte_end":23299,"line_start":540,"line_end":540,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":23300,"byte_end":23303,"line_start":541,"line_end":541,"column_start":1,"column_end":4}},{"value":"/ // Create a concrete instance of our backend (this is backend-dependent and may be more","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":23304,"byte_end":23395,"line_start":542,"line_end":542,"column_start":1,"column_end":92}},{"value":"/ // complicated for some backends).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":23396,"byte_end":23434,"line_start":543,"line_end":543,"column_start":1,"column_end":39}},{"value":"/ let instance = backend::Instance::create(\"My App\", 1).unwrap();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":23435,"byte_end":23502,"line_start":544,"line_end":544,"column_start":1,"column_end":68}},{"value":"/ // We can get a list of the available adapters, which are either physical graphics","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":23503,"byte_end":23589,"line_start":545,"line_end":545,"column_start":1,"column_end":87}},{"value":"/ // devices, or virtual adapters. Because we are using the dummy `empty` backend,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":23590,"byte_end":23674,"line_start":546,"line_end":546,"column_start":1,"column_end":85}},{"value":"/ // there will be nothing in this list.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":23675,"byte_end":23717,"line_start":547,"line_end":547,"column_start":1,"column_end":43}},{"value":"/ for (idx, adapter) in instance.enumerate_adapters().iter().enumerate() {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":23718,"byte_end":23794,"line_start":548,"line_end":548,"column_start":1,"column_end":77}},{"value":"/     println!(\"Adapter {}: {:?}\", idx, adapter.info);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":23795,"byte_end":23851,"line_start":549,"line_end":549,"column_start":1,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":23852,"byte_end":23857,"line_start":550,"line_end":550,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":23858,"byte_end":23865,"line_start":551,"line_end":551,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":24371,"byte_end":24377,"line_start":566,"line_end":566,"column_start":8,"column_end":14},"name":"create","qualname":"::Instance::create","value":"pub fn create(&str, u32) -> Result<Self, UnsupportedBackend>","parent":{"krate":0,"index":1065},"children":[],"decl_id":null,"docs":" Create a new instance.","sig":null,"attributes":[{"value":"/ Create a new instance.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":23930,"byte_end":23956,"line_start":553,"line_end":553,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":23961,"byte_end":23964,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":23969,"byte_end":23984,"line_start":555,"line_end":555,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":23989,"byte_end":23992,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ * `name` - name of the application using the API.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":23997,"byte_end":24050,"line_start":557,"line_end":557,"column_start":5,"column_end":58}},{"value":"/ * `version` - free form representation of the application's version.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":24055,"byte_end":24127,"line_start":558,"line_end":558,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":24132,"byte_end":24135,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ This metadata is passed further down the graphics stack.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":24140,"byte_end":24200,"line_start":560,"line_end":560,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":24205,"byte_end":24208,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":24213,"byte_end":24225,"line_start":562,"line_end":562,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":24230,"byte_end":24233,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ Returns an `Err` variant if the requested backend [is not supported","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":24238,"byte_end":24309,"line_start":564,"line_end":564,"column_start":5,"column_end":76}},{"value":"/ on the current platform][UnsupportedBackend].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":24314,"byte_end":24363,"line_start":565,"line_end":565,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":24517,"byte_end":24535,"line_start":569,"line_end":569,"column_start":8,"column_end":26},"name":"enumerate_adapters","qualname":"::Instance::enumerate_adapters","value":"pub fn enumerate_adapters(&Self) -> Vec<adapter::Adapter<B>>","parent":{"krate":0,"index":1065},"children":[],"decl_id":null,"docs":" Return all available [graphics adapters][adapter::Adapter].\n","sig":null,"attributes":[{"value":"/ Return all available [graphics adapters][adapter::Adapter].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":24446,"byte_end":24509,"line_start":568,"line_end":568,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":24867,"byte_end":24881,"line_start":579,"line_end":579,"column_start":15,"column_end":29},"name":"create_surface","qualname":"::Instance::create_surface","value":"pub unsafe fn create_surface<impl raw_window_handle::HasRawWindowHandle: raw_window_handle::HasRawWindowHandle>(&Self,\n                                                                                                                &impl raw_window_handle::HasRawWindowHandle)\n-> Result<B::Surface, window::InitError>","parent":{"krate":0,"index":1065},"children":[],"decl_id":null,"docs":" Create a new [surface][window::Surface].","sig":null,"attributes":[{"value":"/ Create a new [surface][window::Surface].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":24577,"byte_end":24621,"line_start":571,"line_end":571,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":24626,"byte_end":24629,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ Surfaces can be used to render to windows.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":24634,"byte_end":24680,"line_start":573,"line_end":573,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":24685,"byte_end":24688,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":24693,"byte_end":24705,"line_start":575,"line_end":575,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":24710,"byte_end":24713,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ This method can cause undefined behavior if `raw_window_handle` isn't","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":24718,"byte_end":24791,"line_start":577,"line_end":577,"column_start":5,"column_end":78}},{"value":"/ a handle to a valid window for the current platform.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":24796,"byte_end":24852,"line_start":578,"line_end":578,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":25183,"byte_end":25198,"line_start":589,"line_end":589,"column_start":15,"column_end":30},"name":"destroy_surface","qualname":"::Instance::destroy_surface","value":"pub unsafe fn destroy_surface(&Self, B::Surface)","parent":{"krate":0,"index":1065},"children":[],"decl_id":null,"docs":" Destroy a surface, freeing the resources associated with it and\n releasing it from this graphics API.","sig":null,"attributes":[{"value":"/ Destroy a surface, freeing the resources associated with it and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":25023,"byte_end":25090,"line_start":584,"line_end":584,"column_start":5,"column_end":72}},{"value":"/ releasing it from this graphics API.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":25095,"byte_end":25135,"line_start":585,"line_end":585,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":25140,"byte_end":25143,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":25148,"byte_end":25160,"line_start":587,"line_end":587,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":25165,"byte_end":25168,"line_start":588,"line_end":588,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":11901},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":25430,"byte_end":25442,"line_start":595,"line_end":595,"column_start":12,"column_end":24},"name":"MemoryTypeId","qualname":"::MemoryTypeId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A strongly-typed index to a particular `MemoryType`.\n","sig":null,"attributes":[{"value":"/ A strongly-typed index to a particular `MemoryType`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":25231,"byte_end":25287,"line_start":592,"line_end":592,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":11903},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":25443,"byte_end":25452,"line_start":595,"line_end":595,"column_start":25,"column_end":34},"name":"0","qualname":"::MemoryTypeId::0","value":"usize","parent":{"krate":0,"index":11901},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1082},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":26009,"byte_end":26016,"line_start":617,"line_end":617,"column_start":11,"column_end":18},"name":"Backend","qualname":"::Backend","value":"Backend: 'static + Sized + Eq + Clone + Hash + fmt::Debug + Any + Send + Sync","parent":null,"children":[{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110}],"decl_id":null,"docs":" Wraps together all the types needed for a graphics backend.","sig":null,"attributes":[{"value":"/ Wraps together all the types needed for a graphics backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":25822,"byte_end":25885,"line_start":613,"line_end":613,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":25886,"byte_end":25889,"line_start":614,"line_end":614,"column_start":1,"column_end":4}},{"value":"/ Each backend module, such as OpenGL or Metal, will implement this trait","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":25890,"byte_end":25965,"line_start":615,"line_end":615,"column_start":1,"column_end":76}},{"value":"/ with its own concrete types.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":25966,"byte_end":25998,"line_start":616,"line_end":616,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":1083},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":26168,"byte_end":26176,"line_start":619,"line_end":619,"column_start":10,"column_end":18},"name":"Instance","qualname":"::Backend::Instance","value":"type Instance: Instance<Self>;","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The corresponding [instance][Instance] type for this backend.\n","sig":null,"attributes":[{"value":"/ The corresponding [instance][Instance] type for this backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":26093,"byte_end":26158,"line_start":618,"line_end":618,"column_start":5,"column_end":70}}]},{"kind":"Type","id":{"krate":0,"index":1084},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":26295,"byte_end":26309,"line_start":621,"line_end":621,"column_start":10,"column_end":24},"name":"PhysicalDevice","qualname":"::Backend::PhysicalDevice","value":"type PhysicalDevice: adapter::PhysicalDevice<Self>;","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The corresponding [physical device][adapter::PhysicalDevice] type for this backend.\n","sig":null,"attributes":[{"value":"/ The corresponding [physical device][adapter::PhysicalDevice] type for this backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":26198,"byte_end":26285,"line_start":620,"line_end":620,"column_start":5,"column_end":92}}]},{"kind":"Type","id":{"krate":0,"index":1085},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":26433,"byte_end":26439,"line_start":623,"line_end":623,"column_start":10,"column_end":16},"name":"Device","qualname":"::Backend::Device","value":"type Device: device::Device<Self>;","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The corresponding [logical device][device::Device] type for this backend.\n","sig":null,"attributes":[{"value":"/ The corresponding [logical device][device::Device] type for this backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":26346,"byte_end":26423,"line_start":622,"line_end":622,"column_start":5,"column_end":82}}]},{"kind":"Type","id":{"krate":0,"index":1086},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":26560,"byte_end":26567,"line_start":625,"line_end":625,"column_start":10,"column_end":17},"name":"Surface","qualname":"::Backend::Surface","value":"type Surface: window::PresentationSurface<Self>;","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The corresponding [surface][window::PresentationSurface] type for this backend.\n","sig":null,"attributes":[{"value":"/ The corresponding [surface][window::PresentationSurface] type for this backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":26467,"byte_end":26550,"line_start":624,"line_end":624,"column_start":5,"column_end":88}}]},{"kind":"Type","id":{"krate":0,"index":1087},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":26698,"byte_end":26709,"line_start":628,"line_end":628,"column_start":10,"column_end":21},"name":"QueueFamily","qualname":"::Backend::QueueFamily","value":"type QueueFamily: queue::QueueFamily;","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The corresponding [queue family][queue::QueueFamily] type for this backend.\n","sig":null,"attributes":[{"value":"/ The corresponding [queue family][queue::QueueFamily] type for this backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":26609,"byte_end":26688,"line_start":627,"line_end":627,"column_start":5,"column_end":84}}]},{"kind":"Type","id":{"krate":0,"index":1088},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":26826,"byte_end":26838,"line_start":630,"line_end":630,"column_start":10,"column_end":22},"name":"CommandQueue","qualname":"::Backend::CommandQueue","value":"type CommandQueue: queue::CommandQueue<Self>;","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The corresponding [command queue][queue::CommandQueue] type for this backend.\n","sig":null,"attributes":[{"value":"/ The corresponding [command queue][queue::CommandQueue] type for this backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":26735,"byte_end":26816,"line_start":629,"line_end":629,"column_start":5,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":1089},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":26966,"byte_end":26979,"line_start":632,"line_end":632,"column_start":10,"column_end":23},"name":"CommandBuffer","qualname":"::Backend::CommandBuffer","value":"type CommandBuffer: command::CommandBuffer<Self>;","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The corresponding [command buffer][command::CommandBuffer] type for this backend.\n","sig":null,"attributes":[{"value":"/ The corresponding [command buffer][command::CommandBuffer] type for this backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":26871,"byte_end":26956,"line_start":631,"line_end":631,"column_start":5,"column_end":90}}]},{"kind":"Type","id":{"krate":0,"index":1090},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":27084,"byte_end":27096,"line_start":635,"line_end":635,"column_start":10,"column_end":22},"name":"ShaderModule","qualname":"::Backend::ShaderModule","value":"type ShaderModule: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The corresponding shader module type for this backend.\n","sig":null,"attributes":[{"value":"/ The corresponding shader module type for this backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":27016,"byte_end":27074,"line_start":634,"line_end":634,"column_start":5,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":1091},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":27200,"byte_end":27210,"line_start":637,"line_end":637,"column_start":10,"column_end":20},"name":"RenderPass","qualname":"::Backend::RenderPass","value":"type RenderPass: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The corresponding render pass type for this backend.\n","sig":null,"attributes":[{"value":"/ The corresponding render pass type for this backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":27134,"byte_end":27190,"line_start":636,"line_end":636,"column_start":5,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":1092},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":27314,"byte_end":27325,"line_start":639,"line_end":639,"column_start":10,"column_end":21},"name":"Framebuffer","qualname":"::Backend::Framebuffer","value":"type Framebuffer: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The corresponding framebuffer type for this backend.\n","sig":null,"attributes":[{"value":"/ The corresponding framebuffer type for this backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":27248,"byte_end":27304,"line_start":638,"line_end":638,"column_start":5,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":1093},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":27425,"byte_end":27431,"line_start":642,"line_end":642,"column_start":10,"column_end":16},"name":"Memory","qualname":"::Backend::Memory","value":"type Memory: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The corresponding memory type for this backend.\n","sig":null,"attributes":[{"value":"/ The corresponding memory type for this backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":27364,"byte_end":27415,"line_start":641,"line_end":641,"column_start":5,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":1094},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":27557,"byte_end":27568,"line_start":644,"line_end":644,"column_start":10,"column_end":21},"name":"CommandPool","qualname":"::Backend::CommandPool","value":"type CommandPool: pool::CommandPool<Self>;","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The corresponding [command pool][pool::CommandPool] type for this backend.\n","sig":null,"attributes":[{"value":"/ The corresponding [command pool][pool::CommandPool] type for this backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":27469,"byte_end":27547,"line_start":643,"line_end":643,"column_start":5,"column_end":83}}]},{"kind":"Type","id":{"krate":0,"index":1095},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":27661,"byte_end":27667,"line_start":647,"line_end":647,"column_start":10,"column_end":16},"name":"Buffer","qualname":"::Backend::Buffer","value":"type Buffer: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The corresponding buffer type for this backend.\n","sig":null,"attributes":[{"value":"/ The corresponding buffer type for this backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":27600,"byte_end":27651,"line_start":646,"line_end":646,"column_start":5,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":1096},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":27771,"byte_end":27781,"line_start":649,"line_end":649,"column_start":10,"column_end":20},"name":"BufferView","qualname":"::Backend::BufferView","value":"type BufferView: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The corresponding buffer view type for this backend.\n","sig":null,"attributes":[{"value":"/ The corresponding buffer view type for this backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":27705,"byte_end":27761,"line_start":648,"line_end":648,"column_start":5,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":1097},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":27879,"byte_end":27884,"line_start":651,"line_end":651,"column_start":10,"column_end":15},"name":"Image","qualname":"::Backend::Image","value":"type Image: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The corresponding image type for this backend.\n","sig":null,"attributes":[{"value":"/ The corresponding image type for this backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":27819,"byte_end":27869,"line_start":650,"line_end":650,"column_start":5,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":1098},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":27987,"byte_end":27996,"line_start":653,"line_end":653,"column_start":10,"column_end":19},"name":"ImageView","qualname":"::Backend::ImageView","value":"type ImageView: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The corresponding image view type for this backend.\n","sig":null,"attributes":[{"value":"/ The corresponding image view type for this backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":27922,"byte_end":27977,"line_start":652,"line_end":652,"column_start":5,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":1099},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":28096,"byte_end":28103,"line_start":655,"line_end":655,"column_start":10,"column_end":17},"name":"Sampler","qualname":"::Backend::Sampler","value":"type Sampler: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The corresponding sampler type for this backend.\n","sig":null,"attributes":[{"value":"/ The corresponding sampler type for this backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":28034,"byte_end":28086,"line_start":654,"line_end":654,"column_start":5,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":1100},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":28213,"byte_end":28228,"line_start":658,"line_end":658,"column_start":10,"column_end":25},"name":"ComputePipeline","qualname":"::Backend::ComputePipeline","value":"type ComputePipeline: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The corresponding compute pipeline type for this backend.\n","sig":null,"attributes":[{"value":"/ The corresponding compute pipeline type for this backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":28142,"byte_end":28203,"line_start":657,"line_end":657,"column_start":5,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":1101},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":28338,"byte_end":28354,"line_start":660,"line_end":660,"column_start":10,"column_end":26},"name":"GraphicsPipeline","qualname":"::Backend::GraphicsPipeline","value":"type GraphicsPipeline: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The corresponding graphics pipeline type for this backend.\n","sig":null,"attributes":[{"value":"/ The corresponding graphics pipeline type for this backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":28266,"byte_end":28328,"line_start":659,"line_end":659,"column_start":5,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":1102},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":28461,"byte_end":28474,"line_start":662,"line_end":662,"column_start":10,"column_end":23},"name":"PipelineCache","qualname":"::Backend::PipelineCache","value":"type PipelineCache: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The corresponding pipeline cache type for this backend.\n","sig":null,"attributes":[{"value":"/ The corresponding pipeline cache type for this backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":28392,"byte_end":28451,"line_start":661,"line_end":661,"column_start":5,"column_end":64}}]},{"kind":"Type","id":{"krate":0,"index":1103},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":28582,"byte_end":28596,"line_start":664,"line_end":664,"column_start":10,"column_end":24},"name":"PipelineLayout","qualname":"::Backend::PipelineLayout","value":"type PipelineLayout: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The corresponding pipeline layout type for this backend.\n","sig":null,"attributes":[{"value":"/ The corresponding pipeline layout type for this backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":28512,"byte_end":28572,"line_start":663,"line_end":663,"column_start":5,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":1104},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":28727,"byte_end":28741,"line_start":666,"line_end":666,"column_start":10,"column_end":24},"name":"DescriptorPool","qualname":"::Backend::DescriptorPool","value":"type DescriptorPool: pso::DescriptorPool<Self>;","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The corresponding [descriptor pool][pso::DescriptorPool] type for this backend.\n","sig":null,"attributes":[{"value":"/ The corresponding [descriptor pool][pso::DescriptorPool] type for this backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":28634,"byte_end":28717,"line_start":665,"line_end":665,"column_start":5,"column_end":88}}]},{"kind":"Type","id":{"krate":0,"index":1105},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":28843,"byte_end":28856,"line_start":668,"line_end":668,"column_start":10,"column_end":23},"name":"DescriptorSet","qualname":"::Backend::DescriptorSet","value":"type DescriptorSet: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The corresponding descriptor set type for this backend.\n","sig":null,"attributes":[{"value":"/ The corresponding descriptor set type for this backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":28774,"byte_end":28833,"line_start":667,"line_end":667,"column_start":5,"column_end":64}}]},{"kind":"Type","id":{"krate":0,"index":1106},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":28970,"byte_end":28989,"line_start":670,"line_end":670,"column_start":10,"column_end":29},"name":"DescriptorSetLayout","qualname":"::Backend::DescriptorSetLayout","value":"type DescriptorSetLayout: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The corresponding descriptor set layout type for this backend.\n","sig":null,"attributes":[{"value":"/ The corresponding descriptor set layout type for this backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":28894,"byte_end":28960,"line_start":669,"line_end":669,"column_start":5,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":1107},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":29088,"byte_end":29093,"line_start":673,"line_end":673,"column_start":10,"column_end":15},"name":"Fence","qualname":"::Backend::Fence","value":"type Fence: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The corresponding fence type for this backend.\n","sig":null,"attributes":[{"value":"/ The corresponding fence type for this backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":29028,"byte_end":29078,"line_start":672,"line_end":672,"column_start":5,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":1108},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":29195,"byte_end":29204,"line_start":675,"line_end":675,"column_start":10,"column_end":19},"name":"Semaphore","qualname":"::Backend::Semaphore","value":"type Semaphore: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The corresponding semaphore type for this backend.\n","sig":null,"attributes":[{"value":"/ The corresponding semaphore type for this backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":29131,"byte_end":29185,"line_start":674,"line_end":674,"column_start":5,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":1109},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":29302,"byte_end":29307,"line_start":677,"line_end":677,"column_start":10,"column_end":15},"name":"Event","qualname":"::Backend::Event","value":"type Event: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The corresponding event type for this backend.\n","sig":null,"attributes":[{"value":"/ The corresponding event type for this backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":29242,"byte_end":29292,"line_start":676,"line_end":676,"column_start":5,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":1110},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":29410,"byte_end":29419,"line_start":679,"line_end":679,"column_start":10,"column_end":19},"name":"QueryPool","qualname":"::Backend::QueryPool","value":"type QueryPool: fmt::Debug + Any + Send + Sync;","parent":{"krate":0,"index":1082},"children":[],"decl_id":null,"docs":" The corresponding query pool type for this backend.\n","sig":null,"attributes":[{"value":"/ The corresponding query pool type for this backend.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":29345,"byte_end":29400,"line_start":678,"line_end":678,"column_start":5,"column_end":60}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":36833,"byte_end":36841,"line_start":26,"line_end":26,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":38523,"byte_end":38528,"line_start":91,"line_end":91,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":64803,"byte_end":64813,"line_start":16,"line_end":16,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":65596,"byte_end":65606,"line_start":47,"line_end":47,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":65880,"byte_end":65890,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":43309,"byte_end":43337,"line_start":94,"line_end":94,"column_start":34,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":99124,"byte_end":99134,"line_start":53,"line_end":53,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":101077,"byte_end":101084,"line_start":118,"line_end":118,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":101270,"byte_end":101277,"line_start":123,"line_end":123,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":120013,"byte_end":120019,"line_start":593,"line_end":593,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":122136,"byte_end":122142,"line_start":37,"line_end":37,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":123384,"byte_end":123390,"line_start":78,"line_end":78,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":128421,"byte_end":128425,"line_start":223,"line_end":223,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":514},{"krate":0,"index":519},{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":133240,"byte_end":133245,"line_start":368,"line_end":368,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":134627,"byte_end":134630,"line_start":406,"line_end":406,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":134741,"byte_end":134744,"line_start":411,"line_end":411,"column_start":13,"column_end":16},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":134768,"byte_end":134771,"line_start":412,"line_end":412,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":135130,"byte_end":135141,"line_start":423,"line_end":423,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":135359,"byte_end":135370,"line_start":433,"line_end":433,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":135937,"byte_end":135948,"line_start":456,"line_end":456,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":137741,"byte_end":137752,"line_start":501,"line_end":501,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":140205,"byte_end":140211,"line_start":558,"line_end":558,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":143905,"byte_end":143921,"line_start":649,"line_end":649,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":144234,"byte_end":144250,"line_start":661,"line_end":661,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":552},{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":149592,"byte_end":149599,"line_start":91,"line_end":91,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":150518,"byte_end":150525,"line_start":124,"line_end":124,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":152371,"byte_end":152384,"line_start":50,"line_end":50,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":154558,"byte_end":154568,"line_start":109,"line_end":109,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":157334,"byte_end":157341,"line_start":181,"line_end":181,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":157523,"byte_end":157530,"line_start":190,"line_end":190,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":157703,"byte_end":157710,"line_start":196,"line_end":196,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":157749,"byte_end":157756,"line_start":197,"line_end":197,"column_start":29,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/compute.rs","byte_start":167116,"byte_end":167135,"line_start":23,"line_end":23,"column_start":22,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":184517,"byte_end":184537,"line_start":146,"line_end":146,"column_start":22,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":187829,"byte_end":187839,"line_start":237,"line_end":237,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":190634,"byte_end":190649,"line_start":29,"line_end":29,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":195396,"byte_end":195414,"line_start":136,"line_end":136,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":196923,"byte_end":196932,"line_start":50,"line_end":50,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":198572,"byte_end":198579,"line_start":104,"line_end":104,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":199690,"byte_end":199700,"line_start":138,"line_end":138,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":200928,"byte_end":200942,"line_start":182,"line_end":182,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":201532,"byte_end":201541,"line_start":201,"line_end":201,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":203716,"byte_end":203727,"line_start":259,"line_end":259,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":204312,"byte_end":204317,"line_start":280,"line_end":280,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":205563,"byte_end":205574,"line_start":314,"line_end":314,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":206260,"byte_end":206276,"line_start":337,"line_end":337,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":832},{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":208187,"byte_end":208201,"line_start":33,"line_end":33,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":208392,"byte_end":208406,"line_start":41,"line_end":41,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":848}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":208786,"byte_end":208800,"line_start":60,"line_end":60,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":209299,"byte_end":209315,"line_start":85,"line_end":85,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":209409,"byte_end":209426,"line_start":89,"line_end":89,"column_start":30,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":859}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":164313,"byte_end":164323,"line_start":126,"line_end":126,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":165906,"byte_end":165911,"line_start":177,"line_end":177,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":219319,"byte_end":219329,"line_start":38,"line_end":38,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":908},{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":215127,"byte_end":215136,"line_start":35,"line_end":35,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":223406,"byte_end":223414,"line_start":106,"line_end":106,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":223561,"byte_end":223569,"line_start":115,"line_end":115,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":225057,"byte_end":225076,"line_start":163,"line_end":163,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":231677,"byte_end":231692,"line_start":326,"line_end":326,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":25477,"byte_end":25489,"line_start":597,"line_end":597,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1073}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":25614,"byte_end":25623,"line_start":605,"line_end":605,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":1793,"byte_end":1800,"line_start":51,"line_end":51,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":1810,"byte_end":1816,"line_start":52,"line_end":52,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":64}},{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":1826,"byte_end":1833,"line_start":53,"line_end":53,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":80}},{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":1843,"byte_end":1849,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":268}},{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":1859,"byte_end":1865,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":431}},{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":1875,"byte_end":1880,"line_start":56,"line_end":56,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":460}},{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":1890,"byte_end":1896,"line_start":57,"line_end":57,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":554}},{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":1906,"byte_end":1910,"line_start":58,"line_end":58,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":577}},{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":1920,"byte_end":1924,"line_start":59,"line_end":59,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":623}},{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":1934,"byte_end":1937,"line_start":60,"line_end":60,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":650}},{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":1947,"byte_end":1952,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":877}},{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":1962,"byte_end":1967,"line_start":62,"line_end":62,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":886}},{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":214456,"byte_end":214462,"line_start":9,"line_end":9,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":887}},{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":1977,"byte_end":1983,"line_start":63,"line_end":63,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":961}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":31829,"byte_end":31834,"line_start":64,"line_end":64,"column_start":44,"column_end":49},"kind":"SuperTrait","from":{"krate":2,"index":8829},"to":{"krate":0,"index":54}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":31837,"byte_end":31840,"line_start":64,"line_end":64,"column_start":52,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":3503},"to":{"krate":0,"index":54}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":31843,"byte_end":31847,"line_start":64,"line_end":64,"column_start":58,"column_end":62},"kind":"SuperTrait","from":{"krate":2,"index":2825},"to":{"krate":0,"index":54}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/adapter.rs","byte_start":31850,"byte_end":31854,"line_start":64,"line_end":64,"column_start":65,"column_end":69},"kind":"SuperTrait","from":{"krate":2,"index":2837},"to":{"krate":0,"index":54}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":36833,"byte_end":36841,"line_start":26,"line_end":26,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/buffer.rs","byte_start":38523,"byte_end":38528,"line_start":91,"line_end":91,"column_start":6,"column_end":11},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":64803,"byte_end":64813,"line_start":16,"line_end":16,"column_start":21,"column_end":31},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1538},"to":{"krate":2,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":65596,"byte_end":65606,"line_start":47,"line_end":47,"column_start":21,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1556},"to":{"krate":2,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/clear.rs","byte_start":65880,"byte_end":65890,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1556},"to":{"krate":2,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":43309,"byte_end":43337,"line_start":94,"line_end":94,"column_start":34,"column_end":62},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1748},"to":{"krate":2,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":43813,"byte_end":43818,"line_start":108,"line_end":108,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":8829},"to":{"krate":0,"index":180}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":43821,"byte_end":43824,"line_start":108,"line_end":108,"column_start":51,"column_end":54},"kind":"SuperTrait","from":{"krate":2,"index":3503},"to":{"krate":0,"index":180}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":43827,"byte_end":43831,"line_start":108,"line_end":108,"column_start":57,"column_end":61},"kind":"SuperTrait","from":{"krate":2,"index":2825},"to":{"krate":0,"index":180}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/command/mod.rs","byte_start":43834,"byte_end":43838,"line_start":108,"line_end":108,"column_start":64,"column_end":68},"kind":"SuperTrait","from":{"krate":2,"index":2837},"to":{"krate":0,"index":180}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":75583,"byte_end":75588,"line_start":184,"line_end":184,"column_start":36,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":8829},"to":{"krate":0,"index":323}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":75591,"byte_end":75594,"line_start":184,"line_end":184,"column_start":44,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":3503},"to":{"krate":0,"index":323}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":75597,"byte_end":75601,"line_start":184,"line_end":184,"column_start":50,"column_end":54},"kind":"SuperTrait","from":{"krate":2,"index":2825},"to":{"krate":0,"index":323}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/device.rs","byte_start":75604,"byte_end":75608,"line_start":184,"line_end":184,"column_start":57,"column_end":61},"kind":"SuperTrait","from":{"krate":2,"index":2837},"to":{"krate":0,"index":323}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":99124,"byte_end":99134,"line_start":53,"line_end":53,"column_start":6,"column_end":16},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2059},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":101077,"byte_end":101084,"line_start":118,"line_end":118,"column_start":6,"column_end":13},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":2144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":101270,"byte_end":101277,"line_start":123,"line_end":123,"column_start":18,"column_end":25},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":2144},"to":{"krate":2,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/format.rs","byte_start":120013,"byte_end":120019,"line_start":593,"line_end":593,"column_start":6,"column_end":12},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3016},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":122136,"byte_end":122142,"line_start":37,"line_end":37,"column_start":6,"column_end":12},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":7086},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":123384,"byte_end":123390,"line_start":78,"line_end":78,"column_start":6,"column_end":12},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":7107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":128421,"byte_end":128425,"line_start":223,"line_end":223,"column_start":6,"column_end":10},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":7302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":133240,"byte_end":133245,"line_start":368,"line_end":368,"column_start":6,"column_end":11},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":7464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":134627,"byte_end":134630,"line_start":406,"line_end":406,"column_start":6,"column_end":9},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":7610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":134741,"byte_end":134744,"line_start":411,"line_end":411,"column_start":13,"column_end":16},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":7610},"to":{"krate":2,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":134768,"byte_end":134771,"line_start":412,"line_end":412,"column_start":21,"column_end":24},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":7610},"to":{"krate":2,"index":9035}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":135130,"byte_end":135141,"line_start":423,"line_end":423,"column_start":25,"column_end":36},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":7624},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":135359,"byte_end":135370,"line_start":433,"line_end":433,"column_start":25,"column_end":36},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":7624},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":135937,"byte_end":135948,"line_start":456,"line_end":456,"column_start":25,"column_end":36},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":7644},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":137741,"byte_end":137752,"line_start":501,"line_end":501,"column_start":6,"column_end":17},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":7669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":140205,"byte_end":140211,"line_start":558,"line_end":558,"column_start":18,"column_end":24},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":7694},"to":{"krate":2,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":143905,"byte_end":143921,"line_start":649,"line_end":649,"column_start":34,"column_end":50},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":7908},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/image.rs","byte_start":144234,"byte_end":144250,"line_start":661,"line_end":661,"column_start":6,"column_end":22},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":7908},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":149592,"byte_end":149599,"line_start":91,"line_end":91,"column_start":22,"column_end":29},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":8264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/memory.rs","byte_start":150518,"byte_end":150525,"line_start":124,"line_end":124,"column_start":6,"column_end":13},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":8300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":152371,"byte_end":152384,"line_start":50,"line_end":50,"column_start":6,"column_end":19},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":8359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":154558,"byte_end":154568,"line_start":109,"line_end":109,"column_start":6,"column_end":16},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":8377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":157334,"byte_end":157341,"line_start":181,"line_end":181,"column_start":32,"column_end":39},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":8419},"to":{"krate":2,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":157523,"byte_end":157530,"line_start":190,"line_end":190,"column_start":36,"column_end":43},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":8419},"to":{"krate":2,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":157703,"byte_end":157710,"line_start":196,"line_end":196,"column_start":31,"column_end":38},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":8419},"to":{"krate":2,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pass.rs","byte_start":157749,"byte_end":157756,"line_start":197,"line_end":197,"column_start":29,"column_end":36},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":8419},"to":{"krate":2,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":158393,"byte_end":158398,"line_start":20,"line_end":20,"column_start":41,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":8829},"to":{"krate":0,"index":641}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":158401,"byte_end":158404,"line_start":20,"line_end":20,"column_start":49,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":3503},"to":{"krate":0,"index":641}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":158407,"byte_end":158411,"line_start":20,"line_end":20,"column_start":55,"column_end":59},"kind":"SuperTrait","from":{"krate":2,"index":2825},"to":{"krate":0,"index":641}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pool.rs","byte_start":158414,"byte_end":158418,"line_start":20,"line_end":20,"column_start":62,"column_end":66},"kind":"SuperTrait","from":{"krate":2,"index":2837},"to":{"krate":0,"index":641}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/compute.rs","byte_start":167116,"byte_end":167135,"line_start":23,"line_end":23,"column_start":22,"column_end":41},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":8515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":173886,"byte_end":173890,"line_start":160,"line_end":160,"column_start":39,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":2825},"to":{"krate":0,"index":710}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":173893,"byte_end":173897,"line_start":160,"line_end":160,"column_start":46,"column_end":50},"kind":"SuperTrait","from":{"krate":2,"index":2837},"to":{"krate":0,"index":710}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/descriptor.rs","byte_start":173905,"byte_end":173910,"line_start":160,"line_end":160,"column_start":58,"column_end":63},"kind":"SuperTrait","from":{"krate":2,"index":8829},"to":{"krate":0,"index":710}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":184517,"byte_end":184537,"line_start":146,"line_end":146,"column_start":22,"column_end":42},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":8885},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/graphics.rs","byte_start":187829,"byte_end":187839,"line_start":237,"line_end":237,"column_start":6,"column_end":16},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":8959},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":190634,"byte_end":190649,"line_start":29,"line_end":29,"column_start":6,"column_end":21},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":9062},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/input_assembler.rs","byte_start":195396,"byte_end":195414,"line_start":136,"line_end":136,"column_start":6,"column_end":24},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":9199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":196923,"byte_end":196932,"line_start":50,"line_end":50,"column_start":18,"column_end":27},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":9261},"to":{"krate":2,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":198572,"byte_end":198579,"line_start":104,"line_end":104,"column_start":6,"column_end":13},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":9449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":199690,"byte_end":199700,"line_start":138,"line_end":138,"column_start":6,"column_end":16},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":9482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":200928,"byte_end":200942,"line_start":182,"line_end":182,"column_start":6,"column_end":20},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":9500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":201532,"byte_end":201541,"line_start":201,"line_end":201,"column_start":6,"column_end":15},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":9520},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":203716,"byte_end":203727,"line_start":259,"line_end":259,"column_start":18,"column_end":29},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":9585},"to":{"krate":2,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":204312,"byte_end":204317,"line_start":280,"line_end":280,"column_start":15,"column_end":20},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":9609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":205563,"byte_end":205574,"line_start":314,"line_end":314,"column_start":18,"column_end":29},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":9639},"to":{"krate":2,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/output_merger.rs","byte_start":206260,"byte_end":206276,"line_start":337,"line_end":337,"column_start":6,"column_end":22},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":9659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":208187,"byte_end":208201,"line_start":33,"line_end":33,"column_start":6,"column_end":20},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":9786},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":208392,"byte_end":208406,"line_start":41,"line_end":41,"column_start":18,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":9786},"to":{"krate":2,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":208699,"byte_end":208704,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2830},"to":{"krate":0,"index":849}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":208786,"byte_end":208800,"line_start":60,"line_end":60,"column_start":21,"column_end":35},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":9786},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":209299,"byte_end":209315,"line_start":85,"line_end":85,"column_start":24,"column_end":40},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":9803},"to":{"krate":0,"index":849}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/specialization.rs","byte_start":209409,"byte_end":209426,"line_start":89,"line_end":89,"column_start":30,"column_end":47},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":9807},"to":{"krate":0,"index":849}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":164313,"byte_end":164323,"line_start":126,"line_end":126,"column_start":32,"column_end":42},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":10141},"to":{"krate":2,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/pso/mod.rs","byte_start":165906,"byte_end":165911,"line_start":177,"line_end":177,"column_start":9,"column_end":14},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":10253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":218528,"byte_end":218533,"line_start":13,"line_end":13,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":8829},"to":{"krate":0,"index":902}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":218536,"byte_end":218539,"line_start":13,"line_end":13,"column_start":32,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":3503},"to":{"krate":0,"index":902}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":218542,"byte_end":218546,"line_start":13,"line_end":13,"column_start":38,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":2825},"to":{"krate":0,"index":902}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":218549,"byte_end":218553,"line_start":13,"line_end":13,"column_start":45,"column_end":49},"kind":"SuperTrait","from":{"krate":2,"index":2837},"to":{"krate":0,"index":902}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/family.rs","byte_start":219319,"byte_end":219329,"line_start":38,"line_end":38,"column_start":18,"column_end":28},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":10674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":215127,"byte_end":215136,"line_start":35,"line_end":35,"column_start":6,"column_end":15},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":10681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":216301,"byte_end":216306,"line_start":67,"line_end":67,"column_start":42,"column_end":47},"kind":"SuperTrait","from":{"krate":2,"index":8829},"to":{"krate":0,"index":952}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":216309,"byte_end":216312,"line_start":67,"line_end":67,"column_start":50,"column_end":53},"kind":"SuperTrait","from":{"krate":2,"index":3503},"to":{"krate":0,"index":952}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":216315,"byte_end":216319,"line_start":67,"line_end":67,"column_start":56,"column_end":60},"kind":"SuperTrait","from":{"krate":2,"index":2825},"to":{"krate":0,"index":952}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/queue/mod.rs","byte_start":216322,"byte_end":216326,"line_start":67,"line_end":67,"column_start":63,"column_end":67},"kind":"SuperTrait","from":{"krate":2,"index":2837},"to":{"krate":0,"index":952}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":223406,"byte_end":223414,"line_start":106,"line_end":106,"column_start":30,"column_end":38},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":10746},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":223561,"byte_end":223569,"line_start":115,"line_end":115,"column_start":6,"column_end":14},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":10746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":225057,"byte_end":225076,"line_start":163,"line_end":163,"column_start":6,"column_end":25},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":10760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":225890,"byte_end":225895,"line_start":183,"line_end":183,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":8829},"to":{"krate":0,"index":1003}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":225898,"byte_end":225901,"line_start":183,"line_end":183,"column_start":45,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":3503},"to":{"krate":0,"index":1003}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":225904,"byte_end":225908,"line_start":183,"line_end":183,"column_start":51,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":2825},"to":{"krate":0,"index":1003}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":225911,"byte_end":225915,"line_start":183,"line_end":183,"column_start":58,"column_end":62},"kind":"SuperTrait","from":{"krate":2,"index":2837},"to":{"krate":0,"index":1003}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":227015,"byte_end":227022,"line_start":207,"line_end":207,"column_start":44,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":1003},"to":{"krate":0,"index":1008}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/window.rs","byte_start":231677,"byte_end":231692,"line_start":326,"line_end":326,"column_start":6,"column_end":21},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":10966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":23898,"byte_end":23901,"line_start":552,"line_end":552,"column_start":33,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":3503},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":23904,"byte_end":23908,"line_start":552,"line_end":552,"column_start":39,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":2825},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":23911,"byte_end":23915,"line_start":552,"line_end":552,"column_start":46,"column_end":50},"kind":"SuperTrait","from":{"krate":2,"index":2837},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":23918,"byte_end":23923,"line_start":552,"line_end":552,"column_start":53,"column_end":58},"kind":"SuperTrait","from":{"krate":2,"index":2830},"to":{"krate":0,"index":1065}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":25477,"byte_end":25489,"line_start":597,"line_end":597,"column_start":22,"column_end":34},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":11901},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":25614,"byte_end":25623,"line_start":605,"line_end":605,"column_start":23,"column_end":32},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1074},"to":{"krate":2,"index":7095}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":26028,"byte_end":26033,"line_start":617,"line_end":617,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2830},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":26036,"byte_end":26038,"line_start":617,"line_end":617,"column_start":38,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2485},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":26041,"byte_end":26046,"line_start":617,"line_end":617,"column_start":43,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":2450},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":26049,"byte_end":26053,"line_start":617,"line_end":617,"column_start":51,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":9035},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":26061,"byte_end":26066,"line_start":617,"line_end":617,"column_start":63,"column_end":68},"kind":"SuperTrait","from":{"krate":2,"index":8829},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":26069,"byte_end":26072,"line_start":617,"line_end":617,"column_start":71,"column_end":74},"kind":"SuperTrait","from":{"krate":2,"index":3503},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":26075,"byte_end":26079,"line_start":617,"line_end":617,"column_start":77,"column_end":81},"kind":"SuperTrait","from":{"krate":2,"index":2825},"to":{"krate":0,"index":1082}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-hal-0.7.0/src/lib.rs","byte_start":26082,"byte_end":26086,"line_start":617,"line_end":617,"column_start":84,"column_end":88},"kind":"SuperTrait","from":{"krate":2,"index":2837},"to":{"krate":0,"index":1082}}]}