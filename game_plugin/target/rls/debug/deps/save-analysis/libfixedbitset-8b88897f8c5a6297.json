{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0","program":"/home/mramirez/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","fixedbitset","/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=8b88897f8c5a6297","-C","extra-filename=-8b88897f8c5a6297","--out-dir","/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps","-L","dependency=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/mramirez/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libfixedbitset-8b88897f8c5a6297.rmeta"},"prelude":{"crate_id":{"name":"fixedbitset","disambiguator":[17266127087240835524,10087726882440464653]},"crate_root":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src","external_crates":[{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[17044353007700780372,2918200604221815240]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[15333840167806743833,9889193056877993824]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[4550415707075219492,6623162258675921486]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[8289379911494056514,13856099756999900329]}}],"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":0,"byte_end":37166,"line_start":1,"line_end":1375,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":29},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":781,"byte_end":791,"line_start":34,"line_end":34,"column_start":16,"column_end":26},"alias_span":null,"name":"IndexRange","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":0,"byte_end":37166,"line_start":1,"line_end":1375,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":227},{"krate":0,"index":87},{"krate":0,"index":125},{"krate":0,"index":129},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":140},{"krate":0,"index":144},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":155},{"krate":0,"index":160},{"krate":0,"index":163},{"krate":0,"index":166},{"krate":0,"index":172},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":205}],"decl_id":null,"docs":" `FixedBitSet` is a simple fixed size set of bits.","sig":null,"attributes":[{"value":"/ `FixedBitSet` is a simple fixed size set of bits.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":0,"byte_end":53,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":54,"byte_end":57,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":58,"byte_end":61,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ ### Crate features","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":62,"byte_end":84,"line_start":4,"line_end":4,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":85,"byte_end":88,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ - `std` (default feature)  ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":89,"byte_end":120,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"/   Disabling this feature disables using std and instead uses crate alloc.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":121,"byte_end":198,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/   Requires Rust 1.36 to disable.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":199,"byte_end":235,"line_start":8,"line_end":8,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":236,"byte_end":239,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ### Rust Version","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":240,"byte_end":260,"line_start":10,"line_end":10,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":261,"byte_end":264,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This version of fixedbitset requires Rust 1.31 or later.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":265,"byte_end":325,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":326,"byte_end":329,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"no_std","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":423,"byte_end":429,"line_start":16,"line_end":16,"column_start":35,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":29},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/range.rs","byte_start":37453,"byte_end":37463,"line_start":12,"line_end":12,"column_start":11,"column_end":21},"name":"IndexRange","qualname":"::range::IndexRange","value":"IndexRange<T = usize>","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32}],"decl_id":null,"docs":" **IndexRange** is implemented by Rust's built-in range types, produced\n by range syntax like `..`, `a..`, `..b` or `c..d`.\n","sig":null,"attributes":[{"value":"/ **IndexRange** is implemented by Rust's built-in range types, produced","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/range.rs","byte_start":37313,"byte_end":37387,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ by range syntax like `..`, `a..`, `..b` or `c..d`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/range.rs","byte_start":37388,"byte_end":37442,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/range.rs","byte_start":37528,"byte_end":37533,"line_start":15,"line_end":15,"column_start":8,"column_end":13},"name":"start","qualname":"::range::IndexRange::start","value":"pub fn start(&Self) -> Option<T>","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Start index (inclusive)\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/range.rs","byte_start":37479,"byte_end":37488,"line_start":13,"line_end":13,"column_start":5,"column_end":14}},{"value":"/ Start index (inclusive)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/range.rs","byte_start":37493,"byte_end":37520,"line_start":14,"line_end":14,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/range.rs","byte_start":37614,"byte_end":37617,"line_start":18,"line_end":18,"column_start":8,"column_end":11},"name":"end","qualname":"::range::IndexRange::end","value":"pub fn end(&Self) -> Option<T>","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" End index (exclusive)\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/range.rs","byte_start":37567,"byte_end":37576,"line_start":16,"line_end":16,"column_start":5,"column_end":14}},{"value":"/ End index (exclusive)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/range.rs","byte_start":37581,"byte_end":37606,"line_start":17,"line_end":17,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":208},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":1245,"byte_end":1256,"line_start":51,"line_end":51,"column_start":12,"column_end":23},"name":"FixedBitSet","qualname":"::FixedBitSet","value":"FixedBitSet {  }","parent":null,"children":[{"krate":0,"index":209},{"krate":0,"index":210}],"decl_id":null,"docs":" `FixedBitSet` is a simple fixed size set of bits that each can\n be enabled (1 / **true**) or disabled (0 / **false**).","sig":null,"attributes":[{"value":"/ `FixedBitSet` is a simple fixed size set of bits that each can","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":920,"byte_end":986,"line_start":45,"line_end":45,"column_start":1,"column_end":67}},{"value":"/ be enabled (1 / **true**) or disabled (0 / **false**).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":987,"byte_end":1045,"line_start":46,"line_end":46,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":1046,"byte_end":1049,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The bit set has a fixed capacity in terms of enabling bits (and the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":1050,"byte_end":1121,"line_start":48,"line_end":48,"column_start":1,"column_end":72}},{"value":"/ capacity can grow using the `grow` method).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":1122,"byte_end":1169,"line_start":49,"line_end":49,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":1454,"byte_end":1467,"line_start":61,"line_end":61,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FixedBitSet>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new **FixedBitSet** with a specific number of bits,\n all initially clear.\n","sig":null,"attributes":[{"value":"/ Create a new **FixedBitSet** with a specific number of bits,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":1349,"byte_end":1413,"line_start":59,"line_end":59,"column_start":5,"column_end":69}},{"value":"/ all initially clear.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":1418,"byte_end":1442,"line_start":60,"line_end":60,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":1764,"byte_end":1768,"line_start":71,"line_end":71,"column_start":12,"column_end":16},"name":"grow","qualname":"<FixedBitSet>::grow","value":"pub fn grow(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Grow capacity to **bits**, all new bits initialized to zero\n","sig":null,"attributes":[{"value":"/ Grow capacity to **bits**, all new bits initialized to zero","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":1689,"byte_end":1752,"line_start":70,"line_end":70,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":2089,"byte_end":2092,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"len","qualname":"<FixedBitSet>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the length of the `FixedBitSet` in bits.\n","sig":null,"attributes":[{"value":"/ Return the length of the `FixedBitSet` in bits.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":2012,"byte_end":2063,"line_start":80,"line_end":80,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":2068,"byte_end":2077,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":2390,"byte_end":2398,"line_start":91,"line_end":91,"column_start":12,"column_end":20},"name":"contains","qualname":"<FixedBitSet>::contains","value":"pub fn contains(&Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return **true** if the bit is enabled in the **FixedBitSet**,\n **false** otherwise.","sig":null,"attributes":[{"value":"/ Return **true** if the bit is enabled in the **FixedBitSet**,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":2130,"byte_end":2195,"line_start":84,"line_end":84,"column_start":5,"column_end":70}},{"value":"/ **false** otherwise.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":2200,"byte_end":2224,"line_start":85,"line_end":85,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":2229,"byte_end":2232,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Note: bits outside the capacity are always disabled.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":2237,"byte_end":2293,"line_start":87,"line_end":87,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":2298,"byte_end":2301,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Note: Also available with index syntax: `bitset[bit]`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":2306,"byte_end":2364,"line_start":89,"line_end":89,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":2369,"byte_end":2378,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":2651,"byte_end":2656,"line_start":102,"line_end":102,"column_start":12,"column_end":17},"name":"clear","qualname":"<FixedBitSet>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear all bits.\n","sig":null,"attributes":[{"value":"/ Clear all bits.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":2606,"byte_end":2625,"line_start":100,"line_end":100,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":2630,"byte_end":2639,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":2855,"byte_end":2861,"line_start":113,"line_end":113,"column_start":12,"column_end":18},"name":"insert","qualname":"<FixedBitSet>::insert","value":"pub fn insert(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Enable `bit`.","sig":null,"attributes":[{"value":"/ Enable `bit`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":2756,"byte_end":2773,"line_start":109,"line_end":109,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":2778,"byte_end":2781,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ **Panics** if **bit** is out of bounds.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":2786,"byte_end":2829,"line_start":111,"line_end":111,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":2834,"byte_end":2843,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":3199,"byte_end":3202,"line_start":126,"line_end":126,"column_start":12,"column_end":15},"name":"put","qualname":"<FixedBitSet>::put","value":"pub fn put(&mut Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Enable `bit`, and return its previous value.","sig":null,"attributes":[{"value":"/ Enable `bit`, and return its previous value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":3069,"byte_end":3117,"line_start":122,"line_end":122,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":3122,"byte_end":3125,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ **Panics** if **bit** is out of bounds.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":3130,"byte_end":3173,"line_start":124,"line_end":124,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":3178,"byte_end":3187,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":3631,"byte_end":3637,"line_start":141,"line_end":141,"column_start":12,"column_end":18},"name":"toggle","qualname":"<FixedBitSet>::toggle","value":"pub fn toggle(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Toggle `bit` (inverting its state).","sig":null,"attributes":[{"value":"/ Toggle `bit` (inverting its state).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":3509,"byte_end":3548,"line_start":137,"line_end":137,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":3553,"byte_end":3556,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if **bit** is out of bounds","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":3561,"byte_end":3605,"line_start":139,"line_end":139,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":3610,"byte_end":3619,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":3909,"byte_end":3912,"line_start":150,"line_end":150,"column_start":12,"column_end":15},"name":"set","qualname":"<FixedBitSet>::set","value":"pub fn set(&mut Self, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" **Panics** if **bit** is out of bounds.\n","sig":null,"attributes":[{"value":"/ **Panics** if **bit** is out of bounds.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":3840,"byte_end":3883,"line_start":148,"line_end":148,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":3888,"byte_end":3897,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":4407,"byte_end":4415,"line_start":168,"line_end":168,"column_start":12,"column_end":20},"name":"copy_bit","qualname":"<FixedBitSet>::copy_bit","value":"pub fn copy_bit(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Copies boolean value from specified bit to the specified bit.","sig":null,"attributes":[{"value":"/ Copies boolean value from specified bit to the specified bit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":4261,"byte_end":4326,"line_start":164,"line_end":164,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":4331,"byte_end":4334,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ **Panics** if **to** is out of bounds.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":4339,"byte_end":4381,"line_start":166,"line_end":166,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":4386,"byte_end":4395,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":5042,"byte_end":5052,"line_start":189,"line_end":189,"column_start":12,"column_end":22},"name":"count_ones","qualname":"<FixedBitSet>::count_ones","value":"pub fn count_ones<T: IndexRange>(&Self, T) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Count the number of set bits in the given bit range.","sig":null,"attributes":[{"value":"/ Count the number of set bits in the given bit range.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":4817,"byte_end":4873,"line_start":183,"line_end":183,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":4878,"byte_end":4881,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ Use `..` to count the whole content of the bitset.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":4886,"byte_end":4940,"line_start":185,"line_end":185,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":4945,"byte_end":4948,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the range extends past the end of the bitset.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":4953,"byte_end":5016,"line_start":187,"line_end":187,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":5021,"byte_end":5030,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":5563,"byte_end":5572,"line_start":205,"line_end":205,"column_start":12,"column_end":21},"name":"set_range","qualname":"<FixedBitSet>::set_range","value":"pub fn set_range<T: IndexRange>(&mut Self, T, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets every bit in the given range to the given state (`enabled`)","sig":null,"attributes":[{"value":"/ Sets every bit in the given range to the given state (`enabled`)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":5340,"byte_end":5408,"line_start":199,"line_end":199,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":5413,"byte_end":5416,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Use `..` to toggle the whole bitset.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":5421,"byte_end":5461,"line_start":201,"line_end":201,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":5466,"byte_end":5469,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the range extends past the end of the bitset.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":5474,"byte_end":5537,"line_start":203,"line_end":203,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":5542,"byte_end":5551,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":6150,"byte_end":6162,"line_start":224,"line_end":224,"column_start":12,"column_end":24},"name":"insert_range","qualname":"<FixedBitSet>::insert_range","value":"pub fn insert_range<T: IndexRange>(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Enables every bit in the given range.","sig":null,"attributes":[{"value":"/ Enables every bit in the given range.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":5951,"byte_end":5992,"line_start":218,"line_end":218,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":5997,"byte_end":6000,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Use `..` to make the whole bitset ones.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":6005,"byte_end":6048,"line_start":220,"line_end":220,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":6053,"byte_end":6056,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ **Panics** if the range extends past the end of the bitset.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":6061,"byte_end":6124,"line_start":222,"line_end":222,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":6129,"byte_end":6138,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":6325,"byte_end":6333,"line_start":231,"line_end":231,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<FixedBitSet>::as_slice","value":"pub fn as_slice(&Self) -> &[u32]","parent":null,"children":[],"decl_id":null,"docs":" View the bitset as a slice of `u32` blocks\n","sig":null,"attributes":[{"value":"/ View the bitset as a slice of `u32` blocks","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":6253,"byte_end":6299,"line_start":229,"line_end":229,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":6304,"byte_end":6313,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":6606,"byte_end":6618,"line_start":239,"line_end":239,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<FixedBitSet>::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut [u32]","parent":null,"children":[],"decl_id":null,"docs":" View the bitset as a mutable slice of `u32` blocks. Writing past the bitlength in the last\n will cause `contains` to return potentially incorrect results for bits past the bitlength.\n","sig":null,"attributes":[{"value":"/ View the bitset as a mutable slice of `u32` blocks. Writing past the bitlength in the last","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":6387,"byte_end":6481,"line_start":236,"line_end":236,"column_start":5,"column_end":99}},{"value":"/ will cause `contains` to return potentially incorrect results for bits past the bitlength.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":6486,"byte_end":6580,"line_start":237,"line_end":237,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":6585,"byte_end":6594,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":6821,"byte_end":6825,"line_start":248,"line_end":248,"column_start":12,"column_end":16},"name":"ones","qualname":"<FixedBitSet>::ones","value":"pub fn ones(&Self) -> Ones","parent":null,"children":[],"decl_id":null,"docs":" Iterates over all enabled bits.","sig":null,"attributes":[{"value":"/ Iterates over all enabled bits.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":6684,"byte_end":6719,"line_start":244,"line_end":244,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":6724,"byte_end":6727,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ Iterator element is the index of the `1` bit, type `usize`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":6732,"byte_end":6795,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":6800,"byte_end":6809,"line_start":247,"line_end":247,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":7490,"byte_end":7502,"line_start":270,"line_end":270,"column_start":12,"column_end":24},"name":"intersection","qualname":"<FixedBitSet>::intersection","value":"pub fn intersection<'a>(&'a Self, &'a FixedBitSet) -> Intersection","parent":null,"children":[],"decl_id":null,"docs":" Returns a lazy iterator over the intersection of two `FixedBitSet`s\n","sig":null,"attributes":[{"value":"/ Returns a lazy iterator over the intersection of two `FixedBitSet`s","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":7407,"byte_end":7478,"line_start":269,"line_end":269,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":7745,"byte_end":7750,"line_start":279,"line_end":279,"column_start":12,"column_end":17},"name":"union","qualname":"<FixedBitSet>::union","value":"pub fn union<'a>(&'a Self, &'a FixedBitSet) -> Union","parent":null,"children":[],"decl_id":null,"docs":" Returns a lazy iterator over the union of two `FixedBitSet`s.\n","sig":null,"attributes":[{"value":"/ Returns a lazy iterator over the union of two `FixedBitSet`s.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":7668,"byte_end":7733,"line_start":278,"line_end":278,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":8071,"byte_end":8081,"line_start":288,"line_end":288,"column_start":12,"column_end":22},"name":"difference","qualname":"<FixedBitSet>::difference","value":"pub fn difference<'a>(&'a Self, &'a FixedBitSet) -> Difference","parent":null,"children":[],"decl_id":null,"docs":" Returns a lazy iterator over the difference of two `FixedBitSet`s. The difference of `a`\n and `b` is the elements of `a` which are not in `b`.\n","sig":null,"attributes":[{"value":"/ Returns a lazy iterator over the difference of two `FixedBitSet`s. The difference of `a`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":7906,"byte_end":7998,"line_start":286,"line_end":286,"column_start":5,"column_end":97}},{"value":"/ and `b` is the elements of `a` which are not in `b`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":8003,"byte_end":8059,"line_start":287,"line_end":287,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":8427,"byte_end":8447,"line_start":298,"line_end":298,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<FixedBitSet>::symmetric_difference","value":"pub fn symmetric_difference<'a>(&'a Self, &'a FixedBitSet)\n-> SymmetricDifference","parent":null,"children":[],"decl_id":null,"docs":" Returns a lazy iterator over the symmetric difference of two `FixedBitSet`s.\n The symmetric difference of `a` and `b` is the elements of one, but not both, sets.\n","sig":null,"attributes":[{"value":"/ Returns a lazy iterator over the symmetric difference of two `FixedBitSet`s.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":8243,"byte_end":8323,"line_start":296,"line_end":296,"column_start":5,"column_end":85}},{"value":"/ The symmetric difference of `a` and `b` is the elements of one, but not both, sets.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":8328,"byte_end":8415,"line_start":297,"line_end":297,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":8695,"byte_end":8705,"line_start":306,"line_end":306,"column_start":12,"column_end":22},"name":"union_with","qualname":"<FixedBitSet>::union_with","value":"pub fn union_with(&mut Self, &FixedBitSet)","parent":null,"children":[],"decl_id":null,"docs":" In-place union of two `FixedBitSet`s.\n","sig":null,"attributes":[{"value":"/ In-place union of two `FixedBitSet`s.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":8642,"byte_end":8683,"line_start":305,"line_end":305,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":9000,"byte_end":9014,"line_start":317,"line_end":317,"column_start":12,"column_end":26},"name":"intersect_with","qualname":"<FixedBitSet>::intersect_with","value":"pub fn intersect_with(&mut Self, &FixedBitSet)","parent":null,"children":[],"decl_id":null,"docs":" In-place intersection of two `FixedBitSet`s.\n","sig":null,"attributes":[{"value":"/ In-place intersection of two `FixedBitSet`s.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":8940,"byte_end":8988,"line_start":316,"line_end":316,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":9370,"byte_end":9395,"line_start":329,"line_end":329,"column_start":12,"column_end":37},"name":"symmetric_difference_with","qualname":"<FixedBitSet>::symmetric_difference_with","value":"pub fn symmetric_difference_with(&mut Self, &FixedBitSet)","parent":null,"children":[],"decl_id":null,"docs":" In-place symmetric difference of two `FixedBitSet`s.\n","sig":null,"attributes":[{"value":"/ In-place symmetric difference of two `FixedBitSet`s.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":9302,"byte_end":9358,"line_start":328,"line_end":328,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":9776,"byte_end":9787,"line_start":341,"line_end":341,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<FixedBitSet>::is_disjoint","value":"pub fn is_disjoint(&Self, &FixedBitSet) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` has no elements in common with `other`. This\n is equivalent to checking for an empty intersection.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` has no elements in common with `other`. This","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":9630,"byte_end":9703,"line_start":339,"line_end":339,"column_start":5,"column_end":78}},{"value":"/ is equivalent to checking for an empty intersection.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":9708,"byte_end":9764,"line_start":340,"line_end":340,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":10040,"byte_end":10049,"line_start":347,"line_end":347,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<FixedBitSet>::is_subset","value":"pub fn is_subset(&Self, &FixedBitSet) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a subset of another, i.e. `other` contains\n at least all the values in `self`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set is a subset of another, i.e. `other` contains","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":9910,"byte_end":9985,"line_start":345,"line_end":345,"column_start":5,"column_end":80}},{"value":"/ at least all the values in `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":9990,"byte_end":10028,"line_start":346,"line_end":346,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":10373,"byte_end":10384,"line_start":354,"line_end":354,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<FixedBitSet>::is_superset","value":"pub fn is_superset(&Self, &FixedBitSet) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a superset of another, i.e. `self` contains\n at least all the values in `other`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set is a superset of another, i.e. `self` contains","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":10241,"byte_end":10317,"line_start":352,"line_end":352,"column_start":5,"column_end":81}},{"value":"/ at least all the values in `other`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":10322,"byte_end":10361,"line_start":353,"line_end":353,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":125},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":10613,"byte_end":10623,"line_start":362,"line_end":362,"column_start":12,"column_end":22},"name":"Difference","qualname":"::Difference","value":"Difference {  }","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"decl_id":null,"docs":" An iterator producing elements in the difference of two sets.","sig":null,"attributes":[{"value":"/ An iterator producing elements in the difference of two sets.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":10462,"byte_end":10527,"line_start":359,"line_end":359,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":10528,"byte_end":10531,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`FixedBitSet::difference`] method.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":10532,"byte_end":10601,"line_start":361,"line_end":361,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":133},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":11148,"byte_end":11167,"line_start":384,"line_end":384,"column_start":12,"column_end":31},"name":"SymmetricDifference","qualname":"::SymmetricDifference","value":"SymmetricDifference {  }","parent":null,"children":[{"krate":0,"index":135}],"decl_id":null,"docs":" An iterator producing elements in the symmetric difference of two sets.","sig":null,"attributes":[{"value":"/ An iterator producing elements in the symmetric difference of two sets.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":10977,"byte_end":11052,"line_start":381,"line_end":381,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":11053,"byte_end":11056,"line_start":382,"line_end":382,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`FixedBitSet::symmetric_difference`] method.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":11057,"byte_end":11136,"line_start":383,"line_end":383,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":140},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":11549,"byte_end":11561,"line_start":401,"line_end":401,"column_start":12,"column_end":24},"name":"Intersection","qualname":"::Intersection","value":"Intersection {  }","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143}],"decl_id":null,"docs":" An iterator producing elements in the intersection of two sets.","sig":null,"attributes":[{"value":"/ An iterator producing elements in the intersection of two sets.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":11394,"byte_end":11461,"line_start":398,"line_end":398,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":11462,"byte_end":11465,"line_start":399,"line_end":399,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`FixedBitSet::intersection`] method.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":11466,"byte_end":11537,"line_start":400,"line_end":400,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":148},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":12088,"byte_end":12093,"line_start":423,"line_end":423,"column_start":12,"column_end":17},"name":"Union","qualname":"::Union","value":"Union {  }","parent":null,"children":[{"krate":0,"index":150}],"decl_id":null,"docs":" An iterator producing elements in the union of two sets.","sig":null,"attributes":[{"value":"/ An iterator producing elements in the union of two sets.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":11947,"byte_end":12007,"line_start":420,"line_end":420,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":12008,"byte_end":12011,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`FixedBitSet::union`] method.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":12012,"byte_end":12076,"line_start":422,"line_end":422,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":166},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":14032,"byte_end":14036,"line_start":494,"line_end":494,"column_start":12,"column_end":16},"name":"Ones","qualname":"::Ones","value":"Ones {  }","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171}],"decl_id":null,"docs":" An  iterator producing the indices of the set bit in a set.","sig":null,"attributes":[{"value":"/ An  iterator producing the indices of the set bit in a set.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":13889,"byte_end":13952,"line_start":491,"line_end":491,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":13953,"byte_end":13956,"line_start":492,"line_end":492,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`FixedBitSet::ones`] method.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":13957,"byte_end":14020,"line_start":493,"line_end":493,"column_start":1,"column_end":64}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/range.rs","byte_start":37677,"byte_end":37686,"line_start":22,"line_end":22,"column_start":27,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/range.rs","byte_start":37723,"byte_end":37732,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/range.rs","byte_start":37841,"byte_end":37848,"line_start":29,"line_end":29,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/range.rs","byte_start":37953,"byte_end":37958,"line_start":34,"line_end":34,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":1331,"byte_end":1342,"line_start":57,"line_end":57,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":10703,"byte_end":10713,"line_start":367,"line_end":367,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":11248,"byte_end":11267,"line_start":388,"line_end":388,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":11641,"byte_end":11653,"line_start":406,"line_end":406,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":12168,"byte_end":12173,"line_start":427,"line_end":427,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":12415,"byte_end":12420,"line_start":444,"line_end":444,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":13134,"byte_end":13139,"line_start":464,"line_end":464,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":14186,"byte_end":14190,"line_start":501,"line_end":501,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":15400,"byte_end":15411,"line_start":541,"line_end":541,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":15793,"byte_end":15804,"line_start":558,"line_end":558,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":16107,"byte_end":16118,"line_start":574,"line_end":574,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":16530,"byte_end":16541,"line_start":589,"line_end":589,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":17319,"byte_end":17330,"line_start":619,"line_end":619,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":18034,"byte_end":18045,"line_start":646,"line_end":646,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":18747,"byte_end":18758,"line_start":673,"line_end":673,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/range.rs","byte_start":37677,"byte_end":37686,"line_start":22,"line_end":22,"column_start":27,"column_end":36},"kind":{"Impl":{"id":0}},"from":{"krate":1,"index":38312},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/range.rs","byte_start":37723,"byte_end":37732,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":1}},"from":{"krate":1,"index":38353},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/range.rs","byte_start":37841,"byte_end":37848,"line_start":29,"line_end":29,"column_start":33,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":1,"index":38374},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/range.rs","byte_start":37953,"byte_end":37958,"line_start":34,"line_end":34,"column_start":33,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":1,"index":38328},"to":{"krate":0,"index":29}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":1331,"byte_end":1342,"line_start":57,"line_end":57,"column_start":6,"column_end":17},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":10703,"byte_end":10713,"line_start":367,"line_end":367,"column_start":23,"column_end":33},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":125},"to":{"krate":1,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":11248,"byte_end":11267,"line_start":388,"line_end":388,"column_start":23,"column_end":42},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":133},"to":{"krate":1,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":11641,"byte_end":11653,"line_start":406,"line_end":406,"column_start":23,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":140},"to":{"krate":1,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":12168,"byte_end":12173,"line_start":427,"line_end":427,"column_start":23,"column_end":28},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":148},"to":{"krate":1,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":12415,"byte_end":12420,"line_start":444,"line_end":444,"column_start":6,"column_end":11},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":13134,"byte_end":13139,"line_start":464,"line_end":464,"column_start":19,"column_end":24},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":155},"to":{"krate":1,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":14186,"byte_end":14190,"line_start":501,"line_end":501,"column_start":23,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":166},"to":{"krate":1,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":15400,"byte_end":15411,"line_start":541,"line_end":541,"column_start":16,"column_end":27},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":208},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":15793,"byte_end":15804,"line_start":558,"line_end":558,"column_start":23,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":208},"to":{"krate":1,"index":3132}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":16107,"byte_end":16118,"line_start":574,"line_end":574,"column_start":24,"column_end":35},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":208},"to":{"krate":1,"index":7095}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":16530,"byte_end":16541,"line_start":589,"line_end":589,"column_start":30,"column_end":41},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":208},"to":{"krate":1,"index":7082}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":17319,"byte_end":17330,"line_start":619,"line_end":619,"column_start":28,"column_end":39},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":208},"to":{"krate":1,"index":2975}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":18034,"byte_end":18045,"line_start":646,"line_end":646,"column_start":27,"column_end":38},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":208},"to":{"krate":1,"index":2979}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/fixedbitset-0.2.0/src/lib.rs","byte_start":18747,"byte_end":18758,"line_start":673,"line_end":673,"column_start":28,"column_end":39},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":208},"to":{"krate":1,"index":2983}}]}