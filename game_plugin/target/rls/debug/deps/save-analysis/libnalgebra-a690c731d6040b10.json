{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1","program":"/home/mramirez/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","nalgebra","--edition=2018","/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"matrixmultiply\"","--cfg","feature=\"rand_distr\"","--cfg","feature=\"std\"","-C","metadata=a690c731d6040b10","-C","extra-filename=-a690c731d6040b10","--out-dir","/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps","-L","dependency=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps","--extern","approx=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libapprox-06a7d007d1edc59c.rmeta","--extern","generic_array=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libgeneric_array-b11df2ce2456e647.rmeta","--extern","matrixmultiply=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libmatrixmultiply-bfc9d4e69ddb5031.rmeta","--extern","num_complex=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libnum_complex-56aaa84bea413198.rmeta","--extern","num_rational=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libnum_rational-3b3ba3de47bfad13.rmeta","--extern","num_traits=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libnum_traits-ea482ab16ed9c760.rmeta","--extern","rand=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/librand-96e2038b118874f1.rmeta","--extern","rand_distr=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/librand_distr-65aa13cc6337c0f6.rmeta","--extern","simba=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libsimba-783e1a3e175430f0.rmeta","--extern","typenum=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libtypenum-a3b710b7a61f7674.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/mramirez/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libnalgebra-a690c731d6040b10.rmeta"},"prelude":{"crate_id":{"name":"nalgebra","disambiguator":[14144941976162500602,11062144384393708085]},"crate_root":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src","external_crates":[{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[397594041871667817,11704163070354659695]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17044353007700780372,2918200604221815240]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15333840167806743833,9889193056877993824]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4550415707075219492,6623162258675921486]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8289379911494056514,13856099756999900329]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10514502805115346386,576110030083780649]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9878185313679130060,1975285035821961205]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4010603182529655334,7152219772350788052]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[1807637986128902209,18379128151258407121]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11140927657351163542,6267109750485550558]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[13809795498598848728,13320395723520943315]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13869841232067652907,9875669357213642224]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15533050656730733495,14669839968799848603]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[14371692877540073659,8181723439448527964]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[639541300699627395,1995254029228069844]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[12482123824895737424,11765111494567609733]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[1169880241773671279,8605314106566979368]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[5016943468141875609,13494347935157563341]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","num":19,"id":{"name":"approx","disambiguator":[8399984604986141841,6775941998133769338]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","num":20,"id":{"name":"num_traits","disambiguator":[252308066493949436,2163249747488123429]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","num":21,"id":{"name":"matrixmultiply","disambiguator":[2274155018901953730,17414459645381320805]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","num":22,"id":{"name":"rawpointer","disambiguator":[4635045592451743179,5381038250784064053]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","num":23,"id":{"name":"rand_distr","disambiguator":[5656868309982696031,18315493617060894995]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","num":24,"id":{"name":"rand","disambiguator":[12423217451485152627,15263911417786650330]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","num":25,"id":{"name":"rand_core","disambiguator":[15825775390360444024,5250659623049689166]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","num":26,"id":{"name":"getrandom","disambiguator":[10560646826253758128,3618507949803183832]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","num":27,"id":{"name":"cfg_if","disambiguator":[3051334588151808042,8832791441195491324]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","num":28,"id":{"name":"libc","disambiguator":[18406178008256737583,6506690069580327237]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","num":29,"id":{"name":"rand_chacha","disambiguator":[459975489274911096,6694243427068565185]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","num":30,"id":{"name":"ppv_lite86","disambiguator":[13885373846393820006,7361989088083755370]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","num":31,"id":{"name":"simba","disambiguator":[118766226543362521,15110569108415853282]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","num":32,"id":{"name":"num_complex","disambiguator":[757554246556960464,5673683946076055148]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","num":33,"id":{"name":"paste","disambiguator":[11083907628798871922,4855005286588671960]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/default_allocator.rs","num":34,"id":{"name":"generic_array","disambiguator":[9428434745388801956,16546672797202885907]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/default_allocator.rs","num":35,"id":{"name":"typenum","disambiguator":[2506208498439511421,12717246113645441348]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","num":36,"id":{"name":"num_rational","disambiguator":[2148704086384073042,14702411136547114948]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","num":37,"id":{"name":"num_integer","disambiguator":[13900853045529443975,10085131790906256585]}}],"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":0,"byte_end":14800,"line_start":1,"line_end":541,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/mod.rs","byte_start":15538,"byte_end":15539,"line_start":42,"line_end":42,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"MatrixSum, Vector, RowVector, SquareMatrix, VectorSum, Matrix","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/mod.rs","byte_start":15561,"byte_end":15562,"line_start":43,"line_end":43,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"Norm","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/mod.rs","byte_start":15586,"byte_end":15587,"line_start":44,"line_end":44,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"Scalar","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/mod.rs","byte_start":15609,"byte_end":15610,"line_start":45,"line_end":45,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"Normed, Unit","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/mod.rs","byte_start":15646,"byte_end":15647,"line_start":47,"line_end":47,"column_start":34,"column_end":35},"alias_span":null,"name":"*","value":"DefaultAllocator","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/mod.rs","byte_start":15674,"byte_end":15675,"line_start":48,"line_end":48,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"DimSub, DimMinimum, Dynamic, U1, Dim, U2, DimMin, DimDiff, U3, DimName","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/mod.rs","byte_start":15699,"byte_end":15700,"line_start":50,"line_end":50,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Vector2, DVector, Matrix2, Vector6, Matrix2x3, Vector3, MatrixMN, VectorN, Matrix3, Vector4, Vector1, Matrix4, DMatrix, MatrixN, RowVectorN, Vector5","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/mod.rs","byte_start":15729,"byte_end":15730,"line_start":51,"line_end":51,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"DVectorSliceMut, DVectorSlice, MatrixSliceMutMN, MatrixSliceMN, VectorSliceN","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/mod.rs","byte_start":15761,"byte_end":15762,"line_start":52,"line_end":52,"column_start":30,"column_end":31},"alias_span":null,"name":"*","value":"ArrayStorage","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/mod.rs","byte_start":15792,"byte_end":15793,"line_start":53,"line_end":53,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"MatrixSliceMut, MatrixSlice, SliceStorageMut, SliceStorage","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/mod.rs","byte_start":15870,"byte_end":15871,"line_start":55,"line_end":55,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"VecStorage","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":5299},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/mod.rs","byte_start":547903,"byte_end":547919,"line_start":95,"line_end":95,"column_start":34,"column_end":50},"alias_span":null,"name":"AbstractRotation","value":"","parent":{"krate":0,"index":5246}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/mod.rs","byte_start":547943,"byte_end":547944,"line_start":97,"line_end":97,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Point","parent":{"krate":0,"index":5246}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/mod.rs","byte_start":547973,"byte_end":547974,"line_start":98,"line_end":98,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"Point2, Point4, Point5, Point3, Point1, Point6","parent":{"krate":0,"index":5246}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/mod.rs","byte_start":548001,"byte_end":548002,"line_start":100,"line_end":100,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"Rotation","parent":{"krate":0,"index":5246}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/mod.rs","byte_start":548034,"byte_end":548035,"line_start":101,"line_end":101,"column_start":31,"column_end":32},"alias_span":null,"name":"*","value":"Rotation2, Rotation3","parent":{"krate":0,"index":5246}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/mod.rs","byte_start":548064,"byte_end":548065,"line_start":103,"line_end":103,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"UnitQuaternion, Quaternion","parent":{"krate":0,"index":5246}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/mod.rs","byte_start":548099,"byte_end":548100,"line_start":105,"line_end":105,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"DualQuaternion","parent":{"krate":0,"index":5246}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/mod.rs","byte_start":548131,"byte_end":548132,"line_start":107,"line_end":107,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"UnitComplex","parent":{"krate":0,"index":5246}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/mod.rs","byte_start":548162,"byte_end":548163,"line_start":109,"line_end":109,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"Translation","parent":{"krate":0,"index":5246}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/mod.rs","byte_start":548198,"byte_end":548199,"line_start":110,"line_end":110,"column_start":34,"column_end":35},"alias_span":null,"name":"*","value":"Translation3, Translation2","parent":{"krate":0,"index":5246}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/mod.rs","byte_start":548226,"byte_end":548227,"line_start":112,"line_end":112,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"Isometry","parent":{"krate":0,"index":5246}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/mod.rs","byte_start":548259,"byte_end":548260,"line_start":113,"line_end":113,"column_start":31,"column_end":32},"alias_span":null,"name":"*","value":"Isometry2, IsometryMatrix3, IsometryMatrix2, Isometry3","parent":{"krate":0,"index":5246}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/mod.rs","byte_start":548289,"byte_end":548290,"line_start":115,"line_end":115,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"Similarity","parent":{"krate":0,"index":5246}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/mod.rs","byte_start":548324,"byte_end":548325,"line_start":116,"line_end":116,"column_start":33,"column_end":34},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":5246}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/mod.rs","byte_start":548353,"byte_end":548354,"line_start":118,"line_end":118,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"TProjective, SuperTCategoryOf, SubTCategoryOf, TAffine, TGeneral, TCategoryMul, Transform, TCategory","parent":{"krate":0,"index":5246}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/mod.rs","byte_start":548387,"byte_end":548388,"line_start":119,"line_end":119,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"Projective3","parent":{"krate":0,"index":5246}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/mod.rs","byte_start":548417,"byte_end":548418,"line_start":121,"line_end":121,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"Reflection","parent":{"krate":0,"index":5246}},{"kind":"Use","ref_id":{"krate":0,"index":10376},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/mod.rs","byte_start":548449,"byte_end":548462,"line_start":123,"line_end":123,"column_start":29,"column_end":42},"alias_span":null,"name":"Orthographic3","value":"","parent":{"krate":0,"index":5246}},{"kind":"Use","ref_id":{"krate":0,"index":10480},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/mod.rs","byte_start":548491,"byte_end":548503,"line_start":124,"line_end":124,"column_start":28,"column_end":40},"alias_span":null,"name":"Perspective3","value":"","parent":{"krate":0,"index":5246}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/mod.rs","byte_start":1114164,"byte_end":1114165,"line_start":32,"line_end":32,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"Bidiagonal","parent":{"krate":0,"index":10553}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/mod.rs","byte_start":1114191,"byte_end":1114192,"line_start":33,"line_end":33,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"Cholesky","parent":{"krate":0,"index":10553}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/mod.rs","byte_start":1114221,"byte_end":1114222,"line_start":34,"line_end":34,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":10553}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/mod.rs","byte_start":1114267,"byte_end":1114268,"line_start":36,"line_end":36,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":10553}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/mod.rs","byte_start":1114297,"byte_end":1114298,"line_start":37,"line_end":37,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"FullPivLU","parent":{"krate":0,"index":10553}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/mod.rs","byte_start":1114326,"byte_end":1114327,"line_start":38,"line_end":38,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"Hessenberg","parent":{"krate":0,"index":10553}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/mod.rs","byte_start":1114347,"byte_end":1114348,"line_start":39,"line_end":39,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"LU","parent":{"krate":0,"index":10553}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/mod.rs","byte_start":1114386,"byte_end":1114387,"line_start":40,"line_end":40,"column_start":37,"column_end":38},"alias_span":null,"name":"*","value":"PermutationSequence","parent":{"krate":0,"index":10553}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/mod.rs","byte_start":1114407,"byte_end":1114408,"line_start":41,"line_end":41,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"QR","parent":{"krate":0,"index":10553}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/mod.rs","byte_start":1114431,"byte_end":1114432,"line_start":42,"line_end":42,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Schur","parent":{"krate":0,"index":10553}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/mod.rs","byte_start":1114453,"byte_end":1114454,"line_start":43,"line_end":43,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"SVD","parent":{"krate":0,"index":10553}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/mod.rs","byte_start":1114487,"byte_end":1114488,"line_start":44,"line_end":44,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"SymmetricEigen","parent":{"krate":0,"index":10553}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/mod.rs","byte_start":1114527,"byte_end":1114528,"line_start":45,"line_end":45,"column_start":38,"column_end":39},"alias_span":null,"name":"*","value":"SymmetricTridiagonal","parent":{"krate":0,"index":10553}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":4281,"byte_end":4282,"line_start":134,"line_end":134,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Norm, Vector6, Vector3, MatrixMN, VectorN, Unit, Vector, DimSub, dimension, constraint, RowVectorN, Vector5, Scalar, Vector2, DimMinimum, U1, VectorSliceN, Matrix, U2, storage, Normed, Vector4, DefaultAllocator, Dim, Vector1, DimMin, DimDiff, MatrixN, allocator, U3, DimName","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":4309,"byte_end":4310,"line_start":135,"line_end":135,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"Isometry2, Quaternion, Rotation2, IsometryMatrix2, UnitQuaternion, Point, Point4, Point3, DualQuaternion, UnitComplex, Point5, Point1, Rotation3, Point2, IsometryMatrix3, Point6, Isometry3","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":4335,"byte_end":4336,"line_start":136,"line_end":136,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"SymmetricTridiagonal, Bidiagonal, Cholesky, Hessenberg, QR, Schur, LU, SVD, SymmetricEigen, FullPivLU","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":4540,"byte_end":4544,"line_start":143,"line_end":143,"column_start":9,"column_end":13},"alias_span":null,"name":"core","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":32,"index":523},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":4715,"byte_end":4722,"line_start":151,"line_end":151,"column_start":22,"column_end":29},"alias_span":null,"name":"Complex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":31,"index":230},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":4753,"byte_end":4762,"line_start":153,"line_end":153,"column_start":5,"column_end":14},"alias_span":null,"name":"ClosedAdd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":31,"index":236},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":4764,"byte_end":4773,"line_start":153,"line_end":153,"column_start":16,"column_end":25},"alias_span":null,"name":"ClosedDiv","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":31,"index":234},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":4775,"byte_end":4784,"line_start":153,"line_end":153,"column_start":27,"column_end":36},"alias_span":null,"name":"ClosedMul","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":31,"index":232},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":4786,"byte_end":4795,"line_start":153,"line_end":153,"column_start":38,"column_end":47},"alias_span":null,"name":"ClosedSub","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":31,"index":134},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":4797,"byte_end":4809,"line_start":153,"line_end":153,"column_start":49,"column_end":61},"alias_span":null,"name":"ComplexField","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":31,"index":253},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":4811,"byte_end":4816,"line_start":153,"line_end":153,"column_start":63,"column_end":68},"alias_span":null,"name":"Field","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":31,"index":62},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":4818,"byte_end":4827,"line_start":153,"line_end":153,"column_start":70,"column_end":79},"alias_span":null,"name":"RealField","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":31,"index":572},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":4854,"byte_end":4862,"line_start":155,"line_end":155,"column_start":23,"column_end":31},"alias_span":null,"name":"SimdBool","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":31,"index":667},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":4864,"byte_end":4880,"line_start":155,"line_end":155,"column_start":33,"column_end":49},"alias_span":null,"name":"SimdComplexField","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":31,"index":750},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":4882,"byte_end":4896,"line_start":155,"line_end":155,"column_start":51,"column_end":65},"alias_span":null,"name":"SimdPartialOrd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":31,"index":789},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":4898,"byte_end":4911,"line_start":155,"line_end":155,"column_start":67,"column_end":80},"alias_span":null,"name":"SimdRealField","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":0,"byte_end":14800,"line_start":1,"line_end":541,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":5246},{"krate":0,"index":10553},{"krate":0,"index":12202},{"krate":0,"index":12203},{"krate":0,"index":12204},{"krate":0,"index":12205},{"krate":0,"index":12208},{"krate":0,"index":12211},{"krate":0,"index":12212},{"krate":0,"index":12215},{"krate":0,"index":12218},{"krate":0,"index":12219},{"krate":0,"index":12221},{"krate":0,"index":12222},{"krate":0,"index":12225},{"krate":0,"index":12228},{"krate":0,"index":12231},{"krate":0,"index":12234},{"krate":0,"index":12237},{"krate":0,"index":12238},{"krate":0,"index":12241},{"krate":0,"index":12244},{"krate":0,"index":12247},{"krate":0,"index":12250},{"krate":0,"index":12253},{"krate":0,"index":12256},{"krate":0,"index":12259},{"krate":0,"index":12260},{"krate":0,"index":12263},{"krate":0,"index":12266},{"krate":0,"index":12269},{"krate":0,"index":12272},{"krate":0,"index":12274},{"krate":0,"index":12276},{"krate":0,"index":12278},{"krate":0,"index":12280},{"krate":0,"index":12282},{"krate":0,"index":12284},{"krate":0,"index":12286},{"krate":0,"index":12290},{"krate":0,"index":12294},{"krate":0,"index":12298},{"krate":0,"index":12300},{"krate":0,"index":12302},{"krate":0,"index":12304},{"krate":0,"index":12306},{"krate":0,"index":12308},{"krate":0,"index":12311},{"krate":0,"index":12314},{"krate":0,"index":12317},{"krate":0,"index":12320},{"krate":0,"index":12323},{"krate":0,"index":12326},{"krate":0,"index":12329},{"krate":0,"index":12332},{"krate":0,"index":12335},{"krate":0,"index":12338},{"krate":0,"index":12341},{"krate":0,"index":12344},{"krate":0,"index":12347}],"decl_id":null,"docs":"# nalgebra","sig":null,"attributes":[{"value":"*\n# nalgebra\n\n**nalgebra** is a linear algebra library written for Rust targeting:\n\n* General-purpose linear algebra (still lacks a lot of features…)\n* Real-time computer graphics.\n* Real-time computer physics.\n\n## Using **nalgebra**\nYou will need the last stable build of the [rust compiler](https://www.rust-lang.org)\nand the official package manager: [cargo](https://github.com/rust-lang/cargo).\n\nSimply add the following to your `Cargo.toml` file:\n\n```.ignore\n[dependencies]\n// TODO: replace the * by the latest version.\nnalgebra = \"*\"\n```\n\n\nMost useful functionalities of **nalgebra** are grouped in the root module `nalgebra::`.\n\nHowever, the recommended way to use **nalgebra** is to import types and traits\nexplicitly, and call free-functions using the `na::` prefix:\n\n```.rust\n#[macro_use]\nextern crate approx; // For the macro relative_eq!\nextern crate nalgebra as na;\nuse na::{Vector3, Rotation3};\n\nfn main() {\n    let axis  = Vector3::x_axis();\n    let angle = 1.57;\n    let b     = Rotation3::from_axis_angle(&axis, angle);\n\n    relative_eq!(b.axis().unwrap(), axis);\n    relative_eq!(b.angle(), angle);\n}\n```\n\n\n## Features\n**nalgebra** is meant to be a general-purpose, low-dimensional, linear algebra library, with\nan optimized set of tools for computer graphics and physics. Those features include:\n\n* A single parametrizable type `Matrix` for vectors, (square or rectangular) matrices, and slices\n  with dimensions known either at compile-time (using type-level integers) or at runtime.\n* Matrices and vectors with compile-time sizes are statically allocated while dynamic ones are\n  allocated on the heap.\n* Convenient aliases for low-dimensional matrices and vectors: `Vector1` to `Vector6` and\n  `Matrix1x1` to `Matrix6x6`, including rectangular matrices like `Matrix2x5`.\n* Points sizes known at compile time, and convenience aliases: `Point1` to `Point6`.\n* Translation (seen as a transformation that composes by multiplication): `Translation2`,\n  `Translation3`.\n* Rotation matrices: `Rotation2`, `Rotation3`.\n* Quaternions: `Quaternion`, `UnitQuaternion` (for 3D rotation).\n* Unit complex numbers can be used for 2D rotation: `UnitComplex`.\n* Algebraic entities with a norm equal to one: `Unit<T>`, e.g., `Unit<Vector3<f32>>`.\n* Isometries (translation ⨯ rotation): `Isometry2`, `Isometry3`\n* Similarity transformations (translation ⨯ rotation ⨯ uniform scale): `Similarity2`, `Similarity3`.\n* Affine transformations stored as a homogeneous matrix: `Affine2`, `Affine3`.\n* Projective (i.e. invertible) transformations stored as a homogeneous matrix: `Projective2`,\n  `Projective3`.\n* General transformations that does not have to be invertible, stored as a homogeneous matrix:\n  `Transform2`, `Transform3`.\n* 3D projections for computer graphics: `Perspective3`, `Orthographic3`.\n* Matrix factorizations: `Cholesky`, `QR`, `LU`, `FullPivLU`, `SVD`, `Schur`, `Hessenberg`, `SymmetricEigen`.\n* Insertion and removal of rows of columns of a matrix.\n*/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":0,"byte_end":2982,"line_start":1,"line_end":72,"column_start":1,"column_end":3}},{"value":"deny(non_camel_case_types)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":3033,"byte_end":3063,"line_start":78,"line_end":78,"column_start":1,"column_end":31}},{"value":"deny(unused_parens)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":3064,"byte_end":3087,"line_start":79,"line_end":79,"column_start":1,"column_end":24}},{"value":"deny(non_upper_case_globals)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":3088,"byte_end":3120,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"deny(unused_qualifications)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":3121,"byte_end":3152,"line_start":81,"line_end":81,"column_start":1,"column_end":32}},{"value":"deny(unused_results)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":3153,"byte_end":3177,"line_start":82,"line_end":82,"column_start":1,"column_end":25}},{"value":"deny(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":3178,"byte_end":3200,"line_start":83,"line_end":83,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"base","qualname":"::base","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/mod.rs","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":80},{"krate":0,"index":361},{"krate":0,"index":411},{"krate":0,"index":457},{"krate":0,"index":572},{"krate":0,"index":737},{"krate":0,"index":888},{"krate":0,"index":1229},{"krate":0,"index":1323},{"krate":0,"index":1498},{"krate":0,"index":2129},{"krate":0,"index":2291},{"krate":0,"index":2450},{"krate":0,"index":2546},{"krate":0,"index":2757},{"krate":0,"index":2825},{"krate":0,"index":3178},{"krate":0,"index":3422},{"krate":0,"index":3599},{"krate":0,"index":4136},{"krate":0,"index":4174},{"krate":0,"index":4397},{"krate":0,"index":4590},{"krate":0,"index":4661},{"krate":0,"index":4678},{"krate":0,"index":4763},{"krate":0,"index":4798},{"krate":0,"index":4909},{"krate":0,"index":5073},{"krate":0,"index":5092},{"krate":0,"index":5154},{"krate":0,"index":5235},{"krate":0,"index":5236},{"krate":0,"index":5237},{"krate":0,"index":5238},{"krate":0,"index":5239},{"krate":0,"index":5240},{"krate":0,"index":5241},{"krate":0,"index":5242},{"krate":0,"index":5243},{"krate":0,"index":5244},{"krate":0,"index":5245}],"decl_id":null,"docs":" [Reexported at the root of this crate.] Data structures for vector and matrix computations.\n","sig":null,"attributes":[{"value":"/ [Reexported at the root of this crate.] Data structures for vector and matrix computations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/mod.rs","byte_start":14802,"byte_end":14897,"line_start":1,"line_end":1,"column_start":1,"column_end":96}}]},{"kind":"Mod","id":{"krate":0,"index":8},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"allocator","qualname":"::base::allocator","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":47},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":66},{"krate":0,"index":72},{"krate":0,"index":76}],"decl_id":null,"docs":" Abstract definition of a matrix data storage allocator.\n","sig":null,"attributes":[{"value":"/ Abstract definition of a matrix data storage allocator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":15874,"byte_end":15933,"line_start":1,"line_end":1,"column_start":1,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":39},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":16604,"byte_end":16613,"line_start":19,"line_end":19,"column_start":11,"column_end":20},"name":"Allocator","qualname":"::base::allocator::Allocator","value":"Allocator<N: Scalar, R: Dim, C: Dim = U1>: Any + Sized","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45}],"decl_id":null,"docs":" A matrix allocator of a memory buffer that may contain `R::to_usize() * C::to_usize()`\n elements of type `N`.","sig":null,"attributes":[{"value":"/ A matrix allocator of a memory buffer that may contain `R::to_usize() * C::to_usize()`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":16175,"byte_end":16265,"line_start":10,"line_end":10,"column_start":1,"column_end":91}},{"value":"/ elements of type `N`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":16266,"byte_end":16291,"line_start":11,"line_end":11,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":16292,"byte_end":16295,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ An allocator is said to be:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":16296,"byte_end":16327,"line_start":13,"line_end":13,"column_start":1,"column_end":32}},{"value":"/   − static:  if `R` and `C` both implement `DimName`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":16328,"byte_end":16387,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/   − dynamic: if either one (or both) of `R` or `C` is equal to `Dynamic`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":16388,"byte_end":16467,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":16468,"byte_end":16471,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Every allocator must be both static and dynamic. Though not all implementations may share the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":16472,"byte_end":16569,"line_start":17,"line_end":17,"column_start":1,"column_end":98}},{"value":"/ same `Buffer` type.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":16570,"byte_end":16593,"line_start":18,"line_end":18,"column_start":1,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":43},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":16729,"byte_end":16735,"line_start":21,"line_end":21,"column_start":10,"column_end":16},"name":"Buffer","qualname":"::base::allocator::Allocator::Buffer","value":"type Buffer: ContiguousStorageMut<N, R, C> + Clone;","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" The type of buffer this allocator can instanciate.\n","sig":null,"attributes":[{"value":"/ The type of buffer this allocator can instanciate.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":16665,"byte_end":16719,"line_start":20,"line_end":20,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":16894,"byte_end":16916,"line_start":24,"line_end":24,"column_start":15,"column_end":37},"name":"allocate_uninitialized","qualname":"::base::allocator::Allocator::allocate_uninitialized","value":"pub unsafe fn allocate_uninitialized(R, C) -> Self::Buffer","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Allocates a buffer with the given number of rows and columns without initializing its content.\n","sig":null,"attributes":[{"value":"/ Allocates a buffer with the given number of rows and columns without initializing its content.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":16781,"byte_end":16879,"line_start":23,"line_end":23,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":17041,"byte_end":17063,"line_start":27,"line_end":27,"column_start":8,"column_end":30},"name":"allocate_from_iterator","qualname":"::base::allocator::Allocator::allocate_from_iterator","value":"pub fn allocate_from_iterator<I: IntoIterator<Item = N>>(R, C, I)\n-> Self::Buffer","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":" Allocates a buffer initialized with the content of the given iterator.\n","sig":null,"attributes":[{"value":"/ Allocates a buffer initialized with the content of the given iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":16959,"byte_end":17033,"line_start":26,"line_end":26,"column_start":5,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":47},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":17339,"byte_end":17350,"line_start":36,"line_end":36,"column_start":11,"column_end":22},"name":"Reallocator","qualname":"::base::allocator::Reallocator","value":"Reallocator<N: Scalar, RFrom: Dim, CFrom: Dim, RTo: Dim, CTo: Dim>: Allocator<N, RFrom, CFrom> + Allocator<N, RTo, CTo>","parent":null,"children":[{"krate":0,"index":53}],"decl_id":null,"docs":" A matrix reallocator. Changes the size of the memory buffer that initially contains (RFrom ×\n CFrom) elements to a smaller or larger size (RTo, CTo).\n","sig":null,"attributes":[{"value":"/ A matrix reallocator. Changes the size of the memory buffer that initially contains (RFrom ×","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":17171,"byte_end":17268,"line_start":34,"line_end":34,"column_start":1,"column_end":97}},{"value":"/ CFrom) elements to a smaller or larger size (RTo, CTo).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":17269,"byte_end":17328,"line_start":35,"line_end":35,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":17960,"byte_end":17975,"line_start":46,"line_end":46,"column_start":15,"column_end":30},"name":"reallocate_copy","qualname":"::base::allocator::Reallocator::reallocate_copy","value":"pub unsafe fn reallocate_copy(RTo, CTo,\n                              <Self as Allocator<N, RFrom, CFrom>>::Buffer)\n-> <Self as Allocator<N, RTo, CTo>>::Buffer","parent":{"krate":0,"index":47},"children":[],"decl_id":null,"docs":" Reallocates a buffer of shape `(RTo, CTo)`, possibly reusing a previously allocated buffer\n `buf`. Data stored by `buf` are linearly copied to the output:","sig":null,"attributes":[{"value":"/ Reallocates a buffer of shape `(RTo, CTo)`, possibly reusing a previously allocated buffer","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":17469,"byte_end":17563,"line_start":39,"line_end":39,"column_start":5,"column_end":99}},{"value":"/ `buf`. Data stored by `buf` are linearly copied to the output:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":17568,"byte_end":17634,"line_start":40,"line_end":40,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":17639,"byte_end":17642,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ * The copy is performed as if both were just arrays (without a matrix structure).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":17647,"byte_end":17732,"line_start":42,"line_end":42,"column_start":5,"column_end":90}},{"value":"/ * If `buf` is larger than the output size, then extra elements of `buf` are truncated.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":17737,"byte_end":17827,"line_start":43,"line_end":43,"column_start":5,"column_end":95}},{"value":"/ * If `buf` is smaller than the output size, then extra elements of the output are left","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":17832,"byte_end":17922,"line_start":44,"line_end":44,"column_start":5,"column_end":95}},{"value":"/ uninitialized.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":17927,"byte_end":17945,"line_start":45,"line_end":45,"column_start":5,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":54},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":18222,"byte_end":18232,"line_start":54,"line_end":54,"column_start":10,"column_end":20},"name":"SameShapeR","qualname":"::base::allocator::SameShapeR","value":"<ShapeConstraint as SameNumberOfRows<R1, R2>>::Representative","parent":null,"children":[],"decl_id":null,"docs":" The number of rows of the result of a componentwise operation on two matrices.\n","sig":null,"attributes":[{"value":"/ The number of rows of the result of a componentwise operation on two matrices.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":18130,"byte_end":18212,"line_start":53,"line_end":53,"column_start":1,"column_end":83}}]},{"kind":"Type","id":{"krate":0,"index":57},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":18402,"byte_end":18412,"line_start":57,"line_end":57,"column_start":10,"column_end":20},"name":"SameShapeC","qualname":"::base::allocator::SameShapeC","value":"<ShapeConstraint as SameNumberOfColumns<C1, C2>>::Representative","parent":null,"children":[],"decl_id":null,"docs":" The number of columns of the result of a componentwise operation on two matrices.\n","sig":null,"attributes":[{"value":"/ The number of columns of the result of a componentwise operation on two matrices.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":18307,"byte_end":18392,"line_start":56,"line_end":56,"column_start":1,"column_end":86}}]},{"kind":"Trait","id":{"krate":0,"index":60},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":18599,"byte_end":18617,"line_start":61,"line_end":61,"column_start":11,"column_end":29},"name":"SameShapeAllocator","qualname":"::base::allocator::SameShapeAllocator","value":"SameShapeAllocator<N, R1, C1, R2, C2>: Allocator<N, R1, C1> + Allocator<N, SameShapeR<R1, R2>, SameShapeC<C1, C2>>","parent":null,"children":[],"decl_id":null,"docs":" Restricts the given number of rows and columns to be respectively the same.\n","sig":null,"attributes":[{"value":"/ Restricts the given number of rows and columns to be respectively the same.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":18509,"byte_end":18588,"line_start":60,"line_end":60,"column_start":1,"column_end":80}}]},{"kind":"Trait","id":{"krate":0,"index":72},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":19290,"byte_end":19314,"line_start":87,"line_end":87,"column_start":11,"column_end":35},"name":"SameShapeVectorAllocator","qualname":"::base::allocator::SameShapeVectorAllocator","value":"SameShapeVectorAllocator<N, R1, R2>: Allocator<N, R1> + Allocator<N, SameShapeR<R1, R2>> +\nSameShapeAllocator<N, R1, U1, R2, U1>","parent":null,"children":[],"decl_id":null,"docs":" Restricts the given number of rows to be equal.\n","sig":null,"attributes":[{"value":"/ Restricts the given number of rows to be equal.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":19228,"byte_end":19279,"line_start":86,"line_end":86,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":27135,"byte_end":27138,"line_start":196,"line_end":196,"column_start":12,"column_end":15},"name":"dot","qualname":"<Matrix<N, R, C, S>>::dot","value":"pub fn dot<R2: Dim, C2: Dim, SB>(&Self, &Matrix<N, R2, C2, SB>) -> N where\nSB: Storage<N, R2, C2>, ShapeConstraint: DimEq<R, R2> + DimEq<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" The dot product between two vectors or matrices (seen as vectors).","sig":null,"attributes":[{"value":"/ The dot product between two vectors or matrices (seen as vectors).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":26227,"byte_end":26297,"line_start":172,"line_end":172,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":26302,"byte_end":26305,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ This is equal to `self.transpose() * rhs`. For the sesquilinear complex dot product, use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":26310,"byte_end":26402,"line_start":174,"line_end":174,"column_start":5,"column_end":97}},{"value":"/ `self.dotc(rhs)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":26407,"byte_end":26428,"line_start":175,"line_end":175,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":26433,"byte_end":26436,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that this is **not** the matrix multiplication as in, e.g., numpy. For matrix","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":26441,"byte_end":26527,"line_start":177,"line_end":177,"column_start":5,"column_end":91}},{"value":"/ multiplication, use one of: `.gemm`, `.mul_to`, `.mul`, the `*` operator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":26532,"byte_end":26609,"line_start":178,"line_end":178,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":26614,"byte_end":26617,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":26622,"byte_end":26637,"line_start":180,"line_end":180,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":26642,"byte_end":26645,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":26650,"byte_end":26657,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, Matrix2x3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":26662,"byte_end":26703,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ let vec1 = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":26708,"byte_end":26751,"line_start":184,"line_end":184,"column_start":5,"column_end":48}},{"value":"/ let vec2 = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":26756,"byte_end":26799,"line_start":185,"line_end":185,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(vec1.dot(&vec2), 1.4);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":26804,"byte_end":26841,"line_start":186,"line_end":186,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":26846,"byte_end":26849,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ let mat1 = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":26854,"byte_end":26898,"line_start":188,"line_end":188,"column_start":5,"column_end":49}},{"value":"/                           4.0, 5.0, 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":26903,"byte_end":26948,"line_start":189,"line_end":189,"column_start":5,"column_end":50}},{"value":"/ let mat2 = Matrix2x3::new(0.1, 0.2, 0.3,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":26953,"byte_end":26997,"line_start":190,"line_end":190,"column_start":5,"column_end":49}},{"value":"/                           0.4, 0.5, 0.6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":27002,"byte_end":27047,"line_start":191,"line_end":191,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(mat1.dot(&mat2), 9.1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":27052,"byte_end":27089,"line_start":192,"line_end":192,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":27094,"byte_end":27101,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":27106,"byte_end":27109,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":27114,"byte_end":27123,"line_start":195,"line_end":195,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":28253,"byte_end":28257,"line_start":224,"line_end":224,"column_start":12,"column_end":16},"name":"dotc","qualname":"<Matrix<N, R, C, S>>::dotc","value":"pub fn dotc<R2: Dim, C2: Dim, SB>(&Self, &Matrix<N, R2, C2, SB>) -> N where\nN: SimdComplexField, SB: Storage<N, R2, C2>, ShapeConstraint: DimEq<R, R2> +\nDimEq<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" The conjugate-linear dot product between two vectors or matrices (seen as vectors).","sig":null,"attributes":[{"value":"/ The conjugate-linear dot product between two vectors or matrices (seen as vectors).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":27345,"byte_end":27432,"line_start":204,"line_end":204,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":27437,"byte_end":27440,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ This is equal to `self.adjoint() * rhs`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":27445,"byte_end":27489,"line_start":206,"line_end":206,"column_start":5,"column_end":49}},{"value":"/ For real vectors, this is identical to `self.dot(&rhs)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":27494,"byte_end":27554,"line_start":207,"line_end":207,"column_start":5,"column_end":65}},{"value":"/ Note that this is **not** the matrix multiplication as in, e.g., numpy. For matrix","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":27559,"byte_end":27645,"line_start":208,"line_end":208,"column_start":5,"column_end":91}},{"value":"/ multiplication, use one of: `.gemm`, `.mul_to`, `.mul`, the `*` operator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":27650,"byte_end":27727,"line_start":209,"line_end":209,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":27732,"byte_end":27735,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":27740,"byte_end":27755,"line_start":211,"line_end":211,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":27760,"byte_end":27763,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":27768,"byte_end":27775,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector2, Complex};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":27780,"byte_end":27819,"line_start":214,"line_end":214,"column_start":5,"column_end":44}},{"value":"/ let vec1 = Vector2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":27824,"byte_end":27900,"line_start":215,"line_end":215,"column_start":5,"column_end":81}},{"value":"/ let vec2 = Vector2::new(Complex::new(0.4, 0.3), Complex::new(0.2, 0.1));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":27905,"byte_end":27981,"line_start":216,"line_end":216,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(vec1.dotc(&vec2), Complex::new(2.0, -1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":27986,"byte_end":28044,"line_start":217,"line_end":217,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":28049,"byte_end":28052,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ // Note that for complex vectors, we generally have:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":28057,"byte_end":28113,"line_start":219,"line_end":219,"column_start":5,"column_end":61}},{"value":"/ // vec1.dotc(&vec2) != vec2.dot(&vec2)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":28118,"byte_end":28160,"line_start":220,"line_end":220,"column_start":5,"column_end":47}},{"value":"/ assert_ne!(vec1.dotc(&vec2), vec1.dot(&vec2));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":28165,"byte_end":28215,"line_start":221,"line_end":221,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":28220,"byte_end":28227,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":28232,"byte_end":28241,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":29151,"byte_end":29157,"line_start":251,"line_end":251,"column_start":12,"column_end":18},"name":"tr_dot","qualname":"<Matrix<N, R, C, S>>::tr_dot","value":"pub fn tr_dot<R2: Dim, C2: Dim, SB>(&Self, &Matrix<N, R2, C2, SB>) -> N where\nSB: Storage<N, R2, C2>, ShapeConstraint: DimEq<C, R2> + DimEq<R, C2>","parent":null,"children":[],"decl_id":null,"docs":" The dot product between the transpose of `self` and `rhs`.","sig":null,"attributes":[{"value":"/ The dot product between the transpose of `self` and `rhs`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":28505,"byte_end":28567,"line_start":233,"line_end":233,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":28572,"byte_end":28575,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":28580,"byte_end":28595,"line_start":235,"line_end":235,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":28600,"byte_end":28603,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":28608,"byte_end":28615,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, RowVector3, Matrix2x3, Matrix3x2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":28620,"byte_end":28684,"line_start":238,"line_end":238,"column_start":5,"column_end":69}},{"value":"/ let vec1 = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":28689,"byte_end":28732,"line_start":239,"line_end":239,"column_start":5,"column_end":48}},{"value":"/ let vec2 = RowVector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":28737,"byte_end":28783,"line_start":240,"line_end":240,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(vec1.tr_dot(&vec2), 1.4);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":28788,"byte_end":28828,"line_start":241,"line_end":241,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":28833,"byte_end":28836,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ let mat1 = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":28841,"byte_end":28885,"line_start":243,"line_end":243,"column_start":5,"column_end":49}},{"value":"/                           4.0, 5.0, 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":28890,"byte_end":28935,"line_start":244,"line_end":244,"column_start":5,"column_end":50}},{"value":"/ let mat2 = Matrix3x2::new(0.1, 0.4,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":28940,"byte_end":28979,"line_start":245,"line_end":245,"column_start":5,"column_end":44}},{"value":"/                           0.2, 0.5,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":28984,"byte_end":29023,"line_start":246,"line_end":246,"column_start":5,"column_end":44}},{"value":"/                           0.3, 0.6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":29028,"byte_end":29068,"line_start":247,"line_end":247,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(mat1.tr_dot(&mat2), 9.1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":29073,"byte_end":29113,"line_start":248,"line_end":248,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":29118,"byte_end":29125,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":29130,"byte_end":29139,"line_start":250,"line_end":250,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":31274,"byte_end":31279,"line_start":334,"line_end":334,"column_start":12,"column_end":17},"name":"axcpy","qualname":"<Vector<N, D, S>>::axcpy","value":"pub fn axcpy<D2: Dim, SB>(&mut Self, N, &Vector<N, D2, SB>, N, N) where\nSB: Storage<N, D2>, ShapeConstraint: DimEq<D, D2>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = a * x * c + b * self`.","sig":null,"attributes":[{"value":"/ Computes `self = a * x * c + b * self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":30854,"byte_end":30897,"line_start":320,"line_end":320,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":30902,"byte_end":30905,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ If `b` is zero, `self` is never read from.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":30910,"byte_end":30956,"line_start":322,"line_end":322,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":30961,"byte_end":30964,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":30969,"byte_end":30984,"line_start":324,"line_end":324,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":30989,"byte_end":30992,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":30997,"byte_end":31004,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":31009,"byte_end":31037,"line_start":327,"line_end":327,"column_start":5,"column_end":33}},{"value":"/ let mut vec1 = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":31042,"byte_end":31089,"line_start":328,"line_end":328,"column_start":5,"column_end":52}},{"value":"/ let vec2 = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":31094,"byte_end":31137,"line_start":329,"line_end":329,"column_start":5,"column_end":48}},{"value":"/ vec1.axcpy(5.0, &vec2, 2.0, 5.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":31142,"byte_end":31179,"line_start":330,"line_end":330,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(vec1, Vector3::new(6.0, 12.0, 18.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":31184,"byte_end":31236,"line_start":331,"line_end":331,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":31241,"byte_end":31248,"line_start":332,"line_end":332,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":31253,"byte_end":31262,"line_start":333,"line_end":333,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":32276,"byte_end":32280,"line_start":368,"line_end":368,"column_start":12,"column_end":16},"name":"axpy","qualname":"<Vector<N, D, S>>::axpy","value":"pub fn axpy<D2: Dim, SB>(&mut Self, N, &Vector<N, D2, SB>, N) where N: One,\nSB: Storage<N, D2>, ShapeConstraint: DimEq<D, D2>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = a * x + b * self`.","sig":null,"attributes":[{"value":"/ Computes `self = a * x + b * self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":31865,"byte_end":31904,"line_start":354,"line_end":354,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":31909,"byte_end":31912,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ If `b` is zero, `self` is never read from.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":31917,"byte_end":31963,"line_start":356,"line_end":356,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":31968,"byte_end":31971,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":31976,"byte_end":31991,"line_start":358,"line_end":358,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":31996,"byte_end":31999,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":32004,"byte_end":32011,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":32016,"byte_end":32044,"line_start":361,"line_end":361,"column_start":5,"column_end":33}},{"value":"/ let mut vec1 = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":32049,"byte_end":32096,"line_start":362,"line_end":362,"column_start":5,"column_end":52}},{"value":"/ let vec2 = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":32101,"byte_end":32144,"line_start":363,"line_end":363,"column_start":5,"column_end":48}},{"value":"/ vec1.axpy(10.0, &vec2, 5.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":32149,"byte_end":32181,"line_start":364,"line_end":364,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(vec1, Vector3::new(6.0, 12.0, 18.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":32186,"byte_end":32238,"line_start":365,"line_end":365,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":32243,"byte_end":32250,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":32255,"byte_end":32264,"line_start":367,"line_end":367,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":33149,"byte_end":33153,"line_start":395,"line_end":395,"column_start":12,"column_end":16},"name":"gemv","qualname":"<Vector<N, D, S>>::gemv","value":"pub fn gemv<R2: Dim, C2: Dim, D3: Dim, SB,\n            SC>(&mut Self, N, &Matrix<N, R2, C2, SB>, &Vector<N, D3, SC>, N)\nwhere N: One, SB: Storage<N, R2, C2>, SC: Storage<N, D3>,\nShapeConstraint: DimEq<D, R2> + AreMultipliable<R2, C2, D3, U1>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a * x + beta * self`, where `a` is a matrix, `x` a vector, and\n `alpha, beta` two scalars.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a * x + beta * self`, where `a` is a matrix, `x` a vector, and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":32568,"byte_end":32659,"line_start":378,"line_end":378,"column_start":5,"column_end":96}},{"value":"/ `alpha, beta` two scalars.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":32664,"byte_end":32694,"line_start":379,"line_end":379,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":32699,"byte_end":32702,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":32707,"byte_end":32751,"line_start":381,"line_end":381,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":32756,"byte_end":32759,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":32764,"byte_end":32779,"line_start":383,"line_end":383,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":32784,"byte_end":32787,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":32792,"byte_end":32799,"line_start":385,"line_end":385,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":32804,"byte_end":32843,"line_start":386,"line_end":386,"column_start":5,"column_end":44}},{"value":"/ let mut vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":32848,"byte_end":32890,"line_start":387,"line_end":387,"column_start":5,"column_end":47}},{"value":"/ let vec2 = Vector2::new(0.1, 0.2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":32895,"byte_end":32933,"line_start":388,"line_end":388,"column_start":5,"column_end":43}},{"value":"/ let mat = Matrix2::new(1.0, 2.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":32938,"byte_end":32974,"line_start":389,"line_end":389,"column_start":5,"column_end":41}},{"value":"/                        3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":32979,"byte_end":33016,"line_start":390,"line_end":390,"column_start":5,"column_end":42}},{"value":"/ vec1.gemv(10.0, &mat, &vec2, 5.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":33021,"byte_end":33059,"line_start":391,"line_end":391,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(vec1, Vector2::new(10.0, 21.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":33064,"byte_end":33111,"line_start":392,"line_end":392,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":33116,"byte_end":33123,"line_start":393,"line_end":393,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":33128,"byte_end":33137,"line_start":394,"line_end":394,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":36475,"byte_end":36484,"line_start":502,"line_end":502,"column_start":12,"column_end":21},"name":"gemv_symm","qualname":"<Vector<N, D, S>>::gemv_symm","value":"pub fn gemv_symm<D2: Dim, D3: Dim, SB,\n                 SC>(&mut Self, N, &SquareMatrix<N, D2, SB>,\n                     &Vector<N, D3, SC>, N) where N: One,\nSB: Storage<N, D2, D2>, SC: Storage<N, D3>, ShapeConstraint: DimEq<D, D2> +\nAreMultipliable<D2, D2, D3, U1>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a * x + beta * self`, where `a` is a **symmetric** matrix, `x` a\n vector, and `alpha, beta` two scalars. DEPRECATED: use `sygemv` instead.\n","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a * x + beta * self`, where `a` is a **symmetric** matrix, `x` a","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":36182,"byte_end":36275,"line_start":498,"line_end":498,"column_start":5,"column_end":98}},{"value":"/ vector, and `alpha, beta` two scalars. DEPRECATED: use `sygemv` instead.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":36280,"byte_end":36356,"line_start":499,"line_end":499,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":36361,"byte_end":36370,"line_start":500,"line_end":500,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This is renamed `sygemv` to match the original BLAS terminology.\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":36375,"byte_end":36463,"line_start":501,"line_end":501,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":38073,"byte_end":38079,"line_start":546,"line_end":546,"column_start":12,"column_end":18},"name":"sygemv","qualname":"<Vector<N, D, S>>::sygemv","value":"pub fn sygemv<D2: Dim, D3: Dim, SB,\n              SC>(&mut Self, N, &SquareMatrix<N, D2, SB>, &Vector<N, D3, SC>,\n                  N) where N: One, SB: Storage<N, D2, D2>, SC: Storage<N, D3>,\nShapeConstraint: DimEq<D, D2> + AreMultipliable<D2, D2, D3, U1>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a * x + beta * self`, where `a` is a **symmetric** matrix, `x` a\n vector, and `alpha, beta` two scalars.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a * x + beta * self`, where `a` is a **symmetric** matrix, `x` a","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":36851,"byte_end":36944,"line_start":517,"line_end":517,"column_start":5,"column_end":98}},{"value":"/ vector, and `alpha, beta` two scalars.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":36949,"byte_end":36991,"line_start":518,"line_end":518,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":36996,"byte_end":36999,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ For hermitian matrices, use `.hegemv` instead.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":37004,"byte_end":37054,"line_start":520,"line_end":520,"column_start":5,"column_end":55}},{"value":"/ If `beta` is zero, `self` is never read. If `self` is read, only its lower-triangular part","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":37059,"byte_end":37153,"line_start":521,"line_end":521,"column_start":5,"column_end":99}},{"value":"/ (including the diagonal) is actually read.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":37158,"byte_end":37204,"line_start":522,"line_end":522,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":37209,"byte_end":37212,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":37217,"byte_end":37232,"line_start":524,"line_end":524,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":37237,"byte_end":37240,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":37245,"byte_end":37252,"line_start":526,"line_end":526,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":37257,"byte_end":37296,"line_start":527,"line_end":527,"column_start":5,"column_end":44}},{"value":"/ let mat = Matrix2::new(1.0, 2.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":37301,"byte_end":37337,"line_start":528,"line_end":528,"column_start":5,"column_end":41}},{"value":"/                        2.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":37342,"byte_end":37379,"line_start":529,"line_end":529,"column_start":5,"column_end":42}},{"value":"/ let mut vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":37384,"byte_end":37426,"line_start":530,"line_end":530,"column_start":5,"column_end":47}},{"value":"/ let vec2 = Vector2::new(0.1, 0.2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":37431,"byte_end":37469,"line_start":531,"line_end":531,"column_start":5,"column_end":43}},{"value":"/ vec1.sygemv(10.0, &mat, &vec2, 5.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":37474,"byte_end":37514,"line_start":532,"line_end":532,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec1, Vector2::new(10.0, 20.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":37519,"byte_end":37566,"line_start":533,"line_end":533,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":37571,"byte_end":37574,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":37579,"byte_end":37582,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ // The matrix upper-triangular elements can be garbage because it is never","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":37587,"byte_end":37665,"line_start":536,"line_end":536,"column_start":5,"column_end":83}},{"value":"/ // read by this method. Therefore, it is not necessary for the caller to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":37670,"byte_end":37746,"line_start":537,"line_end":537,"column_start":5,"column_end":81}},{"value":"/ // fill the matrix struct upper-triangle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":37751,"byte_end":37796,"line_start":538,"line_end":538,"column_start":5,"column_end":50}},{"value":"/ let mat = Matrix2::new(1.0, 9999999.9999999,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":37801,"byte_end":37849,"line_start":539,"line_end":539,"column_start":5,"column_end":53}},{"value":"/                        2.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":37854,"byte_end":37891,"line_start":540,"line_end":540,"column_start":5,"column_end":42}},{"value":"/ let mut vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":37896,"byte_end":37938,"line_start":541,"line_end":541,"column_start":5,"column_end":47}},{"value":"/ vec1.sygemv(10.0, &mat, &vec2, 5.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":37943,"byte_end":37983,"line_start":542,"line_end":542,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec1, Vector2::new(10.0, 20.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":37988,"byte_end":38035,"line_start":543,"line_end":543,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":38040,"byte_end":38047,"line_start":544,"line_end":544,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":38052,"byte_end":38061,"line_start":545,"line_end":545,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":40165,"byte_end":40171,"line_start":591,"line_end":591,"column_start":12,"column_end":18},"name":"hegemv","qualname":"<Vector<N, D, S>>::hegemv","value":"pub fn hegemv<D2: Dim, D3: Dim, SB,\n              SC>(&mut Self, N, &SquareMatrix<N, D2, SB>, &Vector<N, D3, SC>,\n                  N) where N: SimdComplexField, SB: Storage<N, D2, D2>,\nSC: Storage<N, D3>, ShapeConstraint: DimEq<D, D2> +\nAreMultipliable<D2, D2, D3, U1>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a * x + beta * self`, where `a` is an **hermitian** matrix, `x` a\n vector, and `alpha, beta` two scalars.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a * x + beta * self`, where `a` is an **hermitian** matrix, `x` a","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":38463,"byte_end":38557,"line_start":561,"line_end":561,"column_start":5,"column_end":99}},{"value":"/ vector, and `alpha, beta` two scalars.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":38562,"byte_end":38604,"line_start":562,"line_end":562,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":38609,"byte_end":38612,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read. If `self` is read, only its lower-triangular part","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":38617,"byte_end":38711,"line_start":564,"line_end":564,"column_start":5,"column_end":99}},{"value":"/ (including the diagonal) is actually read.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":38716,"byte_end":38762,"line_start":565,"line_end":565,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":38767,"byte_end":38770,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":38775,"byte_end":38790,"line_start":567,"line_end":567,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":38795,"byte_end":38798,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":38803,"byte_end":38810,"line_start":569,"line_end":569,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2, Complex};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":38815,"byte_end":38863,"line_start":570,"line_end":570,"column_start":5,"column_end":53}},{"value":"/ let mat = Matrix2::new(Complex::new(1.0, 0.0), Complex::new(2.0, -0.1),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":38868,"byte_end":38943,"line_start":571,"line_end":571,"column_start":5,"column_end":80}},{"value":"/                        Complex::new(2.0, 1.0), Complex::new(4.0, 0.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":38948,"byte_end":39023,"line_start":572,"line_end":572,"column_start":5,"column_end":80}},{"value":"/ let mut vec1 = Vector2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":39028,"byte_end":39108,"line_start":573,"line_end":573,"column_start":5,"column_end":85}},{"value":"/ let vec2 = Vector2::new(Complex::new(0.1, 0.2), Complex::new(0.3, 0.4));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":39113,"byte_end":39189,"line_start":574,"line_end":574,"column_start":5,"column_end":81}},{"value":"/ vec1.sygemv(Complex::new(10.0, 20.0), &mat, &vec2, Complex::new(5.0, 15.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":39194,"byte_end":39274,"line_start":575,"line_end":575,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(vec1, Vector2::new(Complex::new(-48.0, 44.0), Complex::new(-75.0, 110.0)));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":39279,"byte_end":39369,"line_start":576,"line_end":576,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":39374,"byte_end":39377,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":39382,"byte_end":39385,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ // The matrix upper-triangular elements can be garbage because it is never","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":39390,"byte_end":39468,"line_start":579,"line_end":579,"column_start":5,"column_end":83}},{"value":"/ // read by this method. Therefore, it is not necessary for the caller to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":39473,"byte_end":39549,"line_start":580,"line_end":580,"column_start":5,"column_end":81}},{"value":"/ // fill the matrix struct upper-triangle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":39554,"byte_end":39599,"line_start":581,"line_end":581,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":39604,"byte_end":39607,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ let mat = Matrix2::new(Complex::new(1.0, 0.0), Complex::new(99999999.9, 999999999.9),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":39612,"byte_end":39701,"line_start":583,"line_end":583,"column_start":5,"column_end":94}},{"value":"/                        Complex::new(2.0, 1.0), Complex::new(4.0, 0.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":39706,"byte_end":39781,"line_start":584,"line_end":584,"column_start":5,"column_end":80}},{"value":"/ let mut vec1 = Vector2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":39786,"byte_end":39866,"line_start":585,"line_end":585,"column_start":5,"column_end":85}},{"value":"/ let vec2 = Vector2::new(Complex::new(0.1, 0.2), Complex::new(0.3, 0.4));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":39871,"byte_end":39947,"line_start":586,"line_end":586,"column_start":5,"column_end":81}},{"value":"/ vec1.sygemv(Complex::new(10.0, 20.0), &mat, &vec2, Complex::new(5.0, 15.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":39952,"byte_end":40032,"line_start":587,"line_end":587,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(vec1, Vector2::new(Complex::new(-48.0, 44.0), Complex::new(-75.0, 110.0)));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":40037,"byte_end":40127,"line_start":588,"line_end":588,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":40132,"byte_end":40139,"line_start":589,"line_end":589,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":40144,"byte_end":40153,"line_start":590,"line_end":590,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":42445,"byte_end":42452,"line_start":666,"line_end":666,"column_start":12,"column_end":19},"name":"gemv_tr","qualname":"<Vector<N, D, S>>::gemv_tr","value":"pub fn gemv_tr<R2: Dim, C2: Dim, D3: Dim, SB,\n               SC>(&mut Self, N, &Matrix<N, R2, C2, SB>, &Vector<N, D3, SC>,\n                   N) where N: One, SB: Storage<N, R2, C2>,\nSC: Storage<N, D3>, ShapeConstraint: DimEq<D, C2> +\nAreMultipliable<C2, R2, D3, U1>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a.transpose() * x + beta * self`, where `a` is a matrix, `x` a vector, and\n `alpha, beta` two scalars.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a.transpose() * x + beta * self`, where `a` is a matrix, `x` a vector, and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":41790,"byte_end":41893,"line_start":647,"line_end":647,"column_start":5,"column_end":108}},{"value":"/ `alpha, beta` two scalars.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":41898,"byte_end":41928,"line_start":648,"line_end":648,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":41933,"byte_end":41936,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":41941,"byte_end":41985,"line_start":650,"line_end":650,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":41990,"byte_end":41993,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":41998,"byte_end":42013,"line_start":652,"line_end":652,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":42018,"byte_end":42021,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":42026,"byte_end":42033,"line_start":654,"line_end":654,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":42038,"byte_end":42077,"line_start":655,"line_end":655,"column_start":5,"column_end":44}},{"value":"/ let mat = Matrix2::new(1.0, 3.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":42082,"byte_end":42118,"line_start":656,"line_end":656,"column_start":5,"column_end":41}},{"value":"/                        2.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":42123,"byte_end":42160,"line_start":657,"line_end":657,"column_start":5,"column_end":42}},{"value":"/ let mut vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":42165,"byte_end":42207,"line_start":658,"line_end":658,"column_start":5,"column_end":47}},{"value":"/ let vec2 = Vector2::new(0.1, 0.2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":42212,"byte_end":42250,"line_start":659,"line_end":659,"column_start":5,"column_end":43}},{"value":"/ let expected = mat.transpose() * vec2 * 10.0 + vec1 * 5.0;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":42255,"byte_end":42317,"line_start":660,"line_end":660,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":42322,"byte_end":42325,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ vec1.gemv_tr(10.0, &mat, &vec2, 5.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":42330,"byte_end":42371,"line_start":662,"line_end":662,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(vec1, expected);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":42376,"byte_end":42407,"line_start":663,"line_end":663,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":42412,"byte_end":42419,"line_start":664,"line_end":664,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":42424,"byte_end":42433,"line_start":665,"line_end":665,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":43795,"byte_end":43802,"line_start":701,"line_end":701,"column_start":12,"column_end":19},"name":"gemv_ad","qualname":"<Vector<N, D, S>>::gemv_ad","value":"pub fn gemv_ad<R2: Dim, C2: Dim, D3: Dim, SB,\n               SC>(&mut Self, N, &Matrix<N, R2, C2, SB>, &Vector<N, D3, SC>,\n                   N) where N: SimdComplexField, SB: Storage<N, R2, C2>,\nSC: Storage<N, D3>, ShapeConstraint: DimEq<D, C2> +\nAreMultipliable<C2, R2, D3, U1>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a.adjoint() * x + beta * self`, where `a` is a matrix, `x` a vector, and\n `alpha, beta` two scalars.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a.adjoint() * x + beta * self`, where `a` is a matrix, `x` a vector, and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":42844,"byte_end":42945,"line_start":681,"line_end":681,"column_start":5,"column_end":106}},{"value":"/ `alpha, beta` two scalars.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":42950,"byte_end":42980,"line_start":682,"line_end":682,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":42985,"byte_end":42988,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ For real matrices, this is the same as `.gemv_tr`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":42993,"byte_end":43047,"line_start":684,"line_end":684,"column_start":5,"column_end":59}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":43052,"byte_end":43096,"line_start":685,"line_end":685,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":43101,"byte_end":43104,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":43109,"byte_end":43124,"line_start":687,"line_end":687,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":43129,"byte_end":43132,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":43137,"byte_end":43144,"line_start":689,"line_end":689,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2, Complex};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":43149,"byte_end":43197,"line_start":690,"line_end":690,"column_start":5,"column_end":53}},{"value":"/ let mat = Matrix2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":43202,"byte_end":43276,"line_start":691,"line_end":691,"column_start":5,"column_end":79}},{"value":"/                        Complex::new(5.0, 6.0), Complex::new(7.0, 8.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":43281,"byte_end":43356,"line_start":692,"line_end":692,"column_start":5,"column_end":80}},{"value":"/ let mut vec1 = Vector2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":43361,"byte_end":43441,"line_start":693,"line_end":693,"column_start":5,"column_end":85}},{"value":"/ let vec2 = Vector2::new(Complex::new(0.1, 0.2), Complex::new(0.3, 0.4));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":43446,"byte_end":43522,"line_start":694,"line_end":694,"column_start":5,"column_end":81}},{"value":"/ let expected = mat.adjoint() * vec2 * Complex::new(10.0, 20.0) + vec1 * Complex::new(5.0, 15.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":43527,"byte_end":43627,"line_start":695,"line_end":695,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":43632,"byte_end":43635,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ vec1.gemv_ad(Complex::new(10.0, 20.0), &mat, &vec2, Complex::new(5.0, 15.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":43640,"byte_end":43721,"line_start":697,"line_end":697,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(vec1, expected);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":43726,"byte_end":43757,"line_start":698,"line_end":698,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":43762,"byte_end":43769,"line_start":699,"line_end":699,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":43774,"byte_end":43783,"line_start":700,"line_end":700,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":45742,"byte_end":45745,"line_start":769,"line_end":769,"column_start":12,"column_end":15},"name":"ger","qualname":"<Matrix<N, R1, C1, S>>::ger","value":"pub fn ger<D2: Dim, D3: Dim, SB,\n           SC>(&mut Self, N, &Vector<N, D2, SB>, &Vector<N, D3, SC>, N) where\nN: One, SB: Storage<N, D2>, SC: Storage<N, D3>,\nShapeConstraint: DimEq<R1, D2> + DimEq<C1, D3>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * x * y.transpose() + beta * self`.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * x * y.transpose() + beta * self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":45193,"byte_end":45255,"line_start":752,"line_end":752,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":45260,"byte_end":45263,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":45268,"byte_end":45312,"line_start":754,"line_end":754,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":45317,"byte_end":45320,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":45325,"byte_end":45340,"line_start":756,"line_end":756,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":45345,"byte_end":45348,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":45353,"byte_end":45360,"line_start":758,"line_end":758,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Vector2, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":45365,"byte_end":45415,"line_start":759,"line_end":759,"column_start":5,"column_end":55}},{"value":"/ let mut mat = Matrix2x3::repeat(4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":45420,"byte_end":45461,"line_start":760,"line_end":760,"column_start":5,"column_end":46}},{"value":"/ let vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":45466,"byte_end":45504,"line_start":761,"line_end":761,"column_start":5,"column_end":43}},{"value":"/ let vec2 = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":45509,"byte_end":45552,"line_start":762,"line_end":762,"column_start":5,"column_end":48}},{"value":"/ let expected = vec1 * vec2.transpose() * 10.0 + mat * 5.0;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":45557,"byte_end":45619,"line_start":763,"line_end":763,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":45624,"byte_end":45627,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ mat.ger(10.0, &vec1, &vec2, 5.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":45632,"byte_end":45669,"line_start":765,"line_end":765,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(mat, expected);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":45674,"byte_end":45704,"line_start":766,"line_end":766,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":45709,"byte_end":45716,"line_start":767,"line_end":767,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":45721,"byte_end":45730,"line_start":768,"line_end":768,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":46883,"byte_end":46887,"line_start":802,"line_end":802,"column_start":12,"column_end":16},"name":"gerc","qualname":"<Matrix<N, R1, C1, S>>::gerc","value":"pub fn gerc<D2: Dim, D3: Dim, SB,\n            SC>(&mut Self, N, &Vector<N, D2, SB>, &Vector<N, D3, SC>, N) where\nN: SimdComplexField, SB: Storage<N, D2>, SC: Storage<N, D3>,\nShapeConstraint: DimEq<R1, D2> + DimEq<C1, D3>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * x * y.adjoint() + beta * self`.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * x * y.adjoint() + beta * self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":46090,"byte_end":46150,"line_start":784,"line_end":784,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":46155,"byte_end":46158,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":46163,"byte_end":46207,"line_start":786,"line_end":786,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":46212,"byte_end":46215,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":46220,"byte_end":46235,"line_start":788,"line_end":788,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":46240,"byte_end":46243,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":46248,"byte_end":46255,"line_start":790,"line_end":790,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":46260,"byte_end":46299,"line_start":791,"line_end":791,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix2x3, Vector2, Vector3, Complex};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":46304,"byte_end":46363,"line_start":792,"line_end":792,"column_start":5,"column_end":64}},{"value":"/ let mut mat = Matrix2x3::repeat(Complex::new(4.0, 5.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":46368,"byte_end":46428,"line_start":793,"line_end":793,"column_start":5,"column_end":65}},{"value":"/ let vec1 = Vector2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":46433,"byte_end":46509,"line_start":794,"line_end":794,"column_start":5,"column_end":81}},{"value":"/ let vec2 = Vector3::new(Complex::new(0.6, 0.5), Complex::new(0.4, 0.5), Complex::new(0.2, 0.1));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":46514,"byte_end":46614,"line_start":795,"line_end":795,"column_start":5,"column_end":105}},{"value":"/ let expected = vec1 * vec2.adjoint() * Complex::new(10.0, 20.0) + mat * Complex::new(5.0, 15.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":46619,"byte_end":46719,"line_start":796,"line_end":796,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":46724,"byte_end":46727,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ mat.gerc(Complex::new(10.0, 20.0), &vec1, &vec2, Complex::new(5.0, 15.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":46732,"byte_end":46810,"line_start":798,"line_end":798,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(mat, expected);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":46815,"byte_end":46845,"line_start":799,"line_end":799,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":46850,"byte_end":46857,"line_start":800,"line_end":800,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":46862,"byte_end":46871,"line_start":801,"line_end":801,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":48101,"byte_end":48105,"line_start":839,"line_end":839,"column_start":12,"column_end":16},"name":"gemm","qualname":"<Matrix<N, R1, C1, S>>::gemm","value":"pub fn gemm<R2: Dim, C2: Dim, R3: Dim, C3: Dim, SB,\n            SC>(&mut Self, N, &Matrix<N, R2, C2, SB>, &Matrix<N, R3, C3, SC>,\n                N) where N: One, SB: Storage<N, R2, C2>,\nSC: Storage<N, R3, C3>, ShapeConstraint: SameNumberOfRows<R1, R2> +\nSameNumberOfColumns<C1, C3> + AreMultipliable<R2, C2, R3, C3>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a * b + beta * self`, where `a, b, self` are matrices.\n `alpha` and `beta` are scalar.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a * b + beta * self`, where `a, b, self` are matrices.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":47272,"byte_end":47355,"line_start":817,"line_end":817,"column_start":5,"column_end":88}},{"value":"/ `alpha` and `beta` are scalar.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":47360,"byte_end":47394,"line_start":818,"line_end":818,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":47399,"byte_end":47402,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":47407,"byte_end":47451,"line_start":820,"line_end":820,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":47456,"byte_end":47459,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":47464,"byte_end":47479,"line_start":822,"line_end":822,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":47484,"byte_end":47487,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":47492,"byte_end":47499,"line_start":824,"line_end":824,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":47504,"byte_end":47543,"line_start":825,"line_end":825,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix2x3, Matrix3x4, Matrix2x4};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":47548,"byte_end":47602,"line_start":826,"line_end":826,"column_start":5,"column_end":59}},{"value":"/ let mut mat1 = Matrix2x4::identity();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":47607,"byte_end":47648,"line_start":827,"line_end":827,"column_start":5,"column_end":46}},{"value":"/ let mat2 = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":47653,"byte_end":47697,"line_start":828,"line_end":828,"column_start":5,"column_end":49}},{"value":"/                           4.0, 5.0, 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":47702,"byte_end":47747,"line_start":829,"line_end":829,"column_start":5,"column_end":50}},{"value":"/ let mat3 = Matrix3x4::new(0.1, 0.2, 0.3, 0.4,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":47752,"byte_end":47801,"line_start":830,"line_end":830,"column_start":5,"column_end":54}},{"value":"/                           0.5, 0.6, 0.7, 0.8,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":47806,"byte_end":47855,"line_start":831,"line_end":831,"column_start":5,"column_end":54}},{"value":"/                           0.9, 1.0, 1.1, 1.2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":47860,"byte_end":47910,"line_start":832,"line_end":832,"column_start":5,"column_end":55}},{"value":"/ let expected = mat2 * mat3 * 10.0 + mat1 * 5.0;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":47915,"byte_end":47966,"line_start":833,"line_end":833,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":47971,"byte_end":47974,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ mat1.gemm(10.0, &mat2, &mat3, 5.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":47979,"byte_end":48018,"line_start":835,"line_end":835,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(mat1, expected);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":48023,"byte_end":48063,"line_start":836,"line_end":836,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":48068,"byte_end":48075,"line_start":837,"line_end":837,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":48080,"byte_end":48089,"line_start":838,"line_end":838,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":54224,"byte_end":54231,"line_start":994,"line_end":994,"column_start":12,"column_end":19},"name":"gemm_tr","qualname":"<Matrix<N, R1, C1, S>>::gemm_tr","value":"pub fn gemm_tr<R2: Dim, C2: Dim, R3: Dim, C3: Dim, SB,\n               SC>(&mut Self, N, &Matrix<N, R2, C2, SB>,\n                   &Matrix<N, R3, C3, SC>, N) where N: One,\nSB: Storage<N, R2, C2>, SC: Storage<N, R3, C3>,\nShapeConstraint: SameNumberOfRows<R1, C2> + SameNumberOfColumns<C1, C3> +\nAreMultipliable<C2, R2, R3, C3>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a.transpose() * b + beta * self`, where `a, b, self` are matrices.\n `alpha` and `beta` are scalar.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a.transpose() * b + beta * self`, where `a, b, self` are matrices.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":53343,"byte_end":53438,"line_start":971,"line_end":971,"column_start":5,"column_end":100}},{"value":"/ `alpha` and `beta` are scalar.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":53443,"byte_end":53477,"line_start":972,"line_end":972,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":53482,"byte_end":53485,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":53490,"byte_end":53534,"line_start":974,"line_end":974,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":53539,"byte_end":53542,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":53547,"byte_end":53562,"line_start":976,"line_end":976,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":53567,"byte_end":53570,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":53575,"byte_end":53582,"line_start":978,"line_end":978,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":53587,"byte_end":53626,"line_start":979,"line_end":979,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3x2, Matrix3x4, Matrix2x4};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":53631,"byte_end":53685,"line_start":980,"line_end":980,"column_start":5,"column_end":59}},{"value":"/ let mut mat1 = Matrix2x4::identity();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":53690,"byte_end":53731,"line_start":981,"line_end":981,"column_start":5,"column_end":46}},{"value":"/ let mat2 = Matrix3x2::new(1.0, 4.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":53736,"byte_end":53775,"line_start":982,"line_end":982,"column_start":5,"column_end":44}},{"value":"/                           2.0, 5.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":53780,"byte_end":53819,"line_start":983,"line_end":983,"column_start":5,"column_end":44}},{"value":"/                           3.0, 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":53824,"byte_end":53864,"line_start":984,"line_end":984,"column_start":5,"column_end":45}},{"value":"/ let mat3 = Matrix3x4::new(0.1, 0.2, 0.3, 0.4,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":53869,"byte_end":53918,"line_start":985,"line_end":985,"column_start":5,"column_end":54}},{"value":"/                           0.5, 0.6, 0.7, 0.8,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":53923,"byte_end":53972,"line_start":986,"line_end":986,"column_start":5,"column_end":54}},{"value":"/                           0.9, 1.0, 1.1, 1.2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":53977,"byte_end":54027,"line_start":987,"line_end":987,"column_start":5,"column_end":55}},{"value":"/ let expected = mat2.transpose() * mat3 * 10.0 + mat1 * 5.0;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":54032,"byte_end":54095,"line_start":988,"line_end":988,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":54100,"byte_end":54103,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"/ mat1.gemm_tr(10.0, &mat2, &mat3, 5.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":54108,"byte_end":54150,"line_start":990,"line_end":990,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(mat1, expected);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":54155,"byte_end":54186,"line_start":991,"line_end":991,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":54191,"byte_end":54198,"line_start":992,"line_end":992,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":54203,"byte_end":54212,"line_start":993,"line_end":993,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":56619,"byte_end":56626,"line_start":1056,"line_end":1056,"column_start":12,"column_end":19},"name":"gemm_ad","qualname":"<Matrix<N, R1, C1, S>>::gemm_ad","value":"pub fn gemm_ad<R2: Dim, C2: Dim, R3: Dim, C3: Dim, SB,\n               SC>(&mut Self, N, &Matrix<N, R2, C2, SB>,\n                   &Matrix<N, R3, C3, SC>, N) where N: SimdComplexField,\nSB: Storage<N, R2, C2>, SC: Storage<N, R3, C3>,\nShapeConstraint: SameNumberOfRows<R1, C2> + SameNumberOfColumns<C1, C3> +\nAreMultipliable<C2, R2, R3, C3>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a.adjoint() * b + beta * self`, where `a, b, self` are matrices.\n `alpha` and `beta` are scalar.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a.adjoint() * b + beta * self`, where `a, b, self` are matrices.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":55308,"byte_end":55401,"line_start":1033,"line_end":1033,"column_start":5,"column_end":98}},{"value":"/ `alpha` and `beta` are scalar.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":55406,"byte_end":55440,"line_start":1034,"line_end":1034,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":55445,"byte_end":55448,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":55453,"byte_end":55497,"line_start":1036,"line_end":1036,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":55502,"byte_end":55505,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":55510,"byte_end":55525,"line_start":1038,"line_end":1038,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":55530,"byte_end":55533,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":55538,"byte_end":55545,"line_start":1040,"line_end":1040,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":55550,"byte_end":55589,"line_start":1041,"line_end":1041,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3x2, Matrix3x4, Matrix2x4, Complex};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":55594,"byte_end":55657,"line_start":1042,"line_end":1042,"column_start":5,"column_end":68}},{"value":"/ let mut mat1 = Matrix2x4::identity();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":55662,"byte_end":55703,"line_start":1043,"line_end":1043,"column_start":5,"column_end":46}},{"value":"/ let mat2 = Matrix3x2::new(Complex::new(1.0, 4.0), Complex::new(7.0, 8.0),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":55708,"byte_end":55785,"line_start":1044,"line_end":1044,"column_start":5,"column_end":82}},{"value":"/                           Complex::new(2.0, 5.0), Complex::new(9.0, 10.0),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":55790,"byte_end":55868,"line_start":1045,"line_end":1045,"column_start":5,"column_end":83}},{"value":"/                           Complex::new(3.0, 6.0), Complex::new(11.0, 12.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":55873,"byte_end":55953,"line_start":1046,"line_end":1046,"column_start":5,"column_end":85}},{"value":"/ let mat3 = Matrix3x4::new(Complex::new(0.1, 1.3), Complex::new(0.2, 1.4), Complex::new(0.3, 1.5), Complex::new(0.4, 1.6),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":55958,"byte_end":56083,"line_start":1047,"line_end":1047,"column_start":5,"column_end":130}},{"value":"/                           Complex::new(0.5, 1.7), Complex::new(0.6, 1.8), Complex::new(0.7, 1.9), Complex::new(0.8, 2.0),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":56088,"byte_end":56213,"line_start":1048,"line_end":1048,"column_start":5,"column_end":130}},{"value":"/                           Complex::new(0.9, 2.1), Complex::new(1.0, 2.2), Complex::new(1.1, 2.3), Complex::new(1.2, 2.4));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":56218,"byte_end":56344,"line_start":1049,"line_end":1049,"column_start":5,"column_end":131}},{"value":"/ let expected = mat2.adjoint() * mat3 * Complex::new(10.0, 20.0) + mat1 * Complex::new(5.0, 15.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":56349,"byte_end":56450,"line_start":1050,"line_end":1050,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":56455,"byte_end":56458,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ mat1.gemm_ad(Complex::new(10.0, 20.0), &mat2, &mat3, Complex::new(5.0, 15.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":56463,"byte_end":56545,"line_start":1052,"line_end":1052,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(mat1, expected);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":56550,"byte_end":56581,"line_start":1053,"line_end":1053,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":56586,"byte_end":56593,"line_start":1054,"line_end":1054,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":56598,"byte_end":56607,"line_start":1055,"line_end":1055,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":59787,"byte_end":59795,"line_start":1152,"line_end":1152,"column_start":12,"column_end":20},"name":"ger_symm","qualname":"<Matrix<N, R1, C1, S>>::ger_symm","value":"pub fn ger_symm<D2: Dim, D3: Dim, SB,\n                SC>(&mut Self, N, &Vector<N, D2, SB>, &Vector<N, D3, SC>, N)\nwhere N: One, SB: Storage<N, D2>, SC: Storage<N, D3>,\nShapeConstraint: DimEq<R1, D2> + DimEq<C1, D3>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * x * y.transpose() + beta * self`, where `self` is a **symmetric**\n matrix.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * x * y.transpose() + beta * self`, where `self` is a **symmetric**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":58798,"byte_end":58892,"line_start":1131,"line_end":1131,"column_start":5,"column_end":99}},{"value":"/ matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":58897,"byte_end":58908,"line_start":1132,"line_end":1132,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":58913,"byte_end":58916,"line_start":1133,"line_end":1133,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read. The result is symmetric. Only the lower-triangular","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":58921,"byte_end":59016,"line_start":1134,"line_end":1134,"column_start":5,"column_end":100}},{"value":"/ (including the diagonal) part of `self` is read/written.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":59021,"byte_end":59081,"line_start":1135,"line_end":1135,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":59086,"byte_end":59089,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":59094,"byte_end":59109,"line_start":1137,"line_end":1137,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":59114,"byte_end":59117,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":59122,"byte_end":59129,"line_start":1139,"line_end":1139,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":59134,"byte_end":59173,"line_start":1140,"line_end":1140,"column_start":5,"column_end":44}},{"value":"/ let mut mat = Matrix2::identity();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":59178,"byte_end":59216,"line_start":1141,"line_end":1141,"column_start":5,"column_end":43}},{"value":"/ let vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":59221,"byte_end":59259,"line_start":1142,"line_end":1142,"column_start":5,"column_end":43}},{"value":"/ let vec2 = Vector2::new(0.1, 0.2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":59264,"byte_end":59302,"line_start":1143,"line_end":1143,"column_start":5,"column_end":43}},{"value":"/ let expected = vec1 * vec2.transpose() * 10.0 + mat * 5.0;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":59307,"byte_end":59369,"line_start":1144,"line_end":1144,"column_start":5,"column_end":67}},{"value":"/ mat.m12 = 99999.99999; // This component is on the upper-triangular part and will not be read/written.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":59374,"byte_end":59480,"line_start":1145,"line_end":1145,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":59485,"byte_end":59488,"line_start":1146,"line_end":1146,"column_start":5,"column_end":8}},{"value":"/ mat.ger_symm(10.0, &vec1, &vec2, 5.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":59493,"byte_end":59535,"line_start":1147,"line_end":1147,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(mat.lower_triangle(), expected.lower_triangle());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":59540,"byte_end":59604,"line_start":1148,"line_end":1148,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(mat.m12, 99999.99999); // This was untouched.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":59609,"byte_end":59669,"line_start":1149,"line_end":1149,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":59674,"byte_end":59683,"line_start":1150,"line_end":1150,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This is renamed `syger` to match the original BLAS terminology.\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":59688,"byte_end":59775,"line_start":1151,"line_end":1151,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":61091,"byte_end":61096,"line_start":1188,"line_end":1188,"column_start":12,"column_end":17},"name":"syger","qualname":"<Matrix<N, R1, C1, S>>::syger","value":"pub fn syger<D2: Dim, D3: Dim, SB,\n             SC>(&mut Self, N, &Vector<N, D2, SB>, &Vector<N, D3, SC>, N)\nwhere N: One, SB: Storage<N, D2>, SC: Storage<N, D3>,\nShapeConstraint: DimEq<R1, D2> + DimEq<C1, D3>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * x * y.transpose() + beta * self`, where `self` is a **symmetric**\n matrix.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * x * y.transpose() + beta * self`, where `self` is a **symmetric**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":60134,"byte_end":60228,"line_start":1167,"line_end":1167,"column_start":5,"column_end":99}},{"value":"/ matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":60233,"byte_end":60244,"line_start":1168,"line_end":1168,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":60249,"byte_end":60252,"line_start":1169,"line_end":1169,"column_start":5,"column_end":8}},{"value":"/ For hermitian complex matrices, use `.hegerc` instead.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":60257,"byte_end":60315,"line_start":1170,"line_end":1170,"column_start":5,"column_end":63}},{"value":"/ If `beta` is zero, `self` is never read. The result is symmetric. Only the lower-triangular","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":60320,"byte_end":60415,"line_start":1171,"line_end":1171,"column_start":5,"column_end":100}},{"value":"/ (including the diagonal) part of `self` is read/written.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":60420,"byte_end":60480,"line_start":1172,"line_end":1172,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":60485,"byte_end":60488,"line_start":1173,"line_end":1173,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":60493,"byte_end":60508,"line_start":1174,"line_end":1174,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":60513,"byte_end":60516,"line_start":1175,"line_end":1175,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":60521,"byte_end":60528,"line_start":1176,"line_end":1176,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":60533,"byte_end":60572,"line_start":1177,"line_end":1177,"column_start":5,"column_end":44}},{"value":"/ let mut mat = Matrix2::identity();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":60577,"byte_end":60615,"line_start":1178,"line_end":1178,"column_start":5,"column_end":43}},{"value":"/ let vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":60620,"byte_end":60658,"line_start":1179,"line_end":1179,"column_start":5,"column_end":43}},{"value":"/ let vec2 = Vector2::new(0.1, 0.2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":60663,"byte_end":60701,"line_start":1180,"line_end":1180,"column_start":5,"column_end":43}},{"value":"/ let expected = vec1 * vec2.transpose() * 10.0 + mat * 5.0;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":60706,"byte_end":60768,"line_start":1181,"line_end":1181,"column_start":5,"column_end":67}},{"value":"/ mat.m12 = 99999.99999; // This component is on the upper-triangular part and will not be read/written.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":60773,"byte_end":60879,"line_start":1182,"line_end":1182,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":60884,"byte_end":60887,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ mat.syger(10.0, &vec1, &vec2, 5.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":60892,"byte_end":60931,"line_start":1184,"line_end":1184,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(mat.lower_triangle(), expected.lower_triangle());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":60936,"byte_end":61000,"line_start":1185,"line_end":1185,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(mat.m12, 99999.99999); // This was untouched.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":61005,"byte_end":61065,"line_start":1186,"line_end":1186,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":61070,"byte_end":61079,"line_start":1187,"line_end":1187,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":62554,"byte_end":62560,"line_start":1223,"line_end":1223,"column_start":12,"column_end":18},"name":"hegerc","qualname":"<Matrix<N, R1, C1, S>>::hegerc","value":"pub fn hegerc<D2: Dim, D3: Dim, SB,\n              SC>(&mut Self, N, &Vector<N, D2, SB>, &Vector<N, D3, SC>, N)\nwhere N: SimdComplexField, SB: Storage<N, D2>, SC: Storage<N, D3>,\nShapeConstraint: DimEq<R1, D2> + DimEq<C1, D3>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * x * y.adjoint() + beta * self`, where `self` is an **hermitian**\n matrix.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * x * y.adjoint() + beta * self`, where `self` is an **hermitian**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":61443,"byte_end":61536,"line_start":1203,"line_end":1203,"column_start":5,"column_end":98}},{"value":"/ matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":61541,"byte_end":61552,"line_start":1204,"line_end":1204,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":61557,"byte_end":61560,"line_start":1205,"line_end":1205,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read. The result is symmetric. Only the lower-triangular","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":61565,"byte_end":61660,"line_start":1206,"line_end":1206,"column_start":5,"column_end":100}},{"value":"/ (including the diagonal) part of `self` is read/written.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":61665,"byte_end":61725,"line_start":1207,"line_end":1207,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":61730,"byte_end":61733,"line_start":1208,"line_end":1208,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":61738,"byte_end":61753,"line_start":1209,"line_end":1209,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":61758,"byte_end":61761,"line_start":1210,"line_end":1210,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":61766,"byte_end":61773,"line_start":1211,"line_end":1211,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2, Complex};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":61778,"byte_end":61826,"line_start":1212,"line_end":1212,"column_start":5,"column_end":53}},{"value":"/ let mut mat = Matrix2::identity();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":61831,"byte_end":61869,"line_start":1213,"line_end":1213,"column_start":5,"column_end":43}},{"value":"/ let vec1 = Vector2::new(Complex::new(1.0, 3.0), Complex::new(2.0, 4.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":61874,"byte_end":61950,"line_start":1214,"line_end":1214,"column_start":5,"column_end":81}},{"value":"/ let vec2 = Vector2::new(Complex::new(0.2, 0.4), Complex::new(0.1, 0.3));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":61955,"byte_end":62031,"line_start":1215,"line_end":1215,"column_start":5,"column_end":81}},{"value":"/ let expected = vec1 * vec2.adjoint() * Complex::new(10.0, 20.0) + mat * Complex::new(5.0, 15.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":62036,"byte_end":62136,"line_start":1216,"line_end":1216,"column_start":5,"column_end":105}},{"value":"/ mat.m12 = Complex::new(99999.99999, 88888.88888); // This component is on the upper-triangular part and will not be read/written.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":62141,"byte_end":62274,"line_start":1217,"line_end":1217,"column_start":5,"column_end":138}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":62279,"byte_end":62282,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8}},{"value":"/ mat.hegerc(Complex::new(10.0, 20.0), &vec1, &vec2, Complex::new(5.0, 15.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":62287,"byte_end":62367,"line_start":1219,"line_end":1219,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(mat.lower_triangle(), expected.lower_triangle());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":62372,"byte_end":62436,"line_start":1220,"line_end":1220,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(mat.m12, Complex::new(99999.99999, 88888.88888)); // This was untouched.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":62441,"byte_end":62528,"line_start":1221,"line_end":1221,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":62533,"byte_end":62542,"line_start":1222,"line_end":1222,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":64491,"byte_end":64517,"line_start":1269,"line_end":1269,"column_start":12,"column_end":38},"name":"quadform_tr_with_workspace","qualname":"<SquareMatrix<N, D1, S>>::quadform_tr_with_workspace","value":"pub fn quadform_tr_with_workspace<D2, S2, R3, C3, S3, D4,\n                                  S4>(&mut Self, &mut Vector<N, D2, S2>, N,\n                                      &Matrix<N, R3, C3, S3>,\n                                      &SquareMatrix<N, D4, S4>, N) where\nD2: Dim, R3: Dim, C3: Dim, D4: Dim, S2: StorageMut<N, D2>,\nS3: Storage<N, R3, C3>, S4: Storage<N, D4, D4>,\nShapeConstraint: DimEq<D1, D2> + DimEq<D1, R3> + DimEq<D2, R3> + DimEq<C3, D4>","parent":null,"children":[],"decl_id":null,"docs":" Computes the quadratic form `self = alpha * lhs * mid * lhs.transpose() + beta * self`.","sig":null,"attributes":[{"value":"/ Computes the quadratic form `self = alpha * lhs * mid * lhs.transpose() + beta * self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":63075,"byte_end":63166,"line_start":1243,"line_end":1243,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":63171,"byte_end":63174,"line_start":1244,"line_end":1244,"column_start":5,"column_end":8}},{"value":"/ This uses the provided workspace `work` to avoid allocations for intermediate results.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":63179,"byte_end":63269,"line_start":1245,"line_end":1245,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":63274,"byte_end":63277,"line_start":1246,"line_end":1246,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":63282,"byte_end":63297,"line_start":1247,"line_end":1247,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":63302,"byte_end":63305,"line_start":1248,"line_end":1248,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":63310,"byte_end":63317,"line_start":1249,"line_end":1249,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":63322,"byte_end":63361,"line_start":1250,"line_end":1250,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{DMatrix, DVector};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":63366,"byte_end":63405,"line_start":1251,"line_end":1251,"column_start":5,"column_end":44}},{"value":"/ // Note that all those would also work with statically-sized matrices.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":63410,"byte_end":63484,"line_start":1252,"line_end":1252,"column_start":5,"column_end":79}},{"value":"/ // We use DMatrix/DVector since that's the only case where pre-allocating the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":63489,"byte_end":63570,"line_start":1253,"line_end":1253,"column_start":5,"column_end":86}},{"value":"/ // workspace is actually useful (assuming the same workspace is re-used for","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":63575,"byte_end":63654,"line_start":1254,"line_end":1254,"column_start":5,"column_end":84}},{"value":"/ // several computations) because it avoids repeated dynamic allocations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":63659,"byte_end":63735,"line_start":1255,"line_end":1255,"column_start":5,"column_end":81}},{"value":"/ let mut mat = DMatrix::identity(2, 2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":63740,"byte_end":63782,"line_start":1256,"line_end":1256,"column_start":5,"column_end":47}},{"value":"/ let lhs = DMatrix::from_row_slice(2, 3, &[1.0, 2.0, 3.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":63787,"byte_end":63847,"line_start":1257,"line_end":1257,"column_start":5,"column_end":65}},{"value":"/                                           4.0, 5.0, 6.0]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":63852,"byte_end":63914,"line_start":1258,"line_end":1258,"column_start":5,"column_end":67}},{"value":"/ let mid = DMatrix::from_row_slice(3, 3, &[0.1, 0.2, 0.3,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":63919,"byte_end":63979,"line_start":1259,"line_end":1259,"column_start":5,"column_end":65}},{"value":"/                                           0.5, 0.6, 0.7,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":63984,"byte_end":64044,"line_start":1260,"line_end":1260,"column_start":5,"column_end":65}},{"value":"/                                           0.9, 1.0, 1.1]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":64049,"byte_end":64111,"line_start":1261,"line_end":1261,"column_start":5,"column_end":67}},{"value":"/ // The random shows that values on the workspace do not","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":64116,"byte_end":64175,"line_start":1262,"line_end":1262,"column_start":5,"column_end":64}},{"value":"/ // matter as they will be overwritten.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":64180,"byte_end":64222,"line_start":1263,"line_end":1263,"column_start":5,"column_end":47}},{"value":"/ let mut workspace = DVector::new_random(2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":64227,"byte_end":64274,"line_start":1264,"line_end":1264,"column_start":5,"column_end":52}},{"value":"/ let expected = &lhs * &mid * lhs.transpose() * 10.0 + &mat * 5.0;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":64279,"byte_end":64348,"line_start":1265,"line_end":1265,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":64353,"byte_end":64356,"line_start":1266,"line_end":1266,"column_start":5,"column_end":8}},{"value":"/ mat.quadform_tr_with_workspace(&mut workspace, 10.0, &lhs, &mid, 5.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":64361,"byte_end":64435,"line_start":1267,"line_end":1267,"column_start":5,"column_end":79}},{"value":"/ assert_relative_eq!(mat, expected);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":64440,"byte_end":64479,"line_start":1268,"line_end":1268,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":66278,"byte_end":66289,"line_start":1316,"line_end":1316,"column_start":12,"column_end":23},"name":"quadform_tr","qualname":"<SquareMatrix<N, D1, S>>::quadform_tr","value":"pub fn quadform_tr<R3, C3, S3, D4,\n                   S4>(&mut Self, N, &Matrix<N, R3, C3, S3>,\n                       &SquareMatrix<N, D4, S4>, N) where R3: Dim, C3: Dim,\nD4: Dim, S3: Storage<N, R3, C3>, S4: Storage<N, D4, D4>,\nShapeConstraint: DimEq<D1, D1> + DimEq<D1, R3> + DimEq<C3, D4>,\nDefaultAllocator: Allocator<N, D1>","parent":null,"children":[],"decl_id":null,"docs":" Computes the quadratic form `self = alpha * lhs * mid * lhs.transpose() + beta * self`.","sig":null,"attributes":[{"value":"/ Computes the quadratic form `self = alpha * lhs * mid * lhs.transpose() + beta * self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":65312,"byte_end":65403,"line_start":1295,"line_end":1295,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":65408,"byte_end":65411,"line_start":1296,"line_end":1296,"column_start":5,"column_end":8}},{"value":"/ This allocates a workspace vector of dimension D1 for intermediate results.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":65416,"byte_end":65495,"line_start":1297,"line_end":1297,"column_start":5,"column_end":84}},{"value":"/ If `D1` is a type-level integer, then the allocation is performed on the stack.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":65500,"byte_end":65583,"line_start":1298,"line_end":1298,"column_start":5,"column_end":88}},{"value":"/ Use `.quadform_tr_with_workspace(...)` instead to avoid allocations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":65588,"byte_end":65660,"line_start":1299,"line_end":1299,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":65665,"byte_end":65668,"line_start":1300,"line_end":1300,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":65673,"byte_end":65688,"line_start":1301,"line_end":1301,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":65693,"byte_end":65696,"line_start":1302,"line_end":1302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":65701,"byte_end":65708,"line_start":1303,"line_end":1303,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":65713,"byte_end":65752,"line_start":1304,"line_end":1304,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix2, Matrix3, Matrix2x3, Vector2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":65757,"byte_end":65816,"line_start":1305,"line_end":1305,"column_start":5,"column_end":64}},{"value":"/ let mut mat = Matrix2::identity();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":65821,"byte_end":65859,"line_start":1306,"line_end":1306,"column_start":5,"column_end":43}},{"value":"/ let lhs = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":65864,"byte_end":65907,"line_start":1307,"line_end":1307,"column_start":5,"column_end":48}},{"value":"/                          4.0, 5.0, 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":65912,"byte_end":65956,"line_start":1308,"line_end":1308,"column_start":5,"column_end":49}},{"value":"/ let mid = Matrix3::new(0.1, 0.2, 0.3,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":65961,"byte_end":66002,"line_start":1309,"line_end":1309,"column_start":5,"column_end":46}},{"value":"/                        0.5, 0.6, 0.7,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":66007,"byte_end":66048,"line_start":1310,"line_end":1310,"column_start":5,"column_end":46}},{"value":"/                        0.9, 1.0, 1.1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":66053,"byte_end":66095,"line_start":1311,"line_end":1311,"column_start":5,"column_end":47}},{"value":"/ let expected = lhs * mid * lhs.transpose() * 10.0 + mat * 5.0;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":66100,"byte_end":66166,"line_start":1312,"line_end":1312,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":66171,"byte_end":66174,"line_start":1313,"line_end":1313,"column_start":5,"column_end":8}},{"value":"/ mat.quadform_tr(10.0, &lhs, &mid, 5.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":66179,"byte_end":66222,"line_start":1314,"line_end":1314,"column_start":5,"column_end":48}},{"value":"/ assert_relative_eq!(mat, expected);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":66227,"byte_end":66266,"line_start":1315,"line_end":1315,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":68304,"byte_end":68327,"line_start":1360,"line_end":1360,"column_start":12,"column_end":35},"name":"quadform_with_workspace","qualname":"<SquareMatrix<N, D1, S>>::quadform_with_workspace","value":"pub fn quadform_with_workspace<D2, S2, D3, S3, R4, C4,\n                               S4>(&mut Self, &mut Vector<N, D2, S2>, N,\n                                   &SquareMatrix<N, D3, S3>,\n                                   &Matrix<N, R4, C4, S4>, N) where D2: Dim,\nD3: Dim, R4: Dim, C4: Dim, S2: StorageMut<N, D2>, S3: Storage<N, D3, D3>,\nS4: Storage<N, R4, C4>, ShapeConstraint: DimEq<D3, R4> + DimEq<D1, C4> +\nDimEq<D2, D3> + AreMultipliable<C4, R4, D2, U1>","parent":null,"children":[],"decl_id":null,"docs":" Computes the quadratic form `self = alpha * rhs.transpose() * mid * rhs + beta * self`.","sig":null,"attributes":[{"value":"/ Computes the quadratic form `self = alpha * rhs.transpose() * mid * rhs + beta * self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":66869,"byte_end":66960,"line_start":1335,"line_end":1335,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":66965,"byte_end":66968,"line_start":1336,"line_end":1336,"column_start":5,"column_end":8}},{"value":"/ This uses the provided workspace `work` to avoid allocations for intermediate results.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":66973,"byte_end":67063,"line_start":1337,"line_end":1337,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":67068,"byte_end":67071,"line_start":1338,"line_end":1338,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":67076,"byte_end":67083,"line_start":1339,"line_end":1339,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":67088,"byte_end":67127,"line_start":1340,"line_end":1340,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{DMatrix, DVector};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":67132,"byte_end":67171,"line_start":1341,"line_end":1341,"column_start":5,"column_end":44}},{"value":"/ // Note that all those would also work with statically-sized matrices.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":67176,"byte_end":67250,"line_start":1342,"line_end":1342,"column_start":5,"column_end":79}},{"value":"/ // We use DMatrix/DVector since that's the only case where pre-allocating the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":67255,"byte_end":67336,"line_start":1343,"line_end":1343,"column_start":5,"column_end":86}},{"value":"/ // workspace is actually useful (assuming the same workspace is re-used for","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":67341,"byte_end":67420,"line_start":1344,"line_end":1344,"column_start":5,"column_end":84}},{"value":"/ // several computations) because it avoids repeated dynamic allocations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":67425,"byte_end":67501,"line_start":1345,"line_end":1345,"column_start":5,"column_end":81}},{"value":"/ let mut mat = DMatrix::identity(2, 2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":67506,"byte_end":67548,"line_start":1346,"line_end":1346,"column_start":5,"column_end":47}},{"value":"/ let rhs = DMatrix::from_row_slice(3, 2, &[1.0, 2.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":67553,"byte_end":67608,"line_start":1347,"line_end":1347,"column_start":5,"column_end":60}},{"value":"/                                           3.0, 4.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":67613,"byte_end":67668,"line_start":1348,"line_end":1348,"column_start":5,"column_end":60}},{"value":"/                                           5.0, 6.0]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":67673,"byte_end":67730,"line_start":1349,"line_end":1349,"column_start":5,"column_end":62}},{"value":"/ let mid = DMatrix::from_row_slice(3, 3, &[0.1, 0.2, 0.3,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":67735,"byte_end":67795,"line_start":1350,"line_end":1350,"column_start":5,"column_end":65}},{"value":"/                                           0.5, 0.6, 0.7,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":67800,"byte_end":67860,"line_start":1351,"line_end":1351,"column_start":5,"column_end":65}},{"value":"/                                           0.9, 1.0, 1.1]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":67865,"byte_end":67927,"line_start":1352,"line_end":1352,"column_start":5,"column_end":67}},{"value":"/ // The random shows that values on the workspace do not","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":67932,"byte_end":67991,"line_start":1353,"line_end":1353,"column_start":5,"column_end":64}},{"value":"/ // matter as they will be overwritten.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":67996,"byte_end":68038,"line_start":1354,"line_end":1354,"column_start":5,"column_end":47}},{"value":"/ let mut workspace = DVector::new_random(3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":68043,"byte_end":68090,"line_start":1355,"line_end":1355,"column_start":5,"column_end":52}},{"value":"/ let expected = rhs.transpose() * &mid * &rhs * 10.0 + &mat * 5.0;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":68095,"byte_end":68164,"line_start":1356,"line_end":1356,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":68169,"byte_end":68172,"line_start":1357,"line_end":1357,"column_start":5,"column_end":8}},{"value":"/ mat.quadform_with_workspace(&mut workspace, 10.0, &mid, &rhs, 5.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":68177,"byte_end":68248,"line_start":1358,"line_end":1358,"column_start":5,"column_end":76}},{"value":"/ assert_relative_eq!(mat, expected);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":68253,"byte_end":68292,"line_start":1359,"line_end":1359,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":70182,"byte_end":70190,"line_start":1409,"line_end":1409,"column_start":12,"column_end":20},"name":"quadform","qualname":"<SquareMatrix<N, D1, S>>::quadform","value":"pub fn quadform<D2, S2, R3, C3,\n                S3>(&mut Self, N, &SquareMatrix<N, D2, S2>,\n                    &Matrix<N, R3, C3, S3>, N) where D2: Dim, R3: Dim,\nC3: Dim, S2: Storage<N, D2, D2>, S3: Storage<N, R3, C3>,\nShapeConstraint: DimEq<D2, R3> + DimEq<D1, C3> +\nAreMultipliable<C3, R3, D2, U1>, DefaultAllocator: Allocator<N, D2>","parent":null,"children":[],"decl_id":null,"docs":" Computes the quadratic form `self = alpha * rhs.transpose() * mid * rhs + beta * self`.","sig":null,"attributes":[{"value":"/ Computes the quadratic form `self = alpha * rhs.transpose() * mid * rhs + beta * self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":69226,"byte_end":69317,"line_start":1389,"line_end":1389,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":69322,"byte_end":69325,"line_start":1390,"line_end":1390,"column_start":5,"column_end":8}},{"value":"/ This allocates a workspace vector of dimension D2 for intermediate results.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":69330,"byte_end":69409,"line_start":1391,"line_end":1391,"column_start":5,"column_end":84}},{"value":"/ If `D2` is a type-level integer, then the allocation is performed on the stack.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":69414,"byte_end":69497,"line_start":1392,"line_end":1392,"column_start":5,"column_end":88}},{"value":"/ Use `.quadform_with_workspace(...)` instead to avoid allocations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":69502,"byte_end":69571,"line_start":1393,"line_end":1393,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":69576,"byte_end":69579,"line_start":1394,"line_end":1394,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":69584,"byte_end":69591,"line_start":1395,"line_end":1395,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":69596,"byte_end":69635,"line_start":1396,"line_end":1396,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix2, Matrix3x2, Matrix3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":69640,"byte_end":69690,"line_start":1397,"line_end":1397,"column_start":5,"column_end":55}},{"value":"/ let mut mat = Matrix2::identity();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":69695,"byte_end":69733,"line_start":1398,"line_end":1398,"column_start":5,"column_end":43}},{"value":"/ let rhs = Matrix3x2::new(1.0, 2.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":69738,"byte_end":69776,"line_start":1399,"line_end":1399,"column_start":5,"column_end":43}},{"value":"/                          3.0, 4.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":69781,"byte_end":69819,"line_start":1400,"line_end":1400,"column_start":5,"column_end":43}},{"value":"/                          5.0, 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":69824,"byte_end":69863,"line_start":1401,"line_end":1401,"column_start":5,"column_end":44}},{"value":"/ let mid = Matrix3::new(0.1, 0.2, 0.3,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":69868,"byte_end":69909,"line_start":1402,"line_end":1402,"column_start":5,"column_end":46}},{"value":"/                        0.5, 0.6, 0.7,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":69914,"byte_end":69955,"line_start":1403,"line_end":1403,"column_start":5,"column_end":46}},{"value":"/                        0.9, 1.0, 1.1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":69960,"byte_end":70002,"line_start":1404,"line_end":1404,"column_start":5,"column_end":47}},{"value":"/ let expected = rhs.transpose() * mid * rhs * 10.0 + mat * 5.0;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":70007,"byte_end":70073,"line_start":1405,"line_end":1405,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":70078,"byte_end":70081,"line_start":1406,"line_end":1406,"column_start":5,"column_end":8}},{"value":"/ mat.quadform(10.0, &mid, &rhs, 5.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":70086,"byte_end":70126,"line_start":1407,"line_end":1407,"column_start":5,"column_end":45}},{"value":"/ assert_relative_eq!(mat, expected);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":70131,"byte_end":70170,"line_start":1408,"line_end":1408,"column_start":5,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":361},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"constraint","qualname":"::base::constraint","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":374},{"krate":0,"index":379},{"krate":0,"index":384},{"krate":0,"index":388},{"krate":0,"index":391},{"krate":0,"index":394},{"krate":0,"index":12350},{"krate":0,"index":12354},{"krate":0,"index":12357},{"krate":0,"index":12360},{"krate":0,"index":12363},{"krate":0,"index":12367},{"krate":0,"index":12370},{"krate":0,"index":12373},{"krate":0,"index":398},{"krate":0,"index":402},{"krate":0,"index":405},{"krate":0,"index":408}],"decl_id":null,"docs":" Compatibility constraints between matrix shapes, e.g., for addition or multiplication.\n","sig":null,"attributes":[{"value":"/ Compatibility constraints between matrix shapes, e.g., for addition or multiplication.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":70782,"byte_end":70872,"line_start":1,"line_end":1,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":372},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":71001,"byte_end":71016,"line_start":6,"line_end":6,"column_start":12,"column_end":27},"name":"ShapeConstraint","qualname":"::base::constraint::ShapeConstraint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type used in `where` clauses for enforcing constraints.\n","sig":null,"attributes":[{"value":"/ A type used in `where` clauses for enforcing constraints.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":70928,"byte_end":70989,"line_start":5,"line_end":5,"column_start":1,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":374},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":71077,"byte_end":71092,"line_start":9,"line_end":9,"column_start":11,"column_end":26},"name":"AreMultipliable","qualname":"::base::constraint::AreMultipliable","value":"AreMultipliable<R1: Dim, C1: Dim, R2: Dim, C2: Dim>: DimEq<C1, R2>","parent":null,"children":[],"decl_id":null,"docs":" Constraints `C1` and `R2` to be equivalent.\n","sig":null,"attributes":[{"value":"/ Constraints `C1` and `R2` to be equivalent.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":71019,"byte_end":71066,"line_start":8,"line_end":8,"column_start":1,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":384},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":71345,"byte_end":71350,"line_start":17,"line_end":17,"column_start":11,"column_end":16},"name":"DimEq","qualname":"::base::constraint::DimEq","value":"DimEq<D1: Dim, D2: Dim>","parent":null,"children":[{"krate":0,"index":387}],"decl_id":null,"docs":" Constraints `D1` and `D2` to be equivalent.\n","sig":null,"attributes":[{"value":"/ Constraints `D1` and `D2` to be equivalent.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":71287,"byte_end":71334,"line_start":16,"line_end":16,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":387},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":71499,"byte_end":71513,"line_start":20,"line_end":20,"column_start":10,"column_end":24},"name":"Representative","qualname":"::base::constraint::DimEq::Representative","value":"type Representative: Dim;","parent":{"krate":0,"index":384},"children":[],"decl_id":null,"docs":" This is either equal to `D1` or `D2`, always choosing the one (if any) which is a type-level\n constant.\n","sig":null,"attributes":[{"value":"/ This is either equal to `D1` or `D2`, always choosing the one (if any) which is a type-level","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":71375,"byte_end":71471,"line_start":18,"line_end":18,"column_start":5,"column_end":101}},{"value":"/ constant.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":71476,"byte_end":71489,"line_start":19,"line_end":19,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":12350},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":72746,"byte_end":72762,"line_start":63,"line_end":63,"column_start":5,"column_end":21},"name":"SameNumberOfRows","qualname":"::base::constraint::SameNumberOfRows","value":"SameNumberOfRows<D1: Dim, D2: Dim>: DimEq<D1, D2> + DimEq<D2, D1>","parent":null,"children":[{"krate":0,"index":12353}],"decl_id":null,"docs":"Constraints `D1` and `D2` to be equivalent. They are both assumed to be the number of rows of a matrix.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":12363},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":72896,"byte_end":72915,"line_start":67,"line_end":67,"column_start":5,"column_end":24},"name":"SameNumberOfColumns","qualname":"::base::constraint::SameNumberOfColumns","value":"SameNumberOfColumns<D1: Dim, D2: Dim>: DimEq<D1, D2> + DimEq<D2, D1>","parent":null,"children":[{"krate":0,"index":12366}],"decl_id":null,"docs":"Constraints `D1` and `D2` to be equivalent. They are both assumed to be the number of columns of a matrix.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":398},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":73061,"byte_end":73074,"line_start":72,"line_end":72,"column_start":11,"column_end":24},"name":"SameDimension","qualname":"::base::constraint::SameDimension","value":"SameDimension<D1: Dim, D2: Dim>: SameNumberOfRows<D1, D2> + SameNumberOfColumns<D1, D2>","parent":null,"children":[{"krate":0,"index":401}],"decl_id":null,"docs":" Constraints D1 and D2 to be equivalent, where they both designate dimensions of algebraic\n entities (e.g. square matrices).\n","sig":null,"attributes":[{"value":"/ Constraints D1 and D2 to be equivalent, where they both designate dimensions of algebraic","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":72920,"byte_end":73013,"line_start":70,"line_end":70,"column_start":1,"column_end":94}},{"value":"/ entities (e.g. square matrices).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":73014,"byte_end":73050,"line_start":71,"line_end":71,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":401},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":73283,"byte_end":73297,"line_start":77,"line_end":77,"column_start":10,"column_end":24},"name":"Representative","qualname":"::base::constraint::SameDimension::Representative","value":"type Representative: Dim;","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":" This is either equal to `D1` or `D2`, always choosing the one (if any) which is a type-level\n constant.\n","sig":null,"attributes":[{"value":"/ This is either equal to `D1` or `D2`, always choosing the one (if any) which is a type-level","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":73159,"byte_end":73255,"line_start":75,"line_end":75,"column_start":5,"column_end":101}},{"value":"/ constant.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":73260,"byte_end":73273,"line_start":76,"line_end":76,"column_start":5,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":411},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"coordinates","qualname":"::base::coordinates","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","parent":null,"children":[{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":419},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":452},{"krate":0,"index":12376},{"krate":0,"index":12379},{"krate":0,"index":12381},{"krate":0,"index":12384},{"krate":0,"index":12386},{"krate":0,"index":12390},{"krate":0,"index":12393},{"krate":0,"index":12397},{"krate":0,"index":12400},{"krate":0,"index":12402},{"krate":0,"index":12406},{"krate":0,"index":12408},{"krate":0,"index":12411},{"krate":0,"index":12413},{"krate":0,"index":12417},{"krate":0,"index":12420},{"krate":0,"index":12424},{"krate":0,"index":12427},{"krate":0,"index":12429},{"krate":0,"index":12434},{"krate":0,"index":12436},{"krate":0,"index":12439},{"krate":0,"index":12441},{"krate":0,"index":12445},{"krate":0,"index":12448},{"krate":0,"index":12452},{"krate":0,"index":12455},{"krate":0,"index":12457},{"krate":0,"index":12463},{"krate":0,"index":12465},{"krate":0,"index":12468},{"krate":0,"index":12470},{"krate":0,"index":12474},{"krate":0,"index":12477},{"krate":0,"index":12481},{"krate":0,"index":12484},{"krate":0,"index":12486},{"krate":0,"index":12493},{"krate":0,"index":12495},{"krate":0,"index":12498},{"krate":0,"index":12500},{"krate":0,"index":12504},{"krate":0,"index":12507},{"krate":0,"index":12511},{"krate":0,"index":12514},{"krate":0,"index":12516},{"krate":0,"index":12524},{"krate":0,"index":12526},{"krate":0,"index":12529},{"krate":0,"index":12531},{"krate":0,"index":12535},{"krate":0,"index":12538},{"krate":0,"index":12542},{"krate":0,"index":12545},{"krate":0,"index":12547},{"krate":0,"index":12553},{"krate":0,"index":12555},{"krate":0,"index":12558},{"krate":0,"index":12560},{"krate":0,"index":12564},{"krate":0,"index":12567},{"krate":0,"index":12571},{"krate":0,"index":12574},{"krate":0,"index":12576},{"krate":0,"index":12582},{"krate":0,"index":12584},{"krate":0,"index":12587},{"krate":0,"index":12589},{"krate":0,"index":12593},{"krate":0,"index":12596},{"krate":0,"index":12600},{"krate":0,"index":12603},{"krate":0,"index":12605},{"krate":0,"index":12613},{"krate":0,"index":12615},{"krate":0,"index":12618},{"krate":0,"index":12620},{"krate":0,"index":12624},{"krate":0,"index":12627},{"krate":0,"index":12631},{"krate":0,"index":12634},{"krate":0,"index":12636},{"krate":0,"index":12646},{"krate":0,"index":12648},{"krate":0,"index":12651},{"krate":0,"index":12653},{"krate":0,"index":12657},{"krate":0,"index":12660},{"krate":0,"index":12664},{"krate":0,"index":12667},{"krate":0,"index":12669},{"krate":0,"index":12681},{"krate":0,"index":12683},{"krate":0,"index":12686},{"krate":0,"index":12688},{"krate":0,"index":12692},{"krate":0,"index":12695},{"krate":0,"index":12699},{"krate":0,"index":12702},{"krate":0,"index":12704},{"krate":0,"index":12718},{"krate":0,"index":12720},{"krate":0,"index":12723},{"krate":0,"index":12725},{"krate":0,"index":12729},{"krate":0,"index":12732},{"krate":0,"index":12736},{"krate":0,"index":12739},{"krate":0,"index":12741},{"krate":0,"index":12749},{"krate":0,"index":12751},{"krate":0,"index":12754},{"krate":0,"index":12756},{"krate":0,"index":12760},{"krate":0,"index":12763},{"krate":0,"index":12767},{"krate":0,"index":12770},{"krate":0,"index":12772},{"krate":0,"index":12783},{"krate":0,"index":12785},{"krate":0,"index":12788},{"krate":0,"index":12790},{"krate":0,"index":12794},{"krate":0,"index":12797},{"krate":0,"index":12801},{"krate":0,"index":12804},{"krate":0,"index":12806},{"krate":0,"index":12820},{"krate":0,"index":12822},{"krate":0,"index":12825},{"krate":0,"index":12827},{"krate":0,"index":12831},{"krate":0,"index":12834},{"krate":0,"index":12838},{"krate":0,"index":12841},{"krate":0,"index":12843},{"krate":0,"index":12860},{"krate":0,"index":12862},{"krate":0,"index":12865},{"krate":0,"index":12867},{"krate":0,"index":12871},{"krate":0,"index":12874},{"krate":0,"index":12878},{"krate":0,"index":12881},{"krate":0,"index":12883},{"krate":0,"index":12903},{"krate":0,"index":12905},{"krate":0,"index":12908},{"krate":0,"index":12910},{"krate":0,"index":12914},{"krate":0,"index":12917},{"krate":0,"index":12921},{"krate":0,"index":12924},{"krate":0,"index":12926},{"krate":0,"index":12936},{"krate":0,"index":12938},{"krate":0,"index":12941},{"krate":0,"index":12943},{"krate":0,"index":12947},{"krate":0,"index":12950},{"krate":0,"index":12954},{"krate":0,"index":12957},{"krate":0,"index":12959},{"krate":0,"index":12973},{"krate":0,"index":12975},{"krate":0,"index":12978},{"krate":0,"index":12980},{"krate":0,"index":12984},{"krate":0,"index":12987},{"krate":0,"index":12991},{"krate":0,"index":12994},{"krate":0,"index":12996},{"krate":0,"index":13014},{"krate":0,"index":13016},{"krate":0,"index":13019},{"krate":0,"index":13021},{"krate":0,"index":13025},{"krate":0,"index":13028},{"krate":0,"index":13032},{"krate":0,"index":13035},{"krate":0,"index":13037},{"krate":0,"index":13059},{"krate":0,"index":13061},{"krate":0,"index":13064},{"krate":0,"index":13066},{"krate":0,"index":13070},{"krate":0,"index":13073},{"krate":0,"index":13077},{"krate":0,"index":13080},{"krate":0,"index":13082},{"krate":0,"index":13108},{"krate":0,"index":13110},{"krate":0,"index":13113},{"krate":0,"index":13115},{"krate":0,"index":13119},{"krate":0,"index":13122},{"krate":0,"index":13126},{"krate":0,"index":13129},{"krate":0,"index":13131},{"krate":0,"index":13143},{"krate":0,"index":13145},{"krate":0,"index":13148},{"krate":0,"index":13150},{"krate":0,"index":13154},{"krate":0,"index":13157},{"krate":0,"index":13161},{"krate":0,"index":13164},{"krate":0,"index":13166},{"krate":0,"index":13183},{"krate":0,"index":13185},{"krate":0,"index":13188},{"krate":0,"index":13190},{"krate":0,"index":13194},{"krate":0,"index":13197},{"krate":0,"index":13201},{"krate":0,"index":13204},{"krate":0,"index":13206},{"krate":0,"index":13228},{"krate":0,"index":13230},{"krate":0,"index":13233},{"krate":0,"index":13235},{"krate":0,"index":13239},{"krate":0,"index":13242},{"krate":0,"index":13246},{"krate":0,"index":13249},{"krate":0,"index":13251},{"krate":0,"index":13278},{"krate":0,"index":13280},{"krate":0,"index":13283},{"krate":0,"index":13285},{"krate":0,"index":13289},{"krate":0,"index":13292},{"krate":0,"index":13296},{"krate":0,"index":13299},{"krate":0,"index":13301},{"krate":0,"index":13333},{"krate":0,"index":13335},{"krate":0,"index":13338},{"krate":0,"index":13340},{"krate":0,"index":13344},{"krate":0,"index":13347},{"krate":0,"index":13351},{"krate":0,"index":13354},{"krate":0,"index":13356},{"krate":0,"index":13370},{"krate":0,"index":13372},{"krate":0,"index":13375},{"krate":0,"index":13377},{"krate":0,"index":13381},{"krate":0,"index":13384},{"krate":0,"index":13388},{"krate":0,"index":13391},{"krate":0,"index":13393},{"krate":0,"index":13413},{"krate":0,"index":13415},{"krate":0,"index":13418},{"krate":0,"index":13420},{"krate":0,"index":13424},{"krate":0,"index":13427},{"krate":0,"index":13431},{"krate":0,"index":13434},{"krate":0,"index":13436},{"krate":0,"index":13462},{"krate":0,"index":13464},{"krate":0,"index":13467},{"krate":0,"index":13469},{"krate":0,"index":13473},{"krate":0,"index":13476},{"krate":0,"index":13480},{"krate":0,"index":13483},{"krate":0,"index":13485},{"krate":0,"index":13517},{"krate":0,"index":13519},{"krate":0,"index":13522},{"krate":0,"index":13524},{"krate":0,"index":13528},{"krate":0,"index":13531},{"krate":0,"index":13535},{"krate":0,"index":13538},{"krate":0,"index":13540},{"krate":0,"index":13578},{"krate":0,"index":13580},{"krate":0,"index":13583},{"krate":0,"index":13585},{"krate":0,"index":13589},{"krate":0,"index":13592},{"krate":0,"index":13596},{"krate":0,"index":13599},{"krate":0,"index":13601},{"krate":0,"index":13606},{"krate":0,"index":13610},{"krate":0,"index":13615},{"krate":0,"index":13619},{"krate":0,"index":13624},{"krate":0,"index":13628},{"krate":0,"index":13633},{"krate":0,"index":13637},{"krate":0,"index":13642},{"krate":0,"index":13646},{"krate":0,"index":13651},{"krate":0,"index":13655},{"krate":0,"index":13660},{"krate":0,"index":13664},{"krate":0,"index":13669},{"krate":0,"index":13673},{"krate":0,"index":13678},{"krate":0,"index":13682},{"krate":0,"index":13687},{"krate":0,"index":13691},{"krate":0,"index":13696},{"krate":0,"index":13700},{"krate":0,"index":13705},{"krate":0,"index":13709},{"krate":0,"index":13714},{"krate":0,"index":13718},{"krate":0,"index":13723},{"krate":0,"index":13727},{"krate":0,"index":13732},{"krate":0,"index":13736},{"krate":0,"index":13741},{"krate":0,"index":13745},{"krate":0,"index":13750},{"krate":0,"index":13754},{"krate":0,"index":13759},{"krate":0,"index":13763},{"krate":0,"index":13768},{"krate":0,"index":13772},{"krate":0,"index":13777},{"krate":0,"index":13781},{"krate":0,"index":13786},{"krate":0,"index":13790},{"krate":0,"index":13795},{"krate":0,"index":13799},{"krate":0,"index":13804},{"krate":0,"index":13808},{"krate":0,"index":13813},{"krate":0,"index":13817},{"krate":0,"index":13822},{"krate":0,"index":13826},{"krate":0,"index":13831},{"krate":0,"index":13835},{"krate":0,"index":13840},{"krate":0,"index":13844},{"krate":0,"index":13849},{"krate":0,"index":13853},{"krate":0,"index":13858},{"krate":0,"index":13862},{"krate":0,"index":13867},{"krate":0,"index":13871},{"krate":0,"index":13876},{"krate":0,"index":13880},{"krate":0,"index":13885},{"krate":0,"index":13889},{"krate":0,"index":13894},{"krate":0,"index":13898},{"krate":0,"index":13903},{"krate":0,"index":13907},{"krate":0,"index":13912},{"krate":0,"index":13916},{"krate":0,"index":13921}],"decl_id":null,"docs":" Structures to which matrices and vector can be auto-dereferenced (through `Deref`) to access\n components using their names. For example, if `v` is a 3D vector, one can write `v.z` instead\n of `v[2]`.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":73588,"byte_end":73611,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"/ Structures to which matrices and vector can be auto-dereferenced (through `Deref`) to access","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":73613,"byte_end":73709,"line_start":3,"line_end":3,"column_start":1,"column_end":97}},{"value":"/ components using their names. For example, if `v` is a 3D vector, one can write `v.z` instead","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":73710,"byte_end":73807,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ of `v[2]`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":73808,"byte_end":73822,"line_start":5,"line_end":5,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":12376},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75298,"byte_end":75299,"line_start":60,"line_end":60,"column_start":14,"column_end":15},"name":"X","qualname":"::base::coordinates::X","value":"X { x }","parent":null,"children":[{"krate":0,"index":12378}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74183,"byte_end":74270,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74279,"byte_end":74340,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74349,"byte_end":74359,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12378},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75301,"byte_end":75302,"line_start":60,"line_end":60,"column_start":17,"column_end":18},"name":"x","qualname":"::base::coordinates::X::x","value":"N","parent":{"krate":0,"index":12376},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12402},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75318,"byte_end":75320,"line_start":61,"line_end":61,"column_start":14,"column_end":16},"name":"XY","qualname":"::base::coordinates::XY","value":"XY { x, y }","parent":null,"children":[{"krate":0,"index":12404},{"krate":0,"index":12405}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74183,"byte_end":74270,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74279,"byte_end":74340,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74349,"byte_end":74359,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12404},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75322,"byte_end":75323,"line_start":61,"line_end":61,"column_start":18,"column_end":19},"name":"x","qualname":"::base::coordinates::XY::x","value":"N","parent":{"krate":0,"index":12402},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12405},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75325,"byte_end":75326,"line_start":61,"line_end":61,"column_start":21,"column_end":22},"name":"y","qualname":"::base::coordinates::XY::y","value":"N","parent":{"krate":0,"index":12402},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12429},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75342,"byte_end":75345,"line_start":62,"line_end":62,"column_start":14,"column_end":17},"name":"XYZ","qualname":"::base::coordinates::XYZ","value":"XYZ { x, y, z }","parent":null,"children":[{"krate":0,"index":12431},{"krate":0,"index":12432},{"krate":0,"index":12433}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74183,"byte_end":74270,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74279,"byte_end":74340,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74349,"byte_end":74359,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12431},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75347,"byte_end":75348,"line_start":62,"line_end":62,"column_start":19,"column_end":20},"name":"x","qualname":"::base::coordinates::XYZ::x","value":"N","parent":{"krate":0,"index":12429},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12432},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75350,"byte_end":75351,"line_start":62,"line_end":62,"column_start":22,"column_end":23},"name":"y","qualname":"::base::coordinates::XYZ::y","value":"N","parent":{"krate":0,"index":12429},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12433},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75353,"byte_end":75354,"line_start":62,"line_end":62,"column_start":25,"column_end":26},"name":"z","qualname":"::base::coordinates::XYZ::z","value":"N","parent":{"krate":0,"index":12429},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12457},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75370,"byte_end":75374,"line_start":63,"line_end":63,"column_start":14,"column_end":18},"name":"XYZW","qualname":"::base::coordinates::XYZW","value":"XYZW { x, y, z, w }","parent":null,"children":[{"krate":0,"index":12459},{"krate":0,"index":12460},{"krate":0,"index":12461},{"krate":0,"index":12462}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74183,"byte_end":74270,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74279,"byte_end":74340,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74349,"byte_end":74359,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12459},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75376,"byte_end":75377,"line_start":63,"line_end":63,"column_start":20,"column_end":21},"name":"x","qualname":"::base::coordinates::XYZW::x","value":"N","parent":{"krate":0,"index":12457},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12460},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75379,"byte_end":75380,"line_start":63,"line_end":63,"column_start":23,"column_end":24},"name":"y","qualname":"::base::coordinates::XYZW::y","value":"N","parent":{"krate":0,"index":12457},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12461},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75382,"byte_end":75383,"line_start":63,"line_end":63,"column_start":26,"column_end":27},"name":"z","qualname":"::base::coordinates::XYZW::z","value":"N","parent":{"krate":0,"index":12457},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12462},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75385,"byte_end":75386,"line_start":63,"line_end":63,"column_start":29,"column_end":30},"name":"w","qualname":"::base::coordinates::XYZW::w","value":"N","parent":{"krate":0,"index":12457},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12486},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75402,"byte_end":75407,"line_start":64,"line_end":64,"column_start":14,"column_end":19},"name":"XYZWA","qualname":"::base::coordinates::XYZWA","value":"XYZWA { x, y, z, w, a }","parent":null,"children":[{"krate":0,"index":12488},{"krate":0,"index":12489},{"krate":0,"index":12490},{"krate":0,"index":12491},{"krate":0,"index":12492}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74183,"byte_end":74270,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74279,"byte_end":74340,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74349,"byte_end":74359,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12488},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75409,"byte_end":75410,"line_start":64,"line_end":64,"column_start":21,"column_end":22},"name":"x","qualname":"::base::coordinates::XYZWA::x","value":"N","parent":{"krate":0,"index":12486},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12489},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75412,"byte_end":75413,"line_start":64,"line_end":64,"column_start":24,"column_end":25},"name":"y","qualname":"::base::coordinates::XYZWA::y","value":"N","parent":{"krate":0,"index":12486},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12490},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75415,"byte_end":75416,"line_start":64,"line_end":64,"column_start":27,"column_end":28},"name":"z","qualname":"::base::coordinates::XYZWA::z","value":"N","parent":{"krate":0,"index":12486},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12491},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75418,"byte_end":75419,"line_start":64,"line_end":64,"column_start":30,"column_end":31},"name":"w","qualname":"::base::coordinates::XYZWA::w","value":"N","parent":{"krate":0,"index":12486},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12492},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75421,"byte_end":75422,"line_start":64,"line_end":64,"column_start":33,"column_end":34},"name":"a","qualname":"::base::coordinates::XYZWA::a","value":"N","parent":{"krate":0,"index":12486},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12516},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75438,"byte_end":75444,"line_start":65,"line_end":65,"column_start":14,"column_end":20},"name":"XYZWAB","qualname":"::base::coordinates::XYZWAB","value":"XYZWAB { x, y, z, w, a, b }","parent":null,"children":[{"krate":0,"index":12518},{"krate":0,"index":12519},{"krate":0,"index":12520},{"krate":0,"index":12521},{"krate":0,"index":12522},{"krate":0,"index":12523}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74183,"byte_end":74270,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74279,"byte_end":74340,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74349,"byte_end":74359,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12518},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75446,"byte_end":75447,"line_start":65,"line_end":65,"column_start":22,"column_end":23},"name":"x","qualname":"::base::coordinates::XYZWAB::x","value":"N","parent":{"krate":0,"index":12516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12519},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75449,"byte_end":75450,"line_start":65,"line_end":65,"column_start":25,"column_end":26},"name":"y","qualname":"::base::coordinates::XYZWAB::y","value":"N","parent":{"krate":0,"index":12516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12520},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75452,"byte_end":75453,"line_start":65,"line_end":65,"column_start":28,"column_end":29},"name":"z","qualname":"::base::coordinates::XYZWAB::z","value":"N","parent":{"krate":0,"index":12516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12521},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75455,"byte_end":75456,"line_start":65,"line_end":65,"column_start":31,"column_end":32},"name":"w","qualname":"::base::coordinates::XYZWAB::w","value":"N","parent":{"krate":0,"index":12516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12522},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75458,"byte_end":75459,"line_start":65,"line_end":65,"column_start":34,"column_end":35},"name":"a","qualname":"::base::coordinates::XYZWAB::a","value":"N","parent":{"krate":0,"index":12516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12523},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75461,"byte_end":75462,"line_start":65,"line_end":65,"column_start":37,"column_end":38},"name":"b","qualname":"::base::coordinates::XYZWAB::b","value":"N","parent":{"krate":0,"index":12516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12547},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75478,"byte_end":75482,"line_start":66,"line_end":66,"column_start":14,"column_end":18},"name":"IJKW","qualname":"::base::coordinates::IJKW","value":"IJKW { i, j, k, w }","parent":null,"children":[{"krate":0,"index":12549},{"krate":0,"index":12550},{"krate":0,"index":12551},{"krate":0,"index":12552}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74183,"byte_end":74270,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74279,"byte_end":74340,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74349,"byte_end":74359,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12549},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75484,"byte_end":75485,"line_start":66,"line_end":66,"column_start":20,"column_end":21},"name":"i","qualname":"::base::coordinates::IJKW::i","value":"N","parent":{"krate":0,"index":12547},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12550},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75487,"byte_end":75488,"line_start":66,"line_end":66,"column_start":23,"column_end":24},"name":"j","qualname":"::base::coordinates::IJKW::j","value":"N","parent":{"krate":0,"index":12547},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12551},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75490,"byte_end":75491,"line_start":66,"line_end":66,"column_start":26,"column_end":27},"name":"k","qualname":"::base::coordinates::IJKW::k","value":"N","parent":{"krate":0,"index":12547},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12552},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75493,"byte_end":75494,"line_start":66,"line_end":66,"column_start":29,"column_end":30},"name":"w","qualname":"::base::coordinates::IJKW::w","value":"N","parent":{"krate":0,"index":12547},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12576},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75555,"byte_end":75559,"line_start":71,"line_end":71,"column_start":14,"column_end":18},"name":"M2x2","qualname":"::base::coordinates::M2x2","value":"M2x2 { m11, m21, m12, m22 }","parent":null,"children":[{"krate":0,"index":12578},{"krate":0,"index":12579},{"krate":0,"index":12580},{"krate":0,"index":12581}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74183,"byte_end":74270,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74279,"byte_end":74340,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74349,"byte_end":74359,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12578},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75561,"byte_end":75564,"line_start":71,"line_end":71,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M2x2::m11","value":"N","parent":{"krate":0,"index":12576},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12579},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75566,"byte_end":75569,"line_start":71,"line_end":71,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M2x2::m21","value":"N","parent":{"krate":0,"index":12576},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12580},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75590,"byte_end":75593,"line_start":72,"line_end":72,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M2x2::m12","value":"N","parent":{"krate":0,"index":12576},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12581},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75595,"byte_end":75598,"line_start":72,"line_end":72,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M2x2::m22","value":"N","parent":{"krate":0,"index":12576},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12605},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75614,"byte_end":75618,"line_start":73,"line_end":73,"column_start":14,"column_end":18},"name":"M2x3","qualname":"::base::coordinates::M2x3","value":"M2x3 { m11, m21, m12, m22, m13, m23 }","parent":null,"children":[{"krate":0,"index":12607},{"krate":0,"index":12608},{"krate":0,"index":12609},{"krate":0,"index":12610},{"krate":0,"index":12611},{"krate":0,"index":12612}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74183,"byte_end":74270,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74279,"byte_end":74340,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74349,"byte_end":74359,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12607},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75620,"byte_end":75623,"line_start":73,"line_end":73,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M2x3::m11","value":"N","parent":{"krate":0,"index":12605},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12608},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75625,"byte_end":75628,"line_start":73,"line_end":73,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M2x3::m21","value":"N","parent":{"krate":0,"index":12605},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12609},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75649,"byte_end":75652,"line_start":74,"line_end":74,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M2x3::m12","value":"N","parent":{"krate":0,"index":12605},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12610},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75654,"byte_end":75657,"line_start":74,"line_end":74,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M2x3::m22","value":"N","parent":{"krate":0,"index":12605},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12611},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75678,"byte_end":75681,"line_start":75,"line_end":75,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M2x3::m13","value":"N","parent":{"krate":0,"index":12605},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12612},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75683,"byte_end":75686,"line_start":75,"line_end":75,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M2x3::m23","value":"N","parent":{"krate":0,"index":12605},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12636},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75702,"byte_end":75706,"line_start":76,"line_end":76,"column_start":14,"column_end":18},"name":"M2x4","qualname":"::base::coordinates::M2x4","value":"M2x4 { m11, m21, m12, m22, m13, m23, m14, m24 }","parent":null,"children":[{"krate":0,"index":12638},{"krate":0,"index":12639},{"krate":0,"index":12640},{"krate":0,"index":12641},{"krate":0,"index":12642},{"krate":0,"index":12643},{"krate":0,"index":12644},{"krate":0,"index":12645}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74183,"byte_end":74270,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74279,"byte_end":74340,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74349,"byte_end":74359,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12638},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75708,"byte_end":75711,"line_start":76,"line_end":76,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M2x4::m11","value":"N","parent":{"krate":0,"index":12636},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12639},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75713,"byte_end":75716,"line_start":76,"line_end":76,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M2x4::m21","value":"N","parent":{"krate":0,"index":12636},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12640},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75737,"byte_end":75740,"line_start":77,"line_end":77,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M2x4::m12","value":"N","parent":{"krate":0,"index":12636},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12641},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75742,"byte_end":75745,"line_start":77,"line_end":77,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M2x4::m22","value":"N","parent":{"krate":0,"index":12636},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12642},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75766,"byte_end":75769,"line_start":78,"line_end":78,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M2x4::m13","value":"N","parent":{"krate":0,"index":12636},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12643},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75771,"byte_end":75774,"line_start":78,"line_end":78,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M2x4::m23","value":"N","parent":{"krate":0,"index":12636},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12644},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75795,"byte_end":75798,"line_start":79,"line_end":79,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M2x4::m14","value":"N","parent":{"krate":0,"index":12636},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12645},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75800,"byte_end":75803,"line_start":79,"line_end":79,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M2x4::m24","value":"N","parent":{"krate":0,"index":12636},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12669},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75819,"byte_end":75823,"line_start":80,"line_end":80,"column_start":14,"column_end":18},"name":"M2x5","qualname":"::base::coordinates::M2x5","value":"M2x5 { m11, m21, m12, m22, m13, m23, m14, m24, m15, m25 }","parent":null,"children":[{"krate":0,"index":12671},{"krate":0,"index":12672},{"krate":0,"index":12673},{"krate":0,"index":12674},{"krate":0,"index":12675},{"krate":0,"index":12676},{"krate":0,"index":12677},{"krate":0,"index":12678},{"krate":0,"index":12679},{"krate":0,"index":12680}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74183,"byte_end":74270,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74279,"byte_end":74340,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74349,"byte_end":74359,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12671},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75825,"byte_end":75828,"line_start":80,"line_end":80,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M2x5::m11","value":"N","parent":{"krate":0,"index":12669},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12672},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75830,"byte_end":75833,"line_start":80,"line_end":80,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M2x5::m21","value":"N","parent":{"krate":0,"index":12669},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12673},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75854,"byte_end":75857,"line_start":81,"line_end":81,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M2x5::m12","value":"N","parent":{"krate":0,"index":12669},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12674},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75859,"byte_end":75862,"line_start":81,"line_end":81,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M2x5::m22","value":"N","parent":{"krate":0,"index":12669},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12675},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75883,"byte_end":75886,"line_start":82,"line_end":82,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M2x5::m13","value":"N","parent":{"krate":0,"index":12669},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12676},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75888,"byte_end":75891,"line_start":82,"line_end":82,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M2x5::m23","value":"N","parent":{"krate":0,"index":12669},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12677},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75912,"byte_end":75915,"line_start":83,"line_end":83,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M2x5::m14","value":"N","parent":{"krate":0,"index":12669},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12678},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75917,"byte_end":75920,"line_start":83,"line_end":83,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M2x5::m24","value":"N","parent":{"krate":0,"index":12669},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12679},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75941,"byte_end":75944,"line_start":84,"line_end":84,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M2x5::m15","value":"N","parent":{"krate":0,"index":12669},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12680},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75946,"byte_end":75949,"line_start":84,"line_end":84,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M2x5::m25","value":"N","parent":{"krate":0,"index":12669},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12704},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75965,"byte_end":75969,"line_start":85,"line_end":85,"column_start":14,"column_end":18},"name":"M2x6","qualname":"::base::coordinates::M2x6","value":"M2x6 { m11, m21, m12, m22, m13, m23, m14, m24, m15, m25, m16, m26 }","parent":null,"children":[{"krate":0,"index":12706},{"krate":0,"index":12707},{"krate":0,"index":12708},{"krate":0,"index":12709},{"krate":0,"index":12710},{"krate":0,"index":12711},{"krate":0,"index":12712},{"krate":0,"index":12713},{"krate":0,"index":12714},{"krate":0,"index":12715},{"krate":0,"index":12716},{"krate":0,"index":12717}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74183,"byte_end":74270,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74279,"byte_end":74340,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74349,"byte_end":74359,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12706},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75971,"byte_end":75974,"line_start":85,"line_end":85,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M2x6::m11","value":"N","parent":{"krate":0,"index":12704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12707},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":75976,"byte_end":75979,"line_start":85,"line_end":85,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M2x6::m21","value":"N","parent":{"krate":0,"index":12704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12708},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76000,"byte_end":76003,"line_start":86,"line_end":86,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M2x6::m12","value":"N","parent":{"krate":0,"index":12704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12709},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76005,"byte_end":76008,"line_start":86,"line_end":86,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M2x6::m22","value":"N","parent":{"krate":0,"index":12704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12710},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76029,"byte_end":76032,"line_start":87,"line_end":87,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M2x6::m13","value":"N","parent":{"krate":0,"index":12704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12711},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76034,"byte_end":76037,"line_start":87,"line_end":87,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M2x6::m23","value":"N","parent":{"krate":0,"index":12704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12712},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76058,"byte_end":76061,"line_start":88,"line_end":88,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M2x6::m14","value":"N","parent":{"krate":0,"index":12704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12713},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76063,"byte_end":76066,"line_start":88,"line_end":88,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M2x6::m24","value":"N","parent":{"krate":0,"index":12704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12714},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76087,"byte_end":76090,"line_start":89,"line_end":89,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M2x6::m15","value":"N","parent":{"krate":0,"index":12704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12715},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76092,"byte_end":76095,"line_start":89,"line_end":89,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M2x6::m25","value":"N","parent":{"krate":0,"index":12704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12716},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76116,"byte_end":76119,"line_start":90,"line_end":90,"column_start":20,"column_end":23},"name":"m16","qualname":"::base::coordinates::M2x6::m16","value":"N","parent":{"krate":0,"index":12704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12717},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76121,"byte_end":76124,"line_start":90,"line_end":90,"column_start":25,"column_end":28},"name":"m26","qualname":"::base::coordinates::M2x6::m26","value":"N","parent":{"krate":0,"index":12704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12741},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76185,"byte_end":76189,"line_start":95,"line_end":95,"column_start":14,"column_end":18},"name":"M3x2","qualname":"::base::coordinates::M3x2","value":"M3x2 { m11, m21, m31, m12, m22, m32 }","parent":null,"children":[{"krate":0,"index":12743},{"krate":0,"index":12744},{"krate":0,"index":12745},{"krate":0,"index":12746},{"krate":0,"index":12747},{"krate":0,"index":12748}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74183,"byte_end":74270,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74279,"byte_end":74340,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74349,"byte_end":74359,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12743},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76191,"byte_end":76194,"line_start":95,"line_end":95,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M3x2::m11","value":"N","parent":{"krate":0,"index":12741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12744},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76196,"byte_end":76199,"line_start":95,"line_end":95,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M3x2::m21","value":"N","parent":{"krate":0,"index":12741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12745},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76201,"byte_end":76204,"line_start":95,"line_end":95,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M3x2::m31","value":"N","parent":{"krate":0,"index":12741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12746},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76225,"byte_end":76228,"line_start":96,"line_end":96,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M3x2::m12","value":"N","parent":{"krate":0,"index":12741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12747},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76230,"byte_end":76233,"line_start":96,"line_end":96,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M3x2::m22","value":"N","parent":{"krate":0,"index":12741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12748},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76235,"byte_end":76238,"line_start":96,"line_end":96,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M3x2::m32","value":"N","parent":{"krate":0,"index":12741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12772},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76254,"byte_end":76258,"line_start":97,"line_end":97,"column_start":14,"column_end":18},"name":"M3x3","qualname":"::base::coordinates::M3x3","value":"M3x3 { m11, m21, m31, m12, m22, m32, m13, m23, m33 }","parent":null,"children":[{"krate":0,"index":12774},{"krate":0,"index":12775},{"krate":0,"index":12776},{"krate":0,"index":12777},{"krate":0,"index":12778},{"krate":0,"index":12779},{"krate":0,"index":12780},{"krate":0,"index":12781},{"krate":0,"index":12782}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74183,"byte_end":74270,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74279,"byte_end":74340,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74349,"byte_end":74359,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12774},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76260,"byte_end":76263,"line_start":97,"line_end":97,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M3x3::m11","value":"N","parent":{"krate":0,"index":12772},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12775},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76265,"byte_end":76268,"line_start":97,"line_end":97,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M3x3::m21","value":"N","parent":{"krate":0,"index":12772},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12776},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76270,"byte_end":76273,"line_start":97,"line_end":97,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M3x3::m31","value":"N","parent":{"krate":0,"index":12772},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12777},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76294,"byte_end":76297,"line_start":98,"line_end":98,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M3x3::m12","value":"N","parent":{"krate":0,"index":12772},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12778},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76299,"byte_end":76302,"line_start":98,"line_end":98,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M3x3::m22","value":"N","parent":{"krate":0,"index":12772},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12779},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76304,"byte_end":76307,"line_start":98,"line_end":98,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M3x3::m32","value":"N","parent":{"krate":0,"index":12772},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12780},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76328,"byte_end":76331,"line_start":99,"line_end":99,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M3x3::m13","value":"N","parent":{"krate":0,"index":12772},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12781},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76333,"byte_end":76336,"line_start":99,"line_end":99,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M3x3::m23","value":"N","parent":{"krate":0,"index":12772},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12782},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76338,"byte_end":76341,"line_start":99,"line_end":99,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M3x3::m33","value":"N","parent":{"krate":0,"index":12772},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12806},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76357,"byte_end":76361,"line_start":100,"line_end":100,"column_start":14,"column_end":18},"name":"M3x4","qualname":"::base::coordinates::M3x4","value":"M3x4 { m11, m21, m31, m12, m22, m32, m13, m23, m33, m14, m24, m34 }","parent":null,"children":[{"krate":0,"index":12808},{"krate":0,"index":12809},{"krate":0,"index":12810},{"krate":0,"index":12811},{"krate":0,"index":12812},{"krate":0,"index":12813},{"krate":0,"index":12814},{"krate":0,"index":12815},{"krate":0,"index":12816},{"krate":0,"index":12817},{"krate":0,"index":12818},{"krate":0,"index":12819}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74183,"byte_end":74270,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74279,"byte_end":74340,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74349,"byte_end":74359,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12808},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76363,"byte_end":76366,"line_start":100,"line_end":100,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M3x4::m11","value":"N","parent":{"krate":0,"index":12806},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12809},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76368,"byte_end":76371,"line_start":100,"line_end":100,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M3x4::m21","value":"N","parent":{"krate":0,"index":12806},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12810},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76373,"byte_end":76376,"line_start":100,"line_end":100,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M3x4::m31","value":"N","parent":{"krate":0,"index":12806},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12811},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76397,"byte_end":76400,"line_start":101,"line_end":101,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M3x4::m12","value":"N","parent":{"krate":0,"index":12806},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12812},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76402,"byte_end":76405,"line_start":101,"line_end":101,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M3x4::m22","value":"N","parent":{"krate":0,"index":12806},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12813},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76407,"byte_end":76410,"line_start":101,"line_end":101,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M3x4::m32","value":"N","parent":{"krate":0,"index":12806},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12814},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76431,"byte_end":76434,"line_start":102,"line_end":102,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M3x4::m13","value":"N","parent":{"krate":0,"index":12806},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12815},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76436,"byte_end":76439,"line_start":102,"line_end":102,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M3x4::m23","value":"N","parent":{"krate":0,"index":12806},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12816},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76441,"byte_end":76444,"line_start":102,"line_end":102,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M3x4::m33","value":"N","parent":{"krate":0,"index":12806},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12817},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76465,"byte_end":76468,"line_start":103,"line_end":103,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M3x4::m14","value":"N","parent":{"krate":0,"index":12806},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12818},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76470,"byte_end":76473,"line_start":103,"line_end":103,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M3x4::m24","value":"N","parent":{"krate":0,"index":12806},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12819},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76475,"byte_end":76478,"line_start":103,"line_end":103,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M3x4::m34","value":"N","parent":{"krate":0,"index":12806},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12843},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76494,"byte_end":76498,"line_start":104,"line_end":104,"column_start":14,"column_end":18},"name":"M3x5","qualname":"::base::coordinates::M3x5","value":"M3x5 { m11, m21, m31, m12, m22, m32, m13, m23, m33, m14, m24, m34, m15, m25, m35 }","parent":null,"children":[{"krate":0,"index":12845},{"krate":0,"index":12846},{"krate":0,"index":12847},{"krate":0,"index":12848},{"krate":0,"index":12849},{"krate":0,"index":12850},{"krate":0,"index":12851},{"krate":0,"index":12852},{"krate":0,"index":12853},{"krate":0,"index":12854},{"krate":0,"index":12855},{"krate":0,"index":12856},{"krate":0,"index":12857},{"krate":0,"index":12858},{"krate":0,"index":12859}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74183,"byte_end":74270,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74279,"byte_end":74340,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74349,"byte_end":74359,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12845},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76500,"byte_end":76503,"line_start":104,"line_end":104,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M3x5::m11","value":"N","parent":{"krate":0,"index":12843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12846},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76505,"byte_end":76508,"line_start":104,"line_end":104,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M3x5::m21","value":"N","parent":{"krate":0,"index":12843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12847},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76510,"byte_end":76513,"line_start":104,"line_end":104,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M3x5::m31","value":"N","parent":{"krate":0,"index":12843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12848},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76534,"byte_end":76537,"line_start":105,"line_end":105,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M3x5::m12","value":"N","parent":{"krate":0,"index":12843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12849},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76539,"byte_end":76542,"line_start":105,"line_end":105,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M3x5::m22","value":"N","parent":{"krate":0,"index":12843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12850},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76544,"byte_end":76547,"line_start":105,"line_end":105,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M3x5::m32","value":"N","parent":{"krate":0,"index":12843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12851},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76568,"byte_end":76571,"line_start":106,"line_end":106,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M3x5::m13","value":"N","parent":{"krate":0,"index":12843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12852},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76573,"byte_end":76576,"line_start":106,"line_end":106,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M3x5::m23","value":"N","parent":{"krate":0,"index":12843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12853},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76578,"byte_end":76581,"line_start":106,"line_end":106,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M3x5::m33","value":"N","parent":{"krate":0,"index":12843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12854},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76602,"byte_end":76605,"line_start":107,"line_end":107,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M3x5::m14","value":"N","parent":{"krate":0,"index":12843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12855},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76607,"byte_end":76610,"line_start":107,"line_end":107,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M3x5::m24","value":"N","parent":{"krate":0,"index":12843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12856},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76612,"byte_end":76615,"line_start":107,"line_end":107,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M3x5::m34","value":"N","parent":{"krate":0,"index":12843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12857},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76636,"byte_end":76639,"line_start":108,"line_end":108,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M3x5::m15","value":"N","parent":{"krate":0,"index":12843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12858},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76641,"byte_end":76644,"line_start":108,"line_end":108,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M3x5::m25","value":"N","parent":{"krate":0,"index":12843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12859},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76646,"byte_end":76649,"line_start":108,"line_end":108,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M3x5::m35","value":"N","parent":{"krate":0,"index":12843},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12883},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76665,"byte_end":76669,"line_start":109,"line_end":109,"column_start":14,"column_end":18},"name":"M3x6","qualname":"::base::coordinates::M3x6","value":"M3x6 { m11, m21, m31, m12, m22, m32, m13, m23, m33, m14, m24, m34, m15, m25, m35, m16, m26, m36 }","parent":null,"children":[{"krate":0,"index":12885},{"krate":0,"index":12886},{"krate":0,"index":12887},{"krate":0,"index":12888},{"krate":0,"index":12889},{"krate":0,"index":12890},{"krate":0,"index":12891},{"krate":0,"index":12892},{"krate":0,"index":12893},{"krate":0,"index":12894},{"krate":0,"index":12895},{"krate":0,"index":12896},{"krate":0,"index":12897},{"krate":0,"index":12898},{"krate":0,"index":12899},{"krate":0,"index":12900},{"krate":0,"index":12901},{"krate":0,"index":12902}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74183,"byte_end":74270,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74279,"byte_end":74340,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74349,"byte_end":74359,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12885},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76671,"byte_end":76674,"line_start":109,"line_end":109,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M3x6::m11","value":"N","parent":{"krate":0,"index":12883},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12886},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76676,"byte_end":76679,"line_start":109,"line_end":109,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M3x6::m21","value":"N","parent":{"krate":0,"index":12883},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12887},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76681,"byte_end":76684,"line_start":109,"line_end":109,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M3x6::m31","value":"N","parent":{"krate":0,"index":12883},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12888},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76705,"byte_end":76708,"line_start":110,"line_end":110,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M3x6::m12","value":"N","parent":{"krate":0,"index":12883},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12889},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76710,"byte_end":76713,"line_start":110,"line_end":110,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M3x6::m22","value":"N","parent":{"krate":0,"index":12883},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12890},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76715,"byte_end":76718,"line_start":110,"line_end":110,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M3x6::m32","value":"N","parent":{"krate":0,"index":12883},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12891},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76739,"byte_end":76742,"line_start":111,"line_end":111,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M3x6::m13","value":"N","parent":{"krate":0,"index":12883},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12892},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76744,"byte_end":76747,"line_start":111,"line_end":111,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M3x6::m23","value":"N","parent":{"krate":0,"index":12883},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12893},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76749,"byte_end":76752,"line_start":111,"line_end":111,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M3x6::m33","value":"N","parent":{"krate":0,"index":12883},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12894},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76773,"byte_end":76776,"line_start":112,"line_end":112,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M3x6::m14","value":"N","parent":{"krate":0,"index":12883},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12895},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76778,"byte_end":76781,"line_start":112,"line_end":112,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M3x6::m24","value":"N","parent":{"krate":0,"index":12883},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12896},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76783,"byte_end":76786,"line_start":112,"line_end":112,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M3x6::m34","value":"N","parent":{"krate":0,"index":12883},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12897},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76807,"byte_end":76810,"line_start":113,"line_end":113,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M3x6::m15","value":"N","parent":{"krate":0,"index":12883},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12898},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76812,"byte_end":76815,"line_start":113,"line_end":113,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M3x6::m25","value":"N","parent":{"krate":0,"index":12883},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12899},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76817,"byte_end":76820,"line_start":113,"line_end":113,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M3x6::m35","value":"N","parent":{"krate":0,"index":12883},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12900},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76841,"byte_end":76844,"line_start":114,"line_end":114,"column_start":20,"column_end":23},"name":"m16","qualname":"::base::coordinates::M3x6::m16","value":"N","parent":{"krate":0,"index":12883},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12901},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76846,"byte_end":76849,"line_start":114,"line_end":114,"column_start":25,"column_end":28},"name":"m26","qualname":"::base::coordinates::M3x6::m26","value":"N","parent":{"krate":0,"index":12883},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12902},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76851,"byte_end":76854,"line_start":114,"line_end":114,"column_start":30,"column_end":33},"name":"m36","qualname":"::base::coordinates::M3x6::m36","value":"N","parent":{"krate":0,"index":12883},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12926},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76915,"byte_end":76919,"line_start":119,"line_end":119,"column_start":14,"column_end":18},"name":"M4x2","qualname":"::base::coordinates::M4x2","value":"M4x2 { m11, m21, m31, m41, m12, m22, m32, m42 }","parent":null,"children":[{"krate":0,"index":12928},{"krate":0,"index":12929},{"krate":0,"index":12930},{"krate":0,"index":12931},{"krate":0,"index":12932},{"krate":0,"index":12933},{"krate":0,"index":12934},{"krate":0,"index":12935}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74183,"byte_end":74270,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74279,"byte_end":74340,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74349,"byte_end":74359,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12928},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76921,"byte_end":76924,"line_start":119,"line_end":119,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M4x2::m11","value":"N","parent":{"krate":0,"index":12926},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12929},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76926,"byte_end":76929,"line_start":119,"line_end":119,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M4x2::m21","value":"N","parent":{"krate":0,"index":12926},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12930},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76931,"byte_end":76934,"line_start":119,"line_end":119,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M4x2::m31","value":"N","parent":{"krate":0,"index":12926},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12931},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76936,"byte_end":76939,"line_start":119,"line_end":119,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M4x2::m41","value":"N","parent":{"krate":0,"index":12926},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12932},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76960,"byte_end":76963,"line_start":120,"line_end":120,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M4x2::m12","value":"N","parent":{"krate":0,"index":12926},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12933},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76965,"byte_end":76968,"line_start":120,"line_end":120,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M4x2::m22","value":"N","parent":{"krate":0,"index":12926},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12934},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76970,"byte_end":76973,"line_start":120,"line_end":120,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M4x2::m32","value":"N","parent":{"krate":0,"index":12926},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12935},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76975,"byte_end":76978,"line_start":120,"line_end":120,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M4x2::m42","value":"N","parent":{"krate":0,"index":12926},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12959},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":76994,"byte_end":76998,"line_start":121,"line_end":121,"column_start":14,"column_end":18},"name":"M4x3","qualname":"::base::coordinates::M4x3","value":"M4x3 { m11, m21, m31, m41, m12, m22, m32, m42, m13, m23, m33, m43 }","parent":null,"children":[{"krate":0,"index":12961},{"krate":0,"index":12962},{"krate":0,"index":12963},{"krate":0,"index":12964},{"krate":0,"index":12965},{"krate":0,"index":12966},{"krate":0,"index":12967},{"krate":0,"index":12968},{"krate":0,"index":12969},{"krate":0,"index":12970},{"krate":0,"index":12971},{"krate":0,"index":12972}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74183,"byte_end":74270,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74279,"byte_end":74340,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74349,"byte_end":74359,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12961},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77000,"byte_end":77003,"line_start":121,"line_end":121,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M4x3::m11","value":"N","parent":{"krate":0,"index":12959},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12962},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77005,"byte_end":77008,"line_start":121,"line_end":121,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M4x3::m21","value":"N","parent":{"krate":0,"index":12959},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12963},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77010,"byte_end":77013,"line_start":121,"line_end":121,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M4x3::m31","value":"N","parent":{"krate":0,"index":12959},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12964},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77015,"byte_end":77018,"line_start":121,"line_end":121,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M4x3::m41","value":"N","parent":{"krate":0,"index":12959},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12965},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77039,"byte_end":77042,"line_start":122,"line_end":122,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M4x3::m12","value":"N","parent":{"krate":0,"index":12959},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12966},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77044,"byte_end":77047,"line_start":122,"line_end":122,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M4x3::m22","value":"N","parent":{"krate":0,"index":12959},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12967},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77049,"byte_end":77052,"line_start":122,"line_end":122,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M4x3::m32","value":"N","parent":{"krate":0,"index":12959},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12968},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77054,"byte_end":77057,"line_start":122,"line_end":122,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M4x3::m42","value":"N","parent":{"krate":0,"index":12959},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12969},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77078,"byte_end":77081,"line_start":123,"line_end":123,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M4x3::m13","value":"N","parent":{"krate":0,"index":12959},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12970},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77083,"byte_end":77086,"line_start":123,"line_end":123,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M4x3::m23","value":"N","parent":{"krate":0,"index":12959},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12971},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77088,"byte_end":77091,"line_start":123,"line_end":123,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M4x3::m33","value":"N","parent":{"krate":0,"index":12959},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12972},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77093,"byte_end":77096,"line_start":123,"line_end":123,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M4x3::m43","value":"N","parent":{"krate":0,"index":12959},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12996},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77112,"byte_end":77116,"line_start":124,"line_end":124,"column_start":14,"column_end":18},"name":"M4x4","qualname":"::base::coordinates::M4x4","value":"M4x4 { m11, m21, m31, m41, m12, m22, m32, m42, m13, m23, m33, m43, m14, m24, m34, m44 }","parent":null,"children":[{"krate":0,"index":12998},{"krate":0,"index":12999},{"krate":0,"index":13000},{"krate":0,"index":13001},{"krate":0,"index":13002},{"krate":0,"index":13003},{"krate":0,"index":13004},{"krate":0,"index":13005},{"krate":0,"index":13006},{"krate":0,"index":13007},{"krate":0,"index":13008},{"krate":0,"index":13009},{"krate":0,"index":13010},{"krate":0,"index":13011},{"krate":0,"index":13012},{"krate":0,"index":13013}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74183,"byte_end":74270,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74279,"byte_end":74340,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74349,"byte_end":74359,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12998},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77118,"byte_end":77121,"line_start":124,"line_end":124,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M4x4::m11","value":"N","parent":{"krate":0,"index":12996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12999},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77123,"byte_end":77126,"line_start":124,"line_end":124,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M4x4::m21","value":"N","parent":{"krate":0,"index":12996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13000},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77128,"byte_end":77131,"line_start":124,"line_end":124,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M4x4::m31","value":"N","parent":{"krate":0,"index":12996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13001},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77133,"byte_end":77136,"line_start":124,"line_end":124,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M4x4::m41","value":"N","parent":{"krate":0,"index":12996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13002},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77157,"byte_end":77160,"line_start":125,"line_end":125,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M4x4::m12","value":"N","parent":{"krate":0,"index":12996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13003},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77162,"byte_end":77165,"line_start":125,"line_end":125,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M4x4::m22","value":"N","parent":{"krate":0,"index":12996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13004},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77167,"byte_end":77170,"line_start":125,"line_end":125,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M4x4::m32","value":"N","parent":{"krate":0,"index":12996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13005},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77172,"byte_end":77175,"line_start":125,"line_end":125,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M4x4::m42","value":"N","parent":{"krate":0,"index":12996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13006},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77196,"byte_end":77199,"line_start":126,"line_end":126,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M4x4::m13","value":"N","parent":{"krate":0,"index":12996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13007},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77201,"byte_end":77204,"line_start":126,"line_end":126,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M4x4::m23","value":"N","parent":{"krate":0,"index":12996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13008},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77206,"byte_end":77209,"line_start":126,"line_end":126,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M4x4::m33","value":"N","parent":{"krate":0,"index":12996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13009},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77211,"byte_end":77214,"line_start":126,"line_end":126,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M4x4::m43","value":"N","parent":{"krate":0,"index":12996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13010},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77235,"byte_end":77238,"line_start":127,"line_end":127,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M4x4::m14","value":"N","parent":{"krate":0,"index":12996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13011},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77240,"byte_end":77243,"line_start":127,"line_end":127,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M4x4::m24","value":"N","parent":{"krate":0,"index":12996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13012},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77245,"byte_end":77248,"line_start":127,"line_end":127,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M4x4::m34","value":"N","parent":{"krate":0,"index":12996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13013},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77250,"byte_end":77253,"line_start":127,"line_end":127,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M4x4::m44","value":"N","parent":{"krate":0,"index":12996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13037},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77269,"byte_end":77273,"line_start":128,"line_end":128,"column_start":14,"column_end":18},"name":"M4x5","qualname":"::base::coordinates::M4x5","value":"M4x5 { m11, m21, m31, m41, m12, m22, m32, m42, m13, m23, m33, m43, m14, m24, m34, m44, m15, m25, m35, m45 }","parent":null,"children":[{"krate":0,"index":13039},{"krate":0,"index":13040},{"krate":0,"index":13041},{"krate":0,"index":13042},{"krate":0,"index":13043},{"krate":0,"index":13044},{"krate":0,"index":13045},{"krate":0,"index":13046},{"krate":0,"index":13047},{"krate":0,"index":13048},{"krate":0,"index":13049},{"krate":0,"index":13050},{"krate":0,"index":13051},{"krate":0,"index":13052},{"krate":0,"index":13053},{"krate":0,"index":13054},{"krate":0,"index":13055},{"krate":0,"index":13056},{"krate":0,"index":13057},{"krate":0,"index":13058}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74183,"byte_end":74270,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74279,"byte_end":74340,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74349,"byte_end":74359,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":13039},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77275,"byte_end":77278,"line_start":128,"line_end":128,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M4x5::m11","value":"N","parent":{"krate":0,"index":13037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13040},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77280,"byte_end":77283,"line_start":128,"line_end":128,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M4x5::m21","value":"N","parent":{"krate":0,"index":13037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13041},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77285,"byte_end":77288,"line_start":128,"line_end":128,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M4x5::m31","value":"N","parent":{"krate":0,"index":13037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13042},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77290,"byte_end":77293,"line_start":128,"line_end":128,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M4x5::m41","value":"N","parent":{"krate":0,"index":13037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13043},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77314,"byte_end":77317,"line_start":129,"line_end":129,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M4x5::m12","value":"N","parent":{"krate":0,"index":13037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13044},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77319,"byte_end":77322,"line_start":129,"line_end":129,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M4x5::m22","value":"N","parent":{"krate":0,"index":13037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13045},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77324,"byte_end":77327,"line_start":129,"line_end":129,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M4x5::m32","value":"N","parent":{"krate":0,"index":13037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13046},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77329,"byte_end":77332,"line_start":129,"line_end":129,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M4x5::m42","value":"N","parent":{"krate":0,"index":13037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13047},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77353,"byte_end":77356,"line_start":130,"line_end":130,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M4x5::m13","value":"N","parent":{"krate":0,"index":13037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13048},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77358,"byte_end":77361,"line_start":130,"line_end":130,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M4x5::m23","value":"N","parent":{"krate":0,"index":13037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13049},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77363,"byte_end":77366,"line_start":130,"line_end":130,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M4x5::m33","value":"N","parent":{"krate":0,"index":13037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13050},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77368,"byte_end":77371,"line_start":130,"line_end":130,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M4x5::m43","value":"N","parent":{"krate":0,"index":13037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13051},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77392,"byte_end":77395,"line_start":131,"line_end":131,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M4x5::m14","value":"N","parent":{"krate":0,"index":13037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13052},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77397,"byte_end":77400,"line_start":131,"line_end":131,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M4x5::m24","value":"N","parent":{"krate":0,"index":13037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13053},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77402,"byte_end":77405,"line_start":131,"line_end":131,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M4x5::m34","value":"N","parent":{"krate":0,"index":13037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13054},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77407,"byte_end":77410,"line_start":131,"line_end":131,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M4x5::m44","value":"N","parent":{"krate":0,"index":13037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13055},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77431,"byte_end":77434,"line_start":132,"line_end":132,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M4x5::m15","value":"N","parent":{"krate":0,"index":13037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13056},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77436,"byte_end":77439,"line_start":132,"line_end":132,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M4x5::m25","value":"N","parent":{"krate":0,"index":13037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13057},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77441,"byte_end":77444,"line_start":132,"line_end":132,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M4x5::m35","value":"N","parent":{"krate":0,"index":13037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13058},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77446,"byte_end":77449,"line_start":132,"line_end":132,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M4x5::m45","value":"N","parent":{"krate":0,"index":13037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13082},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77465,"byte_end":77469,"line_start":133,"line_end":133,"column_start":14,"column_end":18},"name":"M4x6","qualname":"::base::coordinates::M4x6","value":"M4x6 { m11, m21, m31, m41, m12, m22, m32, m42, m13, m23, m33, m43, m14, m24, m34, m44, m15, m25, m35, m45, m16, m26, m36, m46 }","parent":null,"children":[{"krate":0,"index":13084},{"krate":0,"index":13085},{"krate":0,"index":13086},{"krate":0,"index":13087},{"krate":0,"index":13088},{"krate":0,"index":13089},{"krate":0,"index":13090},{"krate":0,"index":13091},{"krate":0,"index":13092},{"krate":0,"index":13093},{"krate":0,"index":13094},{"krate":0,"index":13095},{"krate":0,"index":13096},{"krate":0,"index":13097},{"krate":0,"index":13098},{"krate":0,"index":13099},{"krate":0,"index":13100},{"krate":0,"index":13101},{"krate":0,"index":13102},{"krate":0,"index":13103},{"krate":0,"index":13104},{"krate":0,"index":13105},{"krate":0,"index":13106},{"krate":0,"index":13107}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74183,"byte_end":74270,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74279,"byte_end":74340,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74349,"byte_end":74359,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":13084},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77471,"byte_end":77474,"line_start":133,"line_end":133,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M4x6::m11","value":"N","parent":{"krate":0,"index":13082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13085},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77476,"byte_end":77479,"line_start":133,"line_end":133,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M4x6::m21","value":"N","parent":{"krate":0,"index":13082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13086},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77481,"byte_end":77484,"line_start":133,"line_end":133,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M4x6::m31","value":"N","parent":{"krate":0,"index":13082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13087},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77486,"byte_end":77489,"line_start":133,"line_end":133,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M4x6::m41","value":"N","parent":{"krate":0,"index":13082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13088},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77510,"byte_end":77513,"line_start":134,"line_end":134,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M4x6::m12","value":"N","parent":{"krate":0,"index":13082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13089},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77515,"byte_end":77518,"line_start":134,"line_end":134,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M4x6::m22","value":"N","parent":{"krate":0,"index":13082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13090},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77520,"byte_end":77523,"line_start":134,"line_end":134,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M4x6::m32","value":"N","parent":{"krate":0,"index":13082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13091},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77525,"byte_end":77528,"line_start":134,"line_end":134,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M4x6::m42","value":"N","parent":{"krate":0,"index":13082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13092},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77549,"byte_end":77552,"line_start":135,"line_end":135,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M4x6::m13","value":"N","parent":{"krate":0,"index":13082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13093},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77554,"byte_end":77557,"line_start":135,"line_end":135,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M4x6::m23","value":"N","parent":{"krate":0,"index":13082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13094},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77559,"byte_end":77562,"line_start":135,"line_end":135,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M4x6::m33","value":"N","parent":{"krate":0,"index":13082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13095},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77564,"byte_end":77567,"line_start":135,"line_end":135,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M4x6::m43","value":"N","parent":{"krate":0,"index":13082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13096},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77588,"byte_end":77591,"line_start":136,"line_end":136,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M4x6::m14","value":"N","parent":{"krate":0,"index":13082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13097},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77593,"byte_end":77596,"line_start":136,"line_end":136,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M4x6::m24","value":"N","parent":{"krate":0,"index":13082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13098},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77598,"byte_end":77601,"line_start":136,"line_end":136,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M4x6::m34","value":"N","parent":{"krate":0,"index":13082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13099},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77603,"byte_end":77606,"line_start":136,"line_end":136,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M4x6::m44","value":"N","parent":{"krate":0,"index":13082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13100},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77627,"byte_end":77630,"line_start":137,"line_end":137,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M4x6::m15","value":"N","parent":{"krate":0,"index":13082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13101},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77632,"byte_end":77635,"line_start":137,"line_end":137,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M4x6::m25","value":"N","parent":{"krate":0,"index":13082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13102},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77637,"byte_end":77640,"line_start":137,"line_end":137,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M4x6::m35","value":"N","parent":{"krate":0,"index":13082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13103},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77642,"byte_end":77645,"line_start":137,"line_end":137,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M4x6::m45","value":"N","parent":{"krate":0,"index":13082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13104},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77666,"byte_end":77669,"line_start":138,"line_end":138,"column_start":20,"column_end":23},"name":"m16","qualname":"::base::coordinates::M4x6::m16","value":"N","parent":{"krate":0,"index":13082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13105},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77671,"byte_end":77674,"line_start":138,"line_end":138,"column_start":25,"column_end":28},"name":"m26","qualname":"::base::coordinates::M4x6::m26","value":"N","parent":{"krate":0,"index":13082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13106},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77676,"byte_end":77679,"line_start":138,"line_end":138,"column_start":30,"column_end":33},"name":"m36","qualname":"::base::coordinates::M4x6::m36","value":"N","parent":{"krate":0,"index":13082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13107},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77681,"byte_end":77684,"line_start":138,"line_end":138,"column_start":35,"column_end":38},"name":"m46","qualname":"::base::coordinates::M4x6::m46","value":"N","parent":{"krate":0,"index":13082},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13131},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77745,"byte_end":77749,"line_start":143,"line_end":143,"column_start":14,"column_end":18},"name":"M5x2","qualname":"::base::coordinates::M5x2","value":"M5x2 { m11, m21, m31, m41, m51, m12, m22, m32, m42, m52 }","parent":null,"children":[{"krate":0,"index":13133},{"krate":0,"index":13134},{"krate":0,"index":13135},{"krate":0,"index":13136},{"krate":0,"index":13137},{"krate":0,"index":13138},{"krate":0,"index":13139},{"krate":0,"index":13140},{"krate":0,"index":13141},{"krate":0,"index":13142}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74183,"byte_end":74270,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74279,"byte_end":74340,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74349,"byte_end":74359,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":13133},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77751,"byte_end":77754,"line_start":143,"line_end":143,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M5x2::m11","value":"N","parent":{"krate":0,"index":13131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13134},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77756,"byte_end":77759,"line_start":143,"line_end":143,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M5x2::m21","value":"N","parent":{"krate":0,"index":13131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13135},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77761,"byte_end":77764,"line_start":143,"line_end":143,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M5x2::m31","value":"N","parent":{"krate":0,"index":13131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13136},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77766,"byte_end":77769,"line_start":143,"line_end":143,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M5x2::m41","value":"N","parent":{"krate":0,"index":13131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13137},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77771,"byte_end":77774,"line_start":143,"line_end":143,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M5x2::m51","value":"N","parent":{"krate":0,"index":13131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13138},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77795,"byte_end":77798,"line_start":144,"line_end":144,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M5x2::m12","value":"N","parent":{"krate":0,"index":13131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13139},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77800,"byte_end":77803,"line_start":144,"line_end":144,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M5x2::m22","value":"N","parent":{"krate":0,"index":13131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13140},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77805,"byte_end":77808,"line_start":144,"line_end":144,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M5x2::m32","value":"N","parent":{"krate":0,"index":13131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13141},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77810,"byte_end":77813,"line_start":144,"line_end":144,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M5x2::m42","value":"N","parent":{"krate":0,"index":13131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13142},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77815,"byte_end":77818,"line_start":144,"line_end":144,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M5x2::m52","value":"N","parent":{"krate":0,"index":13131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13166},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77834,"byte_end":77838,"line_start":145,"line_end":145,"column_start":14,"column_end":18},"name":"M5x3","qualname":"::base::coordinates::M5x3","value":"M5x3 { m11, m21, m31, m41, m51, m12, m22, m32, m42, m52, m13, m23, m33, m43, m53 }","parent":null,"children":[{"krate":0,"index":13168},{"krate":0,"index":13169},{"krate":0,"index":13170},{"krate":0,"index":13171},{"krate":0,"index":13172},{"krate":0,"index":13173},{"krate":0,"index":13174},{"krate":0,"index":13175},{"krate":0,"index":13176},{"krate":0,"index":13177},{"krate":0,"index":13178},{"krate":0,"index":13179},{"krate":0,"index":13180},{"krate":0,"index":13181},{"krate":0,"index":13182}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74183,"byte_end":74270,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74279,"byte_end":74340,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74349,"byte_end":74359,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":13168},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77840,"byte_end":77843,"line_start":145,"line_end":145,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M5x3::m11","value":"N","parent":{"krate":0,"index":13166},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13169},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77845,"byte_end":77848,"line_start":145,"line_end":145,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M5x3::m21","value":"N","parent":{"krate":0,"index":13166},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13170},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77850,"byte_end":77853,"line_start":145,"line_end":145,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M5x3::m31","value":"N","parent":{"krate":0,"index":13166},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13171},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77855,"byte_end":77858,"line_start":145,"line_end":145,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M5x3::m41","value":"N","parent":{"krate":0,"index":13166},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13172},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77860,"byte_end":77863,"line_start":145,"line_end":145,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M5x3::m51","value":"N","parent":{"krate":0,"index":13166},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13173},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77884,"byte_end":77887,"line_start":146,"line_end":146,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M5x3::m12","value":"N","parent":{"krate":0,"index":13166},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13174},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77889,"byte_end":77892,"line_start":146,"line_end":146,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M5x3::m22","value":"N","parent":{"krate":0,"index":13166},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13175},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77894,"byte_end":77897,"line_start":146,"line_end":146,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M5x3::m32","value":"N","parent":{"krate":0,"index":13166},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13176},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77899,"byte_end":77902,"line_start":146,"line_end":146,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M5x3::m42","value":"N","parent":{"krate":0,"index":13166},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13177},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77904,"byte_end":77907,"line_start":146,"line_end":146,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M5x3::m52","value":"N","parent":{"krate":0,"index":13166},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13178},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77928,"byte_end":77931,"line_start":147,"line_end":147,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M5x3::m13","value":"N","parent":{"krate":0,"index":13166},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13179},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77933,"byte_end":77936,"line_start":147,"line_end":147,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M5x3::m23","value":"N","parent":{"krate":0,"index":13166},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13180},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77938,"byte_end":77941,"line_start":147,"line_end":147,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M5x3::m33","value":"N","parent":{"krate":0,"index":13166},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13181},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77943,"byte_end":77946,"line_start":147,"line_end":147,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M5x3::m43","value":"N","parent":{"krate":0,"index":13166},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13182},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77948,"byte_end":77951,"line_start":147,"line_end":147,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M5x3::m53","value":"N","parent":{"krate":0,"index":13166},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13206},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77967,"byte_end":77971,"line_start":148,"line_end":148,"column_start":14,"column_end":18},"name":"M5x4","qualname":"::base::coordinates::M5x4","value":"M5x4 { m11, m21, m31, m41, m51, m12, m22, m32, m42, m52, m13, m23, m33, m43, m53, m14, m24, m34, m44, m54 }","parent":null,"children":[{"krate":0,"index":13208},{"krate":0,"index":13209},{"krate":0,"index":13210},{"krate":0,"index":13211},{"krate":0,"index":13212},{"krate":0,"index":13213},{"krate":0,"index":13214},{"krate":0,"index":13215},{"krate":0,"index":13216},{"krate":0,"index":13217},{"krate":0,"index":13218},{"krate":0,"index":13219},{"krate":0,"index":13220},{"krate":0,"index":13221},{"krate":0,"index":13222},{"krate":0,"index":13223},{"krate":0,"index":13224},{"krate":0,"index":13225},{"krate":0,"index":13226},{"krate":0,"index":13227}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74183,"byte_end":74270,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74279,"byte_end":74340,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74349,"byte_end":74359,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":13208},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77973,"byte_end":77976,"line_start":148,"line_end":148,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M5x4::m11","value":"N","parent":{"krate":0,"index":13206},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13209},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77978,"byte_end":77981,"line_start":148,"line_end":148,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M5x4::m21","value":"N","parent":{"krate":0,"index":13206},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13210},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77983,"byte_end":77986,"line_start":148,"line_end":148,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M5x4::m31","value":"N","parent":{"krate":0,"index":13206},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13211},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77988,"byte_end":77991,"line_start":148,"line_end":148,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M5x4::m41","value":"N","parent":{"krate":0,"index":13206},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13212},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":77993,"byte_end":77996,"line_start":148,"line_end":148,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M5x4::m51","value":"N","parent":{"krate":0,"index":13206},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13213},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78017,"byte_end":78020,"line_start":149,"line_end":149,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M5x4::m12","value":"N","parent":{"krate":0,"index":13206},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13214},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78022,"byte_end":78025,"line_start":149,"line_end":149,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M5x4::m22","value":"N","parent":{"krate":0,"index":13206},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13215},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78027,"byte_end":78030,"line_start":149,"line_end":149,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M5x4::m32","value":"N","parent":{"krate":0,"index":13206},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13216},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78032,"byte_end":78035,"line_start":149,"line_end":149,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M5x4::m42","value":"N","parent":{"krate":0,"index":13206},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13217},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78037,"byte_end":78040,"line_start":149,"line_end":149,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M5x4::m52","value":"N","parent":{"krate":0,"index":13206},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13218},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78061,"byte_end":78064,"line_start":150,"line_end":150,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M5x4::m13","value":"N","parent":{"krate":0,"index":13206},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13219},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78066,"byte_end":78069,"line_start":150,"line_end":150,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M5x4::m23","value":"N","parent":{"krate":0,"index":13206},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13220},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78071,"byte_end":78074,"line_start":150,"line_end":150,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M5x4::m33","value":"N","parent":{"krate":0,"index":13206},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13221},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78076,"byte_end":78079,"line_start":150,"line_end":150,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M5x4::m43","value":"N","parent":{"krate":0,"index":13206},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13222},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78081,"byte_end":78084,"line_start":150,"line_end":150,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M5x4::m53","value":"N","parent":{"krate":0,"index":13206},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13223},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78105,"byte_end":78108,"line_start":151,"line_end":151,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M5x4::m14","value":"N","parent":{"krate":0,"index":13206},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13224},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78110,"byte_end":78113,"line_start":151,"line_end":151,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M5x4::m24","value":"N","parent":{"krate":0,"index":13206},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13225},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78115,"byte_end":78118,"line_start":151,"line_end":151,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M5x4::m34","value":"N","parent":{"krate":0,"index":13206},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13226},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78120,"byte_end":78123,"line_start":151,"line_end":151,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M5x4::m44","value":"N","parent":{"krate":0,"index":13206},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13227},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78125,"byte_end":78128,"line_start":151,"line_end":151,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M5x4::m54","value":"N","parent":{"krate":0,"index":13206},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13251},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78144,"byte_end":78148,"line_start":152,"line_end":152,"column_start":14,"column_end":18},"name":"M5x5","qualname":"::base::coordinates::M5x5","value":"M5x5 { m11, m21, m31, m41, m51, m12, m22, m32, m42, m52, m13, m23, m33, m43, m53, m14, m24, m34, m44, m54, m15, m25, m35, m45, m55 }","parent":null,"children":[{"krate":0,"index":13253},{"krate":0,"index":13254},{"krate":0,"index":13255},{"krate":0,"index":13256},{"krate":0,"index":13257},{"krate":0,"index":13258},{"krate":0,"index":13259},{"krate":0,"index":13260},{"krate":0,"index":13261},{"krate":0,"index":13262},{"krate":0,"index":13263},{"krate":0,"index":13264},{"krate":0,"index":13265},{"krate":0,"index":13266},{"krate":0,"index":13267},{"krate":0,"index":13268},{"krate":0,"index":13269},{"krate":0,"index":13270},{"krate":0,"index":13271},{"krate":0,"index":13272},{"krate":0,"index":13273},{"krate":0,"index":13274},{"krate":0,"index":13275},{"krate":0,"index":13276},{"krate":0,"index":13277}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74183,"byte_end":74270,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74279,"byte_end":74340,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74349,"byte_end":74359,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":13253},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78150,"byte_end":78153,"line_start":152,"line_end":152,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M5x5::m11","value":"N","parent":{"krate":0,"index":13251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13254},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78155,"byte_end":78158,"line_start":152,"line_end":152,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M5x5::m21","value":"N","parent":{"krate":0,"index":13251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13255},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78160,"byte_end":78163,"line_start":152,"line_end":152,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M5x5::m31","value":"N","parent":{"krate":0,"index":13251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13256},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78165,"byte_end":78168,"line_start":152,"line_end":152,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M5x5::m41","value":"N","parent":{"krate":0,"index":13251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13257},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78170,"byte_end":78173,"line_start":152,"line_end":152,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M5x5::m51","value":"N","parent":{"krate":0,"index":13251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13258},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78194,"byte_end":78197,"line_start":153,"line_end":153,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M5x5::m12","value":"N","parent":{"krate":0,"index":13251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13259},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78199,"byte_end":78202,"line_start":153,"line_end":153,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M5x5::m22","value":"N","parent":{"krate":0,"index":13251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13260},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78204,"byte_end":78207,"line_start":153,"line_end":153,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M5x5::m32","value":"N","parent":{"krate":0,"index":13251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13261},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78209,"byte_end":78212,"line_start":153,"line_end":153,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M5x5::m42","value":"N","parent":{"krate":0,"index":13251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13262},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78214,"byte_end":78217,"line_start":153,"line_end":153,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M5x5::m52","value":"N","parent":{"krate":0,"index":13251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13263},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78238,"byte_end":78241,"line_start":154,"line_end":154,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M5x5::m13","value":"N","parent":{"krate":0,"index":13251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13264},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78243,"byte_end":78246,"line_start":154,"line_end":154,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M5x5::m23","value":"N","parent":{"krate":0,"index":13251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13265},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78248,"byte_end":78251,"line_start":154,"line_end":154,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M5x5::m33","value":"N","parent":{"krate":0,"index":13251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13266},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78253,"byte_end":78256,"line_start":154,"line_end":154,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M5x5::m43","value":"N","parent":{"krate":0,"index":13251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13267},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78258,"byte_end":78261,"line_start":154,"line_end":154,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M5x5::m53","value":"N","parent":{"krate":0,"index":13251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13268},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78282,"byte_end":78285,"line_start":155,"line_end":155,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M5x5::m14","value":"N","parent":{"krate":0,"index":13251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13269},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78287,"byte_end":78290,"line_start":155,"line_end":155,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M5x5::m24","value":"N","parent":{"krate":0,"index":13251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13270},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78292,"byte_end":78295,"line_start":155,"line_end":155,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M5x5::m34","value":"N","parent":{"krate":0,"index":13251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13271},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78297,"byte_end":78300,"line_start":155,"line_end":155,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M5x5::m44","value":"N","parent":{"krate":0,"index":13251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13272},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78302,"byte_end":78305,"line_start":155,"line_end":155,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M5x5::m54","value":"N","parent":{"krate":0,"index":13251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13273},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78326,"byte_end":78329,"line_start":156,"line_end":156,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M5x5::m15","value":"N","parent":{"krate":0,"index":13251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13274},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78331,"byte_end":78334,"line_start":156,"line_end":156,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M5x5::m25","value":"N","parent":{"krate":0,"index":13251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13275},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78336,"byte_end":78339,"line_start":156,"line_end":156,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M5x5::m35","value":"N","parent":{"krate":0,"index":13251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13276},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78341,"byte_end":78344,"line_start":156,"line_end":156,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M5x5::m45","value":"N","parent":{"krate":0,"index":13251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13277},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78346,"byte_end":78349,"line_start":156,"line_end":156,"column_start":40,"column_end":43},"name":"m55","qualname":"::base::coordinates::M5x5::m55","value":"N","parent":{"krate":0,"index":13251},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13301},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78365,"byte_end":78369,"line_start":157,"line_end":157,"column_start":14,"column_end":18},"name":"M5x6","qualname":"::base::coordinates::M5x6","value":"M5x6 { m11, m21, m31, m41, m51, m12, m22, m32, m42, m52, m13, m23, m33, m43, m53, m14, m24, m34, m44, m54, m15, m25, m35, m45, m55, m16, m26, m36, m46, m56 }","parent":null,"children":[{"krate":0,"index":13303},{"krate":0,"index":13304},{"krate":0,"index":13305},{"krate":0,"index":13306},{"krate":0,"index":13307},{"krate":0,"index":13308},{"krate":0,"index":13309},{"krate":0,"index":13310},{"krate":0,"index":13311},{"krate":0,"index":13312},{"krate":0,"index":13313},{"krate":0,"index":13314},{"krate":0,"index":13315},{"krate":0,"index":13316},{"krate":0,"index":13317},{"krate":0,"index":13318},{"krate":0,"index":13319},{"krate":0,"index":13320},{"krate":0,"index":13321},{"krate":0,"index":13322},{"krate":0,"index":13323},{"krate":0,"index":13324},{"krate":0,"index":13325},{"krate":0,"index":13326},{"krate":0,"index":13327},{"krate":0,"index":13328},{"krate":0,"index":13329},{"krate":0,"index":13330},{"krate":0,"index":13331},{"krate":0,"index":13332}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74183,"byte_end":74270,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74279,"byte_end":74340,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74349,"byte_end":74359,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":13303},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78371,"byte_end":78374,"line_start":157,"line_end":157,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M5x6::m11","value":"N","parent":{"krate":0,"index":13301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13304},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78376,"byte_end":78379,"line_start":157,"line_end":157,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M5x6::m21","value":"N","parent":{"krate":0,"index":13301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13305},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78381,"byte_end":78384,"line_start":157,"line_end":157,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M5x6::m31","value":"N","parent":{"krate":0,"index":13301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13306},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78386,"byte_end":78389,"line_start":157,"line_end":157,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M5x6::m41","value":"N","parent":{"krate":0,"index":13301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13307},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78391,"byte_end":78394,"line_start":157,"line_end":157,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M5x6::m51","value":"N","parent":{"krate":0,"index":13301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13308},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78415,"byte_end":78418,"line_start":158,"line_end":158,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M5x6::m12","value":"N","parent":{"krate":0,"index":13301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13309},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78420,"byte_end":78423,"line_start":158,"line_end":158,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M5x6::m22","value":"N","parent":{"krate":0,"index":13301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13310},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78425,"byte_end":78428,"line_start":158,"line_end":158,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M5x6::m32","value":"N","parent":{"krate":0,"index":13301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13311},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78430,"byte_end":78433,"line_start":158,"line_end":158,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M5x6::m42","value":"N","parent":{"krate":0,"index":13301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13312},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78435,"byte_end":78438,"line_start":158,"line_end":158,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M5x6::m52","value":"N","parent":{"krate":0,"index":13301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13313},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78459,"byte_end":78462,"line_start":159,"line_end":159,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M5x6::m13","value":"N","parent":{"krate":0,"index":13301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13314},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78464,"byte_end":78467,"line_start":159,"line_end":159,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M5x6::m23","value":"N","parent":{"krate":0,"index":13301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13315},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78469,"byte_end":78472,"line_start":159,"line_end":159,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M5x6::m33","value":"N","parent":{"krate":0,"index":13301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13316},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78474,"byte_end":78477,"line_start":159,"line_end":159,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M5x6::m43","value":"N","parent":{"krate":0,"index":13301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13317},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78479,"byte_end":78482,"line_start":159,"line_end":159,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M5x6::m53","value":"N","parent":{"krate":0,"index":13301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13318},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78503,"byte_end":78506,"line_start":160,"line_end":160,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M5x6::m14","value":"N","parent":{"krate":0,"index":13301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13319},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78508,"byte_end":78511,"line_start":160,"line_end":160,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M5x6::m24","value":"N","parent":{"krate":0,"index":13301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13320},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78513,"byte_end":78516,"line_start":160,"line_end":160,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M5x6::m34","value":"N","parent":{"krate":0,"index":13301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13321},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78518,"byte_end":78521,"line_start":160,"line_end":160,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M5x6::m44","value":"N","parent":{"krate":0,"index":13301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13322},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78523,"byte_end":78526,"line_start":160,"line_end":160,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M5x6::m54","value":"N","parent":{"krate":0,"index":13301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13323},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78547,"byte_end":78550,"line_start":161,"line_end":161,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M5x6::m15","value":"N","parent":{"krate":0,"index":13301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13324},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78552,"byte_end":78555,"line_start":161,"line_end":161,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M5x6::m25","value":"N","parent":{"krate":0,"index":13301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13325},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78557,"byte_end":78560,"line_start":161,"line_end":161,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M5x6::m35","value":"N","parent":{"krate":0,"index":13301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13326},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78562,"byte_end":78565,"line_start":161,"line_end":161,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M5x6::m45","value":"N","parent":{"krate":0,"index":13301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13327},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78567,"byte_end":78570,"line_start":161,"line_end":161,"column_start":40,"column_end":43},"name":"m55","qualname":"::base::coordinates::M5x6::m55","value":"N","parent":{"krate":0,"index":13301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13328},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78591,"byte_end":78594,"line_start":162,"line_end":162,"column_start":20,"column_end":23},"name":"m16","qualname":"::base::coordinates::M5x6::m16","value":"N","parent":{"krate":0,"index":13301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13329},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78596,"byte_end":78599,"line_start":162,"line_end":162,"column_start":25,"column_end":28},"name":"m26","qualname":"::base::coordinates::M5x6::m26","value":"N","parent":{"krate":0,"index":13301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13330},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78601,"byte_end":78604,"line_start":162,"line_end":162,"column_start":30,"column_end":33},"name":"m36","qualname":"::base::coordinates::M5x6::m36","value":"N","parent":{"krate":0,"index":13301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13331},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78606,"byte_end":78609,"line_start":162,"line_end":162,"column_start":35,"column_end":38},"name":"m46","qualname":"::base::coordinates::M5x6::m46","value":"N","parent":{"krate":0,"index":13301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13332},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78611,"byte_end":78614,"line_start":162,"line_end":162,"column_start":40,"column_end":43},"name":"m56","qualname":"::base::coordinates::M5x6::m56","value":"N","parent":{"krate":0,"index":13301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13356},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78676,"byte_end":78680,"line_start":168,"line_end":168,"column_start":14,"column_end":18},"name":"M6x2","qualname":"::base::coordinates::M6x2","value":"M6x2 { m11, m21, m31, m41, m51, m61, m12, m22, m32, m42, m52, m62 }","parent":null,"children":[{"krate":0,"index":13358},{"krate":0,"index":13359},{"krate":0,"index":13360},{"krate":0,"index":13361},{"krate":0,"index":13362},{"krate":0,"index":13363},{"krate":0,"index":13364},{"krate":0,"index":13365},{"krate":0,"index":13366},{"krate":0,"index":13367},{"krate":0,"index":13368},{"krate":0,"index":13369}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74183,"byte_end":74270,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74279,"byte_end":74340,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74349,"byte_end":74359,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":13358},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78682,"byte_end":78685,"line_start":168,"line_end":168,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M6x2::m11","value":"N","parent":{"krate":0,"index":13356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13359},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78687,"byte_end":78690,"line_start":168,"line_end":168,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M6x2::m21","value":"N","parent":{"krate":0,"index":13356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13360},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78692,"byte_end":78695,"line_start":168,"line_end":168,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M6x2::m31","value":"N","parent":{"krate":0,"index":13356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13361},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78697,"byte_end":78700,"line_start":168,"line_end":168,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M6x2::m41","value":"N","parent":{"krate":0,"index":13356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13362},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78702,"byte_end":78705,"line_start":168,"line_end":168,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M6x2::m51","value":"N","parent":{"krate":0,"index":13356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13363},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78707,"byte_end":78710,"line_start":168,"line_end":168,"column_start":45,"column_end":48},"name":"m61","qualname":"::base::coordinates::M6x2::m61","value":"N","parent":{"krate":0,"index":13356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13364},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78731,"byte_end":78734,"line_start":169,"line_end":169,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M6x2::m12","value":"N","parent":{"krate":0,"index":13356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13365},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78736,"byte_end":78739,"line_start":169,"line_end":169,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M6x2::m22","value":"N","parent":{"krate":0,"index":13356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13366},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78741,"byte_end":78744,"line_start":169,"line_end":169,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M6x2::m32","value":"N","parent":{"krate":0,"index":13356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13367},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78746,"byte_end":78749,"line_start":169,"line_end":169,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M6x2::m42","value":"N","parent":{"krate":0,"index":13356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13368},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78751,"byte_end":78754,"line_start":169,"line_end":169,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M6x2::m52","value":"N","parent":{"krate":0,"index":13356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13369},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78756,"byte_end":78759,"line_start":169,"line_end":169,"column_start":45,"column_end":48},"name":"m62","qualname":"::base::coordinates::M6x2::m62","value":"N","parent":{"krate":0,"index":13356},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13393},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78775,"byte_end":78779,"line_start":170,"line_end":170,"column_start":14,"column_end":18},"name":"M6x3","qualname":"::base::coordinates::M6x3","value":"M6x3 { m11, m21, m31, m41, m51, m61, m12, m22, m32, m42, m52, m62, m13, m23, m33, m43, m53, m63 }","parent":null,"children":[{"krate":0,"index":13395},{"krate":0,"index":13396},{"krate":0,"index":13397},{"krate":0,"index":13398},{"krate":0,"index":13399},{"krate":0,"index":13400},{"krate":0,"index":13401},{"krate":0,"index":13402},{"krate":0,"index":13403},{"krate":0,"index":13404},{"krate":0,"index":13405},{"krate":0,"index":13406},{"krate":0,"index":13407},{"krate":0,"index":13408},{"krate":0,"index":13409},{"krate":0,"index":13410},{"krate":0,"index":13411},{"krate":0,"index":13412}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74183,"byte_end":74270,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74279,"byte_end":74340,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74349,"byte_end":74359,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":13395},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78781,"byte_end":78784,"line_start":170,"line_end":170,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M6x3::m11","value":"N","parent":{"krate":0,"index":13393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13396},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78786,"byte_end":78789,"line_start":170,"line_end":170,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M6x3::m21","value":"N","parent":{"krate":0,"index":13393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13397},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78791,"byte_end":78794,"line_start":170,"line_end":170,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M6x3::m31","value":"N","parent":{"krate":0,"index":13393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13398},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78796,"byte_end":78799,"line_start":170,"line_end":170,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M6x3::m41","value":"N","parent":{"krate":0,"index":13393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13399},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78801,"byte_end":78804,"line_start":170,"line_end":170,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M6x3::m51","value":"N","parent":{"krate":0,"index":13393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13400},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78806,"byte_end":78809,"line_start":170,"line_end":170,"column_start":45,"column_end":48},"name":"m61","qualname":"::base::coordinates::M6x3::m61","value":"N","parent":{"krate":0,"index":13393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13401},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78830,"byte_end":78833,"line_start":171,"line_end":171,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M6x3::m12","value":"N","parent":{"krate":0,"index":13393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13402},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78835,"byte_end":78838,"line_start":171,"line_end":171,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M6x3::m22","value":"N","parent":{"krate":0,"index":13393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13403},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78840,"byte_end":78843,"line_start":171,"line_end":171,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M6x3::m32","value":"N","parent":{"krate":0,"index":13393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13404},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78845,"byte_end":78848,"line_start":171,"line_end":171,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M6x3::m42","value":"N","parent":{"krate":0,"index":13393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13405},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78850,"byte_end":78853,"line_start":171,"line_end":171,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M6x3::m52","value":"N","parent":{"krate":0,"index":13393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13406},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78855,"byte_end":78858,"line_start":171,"line_end":171,"column_start":45,"column_end":48},"name":"m62","qualname":"::base::coordinates::M6x3::m62","value":"N","parent":{"krate":0,"index":13393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13407},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78879,"byte_end":78882,"line_start":172,"line_end":172,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M6x3::m13","value":"N","parent":{"krate":0,"index":13393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13408},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78884,"byte_end":78887,"line_start":172,"line_end":172,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M6x3::m23","value":"N","parent":{"krate":0,"index":13393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13409},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78889,"byte_end":78892,"line_start":172,"line_end":172,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M6x3::m33","value":"N","parent":{"krate":0,"index":13393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13410},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78894,"byte_end":78897,"line_start":172,"line_end":172,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M6x3::m43","value":"N","parent":{"krate":0,"index":13393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13411},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78899,"byte_end":78902,"line_start":172,"line_end":172,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M6x3::m53","value":"N","parent":{"krate":0,"index":13393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13412},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78904,"byte_end":78907,"line_start":172,"line_end":172,"column_start":45,"column_end":48},"name":"m63","qualname":"::base::coordinates::M6x3::m63","value":"N","parent":{"krate":0,"index":13393},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13436},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78923,"byte_end":78927,"line_start":173,"line_end":173,"column_start":14,"column_end":18},"name":"M6x4","qualname":"::base::coordinates::M6x4","value":"M6x4 { m11, m21, m31, m41, m51, m61, m12, m22, m32, m42, m52, m62, m13, m23, m33, m43, m53, m63, m14, m24, m34, m44, m54, m64 }","parent":null,"children":[{"krate":0,"index":13438},{"krate":0,"index":13439},{"krate":0,"index":13440},{"krate":0,"index":13441},{"krate":0,"index":13442},{"krate":0,"index":13443},{"krate":0,"index":13444},{"krate":0,"index":13445},{"krate":0,"index":13446},{"krate":0,"index":13447},{"krate":0,"index":13448},{"krate":0,"index":13449},{"krate":0,"index":13450},{"krate":0,"index":13451},{"krate":0,"index":13452},{"krate":0,"index":13453},{"krate":0,"index":13454},{"krate":0,"index":13455},{"krate":0,"index":13456},{"krate":0,"index":13457},{"krate":0,"index":13458},{"krate":0,"index":13459},{"krate":0,"index":13460},{"krate":0,"index":13461}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74183,"byte_end":74270,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74279,"byte_end":74340,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74349,"byte_end":74359,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":13438},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78929,"byte_end":78932,"line_start":173,"line_end":173,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M6x4::m11","value":"N","parent":{"krate":0,"index":13436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13439},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78934,"byte_end":78937,"line_start":173,"line_end":173,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M6x4::m21","value":"N","parent":{"krate":0,"index":13436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13440},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78939,"byte_end":78942,"line_start":173,"line_end":173,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M6x4::m31","value":"N","parent":{"krate":0,"index":13436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13441},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78944,"byte_end":78947,"line_start":173,"line_end":173,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M6x4::m41","value":"N","parent":{"krate":0,"index":13436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13442},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78949,"byte_end":78952,"line_start":173,"line_end":173,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M6x4::m51","value":"N","parent":{"krate":0,"index":13436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13443},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78954,"byte_end":78957,"line_start":173,"line_end":173,"column_start":45,"column_end":48},"name":"m61","qualname":"::base::coordinates::M6x4::m61","value":"N","parent":{"krate":0,"index":13436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13444},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78978,"byte_end":78981,"line_start":174,"line_end":174,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M6x4::m12","value":"N","parent":{"krate":0,"index":13436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13445},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78983,"byte_end":78986,"line_start":174,"line_end":174,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M6x4::m22","value":"N","parent":{"krate":0,"index":13436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13446},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78988,"byte_end":78991,"line_start":174,"line_end":174,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M6x4::m32","value":"N","parent":{"krate":0,"index":13436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13447},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78993,"byte_end":78996,"line_start":174,"line_end":174,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M6x4::m42","value":"N","parent":{"krate":0,"index":13436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13448},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":78998,"byte_end":79001,"line_start":174,"line_end":174,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M6x4::m52","value":"N","parent":{"krate":0,"index":13436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13449},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79003,"byte_end":79006,"line_start":174,"line_end":174,"column_start":45,"column_end":48},"name":"m62","qualname":"::base::coordinates::M6x4::m62","value":"N","parent":{"krate":0,"index":13436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13450},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79027,"byte_end":79030,"line_start":175,"line_end":175,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M6x4::m13","value":"N","parent":{"krate":0,"index":13436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13451},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79032,"byte_end":79035,"line_start":175,"line_end":175,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M6x4::m23","value":"N","parent":{"krate":0,"index":13436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13452},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79037,"byte_end":79040,"line_start":175,"line_end":175,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M6x4::m33","value":"N","parent":{"krate":0,"index":13436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13453},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79042,"byte_end":79045,"line_start":175,"line_end":175,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M6x4::m43","value":"N","parent":{"krate":0,"index":13436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13454},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79047,"byte_end":79050,"line_start":175,"line_end":175,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M6x4::m53","value":"N","parent":{"krate":0,"index":13436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13455},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79052,"byte_end":79055,"line_start":175,"line_end":175,"column_start":45,"column_end":48},"name":"m63","qualname":"::base::coordinates::M6x4::m63","value":"N","parent":{"krate":0,"index":13436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13456},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79076,"byte_end":79079,"line_start":176,"line_end":176,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M6x4::m14","value":"N","parent":{"krate":0,"index":13436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13457},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79081,"byte_end":79084,"line_start":176,"line_end":176,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M6x4::m24","value":"N","parent":{"krate":0,"index":13436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13458},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79086,"byte_end":79089,"line_start":176,"line_end":176,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M6x4::m34","value":"N","parent":{"krate":0,"index":13436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13459},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79091,"byte_end":79094,"line_start":176,"line_end":176,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M6x4::m44","value":"N","parent":{"krate":0,"index":13436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13460},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79096,"byte_end":79099,"line_start":176,"line_end":176,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M6x4::m54","value":"N","parent":{"krate":0,"index":13436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13461},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79101,"byte_end":79104,"line_start":176,"line_end":176,"column_start":45,"column_end":48},"name":"m64","qualname":"::base::coordinates::M6x4::m64","value":"N","parent":{"krate":0,"index":13436},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13485},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79120,"byte_end":79124,"line_start":177,"line_end":177,"column_start":14,"column_end":18},"name":"M6x5","qualname":"::base::coordinates::M6x5","value":"M6x5 { m11, m21, m31, m41, m51, m61, m12, m22, m32, m42, m52, m62, m13, m23, m33, m43, m53, m63, m14, m24, m34, m44, m54, m64, m15, m25, m35, m45, m55, m65 }","parent":null,"children":[{"krate":0,"index":13487},{"krate":0,"index":13488},{"krate":0,"index":13489},{"krate":0,"index":13490},{"krate":0,"index":13491},{"krate":0,"index":13492},{"krate":0,"index":13493},{"krate":0,"index":13494},{"krate":0,"index":13495},{"krate":0,"index":13496},{"krate":0,"index":13497},{"krate":0,"index":13498},{"krate":0,"index":13499},{"krate":0,"index":13500},{"krate":0,"index":13501},{"krate":0,"index":13502},{"krate":0,"index":13503},{"krate":0,"index":13504},{"krate":0,"index":13505},{"krate":0,"index":13506},{"krate":0,"index":13507},{"krate":0,"index":13508},{"krate":0,"index":13509},{"krate":0,"index":13510},{"krate":0,"index":13511},{"krate":0,"index":13512},{"krate":0,"index":13513},{"krate":0,"index":13514},{"krate":0,"index":13515},{"krate":0,"index":13516}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74183,"byte_end":74270,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74279,"byte_end":74340,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74349,"byte_end":74359,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":13487},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79126,"byte_end":79129,"line_start":177,"line_end":177,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M6x5::m11","value":"N","parent":{"krate":0,"index":13485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13488},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79131,"byte_end":79134,"line_start":177,"line_end":177,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M6x5::m21","value":"N","parent":{"krate":0,"index":13485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13489},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79136,"byte_end":79139,"line_start":177,"line_end":177,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M6x5::m31","value":"N","parent":{"krate":0,"index":13485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13490},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79141,"byte_end":79144,"line_start":177,"line_end":177,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M6x5::m41","value":"N","parent":{"krate":0,"index":13485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13491},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79146,"byte_end":79149,"line_start":177,"line_end":177,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M6x5::m51","value":"N","parent":{"krate":0,"index":13485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13492},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79151,"byte_end":79154,"line_start":177,"line_end":177,"column_start":45,"column_end":48},"name":"m61","qualname":"::base::coordinates::M6x5::m61","value":"N","parent":{"krate":0,"index":13485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13493},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79175,"byte_end":79178,"line_start":178,"line_end":178,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M6x5::m12","value":"N","parent":{"krate":0,"index":13485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13494},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79180,"byte_end":79183,"line_start":178,"line_end":178,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M6x5::m22","value":"N","parent":{"krate":0,"index":13485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13495},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79185,"byte_end":79188,"line_start":178,"line_end":178,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M6x5::m32","value":"N","parent":{"krate":0,"index":13485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13496},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79190,"byte_end":79193,"line_start":178,"line_end":178,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M6x5::m42","value":"N","parent":{"krate":0,"index":13485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13497},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79195,"byte_end":79198,"line_start":178,"line_end":178,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M6x5::m52","value":"N","parent":{"krate":0,"index":13485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13498},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79200,"byte_end":79203,"line_start":178,"line_end":178,"column_start":45,"column_end":48},"name":"m62","qualname":"::base::coordinates::M6x5::m62","value":"N","parent":{"krate":0,"index":13485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13499},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79224,"byte_end":79227,"line_start":179,"line_end":179,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M6x5::m13","value":"N","parent":{"krate":0,"index":13485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13500},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79229,"byte_end":79232,"line_start":179,"line_end":179,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M6x5::m23","value":"N","parent":{"krate":0,"index":13485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13501},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79234,"byte_end":79237,"line_start":179,"line_end":179,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M6x5::m33","value":"N","parent":{"krate":0,"index":13485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13502},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79239,"byte_end":79242,"line_start":179,"line_end":179,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M6x5::m43","value":"N","parent":{"krate":0,"index":13485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13503},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79244,"byte_end":79247,"line_start":179,"line_end":179,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M6x5::m53","value":"N","parent":{"krate":0,"index":13485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13504},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79249,"byte_end":79252,"line_start":179,"line_end":179,"column_start":45,"column_end":48},"name":"m63","qualname":"::base::coordinates::M6x5::m63","value":"N","parent":{"krate":0,"index":13485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13505},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79273,"byte_end":79276,"line_start":180,"line_end":180,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M6x5::m14","value":"N","parent":{"krate":0,"index":13485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13506},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79278,"byte_end":79281,"line_start":180,"line_end":180,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M6x5::m24","value":"N","parent":{"krate":0,"index":13485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13507},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79283,"byte_end":79286,"line_start":180,"line_end":180,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M6x5::m34","value":"N","parent":{"krate":0,"index":13485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13508},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79288,"byte_end":79291,"line_start":180,"line_end":180,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M6x5::m44","value":"N","parent":{"krate":0,"index":13485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13509},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79293,"byte_end":79296,"line_start":180,"line_end":180,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M6x5::m54","value":"N","parent":{"krate":0,"index":13485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13510},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79298,"byte_end":79301,"line_start":180,"line_end":180,"column_start":45,"column_end":48},"name":"m64","qualname":"::base::coordinates::M6x5::m64","value":"N","parent":{"krate":0,"index":13485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13511},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79322,"byte_end":79325,"line_start":181,"line_end":181,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M6x5::m15","value":"N","parent":{"krate":0,"index":13485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13512},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79327,"byte_end":79330,"line_start":181,"line_end":181,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M6x5::m25","value":"N","parent":{"krate":0,"index":13485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13513},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79332,"byte_end":79335,"line_start":181,"line_end":181,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M6x5::m35","value":"N","parent":{"krate":0,"index":13485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13514},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79337,"byte_end":79340,"line_start":181,"line_end":181,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M6x5::m45","value":"N","parent":{"krate":0,"index":13485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13515},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79342,"byte_end":79345,"line_start":181,"line_end":181,"column_start":40,"column_end":43},"name":"m55","qualname":"::base::coordinates::M6x5::m55","value":"N","parent":{"krate":0,"index":13485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13516},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79347,"byte_end":79350,"line_start":181,"line_end":181,"column_start":45,"column_end":48},"name":"m65","qualname":"::base::coordinates::M6x5::m65","value":"N","parent":{"krate":0,"index":13485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13540},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79366,"byte_end":79370,"line_start":182,"line_end":182,"column_start":14,"column_end":18},"name":"M6x6","qualname":"::base::coordinates::M6x6","value":"M6x6 { m11, m21, m31, m41, m51, m61, m12, m22, m32, m42, m52, m62, m13, m23, m33, m43, m53, m63, m14, m24, m34, m44, m54, m64, m15, m25, m35, m45, m55, m65, m16, m26, m36, m46, m56, m66 }","parent":null,"children":[{"krate":0,"index":13542},{"krate":0,"index":13543},{"krate":0,"index":13544},{"krate":0,"index":13545},{"krate":0,"index":13546},{"krate":0,"index":13547},{"krate":0,"index":13548},{"krate":0,"index":13549},{"krate":0,"index":13550},{"krate":0,"index":13551},{"krate":0,"index":13552},{"krate":0,"index":13553},{"krate":0,"index":13554},{"krate":0,"index":13555},{"krate":0,"index":13556},{"krate":0,"index":13557},{"krate":0,"index":13558},{"krate":0,"index":13559},{"krate":0,"index":13560},{"krate":0,"index":13561},{"krate":0,"index":13562},{"krate":0,"index":13563},{"krate":0,"index":13564},{"krate":0,"index":13565},{"krate":0,"index":13566},{"krate":0,"index":13567},{"krate":0,"index":13568},{"krate":0,"index":13569},{"krate":0,"index":13570},{"krate":0,"index":13571},{"krate":0,"index":13572},{"krate":0,"index":13573},{"krate":0,"index":13574},{"krate":0,"index":13575},{"krate":0,"index":13576},{"krate":0,"index":13577}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74183,"byte_end":74270,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74279,"byte_end":74340,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":74349,"byte_end":74359,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":13542},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79372,"byte_end":79375,"line_start":182,"line_end":182,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M6x6::m11","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13543},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79377,"byte_end":79380,"line_start":182,"line_end":182,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M6x6::m21","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13544},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79382,"byte_end":79385,"line_start":182,"line_end":182,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M6x6::m31","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13545},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79387,"byte_end":79390,"line_start":182,"line_end":182,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M6x6::m41","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13546},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79392,"byte_end":79395,"line_start":182,"line_end":182,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M6x6::m51","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13547},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79397,"byte_end":79400,"line_start":182,"line_end":182,"column_start":45,"column_end":48},"name":"m61","qualname":"::base::coordinates::M6x6::m61","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13548},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79421,"byte_end":79424,"line_start":183,"line_end":183,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M6x6::m12","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13549},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79426,"byte_end":79429,"line_start":183,"line_end":183,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M6x6::m22","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13550},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79431,"byte_end":79434,"line_start":183,"line_end":183,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M6x6::m32","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13551},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79436,"byte_end":79439,"line_start":183,"line_end":183,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M6x6::m42","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13552},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79441,"byte_end":79444,"line_start":183,"line_end":183,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M6x6::m52","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13553},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79446,"byte_end":79449,"line_start":183,"line_end":183,"column_start":45,"column_end":48},"name":"m62","qualname":"::base::coordinates::M6x6::m62","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13554},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79470,"byte_end":79473,"line_start":184,"line_end":184,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M6x6::m13","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13555},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79475,"byte_end":79478,"line_start":184,"line_end":184,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M6x6::m23","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13556},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79480,"byte_end":79483,"line_start":184,"line_end":184,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M6x6::m33","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13557},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79485,"byte_end":79488,"line_start":184,"line_end":184,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M6x6::m43","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13558},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79490,"byte_end":79493,"line_start":184,"line_end":184,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M6x6::m53","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13559},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79495,"byte_end":79498,"line_start":184,"line_end":184,"column_start":45,"column_end":48},"name":"m63","qualname":"::base::coordinates::M6x6::m63","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13560},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79519,"byte_end":79522,"line_start":185,"line_end":185,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M6x6::m14","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13561},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79524,"byte_end":79527,"line_start":185,"line_end":185,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M6x6::m24","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13562},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79529,"byte_end":79532,"line_start":185,"line_end":185,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M6x6::m34","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13563},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79534,"byte_end":79537,"line_start":185,"line_end":185,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M6x6::m44","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13564},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79539,"byte_end":79542,"line_start":185,"line_end":185,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M6x6::m54","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13565},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79544,"byte_end":79547,"line_start":185,"line_end":185,"column_start":45,"column_end":48},"name":"m64","qualname":"::base::coordinates::M6x6::m64","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13566},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79568,"byte_end":79571,"line_start":186,"line_end":186,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M6x6::m15","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13567},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79573,"byte_end":79576,"line_start":186,"line_end":186,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M6x6::m25","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13568},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79578,"byte_end":79581,"line_start":186,"line_end":186,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M6x6::m35","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13569},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79583,"byte_end":79586,"line_start":186,"line_end":186,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M6x6::m45","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13570},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79588,"byte_end":79591,"line_start":186,"line_end":186,"column_start":40,"column_end":43},"name":"m55","qualname":"::base::coordinates::M6x6::m55","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13571},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79593,"byte_end":79596,"line_start":186,"line_end":186,"column_start":45,"column_end":48},"name":"m65","qualname":"::base::coordinates::M6x6::m65","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13572},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79617,"byte_end":79620,"line_start":187,"line_end":187,"column_start":20,"column_end":23},"name":"m16","qualname":"::base::coordinates::M6x6::m16","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13573},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79622,"byte_end":79625,"line_start":187,"line_end":187,"column_start":25,"column_end":28},"name":"m26","qualname":"::base::coordinates::M6x6::m26","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13574},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79627,"byte_end":79630,"line_start":187,"line_end":187,"column_start":30,"column_end":33},"name":"m36","qualname":"::base::coordinates::M6x6::m36","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13575},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79632,"byte_end":79635,"line_start":187,"line_end":187,"column_start":35,"column_end":38},"name":"m46","qualname":"::base::coordinates::M6x6::m46","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13576},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79637,"byte_end":79640,"line_start":187,"line_end":187,"column_start":40,"column_end":43},"name":"m56","qualname":"::base::coordinates::M6x6::m56","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":13577},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/coordinates.rs","byte_start":79642,"byte_end":79645,"line_start":187,"line_end":187,"column_start":45,"column_end":48},"name":"m66","qualname":"::base::coordinates::M6x6::m66","value":"N","parent":{"krate":0,"index":13540},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":457},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/default_allocator.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"default_allocator","qualname":"::base::default_allocator","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/default_allocator.rs","parent":null,"children":[{"krate":0,"index":458},{"krate":0,"index":461},{"krate":0,"index":464},{"krate":0,"index":467},{"krate":0,"index":470},{"krate":0,"index":473},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":480},{"krate":0,"index":483},{"krate":0,"index":486},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":493},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":503},{"krate":0,"index":506},{"krate":0,"index":509},{"krate":0,"index":511},{"krate":0,"index":519},{"krate":0,"index":526},{"krate":0,"index":533},{"krate":0,"index":540},{"krate":0,"index":546},{"krate":0,"index":552},{"krate":0,"index":557},{"krate":0,"index":562},{"krate":0,"index":567}],"decl_id":null,"docs":" The default matrix data storage allocator.","sig":null,"attributes":[{"value":"/ The default matrix data storage allocator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/default_allocator.rs","byte_start":80673,"byte_end":80719,"line_start":1,"line_end":1,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/default_allocator.rs","byte_start":80720,"byte_end":80723,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This will use stack-allocated buffers for matrices with dimensions known at compile-time, and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/default_allocator.rs","byte_start":80724,"byte_end":80821,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"/ heap-allocated buffers for matrices with at least one dimension unknown at compile-time.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/default_allocator.rs","byte_start":80822,"byte_end":80914,"line_start":4,"line_end":4,"column_start":1,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":509},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/default_allocator.rs","byte_start":81665,"byte_end":81681,"line_start":34,"line_end":34,"column_start":12,"column_end":28},"name":"DefaultAllocator","qualname":"::base::default_allocator::DefaultAllocator","value":"","parent":null,"children":[],"decl_id":null,"docs":" An allocator based on `GenericArray` and `VecStorage` for statically-sized and dynamically-sized\n matrices respectively.\n","sig":null,"attributes":[{"value":"/ An allocator based on `GenericArray` and `VecStorage` for statically-sized and dynamically-sized","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/default_allocator.rs","byte_start":81526,"byte_end":81626,"line_start":32,"line_end":32,"column_start":1,"column_end":101}},{"value":"/ matrices respectively.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/default_allocator.rs","byte_start":81627,"byte_end":81653,"line_start":33,"line_end":33,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":572},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dimension","qualname":"::base::dimension","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":580},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":593},{"krate":0,"index":596},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":603},{"krate":0,"index":606},{"krate":0,"index":609},{"krate":0,"index":612},{"krate":0,"index":615},{"krate":0,"index":618},{"krate":0,"index":621},{"krate":0,"index":624},{"krate":0,"index":627},{"krate":0,"index":630},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":636},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":13925},{"krate":0,"index":13927},{"krate":0,"index":13929},{"krate":0,"index":13930},{"krate":0,"index":13931},{"krate":0,"index":13933},{"krate":0,"index":13934},{"krate":0,"index":13937},{"krate":0,"index":642},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":654},{"krate":0,"index":658},{"krate":0,"index":661},{"krate":0,"index":13939},{"krate":0,"index":13942},{"krate":0,"index":13946},{"krate":0,"index":13951},{"krate":0,"index":13955},{"krate":0,"index":13959},{"krate":0,"index":13962},{"krate":0,"index":13966},{"krate":0,"index":13971},{"krate":0,"index":13974},{"krate":0,"index":13978},{"krate":0,"index":13983},{"krate":0,"index":13987},{"krate":0,"index":13991},{"krate":0,"index":13994},{"krate":0,"index":13998},{"krate":0,"index":14003},{"krate":0,"index":14006},{"krate":0,"index":14010},{"krate":0,"index":14015},{"krate":0,"index":14019},{"krate":0,"index":14023},{"krate":0,"index":14026},{"krate":0,"index":14030},{"krate":0,"index":14035},{"krate":0,"index":14038},{"krate":0,"index":14042},{"krate":0,"index":14047},{"krate":0,"index":14051},{"krate":0,"index":14055},{"krate":0,"index":14058},{"krate":0,"index":14062},{"krate":0,"index":14067},{"krate":0,"index":14070},{"krate":0,"index":14074},{"krate":0,"index":14079},{"krate":0,"index":14083},{"krate":0,"index":14087},{"krate":0,"index":14090},{"krate":0,"index":14094},{"krate":0,"index":14099},{"krate":0,"index":14102},{"krate":0,"index":14106},{"krate":0,"index":14111},{"krate":0,"index":14115},{"krate":0,"index":14119},{"krate":0,"index":14122},{"krate":0,"index":14126},{"krate":0,"index":665},{"krate":0,"index":669},{"krate":0,"index":14131},{"krate":0,"index":14133},{"krate":0,"index":14135},{"krate":0,"index":14136},{"krate":0,"index":14138},{"krate":0,"index":14141},{"krate":0,"index":14142},{"krate":0,"index":14144},{"krate":0,"index":14145},{"krate":0,"index":671},{"krate":0,"index":675},{"krate":0,"index":678},{"krate":0,"index":15417},{"krate":0,"index":15419},{"krate":0,"index":15421},{"krate":0,"index":15422},{"krate":0,"index":15424},{"krate":0,"index":15427},{"krate":0,"index":15428},{"krate":0,"index":15430},{"krate":0,"index":15431},{"krate":0,"index":14147},{"krate":0,"index":14151},{"krate":0,"index":14154},{"krate":0,"index":14156},{"krate":0,"index":15433},{"krate":0,"index":15435},{"krate":0,"index":15437},{"krate":0,"index":15438},{"krate":0,"index":15440},{"krate":0,"index":15443},{"krate":0,"index":15444},{"krate":0,"index":15446},{"krate":0,"index":15447},{"krate":0,"index":14157},{"krate":0,"index":14161},{"krate":0,"index":14164},{"krate":0,"index":14166},{"krate":0,"index":15449},{"krate":0,"index":15451},{"krate":0,"index":15453},{"krate":0,"index":15454},{"krate":0,"index":15456},{"krate":0,"index":15459},{"krate":0,"index":15460},{"krate":0,"index":15462},{"krate":0,"index":15463},{"krate":0,"index":14167},{"krate":0,"index":14171},{"krate":0,"index":14174},{"krate":0,"index":14176},{"krate":0,"index":15465},{"krate":0,"index":15467},{"krate":0,"index":15469},{"krate":0,"index":15470},{"krate":0,"index":15472},{"krate":0,"index":15475},{"krate":0,"index":15476},{"krate":0,"index":15478},{"krate":0,"index":15479},{"krate":0,"index":14177},{"krate":0,"index":14181},{"krate":0,"index":14184},{"krate":0,"index":14186},{"krate":0,"index":15481},{"krate":0,"index":15483},{"krate":0,"index":15485},{"krate":0,"index":15486},{"krate":0,"index":15488},{"krate":0,"index":15491},{"krate":0,"index":15492},{"krate":0,"index":15494},{"krate":0,"index":15495},{"krate":0,"index":14187},{"krate":0,"index":14191},{"krate":0,"index":14194},{"krate":0,"index":14196},{"krate":0,"index":15497},{"krate":0,"index":15499},{"krate":0,"index":15501},{"krate":0,"index":15502},{"krate":0,"index":15504},{"krate":0,"index":15507},{"krate":0,"index":15508},{"krate":0,"index":15510},{"krate":0,"index":15511},{"krate":0,"index":14197},{"krate":0,"index":14201},{"krate":0,"index":14204},{"krate":0,"index":14206},{"krate":0,"index":15513},{"krate":0,"index":15515},{"krate":0,"index":15517},{"krate":0,"index":15518},{"krate":0,"index":15520},{"krate":0,"index":15523},{"krate":0,"index":15524},{"krate":0,"index":15526},{"krate":0,"index":15527},{"krate":0,"index":14207},{"krate":0,"index":14211},{"krate":0,"index":14214},{"krate":0,"index":14216},{"krate":0,"index":15529},{"krate":0,"index":15531},{"krate":0,"index":15533},{"krate":0,"index":15534},{"krate":0,"index":15536},{"krate":0,"index":15539},{"krate":0,"index":15540},{"krate":0,"index":15542},{"krate":0,"index":15543},{"krate":0,"index":14217},{"krate":0,"index":14221},{"krate":0,"index":14224},{"krate":0,"index":14226},{"krate":0,"index":15545},{"krate":0,"index":15547},{"krate":0,"index":15549},{"krate":0,"index":15550},{"krate":0,"index":15552},{"krate":0,"index":15555},{"krate":0,"index":15556},{"krate":0,"index":15558},{"krate":0,"index":15559},{"krate":0,"index":14227},{"krate":0,"index":14231},{"krate":0,"index":14234},{"krate":0,"index":14236},{"krate":0,"index":15561},{"krate":0,"index":15563},{"krate":0,"index":15565},{"krate":0,"index":15566},{"krate":0,"index":15568},{"krate":0,"index":15571},{"krate":0,"index":15572},{"krate":0,"index":15574},{"krate":0,"index":15575},{"krate":0,"index":14237},{"krate":0,"index":14241},{"krate":0,"index":14244},{"krate":0,"index":14246},{"krate":0,"index":15577},{"krate":0,"index":15579},{"krate":0,"index":15581},{"krate":0,"index":15582},{"krate":0,"index":15584},{"krate":0,"index":15587},{"krate":0,"index":15588},{"krate":0,"index":15590},{"krate":0,"index":15591},{"krate":0,"index":14247},{"krate":0,"index":14251},{"krate":0,"index":14254},{"krate":0,"index":14256},{"krate":0,"index":15593},{"krate":0,"index":15595},{"krate":0,"index":15597},{"krate":0,"index":15598},{"krate":0,"index":15600},{"krate":0,"index":15603},{"krate":0,"index":15604},{"krate":0,"index":15606},{"krate":0,"index":15607},{"krate":0,"index":14257},{"krate":0,"index":14261},{"krate":0,"index":14264},{"krate":0,"index":14266},{"krate":0,"index":15609},{"krate":0,"index":15611},{"krate":0,"index":15613},{"krate":0,"index":15614},{"krate":0,"index":15616},{"krate":0,"index":15619},{"krate":0,"index":15620},{"krate":0,"index":15622},{"krate":0,"index":15623},{"krate":0,"index":14267},{"krate":0,"index":14271},{"krate":0,"index":14274},{"krate":0,"index":14276},{"krate":0,"index":15625},{"krate":0,"index":15627},{"krate":0,"index":15629},{"krate":0,"index":15630},{"krate":0,"index":15632},{"krate":0,"index":15635},{"krate":0,"index":15636},{"krate":0,"index":15638},{"krate":0,"index":15639},{"krate":0,"index":14277},{"krate":0,"index":14281},{"krate":0,"index":14284},{"krate":0,"index":14286},{"krate":0,"index":15641},{"krate":0,"index":15643},{"krate":0,"index":15645},{"krate":0,"index":15646},{"krate":0,"index":15648},{"krate":0,"index":15651},{"krate":0,"index":15652},{"krate":0,"index":15654},{"krate":0,"index":15655},{"krate":0,"index":14287},{"krate":0,"index":14291},{"krate":0,"index":14294},{"krate":0,"index":14296},{"krate":0,"index":15657},{"krate":0,"index":15659},{"krate":0,"index":15661},{"krate":0,"index":15662},{"krate":0,"index":15664},{"krate":0,"index":15667},{"krate":0,"index":15668},{"krate":0,"index":15670},{"krate":0,"index":15671},{"krate":0,"index":14297},{"krate":0,"index":14301},{"krate":0,"index":14304},{"krate":0,"index":14306},{"krate":0,"index":15673},{"krate":0,"index":15675},{"krate":0,"index":15677},{"krate":0,"index":15678},{"krate":0,"index":15680},{"krate":0,"index":15683},{"krate":0,"index":15684},{"krate":0,"index":15686},{"krate":0,"index":15687},{"krate":0,"index":14307},{"krate":0,"index":14311},{"krate":0,"index":14314},{"krate":0,"index":14316},{"krate":0,"index":15689},{"krate":0,"index":15691},{"krate":0,"index":15693},{"krate":0,"index":15694},{"krate":0,"index":15696},{"krate":0,"index":15699},{"krate":0,"index":15700},{"krate":0,"index":15702},{"krate":0,"index":15703},{"krate":0,"index":14317},{"krate":0,"index":14321},{"krate":0,"index":14324},{"krate":0,"index":14326},{"krate":0,"index":15705},{"krate":0,"index":15707},{"krate":0,"index":15709},{"krate":0,"index":15710},{"krate":0,"index":15712},{"krate":0,"index":15715},{"krate":0,"index":15716},{"krate":0,"index":15718},{"krate":0,"index":15719},{"krate":0,"index":14327},{"krate":0,"index":14331},{"krate":0,"index":14334},{"krate":0,"index":14336},{"krate":0,"index":15721},{"krate":0,"index":15723},{"krate":0,"index":15725},{"krate":0,"index":15726},{"krate":0,"index":15728},{"krate":0,"index":15731},{"krate":0,"index":15732},{"krate":0,"index":15734},{"krate":0,"index":15735},{"krate":0,"index":14337},{"krate":0,"index":14341},{"krate":0,"index":14344},{"krate":0,"index":14346},{"krate":0,"index":15737},{"krate":0,"index":15739},{"krate":0,"index":15741},{"krate":0,"index":15742},{"krate":0,"index":15744},{"krate":0,"index":15747},{"krate":0,"index":15748},{"krate":0,"index":15750},{"krate":0,"index":15751},{"krate":0,"index":14347},{"krate":0,"index":14351},{"krate":0,"index":14354},{"krate":0,"index":14356},{"krate":0,"index":15753},{"krate":0,"index":15755},{"krate":0,"index":15757},{"krate":0,"index":15758},{"krate":0,"index":15760},{"krate":0,"index":15763},{"krate":0,"index":15764},{"krate":0,"index":15766},{"krate":0,"index":15767},{"krate":0,"index":14357},{"krate":0,"index":14361},{"krate":0,"index":14364},{"krate":0,"index":14366},{"krate":0,"index":15769},{"krate":0,"index":15771},{"krate":0,"index":15773},{"krate":0,"index":15774},{"krate":0,"index":15776},{"krate":0,"index":15779},{"krate":0,"index":15780},{"krate":0,"index":15782},{"krate":0,"index":15783},{"krate":0,"index":14367},{"krate":0,"index":14371},{"krate":0,"index":14374},{"krate":0,"index":14376},{"krate":0,"index":15785},{"krate":0,"index":15787},{"krate":0,"index":15789},{"krate":0,"index":15790},{"krate":0,"index":15792},{"krate":0,"index":15795},{"krate":0,"index":15796},{"krate":0,"index":15798},{"krate":0,"index":15799},{"krate":0,"index":14377},{"krate":0,"index":14381},{"krate":0,"index":14384},{"krate":0,"index":14386},{"krate":0,"index":15801},{"krate":0,"index":15803},{"krate":0,"index":15805},{"krate":0,"index":15806},{"krate":0,"index":15808},{"krate":0,"index":15811},{"krate":0,"index":15812},{"krate":0,"index":15814},{"krate":0,"index":15815},{"krate":0,"index":14387},{"krate":0,"index":14391},{"krate":0,"index":14394},{"krate":0,"index":14396},{"krate":0,"index":15817},{"krate":0,"index":15819},{"krate":0,"index":15821},{"krate":0,"index":15822},{"krate":0,"index":15824},{"krate":0,"index":15827},{"krate":0,"index":15828},{"krate":0,"index":15830},{"krate":0,"index":15831},{"krate":0,"index":14397},{"krate":0,"index":14401},{"krate":0,"index":14404},{"krate":0,"index":14406},{"krate":0,"index":15833},{"krate":0,"index":15835},{"krate":0,"index":15837},{"krate":0,"index":15838},{"krate":0,"index":15840},{"krate":0,"index":15843},{"krate":0,"index":15844},{"krate":0,"index":15846},{"krate":0,"index":15847},{"krate":0,"index":14407},{"krate":0,"index":14411},{"krate":0,"index":14414},{"krate":0,"index":14416},{"krate":0,"index":15849},{"krate":0,"index":15851},{"krate":0,"index":15853},{"krate":0,"index":15854},{"krate":0,"index":15856},{"krate":0,"index":15859},{"krate":0,"index":15860},{"krate":0,"index":15862},{"krate":0,"index":15863},{"krate":0,"index":14417},{"krate":0,"index":14421},{"krate":0,"index":14424},{"krate":0,"index":14426},{"krate":0,"index":15865},{"krate":0,"index":15867},{"krate":0,"index":15869},{"krate":0,"index":15870},{"krate":0,"index":15872},{"krate":0,"index":15875},{"krate":0,"index":15876},{"krate":0,"index":15878},{"krate":0,"index":15879},{"krate":0,"index":14427},{"krate":0,"index":14431},{"krate":0,"index":14434},{"krate":0,"index":14436},{"krate":0,"index":15881},{"krate":0,"index":15883},{"krate":0,"index":15885},{"krate":0,"index":15886},{"krate":0,"index":15888},{"krate":0,"index":15891},{"krate":0,"index":15892},{"krate":0,"index":15894},{"krate":0,"index":15895},{"krate":0,"index":14437},{"krate":0,"index":14441},{"krate":0,"index":14444},{"krate":0,"index":14446},{"krate":0,"index":15897},{"krate":0,"index":15899},{"krate":0,"index":15901},{"krate":0,"index":15902},{"krate":0,"index":15904},{"krate":0,"index":15907},{"krate":0,"index":15908},{"krate":0,"index":15910},{"krate":0,"index":15911},{"krate":0,"index":14447},{"krate":0,"index":14451},{"krate":0,"index":14454},{"krate":0,"index":14456},{"krate":0,"index":15913},{"krate":0,"index":15915},{"krate":0,"index":15917},{"krate":0,"index":15918},{"krate":0,"index":15920},{"krate":0,"index":15923},{"krate":0,"index":15924},{"krate":0,"index":15926},{"krate":0,"index":15927},{"krate":0,"index":14457},{"krate":0,"index":14461},{"krate":0,"index":14464},{"krate":0,"index":14466},{"krate":0,"index":15929},{"krate":0,"index":15931},{"krate":0,"index":15933},{"krate":0,"index":15934},{"krate":0,"index":15936},{"krate":0,"index":15939},{"krate":0,"index":15940},{"krate":0,"index":15942},{"krate":0,"index":15943},{"krate":0,"index":14467},{"krate":0,"index":14471},{"krate":0,"index":14474},{"krate":0,"index":14476},{"krate":0,"index":15945},{"krate":0,"index":15947},{"krate":0,"index":15949},{"krate":0,"index":15950},{"krate":0,"index":15952},{"krate":0,"index":15955},{"krate":0,"index":15956},{"krate":0,"index":15958},{"krate":0,"index":15959},{"krate":0,"index":14477},{"krate":0,"index":14481},{"krate":0,"index":14484},{"krate":0,"index":14486},{"krate":0,"index":15961},{"krate":0,"index":15963},{"krate":0,"index":15965},{"krate":0,"index":15966},{"krate":0,"index":15968},{"krate":0,"index":15971},{"krate":0,"index":15972},{"krate":0,"index":15974},{"krate":0,"index":15975},{"krate":0,"index":14487},{"krate":0,"index":14491},{"krate":0,"index":14494},{"krate":0,"index":14496},{"krate":0,"index":15977},{"krate":0,"index":15979},{"krate":0,"index":15981},{"krate":0,"index":15982},{"krate":0,"index":15984},{"krate":0,"index":15987},{"krate":0,"index":15988},{"krate":0,"index":15990},{"krate":0,"index":15991},{"krate":0,"index":14497},{"krate":0,"index":14501},{"krate":0,"index":14504},{"krate":0,"index":14506},{"krate":0,"index":15993},{"krate":0,"index":15995},{"krate":0,"index":15997},{"krate":0,"index":15998},{"krate":0,"index":16000},{"krate":0,"index":16003},{"krate":0,"index":16004},{"krate":0,"index":16006},{"krate":0,"index":16007},{"krate":0,"index":14507},{"krate":0,"index":14511},{"krate":0,"index":14514},{"krate":0,"index":14516},{"krate":0,"index":16009},{"krate":0,"index":16011},{"krate":0,"index":16013},{"krate":0,"index":16014},{"krate":0,"index":16016},{"krate":0,"index":16019},{"krate":0,"index":16020},{"krate":0,"index":16022},{"krate":0,"index":16023},{"krate":0,"index":14517},{"krate":0,"index":14521},{"krate":0,"index":14524},{"krate":0,"index":14526},{"krate":0,"index":16025},{"krate":0,"index":16027},{"krate":0,"index":16029},{"krate":0,"index":16030},{"krate":0,"index":16032},{"krate":0,"index":16035},{"krate":0,"index":16036},{"krate":0,"index":16038},{"krate":0,"index":16039},{"krate":0,"index":14527},{"krate":0,"index":14531},{"krate":0,"index":14534},{"krate":0,"index":14536},{"krate":0,"index":16041},{"krate":0,"index":16043},{"krate":0,"index":16045},{"krate":0,"index":16046},{"krate":0,"index":16048},{"krate":0,"index":16051},{"krate":0,"index":16052},{"krate":0,"index":16054},{"krate":0,"index":16055},{"krate":0,"index":14537},{"krate":0,"index":14541},{"krate":0,"index":14544},{"krate":0,"index":14546},{"krate":0,"index":16057},{"krate":0,"index":16059},{"krate":0,"index":16061},{"krate":0,"index":16062},{"krate":0,"index":16064},{"krate":0,"index":16067},{"krate":0,"index":16068},{"krate":0,"index":16070},{"krate":0,"index":16071},{"krate":0,"index":14547},{"krate":0,"index":14551},{"krate":0,"index":14554},{"krate":0,"index":14556},{"krate":0,"index":16073},{"krate":0,"index":16075},{"krate":0,"index":16077},{"krate":0,"index":16078},{"krate":0,"index":16080},{"krate":0,"index":16083},{"krate":0,"index":16084},{"krate":0,"index":16086},{"krate":0,"index":16087},{"krate":0,"index":14557},{"krate":0,"index":14561},{"krate":0,"index":14564},{"krate":0,"index":14566},{"krate":0,"index":16089},{"krate":0,"index":16091},{"krate":0,"index":16093},{"krate":0,"index":16094},{"krate":0,"index":16096},{"krate":0,"index":16099},{"krate":0,"index":16100},{"krate":0,"index":16102},{"krate":0,"index":16103},{"krate":0,"index":14567},{"krate":0,"index":14571},{"krate":0,"index":14574},{"krate":0,"index":14576},{"krate":0,"index":16105},{"krate":0,"index":16107},{"krate":0,"index":16109},{"krate":0,"index":16110},{"krate":0,"index":16112},{"krate":0,"index":16115},{"krate":0,"index":16116},{"krate":0,"index":16118},{"krate":0,"index":16119},{"krate":0,"index":14577},{"krate":0,"index":14581},{"krate":0,"index":14584},{"krate":0,"index":14586},{"krate":0,"index":16121},{"krate":0,"index":16123},{"krate":0,"index":16125},{"krate":0,"index":16126},{"krate":0,"index":16128},{"krate":0,"index":16131},{"krate":0,"index":16132},{"krate":0,"index":16134},{"krate":0,"index":16135},{"krate":0,"index":14587},{"krate":0,"index":14591},{"krate":0,"index":14594},{"krate":0,"index":14596},{"krate":0,"index":16137},{"krate":0,"index":16139},{"krate":0,"index":16141},{"krate":0,"index":16142},{"krate":0,"index":16144},{"krate":0,"index":16147},{"krate":0,"index":16148},{"krate":0,"index":16150},{"krate":0,"index":16151},{"krate":0,"index":14597},{"krate":0,"index":14601},{"krate":0,"index":14604},{"krate":0,"index":14606},{"krate":0,"index":16153},{"krate":0,"index":16155},{"krate":0,"index":16157},{"krate":0,"index":16158},{"krate":0,"index":16160},{"krate":0,"index":16163},{"krate":0,"index":16164},{"krate":0,"index":16166},{"krate":0,"index":16167},{"krate":0,"index":14607},{"krate":0,"index":14611},{"krate":0,"index":14614},{"krate":0,"index":14616},{"krate":0,"index":16169},{"krate":0,"index":16171},{"krate":0,"index":16173},{"krate":0,"index":16174},{"krate":0,"index":16176},{"krate":0,"index":16179},{"krate":0,"index":16180},{"krate":0,"index":16182},{"krate":0,"index":16183},{"krate":0,"index":14617},{"krate":0,"index":14621},{"krate":0,"index":14624},{"krate":0,"index":14626},{"krate":0,"index":16185},{"krate":0,"index":16187},{"krate":0,"index":16189},{"krate":0,"index":16190},{"krate":0,"index":16192},{"krate":0,"index":16195},{"krate":0,"index":16196},{"krate":0,"index":16198},{"krate":0,"index":16199},{"krate":0,"index":14627},{"krate":0,"index":14631},{"krate":0,"index":14634},{"krate":0,"index":14636},{"krate":0,"index":16201},{"krate":0,"index":16203},{"krate":0,"index":16205},{"krate":0,"index":16206},{"krate":0,"index":16208},{"krate":0,"index":16211},{"krate":0,"index":16212},{"krate":0,"index":16214},{"krate":0,"index":16215},{"krate":0,"index":14637},{"krate":0,"index":14641},{"krate":0,"index":14644},{"krate":0,"index":14646},{"krate":0,"index":16217},{"krate":0,"index":16219},{"krate":0,"index":16221},{"krate":0,"index":16222},{"krate":0,"index":16224},{"krate":0,"index":16227},{"krate":0,"index":16228},{"krate":0,"index":16230},{"krate":0,"index":16231},{"krate":0,"index":14647},{"krate":0,"index":14651},{"krate":0,"index":14654},{"krate":0,"index":14656},{"krate":0,"index":16233},{"krate":0,"index":16235},{"krate":0,"index":16237},{"krate":0,"index":16238},{"krate":0,"index":16240},{"krate":0,"index":16243},{"krate":0,"index":16244},{"krate":0,"index":16246},{"krate":0,"index":16247},{"krate":0,"index":14657},{"krate":0,"index":14661},{"krate":0,"index":14664},{"krate":0,"index":14666},{"krate":0,"index":16249},{"krate":0,"index":16251},{"krate":0,"index":16253},{"krate":0,"index":16254},{"krate":0,"index":16256},{"krate":0,"index":16259},{"krate":0,"index":16260},{"krate":0,"index":16262},{"krate":0,"index":16263},{"krate":0,"index":14667},{"krate":0,"index":14671},{"krate":0,"index":14674},{"krate":0,"index":14676},{"krate":0,"index":16265},{"krate":0,"index":16267},{"krate":0,"index":16269},{"krate":0,"index":16270},{"krate":0,"index":16272},{"krate":0,"index":16275},{"krate":0,"index":16276},{"krate":0,"index":16278},{"krate":0,"index":16279},{"krate":0,"index":14677},{"krate":0,"index":14681},{"krate":0,"index":14684},{"krate":0,"index":14686},{"krate":0,"index":16281},{"krate":0,"index":16283},{"krate":0,"index":16285},{"krate":0,"index":16286},{"krate":0,"index":16288},{"krate":0,"index":16291},{"krate":0,"index":16292},{"krate":0,"index":16294},{"krate":0,"index":16295},{"krate":0,"index":14687},{"krate":0,"index":14691},{"krate":0,"index":14694},{"krate":0,"index":14696},{"krate":0,"index":16297},{"krate":0,"index":16299},{"krate":0,"index":16301},{"krate":0,"index":16302},{"krate":0,"index":16304},{"krate":0,"index":16307},{"krate":0,"index":16308},{"krate":0,"index":16310},{"krate":0,"index":16311},{"krate":0,"index":14697},{"krate":0,"index":14701},{"krate":0,"index":14704},{"krate":0,"index":14706},{"krate":0,"index":16313},{"krate":0,"index":16315},{"krate":0,"index":16317},{"krate":0,"index":16318},{"krate":0,"index":16320},{"krate":0,"index":16323},{"krate":0,"index":16324},{"krate":0,"index":16326},{"krate":0,"index":16327},{"krate":0,"index":14707},{"krate":0,"index":14711},{"krate":0,"index":14714},{"krate":0,"index":14716},{"krate":0,"index":16329},{"krate":0,"index":16331},{"krate":0,"index":16333},{"krate":0,"index":16334},{"krate":0,"index":16336},{"krate":0,"index":16339},{"krate":0,"index":16340},{"krate":0,"index":16342},{"krate":0,"index":16343},{"krate":0,"index":14717},{"krate":0,"index":14721},{"krate":0,"index":14724},{"krate":0,"index":14726},{"krate":0,"index":16345},{"krate":0,"index":16347},{"krate":0,"index":16349},{"krate":0,"index":16350},{"krate":0,"index":16352},{"krate":0,"index":16355},{"krate":0,"index":16356},{"krate":0,"index":16358},{"krate":0,"index":16359},{"krate":0,"index":14727},{"krate":0,"index":14731},{"krate":0,"index":14734},{"krate":0,"index":14736},{"krate":0,"index":16361},{"krate":0,"index":16363},{"krate":0,"index":16365},{"krate":0,"index":16366},{"krate":0,"index":16368},{"krate":0,"index":16371},{"krate":0,"index":16372},{"krate":0,"index":16374},{"krate":0,"index":16375},{"krate":0,"index":14737},{"krate":0,"index":14741},{"krate":0,"index":14744},{"krate":0,"index":14746},{"krate":0,"index":16377},{"krate":0,"index":16379},{"krate":0,"index":16381},{"krate":0,"index":16382},{"krate":0,"index":16384},{"krate":0,"index":16387},{"krate":0,"index":16388},{"krate":0,"index":16390},{"krate":0,"index":16391},{"krate":0,"index":14747},{"krate":0,"index":14751},{"krate":0,"index":14754},{"krate":0,"index":14756},{"krate":0,"index":16393},{"krate":0,"index":16395},{"krate":0,"index":16397},{"krate":0,"index":16398},{"krate":0,"index":16400},{"krate":0,"index":16403},{"krate":0,"index":16404},{"krate":0,"index":16406},{"krate":0,"index":16407},{"krate":0,"index":14757},{"krate":0,"index":14761},{"krate":0,"index":14764},{"krate":0,"index":14766},{"krate":0,"index":16409},{"krate":0,"index":16411},{"krate":0,"index":16413},{"krate":0,"index":16414},{"krate":0,"index":16416},{"krate":0,"index":16419},{"krate":0,"index":16420},{"krate":0,"index":16422},{"krate":0,"index":16423},{"krate":0,"index":14767},{"krate":0,"index":14771},{"krate":0,"index":14774},{"krate":0,"index":14776},{"krate":0,"index":16425},{"krate":0,"index":16427},{"krate":0,"index":16429},{"krate":0,"index":16430},{"krate":0,"index":16432},{"krate":0,"index":16435},{"krate":0,"index":16436},{"krate":0,"index":16438},{"krate":0,"index":16439},{"krate":0,"index":14777},{"krate":0,"index":14781},{"krate":0,"index":14784},{"krate":0,"index":14786},{"krate":0,"index":16441},{"krate":0,"index":16443},{"krate":0,"index":16445},{"krate":0,"index":16446},{"krate":0,"index":16448},{"krate":0,"index":16451},{"krate":0,"index":16452},{"krate":0,"index":16454},{"krate":0,"index":16455},{"krate":0,"index":14787},{"krate":0,"index":14791},{"krate":0,"index":14794},{"krate":0,"index":14796},{"krate":0,"index":16457},{"krate":0,"index":16459},{"krate":0,"index":16461},{"krate":0,"index":16462},{"krate":0,"index":16464},{"krate":0,"index":16467},{"krate":0,"index":16468},{"krate":0,"index":16470},{"krate":0,"index":16471},{"krate":0,"index":14797},{"krate":0,"index":14801},{"krate":0,"index":14804},{"krate":0,"index":14806},{"krate":0,"index":16473},{"krate":0,"index":16475},{"krate":0,"index":16477},{"krate":0,"index":16478},{"krate":0,"index":16480},{"krate":0,"index":16483},{"krate":0,"index":16484},{"krate":0,"index":16486},{"krate":0,"index":16487},{"krate":0,"index":14807},{"krate":0,"index":14811},{"krate":0,"index":14814},{"krate":0,"index":14816},{"krate":0,"index":16489},{"krate":0,"index":16491},{"krate":0,"index":16493},{"krate":0,"index":16494},{"krate":0,"index":16496},{"krate":0,"index":16499},{"krate":0,"index":16500},{"krate":0,"index":16502},{"krate":0,"index":16503},{"krate":0,"index":14817},{"krate":0,"index":14821},{"krate":0,"index":14824},{"krate":0,"index":14826},{"krate":0,"index":16505},{"krate":0,"index":16507},{"krate":0,"index":16509},{"krate":0,"index":16510},{"krate":0,"index":16512},{"krate":0,"index":16515},{"krate":0,"index":16516},{"krate":0,"index":16518},{"krate":0,"index":16519},{"krate":0,"index":14827},{"krate":0,"index":14831},{"krate":0,"index":14834},{"krate":0,"index":14836},{"krate":0,"index":16521},{"krate":0,"index":16523},{"krate":0,"index":16525},{"krate":0,"index":16526},{"krate":0,"index":16528},{"krate":0,"index":16531},{"krate":0,"index":16532},{"krate":0,"index":16534},{"krate":0,"index":16535},{"krate":0,"index":14837},{"krate":0,"index":14841},{"krate":0,"index":14844},{"krate":0,"index":14846},{"krate":0,"index":16537},{"krate":0,"index":16539},{"krate":0,"index":16541},{"krate":0,"index":16542},{"krate":0,"index":16544},{"krate":0,"index":16547},{"krate":0,"index":16548},{"krate":0,"index":16550},{"krate":0,"index":16551},{"krate":0,"index":14847},{"krate":0,"index":14851},{"krate":0,"index":14854},{"krate":0,"index":14856},{"krate":0,"index":16553},{"krate":0,"index":16555},{"krate":0,"index":16557},{"krate":0,"index":16558},{"krate":0,"index":16560},{"krate":0,"index":16563},{"krate":0,"index":16564},{"krate":0,"index":16566},{"krate":0,"index":16567},{"krate":0,"index":14857},{"krate":0,"index":14861},{"krate":0,"index":14864},{"krate":0,"index":14866},{"krate":0,"index":16569},{"krate":0,"index":16571},{"krate":0,"index":16573},{"krate":0,"index":16574},{"krate":0,"index":16576},{"krate":0,"index":16579},{"krate":0,"index":16580},{"krate":0,"index":16582},{"krate":0,"index":16583},{"krate":0,"index":14867},{"krate":0,"index":14871},{"krate":0,"index":14874},{"krate":0,"index":14876},{"krate":0,"index":16585},{"krate":0,"index":16587},{"krate":0,"index":16589},{"krate":0,"index":16590},{"krate":0,"index":16592},{"krate":0,"index":16595},{"krate":0,"index":16596},{"krate":0,"index":16598},{"krate":0,"index":16599},{"krate":0,"index":14877},{"krate":0,"index":14881},{"krate":0,"index":14884},{"krate":0,"index":14886},{"krate":0,"index":16601},{"krate":0,"index":16603},{"krate":0,"index":16605},{"krate":0,"index":16606},{"krate":0,"index":16608},{"krate":0,"index":16611},{"krate":0,"index":16612},{"krate":0,"index":16614},{"krate":0,"index":16615},{"krate":0,"index":14887},{"krate":0,"index":14891},{"krate":0,"index":14894},{"krate":0,"index":14896},{"krate":0,"index":16617},{"krate":0,"index":16619},{"krate":0,"index":16621},{"krate":0,"index":16622},{"krate":0,"index":16624},{"krate":0,"index":16627},{"krate":0,"index":16628},{"krate":0,"index":16630},{"krate":0,"index":16631},{"krate":0,"index":14897},{"krate":0,"index":14901},{"krate":0,"index":14904},{"krate":0,"index":14906},{"krate":0,"index":16633},{"krate":0,"index":16635},{"krate":0,"index":16637},{"krate":0,"index":16638},{"krate":0,"index":16640},{"krate":0,"index":16643},{"krate":0,"index":16644},{"krate":0,"index":16646},{"krate":0,"index":16647},{"krate":0,"index":14907},{"krate":0,"index":14911},{"krate":0,"index":14914},{"krate":0,"index":14916},{"krate":0,"index":16649},{"krate":0,"index":16651},{"krate":0,"index":16653},{"krate":0,"index":16654},{"krate":0,"index":16656},{"krate":0,"index":16659},{"krate":0,"index":16660},{"krate":0,"index":16662},{"krate":0,"index":16663},{"krate":0,"index":14917},{"krate":0,"index":14921},{"krate":0,"index":14924},{"krate":0,"index":14926},{"krate":0,"index":16665},{"krate":0,"index":16667},{"krate":0,"index":16669},{"krate":0,"index":16670},{"krate":0,"index":16672},{"krate":0,"index":16675},{"krate":0,"index":16676},{"krate":0,"index":16678},{"krate":0,"index":16679},{"krate":0,"index":14927},{"krate":0,"index":14931},{"krate":0,"index":14934},{"krate":0,"index":14936},{"krate":0,"index":16681},{"krate":0,"index":16683},{"krate":0,"index":16685},{"krate":0,"index":16686},{"krate":0,"index":16688},{"krate":0,"index":16691},{"krate":0,"index":16692},{"krate":0,"index":16694},{"krate":0,"index":16695},{"krate":0,"index":14937},{"krate":0,"index":14941},{"krate":0,"index":14944},{"krate":0,"index":14946},{"krate":0,"index":16697},{"krate":0,"index":16699},{"krate":0,"index":16701},{"krate":0,"index":16702},{"krate":0,"index":16704},{"krate":0,"index":16707},{"krate":0,"index":16708},{"krate":0,"index":16710},{"krate":0,"index":16711},{"krate":0,"index":14947},{"krate":0,"index":14951},{"krate":0,"index":14954},{"krate":0,"index":14956},{"krate":0,"index":16713},{"krate":0,"index":16715},{"krate":0,"index":16717},{"krate":0,"index":16718},{"krate":0,"index":16720},{"krate":0,"index":16723},{"krate":0,"index":16724},{"krate":0,"index":16726},{"krate":0,"index":16727},{"krate":0,"index":14957},{"krate":0,"index":14961},{"krate":0,"index":14964},{"krate":0,"index":14966},{"krate":0,"index":16729},{"krate":0,"index":16731},{"krate":0,"index":16733},{"krate":0,"index":16734},{"krate":0,"index":16736},{"krate":0,"index":16739},{"krate":0,"index":16740},{"krate":0,"index":16742},{"krate":0,"index":16743},{"krate":0,"index":14967},{"krate":0,"index":14971},{"krate":0,"index":14974},{"krate":0,"index":14976},{"krate":0,"index":16745},{"krate":0,"index":16747},{"krate":0,"index":16749},{"krate":0,"index":16750},{"krate":0,"index":16752},{"krate":0,"index":16755},{"krate":0,"index":16756},{"krate":0,"index":16758},{"krate":0,"index":16759},{"krate":0,"index":14977},{"krate":0,"index":14981},{"krate":0,"index":14984},{"krate":0,"index":14986},{"krate":0,"index":16761},{"krate":0,"index":16763},{"krate":0,"index":16765},{"krate":0,"index":16766},{"krate":0,"index":16768},{"krate":0,"index":16771},{"krate":0,"index":16772},{"krate":0,"index":16774},{"krate":0,"index":16775},{"krate":0,"index":14987},{"krate":0,"index":14991},{"krate":0,"index":14994},{"krate":0,"index":14996},{"krate":0,"index":16777},{"krate":0,"index":16779},{"krate":0,"index":16781},{"krate":0,"index":16782},{"krate":0,"index":16784},{"krate":0,"index":16787},{"krate":0,"index":16788},{"krate":0,"index":16790},{"krate":0,"index":16791},{"krate":0,"index":14997},{"krate":0,"index":15001},{"krate":0,"index":15004},{"krate":0,"index":15006},{"krate":0,"index":16793},{"krate":0,"index":16795},{"krate":0,"index":16797},{"krate":0,"index":16798},{"krate":0,"index":16800},{"krate":0,"index":16803},{"krate":0,"index":16804},{"krate":0,"index":16806},{"krate":0,"index":16807},{"krate":0,"index":15007},{"krate":0,"index":15011},{"krate":0,"index":15014},{"krate":0,"index":15016},{"krate":0,"index":16809},{"krate":0,"index":16811},{"krate":0,"index":16813},{"krate":0,"index":16814},{"krate":0,"index":16816},{"krate":0,"index":16819},{"krate":0,"index":16820},{"krate":0,"index":16822},{"krate":0,"index":16823},{"krate":0,"index":15017},{"krate":0,"index":15021},{"krate":0,"index":15024},{"krate":0,"index":15026},{"krate":0,"index":16825},{"krate":0,"index":16827},{"krate":0,"index":16829},{"krate":0,"index":16830},{"krate":0,"index":16832},{"krate":0,"index":16835},{"krate":0,"index":16836},{"krate":0,"index":16838},{"krate":0,"index":16839},{"krate":0,"index":15027},{"krate":0,"index":15031},{"krate":0,"index":15034},{"krate":0,"index":15036},{"krate":0,"index":16841},{"krate":0,"index":16843},{"krate":0,"index":16845},{"krate":0,"index":16846},{"krate":0,"index":16848},{"krate":0,"index":16851},{"krate":0,"index":16852},{"krate":0,"index":16854},{"krate":0,"index":16855},{"krate":0,"index":15037},{"krate":0,"index":15041},{"krate":0,"index":15044},{"krate":0,"index":15046},{"krate":0,"index":16857},{"krate":0,"index":16859},{"krate":0,"index":16861},{"krate":0,"index":16862},{"krate":0,"index":16864},{"krate":0,"index":16867},{"krate":0,"index":16868},{"krate":0,"index":16870},{"krate":0,"index":16871},{"krate":0,"index":15047},{"krate":0,"index":15051},{"krate":0,"index":15054},{"krate":0,"index":15056},{"krate":0,"index":16873},{"krate":0,"index":16875},{"krate":0,"index":16877},{"krate":0,"index":16878},{"krate":0,"index":16880},{"krate":0,"index":16883},{"krate":0,"index":16884},{"krate":0,"index":16886},{"krate":0,"index":16887},{"krate":0,"index":15057},{"krate":0,"index":15061},{"krate":0,"index":15064},{"krate":0,"index":15066},{"krate":0,"index":16889},{"krate":0,"index":16891},{"krate":0,"index":16893},{"krate":0,"index":16894},{"krate":0,"index":16896},{"krate":0,"index":16899},{"krate":0,"index":16900},{"krate":0,"index":16902},{"krate":0,"index":16903},{"krate":0,"index":15067},{"krate":0,"index":15071},{"krate":0,"index":15074},{"krate":0,"index":15076},{"krate":0,"index":16905},{"krate":0,"index":16907},{"krate":0,"index":16909},{"krate":0,"index":16910},{"krate":0,"index":16912},{"krate":0,"index":16915},{"krate":0,"index":16916},{"krate":0,"index":16918},{"krate":0,"index":16919},{"krate":0,"index":15077},{"krate":0,"index":15081},{"krate":0,"index":15084},{"krate":0,"index":15086},{"krate":0,"index":16921},{"krate":0,"index":16923},{"krate":0,"index":16925},{"krate":0,"index":16926},{"krate":0,"index":16928},{"krate":0,"index":16931},{"krate":0,"index":16932},{"krate":0,"index":16934},{"krate":0,"index":16935},{"krate":0,"index":15087},{"krate":0,"index":15091},{"krate":0,"index":15094},{"krate":0,"index":15096},{"krate":0,"index":16937},{"krate":0,"index":16939},{"krate":0,"index":16941},{"krate":0,"index":16942},{"krate":0,"index":16944},{"krate":0,"index":16947},{"krate":0,"index":16948},{"krate":0,"index":16950},{"krate":0,"index":16951},{"krate":0,"index":15097},{"krate":0,"index":15101},{"krate":0,"index":15104},{"krate":0,"index":15106},{"krate":0,"index":16953},{"krate":0,"index":16955},{"krate":0,"index":16957},{"krate":0,"index":16958},{"krate":0,"index":16960},{"krate":0,"index":16963},{"krate":0,"index":16964},{"krate":0,"index":16966},{"krate":0,"index":16967},{"krate":0,"index":15107},{"krate":0,"index":15111},{"krate":0,"index":15114},{"krate":0,"index":15116},{"krate":0,"index":16969},{"krate":0,"index":16971},{"krate":0,"index":16973},{"krate":0,"index":16974},{"krate":0,"index":16976},{"krate":0,"index":16979},{"krate":0,"index":16980},{"krate":0,"index":16982},{"krate":0,"index":16983},{"krate":0,"index":15117},{"krate":0,"index":15121},{"krate":0,"index":15124},{"krate":0,"index":15126},{"krate":0,"index":16985},{"krate":0,"index":16987},{"krate":0,"index":16989},{"krate":0,"index":16990},{"krate":0,"index":16992},{"krate":0,"index":16995},{"krate":0,"index":16996},{"krate":0,"index":16998},{"krate":0,"index":16999},{"krate":0,"index":15127},{"krate":0,"index":15131},{"krate":0,"index":15134},{"krate":0,"index":15136},{"krate":0,"index":17001},{"krate":0,"index":17003},{"krate":0,"index":17005},{"krate":0,"index":17006},{"krate":0,"index":17008},{"krate":0,"index":17011},{"krate":0,"index":17012},{"krate":0,"index":17014},{"krate":0,"index":17015},{"krate":0,"index":15137},{"krate":0,"index":15141},{"krate":0,"index":15144},{"krate":0,"index":15146},{"krate":0,"index":17017},{"krate":0,"index":17019},{"krate":0,"index":17021},{"krate":0,"index":17022},{"krate":0,"index":17024},{"krate":0,"index":17027},{"krate":0,"index":17028},{"krate":0,"index":17030},{"krate":0,"index":17031},{"krate":0,"index":15147},{"krate":0,"index":15151},{"krate":0,"index":15154},{"krate":0,"index":15156},{"krate":0,"index":17033},{"krate":0,"index":17035},{"krate":0,"index":17037},{"krate":0,"index":17038},{"krate":0,"index":17040},{"krate":0,"index":17043},{"krate":0,"index":17044},{"krate":0,"index":17046},{"krate":0,"index":17047},{"krate":0,"index":15157},{"krate":0,"index":15161},{"krate":0,"index":15164},{"krate":0,"index":15166},{"krate":0,"index":17049},{"krate":0,"index":17051},{"krate":0,"index":17053},{"krate":0,"index":17054},{"krate":0,"index":17056},{"krate":0,"index":17059},{"krate":0,"index":17060},{"krate":0,"index":17062},{"krate":0,"index":17063},{"krate":0,"index":15167},{"krate":0,"index":15171},{"krate":0,"index":15174},{"krate":0,"index":15176},{"krate":0,"index":17065},{"krate":0,"index":17067},{"krate":0,"index":17069},{"krate":0,"index":17070},{"krate":0,"index":17072},{"krate":0,"index":17075},{"krate":0,"index":17076},{"krate":0,"index":17078},{"krate":0,"index":17079},{"krate":0,"index":15177},{"krate":0,"index":15181},{"krate":0,"index":15184},{"krate":0,"index":15186},{"krate":0,"index":17081},{"krate":0,"index":17083},{"krate":0,"index":17085},{"krate":0,"index":17086},{"krate":0,"index":17088},{"krate":0,"index":17091},{"krate":0,"index":17092},{"krate":0,"index":17094},{"krate":0,"index":17095},{"krate":0,"index":15187},{"krate":0,"index":15191},{"krate":0,"index":15194},{"krate":0,"index":15196},{"krate":0,"index":17097},{"krate":0,"index":17099},{"krate":0,"index":17101},{"krate":0,"index":17102},{"krate":0,"index":17104},{"krate":0,"index":17107},{"krate":0,"index":17108},{"krate":0,"index":17110},{"krate":0,"index":17111},{"krate":0,"index":15197},{"krate":0,"index":15201},{"krate":0,"index":15204},{"krate":0,"index":15206},{"krate":0,"index":17113},{"krate":0,"index":17115},{"krate":0,"index":17117},{"krate":0,"index":17118},{"krate":0,"index":17120},{"krate":0,"index":17123},{"krate":0,"index":17124},{"krate":0,"index":17126},{"krate":0,"index":17127},{"krate":0,"index":15207},{"krate":0,"index":15211},{"krate":0,"index":15214},{"krate":0,"index":15216},{"krate":0,"index":17129},{"krate":0,"index":17131},{"krate":0,"index":17133},{"krate":0,"index":17134},{"krate":0,"index":17136},{"krate":0,"index":17139},{"krate":0,"index":17140},{"krate":0,"index":17142},{"krate":0,"index":17143},{"krate":0,"index":15217},{"krate":0,"index":15221},{"krate":0,"index":15224},{"krate":0,"index":15226},{"krate":0,"index":17145},{"krate":0,"index":17147},{"krate":0,"index":17149},{"krate":0,"index":17150},{"krate":0,"index":17152},{"krate":0,"index":17155},{"krate":0,"index":17156},{"krate":0,"index":17158},{"krate":0,"index":17159},{"krate":0,"index":15227},{"krate":0,"index":15231},{"krate":0,"index":15234},{"krate":0,"index":15236},{"krate":0,"index":17161},{"krate":0,"index":17163},{"krate":0,"index":17165},{"krate":0,"index":17166},{"krate":0,"index":17168},{"krate":0,"index":17171},{"krate":0,"index":17172},{"krate":0,"index":17174},{"krate":0,"index":17175},{"krate":0,"index":15237},{"krate":0,"index":15241},{"krate":0,"index":15244},{"krate":0,"index":15246},{"krate":0,"index":17177},{"krate":0,"index":17179},{"krate":0,"index":17181},{"krate":0,"index":17182},{"krate":0,"index":17184},{"krate":0,"index":17187},{"krate":0,"index":17188},{"krate":0,"index":17190},{"krate":0,"index":17191},{"krate":0,"index":15247},{"krate":0,"index":15251},{"krate":0,"index":15254},{"krate":0,"index":15256},{"krate":0,"index":17193},{"krate":0,"index":17195},{"krate":0,"index":17197},{"krate":0,"index":17198},{"krate":0,"index":17200},{"krate":0,"index":17203},{"krate":0,"index":17204},{"krate":0,"index":17206},{"krate":0,"index":17207},{"krate":0,"index":15257},{"krate":0,"index":15261},{"krate":0,"index":15264},{"krate":0,"index":15266},{"krate":0,"index":17209},{"krate":0,"index":17211},{"krate":0,"index":17213},{"krate":0,"index":17214},{"krate":0,"index":17216},{"krate":0,"index":17219},{"krate":0,"index":17220},{"krate":0,"index":17222},{"krate":0,"index":17223},{"krate":0,"index":15267},{"krate":0,"index":15271},{"krate":0,"index":15274},{"krate":0,"index":15276},{"krate":0,"index":17225},{"krate":0,"index":17227},{"krate":0,"index":17229},{"krate":0,"index":17230},{"krate":0,"index":17232},{"krate":0,"index":17235},{"krate":0,"index":17236},{"krate":0,"index":17238},{"krate":0,"index":17239},{"krate":0,"index":15277},{"krate":0,"index":15281},{"krate":0,"index":15284},{"krate":0,"index":15286},{"krate":0,"index":17241},{"krate":0,"index":17243},{"krate":0,"index":17245},{"krate":0,"index":17246},{"krate":0,"index":17248},{"krate":0,"index":17251},{"krate":0,"index":17252},{"krate":0,"index":17254},{"krate":0,"index":17255},{"krate":0,"index":15287},{"krate":0,"index":15291},{"krate":0,"index":15294},{"krate":0,"index":15296},{"krate":0,"index":17257},{"krate":0,"index":17259},{"krate":0,"index":17261},{"krate":0,"index":17262},{"krate":0,"index":17264},{"krate":0,"index":17267},{"krate":0,"index":17268},{"krate":0,"index":17270},{"krate":0,"index":17271},{"krate":0,"index":15297},{"krate":0,"index":15301},{"krate":0,"index":15304},{"krate":0,"index":15306},{"krate":0,"index":17273},{"krate":0,"index":17275},{"krate":0,"index":17277},{"krate":0,"index":17278},{"krate":0,"index":17280},{"krate":0,"index":17283},{"krate":0,"index":17284},{"krate":0,"index":17286},{"krate":0,"index":17287},{"krate":0,"index":15307},{"krate":0,"index":15311},{"krate":0,"index":15314},{"krate":0,"index":15316},{"krate":0,"index":17289},{"krate":0,"index":17291},{"krate":0,"index":17293},{"krate":0,"index":17294},{"krate":0,"index":17296},{"krate":0,"index":17299},{"krate":0,"index":17300},{"krate":0,"index":17302},{"krate":0,"index":17303},{"krate":0,"index":15317},{"krate":0,"index":15321},{"krate":0,"index":15324},{"krate":0,"index":15326},{"krate":0,"index":17305},{"krate":0,"index":17307},{"krate":0,"index":17309},{"krate":0,"index":17310},{"krate":0,"index":17312},{"krate":0,"index":17315},{"krate":0,"index":17316},{"krate":0,"index":17318},{"krate":0,"index":17319},{"krate":0,"index":15327},{"krate":0,"index":15331},{"krate":0,"index":15334},{"krate":0,"index":15336},{"krate":0,"index":17321},{"krate":0,"index":17323},{"krate":0,"index":17325},{"krate":0,"index":17326},{"krate":0,"index":17328},{"krate":0,"index":17331},{"krate":0,"index":17332},{"krate":0,"index":17334},{"krate":0,"index":17335},{"krate":0,"index":15337},{"krate":0,"index":15341},{"krate":0,"index":15344},{"krate":0,"index":15346},{"krate":0,"index":17337},{"krate":0,"index":17339},{"krate":0,"index":17341},{"krate":0,"index":17342},{"krate":0,"index":17344},{"krate":0,"index":17347},{"krate":0,"index":17348},{"krate":0,"index":17350},{"krate":0,"index":17351},{"krate":0,"index":15347},{"krate":0,"index":15351},{"krate":0,"index":15354},{"krate":0,"index":15356},{"krate":0,"index":17353},{"krate":0,"index":17355},{"krate":0,"index":17357},{"krate":0,"index":17358},{"krate":0,"index":17360},{"krate":0,"index":17363},{"krate":0,"index":17364},{"krate":0,"index":17366},{"krate":0,"index":17367},{"krate":0,"index":15357},{"krate":0,"index":15361},{"krate":0,"index":15364},{"krate":0,"index":15366},{"krate":0,"index":17369},{"krate":0,"index":17371},{"krate":0,"index":17373},{"krate":0,"index":17374},{"krate":0,"index":17376},{"krate":0,"index":17379},{"krate":0,"index":17380},{"krate":0,"index":17382},{"krate":0,"index":17383},{"krate":0,"index":15367},{"krate":0,"index":15371},{"krate":0,"index":15374},{"krate":0,"index":15376},{"krate":0,"index":17385},{"krate":0,"index":17387},{"krate":0,"index":17389},{"krate":0,"index":17390},{"krate":0,"index":17392},{"krate":0,"index":17395},{"krate":0,"index":17396},{"krate":0,"index":17398},{"krate":0,"index":17399},{"krate":0,"index":15377},{"krate":0,"index":15381},{"krate":0,"index":15384},{"krate":0,"index":15386},{"krate":0,"index":17401},{"krate":0,"index":17403},{"krate":0,"index":17405},{"krate":0,"index":17406},{"krate":0,"index":17408},{"krate":0,"index":17411},{"krate":0,"index":17412},{"krate":0,"index":17414},{"krate":0,"index":17415},{"krate":0,"index":15387},{"krate":0,"index":15391},{"krate":0,"index":15394},{"krate":0,"index":15396},{"krate":0,"index":17417},{"krate":0,"index":17419},{"krate":0,"index":17421},{"krate":0,"index":17422},{"krate":0,"index":17424},{"krate":0,"index":17427},{"krate":0,"index":17428},{"krate":0,"index":17430},{"krate":0,"index":17431},{"krate":0,"index":15397},{"krate":0,"index":15401},{"krate":0,"index":15404},{"krate":0,"index":15406},{"krate":0,"index":17433},{"krate":0,"index":17435},{"krate":0,"index":17437},{"krate":0,"index":17438},{"krate":0,"index":17440},{"krate":0,"index":17443},{"krate":0,"index":17444},{"krate":0,"index":17446},{"krate":0,"index":17447},{"krate":0,"index":15407},{"krate":0,"index":15411},{"krate":0,"index":15414},{"krate":0,"index":15416},{"krate":0,"index":681},{"krate":0,"index":690},{"krate":0,"index":701},{"krate":0,"index":711},{"krate":0,"index":719},{"krate":0,"index":723},{"krate":0,"index":729},{"krate":0,"index":734}],"decl_id":null,"docs":" Traits and tags for identifying the dimension of all algebraic entities.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":89002,"byte_end":89025,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"/ Traits and tags for identifying the dimension of all algebraic entities.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":89027,"byte_end":89103,"line_start":3,"line_end":3,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":13925},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":89522,"byte_end":89529,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"name":"Dynamic","qualname":"::base::dimension::Dynamic","value":"Dynamic {  }","parent":null,"children":[{"krate":0,"index":13926}],"decl_id":null,"docs":" Dim of dynamically-sized algebraic entities.\n","sig":null,"attributes":[{"value":"/ Dim of dynamically-sized algebraic entities.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":89417,"byte_end":89465,"line_start":16,"line_end":16,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":89634,"byte_end":89637,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<Dynamic>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A dynamic size equal to `value`.\n","sig":null,"attributes":[{"value":"/ A dynamic size equal to `value`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":89572,"byte_end":89608,"line_start":23,"line_end":23,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":89613,"byte_end":89622,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":644},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":90231,"byte_end":90240,"line_start":51,"line_end":51,"column_start":11,"column_end":20},"name":"IsDynamic","qualname":"::base::dimension::IsDynamic","value":"IsDynamic","parent":null,"children":[],"decl_id":null,"docs":" Trait implemented by `Dynamic`.\n","sig":null,"attributes":[{"value":"/ Trait implemented by `Dynamic`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":90185,"byte_end":90220,"line_start":50,"line_end":50,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":645},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":90334,"byte_end":90348,"line_start":53,"line_end":53,"column_start":11,"column_end":25},"name":"IsNotStaticOne","qualname":"::base::dimension::IsNotStaticOne","value":"IsNotStaticOne","parent":null,"children":[],"decl_id":null,"docs":" Trait implemented by `Dynamic` and type-level integers different from `U1`.\n","sig":null,"attributes":[{"value":"/ Trait implemented by `Dynamic` and type-level integers different from `U1`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":90244,"byte_end":90323,"line_start":52,"line_end":52,"column_start":1,"column_end":80}}]},{"kind":"Trait","id":{"krate":0,"index":648},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":90592,"byte_end":90595,"line_start":60,"line_end":60,"column_start":11,"column_end":14},"name":"Dim","qualname":"::base::dimension::Dim","value":"Dim: Any + Debug + Copy + PartialEq + Send + Sync","parent":null,"children":[{"krate":0,"index":649},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653}],"decl_id":null,"docs":" Trait implemented by any type that can be used as a dimension. This includes type-level\n integers and `Dynamic` (for dimensions not known at compile-time).\n","sig":null,"attributes":[{"value":"/ Trait implemented by any type that can be used as a dimension. This includes type-level","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":90419,"byte_end":90510,"line_start":58,"line_end":58,"column_start":1,"column_end":92}},{"value":"/ integers and `Dynamic` (for dimensions not known at compile-time).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":90511,"byte_end":90581,"line_start":59,"line_end":59,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":90673,"byte_end":90675,"line_start":62,"line_end":62,"column_start":8,"column_end":10},"name":"is","qualname":"::base::dimension::Dim::is","value":"pub fn is<D: Dim>() -> bool","parent":{"krate":0,"index":648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":90648,"byte_end":90665,"line_start":61,"line_end":61,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":90877,"byte_end":90889,"line_start":68,"line_end":68,"column_start":8,"column_end":20},"name":"try_to_usize","qualname":"::base::dimension::Dim::try_to_usize","value":"pub fn try_to_usize() -> Option<usize>","parent":{"krate":0,"index":648},"children":[],"decl_id":null,"docs":" Gets the compile-time value of `Self`. Returns `None` if it is not known, i.e., if `Self =\n Dynamic`.\n","sig":null,"attributes":[{"value":"/ Gets the compile-time value of `Self`. Returns `None` if it is not known, i.e., if `Self =","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":90757,"byte_end":90851,"line_start":66,"line_end":66,"column_start":5,"column_end":99}},{"value":"/ Dynamic`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":90856,"byte_end":90869,"line_start":67,"line_end":67,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":91047,"byte_end":91052,"line_start":72,"line_end":72,"column_start":8,"column_end":13},"name":"value","qualname":"::base::dimension::Dim::value","value":"pub fn value(&Self) -> usize","parent":{"krate":0,"index":648},"children":[],"decl_id":null,"docs":" Gets the run-time value of `self`. For type-level integers, this is the same as\n `Self::try_to_usize().unwrap()`.\n","sig":null,"attributes":[{"value":"/ Gets the run-time value of `self`. For type-level integers, this is the same as","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":90915,"byte_end":90998,"line_start":70,"line_end":70,"column_start":5,"column_end":88}},{"value":"/ `Self::try_to_usize().unwrap()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":91003,"byte_end":91039,"line_start":71,"line_end":71,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":91231,"byte_end":91241,"line_start":76,"line_end":76,"column_start":8,"column_end":18},"name":"from_usize","qualname":"::base::dimension::Dim::from_usize","value":"pub fn from_usize(usize) -> Self","parent":{"krate":0,"index":648},"children":[],"decl_id":null,"docs":" Builds an instance of `Self` from a run-time value. Panics if `Self` is a type-level\n integer and `dim != Self::try_to_usize().unwrap()`.\n","sig":null,"attributes":[{"value":"/ Builds an instance of `Self` from a run-time value. Panics if `Self` is a type-level","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":91075,"byte_end":91163,"line_start":74,"line_end":74,"column_start":5,"column_end":93}},{"value":"/ integer and `dim != Self::try_to_usize().unwrap()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":91168,"byte_end":91223,"line_start":75,"line_end":75,"column_start":5,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":13939},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":93796,"byte_end":93802,"line_start":184,"line_end":184,"column_start":45,"column_end":51},"name":"DimSum","qualname":"::base::dimension::DimSum","value":"<D1 as DimAdd<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":13942},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":93756,"byte_end":93762,"line_start":184,"line_end":184,"column_start":5,"column_end":11},"name":"DimAdd","qualname":"::base::dimension::DimAdd","value":"DimAdd<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":13944},{"krate":0,"index":13945}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":13945},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":93781,"byte_end":93784,"line_start":184,"line_end":184,"column_start":30,"column_end":33},"name":"add","qualname":"::base::dimension::DimAdd::add","value":"pub fn add(Self, D) -> Self::Output","parent":{"krate":0,"index":13942},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":13959},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":93808,"byte_end":93818,"line_start":184,"line_end":184,"column_start":57,"column_end":67},"name":"DimNameSum","qualname":"::base::dimension::DimNameSum","value":"<D1 as DimNameAdd<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":13962},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":93764,"byte_end":93774,"line_start":184,"line_end":184,"column_start":13,"column_end":23},"name":"DimNameAdd","qualname":"::base::dimension::DimNameAdd","value":"DimNameAdd<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":13964},{"krate":0,"index":13965}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":13965},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":93781,"byte_end":93784,"line_start":184,"line_end":184,"column_start":30,"column_end":33},"name":"add","qualname":"::base::dimension::DimNameAdd::add","value":"pub fn add(Self, D) -> Self::Output","parent":{"krate":0,"index":13962},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":13971},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":93873,"byte_end":93880,"line_start":185,"line_end":185,"column_start":45,"column_end":52},"name":"DimProd","qualname":"::base::dimension::DimProd","value":"<D1 as DimMul<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":13974},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":93833,"byte_end":93839,"line_start":185,"line_end":185,"column_start":5,"column_end":11},"name":"DimMul","qualname":"::base::dimension::DimMul","value":"DimMul<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":13976},{"krate":0,"index":13977}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":13977},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":93858,"byte_end":93861,"line_start":185,"line_end":185,"column_start":30,"column_end":33},"name":"mul","qualname":"::base::dimension::DimMul::mul","value":"pub fn mul(Self, D) -> Self::Output","parent":{"krate":0,"index":13974},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":13991},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":93885,"byte_end":93896,"line_start":185,"line_end":185,"column_start":57,"column_end":68},"name":"DimNameProd","qualname":"::base::dimension::DimNameProd","value":"<D1 as DimNameMul<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":13994},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":93841,"byte_end":93851,"line_start":185,"line_end":185,"column_start":13,"column_end":23},"name":"DimNameMul","qualname":"::base::dimension::DimNameMul","value":"DimNameMul<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":13996},{"krate":0,"index":13997}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":13997},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":93858,"byte_end":93861,"line_start":185,"line_end":185,"column_start":30,"column_end":33},"name":"mul","qualname":"::base::dimension::DimNameMul::mul","value":"pub fn mul(Self, D) -> Self::Output","parent":{"krate":0,"index":13994},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":14003},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":93951,"byte_end":93958,"line_start":186,"line_end":186,"column_start":45,"column_end":52},"name":"DimDiff","qualname":"::base::dimension::DimDiff","value":"<D1 as DimSub<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":14006},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":93911,"byte_end":93917,"line_start":186,"line_end":186,"column_start":5,"column_end":11},"name":"DimSub","qualname":"::base::dimension::DimSub","value":"DimSub<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":14008},{"krate":0,"index":14009}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":14009},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":93936,"byte_end":93939,"line_start":186,"line_end":186,"column_start":30,"column_end":33},"name":"sub","qualname":"::base::dimension::DimSub::sub","value":"pub fn sub(Self, D) -> Self::Output","parent":{"krate":0,"index":14006},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":14023},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":93963,"byte_end":93974,"line_start":186,"line_end":186,"column_start":57,"column_end":68},"name":"DimNameDiff","qualname":"::base::dimension::DimNameDiff","value":"<D1 as DimNameSub<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":14026},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":93919,"byte_end":93929,"line_start":186,"line_end":186,"column_start":13,"column_end":23},"name":"DimNameSub","qualname":"::base::dimension::DimNameSub","value":"DimNameSub<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":14028},{"krate":0,"index":14029}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":14029},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":93936,"byte_end":93939,"line_start":186,"line_end":186,"column_start":30,"column_end":33},"name":"sub","qualname":"::base::dimension::DimNameSub::sub","value":"pub fn sub(Self, D) -> Self::Output","parent":{"krate":0,"index":14026},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":14035},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":94029,"byte_end":94036,"line_start":187,"line_end":187,"column_start":45,"column_end":52},"name":"DimQuot","qualname":"::base::dimension::DimQuot","value":"<D1 as DimDiv<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":14038},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":93989,"byte_end":93995,"line_start":187,"line_end":187,"column_start":5,"column_end":11},"name":"DimDiv","qualname":"::base::dimension::DimDiv","value":"DimDiv<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":14040},{"krate":0,"index":14041}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":14041},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":94014,"byte_end":94017,"line_start":187,"line_end":187,"column_start":30,"column_end":33},"name":"div","qualname":"::base::dimension::DimDiv::div","value":"pub fn div(Self, D) -> Self::Output","parent":{"krate":0,"index":14038},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":14055},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":94041,"byte_end":94052,"line_start":187,"line_end":187,"column_start":57,"column_end":68},"name":"DimNameQuot","qualname":"::base::dimension::DimNameQuot","value":"<D1 as DimNameDiv<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":14058},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":93997,"byte_end":94007,"line_start":187,"line_end":187,"column_start":13,"column_end":23},"name":"DimNameDiv","qualname":"::base::dimension::DimNameDiv","value":"DimNameDiv<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":14060},{"krate":0,"index":14061}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":14061},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":94014,"byte_end":94017,"line_start":187,"line_end":187,"column_start":30,"column_end":33},"name":"div","qualname":"::base::dimension::DimNameDiv::div","value":"pub fn div(Self, D) -> Self::Output","parent":{"krate":0,"index":14058},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":14067},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":94107,"byte_end":94117,"line_start":188,"line_end":188,"column_start":45,"column_end":55},"name":"DimMinimum","qualname":"::base::dimension::DimMinimum","value":"<D1 as DimMin<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":14070},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":94067,"byte_end":94073,"line_start":188,"line_end":188,"column_start":5,"column_end":11},"name":"DimMin","qualname":"::base::dimension::DimMin","value":"DimMin<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":14072},{"krate":0,"index":14073}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":14073},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":94092,"byte_end":94095,"line_start":188,"line_end":188,"column_start":30,"column_end":33},"name":"min","qualname":"::base::dimension::DimMin::min","value":"pub fn min(Self, D) -> Self::Output","parent":{"krate":0,"index":14070},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":14087},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":94119,"byte_end":94133,"line_start":188,"line_end":188,"column_start":57,"column_end":71},"name":"DimNameMinimum","qualname":"::base::dimension::DimNameMinimum","value":"<D1 as DimNameMin<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":14090},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":94075,"byte_end":94085,"line_start":188,"line_end":188,"column_start":13,"column_end":23},"name":"DimNameMin","qualname":"::base::dimension::DimNameMin","value":"DimNameMin<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":14092},{"krate":0,"index":14093}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":14093},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":94092,"byte_end":94095,"line_start":188,"line_end":188,"column_start":30,"column_end":33},"name":"min","qualname":"::base::dimension::DimNameMin::min","value":"pub fn min(Self, D) -> Self::Output","parent":{"krate":0,"index":14090},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":14099},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":94188,"byte_end":94198,"line_start":189,"line_end":189,"column_start":45,"column_end":55},"name":"DimMaximum","qualname":"::base::dimension::DimMaximum","value":"<D1 as DimMax<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":14102},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":94148,"byte_end":94154,"line_start":189,"line_end":189,"column_start":5,"column_end":11},"name":"DimMax","qualname":"::base::dimension::DimMax","value":"DimMax<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":14104},{"krate":0,"index":14105}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":14105},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":94173,"byte_end":94176,"line_start":189,"line_end":189,"column_start":30,"column_end":33},"name":"max","qualname":"::base::dimension::DimMax::max","value":"pub fn max(Self, D) -> Self::Output","parent":{"krate":0,"index":14102},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":14119},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":94200,"byte_end":94214,"line_start":189,"line_end":189,"column_start":57,"column_end":71},"name":"DimNameMaximum","qualname":"::base::dimension::DimNameMaximum","value":"<D1 as DimNameMax<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":14122},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":94156,"byte_end":94166,"line_start":189,"line_end":189,"column_start":13,"column_end":23},"name":"DimNameMax","qualname":"::base::dimension::DimNameMax","value":"DimNameMax<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":14124},{"krate":0,"index":14125}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":14125},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":94173,"byte_end":94176,"line_start":189,"line_end":189,"column_start":30,"column_end":33},"name":"max","qualname":"::base::dimension::DimNameMax::max","value":"pub fn max(Self, D) -> Self::Output","parent":{"krate":0,"index":14122},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":665},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":94297,"byte_end":94304,"line_start":193,"line_end":193,"column_start":11,"column_end":18},"name":"DimName","qualname":"::base::dimension::DimName","value":"DimName: Dim","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668}],"decl_id":null,"docs":" Trait implemented exclusively by type-level integers.\n","sig":null,"attributes":[{"value":"/ Trait implemented exclusively by type-level integers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":94229,"byte_end":94286,"line_start":192,"line_end":192,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":666},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":94321,"byte_end":94326,"line_start":194,"line_end":194,"column_start":10,"column_end":15},"name":"Value","qualname":"::base::dimension::DimName::Value","value":"type Value: NamedDim<Name = Self>;","parent":{"krate":0,"index":665},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":94423,"byte_end":94427,"line_start":197,"line_end":197,"column_start":8,"column_end":12},"name":"name","qualname":"::base::dimension::DimName::name","value":"pub fn name() -> Self","parent":{"krate":0,"index":665},"children":[],"decl_id":null,"docs":" The name of this dimension, i.e., the singleton `Self`.\n","sig":null,"attributes":[{"value":"/ The name of this dimension, i.e., the singleton `Self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":94356,"byte_end":94415,"line_start":196,"line_end":196,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":94546,"byte_end":94549,"line_start":202,"line_end":202,"column_start":8,"column_end":11},"name":"dim","qualname":"::base::dimension::DimName::dim","value":"pub fn dim() -> usize","parent":{"krate":0,"index":665},"children":[],"decl_id":null,"docs":" The value of this dimension.\n","sig":null,"attributes":[{"value":"/ The value of this dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":94492,"byte_end":94524,"line_start":200,"line_end":200,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":94529,"byte_end":94538,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":669},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":94614,"byte_end":94622,"line_start":207,"line_end":207,"column_start":11,"column_end":19},"name":"NamedDim","qualname":"::base::dimension::NamedDim","value":"NamedDim: Sized + Any + Unsigned","parent":null,"children":[{"krate":0,"index":670}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":670},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":94658,"byte_end":94662,"line_start":208,"line_end":208,"column_start":10,"column_end":14},"name":"Name","qualname":"::base::dimension::NamedDim::Name","value":"type Name: DimName<Value = Self>;","parent":{"krate":0,"index":669},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14131},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":94873,"byte_end":94875,"line_start":214,"line_end":214,"column_start":12,"column_end":14},"name":"U1","qualname":"::base::dimension::U1","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension with a value of `1`.\n","sig":null,"attributes":[{"value":"/ A type level dimension with a value of `1`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":94690,"byte_end":94737,"line_start":211,"line_end":211,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":15417},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96436,"byte_end":96438,"line_start":291,"line_end":291,"column_start":5,"column_end":7},"name":"U0","qualname":"::base::dimension::U0","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15433},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96448,"byte_end":96450,"line_start":291,"line_end":291,"column_start":17,"column_end":19},"name":"U2","qualname":"::base::dimension::U2","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15449},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96452,"byte_end":96454,"line_start":291,"line_end":291,"column_start":21,"column_end":23},"name":"U3","qualname":"::base::dimension::U3","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15465},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96456,"byte_end":96458,"line_start":291,"line_end":291,"column_start":25,"column_end":27},"name":"U4","qualname":"::base::dimension::U4","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15481},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96460,"byte_end":96462,"line_start":291,"line_end":291,"column_start":29,"column_end":31},"name":"U5","qualname":"::base::dimension::U5","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15497},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96464,"byte_end":96466,"line_start":291,"line_end":291,"column_start":33,"column_end":35},"name":"U6","qualname":"::base::dimension::U6","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15513},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96468,"byte_end":96470,"line_start":291,"line_end":291,"column_start":37,"column_end":39},"name":"U7","qualname":"::base::dimension::U7","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15529},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96472,"byte_end":96474,"line_start":291,"line_end":291,"column_start":41,"column_end":43},"name":"U8","qualname":"::base::dimension::U8","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15545},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96476,"byte_end":96478,"line_start":291,"line_end":291,"column_start":45,"column_end":47},"name":"U9","qualname":"::base::dimension::U9","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15561},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96480,"byte_end":96483,"line_start":291,"line_end":291,"column_start":49,"column_end":52},"name":"U10","qualname":"::base::dimension::U10","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15577},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96485,"byte_end":96488,"line_start":291,"line_end":291,"column_start":54,"column_end":57},"name":"U11","qualname":"::base::dimension::U11","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15593},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96490,"byte_end":96493,"line_start":291,"line_end":291,"column_start":59,"column_end":62},"name":"U12","qualname":"::base::dimension::U12","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15609},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96495,"byte_end":96498,"line_start":291,"line_end":291,"column_start":64,"column_end":67},"name":"U13","qualname":"::base::dimension::U13","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15625},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96500,"byte_end":96503,"line_start":291,"line_end":291,"column_start":69,"column_end":72},"name":"U14","qualname":"::base::dimension::U14","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15641},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96505,"byte_end":96508,"line_start":291,"line_end":291,"column_start":74,"column_end":77},"name":"U15","qualname":"::base::dimension::U15","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15657},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96510,"byte_end":96513,"line_start":291,"line_end":291,"column_start":79,"column_end":82},"name":"U16","qualname":"::base::dimension::U16","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15673},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96515,"byte_end":96518,"line_start":291,"line_end":291,"column_start":84,"column_end":87},"name":"U17","qualname":"::base::dimension::U17","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15689},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96520,"byte_end":96523,"line_start":291,"line_end":291,"column_start":89,"column_end":92},"name":"U18","qualname":"::base::dimension::U18","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15705},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96529,"byte_end":96532,"line_start":292,"line_end":292,"column_start":5,"column_end":8},"name":"U19","qualname":"::base::dimension::U19","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15721},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96534,"byte_end":96537,"line_start":292,"line_end":292,"column_start":10,"column_end":13},"name":"U20","qualname":"::base::dimension::U20","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15737},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96539,"byte_end":96542,"line_start":292,"line_end":292,"column_start":15,"column_end":18},"name":"U21","qualname":"::base::dimension::U21","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15753},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96544,"byte_end":96547,"line_start":292,"line_end":292,"column_start":20,"column_end":23},"name":"U22","qualname":"::base::dimension::U22","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15769},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96549,"byte_end":96552,"line_start":292,"line_end":292,"column_start":25,"column_end":28},"name":"U23","qualname":"::base::dimension::U23","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15785},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96554,"byte_end":96557,"line_start":292,"line_end":292,"column_start":30,"column_end":33},"name":"U24","qualname":"::base::dimension::U24","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15801},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96559,"byte_end":96562,"line_start":292,"line_end":292,"column_start":35,"column_end":38},"name":"U25","qualname":"::base::dimension::U25","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15817},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96564,"byte_end":96567,"line_start":292,"line_end":292,"column_start":40,"column_end":43},"name":"U26","qualname":"::base::dimension::U26","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15833},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96569,"byte_end":96572,"line_start":292,"line_end":292,"column_start":45,"column_end":48},"name":"U27","qualname":"::base::dimension::U27","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15849},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96574,"byte_end":96577,"line_start":292,"line_end":292,"column_start":50,"column_end":53},"name":"U28","qualname":"::base::dimension::U28","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15865},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96579,"byte_end":96582,"line_start":292,"line_end":292,"column_start":55,"column_end":58},"name":"U29","qualname":"::base::dimension::U29","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15881},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96584,"byte_end":96587,"line_start":292,"line_end":292,"column_start":60,"column_end":63},"name":"U30","qualname":"::base::dimension::U30","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15897},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96589,"byte_end":96592,"line_start":292,"line_end":292,"column_start":65,"column_end":68},"name":"U31","qualname":"::base::dimension::U31","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15913},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96594,"byte_end":96597,"line_start":292,"line_end":292,"column_start":70,"column_end":73},"name":"U32","qualname":"::base::dimension::U32","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15929},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96599,"byte_end":96602,"line_start":292,"line_end":292,"column_start":75,"column_end":78},"name":"U33","qualname":"::base::dimension::U33","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15945},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96604,"byte_end":96607,"line_start":292,"line_end":292,"column_start":80,"column_end":83},"name":"U34","qualname":"::base::dimension::U34","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15961},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96609,"byte_end":96612,"line_start":292,"line_end":292,"column_start":85,"column_end":88},"name":"U35","qualname":"::base::dimension::U35","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15977},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96614,"byte_end":96617,"line_start":292,"line_end":292,"column_start":90,"column_end":93},"name":"U36","qualname":"::base::dimension::U36","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15993},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96619,"byte_end":96622,"line_start":292,"line_end":292,"column_start":95,"column_end":98},"name":"U37","qualname":"::base::dimension::U37","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16009},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96628,"byte_end":96631,"line_start":293,"line_end":293,"column_start":5,"column_end":8},"name":"U38","qualname":"::base::dimension::U38","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16025},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96633,"byte_end":96636,"line_start":293,"line_end":293,"column_start":10,"column_end":13},"name":"U39","qualname":"::base::dimension::U39","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16041},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96638,"byte_end":96641,"line_start":293,"line_end":293,"column_start":15,"column_end":18},"name":"U40","qualname":"::base::dimension::U40","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16057},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96643,"byte_end":96646,"line_start":293,"line_end":293,"column_start":20,"column_end":23},"name":"U41","qualname":"::base::dimension::U41","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16073},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96648,"byte_end":96651,"line_start":293,"line_end":293,"column_start":25,"column_end":28},"name":"U42","qualname":"::base::dimension::U42","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16089},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96653,"byte_end":96656,"line_start":293,"line_end":293,"column_start":30,"column_end":33},"name":"U43","qualname":"::base::dimension::U43","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16105},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96658,"byte_end":96661,"line_start":293,"line_end":293,"column_start":35,"column_end":38},"name":"U44","qualname":"::base::dimension::U44","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16121},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96663,"byte_end":96666,"line_start":293,"line_end":293,"column_start":40,"column_end":43},"name":"U45","qualname":"::base::dimension::U45","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16137},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96668,"byte_end":96671,"line_start":293,"line_end":293,"column_start":45,"column_end":48},"name":"U46","qualname":"::base::dimension::U46","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16153},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96673,"byte_end":96676,"line_start":293,"line_end":293,"column_start":50,"column_end":53},"name":"U47","qualname":"::base::dimension::U47","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16169},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96678,"byte_end":96681,"line_start":293,"line_end":293,"column_start":55,"column_end":58},"name":"U48","qualname":"::base::dimension::U48","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16185},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96683,"byte_end":96686,"line_start":293,"line_end":293,"column_start":60,"column_end":63},"name":"U49","qualname":"::base::dimension::U49","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16201},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96688,"byte_end":96691,"line_start":293,"line_end":293,"column_start":65,"column_end":68},"name":"U50","qualname":"::base::dimension::U50","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16217},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96693,"byte_end":96696,"line_start":293,"line_end":293,"column_start":70,"column_end":73},"name":"U51","qualname":"::base::dimension::U51","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16233},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96698,"byte_end":96701,"line_start":293,"line_end":293,"column_start":75,"column_end":78},"name":"U52","qualname":"::base::dimension::U52","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16249},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96703,"byte_end":96706,"line_start":293,"line_end":293,"column_start":80,"column_end":83},"name":"U53","qualname":"::base::dimension::U53","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16265},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96708,"byte_end":96711,"line_start":293,"line_end":293,"column_start":85,"column_end":88},"name":"U54","qualname":"::base::dimension::U54","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16281},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96713,"byte_end":96716,"line_start":293,"line_end":293,"column_start":90,"column_end":93},"name":"U55","qualname":"::base::dimension::U55","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16297},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96718,"byte_end":96721,"line_start":293,"line_end":293,"column_start":95,"column_end":98},"name":"U56","qualname":"::base::dimension::U56","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16313},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96727,"byte_end":96730,"line_start":294,"line_end":294,"column_start":5,"column_end":8},"name":"U57","qualname":"::base::dimension::U57","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16329},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96732,"byte_end":96735,"line_start":294,"line_end":294,"column_start":10,"column_end":13},"name":"U58","qualname":"::base::dimension::U58","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16345},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96737,"byte_end":96740,"line_start":294,"line_end":294,"column_start":15,"column_end":18},"name":"U59","qualname":"::base::dimension::U59","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16361},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96742,"byte_end":96745,"line_start":294,"line_end":294,"column_start":20,"column_end":23},"name":"U60","qualname":"::base::dimension::U60","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16377},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96747,"byte_end":96750,"line_start":294,"line_end":294,"column_start":25,"column_end":28},"name":"U61","qualname":"::base::dimension::U61","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16393},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96752,"byte_end":96755,"line_start":294,"line_end":294,"column_start":30,"column_end":33},"name":"U62","qualname":"::base::dimension::U62","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16409},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96757,"byte_end":96760,"line_start":294,"line_end":294,"column_start":35,"column_end":38},"name":"U63","qualname":"::base::dimension::U63","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16425},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96762,"byte_end":96765,"line_start":294,"line_end":294,"column_start":40,"column_end":43},"name":"U64","qualname":"::base::dimension::U64","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16441},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96767,"byte_end":96770,"line_start":294,"line_end":294,"column_start":45,"column_end":48},"name":"U65","qualname":"::base::dimension::U65","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16457},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96772,"byte_end":96775,"line_start":294,"line_end":294,"column_start":50,"column_end":53},"name":"U66","qualname":"::base::dimension::U66","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16473},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96777,"byte_end":96780,"line_start":294,"line_end":294,"column_start":55,"column_end":58},"name":"U67","qualname":"::base::dimension::U67","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16489},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96782,"byte_end":96785,"line_start":294,"line_end":294,"column_start":60,"column_end":63},"name":"U68","qualname":"::base::dimension::U68","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16505},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96787,"byte_end":96790,"line_start":294,"line_end":294,"column_start":65,"column_end":68},"name":"U69","qualname":"::base::dimension::U69","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16521},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96792,"byte_end":96795,"line_start":294,"line_end":294,"column_start":70,"column_end":73},"name":"U70","qualname":"::base::dimension::U70","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16537},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96797,"byte_end":96800,"line_start":294,"line_end":294,"column_start":75,"column_end":78},"name":"U71","qualname":"::base::dimension::U71","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16553},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96802,"byte_end":96805,"line_start":294,"line_end":294,"column_start":80,"column_end":83},"name":"U72","qualname":"::base::dimension::U72","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16569},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96807,"byte_end":96810,"line_start":294,"line_end":294,"column_start":85,"column_end":88},"name":"U73","qualname":"::base::dimension::U73","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16585},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96812,"byte_end":96815,"line_start":294,"line_end":294,"column_start":90,"column_end":93},"name":"U74","qualname":"::base::dimension::U74","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16601},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96817,"byte_end":96820,"line_start":294,"line_end":294,"column_start":95,"column_end":98},"name":"U75","qualname":"::base::dimension::U75","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16617},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96826,"byte_end":96829,"line_start":295,"line_end":295,"column_start":5,"column_end":8},"name":"U76","qualname":"::base::dimension::U76","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16633},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96831,"byte_end":96834,"line_start":295,"line_end":295,"column_start":10,"column_end":13},"name":"U77","qualname":"::base::dimension::U77","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16649},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96836,"byte_end":96839,"line_start":295,"line_end":295,"column_start":15,"column_end":18},"name":"U78","qualname":"::base::dimension::U78","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16665},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96841,"byte_end":96844,"line_start":295,"line_end":295,"column_start":20,"column_end":23},"name":"U79","qualname":"::base::dimension::U79","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16681},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96846,"byte_end":96849,"line_start":295,"line_end":295,"column_start":25,"column_end":28},"name":"U80","qualname":"::base::dimension::U80","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16697},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96851,"byte_end":96854,"line_start":295,"line_end":295,"column_start":30,"column_end":33},"name":"U81","qualname":"::base::dimension::U81","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16713},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96856,"byte_end":96859,"line_start":295,"line_end":295,"column_start":35,"column_end":38},"name":"U82","qualname":"::base::dimension::U82","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16729},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96861,"byte_end":96864,"line_start":295,"line_end":295,"column_start":40,"column_end":43},"name":"U83","qualname":"::base::dimension::U83","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16745},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96866,"byte_end":96869,"line_start":295,"line_end":295,"column_start":45,"column_end":48},"name":"U84","qualname":"::base::dimension::U84","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16761},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96871,"byte_end":96874,"line_start":295,"line_end":295,"column_start":50,"column_end":53},"name":"U85","qualname":"::base::dimension::U85","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16777},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96876,"byte_end":96879,"line_start":295,"line_end":295,"column_start":55,"column_end":58},"name":"U86","qualname":"::base::dimension::U86","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16793},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96881,"byte_end":96884,"line_start":295,"line_end":295,"column_start":60,"column_end":63},"name":"U87","qualname":"::base::dimension::U87","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16809},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96886,"byte_end":96889,"line_start":295,"line_end":295,"column_start":65,"column_end":68},"name":"U88","qualname":"::base::dimension::U88","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16825},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96891,"byte_end":96894,"line_start":295,"line_end":295,"column_start":70,"column_end":73},"name":"U89","qualname":"::base::dimension::U89","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16841},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96896,"byte_end":96899,"line_start":295,"line_end":295,"column_start":75,"column_end":78},"name":"U90","qualname":"::base::dimension::U90","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16857},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96901,"byte_end":96904,"line_start":295,"line_end":295,"column_start":80,"column_end":83},"name":"U91","qualname":"::base::dimension::U91","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16873},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96906,"byte_end":96909,"line_start":295,"line_end":295,"column_start":85,"column_end":88},"name":"U92","qualname":"::base::dimension::U92","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16889},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96911,"byte_end":96914,"line_start":295,"line_end":295,"column_start":90,"column_end":93},"name":"U93","qualname":"::base::dimension::U93","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16905},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96916,"byte_end":96919,"line_start":295,"line_end":295,"column_start":95,"column_end":98},"name":"U94","qualname":"::base::dimension::U94","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16921},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96925,"byte_end":96928,"line_start":296,"line_end":296,"column_start":5,"column_end":8},"name":"U95","qualname":"::base::dimension::U95","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16937},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96930,"byte_end":96933,"line_start":296,"line_end":296,"column_start":10,"column_end":13},"name":"U96","qualname":"::base::dimension::U96","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16953},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96935,"byte_end":96938,"line_start":296,"line_end":296,"column_start":15,"column_end":18},"name":"U97","qualname":"::base::dimension::U97","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16969},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96940,"byte_end":96943,"line_start":296,"line_end":296,"column_start":20,"column_end":23},"name":"U98","qualname":"::base::dimension::U98","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16985},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96945,"byte_end":96948,"line_start":296,"line_end":296,"column_start":25,"column_end":28},"name":"U99","qualname":"::base::dimension::U99","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":17001},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96950,"byte_end":96954,"line_start":296,"line_end":296,"column_start":30,"column_end":34},"name":"U100","qualname":"::base::dimension::U100","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":17017},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96956,"byte_end":96960,"line_start":296,"line_end":296,"column_start":36,"column_end":40},"name":"U101","qualname":"::base::dimension::U101","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":17033},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96962,"byte_end":96966,"line_start":296,"line_end":296,"column_start":42,"column_end":46},"name":"U102","qualname":"::base::dimension::U102","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":17049},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96968,"byte_end":96972,"line_start":296,"line_end":296,"column_start":48,"column_end":52},"name":"U103","qualname":"::base::dimension::U103","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":17065},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96974,"byte_end":96978,"line_start":296,"line_end":296,"column_start":54,"column_end":58},"name":"U104","qualname":"::base::dimension::U104","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":17081},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96980,"byte_end":96984,"line_start":296,"line_end":296,"column_start":60,"column_end":64},"name":"U105","qualname":"::base::dimension::U105","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":17097},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96986,"byte_end":96990,"line_start":296,"line_end":296,"column_start":66,"column_end":70},"name":"U106","qualname":"::base::dimension::U106","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":17113},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96992,"byte_end":96996,"line_start":296,"line_end":296,"column_start":72,"column_end":76},"name":"U107","qualname":"::base::dimension::U107","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":17129},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":96998,"byte_end":97002,"line_start":296,"line_end":296,"column_start":78,"column_end":82},"name":"U108","qualname":"::base::dimension::U108","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":17145},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":97004,"byte_end":97008,"line_start":296,"line_end":296,"column_start":84,"column_end":88},"name":"U109","qualname":"::base::dimension::U109","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":17161},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":97010,"byte_end":97014,"line_start":296,"line_end":296,"column_start":90,"column_end":94},"name":"U110","qualname":"::base::dimension::U110","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":17177},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":97020,"byte_end":97024,"line_start":297,"line_end":297,"column_start":5,"column_end":9},"name":"U111","qualname":"::base::dimension::U111","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":17193},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":97026,"byte_end":97030,"line_start":297,"line_end":297,"column_start":11,"column_end":15},"name":"U112","qualname":"::base::dimension::U112","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":17209},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":97032,"byte_end":97036,"line_start":297,"line_end":297,"column_start":17,"column_end":21},"name":"U113","qualname":"::base::dimension::U113","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":17225},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":97038,"byte_end":97042,"line_start":297,"line_end":297,"column_start":23,"column_end":27},"name":"U114","qualname":"::base::dimension::U114","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":17241},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":97044,"byte_end":97048,"line_start":297,"line_end":297,"column_start":29,"column_end":33},"name":"U115","qualname":"::base::dimension::U115","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":17257},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":97050,"byte_end":97054,"line_start":297,"line_end":297,"column_start":35,"column_end":39},"name":"U116","qualname":"::base::dimension::U116","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":17273},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":97056,"byte_end":97060,"line_start":297,"line_end":297,"column_start":41,"column_end":45},"name":"U117","qualname":"::base::dimension::U117","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":17289},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":97062,"byte_end":97066,"line_start":297,"line_end":297,"column_start":47,"column_end":51},"name":"U118","qualname":"::base::dimension::U118","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":17305},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":97068,"byte_end":97072,"line_start":297,"line_end":297,"column_start":53,"column_end":57},"name":"U119","qualname":"::base::dimension::U119","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":17321},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":97074,"byte_end":97078,"line_start":297,"line_end":297,"column_start":59,"column_end":63},"name":"U120","qualname":"::base::dimension::U120","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":17337},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":97080,"byte_end":97084,"line_start":297,"line_end":297,"column_start":65,"column_end":69},"name":"U121","qualname":"::base::dimension::U121","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":17353},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":97086,"byte_end":97090,"line_start":297,"line_end":297,"column_start":71,"column_end":75},"name":"U122","qualname":"::base::dimension::U122","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":17369},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":97092,"byte_end":97096,"line_start":297,"line_end":297,"column_start":77,"column_end":81},"name":"U123","qualname":"::base::dimension::U123","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":17385},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":97098,"byte_end":97102,"line_start":297,"line_end":297,"column_start":83,"column_end":87},"name":"U124","qualname":"::base::dimension::U124","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":17401},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":97104,"byte_end":97108,"line_start":297,"line_end":297,"column_start":89,"column_end":93},"name":"U125","qualname":"::base::dimension::U125","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":17417},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":97110,"byte_end":97114,"line_start":297,"line_end":297,"column_start":95,"column_end":99},"name":"U126","qualname":"::base::dimension::U126","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":17433},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":97120,"byte_end":97124,"line_start":298,"line_end":298,"column_start":5,"column_end":9},"name":"U127","qualname":"::base::dimension::U127","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95401,"byte_end":95428,"line_start":249,"line_end":249,"column_start":9,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":737},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::base::iter","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","parent":null,"children":[{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":741},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":755},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":762},{"krate":0,"index":765},{"krate":0,"index":768},{"krate":0,"index":17449},{"krate":0,"index":17461},{"krate":0,"index":17468},{"krate":0,"index":17478},{"krate":0,"index":17485},{"krate":0,"index":17497},{"krate":0,"index":17504},{"krate":0,"index":17514},{"krate":0,"index":17521},{"krate":0,"index":17529},{"krate":0,"index":772},{"krate":0,"index":779},{"krate":0,"index":789},{"krate":0,"index":796},{"krate":0,"index":805},{"krate":0,"index":813},{"krate":0,"index":823},{"krate":0,"index":17536},{"krate":0,"index":17544},{"krate":0,"index":830},{"krate":0,"index":837},{"krate":0,"index":847},{"krate":0,"index":854},{"krate":0,"index":863},{"krate":0,"index":871},{"krate":0,"index":881}],"decl_id":null,"docs":" Matrix iterators.\n","sig":null,"attributes":[{"value":"/ Matrix iterators.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":100750,"byte_end":100771,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":17449},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":105671,"byte_end":105681,"line_start":125,"line_end":125,"column_start":18,"column_end":28},"name":"MatrixIter","qualname":"::base::iter::MatrixIter","value":"MatrixIter {  }","parent":null,"children":[{"krate":0,"index":17455},{"krate":0,"index":17456},{"krate":0,"index":17457},{"krate":0,"index":17458},{"krate":0,"index":17459},{"krate":0,"index":17460}],"decl_id":null,"docs":" An iterator through a dense matrix with arbitrary strides matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through a dense matrix with arbitrary strides matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":101095,"byte_end":101164,"line_start":12,"line_end":12,"column_start":9,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":17485},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":105743,"byte_end":105756,"line_start":126,"line_end":126,"column_start":18,"column_end":31},"name":"MatrixIterMut","qualname":"::base::iter::MatrixIterMut","value":"MatrixIterMut {  }","parent":null,"children":[{"krate":0,"index":17491},{"krate":0,"index":17492},{"krate":0,"index":17493},{"krate":0,"index":17494},{"krate":0,"index":17495},{"krate":0,"index":17496}],"decl_id":null,"docs":" An iterator through a dense matrix with arbitrary strides matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through a dense matrix with arbitrary strides matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":101095,"byte_end":101164,"line_start":12,"line_end":12,"column_start":9,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":17521},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":105920,"byte_end":105927,"line_start":135,"line_end":135,"column_start":12,"column_end":19},"name":"RowIter","qualname":"::base::iter::RowIter","value":"RowIter {  }","parent":null,"children":[{"krate":0,"index":17527},{"krate":0,"index":17528}],"decl_id":null,"docs":" An iterator through the rows of a matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through the rows of a matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":105863,"byte_end":105908,"line_start":134,"line_end":134,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":796},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":107187,"byte_end":107197,"line_start":184,"line_end":184,"column_start":12,"column_end":22},"name":"RowIterMut","qualname":"::base::iter::RowIterMut","value":"RowIterMut {  }","parent":null,"children":[{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804}],"decl_id":null,"docs":" An iterator through the mutable rows of a matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through the mutable rows of a matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":107122,"byte_end":107175,"line_start":183,"line_end":183,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":17536},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":108700,"byte_end":108710,"line_start":247,"line_end":247,"column_start":12,"column_end":22},"name":"ColumnIter","qualname":"::base::iter::ColumnIter","value":"ColumnIter {  }","parent":null,"children":[{"krate":0,"index":17542},{"krate":0,"index":17543}],"decl_id":null,"docs":" An iterator through the columns of a matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through the columns of a matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":108640,"byte_end":108688,"line_start":246,"line_end":246,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":854},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":109992,"byte_end":110005,"line_start":298,"line_end":298,"column_start":12,"column_end":25},"name":"ColumnIterMut","qualname":"::base::iter::ColumnIterMut","value":"ColumnIterMut {  }","parent":null,"children":[{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862}],"decl_id":null,"docs":" An iterator through the mutable columns of a matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through the mutable columns of a matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":109924,"byte_end":109980,"line_start":297,"line_end":297,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":114293,"byte_end":114300,"line_start":120,"line_end":120,"column_start":12,"column_end":19},"name":"neg_mut","qualname":"<Matrix<N, R, C, S>>::neg_mut","value":"pub fn neg_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Negates `self` in-place.\n","sig":null,"attributes":[{"value":"/ Negates `self` in-place.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":114239,"byte_end":114267,"line_start":118,"line_end":118,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":114272,"byte_end":114281,"line_start":119,"line_end":119,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":17571},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":125644,"byte_end":125650,"line_start":372,"line_end":372,"column_start":27,"column_end":33},"name":"add_to","qualname":"<Matrix<N, R1, C1, SA>>::add_to","value":"pub fn add_to<R2: Dim, C2: Dim, SB, R3: Dim, C3: Dim,\n              SC>(&Self, &Matrix<N, R2, C2, SB>, &mut Matrix<N, R3, C3, SC>)\nwhere SB: Storage<N, R2, C2>, SC: StorageMut<N, R3, C3>,\nShapeConstraint: SameNumberOfRows<R1, R2> + SameNumberOfColumns<C1, C2> +\nSameNumberOfRows<R1, R3> + SameNumberOfColumns<C1, C3>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self + rhs` but stores the result into `out` to avoid allocations.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self + rhs` but stores the result into `out` to avoid allocations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":120096,"byte_end":120181,"line_start":254,"line_end":254,"column_start":13,"column_end":98}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":120194,"byte_end":120203,"line_start":255,"line_end":255,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17661},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":125874,"byte_end":125880,"line_start":375,"line_end":375,"column_start":27,"column_end":33},"name":"sub_to","qualname":"<Matrix<N, R1, C1, SA>>::sub_to","value":"pub fn sub_to<R2: Dim, C2: Dim, SB, R3: Dim, C3: Dim,\n              SC>(&Self, &Matrix<N, R2, C2, SB>, &mut Matrix<N, R3, C3, SC>)\nwhere SB: Storage<N, R2, C2>, SC: StorageMut<N, R3, C3>,\nShapeConstraint: SameNumberOfRows<R1, R2> + SameNumberOfColumns<C1, C2> +\nSameNumberOfRows<R1, R3> + SameNumberOfColumns<C1, C3>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self + rhs` but stores the result into `out` to avoid allocations.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self + rhs` but stores the result into `out` to avoid allocations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":120096,"byte_end":120181,"line_start":254,"line_end":254,"column_start":13,"column_end":98}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":120194,"byte_end":120203,"line_start":255,"line_end":255,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1173},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":135518,"byte_end":135524,"line_start":681,"line_end":681,"column_start":12,"column_end":18},"name":"tr_mul","qualname":"<Matrix<N, R1, C1, SA>>::tr_mul","value":"pub fn tr_mul<R2: Dim, C2: Dim, SB>(&Self, &Matrix<N, R2, C2, SB>)\n-> MatrixMN<N, C1, C2> where SB: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, C1, C2>,\nShapeConstraint: SameNumberOfRows<R1, R2>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self.transpose() * rhs`.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self.transpose() * rhs`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":135449,"byte_end":135492,"line_start":679,"line_end":679,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":135497,"byte_end":135506,"line_start":680,"line_end":680,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1177},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":136004,"byte_end":136010,"line_start":696,"line_end":696,"column_start":12,"column_end":18},"name":"ad_mul","qualname":"<Matrix<N, R1, C1, SA>>::ad_mul","value":"pub fn ad_mul<R2: Dim, C2: Dim, SB>(&Self, &Matrix<N, R2, C2, SB>)\n-> MatrixMN<N, C1, C2> where N: SimdComplexField, SB: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, C1, C2>,\nShapeConstraint: SameNumberOfRows<R1, R2>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self.adjoint() * rhs`.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self.adjoint() * rhs`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":135937,"byte_end":135978,"line_start":694,"line_end":694,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":135983,"byte_end":135992,"line_start":695,"line_end":695,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1189},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":138070,"byte_end":138079,"line_start":758,"line_end":758,"column_start":12,"column_end":21},"name":"tr_mul_to","qualname":"<Matrix<N, R1, C1, SA>>::tr_mul_to","value":"pub fn tr_mul_to<R2: Dim, C2: Dim, SB, R3: Dim, C3: Dim,\n                 SC>(&Self, &Matrix<N, R2, C2, SB>,\n                     &mut Matrix<N, R3, C3, SC>) where SB: Storage<N, R2, C2>,\nSC: StorageMut<N, R3, C3>, ShapeConstraint: SameNumberOfRows<R1, R2> +\nDimEq<C1, R3> + DimEq<C2, C3>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self.transpose() * rhs` but stores the result into `out` to avoid\n allocations.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self.transpose() * rhs` but stores the result into `out` to avoid","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":137939,"byte_end":138023,"line_start":755,"line_end":755,"column_start":5,"column_end":89}},{"value":"/ allocations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":138028,"byte_end":138044,"line_start":756,"line_end":756,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":138049,"byte_end":138058,"line_start":757,"line_end":757,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1197},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":138576,"byte_end":138585,"line_start":773,"line_end":773,"column_start":12,"column_end":21},"name":"ad_mul_to","qualname":"<Matrix<N, R1, C1, SA>>::ad_mul_to","value":"pub fn ad_mul_to<R2: Dim, C2: Dim, SB, R3: Dim, C3: Dim,\n                 SC>(&Self, &Matrix<N, R2, C2, SB>,\n                     &mut Matrix<N, R3, C3, SC>) where N: SimdComplexField,\nSB: Storage<N, R2, C2>, SC: StorageMut<N, R3, C3>,\nShapeConstraint: SameNumberOfRows<R1, R2> + DimEq<C1, R3> + DimEq<C2, C3>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self.adjoint() * rhs` but stores the result into `out` to avoid\n allocations.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self.adjoint() * rhs` but stores the result into `out` to avoid","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":138447,"byte_end":138529,"line_start":770,"line_end":770,"column_start":5,"column_end":87}},{"value":"/ allocations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":138534,"byte_end":138550,"line_start":771,"line_end":771,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":138555,"byte_end":138564,"line_start":772,"line_end":772,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1205},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":139094,"byte_end":139100,"line_start":788,"line_end":788,"column_start":12,"column_end":18},"name":"mul_to","qualname":"<Matrix<N, R1, C1, SA>>::mul_to","value":"pub fn mul_to<R2: Dim, C2: Dim, SB, R3: Dim, C3: Dim,\n              SC>(&Self, &Matrix<N, R2, C2, SB>, &mut Matrix<N, R3, C3, SC>)\nwhere SB: Storage<N, R2, C2>, SC: StorageMut<N, R3, C3>,\nShapeConstraint: SameNumberOfRows<R3, R1> + SameNumberOfColumns<C3, C2> +\nAreMultipliable<R1, C1, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self * rhs` but stores the result into `out` to avoid allocations.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self * rhs` but stores the result into `out` to avoid allocations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":138983,"byte_end":139068,"line_start":786,"line_end":786,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":139073,"byte_end":139082,"line_start":787,"line_end":787,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":139641,"byte_end":139650,"line_start":804,"line_end":804,"column_start":12,"column_end":21},"name":"kronecker","qualname":"<Matrix<N, R1, C1, SA>>::kronecker","value":"pub fn kronecker<R2: Dim, C2: Dim, SB>(&Self, &Matrix<N, R2, C2, SB>)\n-> MatrixMN<N, DimProd<R1, R2>, DimProd<C1, C2>> where N: ClosedMul,\nR1: DimMul<R2>, C1: DimMul<C2>, SB: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, DimProd<R1, R2>, DimProd<C1, C2>>","parent":null,"children":[],"decl_id":null,"docs":" The kronecker product of two matrices (aka. tensor product of the corresponding linear\n maps).\n","sig":null,"attributes":[{"value":"/ The kronecker product of two matrices (aka. tensor product of the corresponding linear","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":139524,"byte_end":139614,"line_start":802,"line_end":802,"column_start":5,"column_end":95}},{"value":"/ maps).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":139619,"byte_end":139629,"line_start":803,"line_end":803,"column_start":5,"column_end":15}}]},{"kind":"Mod","id":{"krate":0,"index":1229},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"storage","qualname":"::base::storage","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","parent":null,"children":[{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1233},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1240},{"krate":0,"index":1243},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1256},{"krate":0,"index":1259},{"krate":0,"index":1265},{"krate":0,"index":1269},{"krate":0,"index":1273},{"krate":0,"index":1277},{"krate":0,"index":1295},{"krate":0,"index":1307},{"krate":0,"index":1311},{"krate":0,"index":1315}],"decl_id":null,"docs":" Abstract definition of a matrix data storage.\n","sig":null,"attributes":[{"value":"/ Abstract definition of a matrix data storage.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":141537,"byte_end":141586,"line_start":1,"line_end":1,"column_start":1,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":1259},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":141951,"byte_end":141967,"line_start":15,"line_end":15,"column_start":10,"column_end":26},"name":"SameShapeStorage","qualname":"::base::storage::SameShapeStorage","value":"<DefaultAllocator as\nAllocator<N, SameShapeR<R1, R2>, SameShapeC<C1, C2>>>::Buffer","parent":null,"children":[],"decl_id":null,"docs":" The data storage for the sum of two matrices with dimensions `(R1, C1)` and `(R2, C2)`.\n","sig":null,"attributes":[{"value":"/ The data storage for the sum of two matrices with dimensions `(R1, C1)` and `(R2, C2)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":141850,"byte_end":141941,"line_start":14,"line_end":14,"column_start":1,"column_end":92}}]},{"kind":"Type","id":{"krate":0,"index":1265},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":142180,"byte_end":142185,"line_start":20,"line_end":20,"column_start":10,"column_end":15},"name":"Owned","qualname":"::base::storage::Owned","value":"<DefaultAllocator as Allocator<N, R, C>>::Buffer","parent":null,"children":[],"decl_id":null,"docs":" The owned data storage that can be allocated from `S`.\n","sig":null,"attributes":[{"value":"/ The owned data storage that can be allocated from `S`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":142112,"byte_end":142170,"line_start":19,"line_end":19,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":1269},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":142343,"byte_end":142350,"line_start":23,"line_end":23,"column_start":10,"column_end":17},"name":"RStride","qualname":"::base::storage::RStride","value":"<<DefaultAllocator as Allocator<N, R, C>>::Buffer as\nStorage<N, R, C>>::RStride","parent":null,"children":[],"decl_id":null,"docs":" The row-stride of the owned data storage for a buffer of dimension `(R, C)`.\n","sig":null,"attributes":[{"value":"/ The row-stride of the owned data storage for a buffer of dimension `(R, C)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":142253,"byte_end":142333,"line_start":22,"line_end":22,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":1273},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":142546,"byte_end":142553,"line_start":27,"line_end":27,"column_start":10,"column_end":17},"name":"CStride","qualname":"::base::storage::CStride","value":"<<DefaultAllocator as Allocator<N, R, C>>::Buffer as\nStorage<N, R, C>>::CStride","parent":null,"children":[],"decl_id":null,"docs":" The column-stride of the owned data storage for a buffer of dimension `(R, C)`.\n","sig":null,"attributes":[{"value":"/ The column-stride of the owned data storage for a buffer of dimension `(R, C)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":142453,"byte_end":142536,"line_start":26,"line_end":26,"column_start":1,"column_end":84}}]},{"kind":"Trait","id":{"krate":0,"index":1277},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":143217,"byte_end":143224,"line_start":39,"line_end":39,"column_start":18,"column_end":25},"name":"Storage","qualname":"::base::storage::Storage","value":"Storage<N: Scalar, R: Dim, C: Dim = U1>: Debug + Sized","parent":null,"children":[{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294}],"decl_id":null,"docs":" The trait shared by all matrix data storage.","sig":null,"attributes":[{"value":"/ The trait shared by all matrix data storage.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":142656,"byte_end":142704,"line_start":30,"line_end":30,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":142705,"byte_end":142708,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ TODO: doc","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":142709,"byte_end":142722,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":142723,"byte_end":142726,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Note that `Self` must always have a number of elements compatible with the matrix length (given","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":142727,"byte_end":142826,"line_start":34,"line_end":34,"column_start":1,"column_end":100}},{"value":"/ by `R` and `C` if they are known at compile-time). For example, implementors of this trait","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":142827,"byte_end":142921,"line_start":35,"line_end":35,"column_start":1,"column_end":95}},{"value":"/ should **not** allow the user to modify the size of the underlying buffer with safe methods","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":142922,"byte_end":143017,"line_start":36,"line_end":36,"column_start":1,"column_end":96}},{"value":"/ (for example the `VecStorage::data_mut` method is unsafe because the user could change the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":143018,"byte_end":143112,"line_start":37,"line_end":37,"column_start":1,"column_end":95}},{"value":"/ vector's size so that it no longer contains enough elements: this will lead to UB.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":143113,"byte_end":143199,"line_start":38,"line_end":38,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1281},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":143333,"byte_end":143340,"line_start":41,"line_end":41,"column_start":10,"column_end":17},"name":"RStride","qualname":"::base::storage::Storage::RStride","value":"type RStride: Dim;","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":" The static stride of this storage's rows.\n","sig":null,"attributes":[{"value":"/ The static stride of this storage's rows.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":143278,"byte_end":143323,"line_start":40,"line_end":40,"column_start":5,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":1282},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":143410,"byte_end":143417,"line_start":44,"line_end":44,"column_start":10,"column_end":17},"name":"CStride","qualname":"::base::storage::Storage::CStride","value":"type CStride: Dim;","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":" The static stride of this storage's columns.\n","sig":null,"attributes":[{"value":"/ The static stride of this storage's columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":143352,"byte_end":143400,"line_start":43,"line_end":43,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1283},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":143465,"byte_end":143468,"line_start":47,"line_end":47,"column_start":8,"column_end":11},"name":"ptr","qualname":"::base::storage::Storage::ptr","value":"pub fn ptr(&Self) -> *const N","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":" The matrix data pointer.\n","sig":null,"attributes":[{"value":"/ The matrix data pointer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":143429,"byte_end":143457,"line_start":46,"line_end":46,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1284},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":143689,"byte_end":143694,"line_start":51,"line_end":51,"column_start":8,"column_end":13},"name":"shape","qualname":"::base::storage::Storage::shape","value":"pub fn shape(&Self) -> (R, C)","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":" The dimension of the matrix at run-time. Arr length of zero indicates the additive identity\n element of any dimension. Must be equal to `Self::dimension()` if it is not `None`.\n","sig":null,"attributes":[{"value":"/ The dimension of the matrix at run-time. Arr length of zero indicates the additive identity","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":143494,"byte_end":143589,"line_start":49,"line_end":49,"column_start":5,"column_end":100}},{"value":"/ element of any dimension. Must be equal to `Self::dimension()` if it is not `None`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":143594,"byte_end":143681,"line_start":50,"line_end":50,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1285},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":143896,"byte_end":143903,"line_start":56,"line_end":56,"column_start":8,"column_end":15},"name":"strides","qualname":"::base::storage::Storage::strides","value":"pub fn strides(&Self) -> (Self::RStride, Self::CStride)","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":" The spacing between consecutive row elements and consecutive column elements.","sig":null,"attributes":[{"value":"/ The spacing between consecutive row elements and consecutive column elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":143718,"byte_end":143799,"line_start":53,"line_end":53,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":143804,"byte_end":143807,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ For example this returns `(1, 5)` for a row-major matrix with 5 columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":143812,"byte_end":143888,"line_start":55,"line_end":55,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1286},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":144297,"byte_end":144309,"line_start":66,"line_end":66,"column_start":8,"column_end":20},"name":"linear_index","qualname":"::base::storage::Storage::linear_index","value":"pub fn linear_index(&Self, usize, usize) -> usize","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":" Compute the index corresponding to the irow-th row and icol-th column of this matrix. The\n index must be such that the following holds:","sig":null,"attributes":[{"value":"/ Compute the index corresponding to the irow-th row and icol-th column of this matrix. The","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":143951,"byte_end":144044,"line_start":58,"line_end":58,"column_start":5,"column_end":98}},{"value":"/ index must be such that the following holds:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":144049,"byte_end":144097,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":144102,"byte_end":144105,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```.ignore","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":144110,"byte_end":144124,"line_start":61,"line_end":61,"column_start":5,"column_end":19}},{"value":"/ let lindex = self.linear_index(irow, icol);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":144129,"byte_end":144176,"line_start":62,"line_end":62,"column_start":5,"column_end":52}},{"value":"/ assert!(*self.get_unchecked(irow, icol) == *self.get_unchecked_linear(lindex))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":144181,"byte_end":144263,"line_start":63,"line_end":63,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":144268,"byte_end":144275,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":144280,"byte_end":144289,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1287},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":144584,"byte_end":144612,"line_start":74,"line_end":74,"column_start":15,"column_end":43},"name":"get_address_unchecked_linear","qualname":"::base::storage::Storage::get_address_unchecked_linear","value":"pub unsafe fn get_address_unchecked_linear(&Self, usize) -> *const N","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":" Gets the address of the i-th matrix component without performing bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets the address of the i-th matrix component without performing bound-checking.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":144471,"byte_end":144555,"line_start":72,"line_end":72,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":144560,"byte_end":144569,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":144803,"byte_end":144824,"line_start":80,"line_end":80,"column_start":15,"column_end":36},"name":"get_address_unchecked","qualname":"::base::storage::Storage::get_address_unchecked","value":"pub unsafe fn get_address_unchecked(&Self, usize, usize) -> *const N","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":" Gets the address of the i-th matrix component without performing bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets the address of the i-th matrix component without performing bound-checking.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":144690,"byte_end":144774,"line_start":78,"line_end":78,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":144779,"byte_end":144788,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":145054,"byte_end":145074,"line_start":86,"line_end":86,"column_start":15,"column_end":35},"name":"get_unchecked_linear","qualname":"::base::storage::Storage::get_unchecked_linear","value":"pub unsafe fn get_unchecked_linear(&Self, usize) -> &N","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":" Retrieves a reference to the i-th element without bound-checking.\n","sig":null,"attributes":[{"value":"/ Retrieves a reference to the i-th element without bound-checking.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":144956,"byte_end":145025,"line_start":84,"line_end":84,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":145030,"byte_end":145039,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1290},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":145256,"byte_end":145269,"line_start":92,"line_end":92,"column_start":15,"column_end":28},"name":"get_unchecked","qualname":"::base::storage::Storage::get_unchecked","value":"pub unsafe fn get_unchecked(&Self, usize, usize) -> &N","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":" Retrieves a reference to the i-th element without bound-checking.\n","sig":null,"attributes":[{"value":"/ Retrieves a reference to the i-th element without bound-checking.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":145158,"byte_end":145227,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":145232,"byte_end":145241,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1291},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":145467,"byte_end":145480,"line_start":97,"line_end":97,"column_start":8,"column_end":21},"name":"is_contiguous","qualname":"::base::storage::Storage::is_contiguous","value":"pub fn is_contiguous(&Self) -> bool","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":" Indicates whether this data buffer stores its elements contiguously.\n","sig":null,"attributes":[{"value":"/ Indicates whether this data buffer stores its elements contiguously.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":145387,"byte_end":145459,"line_start":96,"line_end":96,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1292},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":145665,"byte_end":145673,"line_start":102,"line_end":102,"column_start":8,"column_end":16},"name":"as_slice","qualname":"::base::storage::Storage::as_slice","value":"pub fn as_slice(&Self) -> &[N]","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":" Retrieves the data buffer as a contiguous slice.","sig":null,"attributes":[{"value":"/ Retrieves the data buffer as a contiguous slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":145502,"byte_end":145554,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":145559,"byte_end":145562,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ The matrix components may not be stored in a contiguous way, depending on the strides.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":145567,"byte_end":145657,"line_start":101,"line_end":101,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":145772,"byte_end":145782,"line_start":105,"line_end":105,"column_start":8,"column_end":18},"name":"into_owned","qualname":"::base::storage::Storage::into_owned","value":"pub fn into_owned(Self) -> Owned<N, R, C> where\nDefaultAllocator: Allocator<N, R, C>","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":" Builds a matrix data storage that does not contain any reference.\n","sig":null,"attributes":[{"value":"/ Builds a matrix data storage that does not contain any reference.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":145695,"byte_end":145764,"line_start":104,"line_end":104,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":145948,"byte_end":145959,"line_start":110,"line_end":110,"column_start":8,"column_end":19},"name":"clone_owned","qualname":"::base::storage::Storage::clone_owned","value":"pub fn clone_owned(&Self) -> Owned<N, R, C> where\nDefaultAllocator: Allocator<N, R, C>","parent":{"krate":0,"index":1277},"children":[],"decl_id":null,"docs":" Clones this data storage to one that does not contain any reference.\n","sig":null,"attributes":[{"value":"/ Clones this data storage to one that does not contain any reference.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":145868,"byte_end":145940,"line_start":109,"line_end":109,"column_start":5,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":1295},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":146407,"byte_end":146417,"line_start":120,"line_end":120,"column_start":18,"column_end":28},"name":"StorageMut","qualname":"::base::storage::StorageMut","value":"StorageMut<N: Scalar, R: Dim, C: Dim = U1>: Storage<N, R, C>","parent":null,"children":[{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1306}],"decl_id":null,"docs":" Trait implemented by matrix data storage that can provide a mutable access to its elements.","sig":null,"attributes":[{"value":"/ Trait implemented by matrix data storage that can provide a mutable access to its elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":146044,"byte_end":146139,"line_start":115,"line_end":115,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":146140,"byte_end":146143,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ Note that a mutable access does not mean that the matrix owns its data. For example, a mutable","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":146144,"byte_end":146242,"line_start":117,"line_end":117,"column_start":1,"column_end":99}},{"value":"/ matrix slice can provide mutable access to its elements even if it does not own its data (it","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":146243,"byte_end":146339,"line_start":118,"line_end":118,"column_start":1,"column_end":97}},{"value":"/ contains only an internal reference to them).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":146340,"byte_end":146389,"line_start":119,"line_end":119,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1299},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":146518,"byte_end":146525,"line_start":122,"line_end":122,"column_start":8,"column_end":15},"name":"ptr_mut","qualname":"::base::storage::StorageMut::ptr_mut","value":"pub fn ptr_mut(&mut Self) -> *mut N","parent":{"krate":0,"index":1295},"children":[],"decl_id":null,"docs":" The matrix mutable data pointer.\n","sig":null,"attributes":[{"value":"/ The matrix mutable data pointer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":146474,"byte_end":146510,"line_start":121,"line_end":121,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1300},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":146674,"byte_end":146706,"line_start":126,"line_end":126,"column_start":15,"column_end":47},"name":"get_address_unchecked_linear_mut","qualname":"::base::storage::StorageMut::get_address_unchecked_linear_mut","value":"pub unsafe fn get_address_unchecked_linear_mut(&mut Self, usize) -> *mut N","parent":{"krate":0,"index":1295},"children":[],"decl_id":null,"docs":" Gets the mutable address of the i-th matrix component without performing bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets the mutable address of the i-th matrix component without performing bound-checking.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":146553,"byte_end":146645,"line_start":124,"line_end":124,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":146650,"byte_end":146659,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1301},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":146911,"byte_end":146936,"line_start":132,"line_end":132,"column_start":15,"column_end":40},"name":"get_address_unchecked_mut","qualname":"::base::storage::StorageMut::get_address_unchecked_mut","value":"pub unsafe fn get_address_unchecked_mut(&mut Self, usize, usize) -> *mut N","parent":{"krate":0,"index":1295},"children":[],"decl_id":null,"docs":" Gets the mutable address of the i-th matrix component without performing bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets the mutable address of the i-th matrix component without performing bound-checking.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":146790,"byte_end":146882,"line_start":130,"line_end":130,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":146887,"byte_end":146896,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1302},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":147189,"byte_end":147213,"line_start":138,"line_end":138,"column_start":15,"column_end":39},"name":"get_unchecked_linear_mut","qualname":"::base::storage::StorageMut::get_unchecked_linear_mut","value":"pub unsafe fn get_unchecked_linear_mut(&mut Self, usize) -> &mut N","parent":{"krate":0,"index":1295},"children":[],"decl_id":null,"docs":" Retrieves a mutable reference to the i-th element without bound-checking.\n","sig":null,"attributes":[{"value":"/ Retrieves a mutable reference to the i-th element without bound-checking.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":147097,"byte_end":147174,"line_start":137,"line_end":137,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1303},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":147432,"byte_end":147449,"line_start":144,"line_end":144,"column_start":15,"column_end":32},"name":"get_unchecked_mut","qualname":"::base::storage::StorageMut::get_unchecked_mut","value":"pub unsafe fn get_unchecked_mut(&mut Self, usize, usize) -> &mut N","parent":{"krate":0,"index":1295},"children":[],"decl_id":null,"docs":" Retrieves a mutable reference to the element at `(irow, icol)` without bound-checking.\n","sig":null,"attributes":[{"value":"/ Retrieves a mutable reference to the element at `(irow, icol)` without bound-checking.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":147313,"byte_end":147403,"line_start":142,"line_end":142,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":147408,"byte_end":147417,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1304},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":147667,"byte_end":147688,"line_start":150,"line_end":150,"column_start":15,"column_end":36},"name":"swap_unchecked_linear","qualname":"::base::storage::StorageMut::swap_unchecked_linear","value":"pub unsafe fn swap_unchecked_linear(&mut Self, usize, usize)","parent":{"krate":0,"index":1295},"children":[],"decl_id":null,"docs":" Swaps two elements using their linear index without bound-checking.\n","sig":null,"attributes":[{"value":"/ Swaps two elements using their linear index without bound-checking.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":147567,"byte_end":147638,"line_start":148,"line_end":148,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":147643,"byte_end":147652,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1305},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":147966,"byte_end":147980,"line_start":159,"line_end":159,"column_start":15,"column_end":29},"name":"swap_unchecked","qualname":"::base::storage::StorageMut::swap_unchecked","value":"pub unsafe fn swap_unchecked(&mut Self, (usize, usize), (usize, usize))","parent":{"krate":0,"index":1295},"children":[],"decl_id":null,"docs":" Swaps two elements without bound-checking.\n","sig":null,"attributes":[{"value":"/ Swaps two elements without bound-checking.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":147891,"byte_end":147937,"line_start":157,"line_end":157,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":147942,"byte_end":147951,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1306},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":148380,"byte_end":148392,"line_start":169,"line_end":169,"column_start":8,"column_end":20},"name":"as_mut_slice","qualname":"::base::storage::StorageMut::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut [N]","parent":{"krate":0,"index":1295},"children":[],"decl_id":null,"docs":" Retrieves the mutable data buffer as a contiguous slice.","sig":null,"attributes":[{"value":"/ Retrieves the mutable data buffer as a contiguous slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":148229,"byte_end":148289,"line_start":166,"line_end":166,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":148294,"byte_end":148297,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Matrix components may not be contiguous, depending on its strides.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":148302,"byte_end":148372,"line_start":168,"line_end":168,"column_start":5,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":1307},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":148755,"byte_end":148772,"line_start":177,"line_end":177,"column_start":18,"column_end":35},"name":"ContiguousStorage","qualname":"::base::storage::ContiguousStorage","value":"ContiguousStorage<N: Scalar, R: Dim, C: Dim = U1>: Storage<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" A matrix storage that is stored contiguously in memory.","sig":null,"attributes":[{"value":"/ A matrix storage that is stored contiguously in memory.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":148420,"byte_end":148479,"line_start":172,"line_end":172,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":148480,"byte_end":148483,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ The storage requirement means that for any value of `i` in `[0, nrows * ncols - 1]`, the value","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":148484,"byte_end":148582,"line_start":174,"line_end":174,"column_start":1,"column_end":99}},{"value":"/ `.get_unchecked_linear` returns one of the matrix component. This trait is unsafe because","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":148583,"byte_end":148676,"line_start":175,"line_end":175,"column_start":1,"column_end":94}},{"value":"/ failing to comply to this may cause Undefined Behaviors.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":148677,"byte_end":148737,"line_start":176,"line_end":176,"column_start":1,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":1311},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":149175,"byte_end":149195,"line_start":187,"line_end":187,"column_start":18,"column_end":38},"name":"ContiguousStorageMut","qualname":"::base::storage::ContiguousStorageMut","value":"ContiguousStorageMut<N: Scalar, R: Dim, C: Dim = U1>: ContiguousStorage<N, R, C> + StorageMut<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" A mutable matrix storage that is stored contiguously in memory.","sig":null,"attributes":[{"value":"/ A mutable matrix storage that is stored contiguously in memory.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":148832,"byte_end":148899,"line_start":182,"line_end":182,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":148900,"byte_end":148903,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ The storage requirement means that for any value of `i` in `[0, nrows * ncols - 1]`, the value","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":148904,"byte_end":149002,"line_start":184,"line_end":184,"column_start":1,"column_end":99}},{"value":"/ `.get_unchecked_linear` returns one of the matrix component. This trait is unsafe because","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":149003,"byte_end":149096,"line_start":185,"line_end":185,"column_start":1,"column_end":94}},{"value":"/ failing to comply to this may cause Undefined Behaviors.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":149097,"byte_end":149157,"line_start":186,"line_end":186,"column_start":1,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":1315},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":149349,"byte_end":149366,"line_start":193,"line_end":193,"column_start":11,"column_end":28},"name":"ReshapableStorage","qualname":"::base::storage::ReshapableStorage","value":"ReshapableStorage<N, R1, C1, R2, C2>: Storage<N, R1, C1>","parent":null,"children":[{"krate":0,"index":1321},{"krate":0,"index":1322}],"decl_id":null,"docs":" A matrix storage that can be reshaped in-place.\n","sig":null,"attributes":[{"value":"/ A matrix storage that can be reshaped in-place.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":149287,"byte_end":149338,"line_start":192,"line_end":192,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1321},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":149525,"byte_end":149531,"line_start":202,"line_end":202,"column_start":10,"column_end":16},"name":"Output","qualname":"::base::storage::ReshapableStorage::Output","value":"type Output: Storage<N, R2, C2>;","parent":{"krate":0,"index":1315},"children":[],"decl_id":null,"docs":" The reshaped storage type.\n","sig":null,"attributes":[{"value":"/ The reshaped storage type.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":149485,"byte_end":149515,"line_start":201,"line_end":201,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1322},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":149620,"byte_end":149635,"line_start":205,"line_end":205,"column_start":8,"column_end":23},"name":"reshape_generic","qualname":"::base::storage::ReshapableStorage::reshape_generic","value":"pub fn reshape_generic(Self, R2, C2) -> Self::Output","parent":{"krate":0,"index":1315},"children":[],"decl_id":null,"docs":" Reshapes the storage into the output storage type.\n","sig":null,"attributes":[{"value":"/ Reshapes the storage into the output storage type.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":149558,"byte_end":149612,"line_start":204,"line_end":204,"column_start":5,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":1355},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":150305,"byte_end":150313,"line_start":20,"line_end":20,"column_start":10,"column_end":18},"name":"MatrixNM","qualname":"::base::alias::MatrixNM","value":"Matrix<N, R, C, Owned<N, R, C>>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized column-major matrix with `R` rows and `C` columns.","sig":null,"attributes":[{"value":"/ A statically sized column-major matrix with `R` rows and `C` columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":150017,"byte_end":150090,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":150091,"byte_end":150094,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":150095,"byte_end":150215,"line_start":18,"line_end":18,"column_start":1,"column_end":121}},{"value":"deprecated(note =\n             \"This matrix name contains a typo. Use MatrixMN instead.\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":150216,"byte_end":150295,"line_start":19,"line_end":19,"column_start":1,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":1359},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":150567,"byte_end":150575,"line_start":25,"line_end":25,"column_start":10,"column_end":18},"name":"MatrixMN","qualname":"::base::alias::MatrixMN","value":"Matrix<N, R, C, Owned<N, R, C>>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized column-major matrix with `R` rows and `C` columns.","sig":null,"attributes":[{"value":"/ A statically sized column-major matrix with `R` rows and `C` columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":150359,"byte_end":150432,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":150433,"byte_end":150436,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":150437,"byte_end":150557,"line_start":24,"line_end":24,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1363},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":150832,"byte_end":150839,"line_start":30,"line_end":30,"column_start":10,"column_end":17},"name":"MatrixN","qualname":"::base::alias::MatrixN","value":"Matrix<N, D, D, Owned<N, D, D>>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized column-major square matrix with `D` rows and columns.","sig":null,"attributes":[{"value":"/ A statically sized column-major square matrix with `D` rows and columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":150621,"byte_end":150697,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":150698,"byte_end":150701,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":150702,"byte_end":150822,"line_start":29,"line_end":29,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1366},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":151109,"byte_end":151116,"line_start":36,"line_end":36,"column_start":10,"column_end":17},"name":"DMatrix","qualname":"::base::alias::DMatrix","value":"Matrix<N, Dynamic, Dynamic, Owned<N, Dynamic, Dynamic>>","parent":null,"children":[],"decl_id":null,"docs":" A dynamically sized column-major matrix.","sig":null,"attributes":[{"value":"/ A dynamically sized column-major matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":150882,"byte_end":150926,"line_start":32,"line_end":32,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":150927,"byte_end":150930,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":150931,"byte_end":151051,"line_start":34,"line_end":34,"column_start":1,"column_end":121}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":151052,"byte_end":151099,"line_start":35,"line_end":35,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1368},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":151450,"byte_end":151459,"line_start":42,"line_end":42,"column_start":10,"column_end":19},"name":"MatrixXx1","qualname":"::base::alias::MatrixXx1","value":"Matrix<N, Dynamic, U1, Owned<N, Dynamic, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A heap-allocated, column-major, matrix with a dynamic number of rows and 1 columns.","sig":null,"attributes":[{"value":"/ A heap-allocated, column-major, matrix with a dynamic number of rows and 1 columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":151180,"byte_end":151267,"line_start":38,"line_end":38,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":151268,"byte_end":151271,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":151272,"byte_end":151392,"line_start":40,"line_end":40,"column_start":1,"column_end":121}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":151393,"byte_end":151440,"line_start":41,"line_end":41,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1370},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":151782,"byte_end":151791,"line_start":47,"line_end":47,"column_start":10,"column_end":19},"name":"MatrixXx2","qualname":"::base::alias::MatrixXx2","value":"Matrix<N, Dynamic, U2, Owned<N, Dynamic, U2>>","parent":null,"children":[],"decl_id":null,"docs":" A heap-allocated, column-major, matrix with a dynamic number of rows and 2 columns.","sig":null,"attributes":[{"value":"/ A heap-allocated, column-major, matrix with a dynamic number of rows and 2 columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":151512,"byte_end":151599,"line_start":43,"line_end":43,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":151600,"byte_end":151603,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":151604,"byte_end":151724,"line_start":45,"line_end":45,"column_start":1,"column_end":121}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":151725,"byte_end":151772,"line_start":46,"line_end":46,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1372},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":152114,"byte_end":152123,"line_start":52,"line_end":52,"column_start":10,"column_end":19},"name":"MatrixXx3","qualname":"::base::alias::MatrixXx3","value":"Matrix<N, Dynamic, U3, Owned<N, Dynamic, U3>>","parent":null,"children":[],"decl_id":null,"docs":" A heap-allocated, column-major, matrix with a dynamic number of rows and 3 columns.","sig":null,"attributes":[{"value":"/ A heap-allocated, column-major, matrix with a dynamic number of rows and 3 columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":151844,"byte_end":151931,"line_start":48,"line_end":48,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":151932,"byte_end":151935,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":151936,"byte_end":152056,"line_start":50,"line_end":50,"column_start":1,"column_end":121}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":152057,"byte_end":152104,"line_start":51,"line_end":51,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1374},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":152446,"byte_end":152455,"line_start":57,"line_end":57,"column_start":10,"column_end":19},"name":"MatrixXx4","qualname":"::base::alias::MatrixXx4","value":"Matrix<N, Dynamic, U4, Owned<N, Dynamic, U4>>","parent":null,"children":[],"decl_id":null,"docs":" A heap-allocated, column-major, matrix with a dynamic number of rows and 4 columns.","sig":null,"attributes":[{"value":"/ A heap-allocated, column-major, matrix with a dynamic number of rows and 4 columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":152176,"byte_end":152263,"line_start":53,"line_end":53,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":152264,"byte_end":152267,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":152268,"byte_end":152388,"line_start":55,"line_end":55,"column_start":1,"column_end":121}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":152389,"byte_end":152436,"line_start":56,"line_end":56,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1376},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":152778,"byte_end":152787,"line_start":62,"line_end":62,"column_start":10,"column_end":19},"name":"MatrixXx5","qualname":"::base::alias::MatrixXx5","value":"Matrix<N, Dynamic, U5, Owned<N, Dynamic, U5>>","parent":null,"children":[],"decl_id":null,"docs":" A heap-allocated, column-major, matrix with a dynamic number of rows and 5 columns.","sig":null,"attributes":[{"value":"/ A heap-allocated, column-major, matrix with a dynamic number of rows and 5 columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":152508,"byte_end":152595,"line_start":58,"line_end":58,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":152596,"byte_end":152599,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":152600,"byte_end":152720,"line_start":60,"line_end":60,"column_start":1,"column_end":121}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":152721,"byte_end":152768,"line_start":61,"line_end":61,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1378},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":153110,"byte_end":153119,"line_start":67,"line_end":67,"column_start":10,"column_end":19},"name":"MatrixXx6","qualname":"::base::alias::MatrixXx6","value":"Matrix<N, Dynamic, U6, Owned<N, Dynamic, U6>>","parent":null,"children":[],"decl_id":null,"docs":" A heap-allocated, column-major, matrix with a dynamic number of rows and 6 columns.","sig":null,"attributes":[{"value":"/ A heap-allocated, column-major, matrix with a dynamic number of rows and 6 columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":152840,"byte_end":152927,"line_start":63,"line_end":63,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":152928,"byte_end":152931,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":152932,"byte_end":153052,"line_start":65,"line_end":65,"column_start":1,"column_end":121}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":153053,"byte_end":153100,"line_start":66,"line_end":66,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1380},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":153440,"byte_end":153449,"line_start":73,"line_end":73,"column_start":10,"column_end":19},"name":"Matrix1xX","qualname":"::base::alias::Matrix1xX","value":"Matrix<N, U1, Dynamic, Owned<N, U1, Dynamic>>","parent":null,"children":[],"decl_id":null,"docs":" A heap-allocated, row-major, matrix with 1 rows and a dynamic number of columns.","sig":null,"attributes":[{"value":"/ A heap-allocated, row-major, matrix with 1 rows and a dynamic number of columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":153173,"byte_end":153257,"line_start":69,"line_end":69,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":153258,"byte_end":153261,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":153262,"byte_end":153382,"line_start":71,"line_end":71,"column_start":1,"column_end":121}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":153383,"byte_end":153430,"line_start":72,"line_end":72,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1382},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":153769,"byte_end":153778,"line_start":78,"line_end":78,"column_start":10,"column_end":19},"name":"Matrix2xX","qualname":"::base::alias::Matrix2xX","value":"Matrix<N, U2, Dynamic, Owned<N, U2, Dynamic>>","parent":null,"children":[],"decl_id":null,"docs":" A heap-allocated, row-major, matrix with 2 rows and a dynamic number of columns.","sig":null,"attributes":[{"value":"/ A heap-allocated, row-major, matrix with 2 rows and a dynamic number of columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":153502,"byte_end":153586,"line_start":74,"line_end":74,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":153587,"byte_end":153590,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":153591,"byte_end":153711,"line_start":76,"line_end":76,"column_start":1,"column_end":121}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":153712,"byte_end":153759,"line_start":77,"line_end":77,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1384},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":154098,"byte_end":154107,"line_start":83,"line_end":83,"column_start":10,"column_end":19},"name":"Matrix3xX","qualname":"::base::alias::Matrix3xX","value":"Matrix<N, U3, Dynamic, Owned<N, U3, Dynamic>>","parent":null,"children":[],"decl_id":null,"docs":" A heap-allocated, row-major, matrix with 3 rows and a dynamic number of columns.","sig":null,"attributes":[{"value":"/ A heap-allocated, row-major, matrix with 3 rows and a dynamic number of columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":153831,"byte_end":153915,"line_start":79,"line_end":79,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":153916,"byte_end":153919,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":153920,"byte_end":154040,"line_start":81,"line_end":81,"column_start":1,"column_end":121}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":154041,"byte_end":154088,"line_start":82,"line_end":82,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1386},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":154427,"byte_end":154436,"line_start":88,"line_end":88,"column_start":10,"column_end":19},"name":"Matrix4xX","qualname":"::base::alias::Matrix4xX","value":"Matrix<N, U4, Dynamic, Owned<N, U4, Dynamic>>","parent":null,"children":[],"decl_id":null,"docs":" A heap-allocated, row-major, matrix with 4 rows and a dynamic number of columns.","sig":null,"attributes":[{"value":"/ A heap-allocated, row-major, matrix with 4 rows and a dynamic number of columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":154160,"byte_end":154244,"line_start":84,"line_end":84,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":154245,"byte_end":154248,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":154249,"byte_end":154369,"line_start":86,"line_end":86,"column_start":1,"column_end":121}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":154370,"byte_end":154417,"line_start":87,"line_end":87,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1388},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":154756,"byte_end":154765,"line_start":93,"line_end":93,"column_start":10,"column_end":19},"name":"Matrix5xX","qualname":"::base::alias::Matrix5xX","value":"Matrix<N, U5, Dynamic, Owned<N, U5, Dynamic>>","parent":null,"children":[],"decl_id":null,"docs":" A heap-allocated, row-major, matrix with 5 rows and a dynamic number of columns.","sig":null,"attributes":[{"value":"/ A heap-allocated, row-major, matrix with 5 rows and a dynamic number of columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":154489,"byte_end":154573,"line_start":89,"line_end":89,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":154574,"byte_end":154577,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":154578,"byte_end":154698,"line_start":91,"line_end":91,"column_start":1,"column_end":121}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":154699,"byte_end":154746,"line_start":92,"line_end":92,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1390},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":155085,"byte_end":155094,"line_start":98,"line_end":98,"column_start":10,"column_end":19},"name":"Matrix6xX","qualname":"::base::alias::Matrix6xX","value":"Matrix<N, U6, Dynamic, Owned<N, U6, Dynamic>>","parent":null,"children":[],"decl_id":null,"docs":" A heap-allocated, row-major, matrix with 6 rows and a dynamic number of columns.","sig":null,"attributes":[{"value":"/ A heap-allocated, row-major, matrix with 6 rows and a dynamic number of columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":154818,"byte_end":154902,"line_start":94,"line_end":94,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":154903,"byte_end":154906,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":154907,"byte_end":155027,"line_start":96,"line_end":96,"column_start":1,"column_end":121}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":155028,"byte_end":155075,"line_start":97,"line_end":97,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1392},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":155338,"byte_end":155345,"line_start":103,"line_end":103,"column_start":10,"column_end":17},"name":"Matrix1","qualname":"::base::alias::Matrix1","value":"Matrix<N, U1, U1, Owned<N, U1, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x1 square matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x1 square matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":155148,"byte_end":155203,"line_start":100,"line_end":100,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":155204,"byte_end":155207,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":155208,"byte_end":155328,"line_start":102,"line_end":102,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1394},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":155578,"byte_end":155585,"line_start":107,"line_end":107,"column_start":10,"column_end":17},"name":"Matrix2","qualname":"::base::alias::Matrix2","value":"Matrix<N, U2, U2, Owned<N, U2, U2>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x2 square matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x2 square matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":155388,"byte_end":155443,"line_start":104,"line_end":104,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":155444,"byte_end":155447,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":155448,"byte_end":155568,"line_start":106,"line_end":106,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1396},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":155818,"byte_end":155825,"line_start":111,"line_end":111,"column_start":10,"column_end":17},"name":"Matrix3","qualname":"::base::alias::Matrix3","value":"Matrix<N, U3, U3, Owned<N, U3, U3>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x3 square matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x3 square matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":155628,"byte_end":155683,"line_start":108,"line_end":108,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":155684,"byte_end":155687,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":155688,"byte_end":155808,"line_start":110,"line_end":110,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1398},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":156058,"byte_end":156065,"line_start":115,"line_end":115,"column_start":10,"column_end":17},"name":"Matrix4","qualname":"::base::alias::Matrix4","value":"Matrix<N, U4, U4, Owned<N, U4, U4>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x4 square matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x4 square matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":155868,"byte_end":155923,"line_start":112,"line_end":112,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":155924,"byte_end":155927,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":155928,"byte_end":156048,"line_start":114,"line_end":114,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1400},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":156298,"byte_end":156305,"line_start":119,"line_end":119,"column_start":10,"column_end":17},"name":"Matrix5","qualname":"::base::alias::Matrix5","value":"Matrix<N, U5, U5, Owned<N, U5, U5>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x5 square matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x5 square matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":156108,"byte_end":156163,"line_start":116,"line_end":116,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":156164,"byte_end":156167,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":156168,"byte_end":156288,"line_start":118,"line_end":118,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1402},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":156538,"byte_end":156545,"line_start":123,"line_end":123,"column_start":10,"column_end":17},"name":"Matrix6","qualname":"::base::alias::Matrix6","value":"Matrix<N, U6, U6, Owned<N, U6, U6>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x6 square matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x6 square matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":156348,"byte_end":156403,"line_start":120,"line_end":120,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":156404,"byte_end":156407,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":156408,"byte_end":156528,"line_start":122,"line_end":122,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1404},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":156772,"byte_end":156781,"line_start":128,"line_end":128,"column_start":10,"column_end":19},"name":"Matrix1x2","qualname":"::base::alias::Matrix1x2","value":"Matrix<N, U1, U2, Owned<N, U1, U2>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x2 matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x2 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":156589,"byte_end":156637,"line_start":125,"line_end":125,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":156638,"byte_end":156641,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":156642,"byte_end":156762,"line_start":127,"line_end":127,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1406},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":157007,"byte_end":157016,"line_start":132,"line_end":132,"column_start":10,"column_end":19},"name":"Matrix1x3","qualname":"::base::alias::Matrix1x3","value":"Matrix<N, U1, U3, Owned<N, U1, U3>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x3 matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x3 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":156824,"byte_end":156872,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":156873,"byte_end":156876,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":156877,"byte_end":156997,"line_start":131,"line_end":131,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1408},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":157242,"byte_end":157251,"line_start":136,"line_end":136,"column_start":10,"column_end":19},"name":"Matrix1x4","qualname":"::base::alias::Matrix1x4","value":"Matrix<N, U1, U4, Owned<N, U1, U4>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x4 matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x4 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":157059,"byte_end":157107,"line_start":133,"line_end":133,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":157108,"byte_end":157111,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":157112,"byte_end":157232,"line_start":135,"line_end":135,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1410},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":157477,"byte_end":157486,"line_start":140,"line_end":140,"column_start":10,"column_end":19},"name":"Matrix1x5","qualname":"::base::alias::Matrix1x5","value":"Matrix<N, U1, U5, Owned<N, U1, U5>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x5 matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x5 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":157294,"byte_end":157342,"line_start":137,"line_end":137,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":157343,"byte_end":157346,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":157347,"byte_end":157467,"line_start":139,"line_end":139,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1412},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":157712,"byte_end":157721,"line_start":144,"line_end":144,"column_start":10,"column_end":19},"name":"Matrix1x6","qualname":"::base::alias::Matrix1x6","value":"Matrix<N, U1, U6, Owned<N, U1, U6>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x6 matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x6 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":157529,"byte_end":157577,"line_start":141,"line_end":141,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":157578,"byte_end":157581,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":157582,"byte_end":157702,"line_start":143,"line_end":143,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1414},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":157948,"byte_end":157957,"line_start":149,"line_end":149,"column_start":10,"column_end":19},"name":"Matrix2x3","qualname":"::base::alias::Matrix2x3","value":"Matrix<N, U2, U3, Owned<N, U2, U3>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x3 matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x3 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":157765,"byte_end":157813,"line_start":146,"line_end":146,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":157814,"byte_end":157817,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":157818,"byte_end":157938,"line_start":148,"line_end":148,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1416},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":158183,"byte_end":158192,"line_start":153,"line_end":153,"column_start":10,"column_end":19},"name":"Matrix2x4","qualname":"::base::alias::Matrix2x4","value":"Matrix<N, U2, U4, Owned<N, U2, U4>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x4 matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x4 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":158000,"byte_end":158048,"line_start":150,"line_end":150,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":158049,"byte_end":158052,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":158053,"byte_end":158173,"line_start":152,"line_end":152,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1418},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":158418,"byte_end":158427,"line_start":157,"line_end":157,"column_start":10,"column_end":19},"name":"Matrix2x5","qualname":"::base::alias::Matrix2x5","value":"Matrix<N, U2, U5, Owned<N, U2, U5>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x5 matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x5 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":158235,"byte_end":158283,"line_start":154,"line_end":154,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":158284,"byte_end":158287,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":158288,"byte_end":158408,"line_start":156,"line_end":156,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1420},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":158653,"byte_end":158662,"line_start":161,"line_end":161,"column_start":10,"column_end":19},"name":"Matrix2x6","qualname":"::base::alias::Matrix2x6","value":"Matrix<N, U2, U6, Owned<N, U2, U6>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x6 matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x6 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":158470,"byte_end":158518,"line_start":158,"line_end":158,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":158519,"byte_end":158522,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":158523,"byte_end":158643,"line_start":160,"line_end":160,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1422},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":158889,"byte_end":158898,"line_start":166,"line_end":166,"column_start":10,"column_end":19},"name":"Matrix3x4","qualname":"::base::alias::Matrix3x4","value":"Matrix<N, U3, U4, Owned<N, U3, U4>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x4 matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x4 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":158706,"byte_end":158754,"line_start":163,"line_end":163,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":158755,"byte_end":158758,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":158759,"byte_end":158879,"line_start":165,"line_end":165,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1424},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":159124,"byte_end":159133,"line_start":170,"line_end":170,"column_start":10,"column_end":19},"name":"Matrix3x5","qualname":"::base::alias::Matrix3x5","value":"Matrix<N, U3, U5, Owned<N, U3, U5>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x5 matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x5 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":158941,"byte_end":158989,"line_start":167,"line_end":167,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":158990,"byte_end":158993,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":158994,"byte_end":159114,"line_start":169,"line_end":169,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1426},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":159359,"byte_end":159368,"line_start":174,"line_end":174,"column_start":10,"column_end":19},"name":"Matrix3x6","qualname":"::base::alias::Matrix3x6","value":"Matrix<N, U3, U6, Owned<N, U3, U6>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x6 matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x6 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":159176,"byte_end":159224,"line_start":171,"line_end":171,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":159225,"byte_end":159228,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":159229,"byte_end":159349,"line_start":173,"line_end":173,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1428},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":159595,"byte_end":159604,"line_start":179,"line_end":179,"column_start":10,"column_end":19},"name":"Matrix4x5","qualname":"::base::alias::Matrix4x5","value":"Matrix<N, U4, U5, Owned<N, U4, U5>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x5 matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x5 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":159412,"byte_end":159460,"line_start":176,"line_end":176,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":159461,"byte_end":159464,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":159465,"byte_end":159585,"line_start":178,"line_end":178,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1430},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":159830,"byte_end":159839,"line_start":183,"line_end":183,"column_start":10,"column_end":19},"name":"Matrix4x6","qualname":"::base::alias::Matrix4x6","value":"Matrix<N, U4, U6, Owned<N, U4, U6>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x6 matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x6 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":159647,"byte_end":159695,"line_start":180,"line_end":180,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":159696,"byte_end":159699,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":159700,"byte_end":159820,"line_start":182,"line_end":182,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1432},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":160066,"byte_end":160075,"line_start":188,"line_end":188,"column_start":10,"column_end":19},"name":"Matrix5x6","qualname":"::base::alias::Matrix5x6","value":"Matrix<N, U5, U6, Owned<N, U5, U6>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x6 matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x6 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":159883,"byte_end":159931,"line_start":185,"line_end":185,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":159932,"byte_end":159935,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":159936,"byte_end":160056,"line_start":187,"line_end":187,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1434},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":160302,"byte_end":160311,"line_start":193,"line_end":193,"column_start":10,"column_end":19},"name":"Matrix2x1","qualname":"::base::alias::Matrix2x1","value":"Matrix<N, U2, U1, Owned<N, U2, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x1 matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x1 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":160119,"byte_end":160167,"line_start":190,"line_end":190,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":160168,"byte_end":160171,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":160172,"byte_end":160292,"line_start":192,"line_end":192,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1436},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":160537,"byte_end":160546,"line_start":197,"line_end":197,"column_start":10,"column_end":19},"name":"Matrix3x1","qualname":"::base::alias::Matrix3x1","value":"Matrix<N, U3, U1, Owned<N, U3, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x1 matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x1 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":160354,"byte_end":160402,"line_start":194,"line_end":194,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":160403,"byte_end":160406,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":160407,"byte_end":160527,"line_start":196,"line_end":196,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1438},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":160772,"byte_end":160781,"line_start":201,"line_end":201,"column_start":10,"column_end":19},"name":"Matrix4x1","qualname":"::base::alias::Matrix4x1","value":"Matrix<N, U4, U1, Owned<N, U4, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x1 matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x1 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":160589,"byte_end":160637,"line_start":198,"line_end":198,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":160638,"byte_end":160641,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":160642,"byte_end":160762,"line_start":200,"line_end":200,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1440},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":161007,"byte_end":161016,"line_start":205,"line_end":205,"column_start":10,"column_end":19},"name":"Matrix5x1","qualname":"::base::alias::Matrix5x1","value":"Matrix<N, U5, U1, Owned<N, U5, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x1 matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x1 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":160824,"byte_end":160872,"line_start":202,"line_end":202,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":160873,"byte_end":160876,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":160877,"byte_end":160997,"line_start":204,"line_end":204,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1442},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":161242,"byte_end":161251,"line_start":209,"line_end":209,"column_start":10,"column_end":19},"name":"Matrix6x1","qualname":"::base::alias::Matrix6x1","value":"Matrix<N, U6, U1, Owned<N, U6, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x1 matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x1 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":161059,"byte_end":161107,"line_start":206,"line_end":206,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":161108,"byte_end":161111,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":161112,"byte_end":161232,"line_start":208,"line_end":208,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1444},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":161478,"byte_end":161487,"line_start":214,"line_end":214,"column_start":10,"column_end":19},"name":"Matrix3x2","qualname":"::base::alias::Matrix3x2","value":"Matrix<N, U3, U2, Owned<N, U3, U2>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x2 matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x2 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":161295,"byte_end":161343,"line_start":211,"line_end":211,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":161344,"byte_end":161347,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":161348,"byte_end":161468,"line_start":213,"line_end":213,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1446},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":161713,"byte_end":161722,"line_start":218,"line_end":218,"column_start":10,"column_end":19},"name":"Matrix4x2","qualname":"::base::alias::Matrix4x2","value":"Matrix<N, U4, U2, Owned<N, U4, U2>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x2 matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x2 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":161530,"byte_end":161578,"line_start":215,"line_end":215,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":161579,"byte_end":161582,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":161583,"byte_end":161703,"line_start":217,"line_end":217,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1448},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":161948,"byte_end":161957,"line_start":222,"line_end":222,"column_start":10,"column_end":19},"name":"Matrix5x2","qualname":"::base::alias::Matrix5x2","value":"Matrix<N, U5, U2, Owned<N, U5, U2>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x2 matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x2 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":161765,"byte_end":161813,"line_start":219,"line_end":219,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":161814,"byte_end":161817,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":161818,"byte_end":161938,"line_start":221,"line_end":221,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1450},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":162183,"byte_end":162192,"line_start":226,"line_end":226,"column_start":10,"column_end":19},"name":"Matrix6x2","qualname":"::base::alias::Matrix6x2","value":"Matrix<N, U6, U2, Owned<N, U6, U2>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x2 matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x2 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":162000,"byte_end":162048,"line_start":223,"line_end":223,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":162049,"byte_end":162052,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":162053,"byte_end":162173,"line_start":225,"line_end":225,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1452},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":162419,"byte_end":162428,"line_start":231,"line_end":231,"column_start":10,"column_end":19},"name":"Matrix4x3","qualname":"::base::alias::Matrix4x3","value":"Matrix<N, U4, U3, Owned<N, U4, U3>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x3 matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x3 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":162236,"byte_end":162284,"line_start":228,"line_end":228,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":162285,"byte_end":162288,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":162289,"byte_end":162409,"line_start":230,"line_end":230,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1454},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":162654,"byte_end":162663,"line_start":235,"line_end":235,"column_start":10,"column_end":19},"name":"Matrix5x3","qualname":"::base::alias::Matrix5x3","value":"Matrix<N, U5, U3, Owned<N, U5, U3>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x3 matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x3 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":162471,"byte_end":162519,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":162520,"byte_end":162523,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":162524,"byte_end":162644,"line_start":234,"line_end":234,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1456},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":162889,"byte_end":162898,"line_start":239,"line_end":239,"column_start":10,"column_end":19},"name":"Matrix6x3","qualname":"::base::alias::Matrix6x3","value":"Matrix<N, U6, U3, Owned<N, U6, U3>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x3 matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x3 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":162706,"byte_end":162754,"line_start":236,"line_end":236,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":162755,"byte_end":162758,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":162759,"byte_end":162879,"line_start":238,"line_end":238,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1458},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":163125,"byte_end":163134,"line_start":244,"line_end":244,"column_start":10,"column_end":19},"name":"Matrix5x4","qualname":"::base::alias::Matrix5x4","value":"Matrix<N, U5, U4, Owned<N, U5, U4>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x4 matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x4 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":162942,"byte_end":162990,"line_start":241,"line_end":241,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":162991,"byte_end":162994,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":162995,"byte_end":163115,"line_start":243,"line_end":243,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1460},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":163360,"byte_end":163369,"line_start":248,"line_end":248,"column_start":10,"column_end":19},"name":"Matrix6x4","qualname":"::base::alias::Matrix6x4","value":"Matrix<N, U6, U4, Owned<N, U6, U4>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x4 matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x4 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":163177,"byte_end":163225,"line_start":245,"line_end":245,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":163226,"byte_end":163229,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":163230,"byte_end":163350,"line_start":247,"line_end":247,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1462},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":163596,"byte_end":163605,"line_start":253,"line_end":253,"column_start":10,"column_end":19},"name":"Matrix6x5","qualname":"::base::alias::Matrix6x5","value":"Matrix<N, U6, U5, Owned<N, U6, U5>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x5 matrix.","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x5 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":163413,"byte_end":163461,"line_start":250,"line_end":250,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":163462,"byte_end":163465,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":163466,"byte_end":163586,"line_start":252,"line_end":252,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1464},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":163783,"byte_end":163790,"line_start":264,"line_end":264,"column_start":10,"column_end":17},"name":"DVector","qualname":"::base::alias::DVector","value":"Matrix<N, Dynamic, U1, VecStorage<N, Dynamic, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A dynamically sized column vector.\n","sig":null,"attributes":[{"value":"/ A dynamically sized column vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":163687,"byte_end":163725,"line_start":262,"line_end":262,"column_start":1,"column_end":39}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":163726,"byte_end":163773,"line_start":263,"line_end":263,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1466},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":163910,"byte_end":163917,"line_start":267,"line_end":267,"column_start":10,"column_end":17},"name":"VectorN","qualname":"::base::alias::VectorN","value":"Matrix<N, D, U1, Owned<N, D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized D-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A statically sized D-dimensional column vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":163849,"byte_end":163900,"line_start":266,"line_end":266,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1469},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":164023,"byte_end":164030,"line_start":270,"line_end":270,"column_start":10,"column_end":17},"name":"Vector1","qualname":"::base::alias::Vector1","value":"Matrix<N, U1, U1, Owned<N, U1, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 1-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 1-dimensional column vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":163962,"byte_end":164013,"line_start":269,"line_end":269,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1471},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":164134,"byte_end":164141,"line_start":272,"line_end":272,"column_start":10,"column_end":17},"name":"Vector2","qualname":"::base::alias::Vector2","value":"Matrix<N, U2, U1, Owned<N, U2, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 2-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 2-dimensional column vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":164073,"byte_end":164124,"line_start":271,"line_end":271,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1473},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":164245,"byte_end":164252,"line_start":274,"line_end":274,"column_start":10,"column_end":17},"name":"Vector3","qualname":"::base::alias::Vector3","value":"Matrix<N, U3, U1, Owned<N, U3, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 3-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 3-dimensional column vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":164184,"byte_end":164235,"line_start":273,"line_end":273,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1475},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":164356,"byte_end":164363,"line_start":276,"line_end":276,"column_start":10,"column_end":17},"name":"Vector4","qualname":"::base::alias::Vector4","value":"Matrix<N, U4, U1, Owned<N, U4, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 4-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 4-dimensional column vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":164295,"byte_end":164346,"line_start":275,"line_end":275,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1477},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":164467,"byte_end":164474,"line_start":278,"line_end":278,"column_start":10,"column_end":17},"name":"Vector5","qualname":"::base::alias::Vector5","value":"Matrix<N, U5, U1, Owned<N, U5, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 5-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 5-dimensional column vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":164406,"byte_end":164457,"line_start":277,"line_end":277,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1479},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":164578,"byte_end":164585,"line_start":280,"line_end":280,"column_start":10,"column_end":17},"name":"Vector6","qualname":"::base::alias::Vector6","value":"Matrix<N, U6, U1, Owned<N, U6, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 6-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 6-dimensional column vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":164517,"byte_end":164568,"line_start":279,"line_end":279,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1481},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":164757,"byte_end":164767,"line_start":291,"line_end":291,"column_start":10,"column_end":20},"name":"RowDVector","qualname":"::base::alias::RowDVector","value":"Matrix<N, U1, Dynamic, VecStorage<N, U1, Dynamic>>","parent":null,"children":[],"decl_id":null,"docs":" A dynamically sized row vector.\n","sig":null,"attributes":[{"value":"/ A dynamically sized row vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":164664,"byte_end":164699,"line_start":289,"line_end":289,"column_start":1,"column_end":36}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":164700,"byte_end":164747,"line_start":290,"line_end":290,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1483},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":164884,"byte_end":164894,"line_start":294,"line_end":294,"column_start":10,"column_end":20},"name":"RowVectorN","qualname":"::base::alias::RowVectorN","value":"Matrix<N, U1, D, Owned<N, U1, D>>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized D-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A statically sized D-dimensional row vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":164826,"byte_end":164874,"line_start":293,"line_end":293,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1486},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":164997,"byte_end":165007,"line_start":297,"line_end":297,"column_start":10,"column_end":20},"name":"RowVector1","qualname":"::base::alias::RowVector1","value":"Matrix<N, U1, U1, Owned<N, U1, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 1-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 1-dimensional row vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":164939,"byte_end":164987,"line_start":296,"line_end":296,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1488},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":165108,"byte_end":165118,"line_start":299,"line_end":299,"column_start":10,"column_end":20},"name":"RowVector2","qualname":"::base::alias::RowVector2","value":"Matrix<N, U1, U2, Owned<N, U1, U2>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 2-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 2-dimensional row vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":165050,"byte_end":165098,"line_start":298,"line_end":298,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1490},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":165219,"byte_end":165229,"line_start":301,"line_end":301,"column_start":10,"column_end":20},"name":"RowVector3","qualname":"::base::alias::RowVector3","value":"Matrix<N, U1, U3, Owned<N, U1, U3>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 3-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 3-dimensional row vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":165161,"byte_end":165209,"line_start":300,"line_end":300,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1492},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":165330,"byte_end":165340,"line_start":303,"line_end":303,"column_start":10,"column_end":20},"name":"RowVector4","qualname":"::base::alias::RowVector4","value":"Matrix<N, U1, U4, Owned<N, U1, U4>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 4-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 4-dimensional row vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":165272,"byte_end":165320,"line_start":302,"line_end":302,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1494},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":165441,"byte_end":165451,"line_start":305,"line_end":305,"column_start":10,"column_end":20},"name":"RowVector5","qualname":"::base::alias::RowVector5","value":"Matrix<N, U1, U5, Owned<N, U1, U5>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 5-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 5-dimensional row vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":165383,"byte_end":165431,"line_start":304,"line_end":304,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1496},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":165552,"byte_end":165562,"line_start":307,"line_end":307,"column_start":10,"column_end":20},"name":"RowVector6","qualname":"::base::alias::RowVector6","value":"Matrix<N, U1, U6, Owned<N, U1, U6>>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 6-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 6-dimensional row vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias.rs","byte_start":165494,"byte_end":165542,"line_start":306,"line_end":306,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1531},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":166000,"byte_end":166013,"line_start":15,"line_end":15,"column_start":10,"column_end":23},"name":"MatrixSliceMN","qualname":"::base::alias_slice::MatrixSliceMN","value":"Matrix<N, R, C, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with `R` rows and `C` columns.","sig":null,"attributes":[{"value":"/ A column-major matrix slice with `R` rows and `C` columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":165803,"byte_end":165865,"line_start":12,"line_end":12,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":165866,"byte_end":165869,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":165870,"byte_end":165990,"line_start":14,"line_end":14,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1538},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":166316,"byte_end":166328,"line_start":21,"line_end":21,"column_start":10,"column_end":22},"name":"MatrixSliceN","qualname":"::base::alias_slice::MatrixSliceN","value":"Matrix<N, D, D, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with `D` rows and columns.","sig":null,"attributes":[{"value":"/ A column-major matrix slice with `D` rows and columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":166123,"byte_end":166181,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":166182,"byte_end":166185,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":166186,"byte_end":166306,"line_start":20,"line_end":20,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1544},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":166638,"byte_end":166650,"line_start":27,"line_end":27,"column_start":10,"column_end":22},"name":"DMatrixSlice","qualname":"::base::alias_slice::DMatrixSlice","value":"Matrix<N, Dynamic, Dynamic, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice dynamic numbers of rows and columns.","sig":null,"attributes":[{"value":"/ A column-major matrix slice dynamic numbers of rows and columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":166435,"byte_end":166503,"line_start":24,"line_end":24,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":166504,"byte_end":166507,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":166508,"byte_end":166628,"line_start":26,"line_end":26,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1549},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":166955,"byte_end":166967,"line_start":33,"line_end":33,"column_start":10,"column_end":22},"name":"MatrixSlice1","qualname":"::base::alias_slice::MatrixSlice1","value":"Matrix<N, U1, U1, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x1 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 1x1 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":166784,"byte_end":166820,"line_start":30,"line_end":30,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":166821,"byte_end":166824,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":166825,"byte_end":166945,"line_start":32,"line_end":32,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1554},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":167246,"byte_end":167258,"line_start":38,"line_end":38,"column_start":10,"column_end":22},"name":"MatrixSlice2","qualname":"::base::alias_slice::MatrixSlice2","value":"Matrix<N, U2, U2, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x2 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 2x2 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":167075,"byte_end":167111,"line_start":35,"line_end":35,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":167112,"byte_end":167115,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":167116,"byte_end":167236,"line_start":37,"line_end":37,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1559},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":167537,"byte_end":167549,"line_start":43,"line_end":43,"column_start":10,"column_end":22},"name":"MatrixSlice3","qualname":"::base::alias_slice::MatrixSlice3","value":"Matrix<N, U3, U3, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x3 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 3x3 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":167366,"byte_end":167402,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":167403,"byte_end":167406,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":167407,"byte_end":167527,"line_start":42,"line_end":42,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1564},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":167828,"byte_end":167840,"line_start":48,"line_end":48,"column_start":10,"column_end":22},"name":"MatrixSlice4","qualname":"::base::alias_slice::MatrixSlice4","value":"Matrix<N, U4, U4, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x4 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 4x4 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":167657,"byte_end":167693,"line_start":45,"line_end":45,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":167694,"byte_end":167697,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":167698,"byte_end":167818,"line_start":47,"line_end":47,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1569},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":168119,"byte_end":168131,"line_start":53,"line_end":53,"column_start":10,"column_end":22},"name":"MatrixSlice5","qualname":"::base::alias_slice::MatrixSlice5","value":"Matrix<N, U5, U5, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x5 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 5x5 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":167948,"byte_end":167984,"line_start":50,"line_end":50,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":167985,"byte_end":167988,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":167989,"byte_end":168109,"line_start":52,"line_end":52,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1574},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":168410,"byte_end":168422,"line_start":58,"line_end":58,"column_start":10,"column_end":22},"name":"MatrixSlice6","qualname":"::base::alias_slice::MatrixSlice6","value":"Matrix<N, U6, U6, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x6 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 6x6 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":168239,"byte_end":168275,"line_start":55,"line_end":55,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":168276,"byte_end":168279,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":168280,"byte_end":168400,"line_start":57,"line_end":57,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1579},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":168702,"byte_end":168716,"line_start":64,"line_end":64,"column_start":10,"column_end":24},"name":"MatrixSlice1x2","qualname":"::base::alias_slice::MatrixSlice1x2","value":"Matrix<N, U1, U2, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x2 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 1x2 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":168531,"byte_end":168567,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":168568,"byte_end":168571,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":168572,"byte_end":168692,"line_start":63,"line_end":63,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1584},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":168995,"byte_end":169009,"line_start":69,"line_end":69,"column_start":10,"column_end":24},"name":"MatrixSlice1x3","qualname":"::base::alias_slice::MatrixSlice1x3","value":"Matrix<N, U1, U3, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x3 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 1x3 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":168824,"byte_end":168860,"line_start":66,"line_end":66,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":168861,"byte_end":168864,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":168865,"byte_end":168985,"line_start":68,"line_end":68,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1589},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":169288,"byte_end":169302,"line_start":74,"line_end":74,"column_start":10,"column_end":24},"name":"MatrixSlice1x4","qualname":"::base::alias_slice::MatrixSlice1x4","value":"Matrix<N, U1, U4, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x4 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 1x4 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":169117,"byte_end":169153,"line_start":71,"line_end":71,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":169154,"byte_end":169157,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":169158,"byte_end":169278,"line_start":73,"line_end":73,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1594},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":169581,"byte_end":169595,"line_start":79,"line_end":79,"column_start":10,"column_end":24},"name":"MatrixSlice1x5","qualname":"::base::alias_slice::MatrixSlice1x5","value":"Matrix<N, U1, U5, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x5 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 1x5 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":169410,"byte_end":169446,"line_start":76,"line_end":76,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":169447,"byte_end":169450,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":169451,"byte_end":169571,"line_start":78,"line_end":78,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1599},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":169874,"byte_end":169888,"line_start":84,"line_end":84,"column_start":10,"column_end":24},"name":"MatrixSlice1x6","qualname":"::base::alias_slice::MatrixSlice1x6","value":"Matrix<N, U1, U6, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x6 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 1x6 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":169703,"byte_end":169739,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":169740,"byte_end":169743,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":169744,"byte_end":169864,"line_start":83,"line_end":83,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1604},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":170168,"byte_end":170182,"line_start":90,"line_end":90,"column_start":10,"column_end":24},"name":"MatrixSlice2x1","qualname":"::base::alias_slice::MatrixSlice2x1","value":"Matrix<N, U2, U1, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x1 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 2x1 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":169997,"byte_end":170033,"line_start":87,"line_end":87,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":170034,"byte_end":170037,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":170038,"byte_end":170158,"line_start":89,"line_end":89,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1609},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":170461,"byte_end":170475,"line_start":95,"line_end":95,"column_start":10,"column_end":24},"name":"MatrixSlice2x3","qualname":"::base::alias_slice::MatrixSlice2x3","value":"Matrix<N, U2, U3, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x3 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 2x3 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":170290,"byte_end":170326,"line_start":92,"line_end":92,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":170327,"byte_end":170330,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":170331,"byte_end":170451,"line_start":94,"line_end":94,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1614},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":170754,"byte_end":170768,"line_start":100,"line_end":100,"column_start":10,"column_end":24},"name":"MatrixSlice2x4","qualname":"::base::alias_slice::MatrixSlice2x4","value":"Matrix<N, U2, U4, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x4 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 2x4 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":170583,"byte_end":170619,"line_start":97,"line_end":97,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":170620,"byte_end":170623,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":170624,"byte_end":170744,"line_start":99,"line_end":99,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1619},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":171047,"byte_end":171061,"line_start":105,"line_end":105,"column_start":10,"column_end":24},"name":"MatrixSlice2x5","qualname":"::base::alias_slice::MatrixSlice2x5","value":"Matrix<N, U2, U5, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x5 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 2x5 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":170876,"byte_end":170912,"line_start":102,"line_end":102,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":170913,"byte_end":170916,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":170917,"byte_end":171037,"line_start":104,"line_end":104,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1624},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":171340,"byte_end":171354,"line_start":110,"line_end":110,"column_start":10,"column_end":24},"name":"MatrixSlice2x6","qualname":"::base::alias_slice::MatrixSlice2x6","value":"Matrix<N, U2, U6, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x6 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 2x6 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":171169,"byte_end":171205,"line_start":107,"line_end":107,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":171206,"byte_end":171209,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":171210,"byte_end":171330,"line_start":109,"line_end":109,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1629},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":171634,"byte_end":171648,"line_start":116,"line_end":116,"column_start":10,"column_end":24},"name":"MatrixSlice3x1","qualname":"::base::alias_slice::MatrixSlice3x1","value":"Matrix<N, U3, U1, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x1 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 3x1 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":171463,"byte_end":171499,"line_start":113,"line_end":113,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":171500,"byte_end":171503,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":171504,"byte_end":171624,"line_start":115,"line_end":115,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1634},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":171927,"byte_end":171941,"line_start":121,"line_end":121,"column_start":10,"column_end":24},"name":"MatrixSlice3x2","qualname":"::base::alias_slice::MatrixSlice3x2","value":"Matrix<N, U3, U2, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x2 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 3x2 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":171756,"byte_end":171792,"line_start":118,"line_end":118,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":171793,"byte_end":171796,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":171797,"byte_end":171917,"line_start":120,"line_end":120,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1639},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":172220,"byte_end":172234,"line_start":126,"line_end":126,"column_start":10,"column_end":24},"name":"MatrixSlice3x4","qualname":"::base::alias_slice::MatrixSlice3x4","value":"Matrix<N, U3, U4, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x4 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 3x4 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":172049,"byte_end":172085,"line_start":123,"line_end":123,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":172086,"byte_end":172089,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":172090,"byte_end":172210,"line_start":125,"line_end":125,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1644},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":172513,"byte_end":172527,"line_start":131,"line_end":131,"column_start":10,"column_end":24},"name":"MatrixSlice3x5","qualname":"::base::alias_slice::MatrixSlice3x5","value":"Matrix<N, U3, U5, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x5 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 3x5 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":172342,"byte_end":172378,"line_start":128,"line_end":128,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":172379,"byte_end":172382,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":172383,"byte_end":172503,"line_start":130,"line_end":130,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1649},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":172806,"byte_end":172820,"line_start":136,"line_end":136,"column_start":10,"column_end":24},"name":"MatrixSlice3x6","qualname":"::base::alias_slice::MatrixSlice3x6","value":"Matrix<N, U3, U6, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x6 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 3x6 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":172635,"byte_end":172671,"line_start":133,"line_end":133,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":172672,"byte_end":172675,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":172676,"byte_end":172796,"line_start":135,"line_end":135,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1654},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":173100,"byte_end":173114,"line_start":142,"line_end":142,"column_start":10,"column_end":24},"name":"MatrixSlice4x1","qualname":"::base::alias_slice::MatrixSlice4x1","value":"Matrix<N, U4, U1, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x1 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 4x1 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":172929,"byte_end":172965,"line_start":139,"line_end":139,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":172966,"byte_end":172969,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":172970,"byte_end":173090,"line_start":141,"line_end":141,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1659},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":173393,"byte_end":173407,"line_start":147,"line_end":147,"column_start":10,"column_end":24},"name":"MatrixSlice4x2","qualname":"::base::alias_slice::MatrixSlice4x2","value":"Matrix<N, U4, U2, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x2 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 4x2 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":173222,"byte_end":173258,"line_start":144,"line_end":144,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":173259,"byte_end":173262,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":173263,"byte_end":173383,"line_start":146,"line_end":146,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1664},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":173686,"byte_end":173700,"line_start":152,"line_end":152,"column_start":10,"column_end":24},"name":"MatrixSlice4x3","qualname":"::base::alias_slice::MatrixSlice4x3","value":"Matrix<N, U4, U3, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x3 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 4x3 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":173515,"byte_end":173551,"line_start":149,"line_end":149,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":173552,"byte_end":173555,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":173556,"byte_end":173676,"line_start":151,"line_end":151,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1669},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":173979,"byte_end":173993,"line_start":157,"line_end":157,"column_start":10,"column_end":24},"name":"MatrixSlice4x5","qualname":"::base::alias_slice::MatrixSlice4x5","value":"Matrix<N, U4, U5, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x5 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 4x5 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":173808,"byte_end":173844,"line_start":154,"line_end":154,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":173845,"byte_end":173848,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":173849,"byte_end":173969,"line_start":156,"line_end":156,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1674},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":174272,"byte_end":174286,"line_start":162,"line_end":162,"column_start":10,"column_end":24},"name":"MatrixSlice4x6","qualname":"::base::alias_slice::MatrixSlice4x6","value":"Matrix<N, U4, U6, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x6 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 4x6 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":174101,"byte_end":174137,"line_start":159,"line_end":159,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":174138,"byte_end":174141,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":174142,"byte_end":174262,"line_start":161,"line_end":161,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1679},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":174566,"byte_end":174580,"line_start":168,"line_end":168,"column_start":10,"column_end":24},"name":"MatrixSlice5x1","qualname":"::base::alias_slice::MatrixSlice5x1","value":"Matrix<N, U5, U1, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x1 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 5x1 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":174395,"byte_end":174431,"line_start":165,"line_end":165,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":174432,"byte_end":174435,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":174436,"byte_end":174556,"line_start":167,"line_end":167,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1684},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":174859,"byte_end":174873,"line_start":173,"line_end":173,"column_start":10,"column_end":24},"name":"MatrixSlice5x2","qualname":"::base::alias_slice::MatrixSlice5x2","value":"Matrix<N, U5, U2, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x2 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 5x2 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":174688,"byte_end":174724,"line_start":170,"line_end":170,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":174725,"byte_end":174728,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":174729,"byte_end":174849,"line_start":172,"line_end":172,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1689},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":175152,"byte_end":175166,"line_start":178,"line_end":178,"column_start":10,"column_end":24},"name":"MatrixSlice5x3","qualname":"::base::alias_slice::MatrixSlice5x3","value":"Matrix<N, U5, U3, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x3 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 5x3 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":174981,"byte_end":175017,"line_start":175,"line_end":175,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":175018,"byte_end":175021,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":175022,"byte_end":175142,"line_start":177,"line_end":177,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1694},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":175445,"byte_end":175459,"line_start":183,"line_end":183,"column_start":10,"column_end":24},"name":"MatrixSlice5x4","qualname":"::base::alias_slice::MatrixSlice5x4","value":"Matrix<N, U5, U4, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x4 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 5x4 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":175274,"byte_end":175310,"line_start":180,"line_end":180,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":175311,"byte_end":175314,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":175315,"byte_end":175435,"line_start":182,"line_end":182,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1699},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":175738,"byte_end":175752,"line_start":188,"line_end":188,"column_start":10,"column_end":24},"name":"MatrixSlice5x6","qualname":"::base::alias_slice::MatrixSlice5x6","value":"Matrix<N, U5, U6, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x6 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 5x6 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":175567,"byte_end":175603,"line_start":185,"line_end":185,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":175604,"byte_end":175607,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":175608,"byte_end":175728,"line_start":187,"line_end":187,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1704},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":176032,"byte_end":176046,"line_start":194,"line_end":194,"column_start":10,"column_end":24},"name":"MatrixSlice6x1","qualname":"::base::alias_slice::MatrixSlice6x1","value":"Matrix<N, U6, U1, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x1 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 6x1 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":175861,"byte_end":175897,"line_start":191,"line_end":191,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":175898,"byte_end":175901,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":175902,"byte_end":176022,"line_start":193,"line_end":193,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1709},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":176325,"byte_end":176339,"line_start":199,"line_end":199,"column_start":10,"column_end":24},"name":"MatrixSlice6x2","qualname":"::base::alias_slice::MatrixSlice6x2","value":"Matrix<N, U6, U2, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x2 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 6x2 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":176154,"byte_end":176190,"line_start":196,"line_end":196,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":176191,"byte_end":176194,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":176195,"byte_end":176315,"line_start":198,"line_end":198,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1714},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":176618,"byte_end":176632,"line_start":204,"line_end":204,"column_start":10,"column_end":24},"name":"MatrixSlice6x3","qualname":"::base::alias_slice::MatrixSlice6x3","value":"Matrix<N, U6, U3, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x3 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 6x3 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":176447,"byte_end":176483,"line_start":201,"line_end":201,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":176484,"byte_end":176487,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":176488,"byte_end":176608,"line_start":203,"line_end":203,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1719},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":176911,"byte_end":176925,"line_start":209,"line_end":209,"column_start":10,"column_end":24},"name":"MatrixSlice6x4","qualname":"::base::alias_slice::MatrixSlice6x4","value":"Matrix<N, U6, U4, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x4 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 6x4 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":176740,"byte_end":176776,"line_start":206,"line_end":206,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":176777,"byte_end":176780,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":176781,"byte_end":176901,"line_start":208,"line_end":208,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1724},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":177204,"byte_end":177218,"line_start":214,"line_end":214,"column_start":10,"column_end":24},"name":"MatrixSlice6x5","qualname":"::base::alias_slice::MatrixSlice6x5","value":"Matrix<N, U6, U5, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x5 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 6x5 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":177033,"byte_end":177069,"line_start":211,"line_end":211,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":177070,"byte_end":177073,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":177074,"byte_end":177194,"line_start":213,"line_end":213,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1729},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":177422,"byte_end":177436,"line_start":218,"line_end":218,"column_start":10,"column_end":24},"name":"MatrixSlice1xX","qualname":"::base::alias_slice::MatrixSlice1xX","value":"Matrix<N, U1, Dynamic, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 1 row and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 1 row and a number of columns chosen at runtime.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":177327,"byte_end":177412,"line_start":217,"line_end":217,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":1734},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":177650,"byte_end":177664,"line_start":221,"line_end":221,"column_start":10,"column_end":24},"name":"MatrixSlice2xX","qualname":"::base::alias_slice::MatrixSlice2xX","value":"Matrix<N, U2, Dynamic, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 2 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 2 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":177554,"byte_end":177640,"line_start":220,"line_end":220,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1739},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":177878,"byte_end":177892,"line_start":224,"line_end":224,"column_start":10,"column_end":24},"name":"MatrixSlice3xX","qualname":"::base::alias_slice::MatrixSlice3xX","value":"Matrix<N, U3, Dynamic, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 3 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 3 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":177782,"byte_end":177868,"line_start":223,"line_end":223,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1744},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":178106,"byte_end":178120,"line_start":227,"line_end":227,"column_start":10,"column_end":24},"name":"MatrixSlice4xX","qualname":"::base::alias_slice::MatrixSlice4xX","value":"Matrix<N, U4, Dynamic, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 4 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 4 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":178010,"byte_end":178096,"line_start":226,"line_end":226,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1749},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":178334,"byte_end":178348,"line_start":230,"line_end":230,"column_start":10,"column_end":24},"name":"MatrixSlice5xX","qualname":"::base::alias_slice::MatrixSlice5xX","value":"Matrix<N, U5, Dynamic, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 5 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 5 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":178238,"byte_end":178324,"line_start":229,"line_end":229,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1754},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":178562,"byte_end":178576,"line_start":233,"line_end":233,"column_start":10,"column_end":24},"name":"MatrixSlice6xX","qualname":"::base::alias_slice::MatrixSlice6xX","value":"Matrix<N, U6, Dynamic, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 6 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 6 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":178466,"byte_end":178552,"line_start":232,"line_end":232,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1759},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":178790,"byte_end":178804,"line_start":237,"line_end":237,"column_start":10,"column_end":24},"name":"MatrixSliceXx1","qualname":"::base::alias_slice::MatrixSliceXx1","value":"Matrix<N, Dynamic, U1, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 1 column.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 1 column.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":178695,"byte_end":178780,"line_start":236,"line_end":236,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":1764},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":179023,"byte_end":179037,"line_start":240,"line_end":240,"column_start":10,"column_end":24},"name":"MatrixSliceXx2","qualname":"::base::alias_slice::MatrixSliceXx2","value":"Matrix<N, Dynamic, U2, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 2 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 2 columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":178927,"byte_end":179013,"line_start":239,"line_end":239,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1769},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":179256,"byte_end":179270,"line_start":243,"line_end":243,"column_start":10,"column_end":24},"name":"MatrixSliceXx3","qualname":"::base::alias_slice::MatrixSliceXx3","value":"Matrix<N, Dynamic, U3, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 3 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 3 columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":179160,"byte_end":179246,"line_start":242,"line_end":242,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1774},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":179489,"byte_end":179503,"line_start":246,"line_end":246,"column_start":10,"column_end":24},"name":"MatrixSliceXx4","qualname":"::base::alias_slice::MatrixSliceXx4","value":"Matrix<N, Dynamic, U4, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 4 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 4 columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":179393,"byte_end":179479,"line_start":245,"line_end":245,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1779},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":179722,"byte_end":179736,"line_start":249,"line_end":249,"column_start":10,"column_end":24},"name":"MatrixSliceXx5","qualname":"::base::alias_slice::MatrixSliceXx5","value":"Matrix<N, Dynamic, U5, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 5 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 5 columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":179626,"byte_end":179712,"line_start":248,"line_end":248,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1784},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":179955,"byte_end":179969,"line_start":252,"line_end":252,"column_start":10,"column_end":24},"name":"MatrixSliceXx6","qualname":"::base::alias_slice::MatrixSliceXx6","value":"Matrix<N, Dynamic, U6, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 6 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 6 columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":179859,"byte_end":179945,"line_start":251,"line_end":251,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1789},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":180143,"byte_end":180155,"line_start":256,"line_end":256,"column_start":10,"column_end":22},"name":"VectorSliceN","qualname":"::base::alias_slice::VectorSliceN","value":"Matrix<N, D, U1, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column vector slice with `D` rows.\n","sig":null,"attributes":[{"value":"/ A column vector slice with `D` rows.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":180093,"byte_end":180133,"line_start":255,"line_end":255,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":1795},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":180336,"byte_end":180348,"line_start":260,"line_end":260,"column_start":10,"column_end":22},"name":"DVectorSlice","qualname":"::base::alias_slice::DVectorSlice","value":"Matrix<N, Dynamic, U1, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column vector slice dynamic numbers of rows and columns.\n","sig":null,"attributes":[{"value":"/ A column vector slice dynamic numbers of rows and columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":180264,"byte_end":180326,"line_start":259,"line_end":259,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":1800},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":180636,"byte_end":180648,"line_start":266,"line_end":266,"column_start":10,"column_end":22},"name":"VectorSlice1","qualname":"::base::alias_slice::VectorSlice1","value":"Matrix<N, U1, U1, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A 1D column vector slice.","sig":null,"attributes":[{"value":"/ A 1D column vector slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":180472,"byte_end":180501,"line_start":263,"line_end":263,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":180502,"byte_end":180505,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":180506,"byte_end":180626,"line_start":265,"line_end":265,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1805},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":180920,"byte_end":180932,"line_start":271,"line_end":271,"column_start":10,"column_end":22},"name":"VectorSlice2","qualname":"::base::alias_slice::VectorSlice2","value":"Matrix<N, U2, U1, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A 2D column vector slice.","sig":null,"attributes":[{"value":"/ A 2D column vector slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":180756,"byte_end":180785,"line_start":268,"line_end":268,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":180786,"byte_end":180789,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":180790,"byte_end":180910,"line_start":270,"line_end":270,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1810},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":181204,"byte_end":181216,"line_start":276,"line_end":276,"column_start":10,"column_end":22},"name":"VectorSlice3","qualname":"::base::alias_slice::VectorSlice3","value":"Matrix<N, U3, U1, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A 3D column vector slice.","sig":null,"attributes":[{"value":"/ A 3D column vector slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":181040,"byte_end":181069,"line_start":273,"line_end":273,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":181070,"byte_end":181073,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":181074,"byte_end":181194,"line_start":275,"line_end":275,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1815},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":181488,"byte_end":181500,"line_start":281,"line_end":281,"column_start":10,"column_end":22},"name":"VectorSlice4","qualname":"::base::alias_slice::VectorSlice4","value":"Matrix<N, U4, U1, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A 4D column vector slice.","sig":null,"attributes":[{"value":"/ A 4D column vector slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":181324,"byte_end":181353,"line_start":278,"line_end":278,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":181354,"byte_end":181357,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":181358,"byte_end":181478,"line_start":280,"line_end":280,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1820},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":181772,"byte_end":181784,"line_start":286,"line_end":286,"column_start":10,"column_end":22},"name":"VectorSlice5","qualname":"::base::alias_slice::VectorSlice5","value":"Matrix<N, U5, U1, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A 5D column vector slice.","sig":null,"attributes":[{"value":"/ A 5D column vector slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":181608,"byte_end":181637,"line_start":283,"line_end":283,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":181638,"byte_end":181641,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":181642,"byte_end":181762,"line_start":285,"line_end":285,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1825},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":182056,"byte_end":182068,"line_start":291,"line_end":291,"column_start":10,"column_end":22},"name":"VectorSlice6","qualname":"::base::alias_slice::VectorSlice6","value":"Matrix<N, U6, U1, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A 6D column vector slice.","sig":null,"attributes":[{"value":"/ A 6D column vector slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":181892,"byte_end":181921,"line_start":288,"line_end":288,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":181922,"byte_end":181925,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":181926,"byte_end":182046,"line_start":290,"line_end":290,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1830},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":182432,"byte_end":182448,"line_start":304,"line_end":304,"column_start":10,"column_end":26},"name":"MatrixSliceMutMN","qualname":"::base::alias_slice::MatrixSliceMutMN","value":"Matrix<N, R, C, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with `R` rows and `C` columns.","sig":null,"attributes":[{"value":"/ A column-major matrix slice with `R` rows and `C` columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":182235,"byte_end":182297,"line_start":301,"line_end":301,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":182298,"byte_end":182301,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":182302,"byte_end":182422,"line_start":303,"line_end":303,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1837},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":182754,"byte_end":182769,"line_start":310,"line_end":310,"column_start":10,"column_end":25},"name":"MatrixSliceMutN","qualname":"::base::alias_slice::MatrixSliceMutN","value":"Matrix<N, D, D, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with `D` rows and columns.","sig":null,"attributes":[{"value":"/ A column-major matrix slice with `D` rows and columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":182561,"byte_end":182619,"line_start":307,"line_end":307,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":182620,"byte_end":182623,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":182624,"byte_end":182744,"line_start":309,"line_end":309,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1843},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":183082,"byte_end":183097,"line_start":316,"line_end":316,"column_start":10,"column_end":25},"name":"DMatrixSliceMut","qualname":"::base::alias_slice::DMatrixSliceMut","value":"Matrix<N, Dynamic, Dynamic, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice dynamic numbers of rows and columns.","sig":null,"attributes":[{"value":"/ A column-major matrix slice dynamic numbers of rows and columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":182879,"byte_end":182947,"line_start":313,"line_end":313,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":182948,"byte_end":182951,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":182952,"byte_end":183072,"line_start":315,"line_end":315,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1848},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":183405,"byte_end":183420,"line_start":322,"line_end":322,"column_start":10,"column_end":25},"name":"MatrixSliceMut1","qualname":"::base::alias_slice::MatrixSliceMut1","value":"Matrix<N, U1, U1, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x1 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 1x1 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":183234,"byte_end":183270,"line_start":319,"line_end":319,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":183271,"byte_end":183274,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":183275,"byte_end":183395,"line_start":321,"line_end":321,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1853},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":183702,"byte_end":183717,"line_start":327,"line_end":327,"column_start":10,"column_end":25},"name":"MatrixSliceMut2","qualname":"::base::alias_slice::MatrixSliceMut2","value":"Matrix<N, U2, U2, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x2 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 2x2 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":183531,"byte_end":183567,"line_start":324,"line_end":324,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":183568,"byte_end":183571,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":183572,"byte_end":183692,"line_start":326,"line_end":326,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1858},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":183999,"byte_end":184014,"line_start":332,"line_end":332,"column_start":10,"column_end":25},"name":"MatrixSliceMut3","qualname":"::base::alias_slice::MatrixSliceMut3","value":"Matrix<N, U3, U3, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x3 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 3x3 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":183828,"byte_end":183864,"line_start":329,"line_end":329,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":183865,"byte_end":183868,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":183869,"byte_end":183989,"line_start":331,"line_end":331,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1863},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":184296,"byte_end":184311,"line_start":337,"line_end":337,"column_start":10,"column_end":25},"name":"MatrixSliceMut4","qualname":"::base::alias_slice::MatrixSliceMut4","value":"Matrix<N, U4, U4, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x4 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 4x4 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":184125,"byte_end":184161,"line_start":334,"line_end":334,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":184162,"byte_end":184165,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":184166,"byte_end":184286,"line_start":336,"line_end":336,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1868},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":184593,"byte_end":184608,"line_start":342,"line_end":342,"column_start":10,"column_end":25},"name":"MatrixSliceMut5","qualname":"::base::alias_slice::MatrixSliceMut5","value":"Matrix<N, U5, U5, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x5 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 5x5 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":184422,"byte_end":184458,"line_start":339,"line_end":339,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":184459,"byte_end":184462,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":184463,"byte_end":184583,"line_start":341,"line_end":341,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1873},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":184890,"byte_end":184905,"line_start":347,"line_end":347,"column_start":10,"column_end":25},"name":"MatrixSliceMut6","qualname":"::base::alias_slice::MatrixSliceMut6","value":"Matrix<N, U6, U6, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x6 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 6x6 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":184719,"byte_end":184755,"line_start":344,"line_end":344,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":184756,"byte_end":184759,"line_start":345,"line_end":345,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":184760,"byte_end":184880,"line_start":346,"line_end":346,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1878},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":185188,"byte_end":185205,"line_start":353,"line_end":353,"column_start":10,"column_end":27},"name":"MatrixSliceMut1x2","qualname":"::base::alias_slice::MatrixSliceMut1x2","value":"Matrix<N, U1, U2, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x2 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 1x2 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":185017,"byte_end":185053,"line_start":350,"line_end":350,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":185054,"byte_end":185057,"line_start":351,"line_end":351,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":185058,"byte_end":185178,"line_start":352,"line_end":352,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1883},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":185487,"byte_end":185504,"line_start":358,"line_end":358,"column_start":10,"column_end":27},"name":"MatrixSliceMut1x3","qualname":"::base::alias_slice::MatrixSliceMut1x3","value":"Matrix<N, U1, U3, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x3 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 1x3 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":185316,"byte_end":185352,"line_start":355,"line_end":355,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":185353,"byte_end":185356,"line_start":356,"line_end":356,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":185357,"byte_end":185477,"line_start":357,"line_end":357,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1888},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":185786,"byte_end":185803,"line_start":363,"line_end":363,"column_start":10,"column_end":27},"name":"MatrixSliceMut1x4","qualname":"::base::alias_slice::MatrixSliceMut1x4","value":"Matrix<N, U1, U4, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x4 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 1x4 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":185615,"byte_end":185651,"line_start":360,"line_end":360,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":185652,"byte_end":185655,"line_start":361,"line_end":361,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":185656,"byte_end":185776,"line_start":362,"line_end":362,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1893},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":186085,"byte_end":186102,"line_start":368,"line_end":368,"column_start":10,"column_end":27},"name":"MatrixSliceMut1x5","qualname":"::base::alias_slice::MatrixSliceMut1x5","value":"Matrix<N, U1, U5, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x5 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 1x5 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":185914,"byte_end":185950,"line_start":365,"line_end":365,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":185951,"byte_end":185954,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":185955,"byte_end":186075,"line_start":367,"line_end":367,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1898},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":186384,"byte_end":186401,"line_start":373,"line_end":373,"column_start":10,"column_end":27},"name":"MatrixSliceMut1x6","qualname":"::base::alias_slice::MatrixSliceMut1x6","value":"Matrix<N, U1, U6, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x6 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 1x6 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":186213,"byte_end":186249,"line_start":370,"line_end":370,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":186250,"byte_end":186253,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":186254,"byte_end":186374,"line_start":372,"line_end":372,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1903},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":186684,"byte_end":186701,"line_start":379,"line_end":379,"column_start":10,"column_end":27},"name":"MatrixSliceMut2x1","qualname":"::base::alias_slice::MatrixSliceMut2x1","value":"Matrix<N, U2, U1, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x1 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 2x1 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":186513,"byte_end":186549,"line_start":376,"line_end":376,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":186550,"byte_end":186553,"line_start":377,"line_end":377,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":186554,"byte_end":186674,"line_start":378,"line_end":378,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1908},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":186983,"byte_end":187000,"line_start":384,"line_end":384,"column_start":10,"column_end":27},"name":"MatrixSliceMut2x3","qualname":"::base::alias_slice::MatrixSliceMut2x3","value":"Matrix<N, U2, U3, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x3 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 2x3 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":186812,"byte_end":186848,"line_start":381,"line_end":381,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":186849,"byte_end":186852,"line_start":382,"line_end":382,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":186853,"byte_end":186973,"line_start":383,"line_end":383,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1913},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":187282,"byte_end":187299,"line_start":389,"line_end":389,"column_start":10,"column_end":27},"name":"MatrixSliceMut2x4","qualname":"::base::alias_slice::MatrixSliceMut2x4","value":"Matrix<N, U2, U4, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x4 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 2x4 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":187111,"byte_end":187147,"line_start":386,"line_end":386,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":187148,"byte_end":187151,"line_start":387,"line_end":387,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":187152,"byte_end":187272,"line_start":388,"line_end":388,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1918},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":187581,"byte_end":187598,"line_start":394,"line_end":394,"column_start":10,"column_end":27},"name":"MatrixSliceMut2x5","qualname":"::base::alias_slice::MatrixSliceMut2x5","value":"Matrix<N, U2, U5, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x5 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 2x5 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":187410,"byte_end":187446,"line_start":391,"line_end":391,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":187447,"byte_end":187450,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":187451,"byte_end":187571,"line_start":393,"line_end":393,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1923},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":187880,"byte_end":187897,"line_start":399,"line_end":399,"column_start":10,"column_end":27},"name":"MatrixSliceMut2x6","qualname":"::base::alias_slice::MatrixSliceMut2x6","value":"Matrix<N, U2, U6, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x6 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 2x6 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":187709,"byte_end":187745,"line_start":396,"line_end":396,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":187746,"byte_end":187749,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":187750,"byte_end":187870,"line_start":398,"line_end":398,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1928},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":188180,"byte_end":188197,"line_start":405,"line_end":405,"column_start":10,"column_end":27},"name":"MatrixSliceMut3x1","qualname":"::base::alias_slice::MatrixSliceMut3x1","value":"Matrix<N, U3, U1, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x1 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 3x1 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":188009,"byte_end":188045,"line_start":402,"line_end":402,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":188046,"byte_end":188049,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":188050,"byte_end":188170,"line_start":404,"line_end":404,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1933},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":188479,"byte_end":188496,"line_start":410,"line_end":410,"column_start":10,"column_end":27},"name":"MatrixSliceMut3x2","qualname":"::base::alias_slice::MatrixSliceMut3x2","value":"Matrix<N, U3, U2, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x2 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 3x2 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":188308,"byte_end":188344,"line_start":407,"line_end":407,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":188345,"byte_end":188348,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":188349,"byte_end":188469,"line_start":409,"line_end":409,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1938},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":188778,"byte_end":188795,"line_start":415,"line_end":415,"column_start":10,"column_end":27},"name":"MatrixSliceMut3x4","qualname":"::base::alias_slice::MatrixSliceMut3x4","value":"Matrix<N, U3, U4, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x4 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 3x4 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":188607,"byte_end":188643,"line_start":412,"line_end":412,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":188644,"byte_end":188647,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":188648,"byte_end":188768,"line_start":414,"line_end":414,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1943},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":189077,"byte_end":189094,"line_start":420,"line_end":420,"column_start":10,"column_end":27},"name":"MatrixSliceMut3x5","qualname":"::base::alias_slice::MatrixSliceMut3x5","value":"Matrix<N, U3, U5, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x5 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 3x5 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":188906,"byte_end":188942,"line_start":417,"line_end":417,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":188943,"byte_end":188946,"line_start":418,"line_end":418,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":188947,"byte_end":189067,"line_start":419,"line_end":419,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1948},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":189376,"byte_end":189393,"line_start":425,"line_end":425,"column_start":10,"column_end":27},"name":"MatrixSliceMut3x6","qualname":"::base::alias_slice::MatrixSliceMut3x6","value":"Matrix<N, U3, U6, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x6 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 3x6 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":189205,"byte_end":189241,"line_start":422,"line_end":422,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":189242,"byte_end":189245,"line_start":423,"line_end":423,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":189246,"byte_end":189366,"line_start":424,"line_end":424,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1953},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":189676,"byte_end":189693,"line_start":431,"line_end":431,"column_start":10,"column_end":27},"name":"MatrixSliceMut4x1","qualname":"::base::alias_slice::MatrixSliceMut4x1","value":"Matrix<N, U4, U1, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x1 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 4x1 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":189505,"byte_end":189541,"line_start":428,"line_end":428,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":189542,"byte_end":189545,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":189546,"byte_end":189666,"line_start":430,"line_end":430,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1958},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":189975,"byte_end":189992,"line_start":436,"line_end":436,"column_start":10,"column_end":27},"name":"MatrixSliceMut4x2","qualname":"::base::alias_slice::MatrixSliceMut4x2","value":"Matrix<N, U4, U2, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x2 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 4x2 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":189804,"byte_end":189840,"line_start":433,"line_end":433,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":189841,"byte_end":189844,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":189845,"byte_end":189965,"line_start":435,"line_end":435,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1963},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":190274,"byte_end":190291,"line_start":441,"line_end":441,"column_start":10,"column_end":27},"name":"MatrixSliceMut4x3","qualname":"::base::alias_slice::MatrixSliceMut4x3","value":"Matrix<N, U4, U3, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x3 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 4x3 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":190103,"byte_end":190139,"line_start":438,"line_end":438,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":190140,"byte_end":190143,"line_start":439,"line_end":439,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":190144,"byte_end":190264,"line_start":440,"line_end":440,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1968},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":190573,"byte_end":190590,"line_start":446,"line_end":446,"column_start":10,"column_end":27},"name":"MatrixSliceMut4x5","qualname":"::base::alias_slice::MatrixSliceMut4x5","value":"Matrix<N, U4, U5, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x5 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 4x5 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":190402,"byte_end":190438,"line_start":443,"line_end":443,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":190439,"byte_end":190442,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":190443,"byte_end":190563,"line_start":445,"line_end":445,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1973},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":190872,"byte_end":190889,"line_start":451,"line_end":451,"column_start":10,"column_end":27},"name":"MatrixSliceMut4x6","qualname":"::base::alias_slice::MatrixSliceMut4x6","value":"Matrix<N, U4, U6, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x6 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 4x6 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":190701,"byte_end":190737,"line_start":448,"line_end":448,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":190738,"byte_end":190741,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":190742,"byte_end":190862,"line_start":450,"line_end":450,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1978},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":191172,"byte_end":191189,"line_start":457,"line_end":457,"column_start":10,"column_end":27},"name":"MatrixSliceMut5x1","qualname":"::base::alias_slice::MatrixSliceMut5x1","value":"Matrix<N, U5, U1, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x1 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 5x1 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":191001,"byte_end":191037,"line_start":454,"line_end":454,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":191038,"byte_end":191041,"line_start":455,"line_end":455,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":191042,"byte_end":191162,"line_start":456,"line_end":456,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1983},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":191471,"byte_end":191488,"line_start":462,"line_end":462,"column_start":10,"column_end":27},"name":"MatrixSliceMut5x2","qualname":"::base::alias_slice::MatrixSliceMut5x2","value":"Matrix<N, U5, U2, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x2 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 5x2 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":191300,"byte_end":191336,"line_start":459,"line_end":459,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":191337,"byte_end":191340,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":191341,"byte_end":191461,"line_start":461,"line_end":461,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1988},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":191770,"byte_end":191787,"line_start":467,"line_end":467,"column_start":10,"column_end":27},"name":"MatrixSliceMut5x3","qualname":"::base::alias_slice::MatrixSliceMut5x3","value":"Matrix<N, U5, U3, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x3 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 5x3 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":191599,"byte_end":191635,"line_start":464,"line_end":464,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":191636,"byte_end":191639,"line_start":465,"line_end":465,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":191640,"byte_end":191760,"line_start":466,"line_end":466,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1993},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":192069,"byte_end":192086,"line_start":472,"line_end":472,"column_start":10,"column_end":27},"name":"MatrixSliceMut5x4","qualname":"::base::alias_slice::MatrixSliceMut5x4","value":"Matrix<N, U5, U4, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x4 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 5x4 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":191898,"byte_end":191934,"line_start":469,"line_end":469,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":191935,"byte_end":191938,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":191939,"byte_end":192059,"line_start":471,"line_end":471,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":1998},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":192368,"byte_end":192385,"line_start":477,"line_end":477,"column_start":10,"column_end":27},"name":"MatrixSliceMut5x6","qualname":"::base::alias_slice::MatrixSliceMut5x6","value":"Matrix<N, U5, U6, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x6 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 5x6 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":192197,"byte_end":192233,"line_start":474,"line_end":474,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":192234,"byte_end":192237,"line_start":475,"line_end":475,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":192238,"byte_end":192358,"line_start":476,"line_end":476,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":2003},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":192668,"byte_end":192685,"line_start":483,"line_end":483,"column_start":10,"column_end":27},"name":"MatrixSliceMut6x1","qualname":"::base::alias_slice::MatrixSliceMut6x1","value":"Matrix<N, U6, U1, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x1 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 6x1 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":192497,"byte_end":192533,"line_start":480,"line_end":480,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":192534,"byte_end":192537,"line_start":481,"line_end":481,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":192538,"byte_end":192658,"line_start":482,"line_end":482,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":2008},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":192967,"byte_end":192984,"line_start":488,"line_end":488,"column_start":10,"column_end":27},"name":"MatrixSliceMut6x2","qualname":"::base::alias_slice::MatrixSliceMut6x2","value":"Matrix<N, U6, U2, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x2 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 6x2 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":192796,"byte_end":192832,"line_start":485,"line_end":485,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":192833,"byte_end":192836,"line_start":486,"line_end":486,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":192837,"byte_end":192957,"line_start":487,"line_end":487,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":2013},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":193266,"byte_end":193283,"line_start":493,"line_end":493,"column_start":10,"column_end":27},"name":"MatrixSliceMut6x3","qualname":"::base::alias_slice::MatrixSliceMut6x3","value":"Matrix<N, U6, U3, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x3 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 6x3 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":193095,"byte_end":193131,"line_start":490,"line_end":490,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":193132,"byte_end":193135,"line_start":491,"line_end":491,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":193136,"byte_end":193256,"line_start":492,"line_end":492,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":2018},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":193565,"byte_end":193582,"line_start":498,"line_end":498,"column_start":10,"column_end":27},"name":"MatrixSliceMut6x4","qualname":"::base::alias_slice::MatrixSliceMut6x4","value":"Matrix<N, U6, U4, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x4 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 6x4 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":193394,"byte_end":193430,"line_start":495,"line_end":495,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":193431,"byte_end":193434,"line_start":496,"line_end":496,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":193435,"byte_end":193555,"line_start":497,"line_end":497,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":2023},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":193864,"byte_end":193881,"line_start":503,"line_end":503,"column_start":10,"column_end":27},"name":"MatrixSliceMut6x5","qualname":"::base::alias_slice::MatrixSliceMut6x5","value":"Matrix<N, U6, U5, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x5 matrix slice.","sig":null,"attributes":[{"value":"/ A column-major 6x5 matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":193693,"byte_end":193729,"line_start":500,"line_end":500,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":193730,"byte_end":193733,"line_start":501,"line_end":501,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":193734,"byte_end":193854,"line_start":502,"line_end":502,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":2028},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":194088,"byte_end":194105,"line_start":507,"line_end":507,"column_start":10,"column_end":27},"name":"MatrixSliceMut1xX","qualname":"::base::alias_slice::MatrixSliceMut1xX","value":"Matrix<N, U1, Dynamic, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 1 row and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 1 row and a number of columns chosen at runtime.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":193993,"byte_end":194078,"line_start":506,"line_end":506,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":2033},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":194322,"byte_end":194339,"line_start":510,"line_end":510,"column_start":10,"column_end":27},"name":"MatrixSliceMut2xX","qualname":"::base::alias_slice::MatrixSliceMut2xX","value":"Matrix<N, U2, Dynamic, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 2 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 2 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":194226,"byte_end":194312,"line_start":509,"line_end":509,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":2038},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":194556,"byte_end":194573,"line_start":513,"line_end":513,"column_start":10,"column_end":27},"name":"MatrixSliceMut3xX","qualname":"::base::alias_slice::MatrixSliceMut3xX","value":"Matrix<N, U3, Dynamic, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 3 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 3 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":194460,"byte_end":194546,"line_start":512,"line_end":512,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":2043},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":194790,"byte_end":194807,"line_start":516,"line_end":516,"column_start":10,"column_end":27},"name":"MatrixSliceMut4xX","qualname":"::base::alias_slice::MatrixSliceMut4xX","value":"Matrix<N, U4, Dynamic, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 4 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 4 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":194694,"byte_end":194780,"line_start":515,"line_end":515,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":2048},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":195024,"byte_end":195041,"line_start":519,"line_end":519,"column_start":10,"column_end":27},"name":"MatrixSliceMut5xX","qualname":"::base::alias_slice::MatrixSliceMut5xX","value":"Matrix<N, U5, Dynamic, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 5 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 5 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":194928,"byte_end":195014,"line_start":518,"line_end":518,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":2053},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":195258,"byte_end":195275,"line_start":522,"line_end":522,"column_start":10,"column_end":27},"name":"MatrixSliceMut6xX","qualname":"::base::alias_slice::MatrixSliceMut6xX","value":"Matrix<N, U6, Dynamic, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 6 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 6 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":195162,"byte_end":195248,"line_start":521,"line_end":521,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":2058},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":195492,"byte_end":195509,"line_start":526,"line_end":526,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx1","qualname":"::base::alias_slice::MatrixSliceMutXx1","value":"Matrix<N, Dynamic, U1, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 1 column.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 1 column.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":195397,"byte_end":195482,"line_start":525,"line_end":525,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":2063},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":195731,"byte_end":195748,"line_start":529,"line_end":529,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx2","qualname":"::base::alias_slice::MatrixSliceMutXx2","value":"Matrix<N, Dynamic, U2, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 2 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 2 columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":195635,"byte_end":195721,"line_start":528,"line_end":528,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":2068},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":195970,"byte_end":195987,"line_start":532,"line_end":532,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx3","qualname":"::base::alias_slice::MatrixSliceMutXx3","value":"Matrix<N, Dynamic, U3, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 3 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 3 columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":195874,"byte_end":195960,"line_start":531,"line_end":531,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":2073},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":196209,"byte_end":196226,"line_start":535,"line_end":535,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx4","qualname":"::base::alias_slice::MatrixSliceMutXx4","value":"Matrix<N, Dynamic, U4, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 4 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 4 columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":196113,"byte_end":196199,"line_start":534,"line_end":534,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":2078},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":196448,"byte_end":196465,"line_start":538,"line_end":538,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx5","qualname":"::base::alias_slice::MatrixSliceMutXx5","value":"Matrix<N, Dynamic, U5, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 5 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 5 columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":196352,"byte_end":196438,"line_start":537,"line_end":537,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":2083},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":196687,"byte_end":196704,"line_start":541,"line_end":541,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx6","qualname":"::base::alias_slice::MatrixSliceMutXx6","value":"Matrix<N, Dynamic, U6, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 6 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 6 columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":196591,"byte_end":196677,"line_start":540,"line_end":540,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":2088},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":196881,"byte_end":196896,"line_start":545,"line_end":545,"column_start":10,"column_end":25},"name":"VectorSliceMutN","qualname":"::base::alias_slice::VectorSliceMutN","value":"Matrix<N, D, U1, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column vector slice with `D` rows.\n","sig":null,"attributes":[{"value":"/ A column vector slice with `D` rows.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":196831,"byte_end":196871,"line_start":544,"line_end":544,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":2094},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":197080,"byte_end":197095,"line_start":549,"line_end":549,"column_start":10,"column_end":25},"name":"DVectorSliceMut","qualname":"::base::alias_slice::DVectorSliceMut","value":"Matrix<N, Dynamic, U1, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column vector slice dynamic numbers of rows and columns.\n","sig":null,"attributes":[{"value":"/ A column vector slice dynamic numbers of rows and columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":197008,"byte_end":197070,"line_start":548,"line_end":548,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":2099},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":197386,"byte_end":197401,"line_start":555,"line_end":555,"column_start":10,"column_end":25},"name":"VectorSliceMut1","qualname":"::base::alias_slice::VectorSliceMut1","value":"Matrix<N, U1, U1, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A 1D column vector slice.","sig":null,"attributes":[{"value":"/ A 1D column vector slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":197222,"byte_end":197251,"line_start":552,"line_end":552,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":197252,"byte_end":197255,"line_start":553,"line_end":553,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":197256,"byte_end":197376,"line_start":554,"line_end":554,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":2104},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":197676,"byte_end":197691,"line_start":560,"line_end":560,"column_start":10,"column_end":25},"name":"VectorSliceMut2","qualname":"::base::alias_slice::VectorSliceMut2","value":"Matrix<N, U2, U1, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A 2D column vector slice.","sig":null,"attributes":[{"value":"/ A 2D column vector slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":197512,"byte_end":197541,"line_start":557,"line_end":557,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":197542,"byte_end":197545,"line_start":558,"line_end":558,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":197546,"byte_end":197666,"line_start":559,"line_end":559,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":2109},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":197966,"byte_end":197981,"line_start":565,"line_end":565,"column_start":10,"column_end":25},"name":"VectorSliceMut3","qualname":"::base::alias_slice::VectorSliceMut3","value":"Matrix<N, U3, U1, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A 3D column vector slice.","sig":null,"attributes":[{"value":"/ A 3D column vector slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":197802,"byte_end":197831,"line_start":562,"line_end":562,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":197832,"byte_end":197835,"line_start":563,"line_end":563,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":197836,"byte_end":197956,"line_start":564,"line_end":564,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":2114},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":198256,"byte_end":198271,"line_start":570,"line_end":570,"column_start":10,"column_end":25},"name":"VectorSliceMut4","qualname":"::base::alias_slice::VectorSliceMut4","value":"Matrix<N, U4, U1, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A 4D column vector slice.","sig":null,"attributes":[{"value":"/ A 4D column vector slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":198092,"byte_end":198121,"line_start":567,"line_end":567,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":198122,"byte_end":198125,"line_start":568,"line_end":568,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":198126,"byte_end":198246,"line_start":569,"line_end":569,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":2119},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":198546,"byte_end":198561,"line_start":575,"line_end":575,"column_start":10,"column_end":25},"name":"VectorSliceMut5","qualname":"::base::alias_slice::VectorSliceMut5","value":"Matrix<N, U5, U1, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A 5D column vector slice.","sig":null,"attributes":[{"value":"/ A 5D column vector slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":198382,"byte_end":198411,"line_start":572,"line_end":572,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":198412,"byte_end":198415,"line_start":573,"line_end":573,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":198416,"byte_end":198536,"line_start":574,"line_end":574,"column_start":1,"column_end":121}}]},{"kind":"Type","id":{"krate":0,"index":2124},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":198836,"byte_end":198851,"line_start":580,"line_end":580,"column_start":10,"column_end":25},"name":"VectorSliceMut6","qualname":"::base::alias_slice::VectorSliceMut6","value":"Matrix<N, U6, U1, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A 6D column vector slice.","sig":null,"attributes":[{"value":"/ A 6D column vector slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":198672,"byte_end":198701,"line_start":577,"line_end":577,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":198702,"byte_end":198705,"line_start":578,"line_end":578,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Matrix`](crate::base::Matrix) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/alias_slice.rs","byte_start":198706,"byte_end":198826,"line_start":579,"line_end":579,"column_start":1,"column_end":121}}]},{"kind":"Struct","id":{"krate":0,"index":2202},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/array_storage.rs","byte_start":200055,"byte_end":200067,"line_start":39,"line_end":39,"column_start":12,"column_end":24},"name":"ArrayStorage","qualname":"::base::array_storage::ArrayStorage","value":"ArrayStorage {  }","parent":null,"children":[{"krate":0,"index":2206}],"decl_id":null,"docs":" A array-based statically sized matrix data storage.\n","sig":null,"attributes":[{"value":"/ A array-based statically sized matrix data storage.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/array_storage.rs","byte_start":199977,"byte_end":200032,"line_start":37,"line_end":37,"column_start":1,"column_end":56}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/array_storage.rs","byte_start":200033,"byte_end":200043,"line_start":38,"line_end":38,"column_start":1,"column_end":11}}]},{"kind":"Type","id":{"krate":0,"index":2207},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/array_storage.rs","byte_start":200338,"byte_end":200349,"line_start":51,"line_end":51,"column_start":10,"column_end":21},"name":"MatrixArray","qualname":"::base::array_storage::MatrixArray","value":"ArrayStorage<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Renamed to [ArrayStorage].\n","sig":null,"attributes":[{"value":"deprecated(note = \"renamed to `ArrayStorage`\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/array_storage.rs","byte_start":200248,"byte_end":200297,"line_start":49,"line_end":49,"column_start":1,"column_end":50}},{"value":"/ Renamed to [ArrayStorage].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/array_storage.rs","byte_start":200298,"byte_end":200328,"line_start":50,"line_end":50,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2397},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":209879,"byte_end":209890,"line_start":32,"line_end":32,"column_start":12,"column_end":23},"name":"new_scaling","qualname":"<MatrixN<N, D>>::new_scaling","value":"pub fn new_scaling(N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix that applies the same scaling factor on each dimension.\n","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix that applies the same scaling factor on each dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":209761,"byte_end":209853,"line_start":30,"line_end":30,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":209858,"byte_end":209867,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2398},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":210172,"byte_end":210194,"line_start":41,"line_end":41,"column_start":12,"column_end":34},"name":"new_nonuniform_scaling","qualname":"<MatrixN<N, D>>::new_nonuniform_scaling","value":"pub fn new_nonuniform_scaling<SB>(&Vector<N, DimNameDiff<D, U1>, SB>) -> Self\nwhere D: DimNameSub<U1>, SB: Storage<N, DimNameDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix that applies a distinct scaling factor for each dimension.\n","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix that applies a distinct scaling factor for each dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":210051,"byte_end":210146,"line_start":39,"line_end":39,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":210151,"byte_end":210160,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2400},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":210598,"byte_end":210613,"line_start":56,"line_end":56,"column_start":12,"column_end":27},"name":"new_translation","qualname":"<MatrixN<N, D>>::new_translation","value":"pub fn new_translation<SB>(&Vector<N, DimNameDiff<D, U1>, SB>) -> Self where\nD: DimNameSub<U1>, SB: Storage<N, DimNameDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix that applies a pure translation.\n","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix that applies a pure translation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":210503,"byte_end":210572,"line_start":54,"line_end":54,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":210577,"byte_end":210586,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2404},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":211111,"byte_end":211123,"line_start":73,"line_end":73,"column_start":12,"column_end":24},"name":"new_rotation","qualname":"<Matrix3<N>>::new_rotation","value":"pub fn new_rotation(N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 2 dimensional homogeneous rotation matrix from an angle in radian.\n","sig":null,"attributes":[{"value":"/ Builds a 2 dimensional homogeneous rotation matrix from an angle in radian.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":211006,"byte_end":211085,"line_start":71,"line_end":71,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":211090,"byte_end":211099,"line_start":72,"line_end":72,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2405},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":211402,"byte_end":211434,"line_start":81,"line_end":81,"column_start":12,"column_end":44},"name":"new_nonuniform_scaling_wrt_point","qualname":"<Matrix3<N>>::new_nonuniform_scaling_wrt_point","value":"pub fn new_nonuniform_scaling_wrt_point(&Vector2<N>, &Point2<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix that applies a scaling factor for each dimension with respect to point.","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix that applies a scaling factor for each dimension with respect to point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":211202,"byte_end":211310,"line_start":77,"line_end":77,"column_start":5,"column_end":113}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":211315,"byte_end":211318,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Can be used to implement \"zoom_to\" functionality.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":211323,"byte_end":211376,"line_start":79,"line_end":79,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":211381,"byte_end":211390,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2408},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":212058,"byte_end":212070,"line_start":104,"line_end":104,"column_start":12,"column_end":24},"name":"new_rotation","qualname":"<Matrix4<N>>::new_rotation","value":"pub fn new_rotation(Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","sig":null,"attributes":[{"value":"/ Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":211865,"byte_end":211957,"line_start":100,"line_end":100,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":211962,"byte_end":211965,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ Returns the identity matrix if the given argument is zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":211970,"byte_end":212032,"line_start":102,"line_end":102,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":212037,"byte_end":212046,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2409},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":212359,"byte_end":212381,"line_start":112,"line_end":112,"column_start":12,"column_end":34},"name":"new_rotation_wrt_point","qualname":"<Matrix4<N>>::new_rotation_wrt_point","value":"pub fn new_rotation_wrt_point(Vector3<N>, Point3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","sig":null,"attributes":[{"value":"/ Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":212166,"byte_end":212258,"line_start":108,"line_end":108,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":212263,"byte_end":212266,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Returns the identity matrix if the given argument is zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":212271,"byte_end":212333,"line_start":110,"line_end":110,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":212338,"byte_end":212347,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2410},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":212762,"byte_end":212794,"line_start":121,"line_end":121,"column_start":12,"column_end":44},"name":"new_nonuniform_scaling_wrt_point","qualname":"<Matrix4<N>>::new_nonuniform_scaling_wrt_point","value":"pub fn new_nonuniform_scaling_wrt_point(&Vector3<N>, &Point3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix that applies a scaling factor for each dimension with respect to point.","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix that applies a scaling factor for each dimension with respect to point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":212562,"byte_end":212670,"line_start":117,"line_end":117,"column_start":5,"column_end":113}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":212675,"byte_end":212678,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Can be used to implement \"zoom_to\" functionality.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":212683,"byte_end":212736,"line_start":119,"line_end":119,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":212741,"byte_end":212750,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2411},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":213547,"byte_end":213563,"line_start":149,"line_end":149,"column_start":12,"column_end":28},"name":"from_scaled_axis","qualname":"<Matrix4<N>>::from_scaled_axis","value":"pub fn from_scaled_axis(Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","sig":null,"attributes":[{"value":"/ Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":213303,"byte_end":213395,"line_start":144,"line_end":144,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":213400,"byte_end":213403,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Returns the identity matrix if the given argument is zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":213408,"byte_end":213470,"line_start":146,"line_end":146,"column_start":5,"column_end":67}},{"value":"/ This is identical to `Self::new_rotation`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":213475,"byte_end":213521,"line_start":147,"line_end":147,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":213526,"byte_end":213535,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2412},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":213821,"byte_end":213838,"line_start":156,"line_end":156,"column_start":12,"column_end":29},"name":"from_euler_angles","qualname":"<Matrix4<N>>::from_euler_angles","value":"pub fn from_euler_angles(N, N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new rotation from Euler angles.","sig":null,"attributes":[{"value":"/ Creates a new rotation from Euler angles.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":213672,"byte_end":213717,"line_start":153,"line_end":153,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":213722,"byte_end":213725,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ The primitive rotations are applied in order: 1 roll − 2 pitch − 3 yaw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":213730,"byte_end":213809,"line_start":155,"line_end":155,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2413},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":214049,"byte_end":214064,"line_start":161,"line_end":161,"column_start":12,"column_end":27},"name":"from_axis_angle","qualname":"<Matrix4<N>>::from_axis_angle","value":"pub fn from_axis_angle(&Unit<Vector3<N>>, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D homogeneous rotation matrix from an axis and a rotation angle.\n","sig":null,"attributes":[{"value":"/ Builds a 3D homogeneous rotation matrix from an axis and a rotation angle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":213959,"byte_end":214037,"line_start":160,"line_end":160,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2414},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":214280,"byte_end":214296,"line_start":167,"line_end":167,"column_start":12,"column_end":28},"name":"new_orthographic","qualname":"<Matrix4<N>>::new_orthographic","value":"pub fn new_orthographic(N, N, N, N, N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix for an orthographic projection.\n","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix for an orthographic projection.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":214186,"byte_end":214254,"line_start":165,"line_end":165,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":214259,"byte_end":214268,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2415},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":214546,"byte_end":214561,"line_start":173,"line_end":173,"column_start":12,"column_end":27},"name":"new_perspective","qualname":"<Matrix4<N>>::new_perspective","value":"pub fn new_perspective(N, N, N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix for a perspective projection.\n","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix for a perspective projection.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":214454,"byte_end":214520,"line_start":171,"line_end":171,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":214525,"byte_end":214534,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2416},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":214973,"byte_end":214985,"line_start":183,"line_end":183,"column_start":12,"column_end":24},"name":"face_towards","qualname":"<Matrix4<N>>::face_towards","value":"pub fn face_towards(&Point3<N>, &Point3<N>, &Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an isometry that corresponds to the local frame of an observer standing at the\n point `eye` and looking toward `target`.","sig":null,"attributes":[{"value":"/ Creates an isometry that corresponds to the local frame of an observer standing at the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":214688,"byte_end":214778,"line_start":177,"line_end":177,"column_start":5,"column_end":95}},{"value":"/ point `eye` and looking toward `target`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":214783,"byte_end":214827,"line_start":178,"line_end":178,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":214832,"byte_end":214835,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ It maps the view direction `target - eye` to the positive `z` axis and the origin to the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":214840,"byte_end":214932,"line_start":180,"line_end":180,"column_start":5,"column_end":97}},{"value":"/ `eye`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":214937,"byte_end":214947,"line_start":181,"line_end":181,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":214952,"byte_end":214961,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2417},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":215251,"byte_end":215269,"line_start":189,"line_end":189,"column_start":12,"column_end":30},"name":"new_observer_frame","qualname":"<Matrix4<N>>::new_observer_frame","value":"pub fn new_observer_frame(&Point3<N>, &Point3<N>, &Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Deprecated: Use [Matrix4::face_towards] instead.\n","sig":null,"attributes":[{"value":"/ Deprecated: Use [Matrix4::face_towards] instead.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":215133,"byte_end":215185,"line_start":187,"line_end":187,"column_start":5,"column_end":57}},{"value":"deprecated(note = \"renamed to `face_towards`\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":215190,"byte_end":215239,"line_start":188,"line_end":188,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2418},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":215464,"byte_end":215474,"line_start":195,"line_end":195,"column_start":12,"column_end":22},"name":"look_at_rh","qualname":"<Matrix4<N>>::look_at_rh","value":"pub fn look_at_rh(&Point3<N>, &Point3<N>, &Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a right-handed look-at view matrix.\n","sig":null,"attributes":[{"value":"/ Builds a right-handed look-at view matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":215392,"byte_end":215438,"line_start":193,"line_end":193,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":215443,"byte_end":215452,"line_start":194,"line_end":194,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2419},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":215691,"byte_end":215701,"line_start":201,"line_end":201,"column_start":12,"column_end":22},"name":"look_at_lh","qualname":"<Matrix4<N>>::look_at_lh","value":"pub fn look_at_lh(&Point3<N>, &Point3<N>, &Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a left-handed look-at view matrix.\n","sig":null,"attributes":[{"value":"/ Builds a left-handed look-at view matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":215620,"byte_end":215665,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":215670,"byte_end":215679,"line_start":200,"line_end":200,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2424},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":216182,"byte_end":216196,"line_start":213,"line_end":213,"column_start":12,"column_end":26},"name":"append_scaling","qualname":"<SquareMatrix<N, D, S>>::append_scaling","value":"pub fn append_scaling(&Self, N) -> MatrixN<N, D> where D: DimNameSub<U1>,\nDefaultAllocator: Allocator<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to `self` followed by an uniform scaling factor.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to `self` followed by an uniform scaling factor.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":216008,"byte_end":216094,"line_start":210,"line_end":210,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":216099,"byte_end":216108,"line_start":211,"line_end":211,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use append_scaling_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":216113,"byte_end":216170,"line_start":212,"line_end":212,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2425},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":216603,"byte_end":216618,"line_start":226,"line_end":226,"column_start":12,"column_end":27},"name":"prepend_scaling","qualname":"<SquareMatrix<N, D, S>>::prepend_scaling","value":"pub fn prepend_scaling(&Self, N) -> MatrixN<N, D> where D: DimNameSub<U1>,\nDefaultAllocator: Allocator<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to an uniform scaling factor followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to an uniform scaling factor followed by `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":216428,"byte_end":216514,"line_start":223,"line_end":223,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":216519,"byte_end":216528,"line_start":224,"line_end":224,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use prepend_scaling_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":216533,"byte_end":216591,"line_start":225,"line_end":225,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2426},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":217039,"byte_end":217064,"line_start":239,"line_end":239,"column_start":12,"column_end":37},"name":"append_nonuniform_scaling","qualname":"<SquareMatrix<N, D, S>>::append_nonuniform_scaling","value":"pub fn append_nonuniform_scaling<SB>(&Self,\n                                     &Vector<N, DimNameDiff<D, U1>, SB>)\n-> MatrixN<N, D> where D: DimNameSub<U1>, SB: Storage<N, DimNameDiff<D, U1>>,\nDefaultAllocator: Allocator<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to `self` followed by a non-uniform scaling factor.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to `self` followed by a non-uniform scaling factor.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":216851,"byte_end":216940,"line_start":236,"line_end":236,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":216945,"byte_end":216954,"line_start":237,"line_end":237,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use append_nonuniform_scaling_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":216959,"byte_end":217027,"line_start":238,"line_end":238,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2428},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":217600,"byte_end":217626,"line_start":256,"line_end":256,"column_start":12,"column_end":38},"name":"prepend_nonuniform_scaling","qualname":"<SquareMatrix<N, D, S>>::prepend_nonuniform_scaling","value":"pub fn prepend_nonuniform_scaling<SB>(&Self,\n                                      &Vector<N, DimNameDiff<D, U1>, SB>)\n-> MatrixN<N, D> where D: DimNameSub<U1>, SB: Storage<N, DimNameDiff<D, U1>>,\nDefaultAllocator: Allocator<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to a non-uniform scaling factor followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to a non-uniform scaling factor followed by `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":217411,"byte_end":217500,"line_start":253,"line_end":253,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":217505,"byte_end":217514,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use prepend_nonuniform_scaling_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":217519,"byte_end":217588,"line_start":255,"line_end":255,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2430},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":218140,"byte_end":218158,"line_start":273,"line_end":273,"column_start":12,"column_end":30},"name":"append_translation","qualname":"<SquareMatrix<N, D, S>>::append_translation","value":"pub fn append_translation<SB>(&Self, &Vector<N, DimNameDiff<D, U1>, SB>)\n-> MatrixN<N, D> where D: DimNameSub<U1>, SB: Storage<N, DimNameDiff<D, U1>>,\nDefaultAllocator: Allocator<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to `self` followed by a translation.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to `self` followed by a translation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":217974,"byte_end":218048,"line_start":270,"line_end":270,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":218053,"byte_end":218062,"line_start":271,"line_end":271,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use append_translation_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":218067,"byte_end":218128,"line_start":272,"line_end":272,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2432},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":218638,"byte_end":218657,"line_start":287,"line_end":287,"column_start":12,"column_end":31},"name":"prepend_translation","qualname":"<SquareMatrix<N, D, S>>::prepend_translation","value":"pub fn prepend_translation<SB>(&Self, &Vector<N, DimNameDiff<D, U1>, SB>)\n-> MatrixN<N, D> where D: DimNameSub<U1>, SB: Storage<N, DimNameDiff<D, U1>>,\nDefaultAllocator: Allocator<N, D, D> + Allocator<N, DimNameDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to a translation followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to a translation followed by `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":218471,"byte_end":218545,"line_start":284,"line_end":284,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":218550,"byte_end":218559,"line_start":285,"line_end":285,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use prepend_translation_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":218564,"byte_end":218626,"line_start":286,"line_end":286,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2434},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":219150,"byte_end":219168,"line_start":303,"line_end":303,"column_start":12,"column_end":30},"name":"append_scaling_mut","qualname":"<SquareMatrix<N, D, S>>::append_scaling_mut","value":"pub fn append_scaling_mut(&mut Self, N) where S: StorageMut<N, D, D>,\nD: DimNameSub<U1>","parent":null,"children":[],"decl_id":null,"docs":" Computes in-place the transformation equal to `self` followed by an uniform scaling factor.\n","sig":null,"attributes":[{"value":"/ Computes in-place the transformation equal to `self` followed by an uniform scaling factor.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":219029,"byte_end":219124,"line_start":301,"line_end":301,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":219129,"byte_end":219138,"line_start":302,"line_end":302,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2435},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":219501,"byte_end":219520,"line_start":314,"line_end":314,"column_start":12,"column_end":31},"name":"prepend_scaling_mut","qualname":"<SquareMatrix<N, D, S>>::prepend_scaling_mut","value":"pub fn prepend_scaling_mut(&mut Self, N) where S: StorageMut<N, D, D>,\nD: DimNameSub<U1>","parent":null,"children":[],"decl_id":null,"docs":" Computes in-place the transformation equal to an uniform scaling factor followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes in-place the transformation equal to an uniform scaling factor followed by `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":219380,"byte_end":219475,"line_start":312,"line_end":312,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":219480,"byte_end":219489,"line_start":313,"line_end":313,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2436},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":219859,"byte_end":219888,"line_start":325,"line_end":325,"column_start":12,"column_end":41},"name":"append_nonuniform_scaling_mut","qualname":"<SquareMatrix<N, D, S>>::append_nonuniform_scaling_mut","value":"pub fn append_nonuniform_scaling_mut<SB>(&mut Self,\n                                         &Vector<N, DimNameDiff<D, U1>, SB>)\nwhere S: StorageMut<N, D, D>, D: DimNameSub<U1>,\nSB: Storage<N, DimNameDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Computes in-place the transformation equal to `self` followed by a non-uniform scaling factor.\n","sig":null,"attributes":[{"value":"/ Computes in-place the transformation equal to `self` followed by a non-uniform scaling factor.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":219735,"byte_end":219833,"line_start":323,"line_end":323,"column_start":5,"column_end":103}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":219838,"byte_end":219847,"line_start":324,"line_end":324,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2438},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":220362,"byte_end":220392,"line_start":339,"line_end":339,"column_start":12,"column_end":42},"name":"prepend_nonuniform_scaling_mut","qualname":"<SquareMatrix<N, D, S>>::prepend_nonuniform_scaling_mut","value":"pub fn prepend_nonuniform_scaling_mut<SB>(&mut Self,\n                                          &Vector<N, DimNameDiff<D, U1>, SB>)\nwhere S: StorageMut<N, D, D>, D: DimNameSub<U1>,\nSB: Storage<N, DimNameDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Computes in-place the transformation equal to a non-uniform scaling factor followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes in-place the transformation equal to a non-uniform scaling factor followed by `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":220238,"byte_end":220336,"line_start":337,"line_end":337,"column_start":5,"column_end":103}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":220341,"byte_end":220350,"line_start":338,"line_end":338,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2440},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":220864,"byte_end":220886,"line_start":355,"line_end":355,"column_start":12,"column_end":34},"name":"append_translation_mut","qualname":"<SquareMatrix<N, D, S>>::append_translation_mut","value":"pub fn append_translation_mut<SB>(&mut Self,\n                                  &Vector<N, DimNameDiff<D, U1>, SB>) where\nS: StorageMut<N, D, D>, D: DimNameSub<U1>, SB: Storage<N, DimNameDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to `self` followed by a translation.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to `self` followed by a translation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":220764,"byte_end":220838,"line_start":353,"line_end":353,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":220843,"byte_end":220852,"line_start":354,"line_end":354,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2442},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":221400,"byte_end":221423,"line_start":371,"line_end":371,"column_start":12,"column_end":35},"name":"prepend_translation_mut","qualname":"<SquareMatrix<N, D, S>>::prepend_translation_mut","value":"pub fn prepend_translation_mut<SB>(&mut Self,\n                                   &Vector<N, DimNameDiff<D, U1>, SB>) where\nD: DimNameSub<U1>, S: StorageMut<N, D, D>, SB: Storage<N, DimNameDiff<D, U1>>,\nDefaultAllocator: Allocator<N, DimNameDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to a translation followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to a translation followed by `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":221300,"byte_end":221374,"line_start":369,"line_end":369,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":221379,"byte_end":221388,"line_start":370,"line_end":370,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2448},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":222499,"byte_end":222515,"line_start":400,"line_end":400,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<SquareMatrix<N, D, S>>::transform_vector","value":"pub fn transform_vector(&Self, &VectorN<N, DimNameDiff<D, U1>>)\n-> VectorN<N, DimNameDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Transforms the given vector, assuming the matrix `self` uses homogeneous coordinates.\n","sig":null,"attributes":[{"value":"/ Transforms the given vector, assuming the matrix `self` uses homogeneous coordinates.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":222384,"byte_end":222473,"line_start":398,"line_end":398,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":222478,"byte_end":222487,"line_start":399,"line_end":399,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2449},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":223058,"byte_end":223073,"line_start":417,"line_end":417,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<SquareMatrix<N, D, S>>::transform_point","value":"pub fn transform_point(&Self, &Point<N, DimNameDiff<D, U1>>)\n-> Point<N, DimNameDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Transforms the given point, assuming the matrix `self` uses homogeneous coordinates.\n","sig":null,"attributes":[{"value":"/ Transforms the given point, assuming the matrix `self` uses homogeneous coordinates.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":222944,"byte_end":223032,"line_start":415,"line_end":415,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":223037,"byte_end":223046,"line_start":416,"line_end":416,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2532},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":224741,"byte_end":224744,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"abs","qualname":"<Matrix<N, R, C, S>>::abs","value":"pub fn abs(&Self) -> MatrixMN<N, R, C> where N: Signed,\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the component-wise absolute value.","sig":null,"attributes":[{"value":"/ Computes the component-wise absolute value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":224434,"byte_end":224481,"line_start":20,"line_end":20,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":224486,"byte_end":224489,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":224494,"byte_end":224507,"line_start":22,"line_end":22,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":224512,"byte_end":224515,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":224520,"byte_end":224527,"line_start":24,"line_end":24,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":224532,"byte_end":224560,"line_start":25,"line_end":25,"column_start":5,"column_end":33}},{"value":"/ let a = Matrix2::new(0.0, 1.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":224565,"byte_end":224599,"line_start":26,"line_end":26,"column_start":5,"column_end":39}},{"value":"/                      -2.0, -3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":224604,"byte_end":224641,"line_start":27,"line_end":27,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(a.abs(), Matrix2::new(0.0, 1.0, 2.0, 3.0))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":224646,"byte_end":224703,"line_start":28,"line_end":28,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":224708,"byte_end":224715,"line_start":29,"line_end":29,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":224720,"byte_end":224729,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":17929},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":229519,"byte_end":229532,"line_start":149,"line_end":149,"column_start":9,"column_end":22},"name":"component_mul","qualname":"<Matrix<N, R1, C1, SA>>::component_mul","value":"pub fn component_mul<R2, C2, SB>(&Self, &Matrix<N, R2, C2, SB>)\n-> MatrixComponentOp<N, R1, C1, R2, C2> where N: ClosedMul, R2: Dim, C2: Dim,\nSB: Storage<N, R2, C2>,\nDefaultAllocator: SameShapeAllocator<N, R1, C1, R2, C2>,\nShapeConstraint: SameNumberOfRows<R1, R2> + SameNumberOfColumns<C1, C2>","parent":null,"children":[],"decl_id":null,"docs":"        Componentwise matrix or vector multiplication.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":225316,"byte_end":225325,"line_start":51,"line_end":51,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":17933},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":229575,"byte_end":229579,"line_start":149,"line_end":149,"column_start":65,"column_end":69},"name":"cmpy","qualname":"<Matrix<N, R1, C1, SA>>::cmpy","value":"pub fn cmpy<R2, C2, SB, R3, C3,\n            SC>(&mut Self, N, &Matrix<N, R2, C2, SB>, &Matrix<N, R3, C3, SC>,\n                N) where N: ClosedMul + Zero + Mul<N, Output = N> + Add<N,\nOutput = N>, R2: Dim, C2: Dim, R3: Dim, C3: Dim, SA: StorageMut<N, R1, C1>,\nSB: Storage<N, R2, C2>, SC: Storage<N, R3, C3>,\nShapeConstraint: SameNumberOfRows<R1, R2> + SameNumberOfColumns<C1, C2> +\nSameNumberOfRows<R1, R3> + SameNumberOfColumns<C1, C3>","parent":null,"children":[],"decl_id":null,"docs":"        Computes componentwise `self[i] = alpha * a[i] * b[i] + beta * self[i]`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":226249,"byte_end":226258,"line_start":75,"line_end":75,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":17940},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":229553,"byte_end":229573,"line_start":149,"line_end":149,"column_start":43,"column_end":63},"name":"component_mul_assign","qualname":"<Matrix<N, R1, C1, SA>>::component_mul_assign","value":"pub fn component_mul_assign<R2, C2, SB>(&mut Self, &Matrix<N, R2, C2, SB>)\nwhere N: ClosedMul, R2: Dim, C2: Dim, SA: StorageMut<N, R1, C1>,\nSB: Storage<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R1, R2> +\nSameNumberOfColumns<C1, C2>","parent":null,"children":[],"decl_id":null,"docs":"        Inplace componentwise matrix or vector multiplication.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":228071,"byte_end":228080,"line_start":111,"line_end":111,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":17944},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":229534,"byte_end":229551,"line_start":149,"line_end":149,"column_start":24,"column_end":41},"name":"component_mul_mut","qualname":"<Matrix<N, R1, C1, SA>>::component_mul_mut","value":"pub fn component_mul_mut<R2, C2, SB>(&mut Self, &Matrix<N, R2, C2, SB>) where\nN: ClosedMul, R2: Dim, C2: Dim, SA: StorageMut<N, R1, C1>,\nSB: Storage<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R1, R2> +\nSameNumberOfColumns<C1, C2>","parent":null,"children":[],"decl_id":null,"docs":"        Inplace componentwise matrix or vector multiplication.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":228858,"byte_end":228867,"line_start":132,"line_end":132,"column_start":9,"column_end":18}},{"value":"deprecated(note =\n             \"This is renamed using the `_assign` suffix instead of the `_mut` suffix.\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":228876,"byte_end":228972,"line_start":133,"line_end":133,"column_start":9,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":17948},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":230840,"byte_end":230853,"line_start":194,"line_end":194,"column_start":9,"column_end":22},"name":"component_div","qualname":"<Matrix<N, R1, C1, SA>>::component_div","value":"pub fn component_div<R2, C2, SB>(&Self, &Matrix<N, R2, C2, SB>)\n-> MatrixComponentOp<N, R1, C1, R2, C2> where N: ClosedDiv, R2: Dim, C2: Dim,\nSB: Storage<N, R2, C2>,\nDefaultAllocator: SameShapeAllocator<N, R1, C1, R2, C2>,\nShapeConstraint: SameNumberOfRows<R1, R2> + SameNumberOfColumns<C1, C2>","parent":null,"children":[],"decl_id":null,"docs":"        Componentwise matrix or vector division.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":225316,"byte_end":225325,"line_start":51,"line_end":51,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":17952},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":230896,"byte_end":230900,"line_start":194,"line_end":194,"column_start":65,"column_end":69},"name":"cdpy","qualname":"<Matrix<N, R1, C1, SA>>::cdpy","value":"pub fn cdpy<R2, C2, SB, R3, C3,\n            SC>(&mut Self, N, &Matrix<N, R2, C2, SB>, &Matrix<N, R3, C3, SC>,\n                N) where N: ClosedDiv + Zero + Mul<N, Output = N> + Add<N,\nOutput = N>, R2: Dim, C2: Dim, R3: Dim, C3: Dim, SA: StorageMut<N, R1, C1>,\nSB: Storage<N, R2, C2>, SC: Storage<N, R3, C3>,\nShapeConstraint: SameNumberOfRows<R1, R2> + SameNumberOfColumns<C1, C2> +\nSameNumberOfRows<R1, R3> + SameNumberOfColumns<C1, C3>","parent":null,"children":[],"decl_id":null,"docs":"        Computes componentwise `self[i] = alpha * a[i] / b[i] + beta * self[i]`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":226249,"byte_end":226258,"line_start":75,"line_end":75,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":17959},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":230874,"byte_end":230894,"line_start":194,"line_end":194,"column_start":43,"column_end":63},"name":"component_div_assign","qualname":"<Matrix<N, R1, C1, SA>>::component_div_assign","value":"pub fn component_div_assign<R2, C2, SB>(&mut Self, &Matrix<N, R2, C2, SB>)\nwhere N: ClosedDiv, R2: Dim, C2: Dim, SA: StorageMut<N, R1, C1>,\nSB: Storage<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R1, R2> +\nSameNumberOfColumns<C1, C2>","parent":null,"children":[],"decl_id":null,"docs":"        Inplace componentwise matrix or vector division.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":228071,"byte_end":228080,"line_start":111,"line_end":111,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":17963},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":230855,"byte_end":230872,"line_start":194,"line_end":194,"column_start":24,"column_end":41},"name":"component_div_mut","qualname":"<Matrix<N, R1, C1, SA>>::component_div_mut","value":"pub fn component_div_mut<R2, C2, SB>(&mut Self, &Matrix<N, R2, C2, SB>) where\nN: ClosedDiv, R2: Dim, C2: Dim, SA: StorageMut<N, R1, C1>,\nSB: Storage<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R1, R2> +\nSameNumberOfColumns<C1, C2>","parent":null,"children":[],"decl_id":null,"docs":"        Inplace componentwise matrix or vector division.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":228858,"byte_end":228867,"line_start":132,"line_end":132,"column_start":9,"column_end":18}},{"value":"deprecated(note =\n             \"This is renamed using the `_assign` suffix instead of the `_mut` suffix.\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":228876,"byte_end":228972,"line_start":133,"line_end":133,"column_start":9,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":2539},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":232344,"byte_end":232347,"line_start":244,"line_end":244,"column_start":12,"column_end":15},"name":"inf","qualname":"<Matrix<N, R1, C1, SA>>::inf","value":"pub fn inf(&Self, &Self) -> MatrixMN<N, R1, C1> where N: SimdPartialOrd,\nDefaultAllocator: Allocator<N, R1, C1>","parent":null,"children":[],"decl_id":null,"docs":" Computes the infimum (aka. componentwise min) of two matrices/vectors.\n","sig":null,"attributes":[{"value":"/ Computes the infimum (aka. componentwise min) of two matrices/vectors.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":232244,"byte_end":232318,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":232323,"byte_end":232332,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2541},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":232645,"byte_end":232648,"line_start":254,"line_end":254,"column_start":12,"column_end":15},"name":"sup","qualname":"<Matrix<N, R1, C1, SA>>::sup","value":"pub fn sup(&Self, &Self) -> MatrixMN<N, R1, C1> where N: SimdPartialOrd,\nDefaultAllocator: Allocator<N, R1, C1>","parent":null,"children":[],"decl_id":null,"docs":" Computes the supremum (aka. componentwise max) of two matrices/vectors.\n","sig":null,"attributes":[{"value":"/ Computes the supremum (aka. componentwise max) of two matrices/vectors.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":232544,"byte_end":232619,"line_start":252,"line_end":252,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":232624,"byte_end":232633,"line_start":253,"line_end":253,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2543},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":232932,"byte_end":232939,"line_start":264,"line_end":264,"column_start":12,"column_end":19},"name":"inf_sup","qualname":"<Matrix<N, R1, C1, SA>>::inf_sup","value":"pub fn inf_sup(&Self, &Self) -> (MatrixMN<N, R1, C1>, MatrixMN<N, R1, C1>)\nwhere N: SimdPartialOrd, DefaultAllocator: Allocator<N, R1, C1>","parent":null,"children":[],"decl_id":null,"docs":" Computes the (infimum, supremum) of two matrices/vectors.\n","sig":null,"attributes":[{"value":"/ Computes the (infimum, supremum) of two matrices/vectors.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":232845,"byte_end":232906,"line_start":262,"line_end":262,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":232911,"byte_end":232920,"line_start":263,"line_end":263,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2544},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":233304,"byte_end":233314,"line_start":276,"line_end":276,"column_start":12,"column_end":22},"name":"add_scalar","qualname":"<Matrix<N, R1, C1, SA>>::add_scalar","value":"pub fn add_scalar(&Self, N) -> MatrixMN<N, R1, C1> where N: ClosedAdd,\nDefaultAllocator: Allocator<N, R1, C1>","parent":null,"children":[],"decl_id":null,"docs":" Adds a scalar to `self`.\n","sig":null,"attributes":[{"value":"/ Adds a scalar to `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":233192,"byte_end":233220,"line_start":273,"line_end":273,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":233225,"byte_end":233234,"line_start":274,"line_end":274,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use add_scalar_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":233239,"byte_end":233292,"line_start":275,"line_end":275,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2545},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":233600,"byte_end":233614,"line_start":288,"line_end":288,"column_start":12,"column_end":26},"name":"add_scalar_mut","qualname":"<Matrix<N, R1, C1, SA>>::add_scalar_mut","value":"pub fn add_scalar_mut(&mut Self, N) where N: ClosedAdd,\nSA: StorageMut<N, R1, C1>","parent":null,"children":[],"decl_id":null,"docs":" Adds a scalar to `self` in-place.\n","sig":null,"attributes":[{"value":"/ Adds a scalar to `self` in-place.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":233537,"byte_end":233574,"line_start":286,"line_end":286,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":233579,"byte_end":233588,"line_start":287,"line_end":287,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2659},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":235165,"byte_end":235190,"line_start":41,"line_end":41,"column_start":19,"column_end":44},"name":"new_uninitialized_generic","qualname":"<MatrixMN<N, R, C>>::new_uninitialized_generic","value":"pub unsafe fn new_uninitialized_generic(R, C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new uninitialized matrix. If the matrix has a compile-time dimension, this panics\n if `nrows != R::to_usize()` or `ncols != C::to_usize()`.\n","sig":null,"attributes":[{"value":"/ Creates a new uninitialized matrix. If the matrix has a compile-time dimension, this panics","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":234972,"byte_end":235067,"line_start":38,"line_end":38,"column_start":5,"column_end":100}},{"value":"/ if `nrows != R::to_usize()` or `ncols != C::to_usize()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":235072,"byte_end":235132,"line_start":39,"line_end":39,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":235137,"byte_end":235146,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2660},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":235395,"byte_end":235415,"line_start":47,"line_end":47,"column_start":12,"column_end":32},"name":"from_element_generic","qualname":"<MatrixMN<N, R, C>>::from_element_generic","value":"pub fn from_element_generic(R, C, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with all its elements set to `elem`.\n","sig":null,"attributes":[{"value":"/ Creates a matrix with all its elements set to `elem`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":235312,"byte_end":235369,"line_start":45,"line_end":45,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":235374,"byte_end":235383,"line_start":46,"line_end":46,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2661},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":235726,"byte_end":235740,"line_start":56,"line_end":56,"column_start":12,"column_end":26},"name":"repeat_generic","qualname":"<MatrixMN<N, R, C>>::repeat_generic","value":"pub fn repeat_generic(R, C, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with all its elements set to `elem`.","sig":null,"attributes":[{"value":"/ Creates a matrix with all its elements set to `elem`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":235595,"byte_end":235652,"line_start":52,"line_end":52,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":235657,"byte_end":235660,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Same as `from_element_generic`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":235665,"byte_end":235700,"line_start":54,"line_end":54,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":235705,"byte_end":235714,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2662},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":235998,"byte_end":236011,"line_start":63,"line_end":63,"column_start":12,"column_end":25},"name":"zeros_generic","qualname":"<MatrixMN<N, R, C>>::zeros_generic","value":"pub fn zeros_generic(R, C) -> Self where N: Zero","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with all its elements set to 0.\n","sig":null,"attributes":[{"value":"/ Creates a matrix with all its elements set to 0.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":235920,"byte_end":235972,"line_start":61,"line_end":61,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":235977,"byte_end":235986,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2663},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":236235,"byte_end":236256,"line_start":72,"line_end":72,"column_start":12,"column_end":33},"name":"from_iterator_generic","qualname":"<MatrixMN<N, R, C>>::from_iterator_generic","value":"pub fn from_iterator_generic<I>(R, C, I) -> Self where I: IntoIterator<Item =\nN>","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with all its elements filled by an iterator.\n","sig":null,"attributes":[{"value":"/ Creates a matrix with all its elements filled by an iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":236144,"byte_end":236209,"line_start":70,"line_end":70,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":236214,"byte_end":236223,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2665},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":236703,"byte_end":236725,"line_start":85,"line_end":85,"column_start":12,"column_end":34},"name":"from_row_slice_generic","qualname":"<MatrixMN<N, R, C>>::from_row_slice_generic","value":"pub fn from_row_slice_generic(R, C, &[N]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with its elements filled with the components provided by a slice in\n row-major order.","sig":null,"attributes":[{"value":"/ Creates a matrix with its elements filled with the components provided by a slice in","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":236445,"byte_end":236533,"line_start":79,"line_end":79,"column_start":5,"column_end":93}},{"value":"/ row-major order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":236538,"byte_end":236558,"line_start":80,"line_end":80,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":236563,"byte_end":236566,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ The order of elements in the slice must follow the usual mathematic writing, i.e.,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":236571,"byte_end":236657,"line_start":82,"line_end":82,"column_start":5,"column_end":91}},{"value":"/ row-by-row.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":236662,"byte_end":236677,"line_start":83,"line_end":83,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":236682,"byte_end":236691,"line_start":84,"line_end":84,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2666},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":237494,"byte_end":237519,"line_start":106,"line_end":106,"column_start":12,"column_end":37},"name":"from_column_slice_generic","qualname":"<MatrixMN<N, R, C>>::from_column_slice_generic","value":"pub fn from_column_slice_generic(R, C, &[N]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with its elements filled with the components provided by a slice. The\n components must have the same layout as the matrix data storage (i.e. column-major).\n","sig":null,"attributes":[{"value":"/ Creates a matrix with its elements filled with the components provided by a slice. The","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":237285,"byte_end":237375,"line_start":103,"line_end":103,"column_start":5,"column_end":95}},{"value":"/ components must have the same layout as the matrix data storage (i.e. column-major).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":237380,"byte_end":237468,"line_start":104,"line_end":104,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":237473,"byte_end":237482,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2667},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":237785,"byte_end":237800,"line_start":113,"line_end":113,"column_start":12,"column_end":27},"name":"from_fn_generic","qualname":"<MatrixMN<N, R, C>>::from_fn_generic","value":"pub fn from_fn_generic<F>(R, C, F) -> Self where F: FnMut(usize, usize) -> N","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix filled with the results of a function applied to each of its component\n coordinates.\n","sig":null,"attributes":[{"value":"/ Creates a matrix filled with the results of a function applied to each of its component","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":237647,"byte_end":237738,"line_start":110,"line_end":110,"column_start":5,"column_end":96}},{"value":"/ coordinates.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":237743,"byte_end":237759,"line_start":111,"line_end":111,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":237764,"byte_end":237773,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2669},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":238403,"byte_end":238419,"line_start":133,"line_end":133,"column_start":12,"column_end":28},"name":"identity_generic","qualname":"<MatrixMN<N, R, C>>::identity_generic","value":"pub fn identity_generic(R, C) -> Self where N: Zero + One","parent":null,"children":[],"decl_id":null,"docs":" Creates a new identity matrix.","sig":null,"attributes":[{"value":"/ Creates a new identity matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":238168,"byte_end":238202,"line_start":128,"line_end":128,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":238207,"byte_end":238210,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ If the matrix is not square, the largest square submatrix starting at index `(0, 0)` is set","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":238215,"byte_end":238310,"line_start":130,"line_end":130,"column_start":5,"column_end":100}},{"value":"/ to the identity matrix. All other entries are set to zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":238315,"byte_end":238377,"line_start":131,"line_end":131,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":238382,"byte_end":238391,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2670},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":238838,"byte_end":238867,"line_start":145,"line_end":145,"column_start":12,"column_end":41},"name":"from_diagonal_element_generic","qualname":"<MatrixMN<N, R, C>>::from_diagonal_element_generic","value":"pub fn from_diagonal_element_generic(R, C, N) -> Self where N: Zero + One","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix with its diagonal filled with copies of `elt`.","sig":null,"attributes":[{"value":"/ Creates a new matrix with its diagonal filled with copies of `elt`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":238566,"byte_end":238637,"line_start":140,"line_end":140,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":238642,"byte_end":238645,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ If the matrix is not square, the largest square submatrix starting at index `(0, 0)` is set","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":238650,"byte_end":238745,"line_start":142,"line_end":142,"column_start":5,"column_end":100}},{"value":"/ to the identity matrix. All other entries are set to zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":238750,"byte_end":238812,"line_start":143,"line_end":143,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":238817,"byte_end":238826,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2671},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":239451,"byte_end":239480,"line_start":163,"line_end":163,"column_start":12,"column_end":41},"name":"from_partial_diagonal_generic","qualname":"<MatrixMN<N, R, C>>::from_partial_diagonal_generic","value":"pub fn from_partial_diagonal_generic(R, C, &[N]) -> Self where N: Zero","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix that may be rectangular. The first `elts.len()` diagonal elements are\n filled with the content of `elts`. Others are set to 0.","sig":null,"attributes":[{"value":"/ Creates a new matrix that may be rectangular. The first `elts.len()` diagonal elements are","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":239174,"byte_end":239268,"line_start":158,"line_end":158,"column_start":5,"column_end":99}},{"value":"/ filled with the content of `elts`. Others are set to 0.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":239273,"byte_end":239332,"line_start":159,"line_end":159,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":239337,"byte_end":239340,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Panics if `elts.len()` is larger than the minimum among `nrows` and `ncols`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":239345,"byte_end":239425,"line_start":161,"line_end":161,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":239430,"byte_end":239439,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2672},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":240595,"byte_end":240604,"line_start":197,"line_end":197,"column_start":12,"column_end":21},"name":"from_rows","qualname":"<MatrixMN<N, R, C>>::from_rows","value":"pub fn from_rows<SB>(&[Matrix<N, U1, C, SB>]) -> Self where\nSB: Storage<N, U1, C>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new matrix from its rows.","sig":null,"attributes":[{"value":"/ Builds a new matrix from its rows.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":239919,"byte_end":239957,"line_start":180,"line_end":180,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":239962,"byte_end":239965,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Panics if not enough rows are provided (for statically-sized matrices), or if all rows do","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":239970,"byte_end":240063,"line_start":182,"line_end":182,"column_start":5,"column_end":98}},{"value":"/ not have the same dimensions.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":240068,"byte_end":240101,"line_start":183,"line_end":183,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":240106,"byte_end":240109,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":240114,"byte_end":240127,"line_start":185,"line_end":185,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":240132,"byte_end":240139,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{RowVector3, Matrix3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":240144,"byte_end":240186,"line_start":187,"line_end":187,"column_start":5,"column_end":47}},{"value":"/ # use std::iter;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":240191,"byte_end":240211,"line_start":188,"line_end":188,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":240216,"byte_end":240219,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::from_rows(&[ RowVector3::new(1.0, 2.0, 3.0),  RowVector3::new(4.0, 5.0, 6.0),  RowVector3::new(7.0, 8.0, 9.0) ]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":240224,"byte_end":240358,"line_start":190,"line_end":190,"column_start":5,"column_end":139}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":240363,"byte_end":240366,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ assert!(m.m11 == 1.0 && m.m12 == 2.0 && m.m13 == 3.0 &&","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":240371,"byte_end":240430,"line_start":192,"line_end":192,"column_start":5,"column_end":64}},{"value":"/         m.m21 == 4.0 && m.m22 == 5.0 && m.m23 == 6.0 &&","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":240435,"byte_end":240494,"line_start":193,"line_end":193,"column_start":5,"column_end":64}},{"value":"/         m.m31 == 7.0 && m.m32 == 8.0 && m.m33 == 9.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":240499,"byte_end":240557,"line_start":194,"line_end":194,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":240562,"byte_end":240569,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":240574,"byte_end":240583,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2676},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":242069,"byte_end":242081,"line_start":239,"line_end":239,"column_start":12,"column_end":24},"name":"from_columns","qualname":"<MatrixMN<N, R, C>>::from_columns","value":"pub fn from_columns<SB>(&[Vector<N, R, SB>]) -> Self where SB: Storage<N, R>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new matrix from its columns.","sig":null,"attributes":[{"value":"/ Builds a new matrix from its columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":241393,"byte_end":241434,"line_start":222,"line_end":222,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":241439,"byte_end":241442,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Panics if not enough columns are provided (for statically-sized matrices), or if all","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":241447,"byte_end":241535,"line_start":224,"line_end":224,"column_start":5,"column_end":93}},{"value":"/ columns do not have the same dimensions.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":241540,"byte_end":241584,"line_start":225,"line_end":225,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":241589,"byte_end":241592,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":241597,"byte_end":241610,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":241615,"byte_end":241622,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, Matrix3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":241627,"byte_end":241666,"line_start":229,"line_end":229,"column_start":5,"column_end":44}},{"value":"/ # use std::iter;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":241671,"byte_end":241691,"line_start":230,"line_end":230,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":241696,"byte_end":241699,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::from_columns(&[ Vector3::new(1.0, 2.0, 3.0),  Vector3::new(4.0, 5.0, 6.0),  Vector3::new(7.0, 8.0, 9.0) ]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":241704,"byte_end":241832,"line_start":232,"line_end":232,"column_start":5,"column_end":133}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":241837,"byte_end":241840,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ assert!(m.m11 == 1.0 && m.m12 == 4.0 && m.m13 == 7.0 &&","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":241845,"byte_end":241904,"line_start":234,"line_end":234,"column_start":5,"column_end":64}},{"value":"/         m.m21 == 2.0 && m.m22 == 5.0 && m.m23 == 8.0 &&","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":241909,"byte_end":241968,"line_start":235,"line_end":235,"column_start":5,"column_end":64}},{"value":"/         m.m31 == 3.0 && m.m32 == 6.0 && m.m33 == 9.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":241973,"byte_end":242031,"line_start":236,"line_end":236,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":242036,"byte_end":242043,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":242048,"byte_end":242057,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2680},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":242988,"byte_end":243006,"line_start":267,"line_end":267,"column_start":12,"column_end":30},"name":"new_random_generic","qualname":"<MatrixMN<N, R, C>>::new_random_generic","value":"pub fn new_random_generic(R, C) -> Self where Standard: Distribution<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix filled with random values.\n","sig":null,"attributes":[{"value":"/ Creates a matrix filled with random values.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":242887,"byte_end":242934,"line_start":264,"line_end":264,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":242939,"byte_end":242948,"line_start":265,"line_end":265,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":242953,"byte_end":242976,"line_start":266,"line_end":266,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2682},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":243265,"byte_end":243290,"line_start":276,"line_end":276,"column_start":12,"column_end":37},"name":"from_distribution_generic","qualname":"<MatrixMN<N, R, C>>::from_distribution_generic","value":"pub fn from_distribution_generic<Distr: Distribution<N> + ?Sized, G: Rng +\n                                 ?Sized>(R, C, &Distr, &mut G) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix filled with random values from the given distribution.\n","sig":null,"attributes":[{"value":"/ Creates a matrix filled with random values from the given distribution.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":243164,"byte_end":243239,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":243244,"byte_end":243253,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2686},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":244204,"byte_end":244220,"line_start":304,"line_end":304,"column_start":12,"column_end":28},"name":"from_vec_generic","qualname":"<MatrixMN<N, R, C>>::from_vec_generic","value":"pub fn from_vec_generic(R, C, Vec<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix backed by a given `Vec`.","sig":null,"attributes":[{"value":"/ Creates a matrix backed by a given `Vec`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":243533,"byte_end":243578,"line_start":285,"line_end":285,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":243583,"byte_end":243586,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ The output matrix is filled column-by-column.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":243591,"byte_end":243640,"line_start":287,"line_end":287,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":243645,"byte_end":243648,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":243653,"byte_end":243666,"line_start":289,"line_end":289,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":243671,"byte_end":243678,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Dynamic, DMatrix, Matrix, U1};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":243683,"byte_end":243734,"line_start":291,"line_end":291,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":243739,"byte_end":243742,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ let vec = vec![0, 1, 2, 3, 4, 5];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":243747,"byte_end":243784,"line_start":293,"line_end":293,"column_start":5,"column_end":42}},{"value":"/ let vec_ptr = vec.as_ptr();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":243789,"byte_end":243820,"line_start":294,"line_end":294,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":243825,"byte_end":243828,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ let matrix = Matrix::from_vec_generic(Dynamic::new(vec.len()), U1, vec);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":243833,"byte_end":243909,"line_start":296,"line_end":296,"column_start":5,"column_end":81}},{"value":"/ let matrix_storage_ptr = matrix.data.as_vec().as_ptr();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":243914,"byte_end":243973,"line_start":297,"line_end":297,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":243978,"byte_end":243981,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ // `matrix` is backed by exactly the same `Vec` as it was constructed from.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":243986,"byte_end":244065,"line_start":299,"line_end":299,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(matrix_storage_ptr, vec_ptr);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":244070,"byte_end":244114,"line_start":300,"line_end":300,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":244119,"byte_end":244126,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":244131,"byte_end":244140,"line_start":302,"line_end":302,"column_start":5,"column_end":14}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":244145,"byte_end":244192,"line_start":303,"line_end":303,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2690},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":245354,"byte_end":245367,"line_start":333,"line_end":333,"column_start":12,"column_end":25},"name":"from_diagonal","qualname":"<MatrixN<N, D>>::from_diagonal","value":"pub fn from_diagonal<SB: Storage<N, D>>(&Vector<N, D, SB>) -> Self where\nN: Zero","parent":null,"children":[],"decl_id":null,"docs":" Creates a square matrix with its diagonal set to `diag` and all other entries set to 0.","sig":null,"attributes":[{"value":"/ Creates a square matrix with its diagonal set to `diag` and all other entries set to 0.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":244429,"byte_end":244520,"line_start":314,"line_end":314,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":244525,"byte_end":244528,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":244533,"byte_end":244546,"line_start":316,"line_end":316,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":244551,"byte_end":244558,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, DVector, Matrix3, DMatrix};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":244563,"byte_end":244620,"line_start":318,"line_end":318,"column_start":5,"column_end":62}},{"value":"/ # use std::iter;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":244625,"byte_end":244645,"line_start":319,"line_end":319,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":244650,"byte_end":244653,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::from_diagonal(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":244658,"byte_end":244723,"line_start":321,"line_end":321,"column_start":5,"column_end":70}},{"value":"/ // The two additional arguments represent the matrix dimensions.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":244728,"byte_end":244796,"line_start":322,"line_end":322,"column_start":5,"column_end":73}},{"value":"/ let dm = DMatrix::from_diagonal(&DVector::from_row_slice(&[1.0, 2.0, 3.0]));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":244801,"byte_end":244881,"line_start":323,"line_end":323,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":244886,"byte_end":244889,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ assert!(m.m11 == 1.0 && m.m12 == 0.0 && m.m13 == 0.0 &&","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":244894,"byte_end":244953,"line_start":325,"line_end":325,"column_start":5,"column_end":64}},{"value":"/         m.m21 == 0.0 && m.m22 == 2.0 && m.m23 == 0.0 &&","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":244958,"byte_end":245017,"line_start":326,"line_end":326,"column_start":5,"column_end":64}},{"value":"/         m.m31 == 0.0 && m.m32 == 0.0 && m.m33 == 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":245022,"byte_end":245080,"line_start":327,"line_end":327,"column_start":5,"column_end":63}},{"value":"/ assert!(dm[(0, 0)] == 1.0 && dm[(0, 1)] == 0.0 && dm[(0, 2)] == 0.0 &&","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":245085,"byte_end":245159,"line_start":328,"line_end":328,"column_start":5,"column_end":79}},{"value":"/         dm[(1, 0)] == 0.0 && dm[(1, 1)] == 2.0 && dm[(1, 2)] == 0.0 &&","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":245164,"byte_end":245238,"line_start":329,"line_end":329,"column_start":5,"column_end":79}},{"value":"/         dm[(2, 0)] == 0.0 && dm[(2, 1)] == 0.0 && dm[(2, 2)] == 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":245243,"byte_end":245316,"line_start":330,"line_end":330,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":245321,"byte_end":245328,"line_start":331,"line_end":331,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":245333,"byte_end":245342,"line_start":332,"line_end":332,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2743},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":272997,"byte_end":273000,"line_start":1035,"line_end":1035,"column_start":12,"column_end":15},"name":"ith","qualname":"<VectorN<N, R>>::ith","value":"pub fn ith(usize, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The column vector with `val` as its i-th component.\n","sig":null,"attributes":[{"value":"/ The column vector with `val` as its i-th component.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":272916,"byte_end":272971,"line_start":1033,"line_end":1033,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":272976,"byte_end":272985,"line_start":1034,"line_end":1034,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2744},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":273202,"byte_end":273210,"line_start":1043,"line_end":1043,"column_start":12,"column_end":20},"name":"ith_axis","qualname":"<VectorN<N, R>>::ith_axis","value":"pub fn ith_axis(usize) -> Unit<Self>","parent":null,"children":[],"decl_id":null,"docs":" The column unit vector with `N::one()` as its i-th component.\n","sig":null,"attributes":[{"value":"/ The column unit vector with `N::one()` as its i-th component.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":273111,"byte_end":273176,"line_start":1041,"line_end":1041,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":273181,"byte_end":273190,"line_start":1042,"line_end":1042,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2745},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":273400,"byte_end":273401,"line_start":1049,"line_end":1049,"column_start":12,"column_end":13},"name":"x","qualname":"<VectorN<N, R>>::x","value":"pub fn x() -> Self where R::Value: Cmp<typenum::U0, Output = Greater>","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its first component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its first component, and zero elsewhere.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":273300,"byte_end":273374,"line_start":1047,"line_end":1047,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":273379,"byte_end":273388,"line_start":1048,"line_end":1048,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2746},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":273722,"byte_end":273723,"line_start":1063,"line_end":1063,"column_start":12,"column_end":13},"name":"y","qualname":"<VectorN<N, R>>::y","value":"pub fn y() -> Self where R::Value: Cmp<typenum::U1, Output = Greater>","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its second component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its second component, and zero elsewhere.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":273621,"byte_end":273696,"line_start":1061,"line_end":1061,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":273701,"byte_end":273710,"line_start":1062,"line_end":1062,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2747},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":274043,"byte_end":274044,"line_start":1077,"line_end":1077,"column_start":12,"column_end":13},"name":"z","qualname":"<VectorN<N, R>>::z","value":"pub fn z() -> Self where R::Value: Cmp<typenum::U2, Output = Greater>","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its third component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its third component, and zero elsewhere.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":273943,"byte_end":274017,"line_start":1075,"line_end":1075,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":274022,"byte_end":274031,"line_start":1076,"line_end":1076,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2748},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":274365,"byte_end":274366,"line_start":1091,"line_end":1091,"column_start":12,"column_end":13},"name":"w","qualname":"<VectorN<N, R>>::w","value":"pub fn w() -> Self where R::Value: Cmp<typenum::U3, Output = Greater>","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its fourth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its fourth component, and zero elsewhere.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":274264,"byte_end":274339,"line_start":1089,"line_end":1089,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":274344,"byte_end":274353,"line_start":1090,"line_end":1090,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2749},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":274686,"byte_end":274687,"line_start":1105,"line_end":1105,"column_start":12,"column_end":13},"name":"a","qualname":"<VectorN<N, R>>::a","value":"pub fn a() -> Self where R::Value: Cmp<typenum::U4, Output = Greater>","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its fifth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its fifth component, and zero elsewhere.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":274586,"byte_end":274660,"line_start":1103,"line_end":1103,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":274665,"byte_end":274674,"line_start":1104,"line_end":1104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2750},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":275007,"byte_end":275008,"line_start":1119,"line_end":1119,"column_start":12,"column_end":13},"name":"b","qualname":"<VectorN<N, R>>::b","value":"pub fn b() -> Self where R::Value: Cmp<typenum::U5, Output = Greater>","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its sixth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its sixth component, and zero elsewhere.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":274907,"byte_end":274981,"line_start":1117,"line_end":1117,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":274986,"byte_end":274995,"line_start":1118,"line_end":1118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2751},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":275333,"byte_end":275339,"line_start":1133,"line_end":1133,"column_start":12,"column_end":18},"name":"x_axis","qualname":"<VectorN<N, R>>::x_axis","value":"pub fn x_axis() -> Unit<Self> where R::Value: Cmp<typenum::U0, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its first component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its first component, and zero elsewhere.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":275228,"byte_end":275307,"line_start":1131,"line_end":1131,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":275312,"byte_end":275321,"line_start":1132,"line_end":1132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2752},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":275582,"byte_end":275588,"line_start":1142,"line_end":1142,"column_start":12,"column_end":18},"name":"y_axis","qualname":"<VectorN<N, R>>::y_axis","value":"pub fn y_axis() -> Unit<Self> where R::Value: Cmp<typenum::U1, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its second component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its second component, and zero elsewhere.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":275476,"byte_end":275556,"line_start":1140,"line_end":1140,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":275561,"byte_end":275570,"line_start":1141,"line_end":1141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2753},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":275830,"byte_end":275836,"line_start":1151,"line_end":1151,"column_start":12,"column_end":18},"name":"z_axis","qualname":"<VectorN<N, R>>::z_axis","value":"pub fn z_axis() -> Unit<Self> where R::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its third component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its third component, and zero elsewhere.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":275725,"byte_end":275804,"line_start":1149,"line_end":1149,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":275809,"byte_end":275818,"line_start":1150,"line_end":1150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2754},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":276079,"byte_end":276085,"line_start":1160,"line_end":1160,"column_start":12,"column_end":18},"name":"w_axis","qualname":"<VectorN<N, R>>::w_axis","value":"pub fn w_axis() -> Unit<Self> where R::Value: Cmp<typenum::U3, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its fourth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its fourth component, and zero elsewhere.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":275973,"byte_end":276053,"line_start":1158,"line_end":1158,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":276058,"byte_end":276067,"line_start":1159,"line_end":1159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2755},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":276327,"byte_end":276333,"line_start":1169,"line_end":1169,"column_start":12,"column_end":18},"name":"a_axis","qualname":"<VectorN<N, R>>::a_axis","value":"pub fn a_axis() -> Unit<Self> where R::Value: Cmp<typenum::U4, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its fifth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its fifth component, and zero elsewhere.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":276222,"byte_end":276301,"line_start":1167,"line_end":1167,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":276306,"byte_end":276315,"line_start":1168,"line_end":1168,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2756},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":276575,"byte_end":276581,"line_start":1178,"line_end":1178,"column_start":12,"column_end":18},"name":"b_axis","qualname":"<VectorN<N, R>>::b_axis","value":"pub fn b_axis() -> Unit<Self> where R::Value: Cmp<typenum::U5, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its sixth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its sixth component, and zero elsewhere.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":276470,"byte_end":276549,"line_start":1176,"line_end":1176,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":276554,"byte_end":276563,"line_start":1177,"line_end":1177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2798},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":277496,"byte_end":277537,"line_start":16,"line_end":16,"column_start":19,"column_end":60},"name":"from_slice_with_strides_generic_unchecked","qualname":"<MatrixSliceMN>::from_slice_with_strides_generic_unchecked","value":"pub unsafe fn from_slice_with_strides_generic_unchecked(&'a [N], usize, R, C,\n                                                        RStride, CStride)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates, without bound-checking, a matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates, without bound-checking, a matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":277084,"byte_end":277219,"line_start":11,"line_end":11,"column_start":5,"column_end":140}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":277224,"byte_end":277227,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ This method is unsafe because the input data array is not checked to contain enough elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":277232,"byte_end":277329,"line_start":13,"line_end":13,"column_start":5,"column_end":102}},{"value":"/ The generic types `R`, `C`, `RStride`, `CStride` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":277334,"byte_end":277463,"line_start":14,"line_end":14,"column_start":5,"column_end":134}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":277468,"byte_end":277477,"line_start":15,"line_end":15,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2799},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":278238,"byte_end":278269,"line_start":37,"line_end":37,"column_start":12,"column_end":43},"name":"from_slice_with_strides_generic","qualname":"<MatrixSliceMN>::from_slice_with_strides_generic","value":"pub fn from_slice_with_strides_generic(&'a [N], R, C, RStride, CStride)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates a matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":277887,"byte_end":277997,"line_start":32,"line_end":32,"column_start":5,"column_end":115}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":278002,"byte_end":278005,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Panics if the input data array dose not contain enough elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":278010,"byte_end":278078,"line_start":34,"line_end":34,"column_start":5,"column_end":73}},{"value":"/ The generic types `R`, `C`, `RStride`, `CStride` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":278083,"byte_end":278212,"line_start":35,"line_end":35,"column_start":5,"column_end":134}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":278217,"byte_end":278226,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2805},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":279420,"byte_end":279448,"line_start":65,"line_end":65,"column_start":19,"column_end":47},"name":"from_slice_generic_unchecked","qualname":"<MatrixSliceMN>::from_slice_generic_unchecked","value":"pub unsafe fn from_slice_generic_unchecked(&'a [N], usize, R, C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates, without bound-checking, a matrix slice from an array and with dimensions specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates, without bound-checking, a matrix slice from an array and with dimensions specified by generic types instances.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":279039,"byte_end":279162,"line_start":60,"line_end":60,"column_start":5,"column_end":128}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":279167,"byte_end":279170,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ This method is unsafe because the input data array is not checked to contain enough elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":279175,"byte_end":279272,"line_start":62,"line_end":62,"column_start":5,"column_end":102}},{"value":"/ The generic types `R` and `C` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":279277,"byte_end":279387,"line_start":63,"line_end":63,"column_start":5,"column_end":115}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":279392,"byte_end":279401,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2806},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":279984,"byte_end":280002,"line_start":79,"line_end":79,"column_start":12,"column_end":30},"name":"from_slice_generic","qualname":"<MatrixSliceMN>::from_slice_generic","value":"pub fn from_slice_generic(&'a [N], R, C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates a matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":279652,"byte_end":279762,"line_start":74,"line_end":74,"column_start":5,"column_end":115}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":279767,"byte_end":279770,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Panics if the input data array dose not contain enough elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":279775,"byte_end":279843,"line_start":76,"line_end":76,"column_start":5,"column_end":73}},{"value":"/ The generic types `R` and `C` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":279848,"byte_end":279958,"line_start":77,"line_end":77,"column_start":5,"column_end":115}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":279963,"byte_end":279972,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2815},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":283415,"byte_end":283456,"line_start":150,"line_end":150,"column_start":19,"column_end":60},"name":"from_slice_with_strides_generic_unchecked","qualname":"<MatrixSliceMutMN>::from_slice_with_strides_generic_unchecked","value":"pub unsafe fn from_slice_with_strides_generic_unchecked(&'a mut [N], usize, R,\n                                                        C, RStride, CStride)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates, without bound-checking, a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates, without bound-checking, a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":282995,"byte_end":283138,"line_start":145,"line_end":145,"column_start":5,"column_end":148}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":283143,"byte_end":283146,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This method is unsafe because the input data array is not checked to contain enough elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":283151,"byte_end":283248,"line_start":147,"line_end":147,"column_start":5,"column_end":102}},{"value":"/ The generic types `R`, `C`, `RStride`, `CStride` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":283253,"byte_end":283382,"line_start":148,"line_end":148,"column_start":5,"column_end":134}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":283387,"byte_end":283396,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2816},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":284176,"byte_end":284207,"line_start":171,"line_end":171,"column_start":12,"column_end":43},"name":"from_slice_with_strides_generic","qualname":"<MatrixSliceMutMN>::from_slice_with_strides_generic","value":"pub fn from_slice_with_strides_generic(&'a mut [N], R, C, RStride, CStride)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":283817,"byte_end":283935,"line_start":166,"line_end":166,"column_start":5,"column_end":123}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":283940,"byte_end":283943,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Panics if the input data array dose not contain enough elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":283948,"byte_end":284016,"line_start":168,"line_end":168,"column_start":5,"column_end":73}},{"value":"/ The generic types `R`, `C`, `RStride`, `CStride` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":284021,"byte_end":284150,"line_start":169,"line_end":169,"column_start":5,"column_end":134}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":284155,"byte_end":284164,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2822},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":286401,"byte_end":286429,"line_start":221,"line_end":221,"column_start":19,"column_end":47},"name":"from_slice_generic_unchecked","qualname":"<MatrixSliceMutMN>::from_slice_generic_unchecked","value":"pub unsafe fn from_slice_generic_unchecked(&'a mut [N], usize, R, C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates, without bound-checking, a mutable matrix slice from an array and with dimensions specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates, without bound-checking, a mutable matrix slice from an array and with dimensions specified by generic types instances.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":286012,"byte_end":286143,"line_start":216,"line_end":216,"column_start":5,"column_end":136}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":286148,"byte_end":286151,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ This method is unsafe because the input data array is not checked to contain enough elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":286156,"byte_end":286253,"line_start":218,"line_end":218,"column_start":5,"column_end":102}},{"value":"/ The generic types `R` and `C` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":286258,"byte_end":286368,"line_start":219,"line_end":219,"column_start":5,"column_end":115}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":286373,"byte_end":286382,"line_start":220,"line_end":220,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2823},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":286977,"byte_end":286995,"line_start":235,"line_end":235,"column_start":12,"column_end":30},"name":"from_slice_generic","qualname":"<MatrixSliceMutMN>::from_slice_generic","value":"pub fn from_slice_generic(&'a mut [N], R, C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":286637,"byte_end":286755,"line_start":230,"line_end":230,"column_start":5,"column_end":123}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":286760,"byte_end":286763,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Panics if the input data array dose not contain enough elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":286768,"byte_end":286836,"line_start":232,"line_end":232,"column_start":5,"column_end":73}},{"value":"/ The generic types `R` and `C` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":286841,"byte_end":286951,"line_start":233,"line_end":233,"column_start":5,"column_end":115}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":286956,"byte_end":286965,"line_start":234,"line_end":234,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3286},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":313033,"byte_end":313047,"line_start":25,"line_end":25,"column_start":12,"column_end":26},"name":"upper_triangle","qualname":"<Matrix<N, R, C, S>>::upper_triangle","value":"pub fn upper_triangle(&Self) -> MatrixMN<N, R, C> where\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the upper triangular part of this matrix (including the diagonal).\n","sig":null,"attributes":[{"value":"/ Extracts the upper triangular part of this matrix (including the diagonal).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":312928,"byte_end":313007,"line_start":23,"line_end":23,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":313012,"byte_end":313021,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3287},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":313356,"byte_end":313370,"line_start":37,"line_end":37,"column_start":12,"column_end":26},"name":"lower_triangle","qualname":"<Matrix<N, R, C, S>>::lower_triangle","value":"pub fn lower_triangle(&Self) -> MatrixMN<N, R, C> where\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the lower triangular part of this matrix (including the diagonal).\n","sig":null,"attributes":[{"value":"/ Extracts the lower triangular part of this matrix (including the diagonal).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":313251,"byte_end":313330,"line_start":35,"line_end":35,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":313335,"byte_end":313344,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3288},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":313711,"byte_end":313722,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"select_rows","qualname":"<Matrix<N, R, C, S>>::select_rows","value":"pub fn select_rows<'a, I>(&Self, I) -> MatrixMN<N, Dynamic, C> where\nI: IntoIterator<Item = &'a usize>, I::IntoIter: ExactSizeIterator + Clone,\nDefaultAllocator: Allocator<N, Dynamic, C>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix by extracting the given set of rows from `self`.\n","sig":null,"attributes":[{"value":"/ Creates a new matrix by extracting the given set of rows from `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":313574,"byte_end":313647,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":313652,"byte_end":313699,"line_start":48,"line_end":48,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3291},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":314979,"byte_end":314993,"line_start":84,"line_end":84,"column_start":12,"column_end":26},"name":"select_columns","qualname":"<Matrix<N, R, C, S>>::select_columns","value":"pub fn select_columns<'a, I>(&Self, I) -> MatrixMN<N, R, Dynamic> where\nI: IntoIterator<Item = &'a usize>, I::IntoIter: ExactSizeIterator,\nDefaultAllocator: Allocator<N, R, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix by extracting the given set of columns from `self`.\n","sig":null,"attributes":[{"value":"/ Creates a new matrix by extracting the given set of columns from `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":314839,"byte_end":314915,"line_start":82,"line_end":82,"column_start":5,"column_end":81}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":314920,"byte_end":314967,"line_start":83,"line_end":83,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3299},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":315775,"byte_end":315787,"line_start":107,"line_end":107,"column_start":12,"column_end":24},"name":"set_diagonal","qualname":"<Matrix<N, R, C, S>>::set_diagonal","value":"pub fn set_diagonal<R2: Dim, S2>(&mut Self, &Vector<N, R2, S2>) where\nR: DimMin<C>, S2: Storage<N, R2>, ShapeConstraint: DimEq<DimMinimum<R, C>, R2>","parent":null,"children":[],"decl_id":null,"docs":" Fills the diagonal of this matrix with the content of the given vector.\n","sig":null,"attributes":[{"value":"/ Fills the diagonal of this matrix with the content of the given vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":315674,"byte_end":315749,"line_start":105,"line_end":105,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":315754,"byte_end":315763,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3302},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":316605,"byte_end":316625,"line_start":128,"line_end":128,"column_start":12,"column_end":32},"name":"set_partial_diagonal","qualname":"<Matrix<N, R, C, S>>::set_partial_diagonal","value":"pub fn set_partial_diagonal<impl Iterator<Item = N>: Iterator<Item =\n                            N>>(&mut Self, impl Iterator<Item = N>)","parent":null,"children":[],"decl_id":null,"docs":" Fills the diagonal of this matrix with the content of the given iterator.","sig":null,"attributes":[{"value":"/ Fills the diagonal of this matrix with the content of the given iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":316286,"byte_end":316363,"line_start":122,"line_end":122,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":316368,"byte_end":316371,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This will fill as many diagonal elements as the iterator yields, up to the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":316376,"byte_end":316454,"line_start":124,"line_end":124,"column_start":5,"column_end":83}},{"value":"/ minimum of the number of rows and columns of `self`, and starting with the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":316459,"byte_end":316537,"line_start":125,"line_end":125,"column_start":5,"column_end":83}},{"value":"/ diagonal element at index (0, 0).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":316542,"byte_end":316579,"line_start":126,"line_end":126,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":316584,"byte_end":316593,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3304},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":317020,"byte_end":317027,"line_start":139,"line_end":139,"column_start":12,"column_end":19},"name":"set_row","qualname":"<Matrix<N, R, C, S>>::set_row","value":"pub fn set_row<C2: Dim, S2>(&mut Self, usize, &RowVector<N, C2, S2>) where\nS2: Storage<N, U1, C2>, ShapeConstraint: SameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" Fills the selected row of this matrix with the content of the given vector.\n","sig":null,"attributes":[{"value":"/ Fills the selected row of this matrix with the content of the given vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":316915,"byte_end":316994,"line_start":137,"line_end":137,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":316999,"byte_end":317008,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3307},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":317350,"byte_end":317360,"line_start":149,"line_end":149,"column_start":12,"column_end":22},"name":"set_column","qualname":"<Matrix<N, R, C, S>>::set_column","value":"pub fn set_column<R2: Dim, S2>(&mut Self, usize, &Vector<N, R2, S2>) where\nS2: Storage<N, R2, U1>, ShapeConstraint: SameNumberOfRows<R, R2>","parent":null,"children":[],"decl_id":null,"docs":" Fills the selected column of this matrix with the content of the given vector.\n","sig":null,"attributes":[{"value":"/ Fills the selected column of this matrix with the content of the given vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":317242,"byte_end":317324,"line_start":147,"line_end":147,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":317329,"byte_end":317338,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3315},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":317756,"byte_end":317760,"line_start":162,"line_end":162,"column_start":12,"column_end":16},"name":"fill","qualname":"<Matrix<N, R, C, S>>::fill","value":"pub fn fill(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets all the elements of this matrix to `val`.\n","sig":null,"attributes":[{"value":"/ Sets all the elements of this matrix to `val`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":317680,"byte_end":317730,"line_start":160,"line_end":160,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":317735,"byte_end":317744,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3316},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":317943,"byte_end":317961,"line_start":170,"line_end":170,"column_start":12,"column_end":30},"name":"fill_with_identity","qualname":"<Matrix<N, R, C, S>>::fill_with_identity","value":"pub fn fill_with_identity(&mut Self) where N: Zero + One","parent":null,"children":[],"decl_id":null,"docs":" Fills `self` with the identity matrix.\n","sig":null,"attributes":[{"value":"/ Fills `self` with the identity matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":317875,"byte_end":317917,"line_start":168,"line_end":168,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":317922,"byte_end":317931,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3317},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":318176,"byte_end":318189,"line_start":180,"line_end":180,"column_start":12,"column_end":25},"name":"fill_diagonal","qualname":"<Matrix<N, R, C, S>>::fill_diagonal","value":"pub fn fill_diagonal(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets all the diagonal elements of this matrix to `val`.\n","sig":null,"attributes":[{"value":"/ Sets all the diagonal elements of this matrix to `val`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":318091,"byte_end":318150,"line_start":178,"line_end":178,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":318155,"byte_end":318164,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3318},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":318498,"byte_end":318506,"line_start":191,"line_end":191,"column_start":12,"column_end":20},"name":"fill_row","qualname":"<Matrix<N, R, C, S>>::fill_row","value":"pub fn fill_row(&mut Self, usize, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets all the elements of the selected row to `val`.\n","sig":null,"attributes":[{"value":"/ Sets all the elements of the selected row to `val`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":318417,"byte_end":318472,"line_start":189,"line_end":189,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":318477,"byte_end":318486,"line_start":190,"line_end":190,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3319},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":318818,"byte_end":318829,"line_start":200,"line_end":200,"column_start":12,"column_end":23},"name":"fill_column","qualname":"<Matrix<N, R, C, S>>::fill_column","value":"pub fn fill_column(&mut Self, usize, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets all the elements of the selected column to `val`.\n","sig":null,"attributes":[{"value":"/ Sets all the elements of the selected column to `val`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":318734,"byte_end":318792,"line_start":198,"line_end":198,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":318797,"byte_end":318806,"line_start":199,"line_end":199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3320},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":319487,"byte_end":319506,"line_start":215,"line_end":215,"column_start":12,"column_end":31},"name":"fill_lower_triangle","qualname":"<Matrix<N, R, C, S>>::fill_lower_triangle","value":"pub fn fill_lower_triangle(&mut Self, N, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets all the elements of the lower-triangular part of this matrix to `val`.","sig":null,"attributes":[{"value":"/ Sets all the elements of the lower-triangular part of this matrix to `val`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":319057,"byte_end":319136,"line_start":207,"line_end":207,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":319141,"byte_end":319144,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ The parameter `shift` allows some subdiagonals to be left untouched:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":319149,"byte_end":319221,"line_start":209,"line_end":209,"column_start":5,"column_end":77}},{"value":"/ * If `shift = 0` then the diagonal is overwritten as well.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":319226,"byte_end":319288,"line_start":210,"line_end":210,"column_start":5,"column_end":67}},{"value":"/ * If `shift = 1` then the diagonal is left untouched.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":319293,"byte_end":319350,"line_start":211,"line_end":211,"column_start":5,"column_end":62}},{"value":"/ * If `shift > 1`, then the diagonal and the first `shift - 1` subdiagonals are left","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":319355,"byte_end":319442,"line_start":212,"line_end":212,"column_start":5,"column_end":92}},{"value":"/ untouched.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":319447,"byte_end":319461,"line_start":213,"line_end":213,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":319466,"byte_end":319475,"line_start":214,"line_end":214,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3321},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":320176,"byte_end":320195,"line_start":231,"line_end":231,"column_start":12,"column_end":31},"name":"fill_upper_triangle","qualname":"<Matrix<N, R, C, S>>::fill_upper_triangle","value":"pub fn fill_upper_triangle(&mut Self, N, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets all the elements of the lower-triangular part of this matrix to `val`.","sig":null,"attributes":[{"value":"/ Sets all the elements of the lower-triangular part of this matrix to `val`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":319742,"byte_end":319821,"line_start":223,"line_end":223,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":319826,"byte_end":319829,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The parameter `shift` allows some superdiagonals to be left untouched:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":319834,"byte_end":319908,"line_start":225,"line_end":225,"column_start":5,"column_end":79}},{"value":"/ * If `shift = 0` then the diagonal is overwritten as well.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":319913,"byte_end":319975,"line_start":226,"line_end":226,"column_start":5,"column_end":67}},{"value":"/ * If `shift = 1` then the diagonal is left untouched.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":319980,"byte_end":320037,"line_start":227,"line_end":227,"column_start":5,"column_end":62}},{"value":"/ * If `shift > 1`, then the diagonal and the first `shift - 1` superdiagonals are left","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":320042,"byte_end":320131,"line_start":228,"line_end":228,"column_start":5,"column_end":94}},{"value":"/ untouched.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":320136,"byte_end":320150,"line_start":229,"line_end":229,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":320155,"byte_end":320164,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3326},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":320814,"byte_end":320853,"line_start":246,"line_end":246,"column_start":12,"column_end":51},"name":"fill_lower_triangle_with_upper_triangle","qualname":"<Matrix<N, D, D, S>>::fill_lower_triangle_with_upper_triangle","value":"pub fn fill_lower_triangle_with_upper_triangle(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Copies the upper-triangle of this matrix to its lower-triangular part.","sig":null,"attributes":[{"value":"/ Copies the upper-triangle of this matrix to its lower-triangular part.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":320643,"byte_end":320717,"line_start":243,"line_end":243,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":320722,"byte_end":320725,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This makes the matrix symmetric. Panics if the matrix is not square.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":320730,"byte_end":320802,"line_start":245,"line_end":245,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3327},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":321380,"byte_end":321419,"line_start":262,"line_end":262,"column_start":12,"column_end":51},"name":"fill_upper_triangle_with_lower_triangle","qualname":"<Matrix<N, D, D, S>>::fill_upper_triangle_with_lower_triangle","value":"pub fn fill_upper_triangle_with_lower_triangle(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Copies the upper-triangle of this matrix to its upper-triangular part.","sig":null,"attributes":[{"value":"/ Copies the upper-triangle of this matrix to its upper-triangular part.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":321209,"byte_end":321283,"line_start":259,"line_end":259,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":321288,"byte_end":321291,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ This makes the matrix symmetric. Panics if the matrix is not square.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":321296,"byte_end":321368,"line_start":261,"line_end":261,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3333},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":321903,"byte_end":321912,"line_start":279,"line_end":279,"column_start":12,"column_end":21},"name":"swap_rows","qualname":"<Matrix<N, R, C, S>>::swap_rows","value":"pub fn swap_rows(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Swaps two rows in-place.\n","sig":null,"attributes":[{"value":"/ Swaps two rows in-place.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":321849,"byte_end":321877,"line_start":277,"line_end":277,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":321882,"byte_end":321891,"line_start":278,"line_end":278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3334},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":322317,"byte_end":322329,"line_start":293,"line_end":293,"column_start":12,"column_end":24},"name":"swap_columns","qualname":"<Matrix<N, R, C, S>>::swap_columns","value":"pub fn swap_columns(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Swaps two columns in-place.\n","sig":null,"attributes":[{"value":"/ Swaps two columns in-place.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":322260,"byte_end":322291,"line_start":291,"line_end":291,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":322296,"byte_end":322305,"line_start":292,"line_end":292,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3340},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":322972,"byte_end":322985,"line_start":320,"line_end":320,"column_start":12,"column_end":25},"name":"remove_column","qualname":"<Matrix<N, R, C, S>>::remove_column","value":"pub fn remove_column(Self, usize) -> MatrixMN<N, R, DimDiff<C, U1>> where\nC: DimSub<U1>, DefaultAllocator: Reallocator<N, R, C, R, DimDiff<C, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Removes the `i`-th column from this matrix.\n","sig":null,"attributes":[{"value":"/ Removes the `i`-th column from this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":322899,"byte_end":322946,"line_start":318,"line_end":318,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":322951,"byte_end":322960,"line_start":319,"line_end":319,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3341},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":323299,"byte_end":323316,"line_start":330,"line_end":330,"column_start":12,"column_end":29},"name":"remove_columns_at","qualname":"<Matrix<N, R, C, S>>::remove_columns_at","value":"pub fn remove_columns_at(Self, &[usize]) -> MatrixMN<N, R, Dynamic> where\nC: DimSub<Dynamic, Output = Dynamic>,\nDefaultAllocator: Reallocator<N, R, C, R, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Removes all columns in `indices`   \n","sig":null,"attributes":[{"value":"/ Removes all columns in `indices`   ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":323196,"byte_end":323235,"line_start":328,"line_end":328,"column_start":5,"column_end":44}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":323240,"byte_end":323287,"line_start":329,"line_end":329,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3342},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":324463,"byte_end":324477,"line_start":364,"line_end":364,"column_start":12,"column_end":26},"name":"remove_rows_at","qualname":"<Matrix<N, R, C, S>>::remove_rows_at","value":"pub fn remove_rows_at(Self, &[usize]) -> MatrixMN<N, Dynamic, C> where\nR: DimSub<Dynamic, Output = Dynamic>,\nDefaultAllocator: Reallocator<N, R, C, Dynamic, C>","parent":null,"children":[],"decl_id":null,"docs":" Removes all rows in `indices`   \n","sig":null,"attributes":[{"value":"/ Removes all rows in `indices`   ","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":324363,"byte_end":324399,"line_start":362,"line_end":362,"column_start":5,"column_end":41}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":324404,"byte_end":324451,"line_start":363,"line_end":363,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3343},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":325659,"byte_end":325679,"line_start":399,"line_end":399,"column_start":12,"column_end":32},"name":"remove_fixed_columns","qualname":"<Matrix<N, R, C, S>>::remove_fixed_columns","value":"pub fn remove_fixed_columns<D>(Self, usize) -> MatrixMN<N, R, DimDiff<C, D>>\nwhere D: DimName, C: DimSub<D>,\nDefaultAllocator: Reallocator<N, R, C, R, DimDiff<C, D>>","parent":null,"children":[],"decl_id":null,"docs":" Removes `D::dim()` consecutive columns from this matrix, starting with the `i`-th\n (included).\n","sig":null,"attributes":[{"value":"/ Removes `D::dim()` consecutive columns from this matrix, starting with the `i`-th","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":325528,"byte_end":325613,"line_start":396,"line_end":396,"column_start":5,"column_end":90}},{"value":"/ (included).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":325618,"byte_end":325633,"line_start":397,"line_end":397,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":325638,"byte_end":325647,"line_start":398,"line_end":398,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3345},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":326085,"byte_end":326099,"line_start":411,"line_end":411,"column_start":12,"column_end":26},"name":"remove_columns","qualname":"<Matrix<N, R, C, S>>::remove_columns","value":"pub fn remove_columns(Self, usize, usize) -> MatrixMN<N, R, Dynamic> where\nC: DimSub<Dynamic, Output = Dynamic>,\nDefaultAllocator: Reallocator<N, R, C, R, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Removes `n` consecutive columns from this matrix, starting with the `i`-th (included).\n","sig":null,"attributes":[{"value":"/ Removes `n` consecutive columns from this matrix, starting with the `i`-th (included).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":325917,"byte_end":326007,"line_start":408,"line_end":408,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":326012,"byte_end":326021,"line_start":409,"line_end":409,"column_start":5,"column_end":14}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":326026,"byte_end":326073,"line_start":410,"line_end":410,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3346},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":326611,"byte_end":326633,"line_start":424,"line_end":424,"column_start":12,"column_end":34},"name":"remove_columns_generic","qualname":"<Matrix<N, R, C, S>>::remove_columns_generic","value":"pub fn remove_columns_generic<D>(Self, usize, D)\n-> MatrixMN<N, R, DimDiff<C, D>> where D: Dim, C: DimSub<D>,\nDefaultAllocator: Reallocator<N, R, C, R, DimDiff<C, D>>","parent":null,"children":[],"decl_id":null,"docs":" Removes `nremove.value()` columns from this matrix, starting with the `i`-th (included).","sig":null,"attributes":[{"value":"/ Removes `nremove.value()` columns from this matrix, starting with the `i`-th (included).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":326342,"byte_end":326434,"line_start":419,"line_end":419,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":326439,"byte_end":326442,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ This is the generic implementation of `.remove_columns(...)` and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":326447,"byte_end":326515,"line_start":421,"line_end":421,"column_start":5,"column_end":73}},{"value":"/ `.remove_fixed_columns(...)` which have nicer API interfaces.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":326520,"byte_end":326585,"line_start":422,"line_end":422,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":326590,"byte_end":326599,"line_start":423,"line_end":423,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3348},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":327917,"byte_end":327927,"line_start":469,"line_end":469,"column_start":12,"column_end":22},"name":"remove_row","qualname":"<Matrix<N, R, C, S>>::remove_row","value":"pub fn remove_row(Self, usize) -> MatrixMN<N, DimDiff<R, U1>, C> where\nR: DimSub<U1>, DefaultAllocator: Reallocator<N, R, C, DimDiff<R, U1>, C>","parent":null,"children":[],"decl_id":null,"docs":" Removes the `i`-th row from this matrix.\n","sig":null,"attributes":[{"value":"/ Removes the `i`-th row from this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":327847,"byte_end":327891,"line_start":467,"line_end":467,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":327896,"byte_end":327905,"line_start":468,"line_end":468,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3349},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":328255,"byte_end":328272,"line_start":479,"line_end":479,"column_start":12,"column_end":29},"name":"remove_fixed_rows","qualname":"<Matrix<N, R, C, S>>::remove_fixed_rows","value":"pub fn remove_fixed_rows<D>(Self, usize) -> MatrixMN<N, DimDiff<R, D>, C>\nwhere D: DimName, R: DimSub<D>,\nDefaultAllocator: Reallocator<N, R, C, DimDiff<R, D>, C>","parent":null,"children":[],"decl_id":null,"docs":" Removes `D::dim()` consecutive rows from this matrix, starting with the `i`-th (included).\n","sig":null,"attributes":[{"value":"/ Removes `D::dim()` consecutive rows from this matrix, starting with the `i`-th (included).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":328135,"byte_end":328229,"line_start":477,"line_end":477,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":328234,"byte_end":328243,"line_start":478,"line_end":478,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3351},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":328672,"byte_end":328683,"line_start":491,"line_end":491,"column_start":12,"column_end":23},"name":"remove_rows","qualname":"<Matrix<N, R, C, S>>::remove_rows","value":"pub fn remove_rows(Self, usize, usize) -> MatrixMN<N, Dynamic, C> where\nR: DimSub<Dynamic, Output = Dynamic>,\nDefaultAllocator: Reallocator<N, R, C, Dynamic, C>","parent":null,"children":[],"decl_id":null,"docs":" Removes `n` consecutive rows from this matrix, starting with the `i`-th (included).\n","sig":null,"attributes":[{"value":"/ Removes `n` consecutive rows from this matrix, starting with the `i`-th (included).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":328507,"byte_end":328594,"line_start":488,"line_end":488,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":328599,"byte_end":328608,"line_start":489,"line_end":489,"column_start":5,"column_end":14}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":328613,"byte_end":328660,"line_start":490,"line_end":490,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3352},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":329183,"byte_end":329202,"line_start":504,"line_end":504,"column_start":12,"column_end":31},"name":"remove_rows_generic","qualname":"<Matrix<N, R, C, S>>::remove_rows_generic","value":"pub fn remove_rows_generic<D>(Self, usize, D) -> MatrixMN<N, DimDiff<R, D>, C>\nwhere D: Dim, R: DimSub<D>,\nDefaultAllocator: Reallocator<N, R, C, DimDiff<R, D>, C>","parent":null,"children":[],"decl_id":null,"docs":" Removes `nremove.value()` rows from this matrix, starting with the `i`-th (included).","sig":null,"attributes":[{"value":"/ Removes `nremove.value()` rows from this matrix, starting with the `i`-th (included).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":328923,"byte_end":329012,"line_start":499,"line_end":499,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":329017,"byte_end":329020,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ This is the generic implementation of `.remove_rows(...)` and `.remove_fixed_rows(...)`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":329025,"byte_end":329116,"line_start":501,"line_end":501,"column_start":5,"column_end":96}},{"value":"/ which have nicer API interfaces.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":329121,"byte_end":329157,"line_start":502,"line_end":502,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":329162,"byte_end":329171,"line_start":503,"line_end":503,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3359},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":330349,"byte_end":330362,"line_start":548,"line_end":548,"column_start":12,"column_end":25},"name":"insert_column","qualname":"<Matrix<N, R, C, S>>::insert_column","value":"pub fn insert_column(Self, usize, N) -> MatrixMN<N, R, DimSum<C, U1>> where\nC: DimAdd<U1>, DefaultAllocator: Reallocator<N, R, C, R, DimSum<C, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a column filled with `val` at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts a column filled with `val` at the `i-th` position.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":330261,"byte_end":330323,"line_start":546,"line_end":546,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":330328,"byte_end":330337,"line_start":547,"line_end":547,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3360},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":330691,"byte_end":330711,"line_start":558,"line_end":558,"column_start":12,"column_end":32},"name":"insert_fixed_columns","qualname":"<Matrix<N, R, C, S>>::insert_fixed_columns","value":"pub fn insert_fixed_columns<D>(Self, usize, N) -> MatrixMN<N, R, DimSum<C, D>>\nwhere D: DimName, C: DimAdd<D>,\nDefaultAllocator: Reallocator<N, R, C, R, DimSum<C, D>>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `D::dim()` columns filled with `val` starting at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts `D::dim()` columns filled with `val` starting at the `i-th` position.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":330584,"byte_end":330665,"line_start":556,"line_end":556,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":330670,"byte_end":330679,"line_start":557,"line_end":557,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3362},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":331208,"byte_end":331222,"line_start":572,"line_end":572,"column_start":12,"column_end":26},"name":"insert_columns","qualname":"<Matrix<N, R, C, S>>::insert_columns","value":"pub fn insert_columns(Self, usize, usize, N) -> MatrixMN<N, R, Dynamic> where\nC: DimAdd<Dynamic, Output = Dynamic>,\nDefaultAllocator: Reallocator<N, R, C, R, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `n` columns filled with `val` starting at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts `n` columns filled with `val` starting at the `i-th` position.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":331056,"byte_end":331130,"line_start":569,"line_end":569,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":331135,"byte_end":331144,"line_start":570,"line_end":570,"column_start":5,"column_end":14}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":331149,"byte_end":331196,"line_start":571,"line_end":571,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3363},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":331742,"byte_end":331778,"line_start":586,"line_end":586,"column_start":19,"column_end":55},"name":"insert_columns_generic_uninitialized","qualname":"<Matrix<N, R, C, S>>::insert_columns_generic_uninitialized","value":"pub unsafe fn insert_columns_generic_uninitialized<D>(Self, usize, D)\n-> MatrixMN<N, R, DimSum<C, D>> where D: Dim, C: DimAdd<D>,\nDefaultAllocator: Reallocator<N, R, C, R, DimSum<C, D>>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `ninsert.value()` columns starting at the `i-th` place of this matrix.","sig":null,"attributes":[{"value":"/ Inserts `ninsert.value()` columns starting at the `i-th` place of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":331566,"byte_end":331648,"line_start":582,"line_end":582,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":331653,"byte_end":331656,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ The added column values are not initialized.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":331661,"byte_end":331709,"line_start":584,"line_end":584,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":331714,"byte_end":331723,"line_start":585,"line_end":585,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3365},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":332817,"byte_end":332827,"line_start":626,"line_end":626,"column_start":12,"column_end":22},"name":"insert_row","qualname":"<Matrix<N, R, C, S>>::insert_row","value":"pub fn insert_row(Self, usize, N) -> MatrixMN<N, DimSum<R, U1>, C> where\nR: DimAdd<U1>, DefaultAllocator: Reallocator<N, R, C, DimSum<R, U1>, C>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a row filled with `val` at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts a row filled with `val` at the `i-th` position.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":332732,"byte_end":332791,"line_start":624,"line_end":624,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":332796,"byte_end":332805,"line_start":625,"line_end":625,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3366},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":333150,"byte_end":333167,"line_start":636,"line_end":636,"column_start":12,"column_end":29},"name":"insert_fixed_rows","qualname":"<Matrix<N, R, C, S>>::insert_fixed_rows","value":"pub fn insert_fixed_rows<D>(Self, usize, N) -> MatrixMN<N, DimSum<R, D>, C>\nwhere D: DimName, R: DimAdd<D>,\nDefaultAllocator: Reallocator<N, R, C, DimSum<R, D>, C>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `D::dim()` rows filled with `val` starting at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts `D::dim()` rows filled with `val` starting at the `i-th` position.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":333046,"byte_end":333124,"line_start":634,"line_end":634,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":333129,"byte_end":333138,"line_start":635,"line_end":635,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3368},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":333655,"byte_end":333666,"line_start":650,"line_end":650,"column_start":12,"column_end":23},"name":"insert_rows","qualname":"<Matrix<N, R, C, S>>::insert_rows","value":"pub fn insert_rows(Self, usize, usize, N) -> MatrixMN<N, Dynamic, C> where\nR: DimAdd<Dynamic, Output = Dynamic>,\nDefaultAllocator: Reallocator<N, R, C, Dynamic, C>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `n` rows filled with `val` starting at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts `n` rows filled with `val` starting at the `i-th` position.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":333506,"byte_end":333577,"line_start":647,"line_end":647,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":333582,"byte_end":333591,"line_start":648,"line_end":648,"column_start":5,"column_end":14}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":333596,"byte_end":333643,"line_start":649,"line_end":649,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3369},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":334303,"byte_end":334336,"line_start":666,"line_end":666,"column_start":19,"column_end":52},"name":"insert_rows_generic_uninitialized","qualname":"<Matrix<N, R, C, S>>::insert_rows_generic_uninitialized","value":"pub unsafe fn insert_rows_generic_uninitialized<D>(Self, usize, D)\n-> MatrixMN<N, DimSum<R, D>, C> where D: Dim, R: DimAdd<D>,\nDefaultAllocator: Reallocator<N, R, C, DimSum<R, D>, C>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `ninsert.value()` rows at the `i-th` place of this matrix.","sig":null,"attributes":[{"value":"/ Inserts `ninsert.value()` rows at the `i-th` place of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":334004,"byte_end":334074,"line_start":660,"line_end":660,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":334079,"byte_end":334082,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ The added rows values are not initialized.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":334087,"byte_end":334133,"line_start":662,"line_end":662,"column_start":5,"column_end":51}},{"value":"/ This is the generic implementation of `.insert_rows(...)` and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":334138,"byte_end":334203,"line_start":663,"line_end":663,"column_start":5,"column_end":70}},{"value":"/ `.insert_fixed_rows(...)` which have nicer API interfaces.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":334208,"byte_end":334270,"line_start":664,"line_end":664,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":334275,"byte_end":334284,"line_start":665,"line_end":665,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3376},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":335586,"byte_end":335592,"line_start":707,"line_end":707,"column_start":12,"column_end":18},"name":"resize","qualname":"<Matrix<N, R, C, S>>::resize","value":"pub fn resize(Self, usize, usize, N) -> DMatrix<N> where\nDefaultAllocator: Reallocator<N, R, C, Dynamic, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Resizes this matrix so that it contains `new_nrows` rows and `new_ncols` columns.","sig":null,"attributes":[{"value":"/ Resizes this matrix so that it contains `new_nrows` rows and `new_ncols` columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":335237,"byte_end":335322,"line_start":702,"line_end":702,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":335327,"byte_end":335330,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":335335,"byte_end":335427,"line_start":704,"line_end":704,"column_start":5,"column_end":97}},{"value":"/ rows and/or columns than `self`, then the extra rows or columns are filled with `val`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":335432,"byte_end":335522,"line_start":705,"line_end":705,"column_start":5,"column_end":95}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":335527,"byte_end":335574,"line_start":706,"line_end":706,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3377},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":336191,"byte_end":336208,"line_start":719,"line_end":719,"column_start":12,"column_end":29},"name":"resize_vertically","qualname":"<Matrix<N, R, C, S>>::resize_vertically","value":"pub fn resize_vertically(Self, usize, N) -> MatrixMN<N, Dynamic, C> where\nDefaultAllocator: Reallocator<N, R, C, Dynamic, C>","parent":null,"children":[],"decl_id":null,"docs":" Resizes this matrix vertically, i.e., so that it contains `new_nrows` rows while keeping the same number of columns.","sig":null,"attributes":[{"value":"/ Resizes this matrix vertically, i.e., so that it contains `new_nrows` rows while keeping the same number of columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":335833,"byte_end":335953,"line_start":714,"line_end":714,"column_start":5,"column_end":125}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":335958,"byte_end":335961,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":335966,"byte_end":336058,"line_start":716,"line_end":716,"column_start":5,"column_end":97}},{"value":"/ rows than `self`, then the extra rows are filled with `val`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":336063,"byte_end":336127,"line_start":717,"line_end":717,"column_start":5,"column_end":69}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":336132,"byte_end":336179,"line_start":718,"line_end":718,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3378},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":336833,"byte_end":336852,"line_start":732,"line_end":732,"column_start":12,"column_end":31},"name":"resize_horizontally","qualname":"<Matrix<N, R, C, S>>::resize_horizontally","value":"pub fn resize_horizontally(Self, usize, N) -> MatrixMN<N, R, Dynamic> where\nDefaultAllocator: Reallocator<N, R, C, R, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Resizes this matrix horizontally, i.e., so that it contains `new_ncolumns` columns while keeping the same number of columns.","sig":null,"attributes":[{"value":"/ Resizes this matrix horizontally, i.e., so that it contains `new_ncolumns` columns while keeping the same number of columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":336461,"byte_end":336589,"line_start":727,"line_end":727,"column_start":5,"column_end":133}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":336594,"byte_end":336597,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":336602,"byte_end":336694,"line_start":729,"line_end":729,"column_start":5,"column_end":97}},{"value":"/ columns than `self`, then the extra columns are filled with `val`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":336699,"byte_end":336769,"line_start":730,"line_end":730,"column_start":5,"column_end":75}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":336774,"byte_end":336821,"line_start":731,"line_end":731,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3379},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":337406,"byte_end":337418,"line_start":744,"line_end":744,"column_start":12,"column_end":24},"name":"fixed_resize","qualname":"<Matrix<N, R, C, S>>::fixed_resize","value":"pub fn fixed_resize<R2: DimName, C2: DimName>(Self, N) -> MatrixMN<N, R2, C2>\nwhere DefaultAllocator: Reallocator<N, R, C, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Resizes this matrix so that it contains `R2::value()` rows and `C2::value()` columns.","sig":null,"attributes":[{"value":"/ Resizes this matrix so that it contains `R2::value()` rows and `C2::value()` columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":337105,"byte_end":337194,"line_start":740,"line_end":740,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":337199,"byte_end":337202,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":337207,"byte_end":337299,"line_start":742,"line_end":742,"column_start":5,"column_end":97}},{"value":"/ rows and/or columns than `self`, then the extra rows or columns are filled with `val`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":337304,"byte_end":337394,"line_start":743,"line_end":743,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":3382},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":337920,"byte_end":337934,"line_start":756,"line_end":756,"column_start":12,"column_end":26},"name":"resize_generic","qualname":"<Matrix<N, R, C, S>>::resize_generic","value":"pub fn resize_generic<R2: Dim, C2: Dim>(Self, R2, C2, N)\n-> MatrixMN<N, R2, C2> where DefaultAllocator: Reallocator<N, R, C, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Resizes `self` such that it has dimensions `new_nrows × new_ncols`.","sig":null,"attributes":[{"value":"/ Resizes `self` such that it has dimensions `new_nrows × new_ncols`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":337622,"byte_end":337694,"line_start":751,"line_end":751,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":337699,"byte_end":337702,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":337707,"byte_end":337799,"line_start":753,"line_end":753,"column_start":5,"column_end":97}},{"value":"/ rows and/or columns than `self`, then the extra rows or columns are filled with `val`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":337804,"byte_end":337894,"line_start":754,"line_end":754,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":337899,"byte_end":337908,"line_start":755,"line_end":755,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3385},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":341703,"byte_end":341718,"line_start":871,"line_end":871,"column_start":12,"column_end":27},"name":"reshape_generic","qualname":"<Matrix<N, R, C, S>>::reshape_generic","value":"pub fn reshape_generic<R2, C2>(Self, R2, C2) -> Matrix<N, R2, C2, S::Output>\nwhere R2: Dim, C2: Dim, S: ReshapableStorage<N, R, C, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Reshapes `self` such that it has dimensions `new_nrows × new_ncols`.","sig":null,"attributes":[{"value":"/ Reshapes `self` such that it has dimensions `new_nrows × new_ncols`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":339891,"byte_end":339964,"line_start":818,"line_end":818,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":339969,"byte_end":339972,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ This will reinterpret `self` as if it is a matrix with `new_nrows` rows and `new_ncols`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":339977,"byte_end":340068,"line_start":820,"line_end":820,"column_start":5,"column_end":96}},{"value":"/ columns. The arrangements of the component in the output matrix are the same as what","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":340073,"byte_end":340161,"line_start":821,"line_end":821,"column_start":5,"column_end":93}},{"value":"/ would be obtained by `Matrix::from_slice_generic(self.as_slice(), new_nrows, new_ncols)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":340166,"byte_end":340259,"line_start":822,"line_end":822,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":340264,"byte_end":340267,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ If `self` is a dynamically-sized matrix, then its components are neither copied nor moved.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":340272,"byte_end":340366,"line_start":824,"line_end":824,"column_start":5,"column_end":99}},{"value":"/ If `self` is staticyll-sized, then a copy may happen in some situations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":340371,"byte_end":340447,"line_start":825,"line_end":825,"column_start":5,"column_end":81}},{"value":"/ This function will panic if the given dimensions are such that the number of elements of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":340452,"byte_end":340544,"line_start":826,"line_end":826,"column_start":5,"column_end":97}},{"value":"/ the input matrix are not equal to the number of elements of the output matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":340549,"byte_end":340631,"line_start":827,"line_end":827,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":340636,"byte_end":340639,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":340644,"byte_end":340658,"line_start":829,"line_end":829,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":340663,"byte_end":340666,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":340671,"byte_end":340678,"line_start":831,"line_end":831,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix3x2, Matrix2x3, DMatrix, U2, U3, Dynamic};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":340683,"byte_end":340752,"line_start":832,"line_end":832,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":340757,"byte_end":340760,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ let m1 = Matrix2x3::new(","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":340765,"byte_end":340793,"line_start":834,"line_end":834,"column_start":5,"column_end":33}},{"value":"/     1.1, 1.2, 1.3,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":340798,"byte_end":340820,"line_start":835,"line_end":835,"column_start":5,"column_end":27}},{"value":"/     2.1, 2.2, 2.3","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":340825,"byte_end":340846,"line_start":836,"line_end":836,"column_start":5,"column_end":26}},{"value":"/ );","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":340851,"byte_end":340857,"line_start":837,"line_end":837,"column_start":5,"column_end":11}},{"value":"/ let m2 = Matrix3x2::new(","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":340862,"byte_end":340890,"line_start":838,"line_end":838,"column_start":5,"column_end":33}},{"value":"/     1.1, 2.2,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":340895,"byte_end":340912,"line_start":839,"line_end":839,"column_start":5,"column_end":22}},{"value":"/     2.1, 1.3,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":340917,"byte_end":340934,"line_start":840,"line_end":840,"column_start":5,"column_end":22}},{"value":"/     1.2, 2.3","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":340939,"byte_end":340955,"line_start":841,"line_end":841,"column_start":5,"column_end":21}},{"value":"/ );","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":340960,"byte_end":340966,"line_start":842,"line_end":842,"column_start":5,"column_end":11}},{"value":"/ let reshaped = m1.reshape_generic(U3, U2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":340971,"byte_end":341017,"line_start":843,"line_end":843,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(reshaped, m2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":341022,"byte_end":341051,"line_start":844,"line_end":844,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":341056,"byte_end":341059,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ let dm1 = DMatrix::from_row_slice(","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":341064,"byte_end":341102,"line_start":846,"line_end":846,"column_start":5,"column_end":43}},{"value":"/     4,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":341107,"byte_end":341117,"line_start":847,"line_end":847,"column_start":5,"column_end":15}},{"value":"/     3,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":341122,"byte_end":341132,"line_start":848,"line_end":848,"column_start":5,"column_end":15}},{"value":"/     &[","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":341137,"byte_end":341147,"line_start":849,"line_end":849,"column_start":5,"column_end":15}},{"value":"/         1.0, 0.0, 0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":341152,"byte_end":341178,"line_start":850,"line_end":850,"column_start":5,"column_end":31}},{"value":"/         0.0, 0.0, 1.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":341183,"byte_end":341209,"line_start":851,"line_end":851,"column_start":5,"column_end":31}},{"value":"/         0.0, 0.0, 0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":341214,"byte_end":341240,"line_start":852,"line_end":852,"column_start":5,"column_end":31}},{"value":"/         0.0, 1.0, 0.0","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":341245,"byte_end":341270,"line_start":853,"line_end":853,"column_start":5,"column_end":30}},{"value":"/     ],","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":341275,"byte_end":341285,"line_start":854,"line_end":854,"column_start":5,"column_end":15}},{"value":"/ );","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":341290,"byte_end":341296,"line_start":855,"line_end":855,"column_start":5,"column_end":11}},{"value":"/ let dm2 = DMatrix::from_row_slice(","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":341301,"byte_end":341339,"line_start":856,"line_end":856,"column_start":5,"column_end":43}},{"value":"/     6,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":341344,"byte_end":341354,"line_start":857,"line_end":857,"column_start":5,"column_end":15}},{"value":"/     2,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":341359,"byte_end":341369,"line_start":858,"line_end":858,"column_start":5,"column_end":15}},{"value":"/     &[","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":341374,"byte_end":341384,"line_start":859,"line_end":859,"column_start":5,"column_end":15}},{"value":"/         1.0, 0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":341389,"byte_end":341410,"line_start":860,"line_end":860,"column_start":5,"column_end":26}},{"value":"/         0.0, 1.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":341415,"byte_end":341436,"line_start":861,"line_end":861,"column_start":5,"column_end":26}},{"value":"/         0.0, 0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":341441,"byte_end":341462,"line_start":862,"line_end":862,"column_start":5,"column_end":26}},{"value":"/         0.0, 1.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":341467,"byte_end":341488,"line_start":863,"line_end":863,"column_start":5,"column_end":26}},{"value":"/         0.0, 0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":341493,"byte_end":341514,"line_start":864,"line_end":864,"column_start":5,"column_end":26}},{"value":"/         0.0, 0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":341519,"byte_end":341540,"line_start":865,"line_end":865,"column_start":5,"column_end":26}},{"value":"/     ],","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":341545,"byte_end":341555,"line_start":866,"line_end":866,"column_start":5,"column_end":15}},{"value":"/ );","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":341560,"byte_end":341566,"line_start":867,"line_end":867,"column_start":5,"column_end":11}},{"value":"/ let reshaped = dm1.reshape_generic(Dynamic::new(6), Dynamic::new(2));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":341571,"byte_end":341644,"line_start":868,"line_end":868,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(reshaped, dm2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":341649,"byte_end":341679,"line_start":869,"line_end":869,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":341684,"byte_end":341691,"line_start":870,"line_end":870,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3390},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":342462,"byte_end":342472,"line_start":895,"line_end":895,"column_start":12,"column_end":22},"name":"resize_mut","qualname":"<DMatrix<N>>::resize_mut","value":"pub fn resize_mut(&mut Self, usize, usize, N) where\nDefaultAllocator: Reallocator<N, Dynamic, Dynamic, Dynamic, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Resizes this matrix in-place.","sig":null,"attributes":[{"value":"/ Resizes this matrix in-place.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":342137,"byte_end":342170,"line_start":889,"line_end":889,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":342175,"byte_end":342178,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":342183,"byte_end":342275,"line_start":891,"line_end":891,"column_start":5,"column_end":97}},{"value":"/ rows and/or columns than `self`, then the extra rows or columns are filled with `val`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":342280,"byte_end":342370,"line_start":892,"line_end":892,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":342375,"byte_end":342378,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ Defined only for owned fully-dynamic matrices, i.e., `DMatrix`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":342383,"byte_end":342450,"line_start":894,"line_end":894,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3394},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":343401,"byte_end":343422,"line_start":918,"line_end":918,"column_start":12,"column_end":33},"name":"resize_vertically_mut","qualname":"<MatrixMN<N, Dynamic, C>>::resize_vertically_mut","value":"pub fn resize_vertically_mut(&mut Self, usize, N) where\nDefaultAllocator: Reallocator<N, Dynamic, C, Dynamic, C>","parent":null,"children":[],"decl_id":null,"docs":" Changes the number of rows of this matrix in-place.","sig":null,"attributes":[{"value":"/ Changes the number of rows of this matrix in-place.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":343004,"byte_end":343059,"line_start":911,"line_end":911,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":343064,"byte_end":343067,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":343072,"byte_end":343164,"line_start":913,"line_end":913,"column_start":5,"column_end":97}},{"value":"/ rows than `self`, then the extra rows are filled with `val`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":343169,"byte_end":343233,"line_start":914,"line_end":914,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":343238,"byte_end":343241,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ Defined only for owned matrices with a dynamic number of rows (for example, `DVector`).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":343246,"byte_end":343337,"line_start":916,"line_end":916,"column_start":5,"column_end":96}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":343342,"byte_end":343389,"line_start":917,"line_end":917,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3398},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":344384,"byte_end":344407,"line_start":942,"line_end":942,"column_start":12,"column_end":35},"name":"resize_horizontally_mut","qualname":"<MatrixMN<N, R, Dynamic>>::resize_horizontally_mut","value":"pub fn resize_horizontally_mut(&mut Self, usize, N) where\nDefaultAllocator: Reallocator<N, R, Dynamic, R, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Changes the number of column of this matrix in-place.","sig":null,"attributes":[{"value":"/ Changes the number of column of this matrix in-place.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":343976,"byte_end":344033,"line_start":935,"line_end":935,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":344038,"byte_end":344041,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":344046,"byte_end":344138,"line_start":937,"line_end":937,"column_start":5,"column_end":97}},{"value":"/ columns than `self`, then the extra columns are filled with `val`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":344143,"byte_end":344213,"line_start":938,"line_end":938,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":344218,"byte_end":344221,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ Defined only for owned matrices with a dynamic number of columns (for example, `DVector`).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":344226,"byte_end":344320,"line_start":940,"line_end":940,"column_start":5,"column_end":99}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":344325,"byte_end":344372,"line_start":941,"line_end":941,"column_start":5,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":3422},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"indexing","qualname":"::base::indexing","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","parent":null,"children":[{"krate":0,"index":3423},{"krate":0,"index":3424},{"krate":0,"index":3427},{"krate":0,"index":3430},{"krate":0,"index":3431},{"krate":0,"index":3434},{"krate":0,"index":3437},{"krate":0,"index":3440},{"krate":0,"index":3443},{"krate":0,"index":3446},{"krate":0,"index":3449},{"krate":0,"index":3452},{"krate":0,"index":3455},{"krate":0,"index":3458},{"krate":0,"index":3459},{"krate":0,"index":3461},{"krate":0,"index":3464},{"krate":0,"index":3470},{"krate":0,"index":3476},{"krate":0,"index":3482},{"krate":0,"index":3488},{"krate":0,"index":3495},{"krate":0,"index":3501},{"krate":0,"index":3507},{"krate":0,"index":3513},{"krate":0,"index":3519},{"krate":0,"index":3530},{"krate":0,"index":3540},{"krate":0,"index":3563},{"krate":0,"index":3572},{"krate":0,"index":3580},{"krate":0,"index":3589},{"krate":0,"index":19826},{"krate":0,"index":19838},{"krate":0,"index":19849},{"krate":0,"index":19861},{"krate":0,"index":19872},{"krate":0,"index":19884},{"krate":0,"index":19895},{"krate":0,"index":19907},{"krate":0,"index":19918},{"krate":0,"index":19930},{"krate":0,"index":19941},{"krate":0,"index":19953},{"krate":0,"index":19964},{"krate":0,"index":19977},{"krate":0,"index":19989},{"krate":0,"index":20001},{"krate":0,"index":20012},{"krate":0,"index":20024},{"krate":0,"index":20035},{"krate":0,"index":20047},{"krate":0,"index":20058},{"krate":0,"index":20070},{"krate":0,"index":20081},{"krate":0,"index":20093},{"krate":0,"index":20104},{"krate":0,"index":20116},{"krate":0,"index":20127},{"krate":0,"index":20139},{"krate":0,"index":20150},{"krate":0,"index":20163},{"krate":0,"index":20175},{"krate":0,"index":20187},{"krate":0,"index":20198},{"krate":0,"index":20210},{"krate":0,"index":20221},{"krate":0,"index":20233},{"krate":0,"index":20244},{"krate":0,"index":20256},{"krate":0,"index":20267},{"krate":0,"index":20279},{"krate":0,"index":20290},{"krate":0,"index":20302},{"krate":0,"index":20313},{"krate":0,"index":20325},{"krate":0,"index":20336},{"krate":0,"index":20349},{"krate":0,"index":20361},{"krate":0,"index":20373},{"krate":0,"index":20384},{"krate":0,"index":20396},{"krate":0,"index":20407},{"krate":0,"index":20419},{"krate":0,"index":20430},{"krate":0,"index":20442},{"krate":0,"index":20453},{"krate":0,"index":20465},{"krate":0,"index":20476},{"krate":0,"index":20488},{"krate":0,"index":20499},{"krate":0,"index":20511},{"krate":0,"index":20522},{"krate":0,"index":20535},{"krate":0,"index":20547},{"krate":0,"index":20559},{"krate":0,"index":20570},{"krate":0,"index":20582},{"krate":0,"index":20593},{"krate":0,"index":20605},{"krate":0,"index":20616},{"krate":0,"index":20628},{"krate":0,"index":20639},{"krate":0,"index":20651},{"krate":0,"index":20662},{"krate":0,"index":20674},{"krate":0,"index":20685},{"krate":0,"index":20697},{"krate":0,"index":20708},{"krate":0,"index":20721},{"krate":0,"index":20733},{"krate":0,"index":20745},{"krate":0,"index":20756},{"krate":0,"index":20768},{"krate":0,"index":20779},{"krate":0,"index":20791},{"krate":0,"index":20802},{"krate":0,"index":20814},{"krate":0,"index":20825},{"krate":0,"index":20837},{"krate":0,"index":20848},{"krate":0,"index":20860},{"krate":0,"index":20871},{"krate":0,"index":20883},{"krate":0,"index":20894},{"krate":0,"index":20907},{"krate":0,"index":20919},{"krate":0,"index":20931},{"krate":0,"index":20942},{"krate":0,"index":20954},{"krate":0,"index":20965},{"krate":0,"index":20977},{"krate":0,"index":20988},{"krate":0,"index":21000},{"krate":0,"index":21011},{"krate":0,"index":21023},{"krate":0,"index":21034},{"krate":0,"index":21046},{"krate":0,"index":21057},{"krate":0,"index":21069},{"krate":0,"index":21080},{"krate":0,"index":21093},{"krate":0,"index":21105},{"krate":0,"index":21118},{"krate":0,"index":21130},{"krate":0,"index":21143},{"krate":0,"index":21155},{"krate":0,"index":21168},{"krate":0,"index":21180},{"krate":0,"index":21193},{"krate":0,"index":21205},{"krate":0,"index":21218},{"krate":0,"index":21230},{"krate":0,"index":21243},{"krate":0,"index":21255},{"krate":0,"index":21268},{"krate":0,"index":21280},{"krate":0,"index":21294}],"decl_id":null,"docs":" Indexing\n","sig":null,"attributes":[{"value":"/ Indexing","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":351030,"byte_end":351042,"line_start":1,"line_end":1,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":3466},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":351341,"byte_end":351347,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"Length","qualname":"::base::indexing::DimRange::Length","value":"type Length: Dim;","parent":{"krate":0,"index":3464},"children":[],"decl_id":null,"docs":" The number of elements indexed by this range.\n","sig":null,"attributes":[{"value":"/ The number of elements indexed by this range.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":351282,"byte_end":351331,"line_start":12,"line_end":12,"column_start":5,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":3519},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":358990,"byte_end":359001,"line_start":326,"line_end":326,"column_start":11,"column_end":22},"name":"MatrixIndex","qualname":"::base::indexing::MatrixIndex","value":"MatrixIndex<'a, N: Scalar, R: Dim, C: Dim, S: Storage<N, R, C>>: Sized","parent":null,"children":[{"krate":0,"index":3525},{"krate":0,"index":3526},{"krate":0,"index":3527},{"krate":0,"index":3528},{"krate":0,"index":3529}],"decl_id":null,"docs":" A helper trait used for indexing operations.\n","sig":null,"attributes":[{"value":"/ A helper trait used for indexing operations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":358931,"byte_end":358979,"line_start":325,"line_end":325,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":3525},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":359117,"byte_end":359123,"line_start":328,"line_end":328,"column_start":10,"column_end":16},"name":"Output","qualname":"::base::indexing::MatrixIndex::Output","value":"type Output: 'a;","parent":{"krate":0,"index":3519},"children":[],"decl_id":null,"docs":" The output type returned by methods.\n","sig":null,"attributes":[{"value":"/ The output type returned by methods.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":359067,"byte_end":359107,"line_start":327,"line_end":327,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3526},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":359226,"byte_end":359238,"line_start":332,"line_end":332,"column_start":8,"column_end":20},"name":"contained_by","qualname":"::base::indexing::MatrixIndex::contained_by","value":"pub fn contained_by(&Self, &Matrix<N, R, C, S>) -> bool","parent":{"krate":0,"index":3519},"children":[],"decl_id":null,"docs":" Produces true if the given matrix is contained by this index.\n","sig":null,"attributes":[{"value":"/ Produces true if the given matrix is contained by this index.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":359134,"byte_end":359199,"line_start":330,"line_end":330,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3527},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":359437,"byte_end":359440,"line_start":338,"line_end":338,"column_start":8,"column_end":11},"name":"get","qualname":"::base::indexing::MatrixIndex::get","value":"pub fn get(Self, &'a Matrix<N, R, C, S>) -> Option<Self::Output>","parent":{"krate":0,"index":3519},"children":[],"decl_id":null,"docs":" Produces a shared view of the data at this location if in bounds,\n or `None`, otherwise.\n","sig":null,"attributes":[{"value":"/ Produces a shared view of the data at this location if in bounds,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":359289,"byte_end":359358,"line_start":334,"line_end":334,"column_start":5,"column_end":74}},{"value":"/ or `None`, otherwise.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":359363,"byte_end":359388,"line_start":335,"line_end":335,"column_start":5,"column_end":30}},{"value":"inline(always)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":359412,"byte_end":359429,"line_start":337,"line_end":337,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3528},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":359794,"byte_end":359807,"line_start":349,"line_end":349,"column_start":15,"column_end":28},"name":"get_unchecked","qualname":"::base::indexing::MatrixIndex::get_unchecked","value":"pub unsafe fn get_unchecked(Self, &'a Matrix<N, R, C, S>) -> Self::Output","parent":{"krate":0,"index":3519},"children":[],"decl_id":null,"docs":" Produces a shared view of the data at this location if in bounds\n without any bounds checking.\n","sig":null,"attributes":[{"value":"/ Produces a shared view of the data at this location if in bounds","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":359655,"byte_end":359723,"line_start":346,"line_end":346,"column_start":5,"column_end":73}},{"value":"/ without any bounds checking.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":359728,"byte_end":359760,"line_start":347,"line_end":347,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3529},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":360009,"byte_end":360014,"line_start":355,"line_end":355,"column_start":8,"column_end":13},"name":"index","qualname":"::base::indexing::MatrixIndex::index","value":"pub fn index(Self, &'a Matrix<N, R, C, S>) -> Self::Output","parent":{"krate":0,"index":3519},"children":[],"decl_id":null,"docs":" Produces a shared view to the data at this location, or panics\n if out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a shared view to the data at this location, or panics","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":359868,"byte_end":359934,"line_start":351,"line_end":351,"column_start":5,"column_end":71}},{"value":"/ if out of bounds.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":359939,"byte_end":359960,"line_start":352,"line_end":352,"column_start":5,"column_end":26}},{"value":"inline(always)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":359984,"byte_end":360001,"line_start":354,"line_end":354,"column_start":5,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":3530},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":360195,"byte_end":360209,"line_start":361,"line_end":361,"column_start":11,"column_end":25},"name":"MatrixIndexMut","qualname":"::base::indexing::MatrixIndexMut","value":"MatrixIndexMut<'a, N: Scalar, R: Dim, C: Dim, S: StorageMut<N, R, C>>: MatrixIndex","parent":null,"children":[{"krate":0,"index":3536},{"krate":0,"index":3537},{"krate":0,"index":3538},{"krate":0,"index":3539}],"decl_id":null,"docs":" A helper trait used for indexing operations.\n","sig":null,"attributes":[{"value":"/ A helper trait used for indexing operations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":360136,"byte_end":360184,"line_start":360,"line_end":360,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":3536},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":360354,"byte_end":360363,"line_start":365,"line_end":365,"column_start":10,"column_end":19},"name":"OutputMut","qualname":"::base::indexing::MatrixIndexMut::OutputMut","value":"type OutputMut: 'a;","parent":{"krate":0,"index":3530},"children":[],"decl_id":null,"docs":" The output type returned by methods.\n","sig":null,"attributes":[{"value":"/ The output type returned by methods.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":360304,"byte_end":360344,"line_start":364,"line_end":364,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3537},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":360513,"byte_end":360530,"line_start":370,"line_end":370,"column_start":15,"column_end":32},"name":"get_unchecked_mut","qualname":"::base::indexing::MatrixIndexMut::get_unchecked_mut","value":"pub unsafe fn get_unchecked_mut(Self, &'a mut Matrix<N, R, C, S>)\n-> Self::OutputMut","parent":{"krate":0,"index":3530},"children":[],"decl_id":null,"docs":" Produces a mutable view of the data at this location, without\n performing any bounds checking.\n","sig":null,"attributes":[{"value":"/ Produces a mutable view of the data at this location, without","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":360374,"byte_end":360439,"line_start":367,"line_end":367,"column_start":5,"column_end":70}},{"value":"/ performing any bounds checking.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":360444,"byte_end":360479,"line_start":368,"line_end":368,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3538},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":360726,"byte_end":360733,"line_start":376,"line_end":376,"column_start":8,"column_end":15},"name":"get_mut","qualname":"::base::indexing::MatrixIndexMut::get_mut","value":"pub fn get_mut(Self, &'a mut Matrix<N, R, C, S>) -> Option<Self::OutputMut>","parent":{"krate":0,"index":3530},"children":[],"decl_id":null,"docs":" Produces a mutable view of the data at this location, if in\n bounds.\n","sig":null,"attributes":[{"value":"/ Produces a mutable view of the data at this location, if in","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":360598,"byte_end":360661,"line_start":372,"line_end":372,"column_start":5,"column_end":68}},{"value":"/ bounds.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":360666,"byte_end":360677,"line_start":373,"line_end":373,"column_start":5,"column_end":16}},{"value":"inline(always)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":360701,"byte_end":360718,"line_start":375,"line_end":375,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3539},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":361101,"byte_end":361110,"line_start":388,"line_end":388,"column_start":8,"column_end":17},"name":"index_mut","qualname":"::base::indexing::MatrixIndexMut::index_mut","value":"pub fn index_mut(Self, &'a mut Matrix<N, R, C, S>) -> Self::OutputMut","parent":{"krate":0,"index":3530},"children":[],"decl_id":null,"docs":" Produces a mutable view of the data at this location, or panics\n if out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a mutable view of the data at this location, or panics","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":360959,"byte_end":361026,"line_start":384,"line_end":384,"column_start":5,"column_end":72}},{"value":"/ if out of bounds.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":361031,"byte_end":361052,"line_start":385,"line_end":385,"column_start":5,"column_end":26}},{"value":"inline(always)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":361076,"byte_end":361093,"line_start":387,"line_end":387,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3545},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":364071,"byte_end":364074,"line_start":496,"line_end":496,"column_start":12,"column_end":15},"name":"get","qualname":"<Matrix<N, R, C, S>>::get","value":"pub fn get<'a, I>(&'a Self, I) -> Option<I::Output> where I: MatrixIndex","parent":null,"children":[],"decl_id":null,"docs":" Produces a view of the data at the given index, or\n `None` if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a view of the data at the given index, or","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":363945,"byte_end":363999,"line_start":493,"line_end":493,"column_start":5,"column_end":59}},{"value":"/ `None` if the index is out of bounds.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":364004,"byte_end":364045,"line_start":494,"line_end":494,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":364050,"byte_end":364059,"line_start":495,"line_end":495,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3548},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":364348,"byte_end":364355,"line_start":506,"line_end":506,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Matrix<N, R, C, S>>::get_mut","value":"pub fn get_mut<'a, I>(&'a mut Self, I) -> Option<I::OutputMut> where\nS: StorageMut<N, R, C>, I: MatrixIndexMut","parent":null,"children":[],"decl_id":null,"docs":" Produces a mutable view of the data at the given index, or\n `None` if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a mutable view of the data at the given index, or","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":364214,"byte_end":364276,"line_start":503,"line_end":503,"column_start":5,"column_end":67}},{"value":"/ `None` if the index is out of bounds.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":364281,"byte_end":364322,"line_start":504,"line_end":504,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":364327,"byte_end":364336,"line_start":505,"line_end":505,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3551},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":364667,"byte_end":364672,"line_start":517,"line_end":517,"column_start":12,"column_end":17},"name":"index","qualname":"<Matrix<N, R, C, S>>::index","value":"pub fn index<'a, I>(&'a Self, I) -> I::Output where I: MatrixIndex","parent":null,"children":[],"decl_id":null,"docs":" Produces a view of the data at the given index, or\n panics if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a view of the data at the given index, or","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":364541,"byte_end":364595,"line_start":514,"line_end":514,"column_start":5,"column_end":59}},{"value":"/ panics if the index is out of bounds.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":364600,"byte_end":364641,"line_start":515,"line_end":515,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":364646,"byte_end":364655,"line_start":516,"line_end":516,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3554},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":364940,"byte_end":364949,"line_start":527,"line_end":527,"column_start":12,"column_end":21},"name":"index_mut","qualname":"<Matrix<N, R, C, S>>::index_mut","value":"pub fn index_mut<'a, I>(&'a mut Self, I) -> I::OutputMut where\nS: StorageMut<N, R, C>, I: MatrixIndexMut","parent":null,"children":[],"decl_id":null,"docs":" Produces a mutable view of the data at the given index, or\n panics if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a mutable view of the data at the given index, or","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":364806,"byte_end":364868,"line_start":524,"line_end":524,"column_start":5,"column_end":67}},{"value":"/ panics if the index is out of bounds.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":364873,"byte_end":364914,"line_start":525,"line_end":525,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":364919,"byte_end":364928,"line_start":526,"line_end":526,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3557},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":365256,"byte_end":365269,"line_start":538,"line_end":538,"column_start":19,"column_end":32},"name":"get_unchecked","qualname":"<Matrix<N, R, C, S>>::get_unchecked","value":"pub unsafe fn get_unchecked<'a, I>(&'a Self, I) -> I::Output where\nI: MatrixIndex","parent":null,"children":[],"decl_id":null,"docs":" Produces a view of the data at the given index, without doing\n any bounds checking.\n","sig":null,"attributes":[{"value":"/ Produces a view of the data at the given index, without doing","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":365129,"byte_end":365194,"line_start":535,"line_end":535,"column_start":5,"column_end":70}},{"value":"/ any bounds checking.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":365199,"byte_end":365223,"line_start":536,"line_end":536,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":365228,"byte_end":365237,"line_start":537,"line_end":537,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3560},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":365545,"byte_end":365562,"line_start":548,"line_end":548,"column_start":19,"column_end":36},"name":"get_unchecked_mut","qualname":"<Matrix<N, R, C, S>>::get_unchecked_mut","value":"pub unsafe fn get_unchecked_mut<'a, I>(&'a mut Self, I) -> I::OutputMut where\nS: StorageMut<N, R, C>, I: MatrixIndexMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable view of the data at the given index, without doing\n any bounds checking.\n","sig":null,"attributes":[{"value":"/ Returns a mutable view of the data at the given index, without doing","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":365411,"byte_end":365483,"line_start":545,"line_end":545,"column_start":5,"column_end":77}},{"value":"/ any bounds checking.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":365488,"byte_end":365512,"line_start":546,"line_end":546,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":365517,"byte_end":365526,"line_start":547,"line_end":547,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":3763},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":373987,"byte_end":373999,"line_start":35,"line_end":35,"column_start":10,"column_end":22},"name":"SquareMatrix","qualname":"::base::matrix::SquareMatrix","value":"Matrix<N, D, D, S>","parent":null,"children":[],"decl_id":null,"docs":" A square matrix.\n","sig":null,"attributes":[{"value":"/ A square matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":373957,"byte_end":373977,"line_start":34,"line_end":34,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":3767},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":374084,"byte_end":374090,"line_start":38,"line_end":38,"column_start":10,"column_end":16},"name":"Vector","qualname":"::base::matrix::Vector","value":"Matrix<N, D, U1, S>","parent":null,"children":[],"decl_id":null,"docs":" A matrix with one column and `D` rows.\n","sig":null,"attributes":[{"value":"/ A matrix with one column and `D` rows.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":374032,"byte_end":374074,"line_start":37,"line_end":37,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":3771},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":374177,"byte_end":374186,"line_start":41,"line_end":41,"column_start":10,"column_end":19},"name":"RowVector","qualname":"::base::matrix::RowVector","value":"Matrix<N, U1, D, S>","parent":null,"children":[],"decl_id":null,"docs":" A matrix with one row and `D` columns .\n","sig":null,"attributes":[{"value":"/ A matrix with one row and `D` columns .","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":374124,"byte_end":374167,"line_start":40,"line_end":40,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":3775},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":374273,"byte_end":374282,"line_start":44,"line_end":44,"column_start":10,"column_end":19},"name":"MatrixSum","qualname":"::base::matrix::MatrixSum","value":"Matrix<N, SameShapeR<R1, R2>, SameShapeC<C1, C2>,\n       SameShapeStorage<N, R1, C1, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" The type of the result of a matrix sum.\n","sig":null,"attributes":[{"value":"/ The type of the result of a matrix sum.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":374220,"byte_end":374263,"line_start":43,"line_end":43,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":3781},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":374450,"byte_end":374459,"line_start":48,"line_end":48,"column_start":10,"column_end":19},"name":"VectorSum","qualname":"::base::matrix::VectorSum","value":"Matrix<N, SameShapeR<R1, R2>, U1, SameShapeStorage<N, R1, U1, R2, U1>>","parent":null,"children":[],"decl_id":null,"docs":" The type of the result of a matrix sum.\n","sig":null,"attributes":[{"value":"/ The type of the result of a matrix sum.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":374397,"byte_end":374440,"line_start":47,"line_end":47,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":3785},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":374613,"byte_end":374624,"line_start":52,"line_end":52,"column_start":10,"column_end":21},"name":"MatrixCross","qualname":"::base::matrix::MatrixCross","value":"Matrix<N, SameShapeR<R1, R2>, SameShapeC<C1, C2>,\n       SameShapeStorage<N, R1, C1, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" The type of the result of a matrix cross product.\n","sig":null,"attributes":[{"value":"/ The type of the result of a matrix cross product.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":374550,"byte_end":374603,"line_start":51,"line_end":51,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":21307},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":382750,"byte_end":382756,"line_start":153,"line_end":153,"column_start":12,"column_end":18},"name":"Matrix","qualname":"::base::matrix::Matrix","value":"Matrix { data }","parent":null,"children":[{"krate":0,"index":21312},{"krate":0,"index":21313}],"decl_id":null,"docs":" The most generic column-major matrix (and vector) type.","sig":null,"attributes":[{"value":"/ The most generic column-major matrix (and vector) type.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":374739,"byte_end":374798,"line_start":55,"line_end":55,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":374799,"byte_end":374802,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Methods summary","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":374803,"byte_end":374824,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/ Because `Matrix` is the most generic types used as a common representation of all matrices and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":374825,"byte_end":374923,"line_start":58,"line_end":58,"column_start":1,"column_end":99}},{"value":"/ vectors of **nalgebra** this documentation page contains every single matrix/vector-related","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":374924,"byte_end":375019,"line_start":59,"line_end":59,"column_start":1,"column_end":96}},{"value":"/ method. In order to make browsing this page simpler, the next subsections contain direct links","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":375020,"byte_end":375118,"line_start":60,"line_end":60,"column_start":1,"column_end":99}},{"value":"/ to groups of methods related to a specific topic.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":375119,"byte_end":375172,"line_start":61,"line_end":61,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":375173,"byte_end":375176,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ #### Vector and matrix construction","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":375177,"byte_end":375216,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ - [Constructors of statically-sized vectors or statically-sized matrices](#constructors-of-statically-sized-vectors-or-statically-sized-matrices)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":375217,"byte_end":375366,"line_start":64,"line_end":64,"column_start":1,"column_end":150}},{"value":"/   (`Vector3`, `Matrix3x6`…)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":375367,"byte_end":375400,"line_start":65,"line_end":65,"column_start":1,"column_end":32}},{"value":"/ - [Constructors of fully dynamic matrices](#constructors-of-fully-dynamic-matrices) (`DMatrix`)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":375401,"byte_end":375500,"line_start":66,"line_end":66,"column_start":1,"column_end":100}},{"value":"/ - [Constructors of dynamic vectors and matrices with a dynamic number of rows](#constructors-of-dynamic-vectors-and-matrices-with-a-dynamic-number-of-rows)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":375501,"byte_end":375660,"line_start":67,"line_end":67,"column_start":1,"column_end":160}},{"value":"/   (`DVector`, `MatrixXx3`…)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":375661,"byte_end":375694,"line_start":68,"line_end":68,"column_start":1,"column_end":32}},{"value":"/ - [Constructors of matrices with a dynamic number of columns](#constructors-of-matrices-with-a-dynamic-number-of-columns)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":375695,"byte_end":375820,"line_start":69,"line_end":69,"column_start":1,"column_end":126}},{"value":"/   (`Matrix2xX`…)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":375821,"byte_end":375843,"line_start":70,"line_end":70,"column_start":1,"column_end":21}},{"value":"/ - [Generic constructors](#generic-constructors)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":375844,"byte_end":375895,"line_start":71,"line_end":71,"column_start":1,"column_end":52}},{"value":"/   (For code generic wrt. the vectors or matrices dimensions.)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":375896,"byte_end":375961,"line_start":72,"line_end":72,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":375962,"byte_end":375965,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ #### Computer graphics utilities for transformations","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":375966,"byte_end":376022,"line_start":74,"line_end":74,"column_start":1,"column_end":57}},{"value":"/ - [2D transformations as a Matrix3 <span style=\"float:right;\">`new_rotation`…</span>](#2d-transformations-as-a-matrix3)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":376023,"byte_end":376148,"line_start":75,"line_end":75,"column_start":1,"column_end":124}},{"value":"/ - [3D transformations as a Matrix4 <span style=\"float:right;\">`new_rotation`, `new_perspective`, `look_at_rh`…</span>](#3d-transformations-as-a-matrix4)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":376149,"byte_end":376307,"line_start":76,"line_end":76,"column_start":1,"column_end":157}},{"value":"/ - [Translation and scaling in any dimension <span style=\"float:right;\">`new_scaling`, `new_translation`…</span>](#translation-and-scaling-in-any-dimension)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":376308,"byte_end":376469,"line_start":77,"line_end":77,"column_start":1,"column_end":160}},{"value":"/ - [Append/prepend translation and scaling <span style=\"float:right;\">`append_scaling`, `prepend_translation_mut`…</span>](#appendprepend-translation-and-scaling)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":376470,"byte_end":376637,"line_start":78,"line_end":78,"column_start":1,"column_end":166}},{"value":"/ - [Transformation of vectors and points <span style=\"float:right;\">`transform_vector`, `transform_point`…</span>](#transformation-of-vectors-and-points)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":376638,"byte_end":376796,"line_start":79,"line_end":79,"column_start":1,"column_end":157}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":376797,"byte_end":376800,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #### Common math operations","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":376801,"byte_end":376832,"line_start":81,"line_end":81,"column_start":1,"column_end":32}},{"value":"/ - [Componentwise operations <span style=\"float:right;\">`component_mul`, `component_div`, `inf`…</span>](#componentwise-operations)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":376833,"byte_end":376969,"line_start":82,"line_end":82,"column_start":1,"column_end":135}},{"value":"/ - [Special multiplications <span style=\"float:right;\">`tr_mul`, `ad_mul`, `kronecker`…</span>](#special-multiplications)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":376970,"byte_end":377096,"line_start":83,"line_end":83,"column_start":1,"column_end":125}},{"value":"/ - [Dot/scalar product <span style=\"float:right;\">`dot`, `dotc`, `tr_dot`…</span>](#dotscalar-product)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":377097,"byte_end":377204,"line_start":84,"line_end":84,"column_start":1,"column_end":106}},{"value":"/ - [Cross product <span style=\"float:right;\">`cross`, `perp`…</span>](#cross-product)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":377205,"byte_end":377295,"line_start":85,"line_end":85,"column_start":1,"column_end":89}},{"value":"/ - [Magnitude and norms <span style=\"float:right;\">`norm`, `normalize`, `metric_distance`…</span>](#magnitude-and-norms)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":377296,"byte_end":377421,"line_start":86,"line_end":86,"column_start":1,"column_end":124}},{"value":"/ - [In-place normalization <span style=\"float:right;\">`normalize_mut`, `try_normalize_mut`…</span>](#in-place-normalization)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":377422,"byte_end":377551,"line_start":87,"line_end":87,"column_start":1,"column_end":128}},{"value":"/ - [Interpolation <span style=\"float:right;\">`lerp`, `slerp`…</span>](#interpolation)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":377552,"byte_end":377642,"line_start":88,"line_end":88,"column_start":1,"column_end":89}},{"value":"/ - [BLAS functions <span style=\"float:right;\">`gemv`, `gemm`, `syger`…</span>](#blas-functions)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":377643,"byte_end":377743,"line_start":89,"line_end":89,"column_start":1,"column_end":99}},{"value":"/ - [Swizzling <span style=\"float:right;\">`xx`, `yxz`…</span>](#swizzling)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":377744,"byte_end":377822,"line_start":90,"line_end":90,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":377823,"byte_end":377826,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ #### Statistics","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":377827,"byte_end":377846,"line_start":92,"line_end":92,"column_start":1,"column_end":20}},{"value":"/ - [Common operations <span style=\"float:right;\">`row_sum`, `column_mean`, `variance`…</span>](#common-statistics-operations)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":377847,"byte_end":377977,"line_start":93,"line_end":93,"column_start":1,"column_end":129}},{"value":"/ - [Find the min and max components <span style=\"float:right;\">`min`, `max`, `amin`, `amax`, `camin`, `cmax`…</span>](#find-the-min-and-max-components)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":377978,"byte_end":378134,"line_start":94,"line_end":94,"column_start":1,"column_end":155}},{"value":"/ - [Find the min and max components (vector-specific methods) <span style=\"float:right;\">`argmin`, `argmax`, `icamin`, `icamax`…</span>](#find-the-min-and-max-components-vector-specific-methods)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":378135,"byte_end":378334,"line_start":95,"line_end":95,"column_start":1,"column_end":198}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":378335,"byte_end":378338,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ #### Iteration, map, and fold","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":378339,"byte_end":378372,"line_start":97,"line_end":97,"column_start":1,"column_end":34}},{"value":"/ - [Iteration on components, rows, and columns <span style=\"float:right;\">`iter`, `column_iter`…</span>](#iteration-on-components-rows-and-columns)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":378373,"byte_end":378525,"line_start":98,"line_end":98,"column_start":1,"column_end":151}},{"value":"/ - [Elementwise mapping and folding <span style=\"float:right;\">`map`, `fold`, `zip_map`…</span>](#elementwise-mapping-and-folding)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":378526,"byte_end":378661,"line_start":99,"line_end":99,"column_start":1,"column_end":134}},{"value":"/ - [Folding or columns and rows <span style=\"float:right;\">`compress_rows`, `compress_columns`…</span>](#folding-on-columns-and-rows)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":378662,"byte_end":378800,"line_start":100,"line_end":100,"column_start":1,"column_end":137}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":378801,"byte_end":378804,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ #### Vector and matrix slicing","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":378805,"byte_end":378839,"line_start":102,"line_end":102,"column_start":1,"column_end":35}},{"value":"/ - [Creating matrix slices from `&[T]` <span style=\"float:right;\">`from_slice`, `from_slice_with_strides`…</span>](#creating-matrix-slices-from-t)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":378840,"byte_end":378991,"line_start":103,"line_end":103,"column_start":1,"column_end":150}},{"value":"/ - [Creating mutable matrix slices from `&mut [T]` <span style=\"float:right;\">`from_slice_mut`, `from_slice_with_strides_mut`…</span>](#creating-mutable-matrix-slices-from-mut-t)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":378992,"byte_end":379175,"line_start":104,"line_end":104,"column_start":1,"column_end":182}},{"value":"/ - [Slicing based on index and length <span style=\"float:right;\">`row`, `columns`, `slice`…</span>](#slicing-based-on-index-and-length)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":379176,"byte_end":379316,"line_start":105,"line_end":105,"column_start":1,"column_end":139}},{"value":"/ - [Mutable slicing based on index and length <span style=\"float:right;\">`row_mut`, `columns_mut`, `slice_mut`…</span>](#mutable-slicing-based-on-index-and-length)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":379317,"byte_end":379485,"line_start":106,"line_end":106,"column_start":1,"column_end":167}},{"value":"/ - [Slicing based on ranges <span style=\"float:right;\">`rows_range`, `columns_range`…</span>](#slicing-based-on-ranges)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":379486,"byte_end":379610,"line_start":107,"line_end":107,"column_start":1,"column_end":123}},{"value":"/ - [Mutable slicing based on ranges <span style=\"float:right;\">`rows_range_mut`, `columns_range_mut`…</span>](#mutable-slicing-based-on-ranges)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":379611,"byte_end":379759,"line_start":108,"line_end":108,"column_start":1,"column_end":147}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":379760,"byte_end":379763,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ #### In-place modification of a single matrix or vector","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":379764,"byte_end":379823,"line_start":110,"line_end":110,"column_start":1,"column_end":60}},{"value":"/ - [In-place filling <span style=\"float:right;\">`fill`, `fill_diagonal`, `fill_with_identity`…</span>](#in-place-filling)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":379824,"byte_end":379950,"line_start":111,"line_end":111,"column_start":1,"column_end":125}},{"value":"/ - [In-place swapping <span style=\"float:right;\">`swap`, `swap_columns`…</span>](#in-place-swapping)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":379951,"byte_end":380056,"line_start":112,"line_end":112,"column_start":1,"column_end":104}},{"value":"/ - [Set rows, columns, and diagonal <span style=\"float:right;\">`set_column`, `set_diagonal`…</span>](#set-rows-columns-and-diagonal)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":380057,"byte_end":380194,"line_start":113,"line_end":113,"column_start":1,"column_end":136}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":380195,"byte_end":380198,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ #### Vector and matrix size modification","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":380199,"byte_end":380243,"line_start":115,"line_end":115,"column_start":1,"column_end":45}},{"value":"/ - [Rows and columns insertion <span style=\"float:right;\">`insert_row`, `insert_column`…</span>](#rows-and-columns-insertion)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":380244,"byte_end":380374,"line_start":116,"line_end":116,"column_start":1,"column_end":129}},{"value":"/ - [Rows and columns removal <span style=\"float:right;\">`remove_row`, `remove column`…</span>](#rows-and-columns-removal)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":380375,"byte_end":380501,"line_start":117,"line_end":117,"column_start":1,"column_end":125}},{"value":"/ - [Rows and columns extraction <span style=\"float:right;\">`select_rows`, `select_columns`…</span>](#rows-and-columns-extraction)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":380502,"byte_end":380636,"line_start":118,"line_end":118,"column_start":1,"column_end":133}},{"value":"/ - [Resizing and reshaping <span style=\"float:right;\">`resize`, `reshape_generic`…</span>](#resizing-and-reshaping)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":380637,"byte_end":380757,"line_start":119,"line_end":119,"column_start":1,"column_end":119}},{"value":"/ - [In-place resizing <span style=\"float:right;\">`resize_mut`, `resize_vertically_mut`…</span>](#in-place-resizing)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":380758,"byte_end":380878,"line_start":120,"line_end":120,"column_start":1,"column_end":119}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":380879,"byte_end":380882,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ #### Matrix decomposition","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":380883,"byte_end":380912,"line_start":122,"line_end":122,"column_start":1,"column_end":30}},{"value":"/ - [Rectangular matrix decomposition <span style=\"float:right;\">`qr`, `lu`, `svd`…</span>](#rectangular-matrix-decomposition)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":380913,"byte_end":381043,"line_start":123,"line_end":123,"column_start":1,"column_end":129}},{"value":"/ - [Square matrix decomposition <span style=\"float:right;\">`cholesky`, `symmetric_eigen`…</span>](#square-matrix-decomposition)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":381044,"byte_end":381176,"line_start":124,"line_end":124,"column_start":1,"column_end":131}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":381177,"byte_end":381180,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ #### Vector basis computation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":381181,"byte_end":381214,"line_start":126,"line_end":126,"column_start":1,"column_end":34}},{"value":"/ - [Basis and orthogonalization <span style=\"float:right;\">`orthonormal_subspace_basis`, `orthonormalize`…</span>](#basis-and-orthogonalization)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":381215,"byte_end":381364,"line_start":127,"line_end":127,"column_start":1,"column_end":148}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":381365,"byte_end":381368,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ # Type parameters","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":381369,"byte_end":381390,"line_start":129,"line_end":129,"column_start":1,"column_end":22}},{"value":"/ The generic `Matrix` type has four type parameters:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":381391,"byte_end":381446,"line_start":130,"line_end":130,"column_start":1,"column_end":56}},{"value":"/ - `N`: for the matrix components scalar type.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":381447,"byte_end":381496,"line_start":131,"line_end":131,"column_start":1,"column_end":50}},{"value":"/ - `R`: for the matrix number of rows.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":381497,"byte_end":381538,"line_start":132,"line_end":132,"column_start":1,"column_end":42}},{"value":"/ - `C`: for the matrix number of columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":381539,"byte_end":381583,"line_start":133,"line_end":133,"column_start":1,"column_end":45}},{"value":"/ - `S`: for the matrix data storage, i.e., the buffer that actually contains the matrix","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":381584,"byte_end":381674,"line_start":134,"line_end":134,"column_start":1,"column_end":91}},{"value":"/ components.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":381675,"byte_end":381690,"line_start":135,"line_end":135,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":381691,"byte_end":381694,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ The matrix dimensions parameters `R` and `C` can either be:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":381695,"byte_end":381758,"line_start":137,"line_end":137,"column_start":1,"column_end":64}},{"value":"/ - type-level unsigned integer constants (e.g. `U1`, `U124`) from the `nalgebra::` root module.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":381759,"byte_end":381857,"line_start":138,"line_end":138,"column_start":1,"column_end":99}},{"value":"/ All numbers from 0 to 127 are defined that way.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":381858,"byte_end":381910,"line_start":139,"line_end":139,"column_start":1,"column_end":52}},{"value":"/ - type-level unsigned integer constants (e.g. `U1024`, `U10000`) from the `typenum::` crate.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":381911,"byte_end":382007,"line_start":140,"line_end":140,"column_start":1,"column_end":97}},{"value":"/ Using those, you will not get error messages as nice as for numbers smaller than 128 defined on","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":382008,"byte_end":382107,"line_start":141,"line_end":141,"column_start":1,"column_end":100}},{"value":"/ the `nalgebra::` module.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":382108,"byte_end":382136,"line_start":142,"line_end":142,"column_start":1,"column_end":29}},{"value":"/ - the special value `Dynamic` from the `nalgebra::` root module. This indicates that the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":382137,"byte_end":382229,"line_start":143,"line_end":143,"column_start":1,"column_end":93}},{"value":"/ specified dimension is not known at compile-time. Note that this will generally imply that the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":382230,"byte_end":382328,"line_start":144,"line_end":144,"column_start":1,"column_end":99}},{"value":"/ matrix data storage `S` performs a dynamic allocation and contains extra metadata for the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":382329,"byte_end":382422,"line_start":145,"line_end":145,"column_start":1,"column_end":94}},{"value":"/ matrix shape.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":382423,"byte_end":382440,"line_start":146,"line_end":146,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":382441,"byte_end":382444,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ Note that mixing `Dynamic` with type-level unsigned integers is allowed. Actually, a","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":382445,"byte_end":382533,"line_start":148,"line_end":148,"column_start":1,"column_end":89}},{"value":"/ dynamically-sized column vector should be represented as a `Matrix<N, Dynamic, U1, S>` (given","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":382534,"byte_end":382631,"line_start":149,"line_end":149,"column_start":1,"column_end":98}},{"value":"/ some concrete types for `N` and a compatible data storage type `S`).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":382632,"byte_end":382704,"line_start":150,"line_end":150,"column_start":1,"column_end":73}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":382705,"byte_end":382715,"line_start":151,"line_end":151,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":21312},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":384144,"byte_end":384148,"line_start":177,"line_end":177,"column_start":9,"column_end":13},"name":"data","qualname":"::base::matrix::Matrix::data","value":"S","parent":{"krate":0,"index":21307},"children":[],"decl_id":null,"docs":" The data storage that contains all the matrix components. Disappointed?","sig":null,"attributes":[{"value":"/ The data storage that contains all the matrix components. Disappointed?","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":382793,"byte_end":382868,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":382873,"byte_end":382876,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Well, if you came here to see how you can access the matrix components,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":382881,"byte_end":382956,"line_start":156,"line_end":156,"column_start":5,"column_end":80}},{"value":"/ you may be in luck: you can access the individual components of all vectors with compile-time","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":382961,"byte_end":383058,"line_start":157,"line_end":157,"column_start":5,"column_end":102}},{"value":"/ dimensions <= 6 using field notation like this:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":383063,"byte_end":383114,"line_start":158,"line_end":158,"column_start":5,"column_end":56}},{"value":"/ `vec.x`, `vec.y`, `vec.z`, `vec.w`, `vec.a`, `vec.b`. Reference and assignation work too:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":383119,"byte_end":383212,"line_start":159,"line_end":159,"column_start":5,"column_end":98}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":383217,"byte_end":383224,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":383229,"byte_end":383257,"line_start":161,"line_end":161,"column_start":5,"column_end":33}},{"value":"/ let mut vec = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":383262,"byte_end":383308,"line_start":162,"line_end":162,"column_start":5,"column_end":51}},{"value":"/ vec.x = 10.0;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":383313,"byte_end":383330,"line_start":163,"line_end":163,"column_start":5,"column_end":22}},{"value":"/ vec.y += 30.0;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":383335,"byte_end":383353,"line_start":164,"line_end":164,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(vec.x, 10.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":383358,"byte_end":383386,"line_start":165,"line_end":165,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec.y + 100.0, 132.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":383391,"byte_end":383428,"line_start":166,"line_end":166,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":383433,"byte_end":383440,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"/ Similarly, for matrices with compile-time dimensions <= 6, you can use field notation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":383445,"byte_end":383534,"line_start":168,"line_end":168,"column_start":5,"column_end":94}},{"value":"/ like this: `mat.m11`, `mat.m42`, etc. The first digit identifies the row to address","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":383539,"byte_end":383626,"line_start":169,"line_end":169,"column_start":5,"column_end":92}},{"value":"/ and the second digit identifies the column to address. So `mat.m13` identifies the component","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":383631,"byte_end":383727,"line_start":170,"line_end":170,"column_start":5,"column_end":101}},{"value":"/ at the first row and third column (note that the count of rows and columns start at 1 instead","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":383732,"byte_end":383829,"line_start":171,"line_end":171,"column_start":5,"column_end":102}},{"value":"/ of 0 here. This is so we match the mathematical notation).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":383834,"byte_end":383896,"line_start":172,"line_end":172,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":383901,"byte_end":383904,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ For all matrices and vectors, independently from their size, individual components can","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":383909,"byte_end":383999,"line_start":174,"line_end":174,"column_start":5,"column_end":95}},{"value":"/ be accessed and modified using indexing: `vec[20]`, `mat[(20, 19)]`. Here the indexing","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":384004,"byte_end":384094,"line_start":175,"line_end":175,"column_start":5,"column_end":95}},{"value":"/ starts at 0 as you would expect.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":384099,"byte_end":384135,"line_start":176,"line_end":176,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3808},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":386735,"byte_end":386765,"line_start":286,"line_end":286,"column_start":19,"column_end":49},"name":"from_data_statically_unchecked","qualname":"<Matrix<N, R, C, S>>::from_data_statically_unchecked","value":"pub unsafe fn from_data_statically_unchecked(S) -> Matrix<N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix with the given data without statically checking that the matrix\n dimension matches the storage dimension.\n","sig":null,"attributes":[{"value":"/ Creates a new matrix with the given data without statically checking that the matrix","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":386565,"byte_end":386653,"line_start":283,"line_end":283,"column_start":5,"column_end":93}},{"value":"/ dimension matches the storage dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":386658,"byte_end":386702,"line_start":284,"line_end":284,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":386707,"byte_end":386716,"line_start":285,"line_end":285,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3814},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":387038,"byte_end":387047,"line_start":297,"line_end":297,"column_start":12,"column_end":21},"name":"from_data","qualname":"<Matrix<N, R, C, S>>::from_data","value":"pub fn from_data(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix with the given data.\n","sig":null,"attributes":[{"value":"/ Creates a new matrix with the given data.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":386967,"byte_end":387012,"line_start":295,"line_end":295,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":387017,"byte_end":387026,"line_start":296,"line_end":296,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3815},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":387422,"byte_end":387427,"line_start":310,"line_end":310,"column_start":12,"column_end":17},"name":"shape","qualname":"<Matrix<N, R, C, S>>::shape","value":"pub fn shape(&Self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" The shape of this matrix returned as the tuple (number of rows, number of columns).","sig":null,"attributes":[{"value":"/ The shape of this matrix returned as the tuple (number of rows, number of columns).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":387140,"byte_end":387227,"line_start":301,"line_end":301,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":387232,"byte_end":387235,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":387240,"byte_end":387255,"line_start":303,"line_end":303,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":387260,"byte_end":387263,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":387268,"byte_end":387275,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix3x4;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":387280,"byte_end":387310,"line_start":306,"line_end":306,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix3x4::<f32>::zeros();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":387315,"byte_end":387355,"line_start":307,"line_end":307,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(mat.shape(), (3, 4));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":387360,"byte_end":387396,"line_start":308,"line_end":308,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":387401,"byte_end":387410,"line_start":309,"line_end":309,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3816},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":387781,"byte_end":387786,"line_start":324,"line_end":324,"column_start":12,"column_end":17},"name":"nrows","qualname":"<Matrix<N, R, C, S>>::nrows","value":"pub fn nrows(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of rows of this matrix.","sig":null,"attributes":[{"value":"/ The number of rows of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":387553,"byte_end":387591,"line_start":315,"line_end":315,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":387596,"byte_end":387599,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":387604,"byte_end":387619,"line_start":317,"line_end":317,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":387624,"byte_end":387627,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":387632,"byte_end":387639,"line_start":319,"line_end":319,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix3x4;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":387644,"byte_end":387674,"line_start":320,"line_end":320,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix3x4::<f32>::zeros();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":387679,"byte_end":387719,"line_start":321,"line_end":321,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(mat.nrows(), 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":387724,"byte_end":387755,"line_start":322,"line_end":322,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":387760,"byte_end":387769,"line_start":323,"line_end":323,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3817},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":388070,"byte_end":388075,"line_start":337,"line_end":337,"column_start":12,"column_end":17},"name":"ncols","qualname":"<Matrix<N, R, C, S>>::ncols","value":"pub fn ncols(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of columns of this matrix.","sig":null,"attributes":[{"value":"/ The number of columns of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":387839,"byte_end":387880,"line_start":328,"line_end":328,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":387885,"byte_end":387888,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":387893,"byte_end":387908,"line_start":330,"line_end":330,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":387913,"byte_end":387916,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":387921,"byte_end":387928,"line_start":332,"line_end":332,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix3x4;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":387933,"byte_end":387963,"line_start":333,"line_end":333,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix3x4::<f32>::zeros();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":387968,"byte_end":388008,"line_start":334,"line_end":334,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(mat.ncols(), 4);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":388013,"byte_end":388044,"line_start":335,"line_end":335,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":388049,"byte_end":388058,"line_start":336,"line_end":336,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3818},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":388558,"byte_end":388565,"line_start":352,"line_end":352,"column_start":12,"column_end":19},"name":"strides","qualname":"<Matrix<N, R, C, S>>::strides","value":"pub fn strides(&Self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" The strides (row stride, column stride) of this matrix.","sig":null,"attributes":[{"value":"/ The strides (row stride, column stride) of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":388128,"byte_end":388187,"line_start":341,"line_end":341,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":388192,"byte_end":388195,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":388200,"byte_end":388215,"line_start":343,"line_end":343,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":388220,"byte_end":388223,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":388228,"byte_end":388235,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::DMatrix;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":388240,"byte_end":388268,"line_start":346,"line_end":346,"column_start":5,"column_end":33}},{"value":"/ let mat = DMatrix::<f32>::zeros(10, 10);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":388273,"byte_end":388317,"line_start":347,"line_end":347,"column_start":5,"column_end":49}},{"value":"/ let slice = mat.slice_with_steps((0, 0), (5, 3), (1, 2));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":388322,"byte_end":388383,"line_start":348,"line_end":348,"column_start":5,"column_end":66}},{"value":"/ // The column strides is the number of steps (here 2) multiplied by the corresponding dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":388388,"byte_end":388488,"line_start":349,"line_end":349,"column_start":5,"column_end":105}},{"value":"/ assert_eq!(mat.strides(), (1, 10));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":388493,"byte_end":388532,"line_start":350,"line_end":350,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":388537,"byte_end":388546,"line_start":351,"line_end":351,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3819},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":389085,"byte_end":389107,"line_start":370,"line_end":370,"column_start":12,"column_end":34},"name":"vector_to_matrix_index","qualname":"<Matrix<N, R, C, S>>::vector_to_matrix_index","value":"pub fn vector_to_matrix_index(&Self, usize) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Computes the row and column coordinates of the i-th element of this matrix seen as a\n vector.","sig":null,"attributes":[{"value":"/ Computes the row and column coordinates of the i-th element of this matrix seen as a","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":388693,"byte_end":388781,"line_start":357,"line_end":357,"column_start":5,"column_end":93}},{"value":"/ vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":388786,"byte_end":388797,"line_start":358,"line_end":358,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":388802,"byte_end":388805,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":388810,"byte_end":388823,"line_start":360,"line_end":360,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":388828,"byte_end":388835,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":388840,"byte_end":388868,"line_start":362,"line_end":362,"column_start":5,"column_end":33}},{"value":"/ let m = Matrix2::new(1, 2,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":388873,"byte_end":388903,"line_start":363,"line_end":363,"column_start":5,"column_end":35}},{"value":"/                      3, 4);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":388908,"byte_end":388939,"line_start":364,"line_end":364,"column_start":5,"column_end":36}},{"value":"/ let i = m.vector_to_matrix_index(3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":388944,"byte_end":388984,"line_start":365,"line_end":365,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(i, (1, 1));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":388989,"byte_end":389015,"line_start":366,"line_end":366,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(m[i], m[3]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":389020,"byte_end":389047,"line_start":367,"line_end":367,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":389052,"byte_end":389059,"line_start":368,"line_end":368,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":389064,"byte_end":389073,"line_start":369,"line_end":369,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3820},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":389879,"byte_end":389885,"line_start":398,"line_end":398,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<Matrix<N, R, C, S>>::as_ptr","value":"pub fn as_ptr(&Self) -> *const N","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the start of the matrix.","sig":null,"attributes":[{"value":"/ Returns a pointer to the start of the matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":389470,"byte_end":389519,"line_start":384,"line_end":384,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":389524,"byte_end":389527,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ If the matrix is not empty, this pointer is guaranteed to be aligned","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":389532,"byte_end":389604,"line_start":386,"line_end":386,"column_start":5,"column_end":77}},{"value":"/ and non-null.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":389609,"byte_end":389626,"line_start":387,"line_end":387,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":389631,"byte_end":389634,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":389639,"byte_end":389652,"line_start":389,"line_end":389,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":389657,"byte_end":389664,"line_start":390,"line_end":390,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":389669,"byte_end":389697,"line_start":391,"line_end":391,"column_start":5,"column_end":33}},{"value":"/ let m = Matrix2::new(1, 2,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":389702,"byte_end":389732,"line_start":392,"line_end":392,"column_start":5,"column_end":35}},{"value":"/                      3, 4);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":389737,"byte_end":389768,"line_start":393,"line_end":393,"column_start":5,"column_end":36}},{"value":"/ let ptr = m.as_ptr();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":389773,"byte_end":389798,"line_start":394,"line_end":394,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(unsafe { *ptr }, m[0]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":389803,"byte_end":389841,"line_start":395,"line_end":395,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":389846,"byte_end":389853,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":389858,"byte_end":389867,"line_start":397,"line_end":397,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3821},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":390115,"byte_end":390126,"line_start":406,"line_end":406,"column_start":12,"column_end":23},"name":"relative_eq","qualname":"<Matrix<N, R, C, S>>::relative_eq","value":"pub fn relative_eq<R2, C2,\n                   SB>(&Self, &Matrix<N, R2, C2, SB>, N::Epsilon, N::Epsilon)\n-> bool where N: RelativeEq, R2: Dim, C2: Dim, SB: Storage<N, R2, C2>,\nN::Epsilon: Copy, ShapeConstraint: SameNumberOfRows<R, R2> +\nSameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" Tests whether `self` and `rhs` are equal up to a given epsilon.","sig":null,"attributes":[{"value":"/ Tests whether `self` and `rhs` are equal up to a given epsilon.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":389942,"byte_end":390009,"line_start":402,"line_end":402,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":390014,"byte_end":390017,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ See `relative_eq` from the `RelativeEq` trait for more details.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":390022,"byte_end":390089,"line_start":404,"line_end":404,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":390094,"byte_end":390103,"line_start":405,"line_end":405,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3826},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":390729,"byte_end":390731,"line_start":428,"line_end":428,"column_start":12,"column_end":14},"name":"eq","qualname":"<Matrix<N, R, C, S>>::eq","value":"pub fn eq<R2, C2, SB>(&Self, &Matrix<N, R2, C2, SB>) -> bool where\nN: PartialEq, R2: Dim, C2: Dim, SB: Storage<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R, R2> + SameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" Tests whether `self` and `rhs` are exactly equal.\n","sig":null,"attributes":[{"value":"/ Tests whether `self` and `rhs` are exactly equal.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":390650,"byte_end":390703,"line_start":426,"line_end":426,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":390708,"byte_end":390717,"line_start":427,"line_end":427,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3831},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":391169,"byte_end":391179,"line_start":442,"line_end":442,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<Matrix<N, R, C, S>>::into_owned","value":"pub fn into_owned(Self) -> MatrixMN<N, R, C> where\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Moves this matrix into one that owns its data.\n","sig":null,"attributes":[{"value":"/ Moves this matrix into one that owns its data.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":391093,"byte_end":391143,"line_start":440,"line_end":440,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":391148,"byte_end":391157,"line_start":441,"line_end":441,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3832},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":391586,"byte_end":391600,"line_start":454,"line_end":454,"column_start":12,"column_end":26},"name":"into_owned_sum","qualname":"<Matrix<N, R, C, S>>::into_owned_sum","value":"pub fn into_owned_sum<R2, C2>(Self) -> MatrixSum<N, R, C, R2, C2> where\nR2: Dim, C2: Dim, DefaultAllocator: SameShapeAllocator<N, R, C, R2, C2>,\nShapeConstraint: SameNumberOfRows<R, R2> + SameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" Moves this matrix into one that owns its data. The actual type of the result depends on\n matrix storage combination rules for addition.\n","sig":null,"attributes":[{"value":"/ Moves this matrix into one that owns its data. The actual type of the result depends on","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":391414,"byte_end":391505,"line_start":451,"line_end":451,"column_start":5,"column_end":96}},{"value":"/ matrix storage combination rules for addition.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":391510,"byte_end":391560,"line_start":452,"line_end":452,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":391565,"byte_end":391574,"line_start":453,"line_end":453,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3835},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":392416,"byte_end":392427,"line_start":478,"line_end":478,"column_start":12,"column_end":23},"name":"clone_owned","qualname":"<Matrix<N, R, C, S>>::clone_owned","value":"pub fn clone_owned(&Self) -> MatrixMN<N, R, C> where\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Clones this matrix to one that owns its data.\n","sig":null,"attributes":[{"value":"/ Clones this matrix to one that owns its data.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":392341,"byte_end":392390,"line_start":476,"line_end":476,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":392395,"byte_end":392404,"line_start":477,"line_end":477,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3836},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":392753,"byte_end":392768,"line_start":488,"line_end":488,"column_start":12,"column_end":27},"name":"clone_owned_sum","qualname":"<Matrix<N, R, C, S>>::clone_owned_sum","value":"pub fn clone_owned_sum<R2, C2>(&Self) -> MatrixSum<N, R, C, R2, C2> where\nR2: Dim, C2: Dim, DefaultAllocator: SameShapeAllocator<N, R, C, R2, C2>,\nShapeConstraint: SameNumberOfRows<R, R2> + SameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" Clones this matrix into one that owns its data. The actual type of the result depends on\n matrix storage combination rules for addition.\n","sig":null,"attributes":[{"value":"/ Clones this matrix into one that owns its data. The actual type of the result depends on","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":392580,"byte_end":392672,"line_start":485,"line_end":485,"column_start":5,"column_end":97}},{"value":"/ matrix storage combination rules for addition.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":392677,"byte_end":392727,"line_start":486,"line_end":486,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":392732,"byte_end":392741,"line_start":487,"line_end":487,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3839},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":393670,"byte_end":393682,"line_start":516,"line_end":516,"column_start":12,"column_end":24},"name":"transpose_to","qualname":"<Matrix<N, R, C, S>>::transpose_to","value":"pub fn transpose_to<R2, C2, SB>(&Self, &mut Matrix<N, R2, C2, SB>) where\nR2: Dim, C2: Dim, SB: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R, C2> + SameNumberOfColumns<C, R2>","parent":null,"children":[],"decl_id":null,"docs":" Transposes `self` and store the result into `out`.\n","sig":null,"attributes":[{"value":"/ Transposes `self` and store the result into `out`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":393590,"byte_end":393644,"line_start":514,"line_end":514,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":393649,"byte_end":393658,"line_start":515,"line_end":515,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3843},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":394439,"byte_end":394448,"line_start":542,"line_end":542,"column_start":12,"column_end":21},"name":"transpose","qualname":"<Matrix<N, R, C, S>>::transpose","value":"pub fn transpose(&Self) -> MatrixMN<N, C, R> where\nDefaultAllocator: Allocator<N, C, R>","parent":null,"children":[],"decl_id":null,"docs":" Transposes `self`.\n","sig":null,"attributes":[{"value":"/ Transposes `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":394334,"byte_end":394356,"line_start":539,"line_end":539,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":394361,"byte_end":394370,"line_start":540,"line_end":540,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use transpose_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":394375,"byte_end":394427,"line_start":541,"line_end":541,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3849},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":394980,"byte_end":394983,"line_start":561,"line_end":561,"column_start":12,"column_end":15},"name":"map","qualname":"<Matrix<N, R, C, S>>::map","value":"pub fn map<N2: Scalar, F: FnMut(N) -> N2>(&Self, F) -> MatrixMN<N2, R, C>\nwhere DefaultAllocator: Allocator<N2, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a matrix containing the result of `f` applied to each of its entries.\n","sig":null,"attributes":[{"value":"/ Returns a matrix containing the result of `f` applied to each of its entries.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":394873,"byte_end":394954,"line_start":559,"line_end":559,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":394959,"byte_end":394968,"line_start":560,"line_end":560,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3852},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":396131,"byte_end":396140,"line_start":589,"line_end":589,"column_start":12,"column_end":21},"name":"fold_with","qualname":"<Matrix<N, R, C, S>>::fold_with","value":"pub fn fold_with<N2, impl FnOnce(Option<&N>) -> N2: FnOnce(Option<&N>) -> N2,\n                 impl FnMut(N2, &N) -> N2: FnMut(N2, &N) ->\n                 N2>(&Self, impl FnOnce(Option<&N>) -> N2,\n                     impl FnMut(N2, &N) -> N2) -> N2","parent":null,"children":[],"decl_id":null,"docs":" Similar to `self.iter().fold(init, f)` except that `init` is replaced by a closure.","sig":null,"attributes":[{"value":"/ Similar to `self.iter().fold(init, f)` except that `init` is replaced by a closure.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":395554,"byte_end":395641,"line_start":581,"line_end":581,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":395646,"byte_end":395649,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ The initialization closure is given the first component of this matrix:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":395654,"byte_end":395729,"line_start":583,"line_end":583,"column_start":5,"column_end":80}},{"value":"/ - If the matrix has no component (0 rows or 0 columns) then `init_f` is called with `None`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":395734,"byte_end":395828,"line_start":584,"line_end":584,"column_start":5,"column_end":99}},{"value":"/ and its return value is the value returned by this method.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":395833,"byte_end":395895,"line_start":585,"line_end":585,"column_start":5,"column_end":67}},{"value":"/ - If the matrix has has least one component, then `init_f` is called with the first component","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":395900,"byte_end":395997,"line_start":586,"line_end":586,"column_start":5,"column_end":102}},{"value":"/ to compute the initial value. Folding then continues on all the remaining components of the matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":396002,"byte_end":396105,"line_start":587,"line_end":587,"column_start":5,"column_end":108}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":396110,"byte_end":396119,"line_start":588,"line_end":588,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3856},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":396570,"byte_end":396587,"line_start":602,"line_end":602,"column_start":12,"column_end":29},"name":"map_with_location","qualname":"<Matrix<N, R, C, S>>::map_with_location","value":"pub fn map_with_location<N2: Scalar, F: FnMut(usize, usize, N) ->\n                         N2>(&Self, F) -> MatrixMN<N2, R, C> where\nDefaultAllocator: Allocator<N2, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a matrix containing the result of `f` applied to each of its entries. Unlike `map`,\n `f` also gets passed the row and column index, i.e. `f(row, col, value)`.\n","sig":null,"attributes":[{"value":"/ Returns a matrix containing the result of `f` applied to each of its entries. Unlike `map`,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":396367,"byte_end":396462,"line_start":599,"line_end":599,"column_start":5,"column_end":100}},{"value":"/ `f` also gets passed the row and column index, i.e. `f(row, col, value)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":396467,"byte_end":396544,"line_start":600,"line_end":600,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":396549,"byte_end":396558,"line_start":601,"line_end":601,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3859},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":397329,"byte_end":397336,"line_start":628,"line_end":628,"column_start":12,"column_end":19},"name":"zip_map","qualname":"<Matrix<N, R, C, S>>::zip_map","value":"pub fn zip_map<N2, N3, S2, F>(&Self, &Matrix<N2, R, C, S2>, F)\n-> MatrixMN<N3, R, C> where N2: Scalar, N3: Scalar, S2: Storage<N2, R, C>,\nF: FnMut(N, N2) -> N3, DefaultAllocator: Allocator<N3, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a matrix containing the result of `f` applied to each entries of `self` and\n `rhs`.\n","sig":null,"attributes":[{"value":"/ Returns a matrix containing the result of `f` applied to each entries of `self` and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":397201,"byte_end":397288,"line_start":625,"line_end":625,"column_start":5,"column_end":92}},{"value":"/ `rhs`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":397293,"byte_end":397303,"line_start":626,"line_end":626,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":397308,"byte_end":397317,"line_start":627,"line_end":627,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3864},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":398405,"byte_end":398416,"line_start":662,"line_end":662,"column_start":12,"column_end":23},"name":"zip_zip_map","qualname":"<Matrix<N, R, C, S>>::zip_zip_map","value":"pub fn zip_zip_map<N2, N3, N4, S2, S3,\n                   F>(&Self, &Matrix<N2, R, C, S2>, &Matrix<N3, R, C, S3>, F)\n-> MatrixMN<N4, R, C> where N2: Scalar, N3: Scalar, N4: Scalar,\nS2: Storage<N2, R, C>, S3: Storage<N3, R, C>, F: FnMut(N, N2, N3) -> N4,\nDefaultAllocator: Allocator<N4, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a matrix containing the result of `f` applied to each entries of `self` and\n `b`, and `c`.\n","sig":null,"attributes":[{"value":"/ Returns a matrix containing the result of `f` applied to each entries of `self` and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":398270,"byte_end":398357,"line_start":659,"line_end":659,"column_start":5,"column_end":92}},{"value":"/ `b`, and `c`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":398362,"byte_end":398379,"line_start":660,"line_end":660,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":398384,"byte_end":398393,"line_start":661,"line_end":661,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3871},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":399791,"byte_end":399795,"line_start":708,"line_end":708,"column_start":12,"column_end":16},"name":"fold","qualname":"<Matrix<N, R, C, S>>::fold","value":"pub fn fold<Acc, impl FnMut(Acc, N) -> Acc: FnMut(Acc, N) ->\n            Acc>(&Self, Acc, impl FnMut(Acc, N) -> Acc) -> Acc","parent":null,"children":[],"decl_id":null,"docs":" Folds a function `f` on each entry of `self`.\n","sig":null,"attributes":[{"value":"/ Folds a function `f` on each entry of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":399716,"byte_end":399765,"line_start":706,"line_end":706,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":399770,"byte_end":399779,"line_start":707,"line_end":707,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3874},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":400316,"byte_end":400324,"line_start":727,"line_end":727,"column_start":12,"column_end":20},"name":"zip_fold","qualname":"<Matrix<N, R, C, S>>::zip_fold","value":"pub fn zip_fold<N2, R2, C2, S2, Acc,\n                impl FnMut(Acc, N, N2) -> Acc: FnMut(Acc, N, N2) ->\n                Acc>(&Self, &Matrix<N2, R2, C2, S2>, Acc,\n                     impl FnMut(Acc, N, N2) -> Acc) -> Acc where N2: Scalar,\nR2: Dim, C2: Dim, S2: Storage<N2, R2, C2>,\nShapeConstraint: SameNumberOfRows<R, R2> + SameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" Folds a function `f` on each pairs of entries from `self` and `rhs`.\n","sig":null,"attributes":[{"value":"/ Folds a function `f` on each pairs of entries from `self` and `rhs`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":400218,"byte_end":400290,"line_start":725,"line_end":725,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":400295,"byte_end":400304,"line_start":726,"line_end":726,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3881},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":401374,"byte_end":401379,"line_start":765,"line_end":765,"column_start":12,"column_end":17},"name":"apply","qualname":"<Matrix<N, R, C, S>>::apply","value":"pub fn apply<F: FnMut(N) -> N>(&mut Self, F) where S: StorageMut<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Replaces each component of `self` by the result of a closure `f` applied on it.\n","sig":null,"attributes":[{"value":"/ Replaces each component of `self` by the result of a closure `f` applied on it.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":401265,"byte_end":401348,"line_start":763,"line_end":763,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":401353,"byte_end":401362,"line_start":764,"line_end":764,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3883},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":401925,"byte_end":401934,"line_start":784,"line_end":784,"column_start":12,"column_end":21},"name":"zip_apply","qualname":"<Matrix<N, R, C, S>>::zip_apply","value":"pub fn zip_apply<N2, R2, C2, S2, impl FnMut(N, N2) -> N: FnMut(N, N2) ->\n                 N>(&mut Self, &Matrix<N2, R2, C2, S2>,\n                    impl FnMut(N, N2) -> N) where S: StorageMut<N, R, C>,\nN2: Scalar, R2: Dim, C2: Dim, S2: Storage<N2, R2, C2>,\nShapeConstraint: SameNumberOfRows<R, R2> + SameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" Replaces each component of `self` by the result of a closure `f` applied on its components\n joined with the components from `rhs`.\n","sig":null,"attributes":[{"value":"/ Replaces each component of `self` by the result of a closure `f` applied on its components","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":401758,"byte_end":401852,"line_start":781,"line_end":781,"column_start":5,"column_end":99}},{"value":"/ joined with the components from `rhs`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":401857,"byte_end":401899,"line_start":782,"line_end":782,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":401904,"byte_end":401913,"line_start":783,"line_end":783,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3889},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":402962,"byte_end":402975,"line_start":818,"line_end":818,"column_start":12,"column_end":25},"name":"zip_zip_apply","qualname":"<Matrix<N, R, C, S>>::zip_zip_apply","value":"pub fn zip_zip_apply<N2, R2, C2, S2, N3, R3, C3, S3,\n                     impl FnMut(N, N2, N3) -> N: FnMut(N, N2, N3) ->\n                     N>(&mut Self, &Matrix<N2, R2, C2, S2>,\n                        &Matrix<N3, R3, C3, S3>, impl FnMut(N, N2, N3) -> N)\nwhere S: StorageMut<N, R, C>, N2: Scalar, R2: Dim, C2: Dim,\nS2: Storage<N2, R2, C2>, N3: Scalar, R3: Dim, C3: Dim,\nS3: Storage<N3, R3, C3>, ShapeConstraint: SameNumberOfRows<R, R2> +\nSameNumberOfColumns<C, C2>, ShapeConstraint: SameNumberOfRows<R, R2> +\nSameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" Replaces each component of `self` by the result of a closure `f` applied on its components\n joined with the components from `b` and `c`.\n","sig":null,"attributes":[{"value":"/ Replaces each component of `self` by the result of a closure `f` applied on its components","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":402789,"byte_end":402883,"line_start":815,"line_end":815,"column_start":5,"column_end":99}},{"value":"/ joined with the components from `b` and `c`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":402888,"byte_end":402936,"line_start":816,"line_end":816,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":402941,"byte_end":402950,"line_start":817,"line_end":817,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3904},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":405000,"byte_end":405004,"line_start":881,"line_end":881,"column_start":12,"column_end":16},"name":"iter","qualname":"<Matrix<N, R, C, S>>::iter","value":"pub fn iter(&Self) -> MatrixIter<, N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Iterates through this matrix coordinates in column-major order.","sig":null,"attributes":[{"value":"/ Iterates through this matrix coordinates in column-major order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":404392,"byte_end":404459,"line_start":864,"line_end":864,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":404464,"byte_end":404467,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":404472,"byte_end":404487,"line_start":866,"line_end":866,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":404492,"byte_end":404495,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":404500,"byte_end":404507,"line_start":868,"line_end":868,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":404512,"byte_end":404542,"line_start":869,"line_end":869,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix2x3::new(11, 12, 13,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":404547,"byte_end":404587,"line_start":870,"line_end":870,"column_start":5,"column_end":45}},{"value":"/                          21, 22, 23);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":404592,"byte_end":404633,"line_start":871,"line_end":871,"column_start":5,"column_end":46}},{"value":"/ let mut it = mat.iter();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":404638,"byte_end":404666,"line_start":872,"line_end":872,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(*it.next().unwrap(), 11);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":404671,"byte_end":404711,"line_start":873,"line_end":873,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*it.next().unwrap(), 21);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":404716,"byte_end":404756,"line_start":874,"line_end":874,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*it.next().unwrap(), 12);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":404761,"byte_end":404801,"line_start":875,"line_end":875,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*it.next().unwrap(), 22);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":404806,"byte_end":404846,"line_start":876,"line_end":876,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*it.next().unwrap(), 13);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":404851,"byte_end":404891,"line_start":877,"line_end":877,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*it.next().unwrap(), 23);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":404896,"byte_end":404936,"line_start":878,"line_end":878,"column_start":5,"column_end":45}},{"value":"/ assert!(it.next().is_none());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":404941,"byte_end":404974,"line_start":879,"line_end":879,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":404979,"byte_end":404988,"line_start":880,"line_end":880,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3905},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":405430,"byte_end":405438,"line_start":897,"line_end":897,"column_start":12,"column_end":20},"name":"row_iter","qualname":"<Matrix<N, R, C, S>>::row_iter","value":"pub fn row_iter(&Self) -> RowIter<, N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Iterate through the rows of this matrix.","sig":null,"attributes":[{"value":"/ Iterate through the rows of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":405087,"byte_end":405131,"line_start":885,"line_end":885,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":405136,"byte_end":405139,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":405144,"byte_end":405157,"line_start":887,"line_end":887,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":405162,"byte_end":405169,"line_start":888,"line_end":888,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":405174,"byte_end":405204,"line_start":889,"line_end":889,"column_start":5,"column_end":35}},{"value":"/ let mut a = Matrix2x3::new(1, 2, 3,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":405209,"byte_end":405248,"line_start":890,"line_end":890,"column_start":5,"column_end":44}},{"value":"/                            4, 5, 6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":405253,"byte_end":405293,"line_start":891,"line_end":891,"column_start":5,"column_end":45}},{"value":"/ for (i, row) in a.row_iter().enumerate() {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":405298,"byte_end":405344,"line_start":892,"line_end":892,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(row, a.row(i))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":405349,"byte_end":405382,"line_start":893,"line_end":893,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":405387,"byte_end":405392,"line_start":894,"line_end":894,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":405397,"byte_end":405404,"line_start":895,"line_end":895,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":405409,"byte_end":405418,"line_start":896,"line_end":896,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3906},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":405859,"byte_end":405870,"line_start":912,"line_end":912,"column_start":12,"column_end":23},"name":"column_iter","qualname":"<Matrix<N, R, C, S>>::column_iter","value":"pub fn column_iter(&Self) -> ColumnIter<, N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Iterate through the columns of this matrix.\n # Example\n ```\n # use nalgebra::Matrix2x3;\n let mut a = Matrix2x3::new(1, 2, 3,\n                            4, 5, 6);\n for (i, column) in a.column_iter().enumerate() {\n     assert_eq!(column, a.column(i))\n }\n ```\n","sig":null,"attributes":[{"value":"/ Iterate through the columns of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":405509,"byte_end":405556,"line_start":901,"line_end":901,"column_start":5,"column_end":52}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":405561,"byte_end":405574,"line_start":902,"line_end":902,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":405579,"byte_end":405586,"line_start":903,"line_end":903,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":405591,"byte_end":405621,"line_start":904,"line_end":904,"column_start":5,"column_end":35}},{"value":"/ let mut a = Matrix2x3::new(1, 2, 3,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":405626,"byte_end":405665,"line_start":905,"line_end":905,"column_start":5,"column_end":44}},{"value":"/                            4, 5, 6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":405670,"byte_end":405710,"line_start":906,"line_end":906,"column_start":5,"column_end":45}},{"value":"/ for (i, column) in a.column_iter().enumerate() {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":405715,"byte_end":405767,"line_start":907,"line_end":907,"column_start":5,"column_end":57}},{"value":"/     assert_eq!(column, a.column(i))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":405772,"byte_end":405811,"line_start":908,"line_end":908,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":405816,"byte_end":405821,"line_start":909,"line_end":909,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":405826,"byte_end":405833,"line_start":910,"line_end":910,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":405838,"byte_end":405847,"line_start":911,"line_end":911,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3907},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":406026,"byte_end":406034,"line_start":918,"line_end":918,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Matrix<N, R, C, S>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> MatrixIterMut<, N, R, C, S> where\nS: StorageMut<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Mutably iterates through this matrix coordinates.\n","sig":null,"attributes":[{"value":"/ Mutably iterates through this matrix coordinates.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":405947,"byte_end":406000,"line_start":916,"line_end":916,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":406005,"byte_end":406014,"line_start":917,"line_end":917,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3908},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":406669,"byte_end":406681,"line_start":941,"line_end":941,"column_start":12,"column_end":24},"name":"row_iter_mut","qualname":"<Matrix<N, R, C, S>>::row_iter_mut","value":"pub fn row_iter_mut(&mut Self) -> RowIterMut<, N, R, C, S> where\nS: StorageMut<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Mutably iterates through this matrix rows.","sig":null,"attributes":[{"value":"/ Mutably iterates through this matrix rows.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":406177,"byte_end":406223,"line_start":925,"line_end":925,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":406228,"byte_end":406231,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":406236,"byte_end":406249,"line_start":927,"line_end":927,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":406254,"byte_end":406261,"line_start":928,"line_end":928,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":406266,"byte_end":406296,"line_start":929,"line_end":929,"column_start":5,"column_end":35}},{"value":"/ let mut a = Matrix2x3::new(1, 2, 3,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":406301,"byte_end":406340,"line_start":930,"line_end":930,"column_start":5,"column_end":44}},{"value":"/                            4, 5, 6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":406345,"byte_end":406385,"line_start":931,"line_end":931,"column_start":5,"column_end":45}},{"value":"/ for (i, mut row) in a.row_iter_mut().enumerate() {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":406390,"byte_end":406444,"line_start":932,"line_end":932,"column_start":5,"column_end":59}},{"value":"/     row *= (i + 1) * 10;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":406449,"byte_end":406477,"line_start":933,"line_end":933,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":406482,"byte_end":406487,"line_start":934,"line_end":934,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":406492,"byte_end":406495,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ let expected = Matrix2x3::new(10, 20, 30,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":406500,"byte_end":406545,"line_start":936,"line_end":936,"column_start":5,"column_end":50}},{"value":"/                               80, 100, 120);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":406550,"byte_end":406598,"line_start":937,"line_end":937,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(a, expected);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":406603,"byte_end":406631,"line_start":938,"line_end":938,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":406636,"byte_end":406643,"line_start":939,"line_end":939,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":406648,"byte_end":406657,"line_start":940,"line_end":940,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3909},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":407306,"byte_end":407321,"line_start":964,"line_end":964,"column_start":12,"column_end":27},"name":"column_iter_mut","qualname":"<Matrix<N, R, C, S>>::column_iter_mut","value":"pub fn column_iter_mut(&mut Self) -> ColumnIterMut<, N, R, C, S> where\nS: StorageMut<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Mutably iterates through this matrix columns.","sig":null,"attributes":[{"value":"/ Mutably iterates through this matrix columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":406808,"byte_end":406857,"line_start":948,"line_end":948,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":406862,"byte_end":406865,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":406870,"byte_end":406883,"line_start":950,"line_end":950,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":406888,"byte_end":406895,"line_start":951,"line_end":951,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":406900,"byte_end":406930,"line_start":952,"line_end":952,"column_start":5,"column_end":35}},{"value":"/ let mut a = Matrix2x3::new(1, 2, 3,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":406935,"byte_end":406974,"line_start":953,"line_end":953,"column_start":5,"column_end":44}},{"value":"/                            4, 5, 6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":406979,"byte_end":407019,"line_start":954,"line_end":954,"column_start":5,"column_end":45}},{"value":"/ for (i, mut col) in a.column_iter_mut().enumerate() {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":407024,"byte_end":407081,"line_start":955,"line_end":955,"column_start":5,"column_end":62}},{"value":"/     col *= (i + 1) * 10;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":407086,"byte_end":407114,"line_start":956,"line_end":956,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":407119,"byte_end":407124,"line_start":957,"line_end":957,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":407129,"byte_end":407132,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ let expected = Matrix2x3::new(10, 40, 90,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":407137,"byte_end":407182,"line_start":959,"line_end":959,"column_start":5,"column_end":50}},{"value":"/                               40, 100, 180);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":407187,"byte_end":407235,"line_start":960,"line_end":960,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(a, expected);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":407240,"byte_end":407268,"line_start":961,"line_end":961,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":407273,"byte_end":407280,"line_start":962,"line_end":962,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":407285,"byte_end":407294,"line_start":963,"line_end":963,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3915},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":407723,"byte_end":407733,"line_start":978,"line_end":978,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<Matrix<N, R, C, S>>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut N","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable pointer to the start of the matrix.","sig":null,"attributes":[{"value":"/ Returns a mutable pointer to the start of the matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":407533,"byte_end":407590,"line_start":973,"line_end":973,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":407595,"byte_end":407598,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ If the matrix is not empty, this pointer is guaranteed to be aligned","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":407603,"byte_end":407675,"line_start":975,"line_end":975,"column_start":5,"column_end":77}},{"value":"/ and non-null.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":407680,"byte_end":407697,"line_start":976,"line_end":976,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":407702,"byte_end":407711,"line_start":977,"line_end":977,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3916},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":407874,"byte_end":407888,"line_start":984,"line_end":984,"column_start":19,"column_end":33},"name":"swap_unchecked","qualname":"<Matrix<N, R, C, S>>::swap_unchecked","value":"pub unsafe fn swap_unchecked(&mut Self, (usize, usize), (usize, usize))","parent":null,"children":[],"decl_id":null,"docs":" Swaps two entries without bound-checking.\n","sig":null,"attributes":[{"value":"/ Swaps two entries without bound-checking.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":407796,"byte_end":407841,"line_start":982,"line_end":982,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":407846,"byte_end":407855,"line_start":983,"line_end":983,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3917},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":408232,"byte_end":408236,"line_start":992,"line_end":992,"column_start":12,"column_end":16},"name":"swap","qualname":"<Matrix<N, R, C, S>>::swap","value":"pub fn swap(&mut Self, (usize, usize), (usize, usize))","parent":null,"children":[],"decl_id":null,"docs":" Swaps two entries.\n","sig":null,"attributes":[{"value":"/ Swaps two entries.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":408184,"byte_end":408206,"line_start":990,"line_end":990,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":408211,"byte_end":408220,"line_start":991,"line_end":991,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3918},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":408912,"byte_end":408927,"line_start":1009,"line_end":1009,"column_start":12,"column_end":27},"name":"copy_from_slice","qualname":"<Matrix<N, R, C, S>>::copy_from_slice","value":"pub fn copy_from_slice(&mut Self, &[N])","parent":null,"children":[],"decl_id":null,"docs":" Fills this matrix with the content of a slice. Both must hold the same number of elements.","sig":null,"attributes":[{"value":"/ Fills this matrix with the content of a slice. Both must hold the same number of elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":408699,"byte_end":408793,"line_start":1005,"line_end":1005,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":408798,"byte_end":408801,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ The components of the slice are assumed to be ordered in column-major order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":408806,"byte_end":408886,"line_start":1007,"line_end":1007,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":408891,"byte_end":408900,"line_start":1008,"line_end":1008,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3919},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":409528,"byte_end":409537,"line_start":1029,"line_end":1029,"column_start":12,"column_end":21},"name":"copy_from","qualname":"<Matrix<N, R, C, S>>::copy_from","value":"pub fn copy_from<R2, C2, SB>(&mut Self, &Matrix<N, R2, C2, SB>) where R2: Dim,\nC2: Dim, SB: Storage<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R, R2> +\nSameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" Fills this matrix with the content of another one. Both must have the same shape.\n","sig":null,"attributes":[{"value":"/ Fills this matrix with the content of another one. Both must have the same shape.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":409417,"byte_end":409502,"line_start":1027,"line_end":1027,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":409507,"byte_end":409516,"line_start":1028,"line_end":1028,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3923},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":410237,"byte_end":410249,"line_start":1052,"line_end":1052,"column_start":12,"column_end":24},"name":"tr_copy_from","qualname":"<Matrix<N, R, C, S>>::tr_copy_from","value":"pub fn tr_copy_from<R2, C2, SB>(&mut Self, &Matrix<N, R2, C2, SB>) where\nR2: Dim, C2: Dim, SB: Storage<N, R2, C2>, ShapeConstraint: DimEq<R, C2> +\nSameNumberOfColumns<C, R2>","parent":null,"children":[],"decl_id":null,"docs":" Fills this matrix with the content of the transpose another one.\n","sig":null,"attributes":[{"value":"/ Fills this matrix with the content of the transpose another one.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":410143,"byte_end":410211,"line_start":1050,"line_end":1050,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":410216,"byte_end":410225,"line_start":1051,"line_end":1051,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3927},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":411075,"byte_end":411085,"line_start":1077,"line_end":1077,"column_start":12,"column_end":22},"name":"apply_into","qualname":"<Matrix<N, R, C, S>>::apply_into","value":"pub fn apply_into<F: FnMut(N) -> N>(Self, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns `self` with each of its components replaced by the result of a closure `f` applied on it.\n","sig":null,"attributes":[{"value":"/ Returns `self` with each of its components replaced by the result of a closure `f` applied on it.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":410948,"byte_end":411049,"line_start":1075,"line_end":1075,"column_start":5,"column_end":106}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":411054,"byte_end":411063,"line_start":1076,"line_end":1076,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3933},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":411358,"byte_end":411372,"line_start":1086,"line_end":1086,"column_start":19,"column_end":33},"name":"vget_unchecked","qualname":"<Vector<N, D, S>>::vget_unchecked","value":"pub unsafe fn vget_unchecked(&Self, usize) -> &N","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the i-th element of this column vector without bound checking.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the i-th element of this column vector without bound checking.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":411239,"byte_end":411325,"line_start":1084,"line_end":1084,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":411330,"byte_end":411339,"line_start":1085,"line_end":1085,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3938},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":411753,"byte_end":411771,"line_start":1096,"line_end":1096,"column_start":19,"column_end":37},"name":"vget_unchecked_mut","qualname":"<Vector<N, D, S>>::vget_unchecked_mut","value":"pub unsafe fn vget_unchecked_mut(&mut Self, usize) -> &mut N","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the i-th element of this column vector without bound checking.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the i-th element of this column vector without bound checking.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":411626,"byte_end":411720,"line_start":1094,"line_end":1094,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":411725,"byte_end":411734,"line_start":1095,"line_end":1095,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3944},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":412168,"byte_end":412176,"line_start":1106,"line_end":1106,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Matrix<N, R, C, S>>::as_slice","value":"pub fn as_slice(&Self) -> &[N]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice containing the entire matrix entries ordered column-by-columns.\n","sig":null,"attributes":[{"value":"/ Extracts a slice containing the entire matrix entries ordered column-by-columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":412058,"byte_end":412142,"line_start":1104,"line_end":1104,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":412147,"byte_end":412156,"line_start":1105,"line_end":1105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3950},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":412441,"byte_end":412453,"line_start":1114,"line_end":1114,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<Matrix<N, R, C, S>>::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut [N]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a mutable slice containing the entire matrix entries ordered column-by-columns.\n","sig":null,"attributes":[{"value":"/ Extracts a mutable slice containing the entire matrix entries ordered column-by-columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":412323,"byte_end":412415,"line_start":1112,"line_end":1112,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":412420,"byte_end":412429,"line_start":1113,"line_end":1113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3955},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":412655,"byte_end":412668,"line_start":1121,"line_end":1121,"column_start":12,"column_end":25},"name":"transpose_mut","qualname":"<Matrix<N, D, D, S>>::transpose_mut","value":"pub fn transpose_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Transposes the square matrix `self` in-place.\n","sig":null,"attributes":[{"value":"/ Transposes the square matrix `self` in-place.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":412594,"byte_end":412643,"line_start":1120,"line_end":1120,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3961},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":413195,"byte_end":413205,"line_start":1140,"line_end":1140,"column_start":12,"column_end":22},"name":"adjoint_to","qualname":"<Matrix<N, R, C, S>>::adjoint_to","value":"pub fn adjoint_to<R2, C2, SB>(&Self, &mut Matrix<N, R2, C2, SB>) where\nR2: Dim, C2: Dim, SB: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R, C2> + SameNumberOfColumns<C, R2>","parent":null,"children":[],"decl_id":null,"docs":" Takes the adjoint (aka. conjugate-transpose) of `self` and store the result into `out`.\n","sig":null,"attributes":[{"value":"/ Takes the adjoint (aka. conjugate-transpose) of `self` and store the result into `out`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":413078,"byte_end":413169,"line_start":1138,"line_end":1138,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":413174,"byte_end":413183,"line_start":1139,"line_end":1139,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3965},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":413992,"byte_end":413999,"line_start":1166,"line_end":1166,"column_start":12,"column_end":19},"name":"adjoint","qualname":"<Matrix<N, R, C, S>>::adjoint","value":"pub fn adjoint(&Self) -> MatrixMN<N, C, R> where\nDefaultAllocator: Allocator<N, C, R>","parent":null,"children":[],"decl_id":null,"docs":" The adjoint (aka. conjugate-transpose) of `self`.\n","sig":null,"attributes":[{"value":"/ The adjoint (aka. conjugate-transpose) of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":413858,"byte_end":413911,"line_start":1163,"line_end":1163,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":413916,"byte_end":413925,"line_start":1164,"line_end":1164,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use adjoint_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":413930,"byte_end":413980,"line_start":1165,"line_end":1165,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3966},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":414491,"byte_end":414513,"line_start":1183,"line_end":1183,"column_start":12,"column_end":34},"name":"conjugate_transpose_to","qualname":"<Matrix<N, R, C, S>>::conjugate_transpose_to","value":"pub fn conjugate_transpose_to<R2, C2, SB>(&Self, &mut Matrix<N, R2, C2, SB>)\nwhere R2: Dim, C2: Dim, SB: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R, C2> + SameNumberOfColumns<C, R2>","parent":null,"children":[],"decl_id":null,"docs":" Takes the conjugate and transposes `self` and store the result into `out`.\n","sig":null,"attributes":[{"value":"/ Takes the conjugate and transposes `self` and store the result into `out`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":414327,"byte_end":414405,"line_start":1180,"line_end":1180,"column_start":5,"column_end":83}},{"value":"deprecated(note = \"Renamed `self.adjoint_to(out)`.\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":414410,"byte_end":414465,"line_start":1181,"line_end":1181,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":414470,"byte_end":414479,"line_start":1182,"line_end":1182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3970},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":414892,"byte_end":414911,"line_start":1196,"line_end":1196,"column_start":12,"column_end":31},"name":"conjugate_transpose","qualname":"<Matrix<N, R, C, S>>::conjugate_transpose","value":"pub fn conjugate_transpose(&Self) -> MatrixMN<N, C, R> where\nDefaultAllocator: Allocator<N, C, R>","parent":null,"children":[],"decl_id":null,"docs":" The conjugate transposition of `self`.\n","sig":null,"attributes":[{"value":"/ The conjugate transposition of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":414770,"byte_end":414812,"line_start":1193,"line_end":1193,"column_start":5,"column_end":47}},{"value":"deprecated(note = \"Renamed `self.adjoint()`.\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":414817,"byte_end":414866,"line_start":1194,"line_end":1194,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":414871,"byte_end":414880,"line_start":1195,"line_end":1195,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3971},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":415147,"byte_end":415156,"line_start":1206,"line_end":1206,"column_start":12,"column_end":21},"name":"conjugate","qualname":"<Matrix<N, R, C, S>>::conjugate","value":"pub fn conjugate(&Self) -> MatrixMN<N, R, C> where\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" The conjugate of `self`.\n","sig":null,"attributes":[{"value":"/ The conjugate of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":415036,"byte_end":415064,"line_start":1203,"line_end":1203,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":415069,"byte_end":415078,"line_start":1204,"line_end":1204,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use conjugate_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":415083,"byte_end":415135,"line_start":1205,"line_end":1205,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3973},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":415454,"byte_end":415461,"line_start":1216,"line_end":1216,"column_start":12,"column_end":19},"name":"unscale","qualname":"<Matrix<N, R, C, S>>::unscale","value":"pub fn unscale(&Self, N::SimdRealField) -> MatrixMN<N, R, C> where\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Divides each component of the complex matrix `self` by the given real.\n","sig":null,"attributes":[{"value":"/ Divides each component of the complex matrix `self` by the given real.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":415299,"byte_end":415373,"line_start":1213,"line_end":1213,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":415378,"byte_end":415387,"line_start":1214,"line_end":1214,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use unscale_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":415392,"byte_end":415442,"line_start":1215,"line_end":1215,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3975},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":415786,"byte_end":415791,"line_start":1226,"line_end":1226,"column_start":12,"column_end":17},"name":"scale","qualname":"<Matrix<N, R, C, S>>::scale","value":"pub fn scale(&Self, N::SimdRealField) -> MatrixMN<N, R, C> where\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Multiplies each component of the complex matrix `self` by the given real.\n","sig":null,"attributes":[{"value":"/ Multiplies each component of the complex matrix `self` by the given real.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":415630,"byte_end":415707,"line_start":1223,"line_end":1223,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":415712,"byte_end":415721,"line_start":1224,"line_end":1224,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use scale_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":415726,"byte_end":415774,"line_start":1225,"line_end":1225,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3982},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":416138,"byte_end":416151,"line_start":1237,"line_end":1237,"column_start":12,"column_end":25},"name":"conjugate_mut","qualname":"<Matrix<N, R, C, S>>::conjugate_mut","value":"pub fn conjugate_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" The conjugate of the complex matrix `self` computed in-place.\n","sig":null,"attributes":[{"value":"/ The conjugate of the complex matrix `self` computed in-place.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":416047,"byte_end":416112,"line_start":1235,"line_end":1235,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":416117,"byte_end":416126,"line_start":1236,"line_end":1236,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3984},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":416319,"byte_end":416330,"line_start":1243,"line_end":1243,"column_start":12,"column_end":23},"name":"unscale_mut","qualname":"<Matrix<N, R, C, S>>::unscale_mut","value":"pub fn unscale_mut(&mut Self, N::SimdRealField)","parent":null,"children":[],"decl_id":null,"docs":" Divides each component of the complex matrix `self` by the given real.\n","sig":null,"attributes":[{"value":"/ Divides each component of the complex matrix `self` by the given real.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":416219,"byte_end":416293,"line_start":1241,"line_end":1241,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":416298,"byte_end":416307,"line_start":1242,"line_end":1242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3986},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":416527,"byte_end":416536,"line_start":1249,"line_end":1249,"column_start":12,"column_end":21},"name":"scale_mut","qualname":"<Matrix<N, R, C, S>>::scale_mut","value":"pub fn scale_mut(&mut Self, N::SimdRealField)","parent":null,"children":[],"decl_id":null,"docs":" Multiplies each component of the complex matrix `self` by the given real.\n","sig":null,"attributes":[{"value":"/ Multiplies each component of the complex matrix `self` by the given real.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":416424,"byte_end":416501,"line_start":1247,"line_end":1247,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":416506,"byte_end":416515,"line_start":1248,"line_end":1248,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3992},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":416813,"byte_end":416836,"line_start":1257,"line_end":1257,"column_start":12,"column_end":35},"name":"conjugate_transform_mut","qualname":"<Matrix<N, D, D, S>>::conjugate_transform_mut","value":"pub fn conjugate_transform_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Sets `self` to its adjoint.\n","sig":null,"attributes":[{"value":"/ Sets `self` to its adjoint.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":416709,"byte_end":416740,"line_start":1255,"line_end":1255,"column_start":5,"column_end":36}},{"value":"deprecated(note = \"Renamed to `self.adjoint_mut()`.\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":416745,"byte_end":416801,"line_start":1256,"line_end":1256,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3993},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":416958,"byte_end":416969,"line_start":1262,"line_end":1262,"column_start":12,"column_end":23},"name":"adjoint_mut","qualname":"<Matrix<N, D, D, S>>::adjoint_mut","value":"pub fn adjoint_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Sets `self` to its adjoint (aka. conjugate-transpose).\n","sig":null,"attributes":[{"value":"/ Sets `self` to its adjoint (aka. conjugate-transpose).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":416888,"byte_end":416946,"line_start":1261,"line_end":1261,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3998},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":417900,"byte_end":417908,"line_start":1293,"line_end":1293,"column_start":12,"column_end":20},"name":"diagonal","qualname":"<SquareMatrix<N, D, S>>::diagonal","value":"pub fn diagonal(&Self) -> VectorN<N, D> where\nDefaultAllocator: Allocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" The diagonal of this matrix.\n","sig":null,"attributes":[{"value":"/ The diagonal of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":417842,"byte_end":417874,"line_start":1291,"line_end":1291,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":417879,"byte_end":417888,"line_start":1292,"line_end":1292,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4000},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":418235,"byte_end":418247,"line_start":1304,"line_end":1304,"column_start":12,"column_end":24},"name":"map_diagonal","qualname":"<SquareMatrix<N, D, S>>::map_diagonal","value":"pub fn map_diagonal<N2: Scalar, impl FnMut(N) -> N2: FnMut(N) ->\n                    N2>(&Self, impl FnMut(N) -> N2) -> VectorN<N2, D> where\nDefaultAllocator: Allocator<N2, D>","parent":null,"children":[],"decl_id":null,"docs":" Apply the given function to this matrix's diagonal and returns it.","sig":null,"attributes":[{"value":"/ Apply the given function to this matrix's diagonal and returns it.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":418036,"byte_end":418106,"line_start":1300,"line_end":1300,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":418111,"byte_end":418114,"line_start":1301,"line_end":1301,"column_start":5,"column_end":8}},{"value":"/ This is a more efficient version of `self.diagonal().map(f)` since this","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":418119,"byte_end":418194,"line_start":1302,"line_end":1302,"column_start":5,"column_end":80}},{"value":"/ allocates only once.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":418199,"byte_end":418223,"line_start":1303,"line_end":1303,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4003},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":418916,"byte_end":418921,"line_start":1327,"line_end":1327,"column_start":12,"column_end":17},"name":"trace","qualname":"<SquareMatrix<N, D, S>>::trace","value":"pub fn trace(&Self) -> N where N: Scalar + Zero + ClosedAdd","parent":null,"children":[],"decl_id":null,"docs":" Computes a trace of a square matrix, i.e., the sum of its diagonal elements.\n","sig":null,"attributes":[{"value":"/ Computes a trace of a square matrix, i.e., the sum of its diagonal elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":418810,"byte_end":418890,"line_start":1325,"line_end":1325,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":418895,"byte_end":418904,"line_start":1326,"line_end":1326,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4008},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":419504,"byte_end":419518,"line_start":1350,"line_end":1350,"column_start":12,"column_end":26},"name":"symmetric_part","qualname":"<SquareMatrix<N, D, S>>::symmetric_part","value":"pub fn symmetric_part(&Self) -> MatrixMN<N, D, D> where\nDefaultAllocator: Allocator<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" The symmetric part of `self`, i.e., `0.5 * (self + self.transpose())`.\n","sig":null,"attributes":[{"value":"/ The symmetric part of `self`, i.e., `0.5 * (self + self.transpose())`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":419404,"byte_end":419478,"line_start":1348,"line_end":1348,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":419483,"byte_end":419492,"line_start":1349,"line_end":1349,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4009},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":419961,"byte_end":419975,"line_start":1366,"line_end":1366,"column_start":12,"column_end":26},"name":"hermitian_part","qualname":"<SquareMatrix<N, D, S>>::hermitian_part","value":"pub fn hermitian_part(&Self) -> MatrixMN<N, D, D> where\nDefaultAllocator: Allocator<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" The hermitian part of `self`, i.e., `0.5 * (self + self.adjoint())`.\n","sig":null,"attributes":[{"value":"/ The hermitian part of `self`, i.e., `0.5 * (self + self.adjoint())`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":419863,"byte_end":419935,"line_start":1364,"line_end":1364,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":419940,"byte_end":419949,"line_start":1365,"line_end":1365,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4014},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":420597,"byte_end":420611,"line_start":1388,"line_end":1388,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Matrix<N, D, D, S>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> MatrixN<N, DimSum<D, U1>> where\nDefaultAllocator: Allocator<N, DimSum<D, U1>, DimSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Yields the homogeneous matrix for this matrix, i.e., appending an additional dimension and\n and setting the diagonal element to `1`.\n","sig":null,"attributes":[{"value":"/ Yields the homogeneous matrix for this matrix, i.e., appending an additional dimension and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":420428,"byte_end":420522,"line_start":1385,"line_end":1385,"column_start":5,"column_end":99}},{"value":"/ and setting the diagonal element to `1`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":420527,"byte_end":420571,"line_start":1386,"line_end":1386,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":420576,"byte_end":420585,"line_start":1387,"line_end":1387,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4019},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":421341,"byte_end":421355,"line_start":1408,"line_end":1408,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Vector<N, D, S>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> VectorN<N, DimSum<D, U1>> where\nDefaultAllocator: Allocator<N, DimSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the coordinates in projective space of this vector, i.e., appends a `0` to its\n coordinates.\n","sig":null,"attributes":[{"value":"/ Computes the coordinates in projective space of this vector, i.e., appends a `0` to its","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":421203,"byte_end":421294,"line_start":1405,"line_end":1405,"column_start":5,"column_end":96}},{"value":"/ coordinates.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":421299,"byte_end":421315,"line_start":1406,"line_end":1406,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":421320,"byte_end":421329,"line_start":1407,"line_end":1407,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4020},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":421691,"byte_end":421707,"line_start":1418,"line_end":1418,"column_start":12,"column_end":28},"name":"from_homogeneous","qualname":"<Vector<N, D, S>>::from_homogeneous","value":"pub fn from_homogeneous<SB>(Vector<N, DimSum<D, U1>, SB>)\n-> Option<VectorN<N, D>> where SB: Storage<N, DimSum<D, U1>>,\nDefaultAllocator: Allocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a vector from coordinates in projective space, i.e., removes a `0` at the end of\n `self`. Returns `None` if this last component is not zero.\n","sig":null,"attributes":[{"value":"/ Constructs a vector from coordinates in projective space, i.e., removes a `0` at the end of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":421503,"byte_end":421598,"line_start":1415,"line_end":1415,"column_start":5,"column_end":100}},{"value":"/ `self`. Returns `None` if this last component is not zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":421603,"byte_end":421665,"line_start":1416,"line_end":1416,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":421670,"byte_end":421679,"line_start":1417,"line_end":1417,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4026},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":422275,"byte_end":422279,"line_start":1435,"line_end":1435,"column_start":12,"column_end":16},"name":"push","qualname":"<Vector<N, D, S>>::push","value":"pub fn push(&Self, N) -> VectorN<N, DimSum<D, U1>> where\nDefaultAllocator: Allocator<N, DimSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new vector of higher dimension by appending `element` to the end of `self`.\n","sig":null,"attributes":[{"value":"/ Constructs a new vector of higher dimension by appending `element` to the end of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":422157,"byte_end":422249,"line_start":1433,"line_end":1433,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":422254,"byte_end":422263,"line_start":1434,"line_end":1434,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4086},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":431140,"byte_end":431144,"line_start":1736,"line_end":1736,"column_start":12,"column_end":16},"name":"perp","qualname":"<Matrix<N, R, C, S>>::perp","value":"pub fn perp<R2, C2, SB>(&Self, &Matrix<N, R2, C2, SB>) -> N where R2: Dim,\nC2: Dim, SB: Storage<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R, U2> +\nSameNumberOfColumns<C, U1> + SameNumberOfRows<R2, U2> +\nSameNumberOfColumns<C2, U1>","parent":null,"children":[],"decl_id":null,"docs":" The perpendicular product between two 2D column vectors, i.e. `a.x * b.y - a.y * b.x`.\n","sig":null,"attributes":[{"value":"/ The perpendicular product between two 2D column vectors, i.e. `a.x * b.y - a.y * b.x`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":431024,"byte_end":431114,"line_start":1734,"line_end":1734,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":431119,"byte_end":431128,"line_start":1735,"line_end":1735,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4090},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":432176,"byte_end":432181,"line_start":1765,"line_end":1765,"column_start":12,"column_end":17},"name":"cross","qualname":"<Matrix<N, R, C, S>>::cross","value":"pub fn cross<R2, C2, SB>(&Self, &Matrix<N, R2, C2, SB>)\n-> MatrixCross<N, R, C, R2, C2> where R2: Dim, C2: Dim,\nSB: Storage<N, R2, C2>, DefaultAllocator: SameShapeAllocator<N, R, C, R2, C2>,\nShapeConstraint: SameNumberOfRows<R, R2> + SameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" The 3D cross product between two vectors.","sig":null,"attributes":[{"value":"/ The 3D cross product between two vectors.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":431933,"byte_end":431978,"line_start":1760,"line_end":1760,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":431983,"byte_end":431986,"line_start":1761,"line_end":1761,"column_start":5,"column_end":8}},{"value":"/ Panics if the shape is not 3D vector. In the future, this will be implemented only for","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":431991,"byte_end":432081,"line_start":1762,"line_end":1762,"column_start":5,"column_end":95}},{"value":"/ dynamically-sized matrices and statically-sized 3D matrices.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":432086,"byte_end":432150,"line_start":1763,"line_end":1763,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":432155,"byte_end":432164,"line_start":1764,"line_end":1764,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4097},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":435243,"byte_end":435255,"line_start":1839,"line_end":1839,"column_start":12,"column_end":24},"name":"cross_matrix","qualname":"<Vector<N, U3, S>>::cross_matrix","value":"pub fn cross_matrix(&Self) -> MatrixN<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Computes the matrix `M` such that for all vector `v` we have `M * v == self.cross(&v)`.\n","sig":null,"attributes":[{"value":"/ Computes the matrix `M` such that for all vector `v` we have `M * v == self.cross(&v)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":435126,"byte_end":435217,"line_start":1837,"line_end":1837,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":435222,"byte_end":435231,"line_start":1838,"line_end":1838,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4103},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":435784,"byte_end":435789,"line_start":1857,"line_end":1857,"column_start":12,"column_end":17},"name":"angle","qualname":"<Matrix<N, R, C, S>>::angle","value":"pub fn angle<R2: Dim, C2: Dim, SB>(&Self, &Matrix<N, R2, C2, SB>)\n-> N::SimdRealField where SB: Storage<N, R2, C2>,\nShapeConstraint: DimEq<R, R2> + DimEq<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" The smallest angle between two vectors.\n","sig":null,"attributes":[{"value":"/ The smallest angle between two vectors.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":435715,"byte_end":435758,"line_start":1855,"line_end":1855,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":435763,"byte_end":435772,"line_start":1856,"line_end":1856,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":21426},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":443156,"byte_end":443168,"line_start":85,"line_end":85,"column_start":23,"column_end":35},"name":"SliceStorage","qualname":"::base::matrix_slice::SliceStorage","value":"SliceStorage {  }","parent":null,"children":[{"krate":0,"index":21433},{"krate":0,"index":21434},{"krate":0,"index":21435},{"krate":0,"index":21436}],"decl_id":null,"docs":"A matrix data storage for a matrix slice. Only contains an internal reference to another matrix data storage.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":21482},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":443420,"byte_end":443435,"line_start":89,"line_end":89,"column_start":30,"column_end":45},"name":"SliceStorageMut","qualname":"::base::matrix_slice::SliceStorageMut","value":"SliceStorageMut {  }","parent":null,"children":[{"krate":0,"index":21489},{"krate":0,"index":21490},{"krate":0,"index":21491},{"krate":0,"index":21492}],"decl_id":null,"docs":"A mutable matrix data storage for mutable matrix slice. Only contains an internal mutable reference to another matrix data storage.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4305},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":464024,"byte_end":464035,"line_start":632,"line_end":632,"column_start":10,"column_end":21},"name":"MatrixSlice","qualname":"::base::matrix_slice::MatrixSlice","value":"Matrix<N, R, C, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A matrix slice.\n","sig":null,"attributes":[{"value":"/ A matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":463995,"byte_end":464014,"line_start":631,"line_end":631,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":4312},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":464172,"byte_end":464186,"line_start":635,"line_end":635,"column_start":10,"column_end":24},"name":"MatrixSliceMut","qualname":"::base::matrix_slice::MatrixSliceMut","value":"Matrix<N, R, C, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A mutable matrix slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":464135,"byte_end":464162,"line_start":634,"line_end":634,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":21533},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":464523,"byte_end":464526,"line_start":642,"line_end":642,"column_start":6,"column_end":9},"name":"row","qualname":"<Matrix<N, R, C, S>>::row","value":"pub fn row(&Self, usize) -> MatrixSlice<, N, U1, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the i-th row of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the i-th row of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":449400,"byte_end":449459,"line_start":282,"line_end":282,"column_start":9,"column_end":68}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":449468,"byte_end":449477,"line_start":283,"line_end":283,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21534},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":464533,"byte_end":464541,"line_start":643,"line_end":643,"column_start":6,"column_end":14},"name":"row_part","qualname":"<Matrix<N, R, C, S>>::row_part","value":"pub fn row_part(&Self, usize, usize)\n-> MatrixSlice<, N, U1, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the `n` first elements of the i-th row of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the `n` first elements of the i-th row of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":449626,"byte_end":449711,"line_start":288,"line_end":288,"column_start":9,"column_end":94}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":449720,"byte_end":449729,"line_start":289,"line_end":289,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21535},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":464548,"byte_end":464552,"line_start":644,"line_end":644,"column_start":6,"column_end":10},"name":"rows","qualname":"<Matrix<N, R, C, S>>::rows","value":"pub fn rows(&Self, usize, usize)\n-> MatrixSlice<, N, Dynamic, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive rows.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":449924,"byte_end":449980,"line_start":294,"line_end":294,"column_start":9,"column_end":65}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":449989,"byte_end":449998,"line_start":295,"line_end":295,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21536},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":464559,"byte_end":464573,"line_start":645,"line_end":645,"column_start":6,"column_end":20},"name":"rows_with_step","qualname":"<Matrix<N, R, C, S>>::rows_with_step","value":"pub fn rows_with_step(&Self, usize, usize, usize)\n-> MatrixSlice<, N, Dynamic, C, Dynamic, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive rows regularly skipping `step` rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive rows regularly skipping `step` rows.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":450213,"byte_end":450300,"line_start":302,"line_end":302,"column_start":9,"column_end":96}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":450309,"byte_end":450318,"line_start":303,"line_end":303,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21537},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":464580,"byte_end":464590,"line_start":646,"line_end":646,"column_start":6,"column_end":16},"name":"fixed_rows","qualname":"<Matrix<N, R, C, S>>::fixed_rows","value":"pub fn fixed_rows<RSlice: DimName>(&Self, usize)\n-> MatrixSlice<, N, RSlice, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts a compile-time number of consecutive rows from this matrix.\n","sig":null,"attributes":[{"value":"/ Extracts a compile-time number of consecutive rows from this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":450569,"byte_end":450641,"line_start":310,"line_end":310,"column_start":9,"column_end":81}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":450650,"byte_end":450659,"line_start":311,"line_end":311,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21539},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":464597,"byte_end":464617,"line_start":647,"line_end":647,"column_start":6,"column_end":26},"name":"fixed_rows_with_step","qualname":"<Matrix<N, R, C, S>>::fixed_rows_with_step","value":"pub fn fixed_rows_with_step<RSlice: DimName>(&Self, usize, usize)\n-> MatrixSlice<, N, RSlice, C, Dynamic, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a compile-time number of rows regularly skipping `step`\n rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a compile-time number of rows regularly skipping `step`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":450877,"byte_end":450962,"line_start":318,"line_end":318,"column_start":9,"column_end":94}},{"value":"/ rows.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":450971,"byte_end":450980,"line_start":319,"line_end":319,"column_start":9,"column_end":18}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":450989,"byte_end":450998,"line_start":320,"line_end":320,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21541},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":464624,"byte_end":464636,"line_start":648,"line_end":648,"column_start":6,"column_end":18},"name":"rows_generic","qualname":"<Matrix<N, R, C, S>>::rows_generic","value":"pub fn rows_generic<RSlice: Dim>(&Self, usize, RSlice)\n-> MatrixSlice<, N, RSlice, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both\n argument may or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":451252,"byte_end":451331,"line_start":327,"line_end":327,"column_start":9,"column_end":88}},{"value":"/ argument may or may not be values known at compile-time.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":451340,"byte_end":451400,"line_start":328,"line_end":328,"column_start":9,"column_end":69}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":451409,"byte_end":451418,"line_start":329,"line_end":329,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21543},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":464643,"byte_end":464665,"line_start":649,"line_end":649,"column_start":6,"column_end":28},"name":"rows_generic_with_step","qualname":"<Matrix<N, R, C, S>>::rows_generic_with_step","value":"pub fn rows_generic_with_step<RSlice>(&Self, usize, RSlice, usize)\n-> MatrixSlice<, N, RSlice, C, Dynamic, S::CStride> where RSlice: Dim","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both\n argument may or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":451966,"byte_end":452045,"line_start":344,"line_end":344,"column_start":9,"column_end":88}},{"value":"/ argument may or may not be values known at compile-time.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":452054,"byte_end":452114,"line_start":345,"line_end":345,"column_start":9,"column_end":69}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":452123,"byte_end":452132,"line_start":346,"line_end":346,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21545},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":464672,"byte_end":464678,"line_start":650,"line_end":650,"column_start":6,"column_end":12},"name":"column","qualname":"<Matrix<N, R, C, S>>::column","value":"pub fn column(&Self, usize) -> MatrixSlice<, N, R, U1, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the i-th column of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the i-th column of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":452964,"byte_end":453026,"line_start":369,"line_end":369,"column_start":9,"column_end":71}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":453035,"byte_end":453044,"line_start":370,"line_end":370,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21546},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":464685,"byte_end":464696,"line_start":651,"line_end":651,"column_start":6,"column_end":17},"name":"column_part","qualname":"<Matrix<N, R, C, S>>::column_part","value":"pub fn column_part(&Self, usize, usize)\n-> MatrixSlice<, N, Dynamic, U1, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the `n` first elements of the i-th column of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the `n` first elements of the i-th column of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":453199,"byte_end":453287,"line_start":375,"line_end":375,"column_start":9,"column_end":97}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":453296,"byte_end":453305,"line_start":376,"line_end":376,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21547},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":464703,"byte_end":464710,"line_start":652,"line_end":652,"column_start":6,"column_end":13},"name":"columns","qualname":"<Matrix<N, R, C, S>>::columns","value":"pub fn columns(&Self, usize, usize)\n-> MatrixSlice<, N, R, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":453503,"byte_end":453562,"line_start":381,"line_end":381,"column_start":9,"column_end":68}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":453571,"byte_end":453580,"line_start":382,"line_end":382,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21548},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":464717,"byte_end":464734,"line_start":653,"line_end":653,"column_start":6,"column_end":23},"name":"columns_with_step","qualname":"<Matrix<N, R, C, S>>::columns_with_step","value":"pub fn columns_with_step(&Self, usize, usize, usize)\n-> MatrixSlice<, N, R, Dynamic, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive columns regularly skipping `step`\n columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive columns regularly skipping `step`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":453801,"byte_end":453885,"line_start":389,"line_end":389,"column_start":9,"column_end":93}},{"value":"/ columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":453894,"byte_end":453906,"line_start":390,"line_end":390,"column_start":9,"column_end":21}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":453915,"byte_end":453924,"line_start":391,"line_end":391,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21549},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":464741,"byte_end":464754,"line_start":654,"line_end":654,"column_start":6,"column_end":19},"name":"fixed_columns","qualname":"<Matrix<N, R, C, S>>::fixed_columns","value":"pub fn fixed_columns<CSlice: DimName>(&Self, usize)\n-> MatrixSlice<, N, R, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts a compile-time number of consecutive columns from this matrix.\n","sig":null,"attributes":[{"value":"/ Extracts a compile-time number of consecutive columns from this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":454181,"byte_end":454256,"line_start":398,"line_end":398,"column_start":9,"column_end":84}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":454265,"byte_end":454274,"line_start":399,"line_end":399,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21551},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":464761,"byte_end":464784,"line_start":655,"line_end":655,"column_start":6,"column_end":29},"name":"fixed_columns_with_step","qualname":"<Matrix<N, R, C, S>>::fixed_columns_with_step","value":"pub fn fixed_columns_with_step<CSlice: DimName>(&Self, usize, usize)\n-> MatrixSlice<, N, R, CSlice, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a compile-time number of columns regularly skipping\n `step` columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a compile-time number of columns regularly skipping","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":454498,"byte_end":454579,"line_start":406,"line_end":406,"column_start":9,"column_end":90}},{"value":"/ `step` columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":454588,"byte_end":454607,"line_start":407,"line_end":407,"column_start":9,"column_end":28}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":454616,"byte_end":454625,"line_start":408,"line_end":408,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21553},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":464791,"byte_end":464806,"line_start":656,"line_end":656,"column_start":6,"column_end":21},"name":"columns_generic","qualname":"<Matrix<N, R, C, S>>::columns_generic","value":"pub fn columns_generic<CSlice: Dim>(&Self, usize, CSlice)\n-> MatrixSlice<, N, R, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `ncols` columns. The number of columns may or may not be\n known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `ncols` columns. The number of columns may or may not be","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":454885,"byte_end":454971,"line_start":415,"line_end":415,"column_start":9,"column_end":95}},{"value":"/ known at compile-time.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":454980,"byte_end":455006,"line_start":416,"line_end":416,"column_start":9,"column_end":35}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":455015,"byte_end":455024,"line_start":417,"line_end":417,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21555},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":464813,"byte_end":464838,"line_start":657,"line_end":657,"column_start":6,"column_end":31},"name":"columns_generic_with_step","qualname":"<Matrix<N, R, C, S>>::columns_generic_with_step","value":"pub fn columns_generic_with_step<CSlice: Dim>(&Self, usize, CSlice, usize)\n-> MatrixSlice<, N, R, CSlice, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `ncols` columns skipping `step` columns. Both argument may\n or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `ncols` columns skipping `step` columns. Both argument may","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":455573,"byte_end":455661,"line_start":432,"line_end":432,"column_start":9,"column_end":97}},{"value":"/ or may not be values known at compile-time.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":455670,"byte_end":455717,"line_start":433,"line_end":433,"column_start":9,"column_end":56}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":455726,"byte_end":455735,"line_start":434,"line_end":434,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21557},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":464845,"byte_end":464850,"line_start":658,"line_end":658,"column_start":6,"column_end":11},"name":"slice","qualname":"<Matrix<N, R, C, S>>::slice","value":"pub fn slice(&Self, (usize, usize), (usize, usize))\n-> MatrixSlice<, N, Dynamic, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(irow, icol)` and with `(nrows, ncols)`\n consecutive elements.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(irow, icol)` and with `(nrows, ncols)`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":456547,"byte_end":456636,"line_start":457,"line_end":457,"column_start":9,"column_end":98}},{"value":"/ consecutive elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":456645,"byte_end":456670,"line_start":458,"line_end":458,"column_start":9,"column_end":34}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":456679,"byte_end":456688,"line_start":459,"line_end":459,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21558},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":464857,"byte_end":464873,"line_start":659,"line_end":659,"column_start":6,"column_end":22},"name":"slice_with_steps","qualname":"<Matrix<N, R, C, S>>::slice_with_steps","value":"pub fn slice_with_steps(&Self, (usize, usize), (usize, usize), (usize, usize))\n-> MatrixSlice<, N, Dynamic, Dynamic, Dynamic, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(start.0, start.1)` and with\n `(shape.0, shape.1)` components. Each row (resp. column) of the sliced matrix is\n separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of the\n original matrix.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(start.0, start.1)` and with","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":457168,"byte_end":457246,"line_start":473,"line_end":473,"column_start":9,"column_end":87}},{"value":"/ `(shape.0, shape.1)` components. Each row (resp. column) of the sliced matrix is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":457255,"byte_end":457339,"line_start":474,"line_end":474,"column_start":9,"column_end":93}},{"value":"/ separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":457348,"byte_end":457428,"line_start":475,"line_end":475,"column_start":9,"column_end":89}},{"value":"/ original matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":457437,"byte_end":457457,"line_start":476,"line_end":476,"column_start":9,"column_end":29}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":457466,"byte_end":457475,"line_start":477,"line_end":477,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21559},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":464880,"byte_end":464891,"line_start":660,"line_end":660,"column_start":6,"column_end":17},"name":"fixed_slice","qualname":"<Matrix<N, R, C, S>>::fixed_slice","value":"pub fn fixed_slice<RSlice, CSlice>(&Self, usize, usize)\n-> MatrixSlice<, N, RSlice, CSlice, S::RStride, S::CStride> where\nRSlice: DimName, CSlice: DimName","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(irow, icol)` and with `(R::dim(),\n CSlice::dim())` consecutive components.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(irow, icol)` and with `(R::dim(),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":457812,"byte_end":457896,"line_start":485,"line_end":485,"column_start":9,"column_end":93}},{"value":"/ CSlice::dim())` consecutive components.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":457905,"byte_end":457948,"line_start":486,"line_end":486,"column_start":9,"column_end":52}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":457957,"byte_end":457966,"line_start":487,"line_end":487,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21562},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":464898,"byte_end":464920,"line_start":661,"line_end":661,"column_start":6,"column_end":28},"name":"fixed_slice_with_steps","qualname":"<Matrix<N, R, C, S>>::fixed_slice_with_steps","value":"pub fn fixed_slice_with_steps<RSlice,\n                              CSlice>(&Self, (usize, usize), (usize, usize))\n-> MatrixSlice<, N, RSlice, CSlice, Dynamic, Dynamic> where RSlice: DimName,\nCSlice: DimName","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(start.0, start.1)` and with\n `(R::dim(), CSlice::dim())` components. Each row (resp. column) of the sliced\n matrix is separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of\n the original matrix.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(start.0, start.1)` and with","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":458539,"byte_end":458617,"line_start":502,"line_end":502,"column_start":9,"column_end":87}},{"value":"/ `(R::dim(), CSlice::dim())` components. Each row (resp. column) of the sliced","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":458626,"byte_end":458707,"line_start":503,"line_end":503,"column_start":9,"column_end":90}},{"value":"/ matrix is separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":458716,"byte_end":458802,"line_start":504,"line_end":504,"column_start":9,"column_end":95}},{"value":"/ the original matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":458811,"byte_end":458835,"line_start":505,"line_end":505,"column_start":9,"column_end":33}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":458844,"byte_end":458853,"line_start":506,"line_end":506,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21565},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":464927,"byte_end":464940,"line_start":662,"line_end":662,"column_start":6,"column_end":19},"name":"generic_slice","qualname":"<Matrix<N, R, C, S>>::generic_slice","value":"pub fn generic_slice<RSlice, CSlice>(&Self, (usize, usize), (RSlice, CSlice))\n-> MatrixSlice<, N, RSlice, CSlice, S::RStride, S::CStride> where RSlice: Dim,\nCSlice: Dim","parent":null,"children":[],"decl_id":null,"docs":" Creates a slice that may or may not have a fixed size and stride.\n","sig":null,"attributes":[{"value":"/ Creates a slice that may or may not have a fixed size and stride.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":459241,"byte_end":459310,"line_start":515,"line_end":515,"column_start":9,"column_end":78}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":459319,"byte_end":459328,"line_start":516,"line_end":516,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21568},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":464947,"byte_end":464971,"line_start":663,"line_end":663,"column_start":6,"column_end":30},"name":"generic_slice_with_steps","qualname":"<Matrix<N, R, C, S>>::generic_slice_with_steps","value":"pub fn generic_slice_with_steps<RSlice,\n                                CSlice>(&Self, (usize, usize),\n                                        (RSlice, CSlice), (usize, usize))\n-> MatrixSlice<, N, RSlice, CSlice, Dynamic, Dynamic> where RSlice: Dim,\nCSlice: Dim","parent":null,"children":[],"decl_id":null,"docs":" Creates a slice that may or may not have a fixed size and stride.\n","sig":null,"attributes":[{"value":"/ Creates a slice that may or may not have a fixed size and stride.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":459849,"byte_end":459918,"line_start":530,"line_end":530,"column_start":9,"column_end":78}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":459927,"byte_end":459936,"line_start":531,"line_end":531,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21571},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":464978,"byte_end":464993,"line_start":664,"line_end":664,"column_start":6,"column_end":21},"name":"rows_range_pair","qualname":"<Matrix<N, R, C, S>>::rows_range_pair","value":"pub fn rows_range_pair<Range1: SliceRange<R>,\n                       Range2: SliceRange<R>>(&Self, Range1, Range2)\n->\n    (MatrixSlice<, N, Range1::Size, C, S::RStride, S::CStride>,\n     MatrixSlice<, N, Range2::Size, C, S::RStride, S::CStride>)","parent":null,"children":[],"decl_id":null,"docs":" Splits this NxM matrix into two parts delimited by two ranges.","sig":null,"attributes":[{"value":"/ Splits this NxM matrix into two parts delimited by two ranges.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":460959,"byte_end":461025,"line_start":557,"line_end":557,"column_start":9,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":461034,"byte_end":461037,"line_start":558,"line_end":558,"column_start":9,"column_end":12}},{"value":"/ Panics if the ranges overlap or if the first range is empty.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":461046,"byte_end":461110,"line_start":559,"line_end":559,"column_start":9,"column_end":73}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":461119,"byte_end":461128,"line_start":560,"line_end":560,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21574},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":465000,"byte_end":465018,"line_start":665,"line_end":665,"column_start":6,"column_end":24},"name":"columns_range_pair","qualname":"<Matrix<N, R, C, S>>::columns_range_pair","value":"pub fn columns_range_pair<Range1: SliceRange<C>,\n                          Range2: SliceRange<C>>(&Self, Range1, Range2)\n->\n    (MatrixSlice<, N, R, Range1::Size, S::RStride, S::CStride>,\n     MatrixSlice<, N, R, Range2::Size, S::RStride, S::CStride>)","parent":null,"children":[],"decl_id":null,"docs":" Splits this NxM matrix into two parts delimited by two ranges.","sig":null,"attributes":[{"value":"/ Splits this NxM matrix into two parts delimited by two ranges.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":462472,"byte_end":462538,"line_start":593,"line_end":593,"column_start":9,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":462547,"byte_end":462550,"line_start":594,"line_end":594,"column_start":9,"column_end":12}},{"value":"/ Panics if the ranges overlap or if the first range is empty.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":462559,"byte_end":462623,"line_start":595,"line_end":595,"column_start":9,"column_end":73}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":462632,"byte_end":462641,"line_start":596,"line_end":596,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21577},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":465289,"byte_end":465296,"line_start":672,"line_end":672,"column_start":6,"column_end":13},"name":"row_mut","qualname":"<Matrix<N, R, C, S>>::row_mut","value":"pub fn row_mut(&mut Self, usize)\n-> MatrixSliceMut<, N, U1, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the i-th row of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the i-th row of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":449400,"byte_end":449459,"line_start":282,"line_end":282,"column_start":9,"column_end":68}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":449468,"byte_end":449477,"line_start":283,"line_end":283,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21578},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":465303,"byte_end":465315,"line_start":673,"line_end":673,"column_start":6,"column_end":18},"name":"row_part_mut","qualname":"<Matrix<N, R, C, S>>::row_part_mut","value":"pub fn row_part_mut(&mut Self, usize, usize)\n-> MatrixSliceMut<, N, U1, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the `n` first elements of the i-th row of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the `n` first elements of the i-th row of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":449626,"byte_end":449711,"line_start":288,"line_end":288,"column_start":9,"column_end":94}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":449720,"byte_end":449729,"line_start":289,"line_end":289,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21579},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":465322,"byte_end":465330,"line_start":674,"line_end":674,"column_start":6,"column_end":14},"name":"rows_mut","qualname":"<Matrix<N, R, C, S>>::rows_mut","value":"pub fn rows_mut(&mut Self, usize, usize)\n-> MatrixSliceMut<, N, Dynamic, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive rows.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":449924,"byte_end":449980,"line_start":294,"line_end":294,"column_start":9,"column_end":65}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":449989,"byte_end":449998,"line_start":295,"line_end":295,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21580},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":465337,"byte_end":465355,"line_start":675,"line_end":675,"column_start":6,"column_end":24},"name":"rows_with_step_mut","qualname":"<Matrix<N, R, C, S>>::rows_with_step_mut","value":"pub fn rows_with_step_mut(&mut Self, usize, usize, usize)\n-> MatrixSliceMut<, N, Dynamic, C, Dynamic, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive rows regularly skipping `step` rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive rows regularly skipping `step` rows.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":450213,"byte_end":450300,"line_start":302,"line_end":302,"column_start":9,"column_end":96}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":450309,"byte_end":450318,"line_start":303,"line_end":303,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21581},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":465362,"byte_end":465376,"line_start":676,"line_end":676,"column_start":6,"column_end":20},"name":"fixed_rows_mut","qualname":"<Matrix<N, R, C, S>>::fixed_rows_mut","value":"pub fn fixed_rows_mut<RSlice: DimName>(&mut Self, usize)\n-> MatrixSliceMut<, N, RSlice, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts a compile-time number of consecutive rows from this matrix.\n","sig":null,"attributes":[{"value":"/ Extracts a compile-time number of consecutive rows from this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":450569,"byte_end":450641,"line_start":310,"line_end":310,"column_start":9,"column_end":81}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":450650,"byte_end":450659,"line_start":311,"line_end":311,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21583},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":465383,"byte_end":465407,"line_start":677,"line_end":677,"column_start":6,"column_end":30},"name":"fixed_rows_with_step_mut","qualname":"<Matrix<N, R, C, S>>::fixed_rows_with_step_mut","value":"pub fn fixed_rows_with_step_mut<RSlice: DimName>(&mut Self, usize, usize)\n-> MatrixSliceMut<, N, RSlice, C, Dynamic, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a compile-time number of rows regularly skipping `step`\n rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a compile-time number of rows regularly skipping `step`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":450877,"byte_end":450962,"line_start":318,"line_end":318,"column_start":9,"column_end":94}},{"value":"/ rows.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":450971,"byte_end":450980,"line_start":319,"line_end":319,"column_start":9,"column_end":18}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":450989,"byte_end":450998,"line_start":320,"line_end":320,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21585},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":465414,"byte_end":465430,"line_start":678,"line_end":678,"column_start":6,"column_end":22},"name":"rows_generic_mut","qualname":"<Matrix<N, R, C, S>>::rows_generic_mut","value":"pub fn rows_generic_mut<RSlice: Dim>(&mut Self, usize, RSlice)\n-> MatrixSliceMut<, N, RSlice, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both\n argument may or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":451252,"byte_end":451331,"line_start":327,"line_end":327,"column_start":9,"column_end":88}},{"value":"/ argument may or may not be values known at compile-time.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":451340,"byte_end":451400,"line_start":328,"line_end":328,"column_start":9,"column_end":69}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":451409,"byte_end":451418,"line_start":329,"line_end":329,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21587},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":465437,"byte_end":465463,"line_start":679,"line_end":679,"column_start":6,"column_end":32},"name":"rows_generic_with_step_mut","qualname":"<Matrix<N, R, C, S>>::rows_generic_with_step_mut","value":"pub fn rows_generic_with_step_mut<RSlice>(&mut Self, usize, RSlice, usize)\n-> MatrixSliceMut<, N, RSlice, C, Dynamic, S::CStride> where RSlice: Dim","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both\n argument may or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":451966,"byte_end":452045,"line_start":344,"line_end":344,"column_start":9,"column_end":88}},{"value":"/ argument may or may not be values known at compile-time.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":452054,"byte_end":452114,"line_start":345,"line_end":345,"column_start":9,"column_end":69}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":452123,"byte_end":452132,"line_start":346,"line_end":346,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21589},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":465470,"byte_end":465480,"line_start":680,"line_end":680,"column_start":6,"column_end":16},"name":"column_mut","qualname":"<Matrix<N, R, C, S>>::column_mut","value":"pub fn column_mut(&mut Self, usize)\n-> MatrixSliceMut<, N, R, U1, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the i-th column of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the i-th column of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":452964,"byte_end":453026,"line_start":369,"line_end":369,"column_start":9,"column_end":71}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":453035,"byte_end":453044,"line_start":370,"line_end":370,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21590},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":465487,"byte_end":465502,"line_start":681,"line_end":681,"column_start":6,"column_end":21},"name":"column_part_mut","qualname":"<Matrix<N, R, C, S>>::column_part_mut","value":"pub fn column_part_mut(&mut Self, usize, usize)\n-> MatrixSliceMut<, N, Dynamic, U1, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the `n` first elements of the i-th column of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the `n` first elements of the i-th column of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":453199,"byte_end":453287,"line_start":375,"line_end":375,"column_start":9,"column_end":97}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":453296,"byte_end":453305,"line_start":376,"line_end":376,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21591},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":465509,"byte_end":465520,"line_start":682,"line_end":682,"column_start":6,"column_end":17},"name":"columns_mut","qualname":"<Matrix<N, R, C, S>>::columns_mut","value":"pub fn columns_mut(&mut Self, usize, usize)\n-> MatrixSliceMut<, N, R, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":453503,"byte_end":453562,"line_start":381,"line_end":381,"column_start":9,"column_end":68}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":453571,"byte_end":453580,"line_start":382,"line_end":382,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21592},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":465527,"byte_end":465548,"line_start":683,"line_end":683,"column_start":6,"column_end":27},"name":"columns_with_step_mut","qualname":"<Matrix<N, R, C, S>>::columns_with_step_mut","value":"pub fn columns_with_step_mut(&mut Self, usize, usize, usize)\n-> MatrixSliceMut<, N, R, Dynamic, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive columns regularly skipping `step`\n columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive columns regularly skipping `step`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":453801,"byte_end":453885,"line_start":389,"line_end":389,"column_start":9,"column_end":93}},{"value":"/ columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":453894,"byte_end":453906,"line_start":390,"line_end":390,"column_start":9,"column_end":21}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":453915,"byte_end":453924,"line_start":391,"line_end":391,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21593},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":465555,"byte_end":465572,"line_start":684,"line_end":684,"column_start":6,"column_end":23},"name":"fixed_columns_mut","qualname":"<Matrix<N, R, C, S>>::fixed_columns_mut","value":"pub fn fixed_columns_mut<CSlice: DimName>(&mut Self, usize)\n-> MatrixSliceMut<, N, R, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts a compile-time number of consecutive columns from this matrix.\n","sig":null,"attributes":[{"value":"/ Extracts a compile-time number of consecutive columns from this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":454181,"byte_end":454256,"line_start":398,"line_end":398,"column_start":9,"column_end":84}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":454265,"byte_end":454274,"line_start":399,"line_end":399,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21595},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":465579,"byte_end":465606,"line_start":685,"line_end":685,"column_start":6,"column_end":33},"name":"fixed_columns_with_step_mut","qualname":"<Matrix<N, R, C, S>>::fixed_columns_with_step_mut","value":"pub fn fixed_columns_with_step_mut<CSlice: DimName>(&mut Self, usize, usize)\n-> MatrixSliceMut<, N, R, CSlice, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a compile-time number of columns regularly skipping\n `step` columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a compile-time number of columns regularly skipping","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":454498,"byte_end":454579,"line_start":406,"line_end":406,"column_start":9,"column_end":90}},{"value":"/ `step` columns.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":454588,"byte_end":454607,"line_start":407,"line_end":407,"column_start":9,"column_end":28}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":454616,"byte_end":454625,"line_start":408,"line_end":408,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21597},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":465613,"byte_end":465632,"line_start":686,"line_end":686,"column_start":6,"column_end":25},"name":"columns_generic_mut","qualname":"<Matrix<N, R, C, S>>::columns_generic_mut","value":"pub fn columns_generic_mut<CSlice: Dim>(&mut Self, usize, CSlice)\n-> MatrixSliceMut<, N, R, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `ncols` columns. The number of columns may or may not be\n known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `ncols` columns. The number of columns may or may not be","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":454885,"byte_end":454971,"line_start":415,"line_end":415,"column_start":9,"column_end":95}},{"value":"/ known at compile-time.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":454980,"byte_end":455006,"line_start":416,"line_end":416,"column_start":9,"column_end":35}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":455015,"byte_end":455024,"line_start":417,"line_end":417,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21599},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":465639,"byte_end":465668,"line_start":687,"line_end":687,"column_start":6,"column_end":35},"name":"columns_generic_with_step_mut","qualname":"<Matrix<N, R, C, S>>::columns_generic_with_step_mut","value":"pub fn columns_generic_with_step_mut<CSlice: Dim>(&mut Self, usize, CSlice,\n                                                  usize)\n-> MatrixSliceMut<, N, R, CSlice, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `ncols` columns skipping `step` columns. Both argument may\n or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `ncols` columns skipping `step` columns. Both argument may","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":455573,"byte_end":455661,"line_start":432,"line_end":432,"column_start":9,"column_end":97}},{"value":"/ or may not be values known at compile-time.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":455670,"byte_end":455717,"line_start":433,"line_end":433,"column_start":9,"column_end":56}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":455726,"byte_end":455735,"line_start":434,"line_end":434,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21601},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":465675,"byte_end":465684,"line_start":688,"line_end":688,"column_start":6,"column_end":15},"name":"slice_mut","qualname":"<Matrix<N, R, C, S>>::slice_mut","value":"pub fn slice_mut(&mut Self, (usize, usize), (usize, usize))\n-> MatrixSliceMut<, N, Dynamic, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(irow, icol)` and with `(nrows, ncols)`\n consecutive elements.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(irow, icol)` and with `(nrows, ncols)`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":456547,"byte_end":456636,"line_start":457,"line_end":457,"column_start":9,"column_end":98}},{"value":"/ consecutive elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":456645,"byte_end":456670,"line_start":458,"line_end":458,"column_start":9,"column_end":34}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":456679,"byte_end":456688,"line_start":459,"line_end":459,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21602},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":465691,"byte_end":465711,"line_start":689,"line_end":689,"column_start":6,"column_end":26},"name":"slice_with_steps_mut","qualname":"<Matrix<N, R, C, S>>::slice_with_steps_mut","value":"pub fn slice_with_steps_mut(&mut Self, (usize, usize), (usize, usize),\n                            (usize, usize))\n-> MatrixSliceMut<, N, Dynamic, Dynamic, Dynamic, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(start.0, start.1)` and with\n `(shape.0, shape.1)` components. Each row (resp. column) of the sliced matrix is\n separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of the\n original matrix.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(start.0, start.1)` and with","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":457168,"byte_end":457246,"line_start":473,"line_end":473,"column_start":9,"column_end":87}},{"value":"/ `(shape.0, shape.1)` components. Each row (resp. column) of the sliced matrix is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":457255,"byte_end":457339,"line_start":474,"line_end":474,"column_start":9,"column_end":93}},{"value":"/ separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":457348,"byte_end":457428,"line_start":475,"line_end":475,"column_start":9,"column_end":89}},{"value":"/ original matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":457437,"byte_end":457457,"line_start":476,"line_end":476,"column_start":9,"column_end":29}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":457466,"byte_end":457475,"line_start":477,"line_end":477,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21603},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":465718,"byte_end":465733,"line_start":690,"line_end":690,"column_start":6,"column_end":21},"name":"fixed_slice_mut","qualname":"<Matrix<N, R, C, S>>::fixed_slice_mut","value":"pub fn fixed_slice_mut<RSlice, CSlice>(&mut Self, usize, usize)\n-> MatrixSliceMut<, N, RSlice, CSlice, S::RStride, S::CStride> where\nRSlice: DimName, CSlice: DimName","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(irow, icol)` and with `(R::dim(),\n CSlice::dim())` consecutive components.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(irow, icol)` and with `(R::dim(),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":457812,"byte_end":457896,"line_start":485,"line_end":485,"column_start":9,"column_end":93}},{"value":"/ CSlice::dim())` consecutive components.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":457905,"byte_end":457948,"line_start":486,"line_end":486,"column_start":9,"column_end":52}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":457957,"byte_end":457966,"line_start":487,"line_end":487,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21606},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":465740,"byte_end":465766,"line_start":691,"line_end":691,"column_start":6,"column_end":32},"name":"fixed_slice_with_steps_mut","qualname":"<Matrix<N, R, C, S>>::fixed_slice_with_steps_mut","value":"pub fn fixed_slice_with_steps_mut<RSlice,\n                                  CSlice>(&mut Self, (usize, usize),\n                                          (usize, usize))\n-> MatrixSliceMut<, N, RSlice, CSlice, Dynamic, Dynamic> where\nRSlice: DimName, CSlice: DimName","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(start.0, start.1)` and with\n `(R::dim(), CSlice::dim())` components. Each row (resp. column) of the sliced\n matrix is separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of\n the original matrix.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(start.0, start.1)` and with","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":458539,"byte_end":458617,"line_start":502,"line_end":502,"column_start":9,"column_end":87}},{"value":"/ `(R::dim(), CSlice::dim())` components. Each row (resp. column) of the sliced","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":458626,"byte_end":458707,"line_start":503,"line_end":503,"column_start":9,"column_end":90}},{"value":"/ matrix is separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":458716,"byte_end":458802,"line_start":504,"line_end":504,"column_start":9,"column_end":95}},{"value":"/ the original matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":458811,"byte_end":458835,"line_start":505,"line_end":505,"column_start":9,"column_end":33}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":458844,"byte_end":458853,"line_start":506,"line_end":506,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21609},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":465773,"byte_end":465790,"line_start":692,"line_end":692,"column_start":6,"column_end":23},"name":"generic_slice_mut","qualname":"<Matrix<N, R, C, S>>::generic_slice_mut","value":"pub fn generic_slice_mut<RSlice,\n                         CSlice>(&mut Self, (usize, usize), (RSlice, CSlice))\n-> MatrixSliceMut<, N, RSlice, CSlice, S::RStride, S::CStride> where\nRSlice: Dim, CSlice: Dim","parent":null,"children":[],"decl_id":null,"docs":" Creates a slice that may or may not have a fixed size and stride.\n","sig":null,"attributes":[{"value":"/ Creates a slice that may or may not have a fixed size and stride.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":459241,"byte_end":459310,"line_start":515,"line_end":515,"column_start":9,"column_end":78}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":459319,"byte_end":459328,"line_start":516,"line_end":516,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21612},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":465797,"byte_end":465825,"line_start":693,"line_end":693,"column_start":6,"column_end":34},"name":"generic_slice_with_steps_mut","qualname":"<Matrix<N, R, C, S>>::generic_slice_with_steps_mut","value":"pub fn generic_slice_with_steps_mut<RSlice,\n                                    CSlice>(&mut Self, (usize, usize),\n                                            (RSlice, CSlice), (usize, usize))\n-> MatrixSliceMut<, N, RSlice, CSlice, Dynamic, Dynamic> where RSlice: Dim,\nCSlice: Dim","parent":null,"children":[],"decl_id":null,"docs":" Creates a slice that may or may not have a fixed size and stride.\n","sig":null,"attributes":[{"value":"/ Creates a slice that may or may not have a fixed size and stride.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":459849,"byte_end":459918,"line_start":530,"line_end":530,"column_start":9,"column_end":78}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":459927,"byte_end":459936,"line_start":531,"line_end":531,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21615},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":465832,"byte_end":465851,"line_start":694,"line_end":694,"column_start":6,"column_end":25},"name":"rows_range_pair_mut","qualname":"<Matrix<N, R, C, S>>::rows_range_pair_mut","value":"pub fn rows_range_pair_mut<Range1: SliceRange<R>,\n                           Range2: SliceRange<R>>(&mut Self, Range1, Range2)\n->\n    (MatrixSliceMut<, N, Range1::Size, C, S::RStride, S::CStride>,\n     MatrixSliceMut<, N, Range2::Size, C, S::RStride, S::CStride>)","parent":null,"children":[],"decl_id":null,"docs":" Splits this NxM matrix into two parts delimited by two ranges.","sig":null,"attributes":[{"value":"/ Splits this NxM matrix into two parts delimited by two ranges.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":460959,"byte_end":461025,"line_start":557,"line_end":557,"column_start":9,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":461034,"byte_end":461037,"line_start":558,"line_end":558,"column_start":9,"column_end":12}},{"value":"/ Panics if the ranges overlap or if the first range is empty.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":461046,"byte_end":461110,"line_start":559,"line_end":559,"column_start":9,"column_end":73}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":461119,"byte_end":461128,"line_start":560,"line_end":560,"column_start":9,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":21618},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":465858,"byte_end":465880,"line_start":695,"line_end":695,"column_start":6,"column_end":28},"name":"columns_range_pair_mut","qualname":"<Matrix<N, R, C, S>>::columns_range_pair_mut","value":"pub fn columns_range_pair_mut<Range1: SliceRange<C>,\n                              Range2: SliceRange<C>>(&mut Self, Range1,\n                                                     Range2)\n->\n    (MatrixSliceMut<, N, R, Range1::Size, S::RStride, S::CStride>,\n     MatrixSliceMut<, N, R, Range2::Size, S::RStride, S::CStride>)","parent":null,"children":[],"decl_id":null,"docs":" Splits this NxM matrix into two parts delimited by two ranges.","sig":null,"attributes":[{"value":"/ Splits this NxM matrix into two parts delimited by two ranges.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":462472,"byte_end":462538,"line_start":593,"line_end":593,"column_start":9,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":462547,"byte_end":462550,"line_start":594,"line_end":594,"column_start":9,"column_end":12}},{"value":"/ Panics if the ranges overlap or if the first range is empty.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":462559,"byte_end":462623,"line_start":595,"line_end":595,"column_start":9,"column_end":73}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":462632,"byte_end":462641,"line_start":596,"line_end":596,"column_start":9,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":4329},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":466188,"byte_end":466198,"line_start":705,"line_end":705,"column_start":11,"column_end":21},"name":"SliceRange","qualname":"::base::matrix_slice::SliceRange","value":"SliceRange<D: Dim>","parent":null,"children":[{"krate":0,"index":4331},{"krate":0,"index":4332},{"krate":0,"index":4333},{"krate":0,"index":4334}],"decl_id":null,"docs":" A range with a size that may be known at compile-time.","sig":null,"attributes":[{"value":"/ A range with a size that may be known at compile-time.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":465886,"byte_end":465944,"line_start":698,"line_end":698,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":465945,"byte_end":465948,"line_start":699,"line_end":699,"column_start":1,"column_end":4}},{"value":"/ This may be:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":465949,"byte_end":465965,"line_start":700,"line_end":700,"column_start":1,"column_end":17}},{"value":"/ * A single `usize` index, e.g., `4`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":465966,"byte_end":466005,"line_start":701,"line_end":701,"column_start":1,"column_end":40}},{"value":"/ * A left-open range `std::ops::RangeTo`, e.g., `.. 4`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":466006,"byte_end":466063,"line_start":702,"line_end":702,"column_start":1,"column_end":58}},{"value":"/ * A right-open range `std::ops::RangeFrom`, e.g., `4 ..`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":466064,"byte_end":466124,"line_start":703,"line_end":703,"column_start":1,"column_end":61}},{"value":"/ * A full range `std::ops::RangeFull`, e.g., `..`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":466125,"byte_end":466177,"line_start":704,"line_end":704,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":4331},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":466279,"byte_end":466283,"line_start":707,"line_end":707,"column_start":10,"column_end":14},"name":"Size","qualname":"::base::matrix_slice::SliceRange::Size","value":"type Size: Dim;","parent":{"krate":0,"index":4329},"children":[],"decl_id":null,"docs":" Type of the range size. May be a type-level integer.\n","sig":null,"attributes":[{"value":"/ Type of the range size. May be a type-level integer.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":466213,"byte_end":466269,"line_start":706,"line_end":706,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4332},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":466336,"byte_end":466341,"line_start":710,"line_end":710,"column_start":8,"column_end":13},"name":"begin","qualname":"::base::matrix_slice::SliceRange::begin","value":"pub fn begin(&Self, D) -> usize","parent":{"krate":0,"index":4329},"children":[],"decl_id":null,"docs":" The start index of the range.\n","sig":null,"attributes":[{"value":"/ The start index of the range.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":466295,"byte_end":466328,"line_start":709,"line_end":709,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":4333},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":466513,"byte_end":466516,"line_start":713,"line_end":713,"column_start":8,"column_end":11},"name":"end","qualname":"::base::matrix_slice::SliceRange::end","value":"pub fn end(&Self, D) -> usize","parent":{"krate":0,"index":4329},"children":[],"decl_id":null,"docs":" The index immediately after the last index inside of the range.\n","sig":null,"attributes":[{"value":"/ The index immediately after the last index inside of the range.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":466438,"byte_end":466505,"line_start":712,"line_end":712,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":4334},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":466627,"byte_end":466631,"line_start":715,"line_end":715,"column_start":8,"column_end":12},"name":"size","qualname":"::base::matrix_slice::SliceRange::size","value":"pub fn size(&Self, D) -> Self::Size","parent":{"krate":0,"index":4329},"children":[],"decl_id":null,"docs":" The number of elements of the range, i.e., `self.end - self.begin`.\n","sig":null,"attributes":[{"value":"/ The number of elements of the range, i.e., `self.end - self.begin`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":466548,"byte_end":466619,"line_start":714,"line_end":714,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":4370},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":468661,"byte_end":468672,"line_start":819,"line_end":819,"column_start":12,"column_end":23},"name":"slice_range","qualname":"<Matrix<N, R, C, S>>::slice_range","value":"pub fn slice_range<RowRange, ColRange>(&Self, RowRange, ColRange)\n-> MatrixSlice<, N, RowRange::Size, ColRange::Size, S::RStride, S::CStride>\nwhere RowRange: SliceRange<R>, ColRange: SliceRange<C>","parent":null,"children":[],"decl_id":null,"docs":" Slices a sub-matrix containing the rows indexed by the range `rows` and the columns indexed\n by the range `cols`.\n","sig":null,"attributes":[{"value":"/ Slices a sub-matrix containing the rows indexed by the range `rows` and the columns indexed","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":468511,"byte_end":468606,"line_start":816,"line_end":816,"column_start":5,"column_end":100}},{"value":"/ by the range `cols`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":468611,"byte_end":468635,"line_start":817,"line_end":817,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":468640,"byte_end":468649,"line_start":818,"line_end":818,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4373},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":469206,"byte_end":469216,"line_start":837,"line_end":837,"column_start":12,"column_end":22},"name":"rows_range","qualname":"<Matrix<N, R, C, S>>::rows_range","value":"pub fn rows_range<RowRange: SliceRange<R>>(&Self, RowRange)\n-> MatrixSlice<, N, RowRange::Size, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slice containing all the rows indexed by the range `rows`.\n","sig":null,"attributes":[{"value":"/ Slice containing all the rows indexed by the range `rows`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":469118,"byte_end":469180,"line_start":835,"line_end":835,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":469185,"byte_end":469194,"line_start":836,"line_end":836,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4375},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":469488,"byte_end":469501,"line_start":846,"line_end":846,"column_start":12,"column_end":25},"name":"columns_range","qualname":"<Matrix<N, R, C, S>>::columns_range","value":"pub fn columns_range<ColRange: SliceRange<C>>(&Self, ColRange)\n-> MatrixSlice<, N, R, ColRange::Size, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slice containing all the columns indexed by the range `rows`.\n","sig":null,"attributes":[{"value":"/ Slice containing all the columns indexed by the range `rows`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":469397,"byte_end":469462,"line_start":844,"line_end":844,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":469467,"byte_end":469476,"line_start":845,"line_end":845,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4382},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":469999,"byte_end":470014,"line_start":859,"line_end":859,"column_start":12,"column_end":27},"name":"slice_range_mut","qualname":"<Matrix<N, R, C, S>>::slice_range_mut","value":"pub fn slice_range_mut<RowRange, ColRange>(&mut Self, RowRange, ColRange)\n-> MatrixSliceMut<, N, RowRange::Size, ColRange::Size, S::RStride, S::CStride>\nwhere RowRange: SliceRange<R>, ColRange: SliceRange<C>","parent":null,"children":[],"decl_id":null,"docs":" Slices a mutable sub-matrix containing the rows indexed by the range `rows` and the columns\n indexed by the range `cols`.\n","sig":null,"attributes":[{"value":"/ Slices a mutable sub-matrix containing the rows indexed by the range `rows` and the columns","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":469855,"byte_end":469950,"line_start":857,"line_end":857,"column_start":5,"column_end":100}},{"value":"/ indexed by the range `cols`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":469955,"byte_end":469987,"line_start":858,"line_end":858,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4385},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":470559,"byte_end":470573,"line_start":877,"line_end":877,"column_start":12,"column_end":26},"name":"rows_range_mut","qualname":"<Matrix<N, R, C, S>>::rows_range_mut","value":"pub fn rows_range_mut<RowRange: SliceRange<R>>(&mut Self, RowRange)\n-> MatrixSliceMut<, N, RowRange::Size, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slice containing all the rows indexed by the range `rows`.\n","sig":null,"attributes":[{"value":"/ Slice containing all the rows indexed by the range `rows`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":470471,"byte_end":470533,"line_start":875,"line_end":875,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":470538,"byte_end":470547,"line_start":876,"line_end":876,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4387},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":470856,"byte_end":470873,"line_start":886,"line_end":886,"column_start":12,"column_end":29},"name":"columns_range_mut","qualname":"<Matrix<N, R, C, S>>::columns_range_mut","value":"pub fn columns_range_mut<ColRange: SliceRange<C>>(&mut Self, ColRange)\n-> MatrixSliceMut<, N, R, ColRange::Size, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slice containing all the columns indexed by the range `cols`.\n","sig":null,"attributes":[{"value":"/ Slice containing all the columns indexed by the range `cols`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":470765,"byte_end":470830,"line_start":884,"line_end":884,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":470835,"byte_end":470844,"line_start":885,"line_end":885,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":4469},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":472285,"byte_end":472289,"line_start":19,"line_end":19,"column_start":11,"column_end":15},"name":"Norm","qualname":"::base::norm::Norm","value":"Norm<N: SimdComplexField>","parent":null,"children":[{"krate":0,"index":4471},{"krate":0,"index":4475}],"decl_id":null,"docs":" A trait for abstract matrix norms.","sig":null,"attributes":[{"value":"/ A trait for abstract matrix norms.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":472177,"byte_end":472215,"line_start":16,"line_end":16,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":472216,"byte_end":472219,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This may be moved to the alga crate in the future.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":472220,"byte_end":472274,"line_start":18,"line_end":18,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4471},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":472365,"byte_end":472369,"line_start":21,"line_end":21,"column_start":8,"column_end":12},"name":"norm","qualname":"::base::norm::Norm::norm","value":"pub fn norm<R, C, S>(&Self, &Matrix<N, R, C, S>) -> N::SimdRealField where\nR: Dim, C: Dim, S: Storage<N, R, C>","parent":{"krate":0,"index":4469},"children":[],"decl_id":null,"docs":" Apply this norm to the given matrix.\n","sig":null,"attributes":[{"value":"/ Apply this norm to the given matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":472317,"byte_end":472357,"line_start":20,"line_end":20,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":4475},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":472615,"byte_end":472630,"line_start":27,"line_end":27,"column_start":8,"column_end":23},"name":"metric_distance","qualname":"::base::norm::Norm::metric_distance","value":"pub fn metric_distance<R1, C1, S1, R2, C2,\n                       S2>(&Self, &Matrix<N, R1, C1, S1>,\n                           &Matrix<N, R2, C2, S2>) -> N::SimdRealField where\nR1: Dim, C1: Dim, S1: Storage<N, R1, C1>, R2: Dim, C2: Dim,\nS2: Storage<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R1, R2> +\nSameNumberOfColumns<C1, C2>","parent":{"krate":0,"index":4469},"children":[],"decl_id":null,"docs":" Use the metric induced by this norm to compute the metric distance between the two given matrices.\n","sig":null,"attributes":[{"value":"/ Use the metric induced by this norm to compute the metric distance between the two given matrices.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":472505,"byte_end":472607,"line_start":26,"line_end":26,"column_start":5,"column_end":107}}]},{"kind":"Struct","id":{"krate":0,"index":4482},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":473026,"byte_end":473039,"line_start":43,"line_end":43,"column_start":12,"column_end":25},"name":"EuclideanNorm","qualname":"::base::norm::EuclideanNorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" Euclidean norm.\n","sig":null,"attributes":[{"value":"/ Euclidean norm.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":472995,"byte_end":473014,"line_start":42,"line_end":42,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4484},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":473065,"byte_end":473071,"line_start":45,"line_end":45,"column_start":12,"column_end":18},"name":"LpNorm","qualname":"::base::norm::LpNorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" Lp norm.\n","sig":null,"attributes":[{"value":"/ Lp norm.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":473041,"byte_end":473053,"line_start":44,"line_end":44,"column_start":1,"column_end":13}}]},{"kind":"Field","id":{"krate":0,"index":4486},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":473072,"byte_end":473079,"line_start":45,"line_end":45,"column_start":19,"column_end":26},"name":"0","qualname":"::base::norm::LpNorm::0","value":"i32","parent":{"krate":0,"index":4484},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4487},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":473173,"byte_end":473184,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"UniformNorm","qualname":"::base::norm::UniformNorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" L-infinite norm aka. Chebytchev norm aka. uniform norm aka. suppremum norm.\n","sig":null,"attributes":[{"value":"/ L-infinite norm aka. Chebytchev norm aka. uniform norm aka. suppremum norm.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":473082,"byte_end":473161,"line_start":46,"line_end":46,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":4538},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":476257,"byte_end":476269,"line_start":161,"line_end":161,"column_start":12,"column_end":24},"name":"norm_squared","qualname":"<Matrix<N, R, C, S>>::norm_squared","value":"pub fn norm_squared(&Self) -> N::SimdRealField where N: SimdComplexField","parent":null,"children":[],"decl_id":null,"docs":" The squared L2 norm of this vector.\n","sig":null,"attributes":[{"value":"/ The squared L2 norm of this vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":476192,"byte_end":476231,"line_start":159,"line_end":159,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":476236,"byte_end":476245,"line_start":160,"line_end":160,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4539},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":476659,"byte_end":476663,"line_start":179,"line_end":179,"column_start":12,"column_end":16},"name":"norm","qualname":"<Matrix<N, R, C, S>>::norm","value":"pub fn norm(&Self) -> N::SimdRealField where N: SimdComplexField","parent":null,"children":[],"decl_id":null,"docs":" The L2 norm of this matrix.","sig":null,"attributes":[{"value":"/ The L2 norm of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":476544,"byte_end":476575,"line_start":175,"line_end":175,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":476580,"byte_end":476583,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Use `.apply_norm` to apply a custom norm.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":476588,"byte_end":476633,"line_start":177,"line_end":177,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":476638,"byte_end":476647,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4540},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":476979,"byte_end":476994,"line_start":190,"line_end":190,"column_start":12,"column_end":27},"name":"metric_distance","qualname":"<Matrix<N, R, C, S>>::metric_distance","value":"pub fn metric_distance<R2, C2, S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> N::SimdRealField where N: SimdComplexField, R2: Dim, C2: Dim,\nS2: Storage<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R, R2> +\nSameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" Compute the distance between `self` and `rhs` using the metric induced by the euclidean norm.","sig":null,"attributes":[{"value":"/ Compute the distance between `self` and `rhs` using the metric induced by the euclidean norm.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":476787,"byte_end":476884,"line_start":186,"line_end":186,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":476889,"byte_end":476892,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Use `.apply_metric_distance` to apply a custom norm.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":476897,"byte_end":476953,"line_start":188,"line_end":188,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":476958,"byte_end":476967,"line_start":189,"line_end":189,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4544},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":477748,"byte_end":477758,"line_start":214,"line_end":214,"column_start":12,"column_end":22},"name":"apply_norm","qualname":"<Matrix<N, R, C, S>>::apply_norm","value":"pub fn apply_norm<impl Norm<N>: Norm<N>>(&Self, &impl Norm<N>)\n-> N::SimdRealField where N: SimdComplexField","parent":null,"children":[],"decl_id":null,"docs":" Uses the given `norm` to compute the norm of `self`.","sig":null,"attributes":[{"value":"/ Uses the given `norm` to compute the norm of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":477320,"byte_end":477376,"line_start":201,"line_end":201,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":477381,"byte_end":477384,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":477389,"byte_end":477402,"line_start":203,"line_end":203,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":477407,"byte_end":477410,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":477415,"byte_end":477422,"line_start":205,"line_end":205,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, UniformNorm, LpNorm, EuclideanNorm};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":477427,"byte_end":477493,"line_start":206,"line_end":206,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":477498,"byte_end":477501,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ let v = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":477506,"byte_end":477546,"line_start":208,"line_end":208,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(v.apply_norm(&UniformNorm), 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":477551,"byte_end":477599,"line_start":209,"line_end":209,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(v.apply_norm(&LpNorm(1)), 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":477604,"byte_end":477650,"line_start":210,"line_end":210,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(v.apply_norm(&EuclideanNorm), v.norm());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":477655,"byte_end":477710,"line_start":211,"line_end":211,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":477715,"byte_end":477722,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":477727,"byte_end":477736,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4546},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":478495,"byte_end":478516,"line_start":236,"line_end":236,"column_start":12,"column_end":33},"name":"apply_metric_distance","qualname":"<Matrix<N, R, C, S>>::apply_metric_distance","value":"pub fn apply_metric_distance<R2, C2, S2,\n                             impl Norm<N>: Norm<N>>(&Self,\n                                                    &Matrix<N, R2, C2, S2>,\n                                                    &impl Norm<N>)\n-> N::SimdRealField where N: SimdComplexField, R2: Dim, C2: Dim,\nS2: Storage<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R, R2> +\nSameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" Uses the metric induced by the given `norm` to compute the metric distance between `self` and `rhs`.","sig":null,"attributes":[{"value":"/ Uses the metric induced by the given `norm` to compute the metric distance between `self` and `rhs`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":477887,"byte_end":477991,"line_start":221,"line_end":221,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":477996,"byte_end":477999,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":478004,"byte_end":478017,"line_start":223,"line_end":223,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":478022,"byte_end":478025,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":478030,"byte_end":478037,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, UniformNorm, LpNorm, EuclideanNorm};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":478042,"byte_end":478108,"line_start":226,"line_end":226,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":478113,"byte_end":478116,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ let v1 = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":478121,"byte_end":478162,"line_start":228,"line_end":228,"column_start":5,"column_end":46}},{"value":"/ let v2 = Vector3::new(10.0, 20.0, 30.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":478167,"byte_end":478211,"line_start":229,"line_end":229,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":478216,"byte_end":478219,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v1.apply_metric_distance(&v2, &UniformNorm), 27.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":478224,"byte_end":478290,"line_start":231,"line_end":231,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(v1.apply_metric_distance(&v2, &LpNorm(1)), 27.0 + 18.0 + 9.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":478295,"byte_end":478372,"line_start":232,"line_end":232,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(v1.apply_metric_distance(&v2, &EuclideanNorm), (v1 - v2).norm());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":478377,"byte_end":478457,"line_start":233,"line_end":233,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":478462,"byte_end":478469,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":478474,"byte_end":478483,"line_start":235,"line_end":235,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4551},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":479052,"byte_end":479061,"line_start":257,"line_end":257,"column_start":12,"column_end":21},"name":"magnitude","qualname":"<Matrix<N, R, C, S>>::magnitude","value":"pub fn magnitude(&Self) -> N::SimdRealField where N: SimdComplexField","parent":null,"children":[],"decl_id":null,"docs":" A synonym for the norm of this matrix.","sig":null,"attributes":[{"value":"/ A synonym for the norm of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":478878,"byte_end":478920,"line_start":251,"line_end":251,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":478925,"byte_end":478928,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ Aka the length.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":478933,"byte_end":478952,"line_start":253,"line_end":253,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":478957,"byte_end":478960,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ This function is simply implemented as a call to `norm()`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":478965,"byte_end":479026,"line_start":255,"line_end":255,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":479031,"byte_end":479040,"line_start":256,"line_end":256,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4552},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":479363,"byte_end":479380,"line_start":270,"line_end":270,"column_start":12,"column_end":29},"name":"magnitude_squared","qualname":"<Matrix<N, R, C, S>>::magnitude_squared","value":"pub fn magnitude_squared(&Self) -> N::SimdRealField where N: SimdComplexField","parent":null,"children":[],"decl_id":null,"docs":" A synonym for the squared norm of this matrix.","sig":null,"attributes":[{"value":"/ A synonym for the squared norm of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":479165,"byte_end":479215,"line_start":264,"line_end":264,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":479220,"byte_end":479223,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Aka the squared length.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":479228,"byte_end":479255,"line_start":266,"line_end":266,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":479260,"byte_end":479263,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This function is simply implemented as a call to `norm_squared()`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":479268,"byte_end":479337,"line_start":268,"line_end":268,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":479342,"byte_end":479351,"line_start":269,"line_end":269,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4553},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":479556,"byte_end":479569,"line_start":279,"line_end":279,"column_start":12,"column_end":25},"name":"set_magnitude","qualname":"<Matrix<N, R, C, S>>::set_magnitude","value":"pub fn set_magnitude(&mut Self, N::SimdRealField) where N: SimdComplexField,\nS: StorageMut<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Sets the magnitude of this vector.\n","sig":null,"attributes":[{"value":"/ Sets the magnitude of this vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":479492,"byte_end":479530,"line_start":277,"line_end":277,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":479535,"byte_end":479544,"line_start":278,"line_end":278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4554},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":479896,"byte_end":479905,"line_start":291,"line_end":291,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Matrix<N, R, C, S>>::normalize","value":"pub fn normalize(&Self) -> MatrixMN<N, R, C> where N: SimdComplexField,\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a normalized version of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a normalized version of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":479765,"byte_end":479813,"line_start":288,"line_end":288,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":479818,"byte_end":479827,"line_start":289,"line_end":289,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use normalize_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":479832,"byte_end":479884,"line_start":290,"line_end":290,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4555},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":480127,"byte_end":480134,"line_start":301,"line_end":301,"column_start":12,"column_end":19},"name":"lp_norm","qualname":"<Matrix<N, R, C, S>>::lp_norm","value":"pub fn lp_norm(&Self, i32) -> N::SimdRealField where N: SimdComplexField","parent":null,"children":[],"decl_id":null,"docs":" The Lp norm of this matrix.\n","sig":null,"attributes":[{"value":"/ The Lp norm of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":480070,"byte_end":480101,"line_start":299,"line_end":299,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":480106,"byte_end":480115,"line_start":300,"line_end":300,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4556},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":480452,"byte_end":480470,"line_start":313,"line_end":313,"column_start":12,"column_end":30},"name":"simd_try_normalize","qualname":"<Matrix<N, R, C, S>>::simd_try_normalize","value":"pub fn simd_try_normalize(&Self, N::SimdRealField)\n-> SimdOption<MatrixMN<N, R, C>> where N: SimdComplexField,\nN::Element: Scalar, DefaultAllocator: Allocator<N, R, C> +\nAllocator<N::Element, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to normalize `self`.","sig":null,"attributes":[{"value":"/ Attempts to normalize `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":480262,"byte_end":480295,"line_start":308,"line_end":308,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":480300,"byte_end":480303,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ The components of this matrix can be SIMD types.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":480308,"byte_end":480360,"line_start":310,"line_end":310,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":480365,"byte_end":480374,"line_start":311,"line_end":311,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use simd_try_normalize_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":480379,"byte_end":480440,"line_start":312,"line_end":312,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4557},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":481118,"byte_end":481135,"line_start":330,"line_end":330,"column_start":12,"column_end":29},"name":"try_set_magnitude","qualname":"<Matrix<N, R, C, S>>::try_set_magnitude","value":"pub fn try_set_magnitude(&mut Self, N::RealField, N::RealField) where\nN: ComplexField, S: StorageMut<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Sets the magnitude of this vector unless it is smaller than `min_magnitude`.","sig":null,"attributes":[{"value":"/ Sets the magnitude of this vector unless it is smaller than `min_magnitude`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":480834,"byte_end":480914,"line_start":325,"line_end":325,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":480919,"byte_end":480922,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ If `self.magnitude()` is smaller than `min_magnitude`, it will be left unchanged.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":480927,"byte_end":481012,"line_start":327,"line_end":327,"column_start":5,"column_end":90}},{"value":"/ Otherwise this is equivalent to: `*self = self.normalize() * magnitude.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":481017,"byte_end":481092,"line_start":328,"line_end":328,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":481097,"byte_end":481106,"line_start":329,"line_end":329,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4558},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":481682,"byte_end":481695,"line_start":347,"line_end":347,"column_start":12,"column_end":25},"name":"try_normalize","qualname":"<Matrix<N, R, C, S>>::try_normalize","value":"pub fn try_normalize(&Self, N::RealField) -> Option<MatrixMN<N, R, C>> where\nN: ComplexField, DefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a normalized version of this matrix unless its norm as smaller or equal to `eps`.","sig":null,"attributes":[{"value":"/ Returns a normalized version of this matrix unless its norm as smaller or equal to `eps`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":481399,"byte_end":481492,"line_start":342,"line_end":342,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":481497,"byte_end":481500,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ The components of this matrix cannot be SIMD types (see `simd_try_normalize`) instead.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":481505,"byte_end":481595,"line_start":344,"line_end":344,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":481600,"byte_end":481609,"line_start":345,"line_end":345,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use try_normalize_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":481614,"byte_end":481670,"line_start":346,"line_end":346,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4564},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":482286,"byte_end":482299,"line_start":368,"line_end":368,"column_start":12,"column_end":25},"name":"normalize_mut","qualname":"<Matrix<N, R, C, S>>::normalize_mut","value":"pub fn normalize_mut(&mut Self) -> N::SimdRealField where N: SimdComplexField","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this matrix in-place and returns its norm.","sig":null,"attributes":[{"value":"/ Normalizes this matrix in-place and returns its norm.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":482097,"byte_end":482154,"line_start":364,"line_end":364,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":482159,"byte_end":482162,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ The components of the matrix cannot be SIMD types (see `simd_try_normalize_mut` instead).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":482167,"byte_end":482260,"line_start":366,"line_end":366,"column_start":5,"column_end":98}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":482265,"byte_end":482274,"line_start":367,"line_end":367,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4565},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":482668,"byte_end":482690,"line_start":383,"line_end":383,"column_start":12,"column_end":34},"name":"simd_try_normalize_mut","qualname":"<Matrix<N, R, C, S>>::simd_try_normalize_mut","value":"pub fn simd_try_normalize_mut(&mut Self, N::SimdRealField)\n-> SimdOption<N::SimdRealField> where N: SimdComplexField, N::Element: Scalar,\nDefaultAllocator: Allocator<N, R, C> + Allocator<N::Element, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this matrix in-place and return its norm.","sig":null,"attributes":[{"value":"/ Normalizes this matrix in-place and return its norm.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":482456,"byte_end":482512,"line_start":378,"line_end":378,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":482517,"byte_end":482520,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ The components of the matrix can be SIMD types.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":482525,"byte_end":482576,"line_start":380,"line_end":380,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":482581,"byte_end":482590,"line_start":381,"line_end":381,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use simd_try_normalize_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":482595,"byte_end":482656,"line_start":382,"line_end":382,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4567},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":483304,"byte_end":483321,"line_start":402,"line_end":402,"column_start":12,"column_end":29},"name":"try_normalize_mut","qualname":"<Matrix<N, R, C, S>>::try_normalize_mut","value":"pub fn try_normalize_mut(&mut Self, N::RealField) -> Option<N::RealField>\nwhere N: ComplexField","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this matrix in-place or does nothing if its norm is smaller or equal to `eps`.","sig":null,"attributes":[{"value":"/ Normalizes this matrix in-place or does nothing if its norm is smaller or equal to `eps`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":483100,"byte_end":483193,"line_start":398,"line_end":398,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":483198,"byte_end":483201,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ If the normalization succeeded, returns the old norm of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":483206,"byte_end":483278,"line_start":400,"line_end":400,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":483283,"byte_end":483292,"line_start":401,"line_end":401,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4587},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":485316,"byte_end":485330,"line_start":482,"line_end":482,"column_start":12,"column_end":26},"name":"orthonormalize","qualname":"<VectorN<N, D>>::orthonormalize","value":"pub fn orthonormalize(&mut [Self]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Orthonormalizes the given family of vectors. The largest free family of vectors is moved at\n the beginning of the array and its size is returned. Vectors at an indices larger or equal to\n this length can be modified to an arbitrary value.\n","sig":null,"attributes":[{"value":"/ Orthonormalizes the given family of vectors. The largest free family of vectors is moved at","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":485034,"byte_end":485129,"line_start":478,"line_end":478,"column_start":5,"column_end":100}},{"value":"/ the beginning of the array and its size is returned. Vectors at an indices larger or equal to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":485134,"byte_end":485231,"line_start":479,"line_end":479,"column_start":5,"column_end":102}},{"value":"/ this length can be modified to an arbitrary value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":485236,"byte_end":485290,"line_start":480,"line_end":480,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":485295,"byte_end":485304,"line_start":481,"line_end":481,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4588},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":486540,"byte_end":486566,"line_start":515,"line_end":515,"column_start":12,"column_end":38},"name":"orthonormal_subspace_basis","qualname":"<VectorN<N, D>>::orthonormal_subspace_basis","value":"pub fn orthonormal_subspace_basis<F>(&[Self], F) where F: FnMut(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Applies the given closure to each element of the orthonormal basis of the subspace\n orthogonal to free family of vectors `vs`. If `vs` is not a free family, the result is\n unspecified.\n","sig":null,"attributes":[{"value":"/ Applies the given closure to each element of the orthonormal basis of the subspace","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":486221,"byte_end":486307,"line_start":510,"line_end":510,"column_start":5,"column_end":91}},{"value":"/ orthogonal to free family of vectors `vs`. If `vs` is not a free family, the result is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":486312,"byte_end":486402,"line_start":511,"line_end":511,"column_start":5,"column_end":95}},{"value":"/ unspecified.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":486407,"byte_end":486423,"line_start":512,"line_end":512,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":486519,"byte_end":486528,"line_start":514,"line_end":514,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4645},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":490294,"byte_end":490297,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"len","qualname":"<Matrix<N, R, C, S>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The total number of elements of this matrix.","sig":null,"attributes":[{"value":"/ The total number of elements of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":490045,"byte_end":490093,"line_start":13,"line_end":13,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":490098,"byte_end":490101,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":490106,"byte_end":490121,"line_start":15,"line_end":15,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":490126,"byte_end":490129,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":490134,"byte_end":490141,"line_start":17,"line_end":17,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix3x4;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":490146,"byte_end":490176,"line_start":18,"line_end":18,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix3x4::<f32>::zeros();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":490181,"byte_end":490221,"line_start":19,"line_end":19,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(mat.len(), 12);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":490226,"byte_end":490256,"line_start":20,"line_end":20,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":490261,"byte_end":490268,"line_start":21,"line_end":21,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":490273,"byte_end":490282,"line_start":22,"line_end":22,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4646},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":490644,"byte_end":490652,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Matrix<N, R, C, S>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the matrix contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the matrix contains no elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":490392,"byte_end":490444,"line_start":28,"line_end":28,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":490449,"byte_end":490452,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":490457,"byte_end":490472,"line_start":30,"line_end":30,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":490477,"byte_end":490480,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":490485,"byte_end":490492,"line_start":32,"line_end":32,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix3x4;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":490497,"byte_end":490527,"line_start":33,"line_end":33,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix3x4::<f32>::zeros();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":490532,"byte_end":490572,"line_start":34,"line_end":34,"column_start":5,"column_end":45}},{"value":"/ assert!(!mat.is_empty());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":490577,"byte_end":490606,"line_start":35,"line_end":35,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":490611,"byte_end":490618,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":490623,"byte_end":490632,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4647},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":490772,"byte_end":490781,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"is_square","qualname":"<Matrix<N, R, C, S>>::is_square","value":"pub fn is_square(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if this is a square matrix.\n","sig":null,"attributes":[{"value":"/ Indicates if this is a square matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":490705,"byte_end":490746,"line_start":42,"line_end":42,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":490751,"byte_end":490760,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4648},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":491264,"byte_end":491275,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"is_identity","qualname":"<Matrix<N, R, C, S>>::is_identity","value":"pub fn is_identity(&Self, N::Epsilon) -> bool where N: Zero + One +\nRelativeEq, N::Epsilon: Copy","parent":null,"children":[],"decl_id":null,"docs":" Indicated if this is the identity matrix within a relative error of `eps`.","sig":null,"attributes":[{"value":"/ Indicated if this is the identity matrix within a relative error of `eps`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":490960,"byte_end":491038,"line_start":50,"line_end":50,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":491043,"byte_end":491046,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ If the matrix is diagonal, this checks that diagonal elements (i.e. at coordinates `(i, i)`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":491051,"byte_end":491146,"line_start":52,"line_end":52,"column_start":5,"column_end":100}},{"value":"/ for i from `0` to `min(R, C)`) are equal one; and that all other elements are zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":491151,"byte_end":491238,"line_start":53,"line_end":53,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":491243,"byte_end":491252,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4654},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":492959,"byte_end":492972,"line_start":115,"line_end":115,"column_start":12,"column_end":25},"name":"is_orthogonal","qualname":"<Matrix<N, R, C, S>>::is_orthogonal","value":"pub fn is_orthogonal(&Self, N::Epsilon) -> bool where N: Zero + One +\nClosedAdd + ClosedMul + RelativeEq, S: Storage<N, R, C>, N::Epsilon: Copy,\nDefaultAllocator: Allocator<N, R, C> + Allocator<N, C, C>","parent":null,"children":[],"decl_id":null,"docs":" Checks that `Mᵀ × M = Id`.","sig":null,"attributes":[{"value":"/ Checks that `Mᵀ × M = Id`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":492768,"byte_end":492801,"line_start":110,"line_end":110,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":492806,"byte_end":492809,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ In this definition `Id` is approximately equal to the identity matrix with a relative error","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":492814,"byte_end":492909,"line_start":112,"line_end":112,"column_start":5,"column_end":100}},{"value":"/ equal to `eps`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":492914,"byte_end":492933,"line_start":113,"line_end":113,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":492938,"byte_end":492947,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4659},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":493482,"byte_end":493503,"line_start":132,"line_end":132,"column_start":12,"column_end":33},"name":"is_special_orthogonal","qualname":"<SquareMatrix<N, D, S>>::is_special_orthogonal","value":"pub fn is_special_orthogonal(&Self, N) -> bool where D: DimMin<D, Output = D>,\nDefaultAllocator: Allocator<(usize, usize), D>","parent":null,"children":[],"decl_id":null,"docs":" Checks that this matrix is orthogonal and has a determinant equal to 1.\n","sig":null,"attributes":[{"value":"/ Checks that this matrix is orthogonal and has a determinant equal to 1.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":493381,"byte_end":493456,"line_start":130,"line_end":130,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":493461,"byte_end":493470,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4660},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":493804,"byte_end":493817,"line_start":142,"line_end":142,"column_start":12,"column_end":25},"name":"is_invertible","qualname":"<SquareMatrix<N, D, S>>::is_invertible","value":"pub fn is_invertible(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this matrix is invertible.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this matrix is invertible.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":493730,"byte_end":493778,"line_start":140,"line_end":140,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":493783,"byte_end":493792,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":4671},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/scalar.rs","byte_start":494140,"byte_end":494146,"line_start":8,"line_end":8,"column_start":11,"column_end":17},"name":"Scalar","qualname":"::base::scalar::Scalar","value":"Scalar: Clone + PartialEq + Debug + Any","parent":null,"children":[{"krate":0,"index":4672},{"krate":0,"index":4674}],"decl_id":null,"docs":" The basic scalar type for all structures of `nalgebra`.","sig":null,"attributes":[{"value":"/ The basic scalar type for all structures of `nalgebra`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/scalar.rs","byte_start":493989,"byte_end":494048,"line_start":5,"line_end":5,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/scalar.rs","byte_start":494049,"byte_end":494052,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This does not make any assumption on the algebraic properties of `Self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/scalar.rs","byte_start":494053,"byte_end":494129,"line_start":7,"line_end":7,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":4672},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/scalar.rs","byte_start":494342,"byte_end":494344,"line_start":13,"line_end":13,"column_start":8,"column_end":10},"name":"is","qualname":"::base::scalar::Scalar::is","value":"pub fn is<T: Scalar>() -> bool","parent":{"krate":0,"index":4671},"children":[],"decl_id":null,"docs":" Tests if `Self` the same as the type `T`","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/scalar.rs","byte_start":494186,"byte_end":494195,"line_start":9,"line_end":9,"column_start":5,"column_end":14}},{"value":"/ Tests if `Self` the same as the type `T`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/scalar.rs","byte_start":494200,"byte_end":494244,"line_start":10,"line_end":10,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/scalar.rs","byte_start":494249,"byte_end":494252,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ Typically used to test of `Self` is a f32 or a f64 with `N::is::<f32>()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/scalar.rs","byte_start":494257,"byte_end":494334,"line_start":12,"line_end":12,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":4674},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/scalar.rs","byte_start":494562,"byte_end":494575,"line_start":19,"line_end":19,"column_start":8,"column_end":21},"name":"inlined_clone","qualname":"::base::scalar::Scalar::inlined_clone","value":"pub fn inlined_clone(&Self) -> Self","parent":{"krate":0,"index":4671},"children":[],"decl_id":null,"docs":" Performance hack: Clone doesn't get inlined for Copy types in debug mode, so make it inline anyway.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/scalar.rs","byte_start":494429,"byte_end":494446,"line_start":17,"line_end":17,"column_start":5,"column_end":22}},{"value":"/ Performance hack: Clone doesn't get inlined for Copy types in debug mode, so make it inline anyway.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/scalar.rs","byte_start":494451,"byte_end":494554,"line_start":18,"line_end":18,"column_start":5,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":4728},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":495259,"byte_end":495272,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"compress_rows","qualname":"<Matrix<N, R, C, S>>::compress_rows","value":"pub fn compress_rows<impl Fn(VectorSliceN<N, R, S::RStride, S::CStride>) -> N: Fn(VectorSliceN<,\n                                                                                               N,\n                                                                                               R,\n                                                                                               S::RStride,\n                                                                                               S::CStride>)\n                     ->\n                     N>(&Self,\n                        impl Fn(VectorSliceN<N, R, S::RStride, S::CStride>) -> N)\n-> RowVectorN<N, C> where DefaultAllocator: Allocator<N, U1, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a row vector where each element is the result of the application of `f` on the\n corresponding column of the original matrix.\n","sig":null,"attributes":[{"value":"/ Returns a row vector where each element is the result of the application of `f` on the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":495090,"byte_end":495180,"line_start":9,"line_end":9,"column_start":5,"column_end":95}},{"value":"/ corresponding column of the original matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":495185,"byte_end":495233,"line_start":10,"line_end":10,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":495238,"byte_end":495247,"line_start":11,"line_end":11,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4730},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":496043,"byte_end":496059,"line_start":37,"line_end":37,"column_start":12,"column_end":28},"name":"compress_rows_tr","qualname":"<Matrix<N, R, C, S>>::compress_rows_tr","value":"pub fn compress_rows_tr<impl Fn(VectorSliceN<N, R, S::RStride, S::CStride>) -> N: Fn(VectorSliceN<,\n                                                                                                  N,\n                                                                                                  R,\n                                                                                                  S::RStride,\n                                                                                                  S::CStride>)\n                        ->\n                        N>(&Self,\n                           impl Fn(VectorSliceN<N, R, S::RStride, S::CStride>) -> N)\n-> VectorN<N, C> where DefaultAllocator: Allocator<N, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a column vector where each element is the result of the application of `f` on the\n corresponding column of the original matrix.","sig":null,"attributes":[{"value":"/ Returns a column vector where each element is the result of the application of `f` on the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":495798,"byte_end":495891,"line_start":32,"line_end":32,"column_start":5,"column_end":98}},{"value":"/ corresponding column of the original matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":495896,"byte_end":495944,"line_start":33,"line_end":33,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":495949,"byte_end":495952,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This is the same as `self.compress_rows(f).transpose()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":495957,"byte_end":496017,"line_start":35,"line_end":35,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":496022,"byte_end":496031,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4732},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":496689,"byte_end":496705,"line_start":59,"line_end":59,"column_start":12,"column_end":28},"name":"compress_columns","qualname":"<Matrix<N, R, C, S>>::compress_columns","value":"pub fn compress_columns<impl Fn(&mut VectorN<N, R>, VectorSliceN<N, R, S::RStride, S::CStride>): Fn(&mut VectorN<N,\n                                                                                                                 R>,\n                                                                                                    VectorSliceN<,\n                                                                                                                 N,\n                                                                                                                 R,\n                                                                                                                 S::RStride,\n                                                                                                                 S::CStride>)\n                        ->\n                        ()>(&Self, VectorN<N, R>,\n                            impl Fn(&mut VectorN<N, R>, VectorSliceN<N, R, S::RStride, S::CStride>))\n-> VectorN<N, R> where DefaultAllocator: Allocator<N, R>","parent":null,"children":[],"decl_id":null,"docs":" Returns a column vector resulting from the folding of `f` on each column of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a column vector resulting from the folding of `f` on each column of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":496571,"byte_end":496663,"line_start":57,"line_end":57,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":496668,"byte_end":496677,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4739},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":497521,"byte_end":497524,"line_start":96,"line_end":96,"column_start":12,"column_end":15},"name":"sum","qualname":"<Matrix<N, R, C, S>>::sum","value":"pub fn sum(&Self) -> N where N: ClosedAdd + Zero","parent":null,"children":[],"decl_id":null,"docs":" The sum of all the elements of this matrix.","sig":null,"attributes":[{"value":"/ The sum of all the elements of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":497219,"byte_end":497266,"line_start":84,"line_end":84,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":497271,"byte_end":497274,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":497279,"byte_end":497292,"line_start":86,"line_end":86,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":497297,"byte_end":497300,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":497305,"byte_end":497312,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":497317,"byte_end":497347,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":497352,"byte_end":497355,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":497360,"byte_end":497401,"line_start":91,"line_end":91,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":497406,"byte_end":497448,"line_start":92,"line_end":92,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.sum(), 21.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":497453,"byte_end":497483,"line_start":93,"line_end":93,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":497488,"byte_end":497495,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":497500,"byte_end":497509,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4741},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":498248,"byte_end":498255,"line_start":121,"line_end":121,"column_start":12,"column_end":19},"name":"row_sum","qualname":"<Matrix<N, R, C, S>>::row_sum","value":"pub fn row_sum(&Self) -> RowVectorN<N, C> where N: ClosedAdd + Zero,\nDefaultAllocator: Allocator<N, U1, C>","parent":null,"children":[],"decl_id":null,"docs":" The sum of all the rows of this matrix.","sig":null,"attributes":[{"value":"/ The sum of all the rows of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":497652,"byte_end":497695,"line_start":103,"line_end":103,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":497700,"byte_end":497703,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Use `.row_variance_tr` if you need the result in a column vector instead.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":497708,"byte_end":497785,"line_start":105,"line_end":105,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":497790,"byte_end":497793,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":497798,"byte_end":497811,"line_start":107,"line_end":107,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":497816,"byte_end":497819,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":497824,"byte_end":497831,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Matrix3x2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":497836,"byte_end":497879,"line_start":110,"line_end":110,"column_start":5,"column_end":48}},{"value":"/ # use nalgebra::{RowVector2, RowVector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":497884,"byte_end":497929,"line_start":111,"line_end":111,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":497934,"byte_end":497937,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":497942,"byte_end":497983,"line_start":113,"line_end":113,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":497988,"byte_end":498030,"line_start":114,"line_end":114,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_sum(), RowVector3::new(5.0, 7.0, 9.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":498035,"byte_end":498095,"line_start":115,"line_end":115,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":498100,"byte_end":498103,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let mint = Matrix3x2::new(1,2,3,4,5,6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":498108,"byte_end":498151,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(mint.row_sum(), RowVector2::new(9,12));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":498156,"byte_end":498210,"line_start":118,"line_end":118,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":498215,"byte_end":498222,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":498227,"byte_end":498236,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4743},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":498988,"byte_end":498998,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"row_sum_tr","qualname":"<Matrix<N, R, C, S>>::row_sum_tr","value":"pub fn row_sum_tr(&Self) -> VectorN<N, C> where N: ClosedAdd + Zero,\nDefaultAllocator: Allocator<N, C>","parent":null,"children":[],"decl_id":null,"docs":" The sum of all the rows of this matrix. The result is transposed and returned as a column vector.","sig":null,"attributes":[{"value":"/ The sum of all the rows of this matrix. The result is transposed and returned as a column vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":498430,"byte_end":498531,"line_start":129,"line_end":129,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":498536,"byte_end":498539,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":498544,"byte_end":498557,"line_start":131,"line_end":131,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":498562,"byte_end":498565,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":498570,"byte_end":498577,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Matrix3x2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":498582,"byte_end":498625,"line_start":134,"line_end":134,"column_start":5,"column_end":48}},{"value":"/ # use nalgebra::{Vector2, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":498630,"byte_end":498669,"line_start":135,"line_end":135,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":498674,"byte_end":498677,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":498682,"byte_end":498723,"line_start":137,"line_end":137,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":498728,"byte_end":498770,"line_start":138,"line_end":138,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_sum_tr(), Vector3::new(5.0, 7.0, 9.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":498775,"byte_end":498835,"line_start":139,"line_end":139,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":498840,"byte_end":498843,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let mint = Matrix3x2::new(1,2,3,4,5,6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":498848,"byte_end":498891,"line_start":141,"line_end":141,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(mint.row_sum_tr(), Vector2::new(9,12));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":498896,"byte_end":498950,"line_start":142,"line_end":142,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":498955,"byte_end":498962,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":498967,"byte_end":498976,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4745},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":499670,"byte_end":499680,"line_start":169,"line_end":169,"column_start":12,"column_end":22},"name":"column_sum","qualname":"<Matrix<N, R, C, S>>::column_sum","value":"pub fn column_sum(&Self) -> VectorN<N, R> where N: ClosedAdd + Zero,\nDefaultAllocator: Allocator<N, R>","parent":null,"children":[],"decl_id":null,"docs":" The sum of all the columns of this matrix.","sig":null,"attributes":[{"value":"/ The sum of all the columns of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":499169,"byte_end":499215,"line_start":153,"line_end":153,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":499220,"byte_end":499223,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":499228,"byte_end":499241,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":499246,"byte_end":499249,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":499254,"byte_end":499261,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Matrix3x2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":499266,"byte_end":499309,"line_start":158,"line_end":158,"column_start":5,"column_end":48}},{"value":"/ # use nalgebra::{Vector2, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":499314,"byte_end":499353,"line_start":159,"line_end":159,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":499358,"byte_end":499361,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":499366,"byte_end":499407,"line_start":161,"line_end":161,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":499412,"byte_end":499454,"line_start":162,"line_end":162,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.column_sum(), Vector2::new(6.0, 15.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":499459,"byte_end":499515,"line_start":163,"line_end":163,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":499520,"byte_end":499523,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let mint = Matrix3x2::new(1,2,3,4,5,6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":499528,"byte_end":499571,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(mint.column_sum(), Vector3::new(3,7,11));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":499576,"byte_end":499632,"line_start":166,"line_end":166,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":499637,"byte_end":499644,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":499649,"byte_end":499658,"line_start":168,"line_end":168,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4747},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":500407,"byte_end":500415,"line_start":198,"line_end":198,"column_start":12,"column_end":20},"name":"variance","qualname":"<Matrix<N, R, C, S>>::variance","value":"pub fn variance(&Self) -> N where N: Field + SupersetOf<f64>","parent":null,"children":[],"decl_id":null,"docs":" The variance of all the elements of this matrix.","sig":null,"attributes":[{"value":"/ The variance of all the elements of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":500017,"byte_end":500069,"line_start":185,"line_end":185,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":500074,"byte_end":500077,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":500082,"byte_end":500095,"line_start":187,"line_end":187,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":500100,"byte_end":500103,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":500108,"byte_end":500115,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":500120,"byte_end":500159,"line_start":190,"line_end":190,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":500164,"byte_end":500194,"line_start":191,"line_end":191,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":500199,"byte_end":500202,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":500207,"byte_end":500248,"line_start":193,"line_end":193,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":500253,"byte_end":500295,"line_start":194,"line_end":194,"column_start":5,"column_end":47}},{"value":"/ assert_relative_eq!(m.variance(), 35.0 / 12.0, epsilon = 1.0e-8);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":500300,"byte_end":500369,"line_start":195,"line_end":195,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":500374,"byte_end":500381,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":500386,"byte_end":500395,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4749},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":501356,"byte_end":501368,"line_start":227,"line_end":227,"column_start":12,"column_end":24},"name":"row_variance","qualname":"<Matrix<N, R, C, S>>::row_variance","value":"pub fn row_variance(&Self) -> RowVectorN<N, C> where N: Field +\nSupersetOf<f64>, DefaultAllocator: Allocator<N, U1, C>","parent":null,"children":[],"decl_id":null,"docs":" The variance of all the rows of this matrix.","sig":null,"attributes":[{"value":"/ The variance of all the rows of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":500919,"byte_end":500967,"line_start":214,"line_end":214,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":500972,"byte_end":500975,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ Use `.row_variance_tr` if you need the result in a column vector instead.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":500980,"byte_end":501057,"line_start":216,"line_end":216,"column_start":5,"column_end":82}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":501062,"byte_end":501075,"line_start":217,"line_end":217,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":501080,"byte_end":501083,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":501088,"byte_end":501095,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, RowVector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":501100,"byte_end":501144,"line_start":220,"line_end":220,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":501149,"byte_end":501152,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":501157,"byte_end":501198,"line_start":222,"line_end":222,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":501203,"byte_end":501245,"line_start":223,"line_end":223,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_variance(), RowVector3::new(2.25, 2.25, 2.25));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":501250,"byte_end":501318,"line_start":224,"line_end":224,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":501323,"byte_end":501330,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":501335,"byte_end":501344,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4751},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":501965,"byte_end":501980,"line_start":247,"line_end":247,"column_start":12,"column_end":27},"name":"row_variance_tr","qualname":"<Matrix<N, R, C, S>>::row_variance_tr","value":"pub fn row_variance_tr(&Self) -> VectorN<N, C> where N: Field +\nSupersetOf<f64>, DefaultAllocator: Allocator<N, C>","parent":null,"children":[],"decl_id":null,"docs":" The variance of all the rows of this matrix. The result is transposed and returned as a column vector.","sig":null,"attributes":[{"value":"/ The variance of all the rows of this matrix. The result is transposed and returned as a column vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":501555,"byte_end":501661,"line_start":235,"line_end":235,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":501666,"byte_end":501669,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":501674,"byte_end":501687,"line_start":237,"line_end":237,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":501692,"byte_end":501695,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":501700,"byte_end":501707,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":501712,"byte_end":501753,"line_start":240,"line_end":240,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":501758,"byte_end":501761,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":501766,"byte_end":501807,"line_start":242,"line_end":242,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":501812,"byte_end":501854,"line_start":243,"line_end":243,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_variance_tr(), Vector3::new(2.25, 2.25, 2.25));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":501859,"byte_end":501927,"line_start":244,"line_end":244,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":501932,"byte_end":501939,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":501944,"byte_end":501953,"line_start":246,"line_end":246,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4753},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":502593,"byte_end":502608,"line_start":268,"line_end":268,"column_start":12,"column_end":27},"name":"column_variance","qualname":"<Matrix<N, R, C, S>>::column_variance","value":"pub fn column_variance(&Self) -> VectorN<N, R> where N: Field +\nSupersetOf<f64>, DefaultAllocator: Allocator<N, R>","parent":null,"children":[],"decl_id":null,"docs":" The variance of all the columns of this matrix.","sig":null,"attributes":[{"value":"/ The variance of all the columns of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":502163,"byte_end":502214,"line_start":255,"line_end":255,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":502219,"byte_end":502222,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":502227,"byte_end":502240,"line_start":257,"line_end":257,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":502245,"byte_end":502248,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":502253,"byte_end":502260,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":502265,"byte_end":502304,"line_start":260,"line_end":260,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix2x3, Vector2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":502309,"byte_end":502350,"line_start":261,"line_end":261,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":502355,"byte_end":502358,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":502363,"byte_end":502404,"line_start":263,"line_end":263,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":502409,"byte_end":502451,"line_start":264,"line_end":264,"column_start":5,"column_end":47}},{"value":"/ assert_relative_eq!(m.column_variance(), Vector2::new(2.0 / 3.0, 2.0 / 3.0), epsilon = 1.0e-8);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":502456,"byte_end":502555,"line_start":265,"line_end":265,"column_start":5,"column_end":104}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":502560,"byte_end":502567,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":502572,"byte_end":502581,"line_start":267,"line_end":267,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4756},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":503666,"byte_end":503670,"line_start":307,"line_end":307,"column_start":12,"column_end":16},"name":"mean","qualname":"<Matrix<N, R, C, S>>::mean","value":"pub fn mean(&Self) -> N where N: Field + SupersetOf<f64>","parent":null,"children":[],"decl_id":null,"docs":" The mean of all the elements of this matrix.","sig":null,"attributes":[{"value":"/ The mean of all the elements of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":503363,"byte_end":503411,"line_start":295,"line_end":295,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":503416,"byte_end":503419,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":503424,"byte_end":503437,"line_start":297,"line_end":297,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":503442,"byte_end":503445,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":503450,"byte_end":503457,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":503462,"byte_end":503492,"line_start":300,"line_end":300,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":503497,"byte_end":503500,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":503505,"byte_end":503546,"line_start":302,"line_end":302,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":503551,"byte_end":503593,"line_start":303,"line_end":303,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.mean(), 3.5);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":503598,"byte_end":503628,"line_start":304,"line_end":304,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":503633,"byte_end":503640,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":503645,"byte_end":503654,"line_start":306,"line_end":306,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4757},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":504313,"byte_end":504321,"line_start":332,"line_end":332,"column_start":12,"column_end":20},"name":"row_mean","qualname":"<Matrix<N, R, C, S>>::row_mean","value":"pub fn row_mean(&Self) -> RowVectorN<N, C> where N: Field + SupersetOf<f64>,\nDefaultAllocator: Allocator<N, U1, C>","parent":null,"children":[],"decl_id":null,"docs":" The mean of all the rows of this matrix.","sig":null,"attributes":[{"value":"/ The mean of all the rows of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":503883,"byte_end":503927,"line_start":318,"line_end":318,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":503932,"byte_end":503935,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ Use `.row_mean_tr` if you need the result in a column vector instead.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":503940,"byte_end":504013,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":504018,"byte_end":504021,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":504026,"byte_end":504039,"line_start":322,"line_end":322,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":504044,"byte_end":504047,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":504052,"byte_end":504059,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, RowVector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":504064,"byte_end":504108,"line_start":325,"line_end":325,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":504113,"byte_end":504116,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":504121,"byte_end":504162,"line_start":327,"line_end":327,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":504167,"byte_end":504209,"line_start":328,"line_end":328,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_mean(), RowVector3::new(2.5, 3.5, 4.5));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":504214,"byte_end":504275,"line_start":329,"line_end":329,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":504280,"byte_end":504287,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":504292,"byte_end":504301,"line_start":331,"line_end":331,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4759},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":504903,"byte_end":504914,"line_start":352,"line_end":352,"column_start":12,"column_end":23},"name":"row_mean_tr","qualname":"<Matrix<N, R, C, S>>::row_mean_tr","value":"pub fn row_mean_tr(&Self) -> VectorN<N, C> where N: Field + SupersetOf<f64>,\nDefaultAllocator: Allocator<N, C>","parent":null,"children":[],"decl_id":null,"docs":" The mean of all the rows of this matrix. The result is transposed and returned as a column vector.","sig":null,"attributes":[{"value":"/ The mean of all the rows of this matrix. The result is transposed and returned as a column vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":504504,"byte_end":504606,"line_start":340,"line_end":340,"column_start":5,"column_end":107}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":504611,"byte_end":504614,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":504619,"byte_end":504632,"line_start":342,"line_end":342,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":504637,"byte_end":504640,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":504645,"byte_end":504652,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":504657,"byte_end":504698,"line_start":345,"line_end":345,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":504703,"byte_end":504706,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":504711,"byte_end":504752,"line_start":347,"line_end":347,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":504757,"byte_end":504799,"line_start":348,"line_end":348,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_mean_tr(), Vector3::new(2.5, 3.5, 4.5));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":504804,"byte_end":504865,"line_start":349,"line_end":349,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":504870,"byte_end":504877,"line_start":350,"line_end":350,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":504882,"byte_end":504891,"line_start":351,"line_end":351,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4761},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":505432,"byte_end":505443,"line_start":372,"line_end":372,"column_start":12,"column_end":23},"name":"column_mean","qualname":"<Matrix<N, R, C, S>>::column_mean","value":"pub fn column_mean(&Self) -> VectorN<N, R> where N: Field + SupersetOf<f64>,\nDefaultAllocator: Allocator<N, R>","parent":null,"children":[],"decl_id":null,"docs":" The mean of all the columns of this matrix.","sig":null,"attributes":[{"value":"/ The mean of all the columns of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":505093,"byte_end":505140,"line_start":360,"line_end":360,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":505145,"byte_end":505148,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":505153,"byte_end":505166,"line_start":362,"line_end":362,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":505171,"byte_end":505174,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":505179,"byte_end":505186,"line_start":364,"line_end":364,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Vector2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":505191,"byte_end":505232,"line_start":365,"line_end":365,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":505237,"byte_end":505240,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":505245,"byte_end":505286,"line_start":367,"line_end":367,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":505291,"byte_end":505333,"line_start":368,"line_end":368,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.column_mean(), Vector2::new(2.0, 5.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":505338,"byte_end":505394,"line_start":369,"line_end":369,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":505399,"byte_end":505406,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":505411,"byte_end":505420,"line_start":371,"line_end":371,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":21621},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506574,"byte_end":506576,"line_start":23,"line_end":23,"column_start":19,"column_end":21},"name":"xx","qualname":"<Vector<N, D, S>>::xx","value":"pub fn xx(&Self) -> Vector2<N> where D::Value: Cmp<typenum::U0, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21622},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506616,"byte_end":506619,"line_start":24,"line_end":24,"column_start":19,"column_end":22},"name":"xxx","qualname":"<Vector<N, D, S>>::xxx","value":"pub fn xxx(&Self) -> Vector3<N> where D::Value: Cmp<typenum::U0, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21623},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506662,"byte_end":506664,"line_start":26,"line_end":26,"column_start":19,"column_end":21},"name":"xy","qualname":"<Vector<N, D, S>>::xy","value":"pub fn xy(&Self) -> Vector2<N> where D::Value: Cmp<typenum::U1, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21624},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506704,"byte_end":506706,"line_start":27,"line_end":27,"column_start":19,"column_end":21},"name":"yx","qualname":"<Vector<N, D, S>>::yx","value":"pub fn yx(&Self) -> Vector2<N> where D::Value: Cmp<typenum::U1, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21625},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506746,"byte_end":506748,"line_start":28,"line_end":28,"column_start":19,"column_end":21},"name":"yy","qualname":"<Vector<N, D, S>>::yy","value":"pub fn yy(&Self) -> Vector2<N> where D::Value: Cmp<typenum::U1, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21626},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506788,"byte_end":506791,"line_start":29,"line_end":29,"column_start":19,"column_end":22},"name":"xxy","qualname":"<Vector<N, D, S>>::xxy","value":"pub fn xxy(&Self) -> Vector3<N> where D::Value: Cmp<typenum::U1, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21627},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506833,"byte_end":506836,"line_start":30,"line_end":30,"column_start":19,"column_end":22},"name":"xyx","qualname":"<Vector<N, D, S>>::xyx","value":"pub fn xyx(&Self) -> Vector3<N> where D::Value: Cmp<typenum::U1, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21628},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506878,"byte_end":506881,"line_start":31,"line_end":31,"column_start":19,"column_end":22},"name":"xyy","qualname":"<Vector<N, D, S>>::xyy","value":"pub fn xyy(&Self) -> Vector3<N> where D::Value: Cmp<typenum::U1, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21629},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506923,"byte_end":506926,"line_start":32,"line_end":32,"column_start":19,"column_end":22},"name":"yxx","qualname":"<Vector<N, D, S>>::yxx","value":"pub fn yxx(&Self) -> Vector3<N> where D::Value: Cmp<typenum::U1, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21630},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506968,"byte_end":506971,"line_start":33,"line_end":33,"column_start":19,"column_end":22},"name":"yxy","qualname":"<Vector<N, D, S>>::yxy","value":"pub fn yxy(&Self) -> Vector3<N> where D::Value: Cmp<typenum::U1, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21631},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":507013,"byte_end":507016,"line_start":34,"line_end":34,"column_start":19,"column_end":22},"name":"yyx","qualname":"<Vector<N, D, S>>::yyx","value":"pub fn yyx(&Self) -> Vector3<N> where D::Value: Cmp<typenum::U1, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21632},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":507058,"byte_end":507061,"line_start":35,"line_end":35,"column_start":19,"column_end":22},"name":"yyy","qualname":"<Vector<N, D, S>>::yyy","value":"pub fn yyy(&Self) -> Vector3<N> where D::Value: Cmp<typenum::U1, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21633},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":507104,"byte_end":507106,"line_start":37,"line_end":37,"column_start":19,"column_end":21},"name":"xz","qualname":"<Vector<N, D, S>>::xz","value":"pub fn xz(&Self) -> Vector2<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21634},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":507146,"byte_end":507148,"line_start":38,"line_end":38,"column_start":19,"column_end":21},"name":"yz","qualname":"<Vector<N, D, S>>::yz","value":"pub fn yz(&Self) -> Vector2<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21635},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":507188,"byte_end":507190,"line_start":39,"line_end":39,"column_start":19,"column_end":21},"name":"zx","qualname":"<Vector<N, D, S>>::zx","value":"pub fn zx(&Self) -> Vector2<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21636},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":507230,"byte_end":507232,"line_start":40,"line_end":40,"column_start":19,"column_end":21},"name":"zy","qualname":"<Vector<N, D, S>>::zy","value":"pub fn zy(&Self) -> Vector2<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21637},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":507272,"byte_end":507274,"line_start":41,"line_end":41,"column_start":19,"column_end":21},"name":"zz","qualname":"<Vector<N, D, S>>::zz","value":"pub fn zz(&Self) -> Vector2<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21638},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":507314,"byte_end":507317,"line_start":42,"line_end":42,"column_start":19,"column_end":22},"name":"xxz","qualname":"<Vector<N, D, S>>::xxz","value":"pub fn xxz(&Self) -> Vector3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21639},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":507359,"byte_end":507362,"line_start":43,"line_end":43,"column_start":19,"column_end":22},"name":"xyz","qualname":"<Vector<N, D, S>>::xyz","value":"pub fn xyz(&Self) -> Vector3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21640},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":507404,"byte_end":507407,"line_start":44,"line_end":44,"column_start":19,"column_end":22},"name":"xzx","qualname":"<Vector<N, D, S>>::xzx","value":"pub fn xzx(&Self) -> Vector3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21641},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":507449,"byte_end":507452,"line_start":45,"line_end":45,"column_start":19,"column_end":22},"name":"xzy","qualname":"<Vector<N, D, S>>::xzy","value":"pub fn xzy(&Self) -> Vector3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21642},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":507494,"byte_end":507497,"line_start":46,"line_end":46,"column_start":19,"column_end":22},"name":"xzz","qualname":"<Vector<N, D, S>>::xzz","value":"pub fn xzz(&Self) -> Vector3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21643},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":507539,"byte_end":507542,"line_start":47,"line_end":47,"column_start":19,"column_end":22},"name":"yxz","qualname":"<Vector<N, D, S>>::yxz","value":"pub fn yxz(&Self) -> Vector3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21644},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":507584,"byte_end":507587,"line_start":48,"line_end":48,"column_start":19,"column_end":22},"name":"yyz","qualname":"<Vector<N, D, S>>::yyz","value":"pub fn yyz(&Self) -> Vector3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21645},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":507629,"byte_end":507632,"line_start":49,"line_end":49,"column_start":19,"column_end":22},"name":"yzx","qualname":"<Vector<N, D, S>>::yzx","value":"pub fn yzx(&Self) -> Vector3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21646},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":507674,"byte_end":507677,"line_start":50,"line_end":50,"column_start":19,"column_end":22},"name":"yzy","qualname":"<Vector<N, D, S>>::yzy","value":"pub fn yzy(&Self) -> Vector3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21647},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":507719,"byte_end":507722,"line_start":51,"line_end":51,"column_start":19,"column_end":22},"name":"yzz","qualname":"<Vector<N, D, S>>::yzz","value":"pub fn yzz(&Self) -> Vector3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21648},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":507764,"byte_end":507767,"line_start":52,"line_end":52,"column_start":19,"column_end":22},"name":"zxx","qualname":"<Vector<N, D, S>>::zxx","value":"pub fn zxx(&Self) -> Vector3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21649},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":507809,"byte_end":507812,"line_start":53,"line_end":53,"column_start":19,"column_end":22},"name":"zxy","qualname":"<Vector<N, D, S>>::zxy","value":"pub fn zxy(&Self) -> Vector3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21650},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":507854,"byte_end":507857,"line_start":54,"line_end":54,"column_start":19,"column_end":22},"name":"zxz","qualname":"<Vector<N, D, S>>::zxz","value":"pub fn zxz(&Self) -> Vector3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21651},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":507899,"byte_end":507902,"line_start":55,"line_end":55,"column_start":19,"column_end":22},"name":"zyx","qualname":"<Vector<N, D, S>>::zyx","value":"pub fn zyx(&Self) -> Vector3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21652},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":507944,"byte_end":507947,"line_start":56,"line_end":56,"column_start":19,"column_end":22},"name":"zyy","qualname":"<Vector<N, D, S>>::zyy","value":"pub fn zyy(&Self) -> Vector3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21653},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":507989,"byte_end":507992,"line_start":57,"line_end":57,"column_start":19,"column_end":22},"name":"zyz","qualname":"<Vector<N, D, S>>::zyz","value":"pub fn zyz(&Self) -> Vector3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21654},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":508034,"byte_end":508037,"line_start":58,"line_end":58,"column_start":19,"column_end":22},"name":"zzx","qualname":"<Vector<N, D, S>>::zzx","value":"pub fn zzx(&Self) -> Vector3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21655},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":508079,"byte_end":508082,"line_start":59,"line_end":59,"column_start":19,"column_end":22},"name":"zzy","qualname":"<Vector<N, D, S>>::zzy","value":"pub fn zzy(&Self) -> Vector3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":21656},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":508124,"byte_end":508127,"line_start":60,"line_end":60,"column_start":19,"column_end":22},"name":"zzz","qualname":"<Vector<N, D, S>>::zzz","value":"pub fn zzz(&Self) -> Vector3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506140,"byte_end":506190,"line_start":9,"line_end":9,"column_start":17,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506207,"byte_end":506216,"line_start":10,"line_end":10,"column_start":17,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":21657},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":509450,"byte_end":509454,"line_start":29,"line_end":29,"column_start":12,"column_end":16},"name":"Unit","qualname":"::base::unit::Unit","value":"Unit {  }","parent":null,"children":[{"krate":0,"index":21659}],"decl_id":null,"docs":" A wrapper that ensures the underlying algebraic entity has a unit norm.","sig":null,"attributes":[{"value":"/ A wrapper that ensures the underlying algebraic entity has a unit norm.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":508640,"byte_end":508715,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":508716,"byte_end":508719,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ **It is likely that the only piece of documentation that you need in this page are:**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":508720,"byte_end":508809,"line_start":19,"line_end":19,"column_start":1,"column_end":90}},{"value":"/ - **[The construction with normalization](#construction-with-normalization)**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":508810,"byte_end":508891,"line_start":20,"line_end":20,"column_start":1,"column_end":82}},{"value":"/ - **[Data extraction and construction without normalization](#data-extraction-and-construction-without-normalization)**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":508892,"byte_end":509015,"line_start":21,"line_end":21,"column_start":1,"column_end":124}},{"value":"/ - **[Interpolation between two unit vectors](#interpolation-between-two-unit-vectors)**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":509016,"byte_end":509107,"line_start":22,"line_end":22,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":509108,"byte_end":509111,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ All the other impl blocks you will see in this page are about [`UnitComplex`](crate::UnitComplex)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":509112,"byte_end":509213,"line_start":24,"line_end":24,"column_start":1,"column_end":102}},{"value":"/ and [`UnitQuaternion`](crate::UnitQuaternion); both built on top of `Unit`.  If you are interested","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":509214,"byte_end":509316,"line_start":25,"line_end":25,"column_start":1,"column_end":103}},{"value":"/ in their documentation, read their dedicated pages directly.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":509317,"byte_end":509381,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"repr(transparent)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":509382,"byte_end":509402,"line_start":27,"line_end":27,"column_start":1,"column_end":21}}]},{"kind":"Trait","id":{"krate":0,"index":4847},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":510868,"byte_end":510874,"line_start":91,"line_end":91,"column_start":11,"column_end":17},"name":"Normed","qualname":"::base::unit::Normed","value":"Normed","parent":null,"children":[{"krate":0,"index":4848},{"krate":0,"index":4849},{"krate":0,"index":4850},{"krate":0,"index":4851},{"krate":0,"index":4852}],"decl_id":null,"docs":" Trait implemented by entities scan be be normalized and put in an `Unit` struct.\n","sig":null,"attributes":[{"value":"/ Trait implemented by entities scan be be normalized and put in an `Unit` struct.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":510773,"byte_end":510857,"line_start":90,"line_end":90,"column_start":1,"column_end":85}}]},{"kind":"Type","id":{"krate":0,"index":4848},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":510916,"byte_end":510920,"line_start":93,"line_end":93,"column_start":10,"column_end":14},"name":"Norm","qualname":"::base::unit::Normed::Norm","value":"type Norm: SimdRealField;","parent":{"krate":0,"index":4847},"children":[],"decl_id":null,"docs":" The type of the norm.\n","sig":null,"attributes":[{"value":"/ The type of the norm.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":510881,"byte_end":510906,"line_start":92,"line_end":92,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4849},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":510971,"byte_end":510975,"line_start":95,"line_end":95,"column_start":8,"column_end":12},"name":"norm","qualname":"::base::unit::Normed::norm","value":"pub fn norm(&Self) -> Self::Norm","parent":{"krate":0,"index":4847},"children":[],"decl_id":null,"docs":" Computes the norm.\n","sig":null,"attributes":[{"value":"/ Computes the norm.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":510941,"byte_end":510963,"line_start":94,"line_end":94,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":4850},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":511040,"byte_end":511052,"line_start":97,"line_end":97,"column_start":8,"column_end":20},"name":"norm_squared","qualname":"::base::unit::Normed::norm_squared","value":"pub fn norm_squared(&Self) -> Self::Norm","parent":{"krate":0,"index":4847},"children":[],"decl_id":null,"docs":" Computes the squared norm.\n","sig":null,"attributes":[{"value":"/ Computes the squared norm.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":511002,"byte_end":511032,"line_start":96,"line_end":96,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4851},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":511112,"byte_end":511121,"line_start":99,"line_end":99,"column_start":8,"column_end":17},"name":"scale_mut","qualname":"::base::unit::Normed::scale_mut","value":"pub fn scale_mut(&mut Self, Self::Norm)","parent":{"krate":0,"index":4847},"children":[],"decl_id":null,"docs":" Multiply `self` by n.\n","sig":null,"attributes":[{"value":"/ Multiply `self` by n.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":511079,"byte_end":511104,"line_start":98,"line_end":98,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4852},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":511185,"byte_end":511196,"line_start":101,"line_end":101,"column_start":8,"column_end":19},"name":"unscale_mut","qualname":"::base::unit::Normed::unscale_mut","value":"pub fn unscale_mut(&mut Self, Self::Norm)","parent":{"krate":0,"index":4847},"children":[],"decl_id":null,"docs":" Divides `self` by n.\n","sig":null,"attributes":[{"value":"/ Divides `self` by n.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":511153,"byte_end":511177,"line_start":100,"line_end":100,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4855},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":511396,"byte_end":511409,"line_start":108,"line_end":108,"column_start":12,"column_end":25},"name":"new_normalize","qualname":"<Unit<T>>::new_normalize","value":"pub fn new_normalize(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Normalize the given vector and return it wrapped on a `Unit` structure.\n","sig":null,"attributes":[{"value":"/ Normalize the given vector and return it wrapped on a `Unit` structure.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":511295,"byte_end":511370,"line_start":106,"line_end":106,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":511375,"byte_end":511384,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4856},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":511668,"byte_end":511675,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"name":"try_new","qualname":"<Unit<T>>::try_new","value":"pub fn try_new(T, T::Norm) -> Option<Self> where T::Norm: RealField","parent":null,"children":[],"decl_id":null,"docs":" Attempts to normalize the given vector and return it wrapped on a `Unit` structure.","sig":null,"attributes":[{"value":"/ Attempts to normalize the given vector and return it wrapped on a `Unit` structure.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":511476,"byte_end":511563,"line_start":112,"line_end":112,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":511568,"byte_end":511571,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the norm was smaller or equal to `min_norm`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":511576,"byte_end":511642,"line_start":114,"line_end":114,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":511647,"byte_end":511656,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4858},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":511954,"byte_end":511965,"line_start":125,"line_end":125,"column_start":12,"column_end":23},"name":"new_and_get","qualname":"<Unit<T>>::new_and_get","value":"pub fn new_and_get(T) -> (Self, T::Norm)","parent":null,"children":[],"decl_id":null,"docs":" Normalize the given vector and return it wrapped on a `Unit` structure and its norm.\n","sig":null,"attributes":[{"value":"/ Normalize the given vector and return it wrapped on a `Unit` structure and its norm.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":511840,"byte_end":511928,"line_start":123,"line_end":123,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":511933,"byte_end":511942,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4859},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":512293,"byte_end":512308,"line_start":135,"line_end":135,"column_start":12,"column_end":27},"name":"try_new_and_get","qualname":"<Unit<T>>::try_new_and_get","value":"pub fn try_new_and_get(T, T::Norm) -> Option<(Self, T::Norm)> where\nT::Norm: RealField","parent":null,"children":[],"decl_id":null,"docs":" Normalize the given vector and return it wrapped on a `Unit` structure and its norm.","sig":null,"attributes":[{"value":"/ Normalize the given vector and return it wrapped on a `Unit` structure and its norm.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":512100,"byte_end":512188,"line_start":131,"line_end":131,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":512193,"byte_end":512196,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the norm was smaller or equal to `min_norm`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":512201,"byte_end":512267,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":512272,"byte_end":512281,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4860},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":513050,"byte_end":513061,"line_start":156,"line_end":156,"column_start":12,"column_end":23},"name":"renormalize","qualname":"<Unit<T>>::renormalize","value":"pub fn renormalize(&mut Self) -> T::Norm","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this vector again. This is useful when repeated computations\n might cause a drift in the norm because of float inaccuracies.","sig":null,"attributes":[{"value":"/ Normalizes this vector again. This is useful when repeated computations","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":512669,"byte_end":512744,"line_start":150,"line_end":150,"column_start":5,"column_end":80}},{"value":"/ might cause a drift in the norm because of float inaccuracies.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":512749,"byte_end":512815,"line_start":151,"line_end":151,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":512820,"byte_end":512823,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Returns the norm before re-normalization. See `.renormalize_fast` for a faster alternative","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":512828,"byte_end":512922,"line_start":153,"line_end":153,"column_start":5,"column_end":99}},{"value":"/ that may be slightly less accurate if `self` drifted significantly from having a unit length.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":512927,"byte_end":513024,"line_start":154,"line_end":154,"column_start":5,"column_end":102}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":513029,"byte_end":513038,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4861},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":513392,"byte_end":513408,"line_start":166,"line_end":166,"column_start":12,"column_end":28},"name":"renormalize_fast","qualname":"<Unit<T>>::renormalize_fast","value":"pub fn renormalize_fast(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this vector again using a first-order Taylor approximation.\n This is useful when repeated computations might cause a drift in the norm\n because of float inaccuracies.\n","sig":null,"attributes":[{"value":"/ Normalizes this vector again using a first-order Taylor approximation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":513171,"byte_end":513245,"line_start":162,"line_end":162,"column_start":5,"column_end":79}},{"value":"/ This is useful when repeated computations might cause a drift in the norm","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":513250,"byte_end":513327,"line_start":163,"line_end":163,"column_start":5,"column_end":82}},{"value":"/ because of float inaccuracies.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":513332,"byte_end":513366,"line_start":164,"line_end":164,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":513371,"byte_end":513380,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4864},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":513805,"byte_end":513818,"line_start":178,"line_end":178,"column_start":12,"column_end":25},"name":"new_unchecked","qualname":"<Unit<T>>::new_unchecked","value":"pub fn new_unchecked(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given value, assuming it is already normalized.\n","sig":null,"attributes":[{"value":"/ Wraps the given value, assuming it is already normalized.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":513718,"byte_end":513779,"line_start":176,"line_end":176,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":513784,"byte_end":513793,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4865},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":513964,"byte_end":513982,"line_start":184,"line_end":184,"column_start":12,"column_end":30},"name":"from_ref_unchecked","qualname":"<Unit<T>>::from_ref_unchecked","value":"pub fn from_ref_unchecked<'a>(&'a T) -> &'a Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given reference, assuming it is already normalized.\n","sig":null,"attributes":[{"value":"/ Wraps the given reference, assuming it is already normalized.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":513873,"byte_end":513938,"line_start":182,"line_end":182,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":513943,"byte_end":513952,"line_start":183,"line_end":183,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4867},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":514128,"byte_end":514138,"line_start":190,"line_end":190,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Unit<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying value.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":514067,"byte_end":514102,"line_start":188,"line_end":188,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":514107,"byte_end":514116,"line_start":189,"line_end":189,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4868},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":514351,"byte_end":514357,"line_start":198,"line_end":198,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Unit<T>>::unwrap","value":"pub fn unwrap(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying value.\n Deprecated: use [Unit::into_inner] instead.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":514182,"byte_end":514217,"line_start":194,"line_end":194,"column_start":5,"column_end":40}},{"value":"/ Deprecated: use [Unit::into_inner] instead.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":514222,"byte_end":514269,"line_start":195,"line_end":195,"column_start":5,"column_end":52}},{"value":"deprecated(note = \"use `.into_inner()` instead\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":514274,"byte_end":514325,"line_start":196,"line_end":196,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":514330,"byte_end":514339,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4869},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":514639,"byte_end":514655,"line_start":206,"line_end":206,"column_start":12,"column_end":28},"name":"as_mut_unchecked","qualname":"<Unit<T>>::as_mut_unchecked","value":"pub fn as_mut_unchecked(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying value. This is `_unchecked` because modifying\n the underlying value in such a way that it no longer has unit length may lead to unexpected\n results.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying value. This is `_unchecked` because modifying","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":514401,"byte_end":514496,"line_start":202,"line_end":202,"column_start":5,"column_end":100}},{"value":"/ the underlying value in such a way that it no longer has unit length may lead to unexpected","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":514501,"byte_end":514596,"line_start":203,"line_end":203,"column_start":5,"column_end":100}},{"value":"/ results.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":514601,"byte_end":514613,"line_start":204,"line_end":204,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":514618,"byte_end":514627,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":21672},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":520686,"byte_end":520696,"line_start":28,"line_end":28,"column_start":12,"column_end":22},"name":"VecStorage","qualname":"::base::vec_storage::VecStorage","value":"VecStorage {  }","parent":null,"children":[{"krate":0,"index":21676},{"krate":0,"index":21677},{"krate":0,"index":21678}],"decl_id":null,"docs":" A Vec-based matrix data storage. It may be dynamically-sized.\n","sig":null,"attributes":[{"value":"/ A Vec-based matrix data storage. It may be dynamically-sized.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":520486,"byte_end":520551,"line_start":24,"line_end":24,"column_start":1,"column_end":66}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":520552,"byte_end":520562,"line_start":25,"line_end":25,"column_start":1,"column_end":11}}]},{"kind":"Type","id":{"krate":0,"index":4962},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":520853,"byte_end":520862,"line_start":36,"line_end":36,"column_start":10,"column_end":19},"name":"MatrixVec","qualname":"::base::vec_storage::MatrixVec","value":"VecStorage<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Renamed to [VecStorage].\n","sig":null,"attributes":[{"value":"deprecated(note = \"renamed to `VecStorage`\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":520767,"byte_end":520814,"line_start":34,"line_end":34,"column_start":1,"column_end":48}},{"value":"/ Renamed to [VecStorage].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":520815,"byte_end":520843,"line_start":35,"line_end":35,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4970},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":521050,"byte_end":521053,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<VecStorage<N, R, C>>::new","value":"pub fn new(R, C, Vec<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new dynamic matrix data storage from the given vector and shape.\n","sig":null,"attributes":[{"value":"/ Creates a new dynamic matrix data storage from the given vector and shape.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":520946,"byte_end":521024,"line_start":39,"line_end":39,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":521029,"byte_end":521038,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4971},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":521342,"byte_end":521348,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"as_vec","qualname":"<VecStorage<N, R, C>>::as_vec","value":"pub fn as_vec(&Self) -> &Vec<N>","parent":null,"children":[],"decl_id":null,"docs":" The underlying data storage.\n","sig":null,"attributes":[{"value":"/ The underlying data storage.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":521284,"byte_end":521316,"line_start":49,"line_end":49,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":521321,"byte_end":521330,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4972},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":521587,"byte_end":521597,"line_start":60,"line_end":60,"column_start":19,"column_end":29},"name":"as_vec_mut","qualname":"<VecStorage<N, R, C>>::as_vec_mut","value":"pub unsafe fn as_vec_mut(&mut Self) -> &mut Vec<N>","parent":null,"children":[],"decl_id":null,"docs":" The underlying mutable data storage.","sig":null,"attributes":[{"value":"/ The underlying mutable data storage.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":521399,"byte_end":521439,"line_start":55,"line_end":55,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":521444,"byte_end":521447,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This is unsafe because this may cause UB if the size of the vector is changed","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":521452,"byte_end":521533,"line_start":57,"line_end":57,"column_start":5,"column_end":86}},{"value":"/ by the user.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":521538,"byte_end":521554,"line_start":58,"line_end":58,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":521559,"byte_end":521568,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4973},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":521937,"byte_end":521943,"line_start":69,"line_end":69,"column_start":19,"column_end":25},"name":"resize","qualname":"<VecStorage<N, R, C>>::resize","value":"pub unsafe fn resize(Self, usize) -> Vec<N>","parent":null,"children":[],"decl_id":null,"docs":" Resizes the underlying mutable data storage and unwraps it.","sig":null,"attributes":[{"value":"/ Resizes the underlying mutable data storage and unwraps it.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":521660,"byte_end":521723,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":521728,"byte_end":521731,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ If `sz` is larger than the current size, additional elements are uninitialized.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":521736,"byte_end":521819,"line_start":66,"line_end":66,"column_start":5,"column_end":88}},{"value":"/ If `sz` is smaller than the current size, additional elements are truncated.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":521824,"byte_end":521904,"line_start":67,"line_end":67,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":521909,"byte_end":521918,"line_start":68,"line_end":68,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4974},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":522321,"byte_end":522324,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"len","qualname":"<VecStorage<N, R, C>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of elements on the underlying vector.\n","sig":null,"attributes":[{"value":"/ The number of elements on the underlying vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":522243,"byte_end":522295,"line_start":83,"line_end":83,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":522300,"byte_end":522309,"line_start":84,"line_end":84,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4975},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":522467,"byte_end":522475,"line_start":91,"line_end":91,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<VecStorage<N, R, C>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the underlying vector contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns true if the underlying vector contains no elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":522378,"byte_end":522441,"line_start":89,"line_end":89,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":522446,"byte_end":522455,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":5073},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/helper.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"helper","qualname":"::base::helper","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/helper.rs","parent":null,"children":[{"krate":0,"index":5074},{"krate":0,"index":5075},{"krate":0,"index":5078},{"krate":0,"index":5079},{"krate":0,"index":5081},{"krate":0,"index":5084}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5084},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/helper.rs","byte_start":531148,"byte_end":531159,"line_start":20,"line_end":20,"column_start":8,"column_end":19},"name":"reject_rand","qualname":"::base::helper::reject_rand","value":"pub fn reject_rand<G: Rng + ?Sized, F: FnMut(&T) -> bool, T>(&mut G, F) -> T\nwhere Standard: Distribution<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/helper.rs","byte_start":531131,"byte_end":531140,"line_start":19,"line_end":19,"column_start":1,"column_end":10}}]},{"kind":"Method","id":{"krate":0,"index":5141},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":532118,"byte_end":532122,"line_start":23,"line_end":23,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Vector<N, D, S>>::lerp","value":"pub fn lerp<S2: Storage<N, D>>(&Self, &Vector<N, D, S2>, N) -> VectorN<N, D>\nwhere DefaultAllocator: Allocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Returns `self * (1.0 - t) + rhs * t`, i.e., the linear blend of the vectors x and y using the scalar value a.","sig":null,"attributes":[{"value":"/ Returns `self * (1.0 - t) + rhs * t`, i.e., the linear blend of the vectors x and y using the scalar value a.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":531668,"byte_end":531781,"line_start":11,"line_end":11,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":531786,"byte_end":531789,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ The value for a is not restricted to the range `[0, 1]`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":531794,"byte_end":531854,"line_start":13,"line_end":13,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":531859,"byte_end":531862,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":531867,"byte_end":531882,"line_start":15,"line_end":15,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":531887,"byte_end":531890,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":531895,"byte_end":531902,"line_start":17,"line_end":17,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":531907,"byte_end":531935,"line_start":18,"line_end":18,"column_start":5,"column_end":33}},{"value":"/ let x = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":531940,"byte_end":531980,"line_start":19,"line_end":19,"column_start":5,"column_end":45}},{"value":"/ let y = Vector3::new(10.0, 20.0, 30.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":531985,"byte_end":532028,"line_start":20,"line_end":20,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(x.lerp(&y, 0.1), Vector3::new(1.9, 3.8, 5.7));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":532033,"byte_end":532094,"line_start":21,"line_end":21,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":532099,"byte_end":532106,"line_start":22,"line_end":22,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5143},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":532792,"byte_end":532797,"line_start":48,"line_end":48,"column_start":12,"column_end":17},"name":"slerp","qualname":"<Vector<N, D, S>>::slerp","value":"pub fn slerp<S2: Storage<N, D>>(&Self, &Vector<N, D, S2>, N) -> VectorN<N, D>\nwhere N: RealField, DefaultAllocator: Allocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the spherical linear interpolation between two non-zero vectors.","sig":null,"attributes":[{"value":"/ Computes the spherical linear interpolation between two non-zero vectors.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":532376,"byte_end":532453,"line_start":32,"line_end":32,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":532458,"byte_end":532461,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The result is a unit vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":532466,"byte_end":532498,"line_start":34,"line_end":34,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":532503,"byte_end":532506,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":532511,"byte_end":532526,"line_start":36,"line_end":36,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":532531,"byte_end":532534,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":532539,"byte_end":532546,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Unit, Vector2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":532551,"byte_end":532587,"line_start":39,"line_end":39,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":532592,"byte_end":532595,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let v1 =Vector2::new(1.0, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":532600,"byte_end":532635,"line_start":41,"line_end":41,"column_start":5,"column_end":40}},{"value":"/ let v2 = Vector2::new(2.0, -3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":532640,"byte_end":532677,"line_start":42,"line_end":42,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":532682,"byte_end":532685,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ let v = v1.slerp(&v2, 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":532690,"byte_end":532721,"line_start":44,"line_end":44,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":532726,"byte_end":532729,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v, v2.normalize());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":532734,"byte_end":532768,"line_start":46,"line_end":46,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":532773,"byte_end":532780,"line_start":47,"line_end":47,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5149},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":533632,"byte_end":533637,"line_start":75,"line_end":75,"column_start":12,"column_end":17},"name":"slerp","qualname":"<Unit<Vector<N, D, S>>>::slerp","value":"pub fn slerp<S2: Storage<N, D>>(&Self, &Unit<Vector<N, D, S2>>, N)\n-> Unit<VectorN<N, D>> where DefaultAllocator: Allocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the spherical linear interpolation between two unit vectors.","sig":null,"attributes":[{"value":"/ Computes the spherical linear interpolation between two unit vectors.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":533234,"byte_end":533307,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":533312,"byte_end":533315,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":533320,"byte_end":533335,"line_start":63,"line_end":63,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":533340,"byte_end":533343,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":533348,"byte_end":533355,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Unit, Vector2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":533360,"byte_end":533396,"line_start":66,"line_end":66,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":533401,"byte_end":533404,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ let v1 = Unit::new_normalize(Vector2::new(1.0, 2.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":533409,"byte_end":533466,"line_start":68,"line_end":68,"column_start":5,"column_end":62}},{"value":"/ let v2 = Unit::new_normalize(Vector2::new(2.0, -3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":533471,"byte_end":533529,"line_start":69,"line_end":69,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":533534,"byte_end":533537,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ let v = v1.slerp(&v2, 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":533542,"byte_end":533573,"line_start":71,"line_end":71,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":533578,"byte_end":533581,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v, v2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":533586,"byte_end":533608,"line_start":73,"line_end":73,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":533613,"byte_end":533620,"line_start":74,"line_end":74,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5152},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":534293,"byte_end":534302,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"try_slerp","qualname":"<Unit<Vector<N, D, S>>>::try_slerp","value":"pub fn try_slerp<S2: Storage<N, D>>(&Self, &Unit<Vector<N, D, S2>>, N, N)\n-> Option<Unit<VectorN<N, D>>> where DefaultAllocator: Allocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the spherical linear interpolation between two unit vectors.","sig":null,"attributes":[{"value":"/ Computes the spherical linear interpolation between two unit vectors.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":534043,"byte_end":534116,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":534121,"byte_end":534124,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the two vectors are almost collinear and with opposite direction","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":534129,"byte_end":534215,"line_start":90,"line_end":90,"column_start":5,"column_end":91}},{"value":"/ (in this case, there is an infinity of possible results).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":534220,"byte_end":534281,"line_start":91,"line_end":91,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":5195},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":535796,"byte_end":535800,"line_start":16,"line_end":16,"column_start":12,"column_end":16},"name":"amax","qualname":"<Matrix<N, R, C, S>>::amax","value":"pub fn amax(&Self) -> N where N: Zero + SimdSigned + SimdPartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Returns the absolute value of the component with the largest absolute value.\n # Example\n ```\n # use nalgebra::Vector3;\n assert_eq!(Vector3::new(-1.0, 2.0, 3.0).amax(), 3.0);\n assert_eq!(Vector3::new(-1.0, -2.0, -3.0).amax(), 3.0);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the absolute value of the component with the largest absolute value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":535489,"byte_end":535569,"line_start":8,"line_end":8,"column_start":5,"column_end":85}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":535574,"byte_end":535587,"line_start":9,"line_end":9,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":535592,"byte_end":535599,"line_start":10,"line_end":10,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":535604,"byte_end":535632,"line_start":11,"line_end":11,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Vector3::new(-1.0, 2.0, 3.0).amax(), 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":535637,"byte_end":535694,"line_start":12,"line_end":12,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(Vector3::new(-1.0, -2.0, -3.0).amax(), 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":535699,"byte_end":535758,"line_start":13,"line_end":13,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":535763,"byte_end":535770,"line_start":14,"line_end":14,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":535775,"byte_end":535784,"line_start":15,"line_end":15,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5198},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":536364,"byte_end":536369,"line_start":36,"line_end":36,"column_start":12,"column_end":17},"name":"camax","qualname":"<Matrix<N, R, C, S>>::camax","value":"pub fn camax(&Self) -> N::SimdRealField where N: SimdComplexField","parent":null,"children":[],"decl_id":null,"docs":" Returns the the 1-norm of the complex component with the largest 1-norm.\n # Example\n ```\n # use nalgebra::{Vector3, Complex};\n assert_eq!(Vector3::new(\n     Complex::new(-3.0, -2.0),\n     Complex::new(1.0, 2.0),\n     Complex::new(1.0, 3.0)).camax(), 5.0);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the the 1-norm of the complex component with the largest 1-norm.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":536018,"byte_end":536094,"line_start":26,"line_end":26,"column_start":5,"column_end":81}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":536099,"byte_end":536112,"line_start":27,"line_end":27,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":536117,"byte_end":536124,"line_start":28,"line_end":28,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, Complex};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":536129,"byte_end":536168,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(Vector3::new(","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":536173,"byte_end":536201,"line_start":30,"line_end":30,"column_start":5,"column_end":33}},{"value":"/     Complex::new(-3.0, -2.0),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":536206,"byte_end":536239,"line_start":31,"line_end":31,"column_start":5,"column_end":38}},{"value":"/     Complex::new(1.0, 2.0),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":536244,"byte_end":536275,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/     Complex::new(1.0, 3.0)).camax(), 5.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":536280,"byte_end":536326,"line_start":33,"line_end":33,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":536331,"byte_end":536338,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":536343,"byte_end":536352,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5201},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":536918,"byte_end":536921,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"max","qualname":"<Matrix<N, R, C, S>>::max","value":"pub fn max(&Self) -> N where N: SimdPartialOrd + Zero","parent":null,"children":[],"decl_id":null,"docs":" Returns the component with the largest value.\n # Example\n ```\n # use nalgebra::Vector3;\n assert_eq!(Vector3::new(-1.0, 2.0, 3.0).max(), 3.0);\n assert_eq!(Vector3::new(-1.0, -2.0, -3.0).max(), -1.0);\n assert_eq!(Vector3::new(5u32, 2, 3).max(), 5);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the component with the largest value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":536588,"byte_end":536637,"line_start":46,"line_end":46,"column_start":5,"column_end":54}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":536642,"byte_end":536655,"line_start":47,"line_end":47,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":536660,"byte_end":536667,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":536672,"byte_end":536700,"line_start":49,"line_end":49,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Vector3::new(-1.0, 2.0, 3.0).max(), 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":536705,"byte_end":536761,"line_start":50,"line_end":50,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(Vector3::new(-1.0, -2.0, -3.0).max(), -1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":536766,"byte_end":536825,"line_start":51,"line_end":51,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(Vector3::new(5u32, 2, 3).max(), 5);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":536830,"byte_end":536880,"line_start":52,"line_end":52,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":536885,"byte_end":536892,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":536897,"byte_end":536906,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5205},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":537457,"byte_end":537461,"line_start":73,"line_end":73,"column_start":12,"column_end":16},"name":"amin","qualname":"<Matrix<N, R, C, S>>::amin","value":"pub fn amin(&Self) -> N where N: Zero + SimdPartialOrd + SimdSigned","parent":null,"children":[],"decl_id":null,"docs":" Returns the absolute value of the component with the smallest absolute value.\n # Example\n ```\n # use nalgebra::Vector3;\n assert_eq!(Vector3::new(-1.0, 2.0, -3.0).amin(), 1.0);\n assert_eq!(Vector3::new(10.0, 2.0, 30.0).amin(), 2.0);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the absolute value of the component with the smallest absolute value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":537149,"byte_end":537230,"line_start":65,"line_end":65,"column_start":5,"column_end":86}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":537235,"byte_end":537248,"line_start":66,"line_end":66,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":537253,"byte_end":537260,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":537265,"byte_end":537293,"line_start":68,"line_end":68,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Vector3::new(-1.0, 2.0, -3.0).amin(), 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":537298,"byte_end":537356,"line_start":69,"line_end":69,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(Vector3::new(10.0, 2.0, 30.0).amin(), 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":537361,"byte_end":537419,"line_start":70,"line_end":70,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":537424,"byte_end":537431,"line_start":71,"line_end":71,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":537436,"byte_end":537445,"line_start":72,"line_end":72,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5209},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":538039,"byte_end":538044,"line_start":93,"line_end":93,"column_start":12,"column_end":17},"name":"camin","qualname":"<Matrix<N, R, C, S>>::camin","value":"pub fn camin(&Self) -> N::SimdRealField where N: SimdComplexField","parent":null,"children":[],"decl_id":null,"docs":" Returns the the 1-norm of the complex component with the smallest 1-norm.\n # Example\n ```\n # use nalgebra::{Vector3, Complex};\n assert_eq!(Vector3::new(\n     Complex::new(-3.0, -2.0),\n     Complex::new(1.0, 2.0),\n     Complex::new(1.0, 3.0)).camin(), 3.0);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the the 1-norm of the complex component with the smallest 1-norm.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":537692,"byte_end":537769,"line_start":83,"line_end":83,"column_start":5,"column_end":82}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":537774,"byte_end":537787,"line_start":84,"line_end":84,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":537792,"byte_end":537799,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, Complex};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":537804,"byte_end":537843,"line_start":86,"line_end":86,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(Vector3::new(","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":537848,"byte_end":537876,"line_start":87,"line_end":87,"column_start":5,"column_end":33}},{"value":"/     Complex::new(-3.0, -2.0),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":537881,"byte_end":537914,"line_start":88,"line_end":88,"column_start":5,"column_end":38}},{"value":"/     Complex::new(1.0, 2.0),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":537919,"byte_end":537950,"line_start":89,"line_end":89,"column_start":5,"column_end":36}},{"value":"/     Complex::new(1.0, 3.0)).camin(), 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":537955,"byte_end":538001,"line_start":90,"line_end":90,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":538006,"byte_end":538013,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":538018,"byte_end":538027,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5213},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":538672,"byte_end":538675,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"min","qualname":"<Matrix<N, R, C, S>>::min","value":"pub fn min(&Self) -> N where N: SimdPartialOrd + Zero","parent":null,"children":[],"decl_id":null,"docs":" Returns the component with the smallest value.\n # Example\n ```\n # use nalgebra::Vector3;\n assert_eq!(Vector3::new(-1.0, 2.0, 3.0).min(), -1.0);\n assert_eq!(Vector3::new(1.0, 2.0, 3.0).min(), 1.0);\n assert_eq!(Vector3::new(5u32, 2, 3).min(), 2);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the component with the smallest value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":538344,"byte_end":538394,"line_start":106,"line_end":106,"column_start":5,"column_end":55}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":538399,"byte_end":538412,"line_start":107,"line_end":107,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":538417,"byte_end":538424,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":538429,"byte_end":538457,"line_start":109,"line_end":109,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Vector3::new(-1.0, 2.0, 3.0).min(), -1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":538462,"byte_end":538519,"line_start":110,"line_end":110,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(Vector3::new(1.0, 2.0, 3.0).min(), 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":538524,"byte_end":538579,"line_start":111,"line_end":111,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(Vector3::new(5u32, 2, 3).min(), 2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":538584,"byte_end":538634,"line_start":112,"line_end":112,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":538639,"byte_end":538646,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":538651,"byte_end":538660,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5217},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":539475,"byte_end":539486,"line_start":139,"line_end":139,"column_start":12,"column_end":23},"name":"icamax_full","qualname":"<Matrix<N, R, C, S>>::icamax_full","value":"pub fn icamax_full(&Self) -> (usize, usize) where N: ComplexField","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the matrix component with the largest absolute value.","sig":null,"attributes":[{"value":"/ Computes the index of the matrix component with the largest absolute value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":538903,"byte_end":538982,"line_start":125,"line_end":125,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":538987,"byte_end":538990,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":538995,"byte_end":539010,"line_start":127,"line_end":127,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":539015,"byte_end":539018,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":539023,"byte_end":539030,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ # extern crate num_complex;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":539035,"byte_end":539066,"line_start":130,"line_end":130,"column_start":5,"column_end":36}},{"value":"/ # extern crate nalgebra;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":539071,"byte_end":539099,"line_start":131,"line_end":131,"column_start":5,"column_end":33}},{"value":"/ # use num_complex::Complex;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":539104,"byte_end":539135,"line_start":132,"line_end":132,"column_start":5,"column_end":36}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":539140,"byte_end":539170,"line_start":133,"line_end":133,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix2x3::new(Complex::new(11.0, 1.0), Complex::new(-12.0, 2.0), Complex::new(13.0, 3.0),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":539175,"byte_end":539279,"line_start":134,"line_end":134,"column_start":5,"column_end":109}},{"value":"/                          Complex::new(21.0, 43.0), Complex::new(22.0, 5.0), Complex::new(-23.0, 0.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":539284,"byte_end":539390,"line_start":135,"line_end":135,"column_start":5,"column_end":111}},{"value":"/ assert_eq!(mat.icamax_full(), (1, 0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":539395,"byte_end":539437,"line_start":136,"line_end":136,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":539442,"byte_end":539449,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":539454,"byte_end":539463,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5223},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":540496,"byte_end":540506,"line_start":175,"line_end":175,"column_start":12,"column_end":22},"name":"iamax_full","qualname":"<Matrix<N, R, C, S>>::iamax_full","value":"pub fn iamax_full(&Self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the matrix component with the largest absolute value.","sig":null,"attributes":[{"value":"/ Computes the index of the matrix component with the largest absolute value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":540157,"byte_end":540236,"line_start":164,"line_end":164,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":540241,"byte_end":540244,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":540249,"byte_end":540264,"line_start":166,"line_end":166,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":540269,"byte_end":540272,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":540277,"byte_end":540284,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":540289,"byte_end":540319,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix2x3::new(11, -12, 13,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":540324,"byte_end":540365,"line_start":170,"line_end":170,"column_start":5,"column_end":46}},{"value":"/                          21, 22, -23);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":540370,"byte_end":540412,"line_start":171,"line_end":171,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(mat.iamax_full(), (1, 2));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":540417,"byte_end":540458,"line_start":172,"line_end":172,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":540463,"byte_end":540470,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":540475,"byte_end":540484,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5228},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":541705,"byte_end":541711,"line_start":212,"line_end":212,"column_start":12,"column_end":18},"name":"icamax","qualname":"<Vector<N, D, S>>::icamax","value":"pub fn icamax(&Self) -> usize where N: ComplexField","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the vector component with the largest complex or real absolute value.","sig":null,"attributes":[{"value":"/ Computes the index of the vector component with the largest complex or real absolute value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":541241,"byte_end":541336,"line_start":199,"line_end":199,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":541341,"byte_end":541344,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":541349,"byte_end":541364,"line_start":201,"line_end":201,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":541369,"byte_end":541372,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":541377,"byte_end":541384,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ # extern crate num_complex;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":541389,"byte_end":541420,"line_start":204,"line_end":204,"column_start":5,"column_end":36}},{"value":"/ # extern crate nalgebra;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":541425,"byte_end":541453,"line_start":205,"line_end":205,"column_start":5,"column_end":33}},{"value":"/ # use num_complex::Complex;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":541458,"byte_end":541489,"line_start":206,"line_end":206,"column_start":5,"column_end":36}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":541494,"byte_end":541522,"line_start":207,"line_end":207,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(Complex::new(11.0, 3.0), Complex::new(-15.0, 0.0), Complex::new(13.0, 5.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":541527,"byte_end":541630,"line_start":208,"line_end":208,"column_start":5,"column_end":108}},{"value":"/ assert_eq!(vec.icamax(), 2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":541635,"byte_end":541667,"line_start":209,"line_end":209,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":541672,"byte_end":541679,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":541684,"byte_end":541693,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5229},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":542468,"byte_end":542474,"line_start":243,"line_end":243,"column_start":12,"column_end":18},"name":"argmax","qualname":"<Vector<N, D, S>>::argmax","value":"pub fn argmax(&Self) -> (usize, N) where N: PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Computes the index and value of the vector component with the largest value.","sig":null,"attributes":[{"value":"/ Computes the index and value of the vector component with the largest value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":542181,"byte_end":542261,"line_start":233,"line_end":233,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":542266,"byte_end":542269,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":542274,"byte_end":542289,"line_start":235,"line_end":235,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":542294,"byte_end":542297,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":542302,"byte_end":542309,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":542314,"byte_end":542342,"line_start":238,"line_end":238,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":542347,"byte_end":542387,"line_start":239,"line_end":239,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.argmax(), (2, 13));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":542392,"byte_end":542430,"line_start":240,"line_end":240,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":542435,"byte_end":542442,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":542447,"byte_end":542456,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5230},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":543227,"byte_end":543231,"line_start":274,"line_end":274,"column_start":12,"column_end":16},"name":"imax","qualname":"<Vector<N, D, S>>::imax","value":"pub fn imax(&Self) -> usize where N: PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the vector component with the largest value.","sig":null,"attributes":[{"value":"/ Computes the index of the vector component with the largest value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":542958,"byte_end":543028,"line_start":264,"line_end":264,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":543033,"byte_end":543036,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":543041,"byte_end":543056,"line_start":266,"line_end":266,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":543061,"byte_end":543064,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":543069,"byte_end":543076,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":543081,"byte_end":543109,"line_start":269,"line_end":269,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":543114,"byte_end":543154,"line_start":270,"line_end":270,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.imax(), 2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":543159,"byte_end":543189,"line_start":271,"line_end":271,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":543194,"byte_end":543201,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":543206,"byte_end":543215,"line_start":273,"line_end":273,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5231},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":543601,"byte_end":543606,"line_start":291,"line_end":291,"column_start":12,"column_end":17},"name":"iamax","qualname":"<Vector<N, D, S>>::iamax","value":"pub fn iamax(&Self) -> usize where N: PartialOrd + Signed","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the vector component with the largest absolute value.","sig":null,"attributes":[{"value":"/ Computes the index of the vector component with the largest absolute value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":543322,"byte_end":543401,"line_start":281,"line_end":281,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":543406,"byte_end":543409,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":543414,"byte_end":543429,"line_start":283,"line_end":283,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":543434,"byte_end":543437,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":543442,"byte_end":543449,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":543454,"byte_end":543482,"line_start":286,"line_end":286,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":543487,"byte_end":543527,"line_start":287,"line_end":287,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.iamax(), 1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":543532,"byte_end":543563,"line_start":288,"line_end":288,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":543568,"byte_end":543575,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":543580,"byte_end":543589,"line_start":290,"line_end":290,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5232},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":544368,"byte_end":544374,"line_start":322,"line_end":322,"column_start":12,"column_end":18},"name":"argmin","qualname":"<Vector<N, D, S>>::argmin","value":"pub fn argmin(&Self) -> (usize, N) where N: PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Computes the index and value of the vector component with the smallest value.","sig":null,"attributes":[{"value":"/ Computes the index and value of the vector component with the smallest value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":544079,"byte_end":544160,"line_start":312,"line_end":312,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":544165,"byte_end":544168,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":544173,"byte_end":544188,"line_start":314,"line_end":314,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":544193,"byte_end":544196,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":544201,"byte_end":544208,"line_start":316,"line_end":316,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":544213,"byte_end":544241,"line_start":317,"line_end":317,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":544246,"byte_end":544286,"line_start":318,"line_end":318,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.argmin(), (1, -15));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":544291,"byte_end":544330,"line_start":319,"line_end":319,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":544335,"byte_end":544342,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":544347,"byte_end":544356,"line_start":321,"line_end":321,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5233},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":545128,"byte_end":545132,"line_start":353,"line_end":353,"column_start":12,"column_end":16},"name":"imin","qualname":"<Vector<N, D, S>>::imin","value":"pub fn imin(&Self) -> usize where N: PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the vector component with the smallest value.","sig":null,"attributes":[{"value":"/ Computes the index of the vector component with the smallest value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":544858,"byte_end":544929,"line_start":343,"line_end":343,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":544934,"byte_end":544937,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":544942,"byte_end":544957,"line_start":345,"line_end":345,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":544962,"byte_end":544965,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":544970,"byte_end":544977,"line_start":347,"line_end":347,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":544982,"byte_end":545010,"line_start":348,"line_end":348,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":545015,"byte_end":545055,"line_start":349,"line_end":349,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.imin(), 1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":545060,"byte_end":545090,"line_start":350,"line_end":350,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":545095,"byte_end":545102,"line_start":351,"line_end":351,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":545107,"byte_end":545116,"line_start":352,"line_end":352,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5234},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":545503,"byte_end":545508,"line_start":370,"line_end":370,"column_start":12,"column_end":17},"name":"iamin","qualname":"<Vector<N, D, S>>::iamin","value":"pub fn iamin(&Self) -> usize where N: PartialOrd + Signed","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the vector component with the smallest absolute value.","sig":null,"attributes":[{"value":"/ Computes the index of the vector component with the smallest absolute value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":545223,"byte_end":545303,"line_start":360,"line_end":360,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":545308,"byte_end":545311,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":545316,"byte_end":545331,"line_start":362,"line_end":362,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":545336,"byte_end":545339,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":545344,"byte_end":545351,"line_start":364,"line_end":364,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":545356,"byte_end":545384,"line_start":365,"line_end":365,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":545389,"byte_end":545429,"line_start":366,"line_end":366,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.iamin(), 0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":545434,"byte_end":545465,"line_start":367,"line_end":367,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":545470,"byte_end":545477,"line_start":368,"line_end":368,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":545482,"byte_end":545491,"line_start":369,"line_end":369,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":5246},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"geometry","qualname":"::geometry","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/mod.rs","parent":null,"children":[{"krate":0,"index":5247},{"krate":0,"index":5254},{"krate":0,"index":5339},{"krate":0,"index":5465},{"krate":0,"index":5500},{"krate":0,"index":5613},{"krate":0,"index":5717},{"krate":0,"index":5777},{"krate":0,"index":5910},{"krate":0,"index":5945},{"krate":0,"index":6077},{"krate":0,"index":6092},{"krate":0,"index":6134},{"krate":0,"index":6322},{"krate":0,"index":6350},{"krate":0,"index":6438},{"krate":0,"index":6473},{"krate":0,"index":6633},{"krate":0,"index":6864},{"krate":0,"index":7020},{"krate":0,"index":7207},{"krate":0,"index":7237},{"krate":0,"index":7340},{"krate":0,"index":7379},{"krate":0,"index":7391},{"krate":0,"index":7406},{"krate":0,"index":7466},{"krate":0,"index":7583},{"krate":0,"index":7678},{"krate":0,"index":7818},{"krate":0,"index":7964},{"krate":0,"index":7994},{"krate":0,"index":8117},{"krate":0,"index":8152},{"krate":0,"index":8226},{"krate":0,"index":8373},{"krate":0,"index":8436},{"krate":0,"index":8495},{"krate":0,"index":8530},{"krate":0,"index":8681},{"krate":0,"index":8716},{"krate":0,"index":8840},{"krate":0,"index":8995},{"krate":0,"index":9029},{"krate":0,"index":9119},{"krate":0,"index":9158},{"krate":0,"index":9317},{"krate":0,"index":9349},{"krate":0,"index":9452},{"krate":0,"index":9596},{"krate":0,"index":9686},{"krate":0,"index":9726},{"krate":0,"index":9764},{"krate":0,"index":9925},{"krate":0,"index":9958},{"krate":0,"index":10002},{"krate":0,"index":10065},{"krate":0,"index":10193},{"krate":0,"index":10243},{"krate":0,"index":10330},{"krate":0,"index":10431},{"krate":0,"index":10528},{"krate":0,"index":10531},{"krate":0,"index":10532},{"krate":0,"index":10533},{"krate":0,"index":10534},{"krate":0,"index":10535},{"krate":0,"index":10536},{"krate":0,"index":10537},{"krate":0,"index":10538},{"krate":0,"index":10539},{"krate":0,"index":10540},{"krate":0,"index":10541},{"krate":0,"index":10542},{"krate":0,"index":10543},{"krate":0,"index":10544},{"krate":0,"index":10545},{"krate":0,"index":10546},{"krate":0,"index":10547},{"krate":0,"index":10550}],"decl_id":null,"docs":" [Reexported at the root of this crate.] Data structures for points and usual transformations\n (rotations, isometries, etc.)\n","sig":null,"attributes":[{"value":"/ [Reexported at the root of this crate.] Data structures for points and usual transformations","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/mod.rs","byte_start":545979,"byte_end":546075,"line_start":1,"line_end":1,"column_start":1,"column_end":97}},{"value":"/ (rotations, isometries, etc.)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/mod.rs","byte_start":546076,"byte_end":546109,"line_start":2,"line_end":2,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":5299},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/abstract_rotation.rs","byte_start":557592,"byte_end":557608,"line_start":8,"line_end":8,"column_start":11,"column_end":27},"name":"AbstractRotation","qualname":"::geometry::abstract_rotation::AbstractRotation","value":"AbstractRotation<N: Scalar, D: DimName>: PartialEq + ClosedMul + Clone","parent":null,"children":[{"krate":0,"index":5302},{"krate":0,"index":5303},{"krate":0,"index":5304},{"krate":0,"index":5305},{"krate":0,"index":5306},{"krate":0,"index":5307},{"krate":0,"index":5308},{"krate":0,"index":5309}],"decl_id":null,"docs":" Trait implemented by rotations that can be used inside of an `Isometry` or `Similarity`.\n","sig":null,"attributes":[{"value":"/ Trait implemented by rotations that can be used inside of an `Isometry` or `Similarity`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/abstract_rotation.rs","byte_start":557489,"byte_end":557581,"line_start":7,"line_end":7,"column_start":1,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":5302},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/abstract_rotation.rs","byte_start":557703,"byte_end":557711,"line_start":10,"line_end":10,"column_start":8,"column_end":16},"name":"identity","qualname":"::geometry::abstract_rotation::AbstractRotation::identity","value":"pub fn identity() -> Self","parent":{"krate":0,"index":5299},"children":[],"decl_id":null,"docs":" The rotation identity.\n","sig":null,"attributes":[{"value":"/ The rotation identity.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/abstract_rotation.rs","byte_start":557669,"byte_end":557695,"line_start":9,"line_end":9,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":5303},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/abstract_rotation.rs","byte_start":557760,"byte_end":557767,"line_start":12,"line_end":12,"column_start":8,"column_end":15},"name":"inverse","qualname":"::geometry::abstract_rotation::AbstractRotation::inverse","value":"pub fn inverse(&Self) -> Self","parent":{"krate":0,"index":5299},"children":[],"decl_id":null,"docs":" The rotation inverse.\n","sig":null,"attributes":[{"value":"/ The rotation inverse.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/abstract_rotation.rs","byte_start":557727,"byte_end":557752,"line_start":11,"line_end":11,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5304},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/abstract_rotation.rs","byte_start":557829,"byte_end":557840,"line_start":14,"line_end":14,"column_start":8,"column_end":19},"name":"inverse_mut","qualname":"::geometry::abstract_rotation::AbstractRotation::inverse_mut","value":"pub fn inverse_mut(&mut Self)","parent":{"krate":0,"index":5299},"children":[],"decl_id":null,"docs":" Change `self` to its inverse.\n","sig":null,"attributes":[{"value":"/ Change `self` to its inverse.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/abstract_rotation.rs","byte_start":557788,"byte_end":557821,"line_start":13,"line_end":13,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":5305},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/abstract_rotation.rs","byte_start":557908,"byte_end":557924,"line_start":16,"line_end":16,"column_start":8,"column_end":24},"name":"transform_vector","qualname":"::geometry::abstract_rotation::AbstractRotation::transform_vector","value":"pub fn transform_vector(&Self, &VectorN<N, D>) -> VectorN<N, D> where\nDefaultAllocator: Allocator<N, D>","parent":{"krate":0,"index":5299},"children":[],"decl_id":null,"docs":" Apply the rotation to the given vector.\n","sig":null,"attributes":[{"value":"/ Apply the rotation to the given vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/abstract_rotation.rs","byte_start":557857,"byte_end":557900,"line_start":15,"line_end":15,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":5306},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/abstract_rotation.rs","byte_start":558075,"byte_end":558090,"line_start":20,"line_end":20,"column_start":8,"column_end":23},"name":"transform_point","qualname":"::geometry::abstract_rotation::AbstractRotation::transform_point","value":"pub fn transform_point(&Self, &Point<N, D>) -> Point<N, D> where\nDefaultAllocator: Allocator<N, D>","parent":{"krate":0,"index":5299},"children":[],"decl_id":null,"docs":" Apply the rotation to the given point.\n","sig":null,"attributes":[{"value":"/ Apply the rotation to the given point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/abstract_rotation.rs","byte_start":558025,"byte_end":558067,"line_start":19,"line_end":19,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":5307},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/abstract_rotation.rs","byte_start":558246,"byte_end":558270,"line_start":24,"line_end":24,"column_start":8,"column_end":32},"name":"inverse_transform_vector","qualname":"::geometry::abstract_rotation::AbstractRotation::inverse_transform_vector","value":"pub fn inverse_transform_vector(&Self, &VectorN<N, D>) -> VectorN<N, D> where\nDefaultAllocator: Allocator<N, D>","parent":{"krate":0,"index":5299},"children":[],"decl_id":null,"docs":" Apply the inverse rotation to the given vector.\n","sig":null,"attributes":[{"value":"/ Apply the inverse rotation to the given vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/abstract_rotation.rs","byte_start":558187,"byte_end":558238,"line_start":23,"line_end":23,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":5308},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/abstract_rotation.rs","byte_start":558435,"byte_end":558464,"line_start":28,"line_end":28,"column_start":8,"column_end":37},"name":"inverse_transform_unit_vector","qualname":"::geometry::abstract_rotation::AbstractRotation::inverse_transform_unit_vector","value":"pub fn inverse_transform_unit_vector(&Self, &Unit<VectorN<N, D>>)\n-> Unit<VectorN<N, D>> where DefaultAllocator: Allocator<N, D>","parent":{"krate":0,"index":5299},"children":[],"decl_id":null,"docs":" Apply the inverse rotation to the given unit vector.\n","sig":null,"attributes":[{"value":"/ Apply the inverse rotation to the given unit vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/abstract_rotation.rs","byte_start":558371,"byte_end":558427,"line_start":27,"line_end":27,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":5309},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/abstract_rotation.rs","byte_start":558712,"byte_end":558735,"line_start":35,"line_end":35,"column_start":8,"column_end":31},"name":"inverse_transform_point","qualname":"::geometry::abstract_rotation::AbstractRotation::inverse_transform_point","value":"pub fn inverse_transform_point(&Self, &Point<N, D>) -> Point<N, D> where\nDefaultAllocator: Allocator<N, D>","parent":{"krate":0,"index":5299},"children":[],"decl_id":null,"docs":" Apply the inverse rotation to the given point.\n","sig":null,"attributes":[{"value":"/ Apply the inverse rotation to the given point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/abstract_rotation.rs","byte_start":558654,"byte_end":558704,"line_start":34,"line_end":34,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":21708},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":563810,"byte_end":563815,"line_start":43,"line_end":43,"column_start":12,"column_end":17},"name":"Point","qualname":"::geometry::point::Point","value":"Point { coords }","parent":null,"children":[{"krate":0,"index":21711}],"decl_id":null,"docs":" A point in an euclidean space.","sig":null,"attributes":[{"value":"/ A point in an euclidean space.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":562420,"byte_end":562454,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":562455,"byte_end":562458,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The difference between a point and a vector is only semantic. See [the user guide](https://www.nalgebra.org/points_and_transformations/)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":562459,"byte_end":562599,"line_start":24,"line_end":24,"column_start":1,"column_end":141}},{"value":"/ for details on the distinction. The most notable difference that vectors ignore translations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":562600,"byte_end":562697,"line_start":25,"line_end":25,"column_start":1,"column_end":98}},{"value":"/ In particular, an [`Isometry2`](crate::Isometry2) or [`Isometry3`](crate::Isometry3) will","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":562698,"byte_end":562791,"line_start":26,"line_end":26,"column_start":1,"column_end":94}},{"value":"/ transform points by applying a rotation and a translation on them. However, these isometries","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":562792,"byte_end":562888,"line_start":27,"line_end":27,"column_start":1,"column_end":97}},{"value":"/ will only apply rotations to vectors (when doing `isometry * vector`, the translation part of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":562889,"byte_end":562986,"line_start":28,"line_end":28,"column_start":1,"column_end":98}},{"value":"/ the isometry is ignored).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":562987,"byte_end":563016,"line_start":29,"line_end":29,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":563017,"byte_end":563020,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Construction","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":563021,"byte_end":563039,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/ * [From individual components <span style=\"float:right;\">`new`…</span>](#construction-from-individual-components)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":563040,"byte_end":563159,"line_start":32,"line_end":32,"column_start":1,"column_end":118}},{"value":"/ * [Swizzling <span style=\"float:right;\">`xx`, `yxz`…</span>](#swizzling)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":563160,"byte_end":563238,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ * [Other construction methods <span style=\"float:right;\">`origin`, `from_slice`, `from_homogeneous`…</span>](#other-construction-methods)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":563239,"byte_end":563382,"line_start":34,"line_end":34,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":563383,"byte_end":563386,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Transformation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":563387,"byte_end":563407,"line_start":36,"line_end":36,"column_start":1,"column_end":21}},{"value":"/ Transforming a point by an [Isometry](crate::Isometry), [rotation](crate::Rotation), etc. can be","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":563408,"byte_end":563508,"line_start":37,"line_end":37,"column_start":1,"column_end":101}},{"value":"/ achieved by multiplication, e.g., `isometry * point` or `rotation * point`. Some of these transformation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":563509,"byte_end":563617,"line_start":38,"line_end":38,"column_start":1,"column_end":109}},{"value":"/ may have some other methods, e.g., `isometry.inverse_transform_point(&point)`. See the documentation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":563618,"byte_end":563722,"line_start":39,"line_end":39,"column_start":1,"column_end":105}},{"value":"/ of said transformations for details.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":563723,"byte_end":563763,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":563764,"byte_end":563774,"line_start":41,"line_end":41,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":21711},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":563966,"byte_end":563972,"line_start":48,"line_end":48,"column_start":9,"column_end":15},"name":"coords","qualname":"::geometry::point::Point::coords","value":"base::matrix::Matrix<N, D, base::dimension::U1, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, D>>::Buffer>","parent":{"krate":0,"index":21708},"children":[],"decl_id":null,"docs":" The coordinates of this point, i.e., the shift from the origin.\n","sig":null,"attributes":[{"value":"/ The coordinates of this point, i.e., the shift from the origin.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":563890,"byte_end":563957,"line_start":47,"line_end":47,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":5409},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":566293,"byte_end":566296,"line_start":136,"line_end":136,"column_start":12,"column_end":15},"name":"map","qualname":"<Point<N, D>>::map","value":"pub fn map<N2: Scalar, F: FnMut(N) -> N2>(&Self, F) -> Point<N2, D> where\nDefaultAllocator: Allocator<N2, D>","parent":null,"children":[],"decl_id":null,"docs":" Returns a point containing the result of `f` applied to each of its entries.","sig":null,"attributes":[{"value":"/ Returns a point containing the result of `f` applied to each of its entries.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":565835,"byte_end":565915,"line_start":123,"line_end":123,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":565920,"byte_end":565923,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":565928,"byte_end":565941,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":565946,"byte_end":565953,"line_start":126,"line_end":126,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":565958,"byte_end":565995,"line_start":127,"line_end":127,"column_start":5,"column_end":42}},{"value":"/ let p = Point2::new(1.0, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":566000,"byte_end":566034,"line_start":128,"line_end":128,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.map(|e| e * 10.0), Point2::new(10.0, 20.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":566039,"byte_end":566100,"line_start":129,"line_end":129,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":566105,"byte_end":566108,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ // This works in any dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":566113,"byte_end":566148,"line_start":131,"line_end":131,"column_start":5,"column_end":40}},{"value":"/ let p = Point3::new(1.1, 2.1, 3.1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":566153,"byte_end":566192,"line_start":132,"line_end":132,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(p.map(|e| e as u32), Point3::new(1, 2, 3));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":566197,"byte_end":566255,"line_start":133,"line_end":133,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":566260,"byte_end":566267,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":566272,"byte_end":566281,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5412},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":566966,"byte_end":566971,"line_start":158,"line_end":158,"column_start":12,"column_end":17},"name":"apply","qualname":"<Point<N, D>>::apply","value":"pub fn apply<F: FnMut(N) -> N>(&mut Self, F)","parent":null,"children":[],"decl_id":null,"docs":" Replaces each component of `self` by the result of a closure `f` applied on it.","sig":null,"attributes":[{"value":"/ Replaces each component of `self` by the result of a closure `f` applied on it.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":566462,"byte_end":566545,"line_start":143,"line_end":143,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":566550,"byte_end":566553,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":566558,"byte_end":566571,"line_start":145,"line_end":145,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":566576,"byte_end":566583,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":566588,"byte_end":566625,"line_start":147,"line_end":147,"column_start":5,"column_end":42}},{"value":"/ let mut p = Point2::new(1.0, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":566630,"byte_end":566668,"line_start":148,"line_end":148,"column_start":5,"column_end":43}},{"value":"/ p.apply(|e| e * 10.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":566673,"byte_end":566699,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(p, Point2::new(10.0, 20.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":566704,"byte_end":566747,"line_start":150,"line_end":150,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":566752,"byte_end":566755,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ // This works in any dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":566760,"byte_end":566795,"line_start":152,"line_end":152,"column_start":5,"column_end":40}},{"value":"/ let mut p = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":566800,"byte_end":566843,"line_start":153,"line_end":153,"column_start":5,"column_end":48}},{"value":"/ p.apply(|e| e * 10.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":566848,"byte_end":566874,"line_start":154,"line_end":154,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(p, Point3::new(10.0, 20.0, 30.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":566879,"byte_end":566928,"line_start":155,"line_end":155,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":566933,"byte_end":566940,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":566945,"byte_end":566954,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5414},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":567627,"byte_end":567641,"line_start":178,"line_end":178,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Point<N, D>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> VectorN<N, DimNameSum<D, U1>> where N: One,\nD: DimNameAdd<U1>, DefaultAllocator: Allocator<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this point into a vector in homogeneous coordinates, i.e., appends a `1` at the\n end of it.","sig":null,"attributes":[{"value":"/ Converts this point into a vector in homogeneous coordinates, i.e., appends a `1` at the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":567049,"byte_end":567141,"line_start":162,"line_end":162,"column_start":5,"column_end":97}},{"value":"/ end of it.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":567146,"byte_end":567160,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":567165,"byte_end":567168,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ This is the same as `.into()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":567173,"byte_end":567207,"line_start":165,"line_end":165,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":567212,"byte_end":567215,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":567220,"byte_end":567233,"line_start":167,"line_end":167,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":567238,"byte_end":567245,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3, Vector3, Vector4};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":567250,"byte_end":567305,"line_start":169,"line_end":169,"column_start":5,"column_end":60}},{"value":"/ let p = Point2::new(10.0, 20.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":567310,"byte_end":567346,"line_start":170,"line_end":170,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(p.to_homogeneous(), Vector3::new(10.0, 20.0, 1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":567351,"byte_end":567417,"line_start":171,"line_end":171,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":567422,"byte_end":567425,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ // This works in any dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":567430,"byte_end":567465,"line_start":173,"line_end":173,"column_start":5,"column_end":40}},{"value":"/ let p = Point3::new(10.0, 20.0, 30.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":567470,"byte_end":567512,"line_start":174,"line_end":174,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(p.to_homogeneous(), Vector4::new(10.0, 20.0, 30.0, 1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":567517,"byte_end":567589,"line_start":175,"line_end":175,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":567594,"byte_end":567601,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":567606,"byte_end":567615,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5415},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":568156,"byte_end":568172,"line_start":194,"line_end":194,"column_start":12,"column_end":28},"name":"from_coordinates","qualname":"<Point<N, D>>::from_coordinates","value":"pub fn from_coordinates(VectorN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new point with the given coordinates.\n","sig":null,"attributes":[{"value":"/ Creates a new point with the given coordinates.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":568018,"byte_end":568069,"line_start":191,"line_end":191,"column_start":5,"column_end":56}},{"value":"deprecated(note = \"Use Point::from(vector) instead.\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":568074,"byte_end":568130,"line_start":192,"line_end":192,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":568135,"byte_end":568144,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5416},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":568589,"byte_end":568592,"line_start":211,"line_end":211,"column_start":12,"column_end":15},"name":"len","qualname":"<Point<N, D>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The dimension of this point.","sig":null,"attributes":[{"value":"/ The dimension of this point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":568241,"byte_end":568273,"line_start":198,"line_end":198,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":568278,"byte_end":568281,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":568286,"byte_end":568299,"line_start":200,"line_end":200,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":568304,"byte_end":568311,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":568316,"byte_end":568353,"line_start":202,"line_end":202,"column_start":5,"column_end":42}},{"value":"/ let p = Point2::new(1.0, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":568358,"byte_end":568392,"line_start":203,"line_end":203,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.len(), 2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":568397,"byte_end":568424,"line_start":204,"line_end":204,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":568429,"byte_end":568432,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ // This works in any dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":568437,"byte_end":568472,"line_start":206,"line_end":206,"column_start":5,"column_end":40}},{"value":"/ let p = Point3::new(10.0, 20.0, 30.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":568477,"byte_end":568519,"line_start":207,"line_end":207,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(p.len(), 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":568524,"byte_end":568551,"line_start":208,"line_end":208,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":568556,"byte_end":568563,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":568568,"byte_end":568577,"line_start":210,"line_end":210,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5417},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":568888,"byte_end":568896,"line_start":224,"line_end":224,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Point<N, D>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the point contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the point contains no elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":568648,"byte_end":568699,"line_start":215,"line_end":215,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":568704,"byte_end":568707,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":568712,"byte_end":568725,"line_start":217,"line_end":217,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":568730,"byte_end":568737,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":568742,"byte_end":568779,"line_start":219,"line_end":219,"column_start":5,"column_end":42}},{"value":"/ let p = Point2::new(1.0, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":568784,"byte_end":568818,"line_start":220,"line_end":220,"column_start":5,"column_end":39}},{"value":"/ assert!(!p.is_empty());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":568823,"byte_end":568850,"line_start":221,"line_end":221,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":568855,"byte_end":568862,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":568867,"byte_end":568876,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5418},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":569182,"byte_end":569188,"line_start":232,"line_end":232,"column_start":12,"column_end":18},"name":"stride","qualname":"<Point<N, D>>::stride","value":"pub fn stride(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The stride of this point. This is the number of buffer element separating each component of\n this point.\n","sig":null,"attributes":[{"value":"/ The stride of this point. This is the number of buffer element separating each component of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":568949,"byte_end":569044,"line_start":228,"line_end":228,"column_start":5,"column_end":100}},{"value":"/ this point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":569049,"byte_end":569064,"line_start":229,"line_end":229,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":569069,"byte_end":569078,"line_start":230,"line_end":230,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This methods is no longer significant and will always return 1.\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":569083,"byte_end":569170,"line_start":231,"line_end":231,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":5419},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":569645,"byte_end":569649,"line_start":249,"line_end":249,"column_start":12,"column_end":16},"name":"iter","qualname":"<Point<N, D>>::iter","value":"pub fn iter(&Self)\n-> MatrixIter<, N, D, U1, <DefaultAllocator as Allocator<N, D>>::Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Iterates through this point coordinates.","sig":null,"attributes":[{"value":"/ Iterates through this point coordinates.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":569250,"byte_end":569294,"line_start":236,"line_end":236,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":569299,"byte_end":569302,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":569307,"byte_end":569320,"line_start":238,"line_end":238,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":569325,"byte_end":569332,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Point3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":569337,"byte_end":569364,"line_start":240,"line_end":240,"column_start":5,"column_end":32}},{"value":"/ let p = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":569369,"byte_end":569408,"line_start":241,"line_end":241,"column_start":5,"column_end":44}},{"value":"/ let mut it = p.iter().cloned();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":569413,"byte_end":569448,"line_start":242,"line_end":242,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":569453,"byte_end":569456,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(it.next(), Some(1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":569461,"byte_end":569498,"line_start":244,"line_end":244,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(it.next(), Some(2.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":569503,"byte_end":569540,"line_start":245,"line_end":245,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(it.next(), Some(3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":569545,"byte_end":569582,"line_start":246,"line_end":246,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(it.next(), None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":569587,"byte_end":569619,"line_start":247,"line_end":247,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":569624,"byte_end":569633,"line_start":248,"line_end":248,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5420},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":569875,"byte_end":569888,"line_start":255,"line_end":255,"column_start":19,"column_end":32},"name":"get_unchecked","qualname":"<Point<N, D>>::get_unchecked","value":"pub unsafe fn get_unchecked(&Self, usize) -> &N","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to i-th element of this point without bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets a reference to i-th element of this point without bound-checking.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":569768,"byte_end":569842,"line_start":253,"line_end":253,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":569847,"byte_end":569856,"line_start":254,"line_end":254,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5421},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":570295,"byte_end":570303,"line_start":272,"line_end":272,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Point<N, D>>::iter_mut","value":"pub fn iter_mut(&mut Self)\n-> MatrixIterMut<, N, D, U1, <DefaultAllocator as Allocator<N, D>>::Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Mutably iterates through this point coordinates.","sig":null,"attributes":[{"value":"/ Mutably iterates through this point coordinates.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":569963,"byte_end":570015,"line_start":259,"line_end":259,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":570020,"byte_end":570023,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":570028,"byte_end":570041,"line_start":261,"line_end":261,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":570046,"byte_end":570053,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Point3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":570058,"byte_end":570085,"line_start":263,"line_end":263,"column_start":5,"column_end":32}},{"value":"/ let mut p = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":570090,"byte_end":570133,"line_start":264,"line_end":264,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":570138,"byte_end":570141,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ for e in p.iter_mut() {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":570146,"byte_end":570173,"line_start":266,"line_end":266,"column_start":5,"column_end":32}},{"value":"/     *e *= 10.0;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":570178,"byte_end":570197,"line_start":267,"line_end":267,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":570202,"byte_end":570207,"line_start":268,"line_end":268,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":570212,"byte_end":570215,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p, Point3::new(10.0, 20.0, 30.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":570220,"byte_end":570269,"line_start":270,"line_end":270,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":570274,"byte_end":570283,"line_start":271,"line_end":271,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5422},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":570563,"byte_end":570580,"line_start":280,"line_end":280,"column_start":19,"column_end":36},"name":"get_unchecked_mut","qualname":"<Point<N, D>>::get_unchecked_mut","value":"pub unsafe fn get_unchecked_mut(&mut Self, usize) -> &mut N","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to i-th element of this point without bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to i-th element of this point without bound-checking.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":570448,"byte_end":570530,"line_start":278,"line_end":278,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":570535,"byte_end":570544,"line_start":279,"line_end":279,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5423},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":570745,"byte_end":570759,"line_start":286,"line_end":286,"column_start":19,"column_end":33},"name":"swap_unchecked","qualname":"<Point<N, D>>::swap_unchecked","value":"pub unsafe fn swap_unchecked(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Swaps two entries without bound-checking.\n","sig":null,"attributes":[{"value":"/ Swaps two entries without bound-checking.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":570667,"byte_end":570712,"line_start":284,"line_end":284,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":570717,"byte_end":570726,"line_start":285,"line_end":285,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5458},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":573305,"byte_end":573308,"line_start":398,"line_end":398,"column_start":12,"column_end":15},"name":"inf","qualname":"<Point<N, D>>::inf","value":"pub fn inf(&Self, &Self) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the infimum (aka. componentwise min) of two points.\n","sig":null,"attributes":[{"value":"/ Computes the infimum (aka. componentwise min) of two points.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":573215,"byte_end":573279,"line_start":396,"line_end":396,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":573284,"byte_end":573293,"line_start":397,"line_end":397,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5459},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":573495,"byte_end":573498,"line_start":404,"line_end":404,"column_start":12,"column_end":15},"name":"sup","qualname":"<Point<N, D>>::sup","value":"pub fn sup(&Self, &Self) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the supremum (aka. componentwise max) of two points.\n","sig":null,"attributes":[{"value":"/ Computes the supremum (aka. componentwise max) of two points.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":573404,"byte_end":573469,"line_start":402,"line_end":402,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":573474,"byte_end":573483,"line_start":403,"line_end":403,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5460},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":573671,"byte_end":573678,"line_start":410,"line_end":410,"column_start":12,"column_end":19},"name":"inf_sup","qualname":"<Point<N, D>>::inf_sup","value":"pub fn inf_sup(&Self, &Self) -> (Point<N, D>, Point<N, D>)","parent":null,"children":[],"decl_id":null,"docs":" Computes the (infimum, supremum) of two points.\n","sig":null,"attributes":[{"value":"/ Computes the (infimum, supremum) of two points.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":573594,"byte_end":573645,"line_start":408,"line_end":408,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":573650,"byte_end":573659,"line_start":409,"line_end":409,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":5488},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_alias.rs","byte_start":574523,"byte_end":574529,"line_start":8,"line_end":8,"column_start":10,"column_end":16},"name":"Point1","qualname":"::geometry::point_alias::Point1","value":"Point<N, U1>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 1-dimensional column point.","sig":null,"attributes":[{"value":"/ A statically sized 1-dimensional column point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_alias.rs","byte_start":574346,"byte_end":574396,"line_start":5,"line_end":5,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_alias.rs","byte_start":574397,"byte_end":574400,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Point`](crate::Point) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_alias.rs","byte_start":574401,"byte_end":574513,"line_start":7,"line_end":7,"column_start":1,"column_end":113}}]},{"kind":"Type","id":{"krate":0,"index":5490},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_alias.rs","byte_start":574726,"byte_end":574732,"line_start":12,"line_end":12,"column_start":10,"column_end":16},"name":"Point2","qualname":"::geometry::point_alias::Point2","value":"Point<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 2-dimensional column point.","sig":null,"attributes":[{"value":"/ A statically sized 2-dimensional column point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_alias.rs","byte_start":574549,"byte_end":574599,"line_start":9,"line_end":9,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_alias.rs","byte_start":574600,"byte_end":574603,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Point`](crate::Point) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_alias.rs","byte_start":574604,"byte_end":574716,"line_start":11,"line_end":11,"column_start":1,"column_end":113}}]},{"kind":"Type","id":{"krate":0,"index":5492},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_alias.rs","byte_start":574929,"byte_end":574935,"line_start":16,"line_end":16,"column_start":10,"column_end":16},"name":"Point3","qualname":"::geometry::point_alias::Point3","value":"Point<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 3-dimensional column point.","sig":null,"attributes":[{"value":"/ A statically sized 3-dimensional column point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_alias.rs","byte_start":574752,"byte_end":574802,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_alias.rs","byte_start":574803,"byte_end":574806,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Point`](crate::Point) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_alias.rs","byte_start":574807,"byte_end":574919,"line_start":15,"line_end":15,"column_start":1,"column_end":113}}]},{"kind":"Type","id":{"krate":0,"index":5494},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_alias.rs","byte_start":575132,"byte_end":575138,"line_start":20,"line_end":20,"column_start":10,"column_end":16},"name":"Point4","qualname":"::geometry::point_alias::Point4","value":"Point<N, U4>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 4-dimensional column point.","sig":null,"attributes":[{"value":"/ A statically sized 4-dimensional column point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_alias.rs","byte_start":574955,"byte_end":575005,"line_start":17,"line_end":17,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_alias.rs","byte_start":575006,"byte_end":575009,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Point`](crate::Point) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_alias.rs","byte_start":575010,"byte_end":575122,"line_start":19,"line_end":19,"column_start":1,"column_end":113}}]},{"kind":"Type","id":{"krate":0,"index":5496},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_alias.rs","byte_start":575335,"byte_end":575341,"line_start":24,"line_end":24,"column_start":10,"column_end":16},"name":"Point5","qualname":"::geometry::point_alias::Point5","value":"Point<N, U5>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 5-dimensional column point.","sig":null,"attributes":[{"value":"/ A statically sized 5-dimensional column point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_alias.rs","byte_start":575158,"byte_end":575208,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_alias.rs","byte_start":575209,"byte_end":575212,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Point`](crate::Point) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_alias.rs","byte_start":575213,"byte_end":575325,"line_start":23,"line_end":23,"column_start":1,"column_end":113}}]},{"kind":"Type","id":{"krate":0,"index":5498},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_alias.rs","byte_start":575538,"byte_end":575544,"line_start":28,"line_end":28,"column_start":10,"column_end":16},"name":"Point6","qualname":"::geometry::point_alias::Point6","value":"Point<N, U6>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 6-dimensional column point.","sig":null,"attributes":[{"value":"/ A statically sized 6-dimensional column point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_alias.rs","byte_start":575361,"byte_end":575411,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_alias.rs","byte_start":575412,"byte_end":575415,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Point`](crate::Point) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_alias.rs","byte_start":575416,"byte_end":575528,"line_start":27,"line_end":27,"column_start":1,"column_end":113}}]},{"kind":"Method","id":{"krate":0,"index":5593},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":576286,"byte_end":576303,"line_start":26,"line_end":26,"column_start":19,"column_end":36},"name":"new_uninitialized","qualname":"<Point<N, D>>::new_uninitialized","value":"pub unsafe fn new_uninitialized() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new point with uninitialized coordinates.\n","sig":null,"attributes":[{"value":"/ Creates a new point with uninitialized coordinates.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":576198,"byte_end":576253,"line_start":24,"line_end":24,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":576258,"byte_end":576267,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5594},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":576932,"byte_end":576938,"line_start":46,"line_end":46,"column_start":12,"column_end":18},"name":"origin","qualname":"<Point<N, D>>::origin","value":"pub fn origin() -> Self where N: Zero","parent":null,"children":[],"decl_id":null,"docs":" Creates a new point with all coordinates equal to zero.","sig":null,"attributes":[{"value":"/ Creates a new point with all coordinates equal to zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":576376,"byte_end":576435,"line_start":30,"line_end":30,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":576440,"byte_end":576443,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":576448,"byte_end":576461,"line_start":32,"line_end":32,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":576466,"byte_end":576469,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":576474,"byte_end":576481,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":576486,"byte_end":576523,"line_start":35,"line_end":35,"column_start":5,"column_end":42}},{"value":"/ // This works in any dimension.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":576528,"byte_end":576563,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/ // The explicit crate::<f32> type annotation may not always be needed,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":576568,"byte_end":576642,"line_start":37,"line_end":37,"column_start":5,"column_end":79}},{"value":"/ // depending on the context of type inference.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":576647,"byte_end":576697,"line_start":38,"line_end":38,"column_start":5,"column_end":55}},{"value":"/ let pt = Point2::<f32>::origin();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":576702,"byte_end":576739,"line_start":39,"line_end":39,"column_start":5,"column_end":42}},{"value":"/ assert!(pt.x == 0.0 && pt.y == 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":576744,"byte_end":576784,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":576789,"byte_end":576792,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ let pt = Point3::<f32>::origin();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":576797,"byte_end":576834,"line_start":42,"line_end":42,"column_start":5,"column_end":42}},{"value":"/ assert!(pt.x == 0.0 && pt.y == 0.0 && pt.z == 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":576839,"byte_end":576894,"line_start":43,"line_end":43,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":576899,"byte_end":576906,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":576911,"byte_end":576920,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5595},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":577455,"byte_end":577465,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<Point<N, D>>::from_slice","value":"pub fn from_slice(&[N]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new point from a slice.","sig":null,"attributes":[{"value":"/ Creates a new point from a slice.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":577046,"byte_end":577083,"line_start":53,"line_end":53,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":577088,"byte_end":577091,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":577096,"byte_end":577109,"line_start":55,"line_end":55,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":577114,"byte_end":577117,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":577122,"byte_end":577129,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":577134,"byte_end":577171,"line_start":58,"line_end":58,"column_start":5,"column_end":42}},{"value":"/ let data = [ 1.0, 2.0, 3.0 ];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":577176,"byte_end":577209,"line_start":59,"line_end":59,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":577214,"byte_end":577217,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ let pt = Point2::from_slice(&data[..2]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":577222,"byte_end":577266,"line_start":61,"line_end":61,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(pt, Point2::new(1.0, 2.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":577271,"byte_end":577313,"line_start":62,"line_end":62,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":577318,"byte_end":577321,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ let pt = Point3::from_slice(&data);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":577326,"byte_end":577365,"line_start":64,"line_end":64,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(pt, Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":577370,"byte_end":577417,"line_start":65,"line_end":65,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":577422,"byte_end":577429,"line_start":66,"line_end":66,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":577434,"byte_end":577443,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5596},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":578821,"byte_end":578837,"line_start":103,"line_end":103,"column_start":12,"column_end":28},"name":"from_homogeneous","qualname":"<Point<N, D>>::from_homogeneous","value":"pub fn from_homogeneous(VectorN<N, DimNameSum<D, U1>>) -> Option<Self> where\nN: Scalar + Zero + One + ClosedDiv, D: DimNameAdd<U1>,\nDefaultAllocator: Allocator<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new point from its homogeneous vector representation.","sig":null,"attributes":[{"value":"/ Creates a new point from its homogeneous vector representation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":577561,"byte_end":577628,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":577633,"byte_end":577636,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ In practice, this builds a D-dimensional points with the same first D component as `v`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":577641,"byte_end":577731,"line_start":74,"line_end":74,"column_start":5,"column_end":95}},{"value":"/ divided by the last component of `v`. Returns `None` if this divisor is zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":577736,"byte_end":577817,"line_start":75,"line_end":75,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":577822,"byte_end":577825,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":577830,"byte_end":577843,"line_start":77,"line_end":77,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":577848,"byte_end":577851,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":577856,"byte_end":577863,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3, Vector3, Vector4};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":577868,"byte_end":577923,"line_start":80,"line_end":80,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":577928,"byte_end":577931,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ let coords = Vector4::new(1.0, 2.0, 3.0, 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":577936,"byte_end":577986,"line_start":82,"line_end":82,"column_start":5,"column_end":55}},{"value":"/ let pt = Point3::from_homogeneous(coords);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":577991,"byte_end":578037,"line_start":83,"line_end":83,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(pt, Some(Point3::new(1.0, 2.0, 3.0)));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":578042,"byte_end":578095,"line_start":84,"line_end":84,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":578100,"byte_end":578103,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ // All component of the result will be divided by the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":578108,"byte_end":578165,"line_start":86,"line_end":86,"column_start":5,"column_end":62}},{"value":"/ // last component of the vector, here 2.0.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":578170,"byte_end":578216,"line_start":87,"line_end":87,"column_start":5,"column_end":51}},{"value":"/ let coords = Vector4::new(1.0, 2.0, 3.0, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":578221,"byte_end":578271,"line_start":88,"line_end":88,"column_start":5,"column_end":55}},{"value":"/ let pt = Point3::from_homogeneous(coords);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":578276,"byte_end":578322,"line_start":89,"line_end":89,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(pt, Some(Point3::new(0.5, 1.0, 1.5)));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":578327,"byte_end":578380,"line_start":90,"line_end":90,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":578385,"byte_end":578388,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ // Fails because the last component is zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":578393,"byte_end":578441,"line_start":92,"line_end":92,"column_start":5,"column_end":53}},{"value":"/ let coords = Vector4::new(1.0, 2.0, 3.0, 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":578446,"byte_end":578496,"line_start":93,"line_end":93,"column_start":5,"column_end":55}},{"value":"/ let pt = Point3::from_homogeneous(coords);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":578501,"byte_end":578547,"line_start":94,"line_end":94,"column_start":5,"column_end":51}},{"value":"/ assert!(pt.is_none());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":578552,"byte_end":578578,"line_start":95,"line_end":95,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":578583,"byte_end":578586,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ // Works also in other dimensions.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":578591,"byte_end":578629,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ let coords = Vector3::new(1.0, 2.0, 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":578634,"byte_end":578679,"line_start":98,"line_end":98,"column_start":5,"column_end":50}},{"value":"/ let pt = Point2::from_homogeneous(coords);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":578684,"byte_end":578730,"line_start":99,"line_end":99,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(pt, Some(Point2::new(1.0, 2.0)));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":578735,"byte_end":578783,"line_start":100,"line_end":100,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":578788,"byte_end":578795,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":578800,"byte_end":578809,"line_start":102,"line_end":102,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5610},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":580663,"byte_end":580666,"line_start":180,"line_end":180,"column_start":12,"column_end":15},"name":"new","qualname":"<Point1<N>>::new","value":"pub fn new(N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initializes this point from its components.","sig":null,"attributes":[{"value":"/ Initializes this point from its components.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":580436,"byte_end":580483,"line_start":170,"line_end":170,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":580488,"byte_end":580491,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":580496,"byte_end":580509,"line_start":172,"line_end":172,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":580514,"byte_end":580517,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":580522,"byte_end":580529,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Point1;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":580534,"byte_end":580561,"line_start":175,"line_end":175,"column_start":5,"column_end":32}},{"value":"/ let p = Point1::new(1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":580566,"byte_end":580595,"line_start":176,"line_end":176,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(p.x, 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":580600,"byte_end":580625,"line_start":177,"line_end":177,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":580630,"byte_end":580637,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":580642,"byte_end":580651,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":22095},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":603249,"byte_end":603257,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"Rotation","qualname":"::geometry::rotation::Rotation","value":"Rotation {  }","parent":null,"children":[{"krate":0,"index":22098}],"decl_id":null,"docs":" A rotation matrix.","sig":null,"attributes":[{"value":"/ A rotation matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":600640,"byte_end":600662,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":600663,"byte_end":600666,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This is also known as an element of a Special Orthogonal (SO) group.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":600667,"byte_end":600739,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ The `Rotation` type can either represent a 2D or 3D rotation, represented as a matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":600740,"byte_end":600830,"line_start":28,"line_end":28,"column_start":1,"column_end":91}},{"value":"/ For a rotation based on quaternions, see [`UnitQuaternion`](crate::UnitQuaternion) instead.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":600831,"byte_end":600926,"line_start":29,"line_end":29,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":600927,"byte_end":600930,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Note that instead of using the [`Rotation`](crate::Rotation) type in your code directly, you should use one","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":600931,"byte_end":601042,"line_start":31,"line_end":31,"column_start":1,"column_end":112}},{"value":"/ of its aliases: [`Rotation2`](crate::Rotation2), or [`Rotation3`](crate::Rotation3). Though","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":601043,"byte_end":601138,"line_start":32,"line_end":32,"column_start":1,"column_end":96}},{"value":"/ keep in mind that all the documentation of all the methods of these aliases will also appears on","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":601139,"byte_end":601239,"line_start":33,"line_end":33,"column_start":1,"column_end":101}},{"value":"/ this page.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":601240,"byte_end":601254,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":601255,"byte_end":601258,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Construction","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":601259,"byte_end":601277,"line_start":36,"line_end":36,"column_start":1,"column_end":19}},{"value":"/ * [Identity <span style=\"float:right;\">`identity`</span>](#identity)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":601278,"byte_end":601350,"line_start":37,"line_end":37,"column_start":1,"column_end":73}},{"value":"/ * [From a 2D rotation angle <span style=\"float:right;\">`new`…</span>](#construction-from-a-2d-rotation-angle)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":601351,"byte_end":601466,"line_start":38,"line_end":38,"column_start":1,"column_end":114}},{"value":"/ * [From an existing 2D matrix or rotations <span style=\"float:right;\">`from_matrix`, `rotation_between`, `powf`…</span>](#construction-from-an-existing-2d-matrix-or-rotations)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":601467,"byte_end":601648,"line_start":39,"line_end":39,"column_start":1,"column_end":180}},{"value":"/ * [From a 3D axis and/or angles <span style=\"float:right;\">`new`, `from_euler_angles`, `from_axis_angle`…</span>](#construction-from-a-3d-axis-andor-angles)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":601649,"byte_end":601811,"line_start":40,"line_end":40,"column_start":1,"column_end":161}},{"value":"/ * [From a 3D eye position and target point <span style=\"float:right;\">`look_at`, `look_at_lh`, `rotation_between`…</span>](#construction-from-a-3d-eye-position-and-target-point)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":601812,"byte_end":601995,"line_start":41,"line_end":41,"column_start":1,"column_end":182}},{"value":"/ * [From an existing 3D matrix or rotations <span style=\"float:right;\">`from_matrix`, `rotation_between`, `powf`…</span>](#construction-from-an-existing-3d-matrix-or-rotations)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":601996,"byte_end":602177,"line_start":42,"line_end":42,"column_start":1,"column_end":180}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":602178,"byte_end":602181,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Transformation and composition","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":602182,"byte_end":602218,"line_start":44,"line_end":44,"column_start":1,"column_end":37}},{"value":"/ Note that transforming vectors and points can be done by multiplication, e.g., `rotation * point`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":602219,"byte_end":602321,"line_start":45,"line_end":45,"column_start":1,"column_end":103}},{"value":"/ Composing an rotation with another transformation can also be done by multiplication or division.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":602322,"byte_end":602423,"line_start":46,"line_end":46,"column_start":1,"column_end":102}},{"value":"/ * [3D axis and angle extraction <span style=\"float:right;\">`angle`, `euler_angles`, `scaled_axis`, `angle_to`…</span>](#3d-axis-and-angle-extraction)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":602424,"byte_end":602579,"line_start":47,"line_end":47,"column_start":1,"column_end":154}},{"value":"/ * [2D angle extraction <span style=\"float:right;\">`angle`, `angle_to`…</span>](#2d-angle-extraction)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":602580,"byte_end":602686,"line_start":48,"line_end":48,"column_start":1,"column_end":105}},{"value":"/ * [Transformation of a vector or a point <span style=\"float:right;\">`transform_vector`, `inverse_transform_point`…</span>](#transformation-of-a-vector-or-a-point)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":602687,"byte_end":602855,"line_start":49,"line_end":49,"column_start":1,"column_end":167}},{"value":"/ * [Transposition and inversion <span style=\"float:right;\">`transpose`, `inverse`…</span>](#transposition-and-inversion)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":602856,"byte_end":602981,"line_start":50,"line_end":50,"column_start":1,"column_end":124}},{"value":"/ * [Interpolation <span style=\"float:right;\">`slerp`…</span>](#interpolation)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":602982,"byte_end":603064,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":603065,"byte_end":603068,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Conversion","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":603069,"byte_end":603085,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/ * [Conversion to a matrix <span style=\"float:right;\">`matrix`, `to_homogeneous`…</span>](#conversion-to-a-matrix)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":603086,"byte_end":603205,"line_start":54,"line_end":54,"column_start":1,"column_end":118}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":603206,"byte_end":603209,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":603210,"byte_end":603220,"line_start":56,"line_end":56,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":6025},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":606277,"byte_end":606298,"line_start":171,"line_end":171,"column_start":12,"column_end":33},"name":"from_matrix_unchecked","qualname":"<Rotation<N, D>>::from_matrix_unchecked","value":"pub fn from_matrix_unchecked(MatrixN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new rotation from the given square matrix.","sig":null,"attributes":[{"value":"/ Creates a new rotation from the given square matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":605475,"byte_end":605531,"line_start":148,"line_end":148,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":605536,"byte_end":605539,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ The matrix squareness is checked but not its orthonormality.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":605544,"byte_end":605608,"line_start":150,"line_end":150,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":605613,"byte_end":605616,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":605621,"byte_end":605634,"line_start":152,"line_end":152,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":605639,"byte_end":605646,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Matrix2, Matrix3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":605651,"byte_end":605712,"line_start":154,"line_end":154,"column_start":5,"column_end":66}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":605717,"byte_end":605736,"line_start":155,"line_end":155,"column_start":5,"column_end":24}},{"value":"/ let mat = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":605741,"byte_end":605794,"line_start":156,"line_end":156,"column_start":5,"column_end":58}},{"value":"/                        0.5,       0.8660254, 0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":605799,"byte_end":605852,"line_start":157,"line_end":157,"column_start":5,"column_end":58}},{"value":"/                        0.0,       0.0,       1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":605857,"byte_end":605911,"line_start":158,"line_end":158,"column_start":5,"column_end":59}},{"value":"/ let rot = Rotation3::from_matrix_unchecked(mat);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":605916,"byte_end":605968,"line_start":159,"line_end":159,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":605973,"byte_end":605976,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(*rot.matrix(), mat);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":605981,"byte_end":606016,"line_start":161,"line_end":161,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":606021,"byte_end":606024,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":606029,"byte_end":606032,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ let mat = Matrix2::new(0.8660254, -0.5,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":606037,"byte_end":606080,"line_start":164,"line_end":164,"column_start":5,"column_end":48}},{"value":"/                        0.5,       0.8660254);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":606085,"byte_end":606134,"line_start":165,"line_end":165,"column_start":5,"column_end":54}},{"value":"/ let rot = Rotation2::from_matrix_unchecked(mat);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":606139,"byte_end":606191,"line_start":166,"line_end":166,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":606196,"byte_end":606199,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(*rot.matrix(), mat);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":606204,"byte_end":606239,"line_start":168,"line_end":168,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":606244,"byte_end":606251,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":606256,"byte_end":606265,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6029},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":607424,"byte_end":607430,"line_start":205,"line_end":205,"column_start":12,"column_end":18},"name":"matrix","qualname":"<Rotation<N, D>>::matrix","value":"pub fn matrix(&Self) -> &MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" A reference to the underlying matrix representation of this rotation.","sig":null,"attributes":[{"value":"/ A reference to the underlying matrix representation of this rotation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":606620,"byte_end":606693,"line_start":186,"line_end":186,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":606698,"byte_end":606701,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":606706,"byte_end":606719,"line_start":188,"line_end":188,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":606724,"byte_end":606731,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3, Matrix2, Matrix3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":606736,"byte_end":606806,"line_start":190,"line_end":190,"column_start":5,"column_end":75}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":606811,"byte_end":606830,"line_start":191,"line_end":191,"column_start":5,"column_end":24}},{"value":"/ let rot = Rotation3::from_axis_angle(&Vector3::z_axis(), f32::consts::FRAC_PI_6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":606835,"byte_end":606920,"line_start":192,"line_end":192,"column_start":5,"column_end":90}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":606925,"byte_end":606983,"line_start":193,"line_end":193,"column_start":5,"column_end":63}},{"value":"/                             0.5,       0.8660254, 0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":606988,"byte_end":607046,"line_start":194,"line_end":194,"column_start":5,"column_end":63}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":607051,"byte_end":607110,"line_start":195,"line_end":195,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(*rot.matrix(), expected);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":607115,"byte_end":607155,"line_start":196,"line_end":196,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":607160,"byte_end":607163,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":607168,"byte_end":607171,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":607176,"byte_end":607229,"line_start":199,"line_end":199,"column_start":5,"column_end":58}},{"value":"/ let expected = Matrix2::new(0.8660254, -0.5,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":607234,"byte_end":607282,"line_start":200,"line_end":200,"column_start":5,"column_end":53}},{"value":"/                             0.5,       0.8660254);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":607287,"byte_end":607341,"line_start":201,"line_end":201,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(*rot.matrix(), expected);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":607346,"byte_end":607386,"line_start":202,"line_end":202,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":607391,"byte_end":607398,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":607403,"byte_end":607412,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6030},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":607671,"byte_end":607681,"line_start":212,"line_end":212,"column_start":19,"column_end":29},"name":"matrix_mut","qualname":"<Rotation<N, D>>::matrix_mut","value":"pub unsafe fn matrix_mut(&mut Self) -> &mut MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" A mutable reference to the underlying matrix representation of this rotation.\n","sig":null,"attributes":[{"value":"/ A mutable reference to the underlying matrix representation of this rotation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":607490,"byte_end":607571,"line_start":209,"line_end":209,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":607576,"byte_end":607585,"line_start":210,"line_end":210,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"Use `.matrix_mut_unchecked()` instead.\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":607590,"byte_end":607652,"line_start":211,"line_end":211,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":6031},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":608120,"byte_end":608140,"line_start":222,"line_end":222,"column_start":12,"column_end":32},"name":"matrix_mut_unchecked","qualname":"<Rotation<N, D>>::matrix_mut_unchecked","value":"pub fn matrix_mut_unchecked(&mut Self) -> &mut MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" A mutable reference to the underlying matrix representation of this rotation.","sig":null,"attributes":[{"value":"/ A mutable reference to the underlying matrix representation of this rotation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":607753,"byte_end":607834,"line_start":216,"line_end":216,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":607839,"byte_end":607842,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ This is suffixed by \"_unchecked\" because this allows the user to replace the matrix by another one that is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":607847,"byte_end":607957,"line_start":218,"line_end":218,"column_start":5,"column_end":115}},{"value":"/ non-square, non-inversible, or non-orthonormal. If one of those properties is broken,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":607962,"byte_end":608051,"line_start":219,"line_end":219,"column_start":5,"column_end":94}},{"value":"/ subsequent method calls may be UB.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":608056,"byte_end":608094,"line_start":220,"line_end":220,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":608099,"byte_end":608108,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6032},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":609029,"byte_end":609039,"line_start":247,"line_end":247,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Rotation<N, D>>::into_inner","value":"pub fn into_inner(Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the underlying matrix.","sig":null,"attributes":[{"value":"/ Unwraps the underlying matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":608212,"byte_end":608246,"line_start":226,"line_end":226,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":608251,"byte_end":608254,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":608259,"byte_end":608272,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":608277,"byte_end":608284,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3, Matrix2, Matrix3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":608289,"byte_end":608359,"line_start":230,"line_end":230,"column_start":5,"column_end":75}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":608364,"byte_end":608383,"line_start":231,"line_end":231,"column_start":5,"column_end":24}},{"value":"/ let rot = Rotation3::from_axis_angle(&Vector3::z_axis(), f32::consts::FRAC_PI_6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":608388,"byte_end":608473,"line_start":232,"line_end":232,"column_start":5,"column_end":90}},{"value":"/ let mat = rot.into_inner();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":608478,"byte_end":608509,"line_start":233,"line_end":233,"column_start":5,"column_end":36}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":608514,"byte_end":608572,"line_start":234,"line_end":234,"column_start":5,"column_end":63}},{"value":"/                             0.5,       0.8660254, 0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":608577,"byte_end":608635,"line_start":235,"line_end":235,"column_start":5,"column_end":63}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":608640,"byte_end":608699,"line_start":236,"line_end":236,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(mat, expected);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":608704,"byte_end":608734,"line_start":237,"line_end":237,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":608739,"byte_end":608742,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":608747,"byte_end":608750,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":608755,"byte_end":608808,"line_start":240,"line_end":240,"column_start":5,"column_end":58}},{"value":"/ let mat = rot.into_inner();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":608813,"byte_end":608844,"line_start":241,"line_end":241,"column_start":5,"column_end":36}},{"value":"/ let expected = Matrix2::new(0.8660254, -0.5,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":608849,"byte_end":608897,"line_start":242,"line_end":242,"column_start":5,"column_end":53}},{"value":"/                             0.5,       0.8660254);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":608902,"byte_end":608956,"line_start":243,"line_end":243,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(mat, expected);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":608961,"byte_end":608991,"line_start":244,"line_end":244,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":608996,"byte_end":609003,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":609008,"byte_end":609017,"line_start":246,"line_end":246,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6033},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":609268,"byte_end":609274,"line_start":255,"line_end":255,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Rotation<N, D>>::unwrap","value":"pub fn unwrap(Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the underlying matrix.\n Deprecated: Use [Rotation::into_inner] instead.\n","sig":null,"attributes":[{"value":"/ Unwraps the underlying matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":609096,"byte_end":609130,"line_start":251,"line_end":251,"column_start":5,"column_end":39}},{"value":"/ Deprecated: Use [Rotation::into_inner] instead.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":609135,"byte_end":609186,"line_start":252,"line_end":252,"column_start":5,"column_end":56}},{"value":"deprecated(note = \"use `.into_inner()` instead\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":609191,"byte_end":609242,"line_start":253,"line_end":253,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":609247,"byte_end":609256,"line_start":254,"line_end":254,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6034},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":610369,"byte_end":610383,"line_start":282,"line_end":282,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Rotation<N, D>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> MatrixN<N, DimNameSum<D, U1>> where N: Zero +\nOne, D: DimNameAdd<U1>,\nDefaultAllocator: Allocator<N, DimNameSum<D, U1>, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this rotation into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this rotation into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":609331,"byte_end":609412,"line_start":259,"line_end":259,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":609417,"byte_end":609420,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ This is the same as `self.into()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":609425,"byte_end":609463,"line_start":261,"line_end":261,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":609468,"byte_end":609471,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":609476,"byte_end":609489,"line_start":263,"line_end":263,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":609494,"byte_end":609501,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3, Matrix3, Matrix4};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":609506,"byte_end":609576,"line_start":265,"line_end":265,"column_start":5,"column_end":75}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":609581,"byte_end":609600,"line_start":266,"line_end":266,"column_start":5,"column_end":24}},{"value":"/ let rot = Rotation3::from_axis_angle(&Vector3::z_axis(), f32::consts::FRAC_PI_6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":609605,"byte_end":609690,"line_start":267,"line_end":267,"column_start":5,"column_end":90}},{"value":"/ let expected = Matrix4::new(0.8660254, -0.5,      0.0, 0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":609695,"byte_end":609758,"line_start":268,"line_end":268,"column_start":5,"column_end":68}},{"value":"/                             0.5,       0.8660254, 0.0, 0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":609763,"byte_end":609826,"line_start":269,"line_end":269,"column_start":5,"column_end":68}},{"value":"/                             0.0,       0.0,       1.0, 0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":609831,"byte_end":609894,"line_start":270,"line_end":270,"column_start":5,"column_end":68}},{"value":"/                             0.0,       0.0,       0.0, 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":609899,"byte_end":609963,"line_start":271,"line_end":271,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(rot.to_homogeneous(), expected);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":609968,"byte_end":610015,"line_start":272,"line_end":272,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":610020,"byte_end":610023,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":610028,"byte_end":610031,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":610036,"byte_end":610089,"line_start":275,"line_end":275,"column_start":5,"column_end":58}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":610094,"byte_end":610152,"line_start":276,"line_end":276,"column_start":5,"column_end":63}},{"value":"/                             0.5,       0.8660254, 0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":610157,"byte_end":610215,"line_start":277,"line_end":277,"column_start":5,"column_end":63}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":610220,"byte_end":610279,"line_start":278,"line_end":278,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(rot.to_homogeneous(), expected);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":610284,"byte_end":610331,"line_start":279,"line_end":279,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":610336,"byte_end":610343,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":610348,"byte_end":610357,"line_start":281,"line_end":281,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6038},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":611959,"byte_end":611968,"line_start":323,"line_end":323,"column_start":12,"column_end":21},"name":"transpose","qualname":"<Rotation<N, D>>::transpose","value":"pub fn transpose(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Transposes `self`.","sig":null,"attributes":[{"value":"/ Transposes `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":611085,"byte_end":611107,"line_start":303,"line_end":303,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":611112,"byte_end":611115,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ Same as `.inverse()` because the inverse of a rotation matrix is its transform.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":611120,"byte_end":611203,"line_start":305,"line_end":305,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":611208,"byte_end":611211,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":611216,"byte_end":611229,"line_start":307,"line_end":307,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":611234,"byte_end":611241,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":611246,"byte_end":611285,"line_start":309,"line_end":309,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":611290,"byte_end":611342,"line_start":310,"line_end":310,"column_start":5,"column_end":57}},{"value":"/ let rot = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":611347,"byte_end":611405,"line_start":311,"line_end":311,"column_start":5,"column_end":63}},{"value":"/ let tr_rot = rot.transpose();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":611410,"byte_end":611443,"line_start":312,"line_end":312,"column_start":5,"column_end":38}},{"value":"/ assert_relative_eq!(rot * tr_rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":611448,"byte_end":611527,"line_start":313,"line_end":313,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(tr_rot * rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":611532,"byte_end":611611,"line_start":314,"line_end":314,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":611616,"byte_end":611619,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(1.2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":611624,"byte_end":611658,"line_start":316,"line_end":316,"column_start":5,"column_end":39}},{"value":"/ let tr_rot = rot.transpose();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":611663,"byte_end":611696,"line_start":317,"line_end":317,"column_start":5,"column_end":38}},{"value":"/ assert_relative_eq!(rot * tr_rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":611701,"byte_end":611780,"line_start":318,"line_end":318,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(tr_rot * rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":611785,"byte_end":611864,"line_start":319,"line_end":319,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":611869,"byte_end":611876,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":611881,"byte_end":611890,"line_start":321,"line_end":321,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use transpose_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":611895,"byte_end":611947,"line_start":322,"line_end":322,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":6039},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":612907,"byte_end":612914,"line_start":347,"line_end":347,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Rotation<N, D>>::inverse","value":"pub fn inverse(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self`.","sig":null,"attributes":[{"value":"/ Inverts `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":612058,"byte_end":612077,"line_start":327,"line_end":327,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":612082,"byte_end":612085,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ Same as `.transpose()` because the inverse of a rotation matrix is its transform.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":612090,"byte_end":612175,"line_start":329,"line_end":329,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":612180,"byte_end":612183,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":612188,"byte_end":612201,"line_start":331,"line_end":331,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":612206,"byte_end":612213,"line_start":332,"line_end":332,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":612218,"byte_end":612257,"line_start":333,"line_end":333,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":612262,"byte_end":612314,"line_start":334,"line_end":334,"column_start":5,"column_end":57}},{"value":"/ let rot = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":612319,"byte_end":612377,"line_start":335,"line_end":335,"column_start":5,"column_end":63}},{"value":"/ let inv = rot.inverse();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":612382,"byte_end":612410,"line_start":336,"line_end":336,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(rot * inv, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":612415,"byte_end":612491,"line_start":337,"line_end":337,"column_start":5,"column_end":81}},{"value":"/ assert_relative_eq!(inv * rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":612496,"byte_end":612572,"line_start":338,"line_end":338,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":612577,"byte_end":612580,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(1.2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":612585,"byte_end":612619,"line_start":340,"line_end":340,"column_start":5,"column_end":39}},{"value":"/ let inv = rot.inverse();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":612624,"byte_end":612652,"line_start":341,"line_end":341,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(rot * inv, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":612657,"byte_end":612733,"line_start":342,"line_end":342,"column_start":5,"column_end":81}},{"value":"/ assert_relative_eq!(inv * rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":612738,"byte_end":612814,"line_start":343,"line_end":343,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":612819,"byte_end":612826,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":612831,"byte_end":612840,"line_start":345,"line_end":345,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use inverse_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":612845,"byte_end":612895,"line_start":346,"line_end":346,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6040},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":613918,"byte_end":613931,"line_start":374,"line_end":374,"column_start":12,"column_end":25},"name":"transpose_mut","qualname":"<Rotation<N, D>>::transpose_mut","value":"pub fn transpose_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Transposes `self` in-place.","sig":null,"attributes":[{"value":"/ Transposes `self` in-place.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":612968,"byte_end":612999,"line_start":351,"line_end":351,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":613004,"byte_end":613007,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Same as `.inverse_mut()` because the inverse of a rotation matrix is its transform.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":613012,"byte_end":613099,"line_start":353,"line_end":353,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":613104,"byte_end":613107,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":613112,"byte_end":613125,"line_start":355,"line_end":355,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":613130,"byte_end":613137,"line_start":356,"line_end":356,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":613142,"byte_end":613181,"line_start":357,"line_end":357,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":613186,"byte_end":613238,"line_start":358,"line_end":358,"column_start":5,"column_end":57}},{"value":"/ let rot = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":613243,"byte_end":613301,"line_start":359,"line_end":359,"column_start":5,"column_end":63}},{"value":"/ let mut tr_rot = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":613306,"byte_end":613371,"line_start":360,"line_end":360,"column_start":5,"column_end":70}},{"value":"/ tr_rot.transpose_mut();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":613376,"byte_end":613403,"line_start":361,"line_end":361,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":613408,"byte_end":613411,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * tr_rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":613416,"byte_end":613495,"line_start":363,"line_end":363,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(tr_rot * rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":613500,"byte_end":613579,"line_start":364,"line_end":364,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":613584,"byte_end":613587,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(1.2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":613592,"byte_end":613626,"line_start":366,"line_end":366,"column_start":5,"column_end":39}},{"value":"/ let mut tr_rot = Rotation2::new(1.2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":613631,"byte_end":613672,"line_start":367,"line_end":367,"column_start":5,"column_end":46}},{"value":"/ tr_rot.transpose_mut();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":613677,"byte_end":613704,"line_start":368,"line_end":368,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":613709,"byte_end":613712,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * tr_rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":613717,"byte_end":613796,"line_start":370,"line_end":370,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(tr_rot * rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":613801,"byte_end":613880,"line_start":371,"line_end":371,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":613885,"byte_end":613892,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":613897,"byte_end":613906,"line_start":373,"line_end":373,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6041},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":614913,"byte_end":614924,"line_start":401,"line_end":401,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<Rotation<N, D>>::inverse_mut","value":"pub fn inverse_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self` in-place.","sig":null,"attributes":[{"value":"/ Inverts `self` in-place.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":613992,"byte_end":614020,"line_start":378,"line_end":378,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":614025,"byte_end":614028,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ Same as `.transpose_mut()` because the inverse of a rotation matrix is its transform.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":614033,"byte_end":614122,"line_start":380,"line_end":380,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":614127,"byte_end":614130,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":614135,"byte_end":614148,"line_start":382,"line_end":382,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":614153,"byte_end":614160,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":614165,"byte_end":614204,"line_start":384,"line_end":384,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":614209,"byte_end":614261,"line_start":385,"line_end":385,"column_start":5,"column_end":57}},{"value":"/ let rot = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":614266,"byte_end":614324,"line_start":386,"line_end":386,"column_start":5,"column_end":63}},{"value":"/ let mut inv = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":614329,"byte_end":614391,"line_start":387,"line_end":387,"column_start":5,"column_end":67}},{"value":"/ inv.inverse_mut();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":614396,"byte_end":614418,"line_start":388,"line_end":388,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":614423,"byte_end":614426,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * inv, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":614431,"byte_end":614507,"line_start":390,"line_end":390,"column_start":5,"column_end":81}},{"value":"/ assert_relative_eq!(inv * rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":614512,"byte_end":614588,"line_start":391,"line_end":391,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":614593,"byte_end":614596,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(1.2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":614601,"byte_end":614635,"line_start":393,"line_end":393,"column_start":5,"column_end":39}},{"value":"/ let mut inv = Rotation2::new(1.2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":614640,"byte_end":614678,"line_start":394,"line_end":394,"column_start":5,"column_end":43}},{"value":"/ inv.inverse_mut();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":614683,"byte_end":614705,"line_start":395,"line_end":395,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":614710,"byte_end":614713,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * inv, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":614718,"byte_end":614794,"line_start":397,"line_end":397,"column_start":5,"column_end":81}},{"value":"/ assert_relative_eq!(inv * rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":614799,"byte_end":614875,"line_start":398,"line_end":398,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":614880,"byte_end":614887,"line_start":399,"line_end":399,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":614892,"byte_end":614901,"line_start":400,"line_end":400,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6045},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":615751,"byte_end":615766,"line_start":427,"line_end":427,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Rotation<N, D>>::transform_point","value":"pub fn transform_point(&Self, &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given point.","sig":null,"attributes":[{"value":"/ Rotate the given point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":615173,"byte_end":615200,"line_start":412,"line_end":412,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":615205,"byte_end":615208,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":615213,"byte_end":615268,"line_start":414,"line_end":414,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":615273,"byte_end":615276,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":615281,"byte_end":615294,"line_start":416,"line_end":416,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":615299,"byte_end":615306,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":615311,"byte_end":615350,"line_start":418,"line_end":418,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":615355,"byte_end":615374,"line_start":419,"line_end":419,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Point3, Rotation2, Rotation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":615379,"byte_end":615455,"line_start":420,"line_end":420,"column_start":5,"column_end":81}},{"value":"/ let rot = Rotation3::new(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":615460,"byte_end":615528,"line_start":421,"line_end":421,"column_start":5,"column_end":73}},{"value":"/ let transformed_point = rot.transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":615533,"byte_end":615610,"line_start":422,"line_end":422,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":615615,"byte_end":615618,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(3.0, 2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":615623,"byte_end":615713,"line_start":424,"line_end":424,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":615718,"byte_end":615725,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":615730,"byte_end":615739,"line_start":426,"line_end":426,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6046},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":616413,"byte_end":616429,"line_start":446,"line_end":446,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<Rotation<N, D>>::transform_vector","value":"pub fn transform_vector(&Self, &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given vector.","sig":null,"attributes":[{"value":"/ Rotate the given vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":615838,"byte_end":615866,"line_start":431,"line_end":431,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":615871,"byte_end":615874,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * v`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":615879,"byte_end":615933,"line_start":433,"line_end":433,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":615938,"byte_end":615941,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":615946,"byte_end":615959,"line_start":435,"line_end":435,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":615964,"byte_end":615971,"line_start":436,"line_end":436,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":615976,"byte_end":616015,"line_start":437,"line_end":437,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":616020,"byte_end":616039,"line_start":438,"line_end":438,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":616044,"byte_end":616112,"line_start":439,"line_end":439,"column_start":5,"column_end":73}},{"value":"/ let rot = Rotation3::new(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":616117,"byte_end":616185,"line_start":440,"line_end":440,"column_start":5,"column_end":73}},{"value":"/ let transformed_vector = rot.transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":616190,"byte_end":616270,"line_start":441,"line_end":441,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":616275,"byte_end":616278,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(3.0, 2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":616283,"byte_end":616375,"line_start":443,"line_end":443,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":616380,"byte_end":616387,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":616392,"byte_end":616401,"line_start":445,"line_end":445,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6047},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":617156,"byte_end":617179,"line_start":465,"line_end":465,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<Rotation<N, D>>::inverse_transform_point","value":"pub fn inverse_transform_point(&Self, &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given point by the inverse of this rotation. This may be\n cheaper than inverting the rotation and then transforming the given\n point.","sig":null,"attributes":[{"value":"/ Rotate the given point by the inverse of this rotation. This may be","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":616503,"byte_end":616574,"line_start":450,"line_end":450,"column_start":5,"column_end":76}},{"value":"/ cheaper than inverting the rotation and then transforming the given","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":616579,"byte_end":616650,"line_start":451,"line_end":451,"column_start":5,"column_end":76}},{"value":"/ point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":616655,"byte_end":616665,"line_start":452,"line_end":452,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":616670,"byte_end":616673,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":616678,"byte_end":616691,"line_start":454,"line_end":454,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":616696,"byte_end":616703,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":616708,"byte_end":616747,"line_start":456,"line_end":456,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":616752,"byte_end":616771,"line_start":457,"line_end":457,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Point3, Rotation2, Rotation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":616776,"byte_end":616852,"line_start":458,"line_end":458,"column_start":5,"column_end":81}},{"value":"/ let rot = Rotation3::new(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":616857,"byte_end":616925,"line_start":459,"line_end":459,"column_start":5,"column_end":73}},{"value":"/ let transformed_point = rot.inverse_transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":616930,"byte_end":617015,"line_start":460,"line_end":460,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":617020,"byte_end":617023,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(-3.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":617028,"byte_end":617118,"line_start":462,"line_end":462,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":617123,"byte_end":617130,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":617135,"byte_end":617144,"line_start":464,"line_end":464,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6048},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":617948,"byte_end":617972,"line_start":484,"line_end":484,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<Rotation<N, D>>::inverse_transform_vector","value":"pub fn inverse_transform_vector(&Self, &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given vector by the inverse of this rotation. This may be\n cheaper than inverting the rotation and then transforming the given\n vector.","sig":null,"attributes":[{"value":"/ Rotate the given vector by the inverse of this rotation. This may be","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":617296,"byte_end":617368,"line_start":469,"line_end":469,"column_start":5,"column_end":77}},{"value":"/ cheaper than inverting the rotation and then transforming the given","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":617373,"byte_end":617444,"line_start":470,"line_end":470,"column_start":5,"column_end":76}},{"value":"/ vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":617449,"byte_end":617460,"line_start":471,"line_end":471,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":617465,"byte_end":617468,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":617473,"byte_end":617486,"line_start":473,"line_end":473,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":617491,"byte_end":617498,"line_start":474,"line_end":474,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":617503,"byte_end":617542,"line_start":475,"line_end":475,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":617547,"byte_end":617566,"line_start":476,"line_end":476,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":617571,"byte_end":617639,"line_start":477,"line_end":477,"column_start":5,"column_end":73}},{"value":"/ let rot = Rotation3::new(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":617644,"byte_end":617712,"line_start":478,"line_end":478,"column_start":5,"column_end":73}},{"value":"/ let transformed_vector = rot.inverse_transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":617717,"byte_end":617805,"line_start":479,"line_end":479,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":617810,"byte_end":617813,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(-3.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":617818,"byte_end":617910,"line_start":481,"line_end":481,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":617915,"byte_end":617922,"line_start":482,"line_end":482,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":617927,"byte_end":617936,"line_start":483,"line_end":483,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6049},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":618698,"byte_end":618727,"line_start":503,"line_end":503,"column_start":12,"column_end":41},"name":"inverse_transform_unit_vector","qualname":"<Rotation<N, D>>::inverse_transform_unit_vector","value":"pub fn inverse_transform_unit_vector(&Self, &Unit<VectorN<N, D>>)\n-> Unit<VectorN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given vector by the inverse of this rotation. This may be\n cheaper than inverting the rotation and then transforming the given\n vector.","sig":null,"attributes":[{"value":"/ Rotate the given vector by the inverse of this rotation. This may be","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":618061,"byte_end":618133,"line_start":488,"line_end":488,"column_start":5,"column_end":77}},{"value":"/ cheaper than inverting the rotation and then transforming the given","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":618138,"byte_end":618209,"line_start":489,"line_end":489,"column_start":5,"column_end":76}},{"value":"/ vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":618214,"byte_end":618225,"line_start":490,"line_end":490,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":618230,"byte_end":618233,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":618238,"byte_end":618251,"line_start":492,"line_end":492,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":618256,"byte_end":618263,"line_start":493,"line_end":493,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":618268,"byte_end":618307,"line_start":494,"line_end":494,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":618312,"byte_end":618331,"line_start":495,"line_end":495,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":618336,"byte_end":618404,"line_start":496,"line_end":496,"column_start":5,"column_end":73}},{"value":"/ let rot = Rotation3::new(Vector3::z() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":618409,"byte_end":618477,"line_start":497,"line_end":497,"column_start":5,"column_end":73}},{"value":"/ let transformed_vector = rot.inverse_transform_unit_vector(&Vector3::x_axis());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":618482,"byte_end":618565,"line_start":498,"line_end":498,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":618570,"byte_end":618573,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_vector, -Vector3::y_axis(), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":618578,"byte_end":618660,"line_start":500,"line_end":500,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":618665,"byte_end":618672,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":618677,"byte_end":618686,"line_start":502,"line_end":502,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":6088},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_alias.rs","byte_start":621700,"byte_end":621709,"line_start":8,"line_end":8,"column_start":10,"column_end":19},"name":"Rotation2","qualname":"::geometry::rotation_alias::Rotation2","value":"Rotation<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional rotation matrix.","sig":null,"attributes":[{"value":"/ A 2-dimensional rotation matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_alias.rs","byte_start":621531,"byte_end":621567,"line_start":5,"line_end":5,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_alias.rs","byte_start":621568,"byte_end":621571,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Rotation`](crate::Rotation) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_alias.rs","byte_start":621572,"byte_end":621690,"line_start":7,"line_end":7,"column_start":1,"column_end":119}}]},{"kind":"Type","id":{"krate":0,"index":6090},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_alias.rs","byte_start":621902,"byte_end":621911,"line_start":13,"line_end":13,"column_start":10,"column_end":19},"name":"Rotation3","qualname":"::geometry::rotation_alias::Rotation3","value":"Rotation<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional rotation matrix.","sig":null,"attributes":[{"value":"/ A 3-dimensional rotation matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_alias.rs","byte_start":621733,"byte_end":621769,"line_start":10,"line_end":10,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_alias.rs","byte_start":621770,"byte_end":621773,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Rotation`](crate::Rotation) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_alias.rs","byte_start":621774,"byte_end":621892,"line_start":12,"line_end":12,"column_start":1,"column_end":119}}]},{"kind":"Method","id":{"krate":0,"index":6129},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_construction.rs","byte_start":622662,"byte_end":622670,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"identity","qualname":"<Rotation<N, D>>::identity","value":"pub fn identity() -> Rotation<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new square identity rotation of the given `dimension`.","sig":null,"attributes":[{"value":"/ Creates a new square identity rotation of the given `dimension`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_construction.rs","byte_start":622297,"byte_end":622365,"line_start":17,"line_end":17,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_construction.rs","byte_start":622370,"byte_end":622373,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_construction.rs","byte_start":622378,"byte_end":622391,"line_start":19,"line_end":19,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_construction.rs","byte_start":622396,"byte_end":622403,"line_start":20,"line_end":20,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_construction.rs","byte_start":622408,"byte_end":622439,"line_start":21,"line_end":21,"column_start":5,"column_end":36}},{"value":"/ let rot1 = Quaternion::identity();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_construction.rs","byte_start":622444,"byte_end":622482,"line_start":22,"line_end":22,"column_start":5,"column_end":43}},{"value":"/ let rot2 = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_construction.rs","byte_start":622487,"byte_end":622538,"line_start":23,"line_end":23,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_construction.rs","byte_start":622543,"byte_end":622546,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(rot1 * rot2, rot2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_construction.rs","byte_start":622551,"byte_end":622585,"line_start":25,"line_end":25,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(rot2 * rot1, rot2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_construction.rs","byte_start":622590,"byte_end":622624,"line_start":26,"line_end":26,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_construction.rs","byte_start":622629,"byte_end":622636,"line_start":27,"line_end":27,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_construction.rs","byte_start":622641,"byte_end":622650,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6344},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":633764,"byte_end":633769,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"name":"slerp","qualname":"<Rotation2<N>>::slerp","value":"pub fn slerp(&Self, &Self, N) -> Self where N::Element: SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" Spherical linear interpolation between two rotation matrices.","sig":null,"attributes":[{"value":"/ Spherical linear interpolation between two rotation matrices.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":633259,"byte_end":633324,"line_start":5,"line_end":5,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":633329,"byte_end":633332,"line_start":6,"line_end":6,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":633337,"byte_end":633352,"line_start":7,"line_end":7,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":633357,"byte_end":633360,"line_start":8,"line_end":8,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":633365,"byte_end":633372,"line_start":9,"line_end":9,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":633377,"byte_end":633416,"line_start":10,"line_end":10,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::geometry::Rotation2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":633421,"byte_end":633461,"line_start":11,"line_end":11,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":633466,"byte_end":633469,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ let rot1 = Rotation2::new(std::f32::consts::FRAC_PI_4);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":633474,"byte_end":633533,"line_start":13,"line_end":13,"column_start":5,"column_end":64}},{"value":"/ let rot2 = Rotation2::new(-std::f32::consts::PI);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":633538,"byte_end":633591,"line_start":14,"line_end":14,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":633596,"byte_end":633599,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ let rot = rot1.slerp(&rot2, 1.0 / 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":633604,"byte_end":633647,"line_start":16,"line_end":16,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":633652,"byte_end":633655,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot.angle(), std::f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":633660,"byte_end":633726,"line_start":18,"line_end":18,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":633731,"byte_end":633738,"line_start":19,"line_end":19,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":633743,"byte_end":633752,"line_start":20,"line_end":20,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6347},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":634715,"byte_end":634720,"line_start":50,"line_end":50,"column_start":12,"column_end":17},"name":"slerp","qualname":"<Rotation3<N>>::slerp","value":"pub fn slerp(&Self, &Self, N) -> Self where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Spherical linear interpolation between two rotation matrices.","sig":null,"attributes":[{"value":"/ Spherical linear interpolation between two rotation matrices.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":634026,"byte_end":634091,"line_start":32,"line_end":32,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":634096,"byte_end":634099,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Panics if the angle between both rotations is 180 degrees (in which case the interpolation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":634104,"byte_end":634198,"line_start":34,"line_end":34,"column_start":5,"column_end":99}},{"value":"/ is not well-defined). Use `.try_slerp` instead to avoid the panic.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":634203,"byte_end":634273,"line_start":35,"line_end":35,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":634278,"byte_end":634281,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":634286,"byte_end":634301,"line_start":37,"line_end":37,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":634306,"byte_end":634309,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":634314,"byte_end":634321,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::geometry::Rotation3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":634326,"byte_end":634366,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":634371,"byte_end":634374,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ let q1 = Rotation3::from_euler_angles(std::f32::consts::FRAC_PI_4, 0.0, 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":634379,"byte_end":634460,"line_start":42,"line_end":42,"column_start":5,"column_end":86}},{"value":"/ let q2 = Rotation3::from_euler_angles(-std::f32::consts::PI, 0.0, 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":634465,"byte_end":634540,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":634545,"byte_end":634548,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ let q = q1.slerp(&q2, 1.0 / 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":634553,"byte_end":634590,"line_start":45,"line_end":45,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":634595,"byte_end":634598,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(q.euler_angles(), (std::f32::consts::FRAC_PI_2, 0.0, 0.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":634603,"byte_end":634677,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":634682,"byte_end":634689,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":634694,"byte_end":634703,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6348},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":635521,"byte_end":635530,"line_start":70,"line_end":70,"column_start":12,"column_end":21},"name":"try_slerp","qualname":"<Rotation3<N>>::try_slerp","value":"pub fn try_slerp(&Self, &Self, N, N) -> Option<Self> where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Computes the spherical linear interpolation between two rotation matrices or returns `None`\n if both rotations are approximately 180 degrees apart (in which case the interpolation is\n not well-defined).","sig":null,"attributes":[{"value":"/ Computes the spherical linear interpolation between two rotation matrices or returns `None`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":634930,"byte_end":635025,"line_start":59,"line_end":59,"column_start":5,"column_end":100}},{"value":"/ if both rotations are approximately 180 degrees apart (in which case the interpolation is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":635030,"byte_end":635123,"line_start":60,"line_end":60,"column_start":5,"column_end":98}},{"value":"/ not well-defined).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":635128,"byte_end":635150,"line_start":61,"line_end":61,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":635155,"byte_end":635158,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":635163,"byte_end":635178,"line_start":63,"line_end":63,"column_start":5,"column_end":20}},{"value":"/ * `self`: the first rotation to interpolate from.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":635183,"byte_end":635236,"line_start":64,"line_end":64,"column_start":5,"column_end":58}},{"value":"/ * `other`: the second rotation to interpolate toward.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":635241,"byte_end":635298,"line_start":65,"line_end":65,"column_start":5,"column_end":62}},{"value":"/ * `t`: the interpolation parameter. Should be between 0 and 1.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":635303,"byte_end":635369,"line_start":66,"line_end":66,"column_start":5,"column_end":71}},{"value":"/ * `epsilon`: the value below which the sinus of the angle separating both rotations","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":635374,"byte_end":635461,"line_start":67,"line_end":67,"column_start":5,"column_end":92}},{"value":"/ must be to return `None`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":635466,"byte_end":635495,"line_start":68,"line_end":68,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":635500,"byte_end":635509,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6556},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":644766,"byte_end":644769,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"new","qualname":"<Rotation2<N>>::new","value":"pub fn new(N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 2 dimensional rotation matrix from an angle in radian.","sig":null,"attributes":[{"value":"/ Builds a 2 dimensional rotation matrix from an angle in radian.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":644368,"byte_end":644435,"line_start":26,"line_end":26,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":644440,"byte_end":644443,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":644448,"byte_end":644461,"line_start":28,"line_end":28,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":644466,"byte_end":644469,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":644474,"byte_end":644481,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":644486,"byte_end":644525,"line_start":31,"line_end":31,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":644530,"byte_end":644549,"line_start":32,"line_end":32,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation2, Point2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":644554,"byte_end":644594,"line_start":33,"line_end":33,"column_start":5,"column_end":45}},{"value":"/ let rot = Rotation2::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":644599,"byte_end":644652,"line_start":34,"line_end":34,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":644657,"byte_end":644660,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * Point2::new(3.0, 4.0), Point2::new(-4.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":644665,"byte_end":644742,"line_start":36,"line_end":36,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":644747,"byte_end":644754,"line_start":37,"line_end":37,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6557},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":645196,"byte_end":645212,"line_start":49,"line_end":49,"column_start":12,"column_end":28},"name":"from_scaled_axis","qualname":"<Rotation2<N>>::from_scaled_axis","value":"pub fn from_scaled_axis<SB: Storage<N, U1>>(Vector<N, U1, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 2 dimensional rotation matrix from an angle in radian wrapped in a 1-dimensional vector.","sig":null,"attributes":[{"value":"/ Builds a 2 dimensional rotation matrix from an angle in radian wrapped in a 1-dimensional vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":644919,"byte_end":645020,"line_start":43,"line_end":43,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":645025,"byte_end":645028,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":645033,"byte_end":645036,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This is generally used in the context of generic programming. Using","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":645041,"byte_end":645112,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ the `::new(angle)` method instead is more common.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":645117,"byte_end":645170,"line_start":47,"line_end":47,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":645175,"byte_end":645184,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6561},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":645766,"byte_end":645777,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"from_matrix","qualname":"<Rotation2<N>>::from_matrix","value":"pub fn from_matrix(&Matrix2<N>) -> Self where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":645415,"byte_end":645508,"line_start":56,"line_end":56,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":645513,"byte_end":645516,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This is an iterative method. See `.from_matrix_eps` to provide mover","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":645521,"byte_end":645593,"line_start":58,"line_end":58,"column_start":5,"column_end":77}},{"value":"/ convergence parameters and starting solution.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":645598,"byte_end":645647,"line_start":59,"line_end":59,"column_start":5,"column_end":54}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":645652,"byte_end":645754,"line_start":60,"line_end":60,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":6562},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":646727,"byte_end":646742,"line_start":80,"line_end":80,"column_start":12,"column_end":27},"name":"from_matrix_eps","qualname":"<Rotation2<N>>::from_matrix_eps","value":"pub fn from_matrix_eps(&Matrix2<N>, N, usize, Self) -> Self where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":645927,"byte_end":646020,"line_start":68,"line_end":68,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":646025,"byte_end":646028,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":646033,"byte_end":646135,"line_start":70,"line_end":70,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":646140,"byte_end":646143,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":646148,"byte_end":646164,"line_start":72,"line_end":72,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":646169,"byte_end":646172,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ * `m`: the matrix from which the rotational part is to be extracted.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":646177,"byte_end":646249,"line_start":74,"line_end":74,"column_start":5,"column_end":77}},{"value":"/ * `eps`: the angular errors tolerated between the current rotation and the optimal one.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":646254,"byte_end":646345,"line_start":75,"line_end":75,"column_start":5,"column_end":96}},{"value":"/ * `max_iter`: the maximum number of iterations. Loops indefinitely until convergence if set to `0`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":646350,"byte_end":646453,"line_start":76,"line_end":76,"column_start":5,"column_end":108}},{"value":"/ * `guess`: an estimate of the solution. Convergence will be significantly faster if an initial solution close","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":646458,"byte_end":646571,"line_start":77,"line_end":77,"column_start":5,"column_end":118}},{"value":"/           to the actual solution is provided. Can be set to `Rotation2::identity()` if no other","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":646576,"byte_end":646675,"line_start":78,"line_end":78,"column_start":5,"column_end":104}},{"value":"/           guesses come to mind.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":646680,"byte_end":646715,"line_start":79,"line_end":79,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":6563},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":648031,"byte_end":648047,"line_start":120,"line_end":120,"column_start":12,"column_end":28},"name":"rotation_between","qualname":"<Rotation2<N>>::rotation_between","value":"pub fn rotation_between<SB, SC>(&Vector<N, U2, SB>, &Vector<N, U2, SC>)\n-> Self where N: RealField, SB: Storage<N, U2>, SC: Storage<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" The rotation matrix required to align `a` and `b` but with its angle.","sig":null,"attributes":[{"value":"/ The rotation matrix required to align `a` and `b` but with its angle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":647457,"byte_end":647530,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":647535,"byte_end":647538,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This is the rotation `R` such that `(R * a).angle(b) == 0 && (R * a).dot(b).is_positive()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":647543,"byte_end":647638,"line_start":107,"line_end":107,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":647643,"byte_end":647646,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":647651,"byte_end":647664,"line_start":109,"line_end":109,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":647669,"byte_end":647676,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":647681,"byte_end":647720,"line_start":111,"line_end":111,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector2, Rotation2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":647725,"byte_end":647766,"line_start":112,"line_end":112,"column_start":5,"column_end":46}},{"value":"/ let a = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":647771,"byte_end":647806,"line_start":113,"line_end":113,"column_start":5,"column_end":40}},{"value":"/ let b = Vector2::new(2.0, 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":647811,"byte_end":647846,"line_start":114,"line_end":114,"column_start":5,"column_end":40}},{"value":"/ let rot = Rotation2::rotation_between(&a, &b);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":647851,"byte_end":647901,"line_start":115,"line_end":115,"column_start":5,"column_end":55}},{"value":"/ assert_relative_eq!(rot * a, b);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":647906,"byte_end":647942,"line_start":116,"line_end":116,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(rot.inverse() * b, a);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":647947,"byte_end":647993,"line_start":117,"line_end":117,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":647998,"byte_end":648005,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":648010,"byte_end":648019,"line_start":119,"line_end":119,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6566},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":648965,"byte_end":648988,"line_start":144,"line_end":144,"column_start":12,"column_end":35},"name":"scaled_rotation_between","qualname":"<Rotation2<N>>::scaled_rotation_between","value":"pub fn scaled_rotation_between<SB,\n                               SC>(&Vector<N, U2, SB>, &Vector<N, U2, SC>, N)\n-> Self where N: RealField, SB: Storage<N, U2>, SC: Storage<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":648296,"byte_end":648384,"line_start":129,"line_end":129,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":648389,"byte_end":648428,"line_start":130,"line_end":130,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":648433,"byte_end":648436,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":648441,"byte_end":648454,"line_start":132,"line_end":132,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":648459,"byte_end":648466,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":648471,"byte_end":648510,"line_start":134,"line_end":134,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector2, Rotation2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":648515,"byte_end":648556,"line_start":135,"line_end":135,"column_start":5,"column_end":46}},{"value":"/ let a = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":648561,"byte_end":648596,"line_start":136,"line_end":136,"column_start":5,"column_end":40}},{"value":"/ let b = Vector2::new(2.0, 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":648601,"byte_end":648636,"line_start":137,"line_end":137,"column_start":5,"column_end":40}},{"value":"/ let rot2 = Rotation2::scaled_rotation_between(&a, &b, 0.2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":648641,"byte_end":648704,"line_start":138,"line_end":138,"column_start":5,"column_end":68}},{"value":"/ let rot5 = Rotation2::scaled_rotation_between(&a, &b, 0.5);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":648709,"byte_end":648772,"line_start":139,"line_end":139,"column_start":5,"column_end":68}},{"value":"/ assert_relative_eq!(rot2 * rot2 * rot2 * rot2 * rot2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":648777,"byte_end":648860,"line_start":140,"line_end":140,"column_start":5,"column_end":88}},{"value":"/ assert_relative_eq!(rot5 * rot5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":648865,"byte_end":648927,"line_start":141,"line_end":141,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":648932,"byte_end":648939,"line_start":142,"line_end":142,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":648944,"byte_end":648953,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6569},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":649834,"byte_end":649845,"line_start":173,"line_end":173,"column_start":12,"column_end":23},"name":"rotation_to","qualname":"<Rotation2<N>>::rotation_to","value":"pub fn rotation_to(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The rotation matrix needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation matrix needed to make `self` and `other` coincide.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":649284,"byte_end":649351,"line_start":157,"line_end":157,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":649356,"byte_end":649359,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ The result is such that: `self.rotation_to(other) * self == other`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":649364,"byte_end":649435,"line_start":159,"line_end":159,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":649440,"byte_end":649443,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":649448,"byte_end":649461,"line_start":161,"line_end":161,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":649466,"byte_end":649473,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":649478,"byte_end":649517,"line_start":163,"line_end":163,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":649522,"byte_end":649552,"line_start":164,"line_end":164,"column_start":5,"column_end":35}},{"value":"/ let rot1 = Rotation2::new(0.1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":649557,"byte_end":649592,"line_start":165,"line_end":165,"column_start":5,"column_end":40}},{"value":"/ let rot2 = Rotation2::new(1.7);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":649597,"byte_end":649632,"line_start":166,"line_end":166,"column_start":5,"column_end":40}},{"value":"/ let rot_to = rot1.rotation_to(&rot2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":649637,"byte_end":649678,"line_start":167,"line_end":167,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":649683,"byte_end":649686,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot_to * rot1, rot2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":649691,"byte_end":649736,"line_start":169,"line_end":169,"column_start":5,"column_end":50}},{"value":"/ assert_relative_eq!(rot_to.inverse() * rot2, rot1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":649741,"byte_end":649796,"line_start":170,"line_end":170,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":649801,"byte_end":649808,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":649813,"byte_end":649822,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6570},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":650127,"byte_end":650138,"line_start":180,"line_end":180,"column_start":12,"column_end":23},"name":"renormalize","qualname":"<Rotation2<N>>::renormalize","value":"pub fn renormalize(&mut Self) where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Ensure this rotation is an orthonormal rotation matrix. This is useful when repeated\n computations might cause the matrix from progressively not being orthonormal anymore.\n","sig":null,"attributes":[{"value":"/ Ensure this rotation is an orthonormal rotation matrix. This is useful when repeated","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":649919,"byte_end":650007,"line_start":177,"line_end":177,"column_start":5,"column_end":93}},{"value":"/ computations might cause the matrix from progressively not being orthonormal anymore.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":650012,"byte_end":650101,"line_start":178,"line_end":178,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":650106,"byte_end":650115,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6571},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":650779,"byte_end":650783,"line_start":202,"line_end":202,"column_start":12,"column_end":16},"name":"powf","qualname":"<Rotation2<N>>::powf","value":"pub fn powf(&Self, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Raise the quaternion to a given floating power, i.e., returns the rotation with the angle\n of `self` multiplied by `n`.","sig":null,"attributes":[{"value":"/ Raise the quaternion to a given floating power, i.e., returns the rotation with the angle","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":650367,"byte_end":650460,"line_start":190,"line_end":190,"column_start":5,"column_end":98}},{"value":"/ of `self` multiplied by `n`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":650465,"byte_end":650497,"line_start":191,"line_end":191,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":650502,"byte_end":650505,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":650510,"byte_end":650523,"line_start":193,"line_end":193,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":650528,"byte_end":650535,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":650540,"byte_end":650579,"line_start":195,"line_end":195,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":650584,"byte_end":650614,"line_start":196,"line_end":196,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation2::new(0.78);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":650619,"byte_end":650654,"line_start":197,"line_end":197,"column_start":5,"column_end":40}},{"value":"/ let pow = rot.powf(2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":650659,"byte_end":650687,"line_start":198,"line_end":198,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(pow.angle(), 2.0 * 0.78);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":650692,"byte_end":650741,"line_start":199,"line_end":199,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":650746,"byte_end":650753,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":650758,"byte_end":650767,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6574},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":651186,"byte_end":651191,"line_start":219,"line_end":219,"column_start":12,"column_end":17},"name":"angle","qualname":"<Rotation2<N>>::angle","value":"pub fn angle(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle.","sig":null,"attributes":[{"value":"/ The rotation angle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":650920,"byte_end":650943,"line_start":209,"line_end":209,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":650948,"byte_end":650951,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":650956,"byte_end":650969,"line_start":211,"line_end":211,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":650974,"byte_end":650981,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":650986,"byte_end":651025,"line_start":213,"line_end":213,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":651030,"byte_end":651060,"line_start":214,"line_end":214,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation2::new(1.78);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":651065,"byte_end":651100,"line_start":215,"line_end":215,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(rot.angle(), 1.78);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":651105,"byte_end":651148,"line_start":216,"line_end":216,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":651153,"byte_end":651160,"line_start":217,"line_end":217,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":651165,"byte_end":651174,"line_start":218,"line_end":218,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6575},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":651638,"byte_end":651646,"line_start":234,"line_end":234,"column_start":12,"column_end":20},"name":"angle_to","qualname":"<Rotation2<N>>::angle_to","value":"pub fn angle_to(&Self, &Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation angle needed to make `self` and `other` coincide.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":651281,"byte_end":651347,"line_start":223,"line_end":223,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":651352,"byte_end":651355,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":651360,"byte_end":651373,"line_start":225,"line_end":225,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":651378,"byte_end":651385,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":651390,"byte_end":651429,"line_start":227,"line_end":227,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":651434,"byte_end":651464,"line_start":228,"line_end":228,"column_start":5,"column_end":35}},{"value":"/ let rot1 = Rotation2::new(0.1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":651469,"byte_end":651504,"line_start":229,"line_end":229,"column_start":5,"column_end":40}},{"value":"/ let rot2 = Rotation2::new(1.7);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":651509,"byte_end":651544,"line_start":230,"line_end":230,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(rot1.angle_to(&rot2), 1.6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":651549,"byte_end":651600,"line_start":231,"line_end":231,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":651605,"byte_end":651612,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":651617,"byte_end":651626,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6576},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":651948,"byte_end":651959,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"scaled_axis","qualname":"<Rotation2<N>>::scaled_axis","value":"pub fn scaled_axis(&Self) -> VectorN<N, U1>","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle returned as a 1-dimensional vector.","sig":null,"attributes":[{"value":"/ The rotation angle returned as a 1-dimensional vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":651726,"byte_end":651784,"line_start":238,"line_end":238,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":651789,"byte_end":651792,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ This is generally used in the context of generic programming. Using","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":651797,"byte_end":651868,"line_start":240,"line_end":240,"column_start":5,"column_end":76}},{"value":"/ the `.angle()` method instead is more common.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":651873,"byte_end":651922,"line_start":241,"line_end":241,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":651927,"byte_end":651936,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6584},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":653841,"byte_end":653844,"line_start":305,"line_end":305,"column_start":12,"column_end":15},"name":"new","qualname":"<Rotation3<N>>::new","value":"pub fn new<SB: Storage<N, U3>>(Vector<N, U3, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3 dimensional rotation matrix from an axis and an angle.","sig":null,"attributes":[{"value":"/ Builds a 3 dimensional rotation matrix from an axis and an angle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":652819,"byte_end":652888,"line_start":282,"line_end":282,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":652893,"byte_end":652896,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":652901,"byte_end":652916,"line_start":284,"line_end":284,"column_start":5,"column_end":20}},{"value":"/   * `axisangle` - A vector representing the rotation. Its magnitude is the amount of rotation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":652921,"byte_end":653018,"line_start":285,"line_end":285,"column_start":5,"column_end":102}},{"value":"/   in radian. Its direction is the axis of rotation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":653023,"byte_end":653078,"line_start":286,"line_end":286,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":653083,"byte_end":653086,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":653091,"byte_end":653104,"line_start":288,"line_end":288,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":653109,"byte_end":653116,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":653121,"byte_end":653160,"line_start":290,"line_end":290,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":653165,"byte_end":653184,"line_start":291,"line_end":291,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Point3, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":653189,"byte_end":653238,"line_start":292,"line_end":292,"column_start":5,"column_end":54}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":653243,"byte_end":653301,"line_start":293,"line_end":293,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":653306,"byte_end":653361,"line_start":294,"line_end":294,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":653366,"byte_end":653406,"line_start":295,"line_end":295,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":653411,"byte_end":653453,"line_start":296,"line_end":296,"column_start":5,"column_end":47}},{"value":"/ let rot = Rotation3::new(axisangle);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":653458,"byte_end":653498,"line_start":297,"line_end":297,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":653503,"byte_end":653506,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":653511,"byte_end":653592,"line_start":299,"line_end":299,"column_start":5,"column_end":86}},{"value":"/ assert_relative_eq!(rot * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":653597,"byte_end":653680,"line_start":300,"line_end":300,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":653685,"byte_end":653688,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":653693,"byte_end":653733,"line_start":302,"line_end":302,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(Rotation3::new(Vector3::<f32>::zeros()), Rotation3::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":653738,"byte_end":653817,"line_start":303,"line_end":303,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":653822,"byte_end":653829,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6586},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":654976,"byte_end":654992,"line_start":332,"line_end":332,"column_start":12,"column_end":28},"name":"from_scaled_axis","qualname":"<Rotation3<N>>::from_scaled_axis","value":"pub fn from_scaled_axis<SB: Storage<N, U3>>(Vector<N, U3, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D rotation matrix from an axis scaled by the rotation angle.","sig":null,"attributes":[{"value":"/ Builds a 3D rotation matrix from an axis scaled by the rotation angle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":654066,"byte_end":654140,"line_start":311,"line_end":311,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":654145,"byte_end":654148,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ This is the same as `Self::new(axisangle)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":654153,"byte_end":654200,"line_start":313,"line_end":313,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":654205,"byte_end":654208,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":654213,"byte_end":654226,"line_start":315,"line_end":315,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":654231,"byte_end":654238,"line_start":316,"line_end":316,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":654243,"byte_end":654282,"line_start":317,"line_end":317,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":654287,"byte_end":654306,"line_start":318,"line_end":318,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Point3, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":654311,"byte_end":654360,"line_start":319,"line_end":319,"column_start":5,"column_end":54}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":654365,"byte_end":654423,"line_start":320,"line_end":320,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":654428,"byte_end":654483,"line_start":321,"line_end":321,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":654488,"byte_end":654528,"line_start":322,"line_end":322,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":654533,"byte_end":654575,"line_start":323,"line_end":323,"column_start":5,"column_end":47}},{"value":"/ let rot = Rotation3::new(axisangle);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":654580,"byte_end":654620,"line_start":324,"line_end":324,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":654625,"byte_end":654628,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":654633,"byte_end":654714,"line_start":326,"line_end":326,"column_start":5,"column_end":86}},{"value":"/ assert_relative_eq!(rot * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":654719,"byte_end":654802,"line_start":327,"line_end":327,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":654807,"byte_end":654810,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":654815,"byte_end":654855,"line_start":329,"line_end":329,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(Rotation3::from_scaled_axis(Vector3::<f32>::zeros()), Rotation3::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":654860,"byte_end":654952,"line_start":330,"line_end":330,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":654957,"byte_end":654964,"line_start":331,"line_end":331,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6588},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":656056,"byte_end":656071,"line_start":358,"line_end":358,"column_start":12,"column_end":27},"name":"from_axis_angle","qualname":"<Rotation3<N>>::from_axis_angle","value":"pub fn from_axis_angle<SB>(&Unit<Vector<N, U3, SB>>, N) -> Self where\nSB: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D rotation matrix from an axis and a rotation angle.","sig":null,"attributes":[{"value":"/ Builds a 3D rotation matrix from an axis and a rotation angle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":655093,"byte_end":655159,"line_start":336,"line_end":336,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":655164,"byte_end":655167,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":655172,"byte_end":655185,"line_start":338,"line_end":338,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":655190,"byte_end":655197,"line_start":339,"line_end":339,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":655202,"byte_end":655241,"line_start":340,"line_end":340,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":655246,"byte_end":655265,"line_start":341,"line_end":341,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Point3, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":655270,"byte_end":655319,"line_start":342,"line_end":342,"column_start":5,"column_end":54}},{"value":"/ let axis = Vector3::y_axis();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":655324,"byte_end":655357,"line_start":343,"line_end":343,"column_start":5,"column_end":38}},{"value":"/ let angle = f32::consts::FRAC_PI_2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":655362,"byte_end":655401,"line_start":344,"line_end":344,"column_start":5,"column_end":44}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":655406,"byte_end":655461,"line_start":345,"line_end":345,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":655466,"byte_end":655506,"line_start":346,"line_end":346,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":655511,"byte_end":655553,"line_start":347,"line_end":347,"column_start":5,"column_end":47}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, angle);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":655558,"byte_end":655613,"line_start":348,"line_end":348,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":655618,"byte_end":655621,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(rot.axis().unwrap(), axis);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":655626,"byte_end":655668,"line_start":350,"line_end":350,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(rot.angle(), angle);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":655673,"byte_end":655708,"line_start":351,"line_end":351,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(rot * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":655713,"byte_end":655794,"line_start":352,"line_end":352,"column_start":5,"column_end":86}},{"value":"/ assert_relative_eq!(rot * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":655799,"byte_end":655882,"line_start":353,"line_end":353,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":655887,"byte_end":655890,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":655895,"byte_end":655935,"line_start":355,"line_end":355,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(Rotation3::from_scaled_axis(Vector3::<f32>::zeros()), Rotation3::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":655940,"byte_end":656032,"line_start":356,"line_end":356,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":656037,"byte_end":656044,"line_start":357,"line_end":357,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6591},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":657743,"byte_end":657760,"line_start":403,"line_end":403,"column_start":12,"column_end":29},"name":"from_euler_angles","qualname":"<Rotation3<N>>::from_euler_angles","value":"pub fn from_euler_angles(N, N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new rotation from Euler angles.","sig":null,"attributes":[{"value":"/ Creates a new rotation from Euler angles.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":657179,"byte_end":657224,"line_start":389,"line_end":389,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":657229,"byte_end":657232,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ The primitive rotations are applied in order: 1 roll − 2 pitch − 3 yaw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":657237,"byte_end":657316,"line_start":391,"line_end":391,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":657321,"byte_end":657324,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":657329,"byte_end":657342,"line_start":393,"line_end":393,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":657347,"byte_end":657354,"line_start":394,"line_end":394,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":657359,"byte_end":657398,"line_start":395,"line_end":395,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":657403,"byte_end":657433,"line_start":396,"line_end":396,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation3::from_euler_angles(0.1, 0.2, 0.3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":657438,"byte_end":657496,"line_start":397,"line_end":397,"column_start":5,"column_end":63}},{"value":"/ let euler = rot.euler_angles();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":657501,"byte_end":657536,"line_start":398,"line_end":398,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(euler.0, 0.1, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":657541,"byte_end":657597,"line_start":399,"line_end":399,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.1, 0.2, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":657602,"byte_end":657658,"line_start":400,"line_end":400,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.2, 0.3, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":657663,"byte_end":657719,"line_start":401,"line_end":401,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":657724,"byte_end":657731,"line_start":402,"line_end":402,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6594},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":659263,"byte_end":659275,"line_start":449,"line_end":449,"column_start":12,"column_end":24},"name":"face_towards","qualname":"<Rotation3<N>>::face_towards","value":"pub fn face_towards<SB, SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>) -> Self\nwhere SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation that corresponds to the local frame of an observer standing at the\n origin and looking toward `dir`.","sig":null,"attributes":[{"value":"/ Creates a rotation that corresponds to the local frame of an observer standing at the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":658393,"byte_end":658482,"line_start":427,"line_end":427,"column_start":5,"column_end":94}},{"value":"/ origin and looking toward `dir`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":658487,"byte_end":658523,"line_start":428,"line_end":428,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":658528,"byte_end":658531,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ It maps the `z` axis to the direction `dir`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":658536,"byte_end":658584,"line_start":430,"line_end":430,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":658589,"byte_end":658592,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":658597,"byte_end":658612,"line_start":432,"line_end":432,"column_start":5,"column_end":20}},{"value":"/   * dir - The look direction, that is, direction the matrix `z` axis will be aligned with.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":658617,"byte_end":658711,"line_start":433,"line_end":433,"column_start":5,"column_end":99}},{"value":"/   * up - The vertical direction. The only requirement of this parameter is to not be","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":658716,"byte_end":658804,"line_start":434,"line_end":434,"column_start":5,"column_end":93}},{"value":"/   collinear to `dir`. Non-collinearity is not checked.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":658809,"byte_end":658867,"line_start":435,"line_end":435,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":658872,"byte_end":658875,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":658880,"byte_end":658893,"line_start":437,"line_end":437,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":658898,"byte_end":658905,"line_start":438,"line_end":438,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":658910,"byte_end":658949,"line_start":439,"line_end":439,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":658954,"byte_end":658973,"line_start":440,"line_end":440,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":658978,"byte_end":659019,"line_start":441,"line_end":441,"column_start":5,"column_end":46}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":659024,"byte_end":659066,"line_start":442,"line_end":442,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":659071,"byte_end":659097,"line_start":443,"line_end":443,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":659102,"byte_end":659105,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation3::face_towards(&dir, &up);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":659110,"byte_end":659159,"line_start":445,"line_end":445,"column_start":5,"column_end":54}},{"value":"/ assert_relative_eq!(rot * Vector3::z(), dir.normalize());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":659164,"byte_end":659225,"line_start":446,"line_end":446,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":659230,"byte_end":659237,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":659242,"byte_end":659251,"line_start":448,"line_end":448,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6597},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":659848,"byte_end":659867,"line_start":465,"line_end":465,"column_start":12,"column_end":31},"name":"new_observer_frames","qualname":"<Rotation3<N>>::new_observer_frames","value":"pub fn new_observer_frames<SB, SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>)\n-> Self where SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated: Use [Rotation3::face_towards] instead.\n","sig":null,"attributes":[{"value":"/ Deprecated: Use [Rotation3::face_towards] instead.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":659728,"byte_end":659782,"line_start":463,"line_end":463,"column_start":5,"column_end":59}},{"value":"deprecated(note = \"renamed to `face_towards`\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":659787,"byte_end":659836,"line_start":464,"line_end":464,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6600},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":660966,"byte_end":660976,"line_start":496,"line_end":496,"column_start":12,"column_end":22},"name":"look_at_rh","qualname":"<Rotation3<N>>::look_at_rh","value":"pub fn look_at_rh<SB, SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>) -> Self\nwhere SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Builds a right-handed look-at view matrix without translation.","sig":null,"attributes":[{"value":"/ Builds a right-handed look-at view matrix without translation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":660052,"byte_end":660118,"line_start":473,"line_end":473,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":660123,"byte_end":660126,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ It maps the view direction `dir` to the **negative** `z` axis.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":660131,"byte_end":660197,"line_start":475,"line_end":475,"column_start":5,"column_end":71}},{"value":"/ This conforms to the common notion of right handed look-at matrix from the computer","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":660202,"byte_end":660289,"line_start":476,"line_end":476,"column_start":5,"column_end":92}},{"value":"/ graphics community.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":660294,"byte_end":660317,"line_start":477,"line_end":477,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":660322,"byte_end":660325,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":660330,"byte_end":660345,"line_start":479,"line_end":479,"column_start":5,"column_end":20}},{"value":"/   * dir - The direction toward which the camera looks.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":660350,"byte_end":660408,"line_start":480,"line_end":480,"column_start":5,"column_end":63}},{"value":"/   * up - A vector approximately aligned with required the vertical axis. The only","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":660413,"byte_end":660498,"line_start":481,"line_end":481,"column_start":5,"column_end":90}},{"value":"/   requirement of this parameter is to not be collinear to `dir`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":660503,"byte_end":660571,"line_start":482,"line_end":482,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":660576,"byte_end":660579,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":660584,"byte_end":660597,"line_start":484,"line_end":484,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":660602,"byte_end":660609,"line_start":485,"line_end":485,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":660614,"byte_end":660653,"line_start":486,"line_end":486,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":660658,"byte_end":660677,"line_start":487,"line_end":487,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":660682,"byte_end":660723,"line_start":488,"line_end":488,"column_start":5,"column_end":46}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":660728,"byte_end":660770,"line_start":489,"line_end":489,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":660775,"byte_end":660801,"line_start":490,"line_end":490,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":660806,"byte_end":660809,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation3::look_at_rh(&dir, &up);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":660814,"byte_end":660861,"line_start":492,"line_end":492,"column_start":5,"column_end":52}},{"value":"/ assert_relative_eq!(rot * dir.normalize(), -Vector3::z());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":660866,"byte_end":660928,"line_start":493,"line_end":493,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":660933,"byte_end":660940,"line_start":494,"line_end":494,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":660945,"byte_end":660954,"line_start":495,"line_end":495,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6603},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":662089,"byte_end":662099,"line_start":527,"line_end":527,"column_start":12,"column_end":22},"name":"look_at_lh","qualname":"<Rotation3<N>>::look_at_lh","value":"pub fn look_at_lh<SB, SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>) -> Self\nwhere SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Builds a left-handed look-at view matrix without translation.","sig":null,"attributes":[{"value":"/ Builds a left-handed look-at view matrix without translation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":661178,"byte_end":661243,"line_start":504,"line_end":504,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":661248,"byte_end":661251,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ It maps the view direction `dir` to the **positive** `z` axis.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":661256,"byte_end":661322,"line_start":506,"line_end":506,"column_start":5,"column_end":71}},{"value":"/ This conforms to the common notion of left handed look-at matrix from the computer","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":661327,"byte_end":661413,"line_start":507,"line_end":507,"column_start":5,"column_end":91}},{"value":"/ graphics community.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":661418,"byte_end":661441,"line_start":508,"line_end":508,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":661446,"byte_end":661449,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":661454,"byte_end":661469,"line_start":510,"line_end":510,"column_start":5,"column_end":20}},{"value":"/   * dir - The direction toward which the camera looks.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":661474,"byte_end":661532,"line_start":511,"line_end":511,"column_start":5,"column_end":63}},{"value":"/   * up - A vector approximately aligned with required the vertical axis. The only","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":661537,"byte_end":661622,"line_start":512,"line_end":512,"column_start":5,"column_end":90}},{"value":"/   requirement of this parameter is to not be collinear to `dir`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":661627,"byte_end":661695,"line_start":513,"line_end":513,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":661700,"byte_end":661703,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":661708,"byte_end":661721,"line_start":515,"line_end":515,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":661726,"byte_end":661733,"line_start":516,"line_end":516,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":661738,"byte_end":661777,"line_start":517,"line_end":517,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":661782,"byte_end":661801,"line_start":518,"line_end":518,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":661806,"byte_end":661847,"line_start":519,"line_end":519,"column_start":5,"column_end":46}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":661852,"byte_end":661894,"line_start":520,"line_end":520,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":661899,"byte_end":661925,"line_start":521,"line_end":521,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":661930,"byte_end":661933,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation3::look_at_lh(&dir, &up);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":661938,"byte_end":661985,"line_start":523,"line_end":523,"column_start":5,"column_end":52}},{"value":"/ assert_relative_eq!(rot * dir.normalize(), Vector3::z());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":661990,"byte_end":662051,"line_start":524,"line_end":524,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":662056,"byte_end":662063,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":662068,"byte_end":662077,"line_start":526,"line_end":526,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6608},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":663059,"byte_end":663075,"line_start":556,"line_end":556,"column_start":12,"column_end":28},"name":"rotation_between","qualname":"<Rotation3<N>>::rotation_between","value":"pub fn rotation_between<SB, SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>)\n-> Option<Self> where N: RealField, SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" The rotation matrix required to align `a` and `b` but with its angle.","sig":null,"attributes":[{"value":"/ The rotation matrix required to align `a` and `b` but with its angle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":662430,"byte_end":662503,"line_start":541,"line_end":541,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":662508,"byte_end":662511,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ This is the rotation `R` such that `(R * a).angle(b) == 0 && (R * a).dot(b).is_positive()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":662516,"byte_end":662611,"line_start":543,"line_end":543,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":662616,"byte_end":662619,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":662624,"byte_end":662637,"line_start":545,"line_end":545,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":662642,"byte_end":662649,"line_start":546,"line_end":546,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":662654,"byte_end":662693,"line_start":547,"line_end":547,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector3, Rotation3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":662698,"byte_end":662739,"line_start":548,"line_end":548,"column_start":5,"column_end":46}},{"value":"/ let a = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":662744,"byte_end":662784,"line_start":549,"line_end":549,"column_start":5,"column_end":45}},{"value":"/ let b = Vector3::new(3.0, 1.0, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":662789,"byte_end":662829,"line_start":550,"line_end":550,"column_start":5,"column_end":45}},{"value":"/ let rot = Rotation3::rotation_between(&a, &b).unwrap();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":662834,"byte_end":662893,"line_start":551,"line_end":551,"column_start":5,"column_end":64}},{"value":"/ assert_relative_eq!(rot * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":662898,"byte_end":662952,"line_start":552,"line_end":552,"column_start":5,"column_end":59}},{"value":"/ assert_relative_eq!(rot.inverse() * b, a, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":662957,"byte_end":663021,"line_start":553,"line_end":553,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":663026,"byte_end":663033,"line_start":554,"line_end":554,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":663038,"byte_end":663047,"line_start":555,"line_end":555,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6611},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":664002,"byte_end":664025,"line_start":580,"line_end":580,"column_start":12,"column_end":35},"name":"scaled_rotation_between","qualname":"<Rotation3<N>>::scaled_rotation_between","value":"pub fn scaled_rotation_between<SB,\n                               SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>, N)\n-> Option<Self> where N: RealField, SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":663305,"byte_end":663393,"line_start":565,"line_end":565,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":663398,"byte_end":663437,"line_start":566,"line_end":566,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":663442,"byte_end":663445,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":663450,"byte_end":663463,"line_start":568,"line_end":568,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":663468,"byte_end":663475,"line_start":569,"line_end":569,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":663480,"byte_end":663519,"line_start":570,"line_end":570,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector3, Rotation3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":663524,"byte_end":663565,"line_start":571,"line_end":571,"column_start":5,"column_end":46}},{"value":"/ let a = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":663570,"byte_end":663610,"line_start":572,"line_end":572,"column_start":5,"column_end":45}},{"value":"/ let b = Vector3::new(3.0, 1.0, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":663615,"byte_end":663655,"line_start":573,"line_end":573,"column_start":5,"column_end":45}},{"value":"/ let rot2 = Rotation3::scaled_rotation_between(&a, &b, 0.2).unwrap();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":663660,"byte_end":663732,"line_start":574,"line_end":574,"column_start":5,"column_end":77}},{"value":"/ let rot5 = Rotation3::scaled_rotation_between(&a, &b, 0.5).unwrap();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":663737,"byte_end":663809,"line_start":575,"line_end":575,"column_start":5,"column_end":77}},{"value":"/ assert_relative_eq!(rot2 * rot2 * rot2 * rot2 * rot2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":663814,"byte_end":663897,"line_start":576,"line_end":576,"column_start":5,"column_end":88}},{"value":"/ assert_relative_eq!(rot5 * rot5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":663902,"byte_end":663964,"line_start":577,"line_end":577,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":663969,"byte_end":663976,"line_start":578,"line_end":578,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":663981,"byte_end":663990,"line_start":579,"line_end":579,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6614},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":665484,"byte_end":665495,"line_start":625,"line_end":625,"column_start":12,"column_end":23},"name":"rotation_to","qualname":"<Rotation3<N>>::rotation_to","value":"pub fn rotation_to(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The rotation matrix needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation matrix needed to make `self` and `other` coincide.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":664909,"byte_end":664976,"line_start":611,"line_end":611,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":664981,"byte_end":664984,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ The result is such that: `self.rotation_to(other) * self == other`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":664989,"byte_end":665060,"line_start":613,"line_end":613,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":665065,"byte_end":665068,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":665073,"byte_end":665086,"line_start":615,"line_end":615,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":665091,"byte_end":665098,"line_start":616,"line_end":616,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":665103,"byte_end":665142,"line_start":617,"line_end":617,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":665147,"byte_end":665188,"line_start":618,"line_end":618,"column_start":5,"column_end":46}},{"value":"/ let rot1 = Rotation3::from_axis_angle(&Vector3::y_axis(), 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":665193,"byte_end":665260,"line_start":619,"line_end":619,"column_start":5,"column_end":72}},{"value":"/ let rot2 = Rotation3::from_axis_angle(&Vector3::x_axis(), 0.1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":665265,"byte_end":665332,"line_start":620,"line_end":620,"column_start":5,"column_end":72}},{"value":"/ let rot_to = rot1.rotation_to(&rot2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":665337,"byte_end":665378,"line_start":621,"line_end":621,"column_start":5,"column_end":46}},{"value":"/ assert_relative_eq!(rot_to * rot1, rot2, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":665383,"byte_end":665446,"line_start":622,"line_end":622,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":665451,"byte_end":665458,"line_start":623,"line_end":623,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":665463,"byte_end":665472,"line_start":624,"line_end":624,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6615},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":666211,"byte_end":666215,"line_start":644,"line_end":644,"column_start":12,"column_end":16},"name":"powf","qualname":"<Rotation3<N>>::powf","value":"pub fn powf(&Self, N) -> Self where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Raise the quaternion to a given floating power, i.e., returns the rotation with the same\n axis as `self` and an angle equal to `self.angle()` multiplied by `n`.","sig":null,"attributes":[{"value":"/ Raise the quaternion to a given floating power, i.e., returns the rotation with the same","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":665569,"byte_end":665661,"line_start":629,"line_end":629,"column_start":5,"column_end":97}},{"value":"/ axis as `self` and an angle equal to `self.angle()` multiplied by `n`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":665666,"byte_end":665740,"line_start":630,"line_end":630,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":665745,"byte_end":665748,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":665753,"byte_end":665766,"line_start":632,"line_end":632,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":665771,"byte_end":665778,"line_start":633,"line_end":633,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":665783,"byte_end":665822,"line_start":634,"line_end":634,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3, Unit};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":665827,"byte_end":665874,"line_start":635,"line_end":635,"column_start":5,"column_end":52}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":665879,"byte_end":665943,"line_start":636,"line_end":636,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":665948,"byte_end":665968,"line_start":637,"line_end":637,"column_start":5,"column_end":25}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, angle);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":665973,"byte_end":666028,"line_start":638,"line_end":638,"column_start":5,"column_end":60}},{"value":"/ let pow = rot.powf(2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":666033,"byte_end":666061,"line_start":639,"line_end":639,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(pow.axis().unwrap(), axis, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":666066,"byte_end":666135,"line_start":640,"line_end":640,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(pow.angle(), 2.4);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":666140,"byte_end":666173,"line_start":641,"line_end":641,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":666178,"byte_end":666185,"line_start":642,"line_end":642,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":666190,"byte_end":666199,"line_start":643,"line_end":643,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6616},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":666977,"byte_end":666988,"line_start":663,"line_end":663,"column_start":12,"column_end":23},"name":"from_matrix","qualname":"<Rotation3<N>>::from_matrix","value":"pub fn from_matrix(&Matrix3<N>) -> Self where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":666626,"byte_end":666719,"line_start":658,"line_end":658,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":666724,"byte_end":666727,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ This is an iterative method. See `.from_matrix_eps` to provide mover","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":666732,"byte_end":666804,"line_start":660,"line_end":660,"column_start":5,"column_end":77}},{"value":"/ convergence parameters and starting solution.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":666809,"byte_end":666858,"line_start":661,"line_end":661,"column_start":5,"column_end":54}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":666863,"byte_end":666965,"line_start":662,"line_end":662,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":6617},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":667934,"byte_end":667949,"line_start":682,"line_end":682,"column_start":12,"column_end":27},"name":"from_matrix_eps","qualname":"<Rotation3<N>>::from_matrix_eps","value":"pub fn from_matrix_eps(&Matrix3<N>, N, usize, Self) -> Self where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":667138,"byte_end":667231,"line_start":670,"line_end":670,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":667236,"byte_end":667239,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":667244,"byte_end":667346,"line_start":672,"line_end":672,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":667351,"byte_end":667354,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":667359,"byte_end":667375,"line_start":674,"line_end":674,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":667380,"byte_end":667383,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ * `m`: the matrix from which the rotational part is to be extracted.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":667388,"byte_end":667460,"line_start":676,"line_end":676,"column_start":5,"column_end":77}},{"value":"/ * `eps`: the angular errors tolerated between the current rotation and the optimal one.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":667465,"byte_end":667556,"line_start":677,"line_end":677,"column_start":5,"column_end":96}},{"value":"/ * `max_iter`: the maximum number of iterations. Loops indefinitely until convergence if set to `0`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":667561,"byte_end":667664,"line_start":678,"line_end":678,"column_start":5,"column_end":108}},{"value":"/ * `guess`: a guess of the solution. Convergence will be significantly faster if an initial solution close","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":667669,"byte_end":667778,"line_start":679,"line_end":679,"column_start":5,"column_end":114}},{"value":"/           to the actual solution is provided. Can be set to `Rotation3::identity()` if no other","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":667783,"byte_end":667882,"line_start":680,"line_end":680,"column_start":5,"column_end":104}},{"value":"/           guesses come to mind.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":667887,"byte_end":667922,"line_start":681,"line_end":681,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":6618},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":669083,"byte_end":669094,"line_start":715,"line_end":715,"column_start":12,"column_end":23},"name":"renormalize","qualname":"<Rotation3<N>>::renormalize","value":"pub fn renormalize(&mut Self) where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Ensure this rotation is an orthonormal rotation matrix. This is useful when repeated\n computations might cause the matrix from progressively not being orthonormal anymore.\n","sig":null,"attributes":[{"value":"/ Ensure this rotation is an orthonormal rotation matrix. This is useful when repeated","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":668875,"byte_end":668963,"line_start":712,"line_end":712,"column_start":5,"column_end":93}},{"value":"/ computations might cause the matrix from progressively not being orthonormal anymore.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":668968,"byte_end":669057,"line_start":713,"line_end":713,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":669062,"byte_end":669071,"line_start":714,"line_end":714,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6621},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":669783,"byte_end":669788,"line_start":739,"line_end":739,"column_start":12,"column_end":17},"name":"angle","qualname":"<Rotation3<N>>::angle","value":"pub fn angle(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle in [0; pi].","sig":null,"attributes":[{"value":"/ The rotation angle in [0; pi].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":669401,"byte_end":669435,"line_start":728,"line_end":728,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":669440,"byte_end":669443,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":669448,"byte_end":669461,"line_start":730,"line_end":730,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":669466,"byte_end":669473,"line_start":731,"line_end":731,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":669478,"byte_end":669517,"line_start":732,"line_end":732,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Unit, Rotation3, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":669522,"byte_end":669569,"line_start":733,"line_end":733,"column_start":5,"column_end":52}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":669574,"byte_end":669638,"line_start":734,"line_end":734,"column_start":5,"column_end":69}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, 1.78);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":669643,"byte_end":669697,"line_start":735,"line_end":735,"column_start":5,"column_end":59}},{"value":"/ assert_relative_eq!(rot.angle(), 1.78);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":669702,"byte_end":669745,"line_start":736,"line_end":736,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":669750,"byte_end":669757,"line_start":737,"line_end":737,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":669762,"byte_end":669771,"line_start":738,"line_end":738,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6622},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":670558,"byte_end":670562,"line_start":761,"line_end":761,"column_start":12,"column_end":16},"name":"axis","qualname":"<Rotation3<N>>::axis","value":"pub fn axis(&Self) -> Option<Unit<Vector3<N>>> where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis. Returns `None` if the rotation angle is zero or PI.","sig":null,"attributes":[{"value":"/ The rotation axis. Returns `None` if the rotation angle is zero or PI.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":669962,"byte_end":670036,"line_start":745,"line_end":745,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":670041,"byte_end":670044,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":670049,"byte_end":670062,"line_start":747,"line_end":747,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":670067,"byte_end":670074,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":670079,"byte_end":670118,"line_start":749,"line_end":749,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3, Unit};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":670123,"byte_end":670170,"line_start":750,"line_end":750,"column_start":5,"column_end":52}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":670175,"byte_end":670239,"line_start":751,"line_end":751,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":670244,"byte_end":670264,"line_start":752,"line_end":752,"column_start":5,"column_end":25}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, angle);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":670269,"byte_end":670324,"line_start":753,"line_end":753,"column_start":5,"column_end":60}},{"value":"/ assert_relative_eq!(rot.axis().unwrap(), axis);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":670329,"byte_end":670380,"line_start":754,"line_end":754,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":670385,"byte_end":670388,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ // Case with a zero angle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":670393,"byte_end":670423,"line_start":756,"line_end":756,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":670428,"byte_end":670481,"line_start":757,"line_end":757,"column_start":5,"column_end":58}},{"value":"/ assert!(rot.axis().is_none());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":670486,"byte_end":670520,"line_start":758,"line_end":758,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":670525,"byte_end":670532,"line_start":759,"line_end":759,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":670537,"byte_end":670546,"line_start":760,"line_end":760,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6623},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":671330,"byte_end":671341,"line_start":785,"line_end":785,"column_start":12,"column_end":23},"name":"scaled_axis","qualname":"<Rotation3<N>>::scaled_axis","value":"pub fn scaled_axis(&Self) -> Vector3<N> where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis multiplied by the rotation angle.","sig":null,"attributes":[{"value":"/ The rotation axis multiplied by the rotation angle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":670928,"byte_end":670983,"line_start":774,"line_end":774,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":670988,"byte_end":670991,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":670996,"byte_end":671009,"line_start":776,"line_end":776,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":671014,"byte_end":671021,"line_start":777,"line_end":777,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":671026,"byte_end":671065,"line_start":778,"line_end":778,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3, Unit};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":671070,"byte_end":671117,"line_start":779,"line_end":779,"column_start":5,"column_end":52}},{"value":"/ let axisangle = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":671122,"byte_end":671170,"line_start":780,"line_end":780,"column_start":5,"column_end":53}},{"value":"/ let rot = Rotation3::new(axisangle);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":671175,"byte_end":671215,"line_start":781,"line_end":781,"column_start":5,"column_end":45}},{"value":"/ assert_relative_eq!(rot.scaled_axis(), axisangle, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":671220,"byte_end":671292,"line_start":782,"line_end":782,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":671297,"byte_end":671304,"line_start":783,"line_end":783,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":671309,"byte_end":671318,"line_start":784,"line_end":784,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6624},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":672296,"byte_end":672306,"line_start":816,"line_end":816,"column_start":12,"column_end":22},"name":"axis_angle","qualname":"<Rotation3<N>>::axis_angle","value":"pub fn axis_angle(&Self) -> Option<(Unit<Vector3<N>>, N)> where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis and angle in ]0, pi] of this unit quaternion.","sig":null,"attributes":[{"value":"/ The rotation axis and angle in ]0, pi] of this unit quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":671553,"byte_end":671620,"line_start":796,"line_end":796,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":671625,"byte_end":671628,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the angle is zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":671633,"byte_end":671673,"line_start":798,"line_end":798,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":671678,"byte_end":671681,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":671686,"byte_end":671699,"line_start":800,"line_end":800,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":671704,"byte_end":671711,"line_start":801,"line_end":801,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":671716,"byte_end":671755,"line_start":802,"line_end":802,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3, Unit};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":671760,"byte_end":671807,"line_start":803,"line_end":803,"column_start":5,"column_end":52}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":671812,"byte_end":671876,"line_start":804,"line_end":804,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":671881,"byte_end":671901,"line_start":805,"line_end":805,"column_start":5,"column_end":25}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, angle);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":671906,"byte_end":671961,"line_start":806,"line_end":806,"column_start":5,"column_end":60}},{"value":"/ let axis_angle = rot.axis_angle().unwrap();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":671966,"byte_end":672013,"line_start":807,"line_end":807,"column_start":5,"column_end":52}},{"value":"/ assert_relative_eq!(axis_angle.0, axis);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":672018,"byte_end":672062,"line_start":808,"line_end":808,"column_start":5,"column_end":49}},{"value":"/ assert_relative_eq!(axis_angle.1, angle);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":672067,"byte_end":672112,"line_start":809,"line_end":809,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":672117,"byte_end":672120,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ // Case with a zero angle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":672125,"byte_end":672155,"line_start":811,"line_end":811,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":672160,"byte_end":672213,"line_start":812,"line_end":812,"column_start":5,"column_end":58}},{"value":"/ assert!(rot.axis_angle().is_none());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":672218,"byte_end":672258,"line_start":813,"line_end":813,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":672263,"byte_end":672270,"line_start":814,"line_end":814,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":672275,"byte_end":672284,"line_start":815,"line_end":815,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6625},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":672977,"byte_end":672985,"line_start":838,"line_end":838,"column_start":12,"column_end":20},"name":"angle_to","qualname":"<Rotation3<N>>::angle_to","value":"pub fn angle_to(&Self, &Self) -> N where N::Element: SimdRealField","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation angle needed to make `self` and `other` coincide.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":672521,"byte_end":672587,"line_start":827,"line_end":827,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":672592,"byte_end":672595,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":672600,"byte_end":672613,"line_start":829,"line_end":829,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":672618,"byte_end":672625,"line_start":830,"line_end":830,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":672630,"byte_end":672669,"line_start":831,"line_end":831,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":672674,"byte_end":672715,"line_start":832,"line_end":832,"column_start":5,"column_end":46}},{"value":"/ let rot1 = Rotation3::from_axis_angle(&Vector3::y_axis(), 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":672720,"byte_end":672787,"line_start":833,"line_end":833,"column_start":5,"column_end":72}},{"value":"/ let rot2 = Rotation3::from_axis_angle(&Vector3::x_axis(), 0.1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":672792,"byte_end":672859,"line_start":834,"line_end":834,"column_start":5,"column_end":72}},{"value":"/ assert_relative_eq!(rot1.angle_to(&rot2), 1.0045657, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":672864,"byte_end":672939,"line_start":835,"line_end":835,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":672944,"byte_end":672951,"line_start":836,"line_end":836,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":672956,"byte_end":672965,"line_start":837,"line_end":837,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6626},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":673309,"byte_end":673324,"line_start":849,"line_end":849,"column_start":12,"column_end":27},"name":"to_euler_angles","qualname":"<Rotation3<N>>::to_euler_angles","value":"pub fn to_euler_angles(&Self) -> (N, N, N) where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Creates Euler angles from a rotation.","sig":null,"attributes":[{"value":"/ Creates Euler angles from a rotation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":673114,"byte_end":673155,"line_start":845,"line_end":845,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":673160,"byte_end":673163,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ The angles are produced in the form (roll, pitch, yaw).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":673168,"byte_end":673227,"line_start":847,"line_end":847,"column_start":5,"column_end":64}},{"value":"deprecated(note = \"This is renamed to use `.euler_angles()`.\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":673232,"byte_end":673297,"line_start":848,"line_end":848,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":6627},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":673985,"byte_end":673997,"line_start":870,"line_end":870,"column_start":12,"column_end":24},"name":"euler_angles","qualname":"<Rotation3<N>>::euler_angles","value":"pub fn euler_angles(&Self) -> (N, N, N) where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Euler angles corresponding to this rotation from a rotation.","sig":null,"attributes":[{"value":"/ Euler angles corresponding to this rotation from a rotation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":673422,"byte_end":673486,"line_start":856,"line_end":856,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":673491,"byte_end":673494,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ The angles are produced in the form (roll, pitch, yaw).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":673499,"byte_end":673558,"line_start":858,"line_end":858,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":673563,"byte_end":673566,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":673571,"byte_end":673584,"line_start":860,"line_end":860,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":673589,"byte_end":673596,"line_start":861,"line_end":861,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":673601,"byte_end":673640,"line_start":862,"line_end":862,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":673645,"byte_end":673675,"line_start":863,"line_end":863,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation3::from_euler_angles(0.1, 0.2, 0.3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":673680,"byte_end":673738,"line_start":864,"line_end":864,"column_start":5,"column_end":63}},{"value":"/ let euler = rot.euler_angles();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":673743,"byte_end":673778,"line_start":865,"line_end":865,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(euler.0, 0.1, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":673783,"byte_end":673839,"line_start":866,"line_end":866,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.1, 0.2, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":673844,"byte_end":673900,"line_start":867,"line_end":867,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.2, 0.3, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":673905,"byte_end":673961,"line_start":868,"line_end":868,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":673966,"byte_end":673973,"line_start":869,"line_end":869,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":22351},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":677355,"byte_end":677365,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"Quaternion","qualname":"::geometry::quaternion::Quaternion","value":"Quaternion { coords }","parent":null,"children":[{"krate":0,"index":22353}],"decl_id":null,"docs":" A quaternion. See the type alias `UnitQuaternion = Unit<Quaternion>` for a quaternion\n that may be used as a rotation.\n","sig":null,"attributes":[{"value":"/ A quaternion. See the type alias `UnitQuaternion = Unit<Quaternion>` for a quaternion","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":677156,"byte_end":677245,"line_start":26,"line_end":26,"column_start":1,"column_end":90}},{"value":"/ that may be used as a rotation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":677246,"byte_end":677281,"line_start":27,"line_end":27,"column_start":1,"column_end":36}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":677282,"byte_end":677292,"line_start":28,"line_end":28,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":22353},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":677480,"byte_end":677486,"line_start":32,"line_end":32,"column_start":9,"column_end":15},"name":"coords","qualname":"::geometry::quaternion::Quaternion::coords","value":"base::matrix::Matrix<N, base::dimension::U4, base::dimension::U1, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, base::dimension::U4>>::Buffer>","parent":{"krate":0,"index":22351},"children":[],"decl_id":null,"docs":" This quaternion as a 4D vector of coordinates in the `[ x, y, z, w ]` storage order.\n","sig":null,"attributes":[{"value":"/ This quaternion as a 4D vector of coordinates in the `[ x, y, z, w ]` storage order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":677383,"byte_end":677471,"line_start":31,"line_end":31,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":6724},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":678987,"byte_end":678997,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<Quaternion<N>>::into_owned","value":"pub fn into_owned(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Moves this unit quaternion into one that owns its data.\n","sig":null,"attributes":[{"value":"/ Moves this unit quaternion into one that owns its data.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":678810,"byte_end":678869,"line_start":93,"line_end":93,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":678874,"byte_end":678883,"line_start":94,"line_end":94,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This method is a no-op and will be removed in a future release.\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":678888,"byte_end":678975,"line_start":95,"line_end":95,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":6725},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":679216,"byte_end":679227,"line_start":103,"line_end":103,"column_start":12,"column_end":23},"name":"clone_owned","qualname":"<Quaternion<N>>::clone_owned","value":"pub fn clone_owned(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Clones this unit quaternion into one that owns its data.\n","sig":null,"attributes":[{"value":"/ Clones this unit quaternion into one that owns its data.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":679038,"byte_end":679098,"line_start":100,"line_end":100,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":679103,"byte_end":679112,"line_start":101,"line_end":101,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This method is a no-op and will be removed in a future release.\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":679117,"byte_end":679204,"line_start":102,"line_end":102,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":6726},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":679689,"byte_end":679698,"line_start":119,"line_end":119,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Quaternion<N>>::normalize","value":"pub fn normalize(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this quaternion.","sig":null,"attributes":[{"value":"/ Normalizes this quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":679302,"byte_end":679333,"line_start":107,"line_end":107,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":679338,"byte_end":679341,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":679346,"byte_end":679359,"line_start":109,"line_end":109,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":679364,"byte_end":679371,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":679376,"byte_end":679415,"line_start":111,"line_end":111,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":679420,"byte_end":679451,"line_start":112,"line_end":112,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":679456,"byte_end":679504,"line_start":113,"line_end":113,"column_start":5,"column_end":53}},{"value":"/ let q_normalized = q.normalize();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":679509,"byte_end":679546,"line_start":114,"line_end":114,"column_start":5,"column_end":42}},{"value":"/ relative_eq!(q_normalized.norm(), 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":679551,"byte_end":679594,"line_start":115,"line_end":115,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":679599,"byte_end":679606,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":679611,"byte_end":679620,"line_start":117,"line_end":117,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use normalize_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":679625,"byte_end":679677,"line_start":118,"line_end":118,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":6727},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":679839,"byte_end":679843,"line_start":125,"line_end":125,"column_start":12,"column_end":16},"name":"imag","qualname":"<Quaternion<N>>::imag","value":"pub fn imag(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" The imaginary part of this quaternion.\n","sig":null,"attributes":[{"value":"/ The imaginary part of this quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":679771,"byte_end":679813,"line_start":123,"line_end":123,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":679818,"byte_end":679827,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6728},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":680283,"byte_end":680292,"line_start":140,"line_end":140,"column_start":12,"column_end":21},"name":"conjugate","qualname":"<Quaternion<N>>::conjugate","value":"pub fn conjugate(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The conjugate of this quaternion.","sig":null,"attributes":[{"value":"/ The conjugate of this quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":679904,"byte_end":679941,"line_start":129,"line_end":129,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":679946,"byte_end":679949,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":679954,"byte_end":679967,"line_start":131,"line_end":131,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":679972,"byte_end":679979,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":679984,"byte_end":680015,"line_start":133,"line_end":133,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":680020,"byte_end":680068,"line_start":134,"line_end":134,"column_start":5,"column_end":53}},{"value":"/ let conj = q.conjugate();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":680073,"byte_end":680102,"line_start":135,"line_end":135,"column_start":5,"column_end":34}},{"value":"/ assert!(conj.i == -2.0 && conj.j == -3.0 && conj.k == -4.0 && conj.w == 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":680107,"byte_end":680188,"line_start":136,"line_end":136,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":680193,"byte_end":680200,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":680205,"byte_end":680214,"line_start":138,"line_end":138,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use conjugate_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":680219,"byte_end":680271,"line_start":139,"line_end":139,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":6729},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":680779,"byte_end":680783,"line_start":157,"line_end":157,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Quaternion<N>>::lerp","value":"pub fn lerp(&Self, &Self, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linear interpolation between two quaternion.","sig":null,"attributes":[{"value":"/ Linear interpolation between two quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":680368,"byte_end":680416,"line_start":144,"line_end":144,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":680421,"byte_end":680424,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Computes `self * (1 - t) + other * t`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":680429,"byte_end":680471,"line_start":146,"line_end":146,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":680476,"byte_end":680479,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":680484,"byte_end":680497,"line_start":148,"line_end":148,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":680502,"byte_end":680509,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":680514,"byte_end":680545,"line_start":150,"line_end":150,"column_start":5,"column_end":36}},{"value":"/ let q1 = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":680550,"byte_end":680599,"line_start":151,"line_end":151,"column_start":5,"column_end":54}},{"value":"/ let q2 = Quaternion::new(10.0, 20.0, 30.0, 40.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":680604,"byte_end":680657,"line_start":152,"line_end":152,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":680662,"byte_end":680665,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(q1.lerp(&q2, 0.1), Quaternion::new(1.9, 3.8, 5.7, 7.6));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":680670,"byte_end":680741,"line_start":154,"line_end":154,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":680746,"byte_end":680753,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":680758,"byte_end":680767,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6730},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":681210,"byte_end":681216,"line_start":172,"line_end":172,"column_start":12,"column_end":18},"name":"vector","qualname":"<Quaternion<N>>::vector","value":"pub fn vector(&Self)\n-> MatrixSlice<, N, U3, U1, RStride<N, U4, U1>, CStride<N, U4, U1>>","parent":null,"children":[],"decl_id":null,"docs":" The vector part `(i, j, k)` of this quaternion.","sig":null,"attributes":[{"value":"/ The vector part `(i, j, k)` of this quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":680874,"byte_end":680925,"line_start":161,"line_end":161,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":680930,"byte_end":680933,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":680938,"byte_end":680951,"line_start":163,"line_end":163,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":680956,"byte_end":680963,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":680968,"byte_end":680999,"line_start":165,"line_end":165,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":681004,"byte_end":681052,"line_start":166,"line_end":166,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(q.vector()[0], 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":681057,"byte_end":681092,"line_start":167,"line_end":167,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(q.vector()[1], 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":681097,"byte_end":681132,"line_start":168,"line_end":168,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(q.vector()[2], 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":681137,"byte_end":681172,"line_start":169,"line_end":169,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":681177,"byte_end":681184,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":681189,"byte_end":681198,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6731},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":681588,"byte_end":681594,"line_start":185,"line_end":185,"column_start":12,"column_end":18},"name":"scalar","qualname":"<Quaternion<N>>::scalar","value":"pub fn scalar(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The scalar part `w` of this quaternion.","sig":null,"attributes":[{"value":"/ The scalar part `w` of this quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":681343,"byte_end":681386,"line_start":176,"line_end":176,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":681391,"byte_end":681394,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":681399,"byte_end":681412,"line_start":178,"line_end":178,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":681417,"byte_end":681424,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":681429,"byte_end":681460,"line_start":180,"line_end":180,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":681465,"byte_end":681513,"line_start":181,"line_end":181,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(q.scalar(), 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":681518,"byte_end":681550,"line_start":182,"line_end":182,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":681555,"byte_end":681562,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":681567,"byte_end":681576,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6732},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":682093,"byte_end":682102,"line_start":200,"line_end":200,"column_start":12,"column_end":21},"name":"as_vector","qualname":"<Quaternion<N>>::as_vector","value":"pub fn as_vector(&Self) -> &Vector4<N>","parent":null,"children":[],"decl_id":null,"docs":" Reinterprets this quaternion as a 4D vector.","sig":null,"attributes":[{"value":"/ Reinterprets this quaternion as a 4D vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":681643,"byte_end":681691,"line_start":189,"line_end":189,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":681696,"byte_end":681699,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":681704,"byte_end":681717,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":681722,"byte_end":681729,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector4, Quaternion};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":681734,"byte_end":681776,"line_start":193,"line_end":193,"column_start":5,"column_end":47}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":681781,"byte_end":681829,"line_start":194,"line_end":194,"column_start":5,"column_end":53}},{"value":"/ // Recall that the quaternion is stored internally as (i, j, k, w)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":681834,"byte_end":681904,"line_start":195,"line_end":195,"column_start":5,"column_end":75}},{"value":"/ // while the crate::new constructor takes the arguments as (w, i, j, k).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":681909,"byte_end":681985,"line_start":196,"line_end":196,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(*q.as_vector(), Vector4::new(2.0, 3.0, 4.0, 1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":681990,"byte_end":682055,"line_start":197,"line_end":197,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":682060,"byte_end":682067,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":682072,"byte_end":682081,"line_start":199,"line_end":199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6733},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":682469,"byte_end":682473,"line_start":214,"line_end":214,"column_start":12,"column_end":16},"name":"norm","qualname":"<Quaternion<N>>::norm","value":"pub fn norm(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The norm of this quaternion.","sig":null,"attributes":[{"value":"/ The norm of this quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":682159,"byte_end":682191,"line_start":204,"line_end":204,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":682196,"byte_end":682199,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":682204,"byte_end":682217,"line_start":206,"line_end":206,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":682222,"byte_end":682229,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":682234,"byte_end":682273,"line_start":208,"line_end":208,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":682278,"byte_end":682309,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":682314,"byte_end":682362,"line_start":210,"line_end":210,"column_start":5,"column_end":53}},{"value":"/ assert_relative_eq!(q.norm(), 5.47722557, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":682367,"byte_end":682431,"line_start":211,"line_end":211,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":682436,"byte_end":682443,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":682448,"byte_end":682457,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6734},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":682925,"byte_end":682934,"line_start":231,"line_end":231,"column_start":12,"column_end":21},"name":"magnitude","qualname":"<Quaternion<N>>::magnitude","value":"pub fn magnitude(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" A synonym for the norm of this quaternion.","sig":null,"attributes":[{"value":"/ A synonym for the norm of this quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":682526,"byte_end":682572,"line_start":218,"line_end":218,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":682577,"byte_end":682580,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Aka the length.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":682585,"byte_end":682604,"line_start":220,"line_end":220,"column_start":5,"column_end":24}},{"value":"/ This is the same as `.norm()`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":682609,"byte_end":682642,"line_start":221,"line_end":221,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":682647,"byte_end":682650,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":682655,"byte_end":682668,"line_start":223,"line_end":223,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":682673,"byte_end":682680,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":682685,"byte_end":682724,"line_start":225,"line_end":225,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":682729,"byte_end":682760,"line_start":226,"line_end":226,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":682765,"byte_end":682813,"line_start":227,"line_end":227,"column_start":5,"column_end":53}},{"value":"/ assert_relative_eq!(q.magnitude(), 5.47722557, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":682818,"byte_end":682887,"line_start":228,"line_end":228,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":682892,"byte_end":682899,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":682904,"byte_end":682913,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6735},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":683234,"byte_end":683246,"line_start":244,"line_end":244,"column_start":12,"column_end":24},"name":"norm_squared","qualname":"<Quaternion<N>>::norm_squared","value":"pub fn norm_squared(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The squared norm of this quaternion.","sig":null,"attributes":[{"value":"/ The squared norm of this quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":682980,"byte_end":683020,"line_start":235,"line_end":235,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":683025,"byte_end":683028,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":683033,"byte_end":683046,"line_start":237,"line_end":237,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":683051,"byte_end":683058,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":683063,"byte_end":683094,"line_start":239,"line_end":239,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":683099,"byte_end":683147,"line_start":240,"line_end":240,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(q.magnitude_squared(), 30.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":683152,"byte_end":683196,"line_start":241,"line_end":241,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":683201,"byte_end":683208,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":683213,"byte_end":683222,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6736},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":683661,"byte_end":683678,"line_start":260,"line_end":260,"column_start":12,"column_end":29},"name":"magnitude_squared","qualname":"<Quaternion<N>>::magnitude_squared","value":"pub fn magnitude_squared(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" A synonym for the squared norm of this quaternion.","sig":null,"attributes":[{"value":"/ A synonym for the squared norm of this quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":683307,"byte_end":683361,"line_start":248,"line_end":248,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":683366,"byte_end":683369,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Aka the squared length.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":683374,"byte_end":683401,"line_start":250,"line_end":250,"column_start":5,"column_end":32}},{"value":"/ This is the same as `.norm_squared()`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":683406,"byte_end":683447,"line_start":251,"line_end":251,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":683452,"byte_end":683455,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":683460,"byte_end":683473,"line_start":253,"line_end":253,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":683478,"byte_end":683485,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":683490,"byte_end":683521,"line_start":255,"line_end":255,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":683526,"byte_end":683574,"line_start":256,"line_end":256,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(q.magnitude_squared(), 30.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":683579,"byte_end":683623,"line_start":257,"line_end":257,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":683628,"byte_end":683635,"line_start":258,"line_end":258,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":683640,"byte_end":683649,"line_start":259,"line_end":259,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6737},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":684030,"byte_end":684033,"line_start":274,"line_end":274,"column_start":12,"column_end":15},"name":"dot","qualname":"<Quaternion<N>>::dot","value":"pub fn dot(&Self, &Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The dot product of two quaternions.","sig":null,"attributes":[{"value":"/ The dot product of two quaternions.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":683732,"byte_end":683771,"line_start":264,"line_end":264,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":683776,"byte_end":683779,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":683784,"byte_end":683797,"line_start":266,"line_end":266,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":683802,"byte_end":683809,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":683814,"byte_end":683845,"line_start":268,"line_end":268,"column_start":5,"column_end":36}},{"value":"/ let q1 = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":683850,"byte_end":683899,"line_start":269,"line_end":269,"column_start":5,"column_end":54}},{"value":"/ let q2 = Quaternion::new(5.0, 6.0, 7.0, 8.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":683904,"byte_end":683953,"line_start":270,"line_end":270,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(q1.dot(&q2), 70.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":683958,"byte_end":683992,"line_start":271,"line_end":271,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":683997,"byte_end":684004,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":684009,"byte_end":684018,"line_start":273,"line_end":273,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6740},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":684925,"byte_end":684936,"line_start":305,"line_end":305,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<Quaternion<N>>::try_inverse","value":"pub fn try_inverse(&Self) -> Option<Self> where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Inverts this quaternion if it is not zero.","sig":null,"attributes":[{"value":"/ Inverts this quaternion if it is not zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":684186,"byte_end":684232,"line_start":283,"line_end":283,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":684237,"byte_end":684240,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ This method also does not works with SIMD components (see `simd_try_inverse` instead).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":684245,"byte_end":684335,"line_start":285,"line_end":285,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":684340,"byte_end":684343,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":684348,"byte_end":684361,"line_start":287,"line_end":287,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":684366,"byte_end":684373,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":684378,"byte_end":684417,"line_start":289,"line_end":289,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":684422,"byte_end":684453,"line_start":290,"line_end":290,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":684458,"byte_end":684506,"line_start":291,"line_end":291,"column_start":5,"column_end":53}},{"value":"/ let inv_q = q.try_inverse();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":684511,"byte_end":684543,"line_start":292,"line_end":292,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":684548,"byte_end":684551,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ assert!(inv_q.is_some());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":684556,"byte_end":684585,"line_start":294,"line_end":294,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(inv_q.unwrap() * q, Quaternion::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":684590,"byte_end":684658,"line_start":295,"line_end":295,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":684663,"byte_end":684666,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ //Non-invertible case","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":684671,"byte_end":684696,"line_start":297,"line_end":297,"column_start":5,"column_end":30}},{"value":"/ let q = Quaternion::new(0.0, 0.0, 0.0, 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":684701,"byte_end":684749,"line_start":298,"line_end":298,"column_start":5,"column_end":53}},{"value":"/ let inv_q = q.try_inverse();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":684754,"byte_end":684786,"line_start":299,"line_end":299,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":684791,"byte_end":684794,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ assert!(inv_q.is_none());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":684799,"byte_end":684828,"line_start":301,"line_end":301,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":684833,"byte_end":684840,"line_start":302,"line_end":302,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":684845,"byte_end":684854,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use try_inverse_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":684859,"byte_end":684913,"line_start":304,"line_end":304,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6741},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":685325,"byte_end":685341,"line_start":323,"line_end":323,"column_start":12,"column_end":28},"name":"simd_try_inverse","qualname":"<Quaternion<N>>::simd_try_inverse","value":"pub fn simd_try_inverse(&Self) -> SimdOption<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to inverse this quaternion.","sig":null,"attributes":[{"value":"/ Attempt to inverse this quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":685140,"byte_end":685179,"line_start":318,"line_end":318,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":685184,"byte_end":685187,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ This method also works with SIMD components.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":685192,"byte_end":685240,"line_start":320,"line_end":320,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":685245,"byte_end":685254,"line_start":321,"line_end":321,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use try_inverse_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":685259,"byte_end":685313,"line_start":322,"line_end":322,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6742},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":686142,"byte_end":686147,"line_start":343,"line_end":343,"column_start":12,"column_end":17},"name":"inner","qualname":"<Quaternion<N>>::inner","value":"pub fn inner(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the inner product (also known as the dot product).\n See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel\n Formula 4.89.","sig":null,"attributes":[{"value":"/ Calculates the inner product (also known as the dot product).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":685557,"byte_end":685622,"line_start":329,"line_end":329,"column_start":5,"column_end":70}},{"value":"/ See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":685627,"byte_end":685709,"line_start":330,"line_end":330,"column_start":5,"column_end":87}},{"value":"/ Formula 4.89.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":685714,"byte_end":685731,"line_start":331,"line_end":331,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":685736,"byte_end":685739,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":685744,"byte_end":685757,"line_start":333,"line_end":333,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":685762,"byte_end":685769,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":685774,"byte_end":685813,"line_start":335,"line_end":335,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":685818,"byte_end":685849,"line_start":336,"line_end":336,"column_start":5,"column_end":36}},{"value":"/ let a = Quaternion::new(0.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":685854,"byte_end":685902,"line_start":337,"line_end":337,"column_start":5,"column_end":53}},{"value":"/ let b = Quaternion::new(0.0, 5.0, 2.0, 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":685907,"byte_end":685955,"line_start":338,"line_end":338,"column_start":5,"column_end":53}},{"value":"/ let expected = Quaternion::new(-20.0, 0.0, 0.0, 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":685960,"byte_end":686017,"line_start":339,"line_end":339,"column_start":5,"column_end":62}},{"value":"/ let result = a.inner(&b);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":686022,"byte_end":686051,"line_start":340,"line_end":340,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-5);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":686056,"byte_end":686116,"line_start":341,"line_end":341,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":686121,"byte_end":686130,"line_start":342,"line_end":342,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6743},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":686836,"byte_end":686841,"line_start":362,"line_end":362,"column_start":12,"column_end":17},"name":"outer","qualname":"<Quaternion<N>>::outer","value":"pub fn outer(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the outer product (also known as the wedge product).\n See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel\n Formula 4.89.","sig":null,"attributes":[{"value":"/ Calculates the outer product (also known as the wedge product).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":686235,"byte_end":686302,"line_start":347,"line_end":347,"column_start":5,"column_end":72}},{"value":"/ See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":686307,"byte_end":686389,"line_start":348,"line_end":348,"column_start":5,"column_end":87}},{"value":"/ Formula 4.89.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":686394,"byte_end":686411,"line_start":349,"line_end":349,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":686416,"byte_end":686419,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":686424,"byte_end":686437,"line_start":351,"line_end":351,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":686442,"byte_end":686449,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":686454,"byte_end":686493,"line_start":353,"line_end":353,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":686498,"byte_end":686529,"line_start":354,"line_end":354,"column_start":5,"column_end":36}},{"value":"/ let a = Quaternion::new(0.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":686534,"byte_end":686582,"line_start":355,"line_end":355,"column_start":5,"column_end":53}},{"value":"/ let b = Quaternion::new(0.0, 5.0, 2.0, 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":686587,"byte_end":686635,"line_start":356,"line_end":356,"column_start":5,"column_end":53}},{"value":"/ let expected = Quaternion::new(0.0, -5.0, 18.0, -11.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":686640,"byte_end":686699,"line_start":357,"line_end":357,"column_start":5,"column_end":64}},{"value":"/ let result = a.outer(&b);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":686704,"byte_end":686733,"line_start":358,"line_end":358,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-5);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":686738,"byte_end":686798,"line_start":359,"line_end":359,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":686803,"byte_end":686810,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":686815,"byte_end":686824,"line_start":361,"line_end":361,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6744},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":687628,"byte_end":687635,"line_start":382,"line_end":382,"column_start":12,"column_end":19},"name":"project","qualname":"<Quaternion<N>>::project","value":"pub fn project(&Self, &Self) -> Option<Self> where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Calculates the projection of `self` onto `other` (also known as the parallel).\n See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel\n Formula 4.94.","sig":null,"attributes":[{"value":"/ Calculates the projection of `self` onto `other` (also known as the parallel).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":686961,"byte_end":687043,"line_start":367,"line_end":367,"column_start":5,"column_end":87}},{"value":"/ See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":687048,"byte_end":687130,"line_start":368,"line_end":368,"column_start":5,"column_end":87}},{"value":"/ Formula 4.94.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":687135,"byte_end":687152,"line_start":369,"line_end":369,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":687157,"byte_end":687160,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":687165,"byte_end":687178,"line_start":371,"line_end":371,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":687183,"byte_end":687190,"line_start":372,"line_end":372,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":687195,"byte_end":687234,"line_start":373,"line_end":373,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":687239,"byte_end":687270,"line_start":374,"line_end":374,"column_start":5,"column_end":36}},{"value":"/ let a = Quaternion::new(0.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":687275,"byte_end":687323,"line_start":375,"line_end":375,"column_start":5,"column_end":53}},{"value":"/ let b = Quaternion::new(0.0, 5.0, 2.0, 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":687328,"byte_end":687376,"line_start":376,"line_end":376,"column_start":5,"column_end":53}},{"value":"/ let expected = Quaternion::new(0.0, 3.333333333333333, 1.3333333333333333, 0.6666666666666666);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":687381,"byte_end":687480,"line_start":377,"line_end":377,"column_start":5,"column_end":104}},{"value":"/ let result = a.project(&b).unwrap();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":687485,"byte_end":687525,"line_start":378,"line_end":378,"column_start":5,"column_end":45}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-5);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":687530,"byte_end":687590,"line_start":379,"line_end":379,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":687595,"byte_end":687602,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":687607,"byte_end":687616,"line_start":381,"line_end":381,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6745},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":688437,"byte_end":688443,"line_start":404,"line_end":404,"column_start":12,"column_end":18},"name":"reject","qualname":"<Quaternion<N>>::reject","value":"pub fn reject(&Self, &Self) -> Option<Self> where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Calculates the rejection of `self` from `other` (also known as the perpendicular).\n See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel\n Formula 4.94.","sig":null,"attributes":[{"value":"/ Calculates the rejection of `self` from `other` (also known as the perpendicular).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":687765,"byte_end":687851,"line_start":389,"line_end":389,"column_start":5,"column_end":91}},{"value":"/ See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":687856,"byte_end":687938,"line_start":390,"line_end":390,"column_start":5,"column_end":87}},{"value":"/ Formula 4.94.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":687943,"byte_end":687960,"line_start":391,"line_end":391,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":687965,"byte_end":687968,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":687973,"byte_end":687986,"line_start":393,"line_end":393,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":687991,"byte_end":687998,"line_start":394,"line_end":394,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":688003,"byte_end":688042,"line_start":395,"line_end":395,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":688047,"byte_end":688078,"line_start":396,"line_end":396,"column_start":5,"column_end":36}},{"value":"/ let a = Quaternion::new(0.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":688083,"byte_end":688131,"line_start":397,"line_end":397,"column_start":5,"column_end":53}},{"value":"/ let b = Quaternion::new(0.0, 5.0, 2.0, 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":688136,"byte_end":688184,"line_start":398,"line_end":398,"column_start":5,"column_end":53}},{"value":"/ let expected = Quaternion::new(0.0, -1.3333333333333333, 1.6666666666666665, 3.3333333333333335);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":688189,"byte_end":688290,"line_start":399,"line_end":399,"column_start":5,"column_end":106}},{"value":"/ let result = a.reject(&b).unwrap();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":688295,"byte_end":688334,"line_start":400,"line_end":400,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-5);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":688339,"byte_end":688399,"line_start":401,"line_end":401,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":688404,"byte_end":688411,"line_start":402,"line_end":402,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":688416,"byte_end":688425,"line_start":403,"line_end":403,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6746},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":689189,"byte_end":689208,"line_start":426,"line_end":426,"column_start":12,"column_end":31},"name":"polar_decomposition","qualname":"<Quaternion<N>>::polar_decomposition","value":"pub fn polar_decomposition(&Self) -> (N, N, Option<Unit<Vector3<N>>>) where\nN: RealField","parent":null,"children":[],"decl_id":null,"docs":" The polar decomposition of this quaternion.","sig":null,"attributes":[{"value":"/ The polar decomposition of this quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":688573,"byte_end":688620,"line_start":411,"line_end":411,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":688625,"byte_end":688628,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ Returns, from left to right: the quaternion norm, the half rotation angle, the rotation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":688633,"byte_end":688724,"line_start":413,"line_end":413,"column_start":5,"column_end":96}},{"value":"/ axis. If the rotation angle is zero, the rotation axis is set to `None`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":688729,"byte_end":688805,"line_start":414,"line_end":414,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":688810,"byte_end":688813,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":688818,"byte_end":688831,"line_start":416,"line_end":416,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":688836,"byte_end":688843,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":688848,"byte_end":688867,"line_start":418,"line_end":418,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Vector3, Quaternion};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":688872,"byte_end":688914,"line_start":419,"line_end":419,"column_start":5,"column_end":47}},{"value":"/ let q = Quaternion::new(0.0, 5.0, 0.0, 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":688919,"byte_end":688967,"line_start":420,"line_end":420,"column_start":5,"column_end":53}},{"value":"/ let (norm, half_ang, axis) = q.polar_decomposition();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":688972,"byte_end":689029,"line_start":421,"line_end":421,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(norm, 5.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":689034,"byte_end":689060,"line_start":422,"line_end":422,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(half_ang, f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":689065,"byte_end":689114,"line_start":423,"line_end":423,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(axis, Some(Vector3::x_axis()));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":689119,"byte_end":689165,"line_start":424,"line_end":424,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":689170,"byte_end":689177,"line_start":425,"line_end":425,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6747},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":690065,"byte_end":690067,"line_start":453,"line_end":453,"column_start":12,"column_end":14},"name":"ln","qualname":"<Quaternion<N>>::ln","value":"pub fn ln(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compute the natural logarithm of a quaternion.","sig":null,"attributes":[{"value":"/ Compute the natural logarithm of a quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":689705,"byte_end":689755,"line_start":443,"line_end":443,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":689760,"byte_end":689763,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":689768,"byte_end":689781,"line_start":445,"line_end":445,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":689786,"byte_end":689793,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":689798,"byte_end":689837,"line_start":447,"line_end":447,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":689842,"byte_end":689873,"line_start":448,"line_end":448,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(2.0, 5.0, 0.0, 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":689878,"byte_end":689926,"line_start":449,"line_end":449,"column_start":5,"column_end":53}},{"value":"/ assert_relative_eq!(q.ln(), Quaternion::new(1.683647, 1.190289, 0.0, 0.0), epsilon = 1.0e-6)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":689931,"byte_end":690027,"line_start":450,"line_end":450,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":690032,"byte_end":690039,"line_start":451,"line_end":451,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":690044,"byte_end":690053,"line_start":452,"line_end":452,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6748},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":690618,"byte_end":690621,"line_start":471,"line_end":471,"column_start":12,"column_end":15},"name":"exp","qualname":"<Quaternion<N>>::exp","value":"pub fn exp(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compute the exponential of a quaternion.","sig":null,"attributes":[{"value":"/ Compute the exponential of a quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":690263,"byte_end":690307,"line_start":461,"line_end":461,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":690312,"byte_end":690315,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":690320,"byte_end":690333,"line_start":463,"line_end":463,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":690338,"byte_end":690345,"line_start":464,"line_end":464,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":690350,"byte_end":690389,"line_start":465,"line_end":465,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":690394,"byte_end":690425,"line_start":466,"line_end":466,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.683647, 1.190289, 0.0, 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":690430,"byte_end":690488,"line_start":467,"line_end":467,"column_start":5,"column_end":63}},{"value":"/ assert_relative_eq!(q.exp(), Quaternion::new(2.0, 5.0, 0.0, 0.0), epsilon = 1.0e-5)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":690493,"byte_end":690580,"line_start":468,"line_end":468,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":690585,"byte_end":690592,"line_start":469,"line_end":469,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":690597,"byte_end":690606,"line_start":470,"line_end":470,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6749},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":691318,"byte_end":691325,"line_start":490,"line_end":490,"column_start":12,"column_end":19},"name":"exp_eps","qualname":"<Quaternion<N>>::exp_eps","value":"pub fn exp_eps(&Self, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compute the exponential of a quaternion. Returns the identity if the vector part of this quaternion\n has a norm smaller than `eps`.","sig":null,"attributes":[{"value":"/ Compute the exponential of a quaternion. Returns the identity if the vector part of this quaternion","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":690698,"byte_end":690801,"line_start":475,"line_end":475,"column_start":5,"column_end":108}},{"value":"/ has a norm smaller than `eps`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":690806,"byte_end":690840,"line_start":476,"line_end":476,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":690845,"byte_end":690848,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":690853,"byte_end":690866,"line_start":478,"line_end":478,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":690871,"byte_end":690878,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":690883,"byte_end":690922,"line_start":480,"line_end":480,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":690927,"byte_end":690958,"line_start":481,"line_end":481,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.683647, 1.190289, 0.0, 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":690963,"byte_end":691021,"line_start":482,"line_end":482,"column_start":5,"column_end":63}},{"value":"/ assert_relative_eq!(q.exp_eps(1.0e-6), Quaternion::new(2.0, 5.0, 0.0, 0.0), epsilon = 1.0e-5);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":691026,"byte_end":691124,"line_start":483,"line_end":483,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":691129,"byte_end":691132,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ // Singular case.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":691137,"byte_end":691158,"line_start":485,"line_end":485,"column_start":5,"column_end":26}},{"value":"/ let q = Quaternion::new(0.0000001, 0.0, 0.0, 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":691163,"byte_end":691217,"line_start":486,"line_end":486,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(q.exp_eps(1.0e-6), Quaternion::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":691222,"byte_end":691280,"line_start":487,"line_end":487,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":691285,"byte_end":691292,"line_start":488,"line_end":488,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":691297,"byte_end":691306,"line_start":489,"line_end":489,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6751},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":692097,"byte_end":692101,"line_start":513,"line_end":513,"column_start":12,"column_end":16},"name":"powf","qualname":"<Quaternion<N>>::powf","value":"pub fn powf(&Self, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Raise the quaternion to a given floating power.","sig":null,"attributes":[{"value":"/ Raise the quaternion to a given floating power.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":691714,"byte_end":691765,"line_start":503,"line_end":503,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":691770,"byte_end":691773,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":691778,"byte_end":691791,"line_start":505,"line_end":505,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":691796,"byte_end":691803,"line_start":506,"line_end":506,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":691808,"byte_end":691847,"line_start":507,"line_end":507,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":691852,"byte_end":691883,"line_start":508,"line_end":508,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":691888,"byte_end":691936,"line_start":509,"line_end":509,"column_start":5,"column_end":53}},{"value":"/ assert_relative_eq!(q.powf(1.5), Quaternion::new( -6.2576659, 4.1549037, 6.2323556, 8.3098075), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":691941,"byte_end":692059,"line_start":510,"line_end":510,"column_start":5,"column_end":123}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":692064,"byte_end":692071,"line_start":511,"line_end":511,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":692076,"byte_end":692085,"line_start":512,"line_end":512,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6752},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":692549,"byte_end":692562,"line_start":527,"line_end":527,"column_start":12,"column_end":25},"name":"as_vector_mut","qualname":"<Quaternion<N>>::as_vector_mut","value":"pub fn as_vector_mut(&mut Self) -> &mut Vector4<N>","parent":null,"children":[],"decl_id":null,"docs":" Transforms this quaternion into its 4D vector form (Vector part, Scalar part).","sig":null,"attributes":[{"value":"/ Transforms this quaternion into its 4D vector form (Vector part, Scalar part).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":692166,"byte_end":692248,"line_start":517,"line_end":517,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":692253,"byte_end":692256,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":692261,"byte_end":692274,"line_start":519,"line_end":519,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":692279,"byte_end":692286,"line_start":520,"line_end":520,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Quaternion, Vector4};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":692291,"byte_end":692333,"line_start":521,"line_end":521,"column_start":5,"column_end":47}},{"value":"/ let mut q = Quaternion::identity();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":692338,"byte_end":692377,"line_start":522,"line_end":522,"column_start":5,"column_end":44}},{"value":"/ *q.as_vector_mut() = Vector4::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":692382,"byte_end":692440,"line_start":523,"line_end":523,"column_start":5,"column_end":63}},{"value":"/ assert!(q.i == 1.0 && q.j == 2.0 && q.k == 3.0 && q.w == 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":692445,"byte_end":692511,"line_start":524,"line_end":524,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":692516,"byte_end":692523,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":692528,"byte_end":692537,"line_start":526,"line_end":526,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6753},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":693060,"byte_end":693070,"line_start":546,"line_end":546,"column_start":12,"column_end":22},"name":"vector_mut","qualname":"<Quaternion<N>>::vector_mut","value":"pub fn vector_mut(&mut Self)\n-> MatrixSliceMut<, N, U3, U1, RStride<N, U4, U1>, CStride<N, U4, U1>>","parent":null,"children":[],"decl_id":null,"docs":" The mutable vector part `(i, j, k)` of this quaternion.","sig":null,"attributes":[{"value":"/ The mutable vector part `(i, j, k)` of this quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":692631,"byte_end":692690,"line_start":531,"line_end":531,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":692695,"byte_end":692698,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":692703,"byte_end":692716,"line_start":533,"line_end":533,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":692721,"byte_end":692728,"line_start":534,"line_end":534,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Quaternion, Vector4};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":692733,"byte_end":692775,"line_start":535,"line_end":535,"column_start":5,"column_end":47}},{"value":"/ let mut q = Quaternion::identity();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":692780,"byte_end":692819,"line_start":536,"line_end":536,"column_start":5,"column_end":44}},{"value":"/ {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":692824,"byte_end":692829,"line_start":537,"line_end":537,"column_start":5,"column_end":10}},{"value":"/     let mut v = q.vector_mut();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":692834,"byte_end":692869,"line_start":538,"line_end":538,"column_start":5,"column_end":40}},{"value":"/     v[0] = 2.0;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":692874,"byte_end":692893,"line_start":539,"line_end":539,"column_start":5,"column_end":24}},{"value":"/     v[1] = 3.0;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":692898,"byte_end":692917,"line_start":540,"line_end":540,"column_start":5,"column_end":24}},{"value":"/     v[2] = 4.0;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":692922,"byte_end":692941,"line_start":541,"line_end":541,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":692946,"byte_end":692951,"line_start":542,"line_end":542,"column_start":5,"column_end":10}},{"value":"/ assert!(q.i == 2.0 && q.j == 3.0 && q.k == 4.0 && q.w == 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":692956,"byte_end":693022,"line_start":543,"line_end":543,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":693027,"byte_end":693034,"line_start":544,"line_end":544,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":693039,"byte_end":693048,"line_start":545,"line_end":545,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6754},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":693539,"byte_end":693552,"line_start":562,"line_end":562,"column_start":12,"column_end":25},"name":"conjugate_mut","qualname":"<Quaternion<N>>::conjugate_mut","value":"pub fn conjugate_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Replaces this quaternion by its conjugate.","sig":null,"attributes":[{"value":"/ Replaces this quaternion by its conjugate.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":693223,"byte_end":693269,"line_start":552,"line_end":552,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":693274,"byte_end":693277,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":693282,"byte_end":693295,"line_start":554,"line_end":554,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":693300,"byte_end":693307,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":693312,"byte_end":693343,"line_start":556,"line_end":556,"column_start":5,"column_end":36}},{"value":"/ let mut q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":693348,"byte_end":693400,"line_start":557,"line_end":557,"column_start":5,"column_end":57}},{"value":"/ q.conjugate_mut();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":693405,"byte_end":693427,"line_start":558,"line_end":558,"column_start":5,"column_end":27}},{"value":"/ assert!(q.i == -2.0 && q.j == -3.0 && q.k == -4.0 && q.w == 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":693432,"byte_end":693501,"line_start":559,"line_end":559,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":693506,"byte_end":693513,"line_start":560,"line_end":560,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":693518,"byte_end":693527,"line_start":561,"line_end":561,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6755},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":694251,"byte_end":694266,"line_start":584,"line_end":584,"column_start":12,"column_end":27},"name":"try_inverse_mut","qualname":"<Quaternion<N>>::try_inverse_mut","value":"pub fn try_inverse_mut(&mut Self) -> N::SimdBool","parent":null,"children":[],"decl_id":null,"docs":" Inverts this quaternion in-place if it is not zero.","sig":null,"attributes":[{"value":"/ Inverts this quaternion in-place if it is not zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":693703,"byte_end":693758,"line_start":568,"line_end":568,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":693763,"byte_end":693766,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":693771,"byte_end":693784,"line_start":570,"line_end":570,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":693789,"byte_end":693796,"line_start":571,"line_end":571,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":693801,"byte_end":693840,"line_start":572,"line_end":572,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":693845,"byte_end":693876,"line_start":573,"line_end":573,"column_start":5,"column_end":36}},{"value":"/ let mut q = Quaternion::new(1.0f32, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":693881,"byte_end":693936,"line_start":574,"line_end":574,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":693941,"byte_end":693944,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ assert!(q.try_inverse_mut());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":693949,"byte_end":693982,"line_start":576,"line_end":576,"column_start":5,"column_end":38}},{"value":"/ assert_relative_eq!(q * Quaternion::new(1.0, 2.0, 3.0, 4.0), Quaternion::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":693987,"byte_end":694076,"line_start":577,"line_end":577,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":694081,"byte_end":694084,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ //Non-invertible case","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":694089,"byte_end":694114,"line_start":579,"line_end":579,"column_start":5,"column_end":30}},{"value":"/ let mut q = Quaternion::new(0.0f32, 0.0, 0.0, 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":694119,"byte_end":694174,"line_start":580,"line_end":580,"column_start":5,"column_end":60}},{"value":"/ assert!(!q.try_inverse_mut());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":694179,"byte_end":694213,"line_start":581,"line_end":581,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":694218,"byte_end":694225,"line_start":582,"line_end":582,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":694230,"byte_end":694239,"line_start":583,"line_end":583,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6758},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":694820,"byte_end":694833,"line_start":602,"line_end":602,"column_start":12,"column_end":25},"name":"normalize_mut","qualname":"<Quaternion<N>>::normalize_mut","value":"pub fn normalize_mut(&mut Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this quaternion.","sig":null,"attributes":[{"value":"/ Normalizes this quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":694505,"byte_end":694536,"line_start":591,"line_end":591,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":694541,"byte_end":694544,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":694549,"byte_end":694562,"line_start":593,"line_end":593,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":694567,"byte_end":694574,"line_start":594,"line_end":594,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":694579,"byte_end":694618,"line_start":595,"line_end":595,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":694623,"byte_end":694654,"line_start":596,"line_end":596,"column_start":5,"column_end":36}},{"value":"/ let mut q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":694659,"byte_end":694711,"line_start":597,"line_end":597,"column_start":5,"column_end":57}},{"value":"/ q.normalize_mut();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":694716,"byte_end":694738,"line_start":598,"line_end":598,"column_start":5,"column_end":27}},{"value":"/ assert_relative_eq!(q.norm(), 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":694743,"byte_end":694782,"line_start":599,"line_end":599,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":694787,"byte_end":694794,"line_start":600,"line_end":600,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":694799,"byte_end":694808,"line_start":601,"line_end":601,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6759},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":694963,"byte_end":694970,"line_start":608,"line_end":608,"column_start":12,"column_end":19},"name":"squared","qualname":"<Quaternion<N>>::squared","value":"pub fn squared(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates square of a quaternion.\n","sig":null,"attributes":[{"value":"/ Calculates square of a quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":694899,"byte_end":694937,"line_start":606,"line_end":606,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":694942,"byte_end":694951,"line_start":607,"line_end":607,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6760},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":695077,"byte_end":695081,"line_start":614,"line_end":614,"column_start":12,"column_end":16},"name":"half","qualname":"<Quaternion<N>>::half","value":"pub fn half(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Divides quaternion into two.\n","sig":null,"attributes":[{"value":"/ Divides quaternion into two.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":695019,"byte_end":695051,"line_start":612,"line_end":612,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":695056,"byte_end":695065,"line_start":613,"line_end":613,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6761},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":695201,"byte_end":695205,"line_start":620,"line_end":620,"column_start":12,"column_end":16},"name":"sqrt","qualname":"<Quaternion<N>>::sqrt","value":"pub fn sqrt(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates square root.\n","sig":null,"attributes":[{"value":"/ Calculates square root.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":695148,"byte_end":695175,"line_start":618,"line_end":618,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":695180,"byte_end":695189,"line_start":619,"line_end":619,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6762},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":695414,"byte_end":695421,"line_start":628,"line_end":628,"column_start":12,"column_end":19},"name":"is_pure","qualname":"<Quaternion<N>>::is_pure","value":"pub fn is_pure(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the quaternion is pure.","sig":null,"attributes":[{"value":"/ Check if the quaternion is pure.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":695273,"byte_end":695309,"line_start":624,"line_end":624,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":695314,"byte_end":695317,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ A quaternion is pure if it has no real part (`self.w == 0.0`).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":695322,"byte_end":695388,"line_start":626,"line_end":626,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":695393,"byte_end":695402,"line_start":627,"line_end":627,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6763},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":695543,"byte_end":695547,"line_start":634,"line_end":634,"column_start":12,"column_end":16},"name":"pure","qualname":"<Quaternion<N>>::pure","value":"pub fn pure(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert quaternion to pure quaternion.\n","sig":null,"attributes":[{"value":"/ Convert quaternion to pure quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":695475,"byte_end":695517,"line_start":632,"line_end":632,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":695522,"byte_end":695531,"line_start":633,"line_end":633,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6764},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":695743,"byte_end":695751,"line_start":642,"line_end":642,"column_start":12,"column_end":20},"name":"left_div","qualname":"<Quaternion<N>>::left_div","value":"pub fn left_div(&Self, &Self) -> Option<Self> where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Left quaternionic division.","sig":null,"attributes":[{"value":"/ Left quaternionic division.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":695613,"byte_end":695644,"line_start":638,"line_end":638,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":695649,"byte_end":695652,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ Calculates B<sup>-1</sup> * A where A = self, B = other.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":695657,"byte_end":695717,"line_start":640,"line_end":640,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":695722,"byte_end":695731,"line_start":641,"line_end":641,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6766},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":696475,"byte_end":696484,"line_start":664,"line_end":664,"column_start":12,"column_end":21},"name":"right_div","qualname":"<Quaternion<N>>::right_div","value":"pub fn right_div(&Self, &Self) -> Option<Self> where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Right quaternionic division.","sig":null,"attributes":[{"value":"/ Right quaternionic division.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":695888,"byte_end":695920,"line_start":649,"line_end":649,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":695925,"byte_end":695928,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ Calculates A * B<sup>-1</sup> where A = self, B = other.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":695933,"byte_end":695993,"line_start":651,"line_end":651,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":695998,"byte_end":696001,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":696006,"byte_end":696019,"line_start":653,"line_end":653,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":696024,"byte_end":696031,"line_start":654,"line_end":654,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":696036,"byte_end":696075,"line_start":655,"line_end":655,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":696080,"byte_end":696111,"line_start":656,"line_end":656,"column_start":5,"column_end":36}},{"value":"/ let a = Quaternion::new(0.0, 1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":696116,"byte_end":696164,"line_start":657,"line_end":657,"column_start":5,"column_end":53}},{"value":"/ let b = Quaternion::new(0.0, 5.0, 2.0, 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":696169,"byte_end":696217,"line_start":658,"line_end":658,"column_start":5,"column_end":53}},{"value":"/ let result = a.right_div(&b).unwrap();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":696222,"byte_end":696264,"line_start":659,"line_end":659,"column_start":5,"column_end":47}},{"value":"/ let expected = Quaternion::new(0.4, 0.13333333333333336, -0.4666666666666667, 0.26666666666666666);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":696269,"byte_end":696372,"line_start":660,"line_end":660,"column_start":5,"column_end":108}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":696377,"byte_end":696437,"line_start":661,"line_end":661,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":696442,"byte_end":696449,"line_start":662,"line_end":662,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":696454,"byte_end":696463,"line_start":663,"line_end":663,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6768},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":697092,"byte_end":697095,"line_start":683,"line_end":683,"column_start":12,"column_end":15},"name":"cos","qualname":"<Quaternion<N>>::cos","value":"pub fn cos(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic cosinus.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic cosinus.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":696621,"byte_end":696661,"line_start":671,"line_end":671,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":696666,"byte_end":696669,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":696674,"byte_end":696687,"line_start":673,"line_end":673,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":696692,"byte_end":696699,"line_start":674,"line_end":674,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":696704,"byte_end":696743,"line_start":675,"line_end":675,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":696748,"byte_end":696779,"line_start":676,"line_end":676,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":696784,"byte_end":696836,"line_start":677,"line_end":677,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(58.93364616794395, -34.086183690465596, -51.1292755356984, -68.17236738093119);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":696841,"byte_end":696955,"line_start":678,"line_end":678,"column_start":5,"column_end":119}},{"value":"/ let result = input.cos();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":696960,"byte_end":696989,"line_start":679,"line_end":679,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":696994,"byte_end":697054,"line_start":680,"line_end":680,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":697059,"byte_end":697066,"line_start":681,"line_end":681,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":697071,"byte_end":697080,"line_start":682,"line_end":682,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6769},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":697654,"byte_end":697658,"line_start":700,"line_end":700,"column_start":12,"column_end":16},"name":"acos","qualname":"<Quaternion<N>>::acos","value":"pub fn acos(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic arccosinus.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic arccosinus.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":697295,"byte_end":697338,"line_start":689,"line_end":689,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":697343,"byte_end":697346,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":697351,"byte_end":697364,"line_start":691,"line_end":691,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":697369,"byte_end":697376,"line_start":692,"line_end":692,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":697381,"byte_end":697420,"line_start":693,"line_end":693,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":697425,"byte_end":697456,"line_start":694,"line_end":694,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":697461,"byte_end":697513,"line_start":695,"line_end":695,"column_start":5,"column_end":57}},{"value":"/ let result = input.cos().acos();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":697518,"byte_end":697554,"line_start":696,"line_end":696,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(input, result, epsilon = 1.0e-7);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":697559,"byte_end":697616,"line_start":697,"line_end":697,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":697621,"byte_end":697628,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":697633,"byte_end":697642,"line_start":699,"line_end":699,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6770},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":698338,"byte_end":698341,"line_start":721,"line_end":721,"column_start":12,"column_end":15},"name":"sin","qualname":"<Quaternion<N>>::sin","value":"pub fn sin(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic sinus.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic sinus.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":697871,"byte_end":697909,"line_start":709,"line_end":709,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":697914,"byte_end":697917,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":697922,"byte_end":697935,"line_start":711,"line_end":711,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":697940,"byte_end":697947,"line_start":712,"line_end":712,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":697952,"byte_end":697991,"line_start":713,"line_end":713,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":697996,"byte_end":698027,"line_start":714,"line_end":714,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":698032,"byte_end":698084,"line_start":715,"line_end":715,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(91.78371578403467, 21.886486853029176, 32.82973027954377, 43.77297370605835);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":698089,"byte_end":698201,"line_start":716,"line_end":716,"column_start":5,"column_end":117}},{"value":"/ let result = input.sin();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":698206,"byte_end":698235,"line_start":717,"line_end":717,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":698240,"byte_end":698300,"line_start":718,"line_end":718,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":698305,"byte_end":698312,"line_start":719,"line_end":719,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":698317,"byte_end":698326,"line_start":720,"line_end":720,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6771},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":698897,"byte_end":698901,"line_start":738,"line_end":738,"column_start":12,"column_end":16},"name":"asin","qualname":"<Quaternion<N>>::asin","value":"pub fn asin(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic arcsinus.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic arcsinus.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":698540,"byte_end":698581,"line_start":727,"line_end":727,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":698586,"byte_end":698589,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":698594,"byte_end":698607,"line_start":729,"line_end":729,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":698612,"byte_end":698619,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":698624,"byte_end":698663,"line_start":731,"line_end":731,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":698668,"byte_end":698699,"line_start":732,"line_end":732,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":698704,"byte_end":698756,"line_start":733,"line_end":733,"column_start":5,"column_end":57}},{"value":"/ let result = input.sin().asin();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":698761,"byte_end":698797,"line_start":734,"line_end":734,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(input, result, epsilon = 1.0e-7);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":698802,"byte_end":698859,"line_start":735,"line_end":735,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":698864,"byte_end":698871,"line_start":736,"line_end":736,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":698876,"byte_end":698885,"line_start":737,"line_end":737,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6772},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":699596,"byte_end":699599,"line_start":759,"line_end":759,"column_start":12,"column_end":15},"name":"tan","qualname":"<Quaternion<N>>::tan","value":"pub fn tan(&Self) -> Self where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic tangent.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic tangent.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":699120,"byte_end":699160,"line_start":747,"line_end":747,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":699165,"byte_end":699168,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":699173,"byte_end":699186,"line_start":749,"line_end":749,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":699191,"byte_end":699198,"line_start":750,"line_end":750,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":699203,"byte_end":699242,"line_start":751,"line_end":751,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":699247,"byte_end":699278,"line_start":752,"line_end":752,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":699283,"byte_end":699335,"line_start":753,"line_end":753,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(0.00003821631725009489, 0.3713971716439371, 0.5570957574659058, 0.7427943432878743);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":699340,"byte_end":699459,"line_start":754,"line_end":754,"column_start":5,"column_end":124}},{"value":"/ let result = input.tan();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":699464,"byte_end":699493,"line_start":755,"line_end":755,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":699498,"byte_end":699558,"line_start":756,"line_end":756,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":699563,"byte_end":699570,"line_start":757,"line_end":757,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":699575,"byte_end":699584,"line_start":758,"line_end":758,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6773},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":700074,"byte_end":700078,"line_start":777,"line_end":777,"column_start":12,"column_end":16},"name":"atan","qualname":"<Quaternion<N>>::atan","value":"pub fn atan(&Self) -> Self where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic arctangent.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic arctangent.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":699715,"byte_end":699758,"line_start":766,"line_end":766,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":699763,"byte_end":699766,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":699771,"byte_end":699784,"line_start":768,"line_end":768,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":699789,"byte_end":699796,"line_start":769,"line_end":769,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":699801,"byte_end":699840,"line_start":770,"line_end":770,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":699845,"byte_end":699876,"line_start":771,"line_end":771,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":699881,"byte_end":699933,"line_start":772,"line_end":772,"column_start":5,"column_end":57}},{"value":"/ let result = input.tan().atan();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":699938,"byte_end":699974,"line_start":773,"line_end":773,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(input, result, epsilon = 1.0e-7);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":699979,"byte_end":700036,"line_start":774,"line_end":774,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":700041,"byte_end":700048,"line_start":775,"line_end":775,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":700053,"byte_end":700062,"line_start":776,"line_end":776,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6774},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":700839,"byte_end":700843,"line_start":801,"line_end":801,"column_start":12,"column_end":16},"name":"sinh","qualname":"<Quaternion<N>>::sinh","value":"pub fn sinh(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic sinus.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic sinus.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":700354,"byte_end":700403,"line_start":789,"line_end":789,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":700408,"byte_end":700411,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":700416,"byte_end":700429,"line_start":791,"line_end":791,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":700434,"byte_end":700441,"line_start":792,"line_end":792,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":700446,"byte_end":700485,"line_start":793,"line_end":793,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":700490,"byte_end":700521,"line_start":794,"line_end":794,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":700526,"byte_end":700578,"line_start":795,"line_end":795,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(0.7323376060463428, -0.4482074499805421, -0.6723111749708133, -0.8964148999610843);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":700583,"byte_end":700701,"line_start":796,"line_end":796,"column_start":5,"column_end":123}},{"value":"/ let result = input.sinh();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":700706,"byte_end":700736,"line_start":797,"line_end":797,"column_start":5,"column_end":35}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":700741,"byte_end":700801,"line_start":798,"line_end":798,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":700806,"byte_end":700813,"line_start":799,"line_end":799,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":700818,"byte_end":700827,"line_start":800,"line_end":800,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6775},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":701399,"byte_end":701404,"line_start":817,"line_end":817,"column_start":12,"column_end":17},"name":"asinh","qualname":"<Quaternion<N>>::asinh","value":"pub fn asinh(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic arcsinus.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic arcsinus.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":700916,"byte_end":700968,"line_start":805,"line_end":805,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":700973,"byte_end":700976,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":700981,"byte_end":700994,"line_start":807,"line_end":807,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":700999,"byte_end":701006,"line_start":808,"line_end":808,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":701011,"byte_end":701050,"line_start":809,"line_end":809,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":701055,"byte_end":701086,"line_start":810,"line_end":810,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":701091,"byte_end":701143,"line_start":811,"line_end":811,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(2.385889902585242, 0.514052600662788, 0.7710789009941821, 1.028105201325576);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":701148,"byte_end":701260,"line_start":812,"line_end":812,"column_start":5,"column_end":117}},{"value":"/ let result = input.asinh();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":701265,"byte_end":701296,"line_start":813,"line_end":813,"column_start":5,"column_end":36}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":701301,"byte_end":701361,"line_start":814,"line_end":814,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":701366,"byte_end":701373,"line_start":815,"line_end":815,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":701378,"byte_end":701387,"line_start":816,"line_end":816,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6776},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":702018,"byte_end":702022,"line_start":834,"line_end":834,"column_start":12,"column_end":16},"name":"cosh","qualname":"<Quaternion<N>>::cosh","value":"pub fn cosh(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic cosinus.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic cosinus.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":701531,"byte_end":701582,"line_start":822,"line_end":822,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":701587,"byte_end":701590,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":701595,"byte_end":701608,"line_start":824,"line_end":824,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":701613,"byte_end":701620,"line_start":825,"line_end":825,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":701625,"byte_end":701664,"line_start":826,"line_end":826,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":701669,"byte_end":701700,"line_start":827,"line_end":827,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":701705,"byte_end":701757,"line_start":828,"line_end":828,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(0.9615851176369566, -0.3413521745610167, -0.5120282618415251, -0.6827043491220334);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":701762,"byte_end":701880,"line_start":829,"line_end":829,"column_start":5,"column_end":123}},{"value":"/ let result = input.cosh();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":701885,"byte_end":701915,"line_start":830,"line_end":830,"column_start":5,"column_end":35}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":701920,"byte_end":701980,"line_start":831,"line_end":831,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":701985,"byte_end":701992,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":701997,"byte_end":702006,"line_start":833,"line_end":833,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6777},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":702583,"byte_end":702588,"line_start":850,"line_end":850,"column_start":12,"column_end":17},"name":"acosh","qualname":"<Quaternion<N>>::acosh","value":"pub fn acosh(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic arccosinus.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic arccosinus.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":702095,"byte_end":702149,"line_start":838,"line_end":838,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":702154,"byte_end":702157,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":702162,"byte_end":702175,"line_start":840,"line_end":840,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":702180,"byte_end":702187,"line_start":841,"line_end":841,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":702192,"byte_end":702231,"line_start":842,"line_end":842,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":702236,"byte_end":702267,"line_start":843,"line_end":843,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":702272,"byte_end":702324,"line_start":844,"line_end":844,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(2.4014472020074007, 0.5162761016176176, 0.7744141524264264, 1.0325522032352352);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":702329,"byte_end":702444,"line_start":845,"line_end":845,"column_start":5,"column_end":120}},{"value":"/ let result = input.acosh();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":702449,"byte_end":702480,"line_start":846,"line_end":846,"column_start":5,"column_end":36}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":702485,"byte_end":702545,"line_start":847,"line_end":847,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":702550,"byte_end":702557,"line_start":848,"line_end":848,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":702562,"byte_end":702571,"line_start":849,"line_end":849,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6778},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":703221,"byte_end":703225,"line_start":867,"line_end":867,"column_start":12,"column_end":16},"name":"tanh","qualname":"<Quaternion<N>>::tanh","value":"pub fn tanh(&Self) -> Self where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic tangent.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic tangent.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":702732,"byte_end":702783,"line_start":855,"line_end":855,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":702788,"byte_end":702791,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":702796,"byte_end":702809,"line_start":857,"line_end":857,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":702814,"byte_end":702821,"line_start":858,"line_end":858,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":702826,"byte_end":702865,"line_start":859,"line_end":859,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":702870,"byte_end":702901,"line_start":860,"line_end":860,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":702906,"byte_end":702958,"line_start":861,"line_end":861,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(1.0248695360556623, -0.10229568178876419, -0.1534435226831464, -0.20459136357752844);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":702963,"byte_end":703083,"line_start":862,"line_end":862,"column_start":5,"column_end":125}},{"value":"/ let result = input.tanh();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":703088,"byte_end":703118,"line_start":863,"line_end":863,"column_start":5,"column_end":35}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":703123,"byte_end":703183,"line_start":864,"line_end":864,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":703188,"byte_end":703195,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":703200,"byte_end":703209,"line_start":866,"line_end":866,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6779},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":703832,"byte_end":703837,"line_start":886,"line_end":886,"column_start":12,"column_end":17},"name":"atanh","qualname":"<Quaternion<N>>::atanh","value":"pub fn atanh(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic arctangent.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic arctangent.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":703343,"byte_end":703397,"line_start":874,"line_end":874,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":703402,"byte_end":703405,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":703410,"byte_end":703423,"line_start":876,"line_end":876,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":703428,"byte_end":703435,"line_start":877,"line_end":877,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":703440,"byte_end":703479,"line_start":878,"line_end":878,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":703484,"byte_end":703515,"line_start":879,"line_end":879,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":703520,"byte_end":703572,"line_start":880,"line_end":880,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(0.03230293287000163, 0.5173453683196951, 0.7760180524795426, 1.0346907366393903);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":703577,"byte_end":703693,"line_start":881,"line_end":881,"column_start":5,"column_end":121}},{"value":"/ let result = input.atanh();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":703698,"byte_end":703729,"line_start":882,"line_end":882,"column_start":5,"column_end":36}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":703734,"byte_end":703794,"line_start":883,"line_end":883,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":703799,"byte_end":703806,"line_start":884,"line_end":884,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":703811,"byte_end":703820,"line_start":885,"line_end":885,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":6799},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":705953,"byte_end":705967,"line_start":952,"line_end":952,"column_start":10,"column_end":24},"name":"UnitQuaternion","qualname":"::geometry::quaternion::UnitQuaternion","value":"Unit<Quaternion<N>>","parent":null,"children":[],"decl_id":null,"docs":" A unit quaternions. May be used to represent a rotation.\n","sig":null,"attributes":[{"value":"/ A unit quaternions. May be used to represent a rotation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":705883,"byte_end":705943,"line_start":951,"line_end":951,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":6816},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":707312,"byte_end":707317,"line_start":1003,"line_end":1003,"column_start":12,"column_end":17},"name":"angle","qualname":"<UnitQuaternion<N>>::angle","value":"pub fn angle(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle in [0; pi] of this unit quaternion.","sig":null,"attributes":[{"value":"/ The rotation angle in [0; pi] of this unit quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":706949,"byte_end":707007,"line_start":993,"line_end":993,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":707012,"byte_end":707015,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":707020,"byte_end":707033,"line_start":995,"line_end":995,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":707038,"byte_end":707045,"line_start":996,"line_end":996,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Unit, UnitQuaternion, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":707050,"byte_end":707102,"line_start":997,"line_end":997,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":707107,"byte_end":707171,"line_start":998,"line_end":998,"column_start":5,"column_end":69}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, 1.78);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":707176,"byte_end":707235,"line_start":999,"line_end":999,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(rot.angle(), 1.78);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":707240,"byte_end":707274,"line_start":1000,"line_end":1000,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":707279,"byte_end":707286,"line_start":1001,"line_end":1001,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":707291,"byte_end":707300,"line_start":1002,"line_end":1002,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6817},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":707802,"byte_end":707812,"line_start":1019,"line_end":1019,"column_start":12,"column_end":22},"name":"quaternion","qualname":"<UnitQuaternion<N>>::quaternion","value":"pub fn quaternion(&Self) -> &Quaternion<N>","parent":null,"children":[],"decl_id":null,"docs":" The underlying quaternion.","sig":null,"attributes":[{"value":"/ The underlying quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":707477,"byte_end":707507,"line_start":1008,"line_end":1008,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":707512,"byte_end":707515,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ Same as `self.as_ref()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":707520,"byte_end":707548,"line_start":1010,"line_end":1010,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":707553,"byte_end":707556,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":707561,"byte_end":707574,"line_start":1012,"line_end":1012,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":707579,"byte_end":707586,"line_start":1013,"line_end":1013,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Quaternion};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":707591,"byte_end":707640,"line_start":1014,"line_end":1014,"column_start":5,"column_end":54}},{"value":"/ let axis = UnitQuaternion::identity();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":707645,"byte_end":707687,"line_start":1015,"line_end":1015,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*axis.quaternion(), Quaternion::new(1.0, 0.0, 0.0, 0.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":707692,"byte_end":707764,"line_start":1016,"line_end":1016,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":707769,"byte_end":707776,"line_start":1017,"line_end":1017,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":707781,"byte_end":707790,"line_start":1018,"line_end":1018,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6818},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":708355,"byte_end":708364,"line_start":1035,"line_end":1035,"column_start":12,"column_end":21},"name":"conjugate","qualname":"<UnitQuaternion<N>>::conjugate","value":"pub fn conjugate(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compute the conjugate of this unit quaternion.","sig":null,"attributes":[{"value":"/ Compute the conjugate of this unit quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":707873,"byte_end":707923,"line_start":1023,"line_end":1023,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":707928,"byte_end":707931,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":707936,"byte_end":707949,"line_start":1025,"line_end":1025,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":707954,"byte_end":707961,"line_start":1026,"line_end":1026,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Unit, UnitQuaternion, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":707966,"byte_end":708018,"line_start":1027,"line_end":1027,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":708023,"byte_end":708087,"line_start":1028,"line_end":1028,"column_start":5,"column_end":69}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, 1.78);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":708092,"byte_end":708151,"line_start":1029,"line_end":1029,"column_start":5,"column_end":64}},{"value":"/ let conj = rot.conjugate();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":708156,"byte_end":708187,"line_start":1030,"line_end":1030,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(conj, UnitQuaternion::from_axis_angle(&-axis, 1.78));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":708192,"byte_end":708260,"line_start":1031,"line_end":1031,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":708265,"byte_end":708272,"line_start":1032,"line_end":1032,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":708277,"byte_end":708286,"line_start":1033,"line_end":1033,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use conjugate_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":708291,"byte_end":708343,"line_start":1034,"line_end":1034,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":6819},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":708966,"byte_end":708973,"line_start":1052,"line_end":1052,"column_start":12,"column_end":19},"name":"inverse","qualname":"<UnitQuaternion<N>>::inverse","value":"pub fn inverse(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inverts this quaternion if it is not zero.","sig":null,"attributes":[{"value":"/ Inverts this quaternion if it is not zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":708448,"byte_end":708494,"line_start":1039,"line_end":1039,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":708499,"byte_end":708502,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":708507,"byte_end":708520,"line_start":1041,"line_end":1041,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":708525,"byte_end":708532,"line_start":1042,"line_end":1042,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Unit, UnitQuaternion, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":708537,"byte_end":708589,"line_start":1043,"line_end":1043,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":708594,"byte_end":708658,"line_start":1044,"line_end":1044,"column_start":5,"column_end":69}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, 1.78);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":708663,"byte_end":708722,"line_start":1045,"line_end":1045,"column_start":5,"column_end":64}},{"value":"/ let inv = rot.inverse();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":708727,"byte_end":708755,"line_start":1046,"line_end":1046,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(rot * inv, UnitQuaternion::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":708760,"byte_end":708814,"line_start":1047,"line_end":1047,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(inv * rot, UnitQuaternion::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":708819,"byte_end":708873,"line_start":1048,"line_end":1048,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":708878,"byte_end":708885,"line_start":1049,"line_end":1049,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":708890,"byte_end":708899,"line_start":1050,"line_end":1050,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use inverse_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":708904,"byte_end":708954,"line_start":1051,"line_end":1051,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6820},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":709498,"byte_end":709506,"line_start":1067,"line_end":1067,"column_start":12,"column_end":20},"name":"angle_to","qualname":"<UnitQuaternion<N>>::angle_to","value":"pub fn angle_to(&Self, &Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation angle needed to make `self` and `other` coincide.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":709027,"byte_end":709093,"line_start":1056,"line_end":1056,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":709098,"byte_end":709101,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":709106,"byte_end":709119,"line_start":1058,"line_end":1058,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":709124,"byte_end":709131,"line_start":1059,"line_end":1059,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":709136,"byte_end":709175,"line_start":1060,"line_end":1060,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":709180,"byte_end":709226,"line_start":1061,"line_end":1061,"column_start":5,"column_end":51}},{"value":"/ let rot1 = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":709231,"byte_end":709303,"line_start":1062,"line_end":1062,"column_start":5,"column_end":77}},{"value":"/ let rot2 = UnitQuaternion::from_axis_angle(&Vector3::x_axis(), 0.1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":709308,"byte_end":709380,"line_start":1063,"line_end":1063,"column_start":5,"column_end":77}},{"value":"/ assert_relative_eq!(rot1.angle_to(&rot2), 1.0045657, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":709385,"byte_end":709460,"line_start":1064,"line_end":1064,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":709465,"byte_end":709472,"line_start":1065,"line_end":1065,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":709477,"byte_end":709486,"line_start":1066,"line_end":1066,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6821},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":710203,"byte_end":710214,"line_start":1086,"line_end":1086,"column_start":12,"column_end":23},"name":"rotation_to","qualname":"<UnitQuaternion<N>>::rotation_to","value":"pub fn rotation_to(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The unit quaternion needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The unit quaternion needed to make `self` and `other` coincide.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":709613,"byte_end":709680,"line_start":1072,"line_end":1072,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":709685,"byte_end":709688,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ The result is such that: `self.rotation_to(other) * self == other`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":709693,"byte_end":709764,"line_start":1074,"line_end":1074,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":709769,"byte_end":709772,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":709777,"byte_end":709790,"line_start":1076,"line_end":1076,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":709795,"byte_end":709802,"line_start":1077,"line_end":1077,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":709807,"byte_end":709846,"line_start":1078,"line_end":1078,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":709851,"byte_end":709897,"line_start":1079,"line_end":1079,"column_start":5,"column_end":51}},{"value":"/ let rot1 = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":709902,"byte_end":709974,"line_start":1080,"line_end":1080,"column_start":5,"column_end":77}},{"value":"/ let rot2 = UnitQuaternion::from_axis_angle(&Vector3::x_axis(), 0.1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":709979,"byte_end":710051,"line_start":1081,"line_end":1081,"column_start":5,"column_end":77}},{"value":"/ let rot_to = rot1.rotation_to(&rot2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":710056,"byte_end":710097,"line_start":1082,"line_end":1082,"column_start":5,"column_end":46}},{"value":"/ assert_relative_eq!(rot_to * rot1, rot2, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":710102,"byte_end":710165,"line_start":1083,"line_end":1083,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":710170,"byte_end":710177,"line_start":1084,"line_end":1084,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":710182,"byte_end":710191,"line_start":1085,"line_end":1085,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6822},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":710754,"byte_end":710758,"line_start":1102,"line_end":1102,"column_start":12,"column_end":16},"name":"lerp","qualname":"<UnitQuaternion<N>>::lerp","value":"pub fn lerp(&Self, &Self, N) -> Quaternion<N>","parent":null,"children":[],"decl_id":null,"docs":" Linear interpolation between two unit quaternions.","sig":null,"attributes":[{"value":"/ Linear interpolation between two unit quaternions.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":710278,"byte_end":710332,"line_start":1090,"line_end":1090,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":710337,"byte_end":710340,"line_start":1091,"line_end":1091,"column_start":5,"column_end":8}},{"value":"/ The result is not normalized.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":710345,"byte_end":710378,"line_start":1092,"line_end":1092,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":710383,"byte_end":710386,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":710391,"byte_end":710404,"line_start":1094,"line_end":1094,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":710409,"byte_end":710416,"line_start":1095,"line_end":1095,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Quaternion};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":710421,"byte_end":710470,"line_start":1096,"line_end":1096,"column_start":5,"column_end":54}},{"value":"/ let q1 = UnitQuaternion::new_normalize(Quaternion::new(1.0, 0.0, 0.0, 0.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":710475,"byte_end":710555,"line_start":1097,"line_end":1097,"column_start":5,"column_end":85}},{"value":"/ let q2 = UnitQuaternion::new_normalize(Quaternion::new(0.0, 1.0, 0.0, 0.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":710560,"byte_end":710640,"line_start":1098,"line_end":1098,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(q1.lerp(&q2, 0.1), Quaternion::new(0.9, 0.1, 0.0, 0.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":710645,"byte_end":710716,"line_start":1099,"line_end":1099,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":710721,"byte_end":710728,"line_start":1100,"line_end":1100,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":710733,"byte_end":710742,"line_start":1101,"line_end":1101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6823},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":711421,"byte_end":711426,"line_start":1118,"line_end":1118,"column_start":12,"column_end":17},"name":"nlerp","qualname":"<UnitQuaternion<N>>::nlerp","value":"pub fn nlerp(&Self, &Self, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Normalized linear interpolation between two unit quaternions.","sig":null,"attributes":[{"value":"/ Normalized linear interpolation between two unit quaternions.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":710862,"byte_end":710927,"line_start":1106,"line_end":1106,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":710932,"byte_end":710935,"line_start":1107,"line_end":1107,"column_start":5,"column_end":8}},{"value":"/ This is the same as `self.lerp` except that the result is normalized.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":710940,"byte_end":711013,"line_start":1108,"line_end":1108,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":711018,"byte_end":711021,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":711026,"byte_end":711039,"line_start":1110,"line_end":1110,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":711044,"byte_end":711051,"line_start":1111,"line_end":1111,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Quaternion};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":711056,"byte_end":711105,"line_start":1112,"line_end":1112,"column_start":5,"column_end":54}},{"value":"/ let q1 = UnitQuaternion::new_normalize(Quaternion::new(1.0, 0.0, 0.0, 0.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":711110,"byte_end":711190,"line_start":1113,"line_end":1113,"column_start":5,"column_end":85}},{"value":"/ let q2 = UnitQuaternion::new_normalize(Quaternion::new(0.0, 1.0, 0.0, 0.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":711195,"byte_end":711275,"line_start":1114,"line_end":1114,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(q1.nlerp(&q2, 0.1), UnitQuaternion::new_normalize(Quaternion::new(0.9, 0.1, 0.0, 0.0)));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":711280,"byte_end":711383,"line_start":1115,"line_end":1115,"column_start":5,"column_end":108}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":711388,"byte_end":711395,"line_start":1116,"line_end":1116,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":711400,"byte_end":711409,"line_start":1117,"line_end":1117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6824},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":712293,"byte_end":712298,"line_start":1143,"line_end":1143,"column_start":12,"column_end":17},"name":"slerp","qualname":"<UnitQuaternion<N>>::slerp","value":"pub fn slerp(&Self, &Self, N) -> Self where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Spherical linear interpolation between two unit quaternions.","sig":null,"attributes":[{"value":"/ Spherical linear interpolation between two unit quaternions.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":711589,"byte_end":711653,"line_start":1125,"line_end":1125,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":711658,"byte_end":711661,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ Panics if the angle between both quaternion is 180 degrees (in which case the interpolation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":711666,"byte_end":711761,"line_start":1127,"line_end":1127,"column_start":5,"column_end":100}},{"value":"/ is not well-defined). Use `.try_slerp` instead to avoid the panic.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":711766,"byte_end":711836,"line_start":1128,"line_end":1128,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":711841,"byte_end":711844,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":711849,"byte_end":711864,"line_start":1130,"line_end":1130,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":711869,"byte_end":711872,"line_start":1131,"line_end":1131,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":711877,"byte_end":711884,"line_start":1132,"line_end":1132,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::geometry::UnitQuaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":711889,"byte_end":711934,"line_start":1133,"line_end":1133,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":711939,"byte_end":711942,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ let q1 = UnitQuaternion::from_euler_angles(std::f32::consts::FRAC_PI_4, 0.0, 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":711947,"byte_end":712033,"line_start":1135,"line_end":1135,"column_start":5,"column_end":91}},{"value":"/ let q2 = UnitQuaternion::from_euler_angles(-std::f32::consts::PI, 0.0, 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":712038,"byte_end":712118,"line_start":1136,"line_end":1136,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":712123,"byte_end":712126,"line_start":1137,"line_end":1137,"column_start":5,"column_end":8}},{"value":"/ let q = q1.slerp(&q2, 1.0 / 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":712131,"byte_end":712168,"line_start":1138,"line_end":1138,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":712173,"byte_end":712176,"line_start":1139,"line_end":1139,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(q.euler_angles(), (std::f32::consts::FRAC_PI_2, 0.0, 0.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":712181,"byte_end":712255,"line_start":1140,"line_end":1140,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":712260,"byte_end":712267,"line_start":1141,"line_end":1141,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":712272,"byte_end":712281,"line_start":1142,"line_end":1142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6825},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":713101,"byte_end":713110,"line_start":1162,"line_end":1162,"column_start":12,"column_end":21},"name":"try_slerp","qualname":"<UnitQuaternion<N>>::try_slerp","value":"pub fn try_slerp(&Self, &Self, N, N) -> Option<Self> where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Computes the spherical linear interpolation between two unit quaternions or returns `None`\n if both quaternions are approximately 180 degrees apart (in which case the interpolation is\n not well-defined).","sig":null,"attributes":[{"value":"/ Computes the spherical linear interpolation between two unit quaternions or returns `None`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":712504,"byte_end":712598,"line_start":1151,"line_end":1151,"column_start":5,"column_end":99}},{"value":"/ if both quaternions are approximately 180 degrees apart (in which case the interpolation is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":712603,"byte_end":712698,"line_start":1152,"line_end":1152,"column_start":5,"column_end":100}},{"value":"/ not well-defined).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":712703,"byte_end":712725,"line_start":1153,"line_end":1153,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":712730,"byte_end":712733,"line_start":1154,"line_end":1154,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":712738,"byte_end":712753,"line_start":1155,"line_end":1155,"column_start":5,"column_end":20}},{"value":"/ * `self`: the first quaternion to interpolate from.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":712758,"byte_end":712813,"line_start":1156,"line_end":1156,"column_start":5,"column_end":60}},{"value":"/ * `other`: the second quaternion to interpolate toward.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":712818,"byte_end":712877,"line_start":1157,"line_end":1157,"column_start":5,"column_end":64}},{"value":"/ * `t`: the interpolation parameter. Should be between 0 and 1.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":712882,"byte_end":712948,"line_start":1158,"line_end":1158,"column_start":5,"column_end":71}},{"value":"/ * `epsilon`: the value below which the sinus of the angle separating both quaternion","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":712953,"byte_end":713041,"line_start":1159,"line_end":1159,"column_start":5,"column_end":93}},{"value":"/ must be to return `None`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":713046,"byte_end":713075,"line_start":1160,"line_end":1160,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":713080,"byte_end":713089,"line_start":1161,"line_end":1161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6827},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":713809,"byte_end":713822,"line_start":1185,"line_end":1185,"column_start":12,"column_end":25},"name":"conjugate_mut","qualname":"<UnitQuaternion<N>>::conjugate_mut","value":"pub fn conjugate_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Compute the conjugate of this unit quaternion in-place.\n","sig":null,"attributes":[{"value":"/ Compute the conjugate of this unit quaternion in-place.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":713724,"byte_end":713783,"line_start":1183,"line_end":1183,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":713788,"byte_end":713797,"line_start":1184,"line_end":1184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6828},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":714442,"byte_end":714453,"line_start":1202,"line_end":1202,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<UnitQuaternion<N>>::inverse_mut","value":"pub fn inverse_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Inverts this quaternion if it is not zero.","sig":null,"attributes":[{"value":"/ Inverts this quaternion if it is not zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":713895,"byte_end":713941,"line_start":1189,"line_end":1189,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":713946,"byte_end":713949,"line_start":1190,"line_end":1190,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":713954,"byte_end":713967,"line_start":1191,"line_end":1191,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":713972,"byte_end":713979,"line_start":1192,"line_end":1192,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":713984,"byte_end":714023,"line_start":1193,"line_end":1193,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Unit};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":714028,"byte_end":714080,"line_start":1194,"line_end":1194,"column_start":5,"column_end":57}},{"value":"/ let axisangle = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":714085,"byte_end":714133,"line_start":1195,"line_end":1195,"column_start":5,"column_end":53}},{"value":"/ let mut rot = UnitQuaternion::new(axisangle);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":714138,"byte_end":714187,"line_start":1196,"line_end":1196,"column_start":5,"column_end":54}},{"value":"/ rot.inverse_mut();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":714192,"byte_end":714214,"line_start":1197,"line_end":1197,"column_start":5,"column_end":27}},{"value":"/ assert_relative_eq!(rot * UnitQuaternion::new(axisangle), UnitQuaternion::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":714219,"byte_end":714309,"line_start":1198,"line_end":1198,"column_start":5,"column_end":95}},{"value":"/ assert_relative_eq!(UnitQuaternion::new(axisangle) * rot, UnitQuaternion::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":714314,"byte_end":714404,"line_start":1199,"line_end":1199,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":714409,"byte_end":714416,"line_start":1200,"line_end":1200,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":714421,"byte_end":714430,"line_start":1201,"line_end":1201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6829},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":715087,"byte_end":715091,"line_start":1221,"line_end":1221,"column_start":12,"column_end":16},"name":"axis","qualname":"<UnitQuaternion<N>>::axis","value":"pub fn axis(&Self) -> Option<Unit<Vector3<N>>> where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis of this unit quaternion or `None` if the rotation is zero.","sig":null,"attributes":[{"value":"/ The rotation axis of this unit quaternion or `None` if the rotation is zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":714526,"byte_end":714606,"line_start":1206,"line_end":1206,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":714611,"byte_end":714614,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":714619,"byte_end":714632,"line_start":1208,"line_end":1208,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":714637,"byte_end":714644,"line_start":1209,"line_end":1209,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Unit};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":714649,"byte_end":714701,"line_start":1210,"line_end":1210,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":714706,"byte_end":714770,"line_start":1211,"line_end":1211,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":714775,"byte_end":714795,"line_start":1212,"line_end":1212,"column_start":5,"column_end":25}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, angle);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":714800,"byte_end":714860,"line_start":1213,"line_end":1213,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(rot.axis(), Some(axis));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":714865,"byte_end":714904,"line_start":1214,"line_end":1214,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":714909,"byte_end":714912,"line_start":1215,"line_end":1215,"column_start":5,"column_end":8}},{"value":"/ // Case with a zero angle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":714917,"byte_end":714947,"line_start":1216,"line_end":1216,"column_start":5,"column_end":35}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":714952,"byte_end":715010,"line_start":1217,"line_end":1217,"column_start":5,"column_end":63}},{"value":"/ assert!(rot.axis().is_none());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":715015,"byte_end":715049,"line_start":1218,"line_end":1218,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":715054,"byte_end":715061,"line_start":1219,"line_end":1219,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":715066,"byte_end":715075,"line_start":1220,"line_end":1220,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6830},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":715823,"byte_end":715834,"line_start":1245,"line_end":1245,"column_start":12,"column_end":23},"name":"scaled_axis","qualname":"<UnitQuaternion<N>>::scaled_axis","value":"pub fn scaled_axis(&Self) -> Vector3<N> where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis of this unit quaternion multiplied by the rotation angle.","sig":null,"attributes":[{"value":"/ The rotation axis of this unit quaternion multiplied by the rotation angle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":715387,"byte_end":715466,"line_start":1234,"line_end":1234,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":715471,"byte_end":715474,"line_start":1235,"line_end":1235,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":715479,"byte_end":715492,"line_start":1236,"line_end":1236,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":715497,"byte_end":715504,"line_start":1237,"line_end":1237,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":715509,"byte_end":715548,"line_start":1238,"line_end":1238,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Unit};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":715553,"byte_end":715605,"line_start":1239,"line_end":1239,"column_start":5,"column_end":57}},{"value":"/ let axisangle = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":715610,"byte_end":715658,"line_start":1240,"line_end":1240,"column_start":5,"column_end":53}},{"value":"/ let rot = UnitQuaternion::new(axisangle);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":715663,"byte_end":715708,"line_start":1241,"line_end":1241,"column_start":5,"column_end":50}},{"value":"/ assert_relative_eq!(rot.scaled_axis(), axisangle, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":715713,"byte_end":715785,"line_start":1242,"line_end":1242,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":715790,"byte_end":715797,"line_start":1243,"line_end":1243,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":715802,"byte_end":715811,"line_start":1244,"line_end":1244,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6831},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":716669,"byte_end":716679,"line_start":1273,"line_end":1273,"column_start":12,"column_end":22},"name":"axis_angle","qualname":"<UnitQuaternion<N>>::axis_angle","value":"pub fn axis_angle(&Self) -> Option<(Unit<Vector3<N>>, N)> where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis and angle in ]0, pi] of this unit quaternion.","sig":null,"attributes":[{"value":"/ The rotation axis and angle in ]0, pi] of this unit quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":716047,"byte_end":716114,"line_start":1256,"line_end":1256,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":716119,"byte_end":716122,"line_start":1257,"line_end":1257,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the angle is zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":716127,"byte_end":716167,"line_start":1258,"line_end":1258,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":716172,"byte_end":716175,"line_start":1259,"line_end":1259,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":716180,"byte_end":716193,"line_start":1260,"line_end":1260,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":716198,"byte_end":716205,"line_start":1261,"line_end":1261,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Unit};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":716210,"byte_end":716262,"line_start":1262,"line_end":1262,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":716267,"byte_end":716331,"line_start":1263,"line_end":1263,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":716336,"byte_end":716356,"line_start":1264,"line_end":1264,"column_start":5,"column_end":25}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, angle);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":716361,"byte_end":716421,"line_start":1265,"line_end":1265,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(rot.axis_angle(), Some((axis, angle)));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":716426,"byte_end":716480,"line_start":1266,"line_end":1266,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":716485,"byte_end":716488,"line_start":1267,"line_end":1267,"column_start":5,"column_end":8}},{"value":"/ // Case with a zero angle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":716493,"byte_end":716523,"line_start":1268,"line_end":1268,"column_start":5,"column_end":35}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":716528,"byte_end":716586,"line_start":1269,"line_end":1269,"column_start":5,"column_end":63}},{"value":"/ assert!(rot.axis_angle().is_none());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":716591,"byte_end":716631,"line_start":1270,"line_end":1270,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":716636,"byte_end":716643,"line_start":1271,"line_end":1271,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":716648,"byte_end":716657,"line_start":1272,"line_end":1272,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6833},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":716993,"byte_end":716996,"line_start":1284,"line_end":1284,"column_start":12,"column_end":15},"name":"exp","qualname":"<UnitQuaternion<N>>::exp","value":"pub fn exp(&Self) -> Quaternion<N>","parent":null,"children":[],"decl_id":null,"docs":" Compute the exponential of a quaternion.","sig":null,"attributes":[{"value":"/ Compute the exponential of a quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":716822,"byte_end":716866,"line_start":1280,"line_end":1280,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":716871,"byte_end":716874,"line_start":1281,"line_end":1281,"column_start":5,"column_end":8}},{"value":"/ Note that this function yields a `Quaternion<N>` because it loses the unit property.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":716879,"byte_end":716967,"line_start":1282,"line_end":1282,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":716972,"byte_end":716981,"line_start":1283,"line_end":1283,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6834},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":717712,"byte_end":717714,"line_start":1303,"line_end":1303,"column_start":12,"column_end":14},"name":"ln","qualname":"<UnitQuaternion<N>>::ln","value":"pub fn ln(&Self) -> Quaternion<N> where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Compute the natural logarithm of a quaternion.","sig":null,"attributes":[{"value":"/ Compute the natural logarithm of a quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":717062,"byte_end":717112,"line_start":1288,"line_end":1288,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":717117,"byte_end":717120,"line_start":1289,"line_end":1289,"column_start":5,"column_end":8}},{"value":"/ Note that this function yields a `Quaternion<N>` because it loses the unit property.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":717125,"byte_end":717213,"line_start":1290,"line_end":1290,"column_start":5,"column_end":93}},{"value":"/ The vector part of the return value corresponds to the axis-angle representation (divided","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":717218,"byte_end":717311,"line_start":1291,"line_end":1291,"column_start":5,"column_end":98}},{"value":"/ by 2.0) of this unit quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":717316,"byte_end":717352,"line_start":1292,"line_end":1292,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":717357,"byte_end":717360,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":717365,"byte_end":717378,"line_start":1294,"line_end":1294,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":717383,"byte_end":717390,"line_start":1295,"line_end":1295,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":717395,"byte_end":717434,"line_start":1296,"line_end":1296,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector3, UnitQuaternion};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":717439,"byte_end":717485,"line_start":1297,"line_end":1297,"column_start":5,"column_end":51}},{"value":"/ let axisangle = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":717490,"byte_end":717538,"line_start":1298,"line_end":1298,"column_start":5,"column_end":53}},{"value":"/ let q = UnitQuaternion::new(axisangle);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":717543,"byte_end":717586,"line_start":1299,"line_end":1299,"column_start":5,"column_end":48}},{"value":"/ assert_relative_eq!(q.ln().vector().into_owned(), axisangle, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":717591,"byte_end":717674,"line_start":1300,"line_end":1300,"column_start":5,"column_end":88}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":717679,"byte_end":717686,"line_start":1301,"line_end":1301,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":717691,"byte_end":717700,"line_start":1302,"line_end":1302,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6835},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":718621,"byte_end":718625,"line_start":1331,"line_end":1331,"column_start":12,"column_end":16},"name":"powf","qualname":"<UnitQuaternion<N>>::powf","value":"pub fn powf(&Self, N) -> Self where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Raise the quaternion to a given floating power.","sig":null,"attributes":[{"value":"/ Raise the quaternion to a given floating power.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":717950,"byte_end":718001,"line_start":1314,"line_end":1314,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":718006,"byte_end":718009,"line_start":1315,"line_end":1315,"column_start":5,"column_end":8}},{"value":"/ This returns the unit quaternion that identifies a rotation with axis `self.axis()` and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":718014,"byte_end":718105,"line_start":1316,"line_end":1316,"column_start":5,"column_end":96}},{"value":"/ angle `self.angle() × n`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":718110,"byte_end":718140,"line_start":1317,"line_end":1317,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":718145,"byte_end":718148,"line_start":1318,"line_end":1318,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":718153,"byte_end":718166,"line_start":1319,"line_end":1319,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":718171,"byte_end":718178,"line_start":1320,"line_end":1320,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":718183,"byte_end":718222,"line_start":1321,"line_end":1321,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Unit};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":718227,"byte_end":718279,"line_start":1322,"line_end":1322,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":718284,"byte_end":718348,"line_start":1323,"line_end":1323,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":718353,"byte_end":718373,"line_start":1324,"line_end":1324,"column_start":5,"column_end":25}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, angle);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":718378,"byte_end":718438,"line_start":1325,"line_end":1325,"column_start":5,"column_end":65}},{"value":"/ let pow = rot.powf(2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":718443,"byte_end":718471,"line_start":1326,"line_end":1326,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(pow.axis().unwrap(), axis, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":718476,"byte_end":718545,"line_start":1327,"line_end":1327,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(pow.angle(), 2.4);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":718550,"byte_end":718583,"line_start":1328,"line_end":1328,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":718588,"byte_end":718595,"line_start":1329,"line_end":1329,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":718600,"byte_end":718609,"line_start":1330,"line_end":1330,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6836},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":719519,"byte_end":719537,"line_start":1359,"line_end":1359,"column_start":12,"column_end":30},"name":"to_rotation_matrix","qualname":"<UnitQuaternion<N>>::to_rotation_matrix","value":"pub fn to_rotation_matrix(&Self) -> Rotation<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Builds a rotation matrix from this unit quaternion.","sig":null,"attributes":[{"value":"/ Builds a rotation matrix from this unit quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":718847,"byte_end":718902,"line_start":1342,"line_end":1342,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":718907,"byte_end":718910,"line_start":1343,"line_end":1343,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":718915,"byte_end":718928,"line_start":1344,"line_end":1344,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":718933,"byte_end":718936,"line_start":1345,"line_end":1345,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":718941,"byte_end":718948,"line_start":1346,"line_end":1346,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":718953,"byte_end":718992,"line_start":1347,"line_end":1347,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":718997,"byte_end":719016,"line_start":1348,"line_end":1348,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Matrix3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":719021,"byte_end":719076,"line_start":1349,"line_end":1349,"column_start":5,"column_end":60}},{"value":"/ let q = UnitQuaternion::from_axis_angle(&Vector3::z_axis(), f32::consts::FRAC_PI_6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":719081,"byte_end":719169,"line_start":1350,"line_end":1350,"column_start":5,"column_end":93}},{"value":"/ let rot = q.to_rotation_matrix();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":719174,"byte_end":719211,"line_start":1351,"line_end":1351,"column_start":5,"column_end":42}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":719216,"byte_end":719274,"line_start":1352,"line_end":1352,"column_start":5,"column_end":63}},{"value":"/                             0.5,       0.8660254, 0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":719279,"byte_end":719337,"line_start":1353,"line_end":1353,"column_start":5,"column_end":63}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":719342,"byte_end":719401,"line_start":1354,"line_end":1354,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":719406,"byte_end":719409,"line_start":1355,"line_end":1355,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(*rot.matrix(), expected, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":719414,"byte_end":719481,"line_start":1356,"line_end":1356,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":719486,"byte_end":719493,"line_start":1357,"line_end":1357,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":719498,"byte_end":719507,"line_start":1358,"line_end":1358,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6837},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":720624,"byte_end":720639,"line_start":1394,"line_end":1394,"column_start":12,"column_end":27},"name":"to_euler_angles","qualname":"<UnitQuaternion<N>>::to_euler_angles","value":"pub fn to_euler_angles(&Self) -> (N, N, N) where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Converts this unit quaternion into its equivalent Euler angles.","sig":null,"attributes":[{"value":"/ Converts this unit quaternion into its equivalent Euler angles.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":720389,"byte_end":720456,"line_start":1389,"line_end":1389,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":720461,"byte_end":720464,"line_start":1390,"line_end":1390,"column_start":5,"column_end":8}},{"value":"/ The angles are produced in the form (roll, pitch, yaw).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":720469,"byte_end":720528,"line_start":1391,"line_end":1391,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":720533,"byte_end":720542,"line_start":1392,"line_end":1392,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"This is renamed to use `.euler_angles()`.\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":720547,"byte_end":720612,"line_start":1393,"line_end":1393,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":6838},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":721329,"byte_end":721341,"line_start":1416,"line_end":1416,"column_start":12,"column_end":24},"name":"euler_angles","qualname":"<UnitQuaternion<N>>::euler_angles","value":"pub fn euler_angles(&Self) -> (N, N, N) where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the euler angles corresponding to this unit quaternion.","sig":null,"attributes":[{"value":"/ Retrieves the euler angles corresponding to this unit quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":720737,"byte_end":720806,"line_start":1401,"line_end":1401,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":720811,"byte_end":720814,"line_start":1402,"line_end":1402,"column_start":5,"column_end":8}},{"value":"/ The angles are produced in the form (roll, pitch, yaw).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":720819,"byte_end":720878,"line_start":1403,"line_end":1403,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":720883,"byte_end":720886,"line_start":1404,"line_end":1404,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":720891,"byte_end":720904,"line_start":1405,"line_end":1405,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":720909,"byte_end":720916,"line_start":1406,"line_end":1406,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":720921,"byte_end":720960,"line_start":1407,"line_end":1407,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitQuaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":720965,"byte_end":721000,"line_start":1408,"line_end":1408,"column_start":5,"column_end":40}},{"value":"/ let rot = UnitQuaternion::from_euler_angles(0.1, 0.2, 0.3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":721005,"byte_end":721068,"line_start":1409,"line_end":1409,"column_start":5,"column_end":68}},{"value":"/ let euler = rot.euler_angles();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":721073,"byte_end":721108,"line_start":1410,"line_end":1410,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(euler.0, 0.1, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":721113,"byte_end":721169,"line_start":1411,"line_end":1411,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.1, 0.2, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":721174,"byte_end":721230,"line_start":1412,"line_end":1412,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.2, 0.3, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":721235,"byte_end":721291,"line_start":1413,"line_end":1413,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":721296,"byte_end":721303,"line_start":1414,"line_end":1414,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":721308,"byte_end":721317,"line_start":1415,"line_end":1415,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6839},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":722215,"byte_end":722229,"line_start":1440,"line_end":1440,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<UnitQuaternion<N>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Converts this unit quaternion into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this unit quaternion into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":721460,"byte_end":721548,"line_start":1423,"line_end":1423,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":721553,"byte_end":721556,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":721561,"byte_end":721574,"line_start":1425,"line_end":1425,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":721579,"byte_end":721582,"line_start":1426,"line_end":1426,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":721587,"byte_end":721594,"line_start":1427,"line_end":1427,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":721599,"byte_end":721638,"line_start":1428,"line_end":1428,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":721643,"byte_end":721662,"line_start":1429,"line_end":1429,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Matrix4};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":721667,"byte_end":721722,"line_start":1430,"line_end":1430,"column_start":5,"column_end":60}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&Vector3::z_axis(), f32::consts::FRAC_PI_6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":721727,"byte_end":721817,"line_start":1431,"line_end":1431,"column_start":5,"column_end":95}},{"value":"/ let expected = Matrix4::new(0.8660254, -0.5,      0.0, 0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":721822,"byte_end":721885,"line_start":1432,"line_end":1432,"column_start":5,"column_end":68}},{"value":"/                             0.5,       0.8660254, 0.0, 0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":721890,"byte_end":721953,"line_start":1433,"line_end":1433,"column_start":5,"column_end":68}},{"value":"/                             0.0,       0.0,       1.0, 0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":721958,"byte_end":722021,"line_start":1434,"line_end":1434,"column_start":5,"column_end":68}},{"value":"/                             0.0,       0.0,       0.0, 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":722026,"byte_end":722090,"line_start":1435,"line_end":1435,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":722095,"byte_end":722098,"line_start":1436,"line_end":1436,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot.to_homogeneous(), expected, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":722103,"byte_end":722177,"line_start":1437,"line_end":1437,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":722182,"byte_end":722189,"line_start":1438,"line_end":1438,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":722194,"byte_end":722203,"line_start":1439,"line_end":1439,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6840},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":722917,"byte_end":722932,"line_start":1460,"line_end":1460,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<UnitQuaternion<N>>::transform_point","value":"pub fn transform_point(&Self, &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate a point by this unit quaternion.","sig":null,"attributes":[{"value":"/ Rotate a point by this unit quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":722315,"byte_end":722358,"line_start":1444,"line_end":1444,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":722363,"byte_end":722366,"line_start":1445,"line_end":1445,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":722371,"byte_end":722426,"line_start":1446,"line_end":1446,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":722431,"byte_end":722434,"line_start":1447,"line_end":1447,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":722439,"byte_end":722452,"line_start":1448,"line_end":1448,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":722457,"byte_end":722460,"line_start":1449,"line_end":1449,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":722465,"byte_end":722472,"line_start":1450,"line_end":1450,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":722477,"byte_end":722516,"line_start":1451,"line_end":1451,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":722521,"byte_end":722540,"line_start":1452,"line_end":1452,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Point3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":722545,"byte_end":722599,"line_start":1453,"line_end":1453,"column_start":5,"column_end":59}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":722604,"byte_end":722694,"line_start":1454,"line_end":1454,"column_start":5,"column_end":95}},{"value":"/ let transformed_point = rot.transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":722699,"byte_end":722776,"line_start":1455,"line_end":1455,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":722781,"byte_end":722784,"line_start":1456,"line_end":1456,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(3.0, 2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":722789,"byte_end":722879,"line_start":1457,"line_end":1457,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":722884,"byte_end":722891,"line_start":1458,"line_end":1458,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":722896,"byte_end":722905,"line_start":1459,"line_end":1459,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6841},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":723599,"byte_end":723615,"line_start":1480,"line_end":1480,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<UnitQuaternion<N>>::transform_vector","value":"pub fn transform_vector(&Self, &Vector3<N>) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate a vector by this unit quaternion.","sig":null,"attributes":[{"value":"/ Rotate a vector by this unit quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":723000,"byte_end":723044,"line_start":1464,"line_end":1464,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":723049,"byte_end":723052,"line_start":1465,"line_end":1465,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * v`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":723057,"byte_end":723111,"line_start":1466,"line_end":1466,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":723116,"byte_end":723119,"line_start":1467,"line_end":1467,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":723124,"byte_end":723137,"line_start":1468,"line_end":1468,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":723142,"byte_end":723145,"line_start":1469,"line_end":1469,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":723150,"byte_end":723157,"line_start":1470,"line_end":1470,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":723162,"byte_end":723201,"line_start":1471,"line_end":1471,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":723206,"byte_end":723225,"line_start":1472,"line_end":1472,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":723230,"byte_end":723276,"line_start":1473,"line_end":1473,"column_start":5,"column_end":51}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":723281,"byte_end":723371,"line_start":1474,"line_end":1474,"column_start":5,"column_end":95}},{"value":"/ let transformed_vector = rot.transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":723376,"byte_end":723456,"line_start":1475,"line_end":1475,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":723461,"byte_end":723464,"line_start":1476,"line_end":1476,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(3.0, 2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":723469,"byte_end":723561,"line_start":1477,"line_end":1477,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":723566,"byte_end":723573,"line_start":1478,"line_end":1478,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":723578,"byte_end":723587,"line_start":1479,"line_end":1479,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6842},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":724339,"byte_end":724362,"line_start":1500,"line_end":1500,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<UnitQuaternion<N>>::inverse_transform_point","value":"pub fn inverse_transform_point(&Self, &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate a point by the inverse of this unit quaternion. This may be\n cheaper than inverting the unit quaternion and transforming the\n point.","sig":null,"attributes":[{"value":"/ Rotate a point by the inverse of this unit quaternion. This may be","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":723683,"byte_end":723753,"line_start":1484,"line_end":1484,"column_start":5,"column_end":75}},{"value":"/ cheaper than inverting the unit quaternion and transforming the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":723758,"byte_end":723825,"line_start":1485,"line_end":1485,"column_start":5,"column_end":72}},{"value":"/ point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":723830,"byte_end":723840,"line_start":1486,"line_end":1486,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":723845,"byte_end":723848,"line_start":1487,"line_end":1487,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":723853,"byte_end":723866,"line_start":1488,"line_end":1488,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":723871,"byte_end":723874,"line_start":1489,"line_end":1489,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":723879,"byte_end":723886,"line_start":1490,"line_end":1490,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":723891,"byte_end":723930,"line_start":1491,"line_end":1491,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":723935,"byte_end":723954,"line_start":1492,"line_end":1492,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Point3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":723959,"byte_end":724013,"line_start":1493,"line_end":1493,"column_start":5,"column_end":59}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":724018,"byte_end":724108,"line_start":1494,"line_end":1494,"column_start":5,"column_end":95}},{"value":"/ let transformed_point = rot.inverse_transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":724113,"byte_end":724198,"line_start":1495,"line_end":1495,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":724203,"byte_end":724206,"line_start":1496,"line_end":1496,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(-3.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":724211,"byte_end":724301,"line_start":1497,"line_end":1497,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":724306,"byte_end":724313,"line_start":1498,"line_end":1498,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":724318,"byte_end":724327,"line_start":1499,"line_end":1499,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6843},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":725251,"byte_end":725275,"line_start":1522,"line_end":1522,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<UnitQuaternion<N>>::inverse_transform_vector","value":"pub fn inverse_transform_vector(&Self, &Vector3<N>) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate a vector by the inverse of this unit quaternion. This may be\n cheaper than inverting the unit quaternion and transforming the\n vector.","sig":null,"attributes":[{"value":"/ Rotate a vector by the inverse of this unit quaternion. This may be","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":724596,"byte_end":724667,"line_start":1506,"line_end":1506,"column_start":5,"column_end":76}},{"value":"/ cheaper than inverting the unit quaternion and transforming the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":724672,"byte_end":724739,"line_start":1507,"line_end":1507,"column_start":5,"column_end":72}},{"value":"/ vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":724744,"byte_end":724755,"line_start":1508,"line_end":1508,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":724760,"byte_end":724763,"line_start":1509,"line_end":1509,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":724768,"byte_end":724781,"line_start":1510,"line_end":1510,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":724786,"byte_end":724789,"line_start":1511,"line_end":1511,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":724794,"byte_end":724801,"line_start":1512,"line_end":1512,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":724806,"byte_end":724845,"line_start":1513,"line_end":1513,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":724850,"byte_end":724869,"line_start":1514,"line_end":1514,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":724874,"byte_end":724920,"line_start":1515,"line_end":1515,"column_start":5,"column_end":51}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":724925,"byte_end":725015,"line_start":1516,"line_end":1516,"column_start":5,"column_end":95}},{"value":"/ let transformed_vector = rot.inverse_transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":725020,"byte_end":725108,"line_start":1517,"line_end":1517,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":725113,"byte_end":725116,"line_start":1518,"line_end":1518,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(-3.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":725121,"byte_end":725213,"line_start":1519,"line_end":1519,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":725218,"byte_end":725225,"line_start":1520,"line_end":1520,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":725230,"byte_end":725239,"line_start":1521,"line_end":1521,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6844},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":725993,"byte_end":726022,"line_start":1542,"line_end":1542,"column_start":12,"column_end":41},"name":"inverse_transform_unit_vector","qualname":"<UnitQuaternion<N>>::inverse_transform_unit_vector","value":"pub fn inverse_transform_unit_vector(&Self, &Unit<Vector3<N>>)\n-> Unit<Vector3<N>>","parent":null,"children":[],"decl_id":null,"docs":" Rotate a vector by the inverse of this unit quaternion. This may be\n cheaper than inverting the unit quaternion and transforming the\n vector.","sig":null,"attributes":[{"value":"/ Rotate a vector by the inverse of this unit quaternion. This may be","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":725353,"byte_end":725424,"line_start":1526,"line_end":1526,"column_start":5,"column_end":76}},{"value":"/ cheaper than inverting the unit quaternion and transforming the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":725429,"byte_end":725496,"line_start":1527,"line_end":1527,"column_start":5,"column_end":72}},{"value":"/ vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":725501,"byte_end":725512,"line_start":1528,"line_end":1528,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":725517,"byte_end":725520,"line_start":1529,"line_end":1529,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":725525,"byte_end":725538,"line_start":1530,"line_end":1530,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":725543,"byte_end":725546,"line_start":1531,"line_end":1531,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":725551,"byte_end":725558,"line_start":1532,"line_end":1532,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":725563,"byte_end":725602,"line_start":1533,"line_end":1533,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":725607,"byte_end":725626,"line_start":1534,"line_end":1534,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":725631,"byte_end":725677,"line_start":1535,"line_end":1535,"column_start":5,"column_end":51}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&Vector3::z_axis(), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":725682,"byte_end":725772,"line_start":1536,"line_end":1536,"column_start":5,"column_end":95}},{"value":"/ let transformed_vector = rot.inverse_transform_unit_vector(&Vector3::x_axis());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":725777,"byte_end":725860,"line_start":1537,"line_end":1537,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":725865,"byte_end":725868,"line_start":1538,"line_end":1538,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_vector, -Vector3::y_axis(), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":725873,"byte_end":725955,"line_start":1539,"line_end":1539,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":725960,"byte_end":725967,"line_start":1540,"line_end":1540,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":725972,"byte_end":725981,"line_start":1541,"line_end":1541,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6935},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":728778,"byte_end":728789,"line_start":27,"line_end":27,"column_start":12,"column_end":23},"name":"from_vector","qualname":"<Quaternion<N>>::from_vector","value":"pub fn from_vector(Vector4<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a quaternion from a 4D vector. The quaternion scalar part corresponds to the `w`\n vector component.\n","sig":null,"attributes":[{"value":"/ Creates a quaternion from a 4D vector. The quaternion scalar part corresponds to the `w`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":728584,"byte_end":728676,"line_start":23,"line_end":23,"column_start":5,"column_end":97}},{"value":"/ vector component.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":728681,"byte_end":728702,"line_start":24,"line_end":24,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":728707,"byte_end":728716,"line_start":25,"line_end":25,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"Use `::from` instead.\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":728721,"byte_end":728766,"line_start":26,"line_end":26,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":6936},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":729451,"byte_end":729454,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Quaternion<N>>::new","value":"pub fn new(N, N, N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new quaternion from its individual components. Note that the arguments order does\n **not** follow the storage order.","sig":null,"attributes":[{"value":"/ Creates a new quaternion from its individual components. Note that the arguments order does","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":728863,"byte_end":728958,"line_start":31,"line_end":31,"column_start":5,"column_end":100}},{"value":"/ **not** follow the storage order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":728963,"byte_end":729000,"line_start":32,"line_end":32,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":729005,"byte_end":729008,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The storage order is `[ i, j, k, w ]` while the arguments for this functions are in the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":729013,"byte_end":729104,"line_start":34,"line_end":34,"column_start":5,"column_end":96}},{"value":"/ order `(w, i, j, k)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":729109,"byte_end":729134,"line_start":35,"line_end":35,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":729139,"byte_end":729142,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":729147,"byte_end":729160,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":729165,"byte_end":729172,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Quaternion, Vector4};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":729177,"byte_end":729219,"line_start":39,"line_end":39,"column_start":5,"column_end":47}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":729224,"byte_end":729272,"line_start":40,"line_end":40,"column_start":5,"column_end":53}},{"value":"/ assert!(q.i == 2.0 && q.j == 3.0 && q.k == 4.0 && q.w == 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":729277,"byte_end":729343,"line_start":41,"line_end":41,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(*q.as_vector(), Vector4::new(2.0, 3.0, 4.0, 1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":729348,"byte_end":729413,"line_start":42,"line_end":42,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":729418,"byte_end":729425,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":729430,"byte_end":729439,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6939},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":729645,"byte_end":729654,"line_start":53,"line_end":53,"column_start":12,"column_end":21},"name":"from_imag","qualname":"<Quaternion<N>>::from_imag","value":"pub fn from_imag(Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a pure quaternion.\n","sig":null,"attributes":[{"value":"/ Constructs a pure quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":729586,"byte_end":729619,"line_start":51,"line_end":51,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":729624,"byte_end":729633,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6940},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":730368,"byte_end":730378,"line_start":73,"line_end":73,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Quaternion<N>>::from_parts","value":"pub fn from_parts<SB>(N, Vector<N, U3, SB>) -> Self where SB: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new quaternion from its scalar and vector parts. Note that the arguments order does\n **not** follow the storage order.","sig":null,"attributes":[{"value":"/ Creates a new quaternion from its scalar and vector parts. Note that the arguments order does","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":729740,"byte_end":729837,"line_start":57,"line_end":57,"column_start":5,"column_end":102}},{"value":"/ **not** follow the storage order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":729842,"byte_end":729879,"line_start":58,"line_end":58,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":729884,"byte_end":729887,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ The storage order is [ vector, scalar ].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":729892,"byte_end":729936,"line_start":60,"line_end":60,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":729941,"byte_end":729944,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":729949,"byte_end":729962,"line_start":62,"line_end":62,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":729967,"byte_end":729974,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Quaternion, Vector3, Vector4};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":729979,"byte_end":730030,"line_start":64,"line_end":64,"column_start":5,"column_end":56}},{"value":"/ let w = 1.0;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":730035,"byte_end":730051,"line_start":65,"line_end":65,"column_start":5,"column_end":21}},{"value":"/ let ijk = Vector3::new(2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":730056,"byte_end":730098,"line_start":66,"line_end":66,"column_start":5,"column_end":47}},{"value":"/ let q = Quaternion::from_parts(w, ijk);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":730103,"byte_end":730146,"line_start":67,"line_end":67,"column_start":5,"column_end":48}},{"value":"/ assert!(q.i == 2.0 && q.j == 3.0 && q.k == 4.0 && q.w == 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":730151,"byte_end":730217,"line_start":68,"line_end":68,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(*q.as_vector(), Vector4::new(2.0, 3.0, 4.0, 1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":730222,"byte_end":730287,"line_start":69,"line_end":69,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":730292,"byte_end":730299,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":730304,"byte_end":730313,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6942},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":730602,"byte_end":730611,"line_start":82,"line_end":82,"column_start":12,"column_end":21},"name":"from_real","qualname":"<Quaternion<N>>::from_real","value":"pub fn from_real(N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a real quaternion.\n","sig":null,"attributes":[{"value":"/ Constructs a real quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":730543,"byte_end":730576,"line_start":80,"line_end":80,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":730581,"byte_end":730590,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6943},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":731005,"byte_end":731013,"line_start":98,"line_end":98,"column_start":12,"column_end":20},"name":"identity","qualname":"<Quaternion<N>>::identity","value":"pub fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" The quaternion multiplicative identity.","sig":null,"attributes":[{"value":"/ The quaternion multiplicative identity.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":730684,"byte_end":730727,"line_start":86,"line_end":86,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":730732,"byte_end":730735,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":730740,"byte_end":730753,"line_start":88,"line_end":88,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":730758,"byte_end":730765,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":730770,"byte_end":730801,"line_start":90,"line_end":90,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::identity();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":730806,"byte_end":730841,"line_start":91,"line_end":91,"column_start":5,"column_end":40}},{"value":"/ let q2 = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":730846,"byte_end":730895,"line_start":92,"line_end":92,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":730900,"byte_end":730903,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(q * q2, q2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":730908,"byte_end":730935,"line_start":94,"line_end":94,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(q2 * q, q2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":730940,"byte_end":730967,"line_start":95,"line_end":95,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":730972,"byte_end":730979,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":730984,"byte_end":730993,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6946},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":731365,"byte_end":731389,"line_start":112,"line_end":112,"column_start":12,"column_end":36},"name":"from_polar_decomposition","qualname":"<Quaternion<N>>::from_polar_decomposition","value":"pub fn from_polar_decomposition<SB>(N, N, Unit<Vector<N, U3, SB>>) -> Self\nwhere SB: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new quaternion from its polar decomposition.","sig":null,"attributes":[{"value":"/ Creates a new quaternion from its polar decomposition.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":731189,"byte_end":731247,"line_start":108,"line_end":108,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":731252,"byte_end":731255,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Note that `axis` is assumed to be a unit vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":731260,"byte_end":731312,"line_start":110,"line_end":110,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":6962},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":733211,"byte_end":733219,"line_start":193,"line_end":193,"column_start":12,"column_end":20},"name":"identity","qualname":"<UnitQuaternion<N>>::identity","value":"pub fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" The rotation identity.","sig":null,"attributes":[{"value":"/ The rotation identity.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":732735,"byte_end":732761,"line_start":177,"line_end":177,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":732766,"byte_end":732769,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":732774,"byte_end":732787,"line_start":179,"line_end":179,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":732792,"byte_end":732799,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Point3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":732804,"byte_end":732858,"line_start":181,"line_end":181,"column_start":5,"column_end":59}},{"value":"/ let q = UnitQuaternion::identity();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":732863,"byte_end":732902,"line_start":182,"line_end":182,"column_start":5,"column_end":44}},{"value":"/ let q2 = UnitQuaternion::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":732907,"byte_end":732969,"line_start":183,"line_end":183,"column_start":5,"column_end":67}},{"value":"/ let v = Vector3::new_random();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":732974,"byte_end":733008,"line_start":184,"line_end":184,"column_start":5,"column_end":39}},{"value":"/ let p = Point3::from(v);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":733013,"byte_end":733041,"line_start":185,"line_end":185,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":733046,"byte_end":733049,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(q * q2, q2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":733054,"byte_end":733081,"line_start":187,"line_end":187,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(q2 * q, q2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":733086,"byte_end":733113,"line_start":188,"line_end":188,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(q * v, v);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":733118,"byte_end":733143,"line_start":189,"line_end":189,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(q * p, p);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":733148,"byte_end":733173,"line_start":190,"line_end":190,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":733178,"byte_end":733185,"line_start":191,"line_end":191,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":733190,"byte_end":733199,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6963},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":734326,"byte_end":734341,"line_start":221,"line_end":221,"column_start":12,"column_end":27},"name":"from_axis_angle","qualname":"<UnitQuaternion<N>>::from_axis_angle","value":"pub fn from_axis_angle<SB>(&Unit<Vector<N, U3, SB>>, N) -> Self where\nSB: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new quaternion from a unit vector (the rotation axis) and an angle\n (the rotation angle).","sig":null,"attributes":[{"value":"/ Creates a new quaternion from a unit vector (the rotation axis) and an angle","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":733295,"byte_end":733375,"line_start":197,"line_end":197,"column_start":5,"column_end":85}},{"value":"/ (the rotation angle).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":733380,"byte_end":733405,"line_start":198,"line_end":198,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":733410,"byte_end":733413,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":733418,"byte_end":733431,"line_start":200,"line_end":200,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":733436,"byte_end":733443,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":733448,"byte_end":733487,"line_start":202,"line_end":202,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":733492,"byte_end":733511,"line_start":203,"line_end":203,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Point3, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":733516,"byte_end":733570,"line_start":204,"line_end":204,"column_start":5,"column_end":59}},{"value":"/ let axis = Vector3::y_axis();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":733575,"byte_end":733608,"line_start":205,"line_end":205,"column_start":5,"column_end":38}},{"value":"/ let angle = f32::consts::FRAC_PI_2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":733613,"byte_end":733652,"line_start":206,"line_end":206,"column_start":5,"column_end":44}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":733657,"byte_end":733712,"line_start":207,"line_end":207,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":733717,"byte_end":733757,"line_start":208,"line_end":208,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":733762,"byte_end":733804,"line_start":209,"line_end":209,"column_start":5,"column_end":47}},{"value":"/ let q = UnitQuaternion::from_axis_angle(&axis, angle);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":733809,"byte_end":733867,"line_start":210,"line_end":210,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":733872,"byte_end":733875,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(q.axis().unwrap(), axis);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":733880,"byte_end":733920,"line_start":212,"line_end":212,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(q.angle(), angle);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":733925,"byte_end":733958,"line_start":213,"line_end":213,"column_start":5,"column_end":38}},{"value":"/ assert_relative_eq!(q * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":733963,"byte_end":734042,"line_start":214,"line_end":214,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(q * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":734047,"byte_end":734128,"line_start":215,"line_end":215,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":734133,"byte_end":734136,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":734141,"byte_end":734181,"line_start":217,"line_end":217,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(UnitQuaternion::from_scaled_axis(Vector3::<f32>::zeros()), UnitQuaternion::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":734186,"byte_end":734288,"line_start":218,"line_end":218,"column_start":5,"column_end":107}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":734293,"byte_end":734300,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":734305,"byte_end":734314,"line_start":220,"line_end":220,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6965},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":734762,"byte_end":734777,"line_start":235,"line_end":235,"column_start":12,"column_end":27},"name":"from_quaternion","qualname":"<UnitQuaternion<N>>::from_quaternion","value":"pub fn from_quaternion(Quaternion<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion from a quaternion.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion from a quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":734627,"byte_end":734679,"line_start":231,"line_end":231,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":734684,"byte_end":734687,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ The input quaternion will be normalized.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":734692,"byte_end":734736,"line_start":233,"line_end":233,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":734741,"byte_end":734750,"line_start":234,"line_end":234,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6966},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":735443,"byte_end":735460,"line_start":254,"line_end":254,"column_start":12,"column_end":29},"name":"from_euler_angles","qualname":"<UnitQuaternion<N>>::from_euler_angles","value":"pub fn from_euler_angles(N, N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion from Euler angles.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion from Euler angles.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":734848,"byte_end":734900,"line_start":239,"line_end":239,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":734905,"byte_end":734908,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ The primitive rotations are applied in order: 1 roll − 2 pitch − 3 yaw.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":734913,"byte_end":734992,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":734997,"byte_end":735000,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":735005,"byte_end":735018,"line_start":243,"line_end":243,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":735023,"byte_end":735030,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":735035,"byte_end":735074,"line_start":245,"line_end":245,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitQuaternion;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":735079,"byte_end":735114,"line_start":246,"line_end":246,"column_start":5,"column_end":40}},{"value":"/ let rot = UnitQuaternion::from_euler_angles(0.1, 0.2, 0.3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":735119,"byte_end":735182,"line_start":247,"line_end":247,"column_start":5,"column_end":68}},{"value":"/ let euler = rot.euler_angles();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":735187,"byte_end":735222,"line_start":248,"line_end":248,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(euler.0, 0.1, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":735227,"byte_end":735283,"line_start":249,"line_end":249,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.1, 0.2, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":735288,"byte_end":735344,"line_start":250,"line_end":250,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.2, 0.3, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":735349,"byte_end":735405,"line_start":251,"line_end":251,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":735410,"byte_end":735417,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":735422,"byte_end":735431,"line_start":253,"line_end":253,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6967},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":736615,"byte_end":736635,"line_start":284,"line_end":284,"column_start":12,"column_end":32},"name":"from_rotation_matrix","qualname":"<UnitQuaternion<N>>::from_rotation_matrix","value":"pub fn from_rotation_matrix(&Rotation3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds an unit quaternion from a rotation matrix.","sig":null,"attributes":[{"value":"/ Builds an unit quaternion from a rotation matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":735963,"byte_end":736016,"line_start":269,"line_end":269,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":736021,"byte_end":736024,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":736029,"byte_end":736042,"line_start":271,"line_end":271,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":736047,"byte_end":736054,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":736059,"byte_end":736098,"line_start":273,"line_end":273,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":736103,"byte_end":736160,"line_start":274,"line_end":274,"column_start":5,"column_end":62}},{"value":"/ let axis = Vector3::y_axis();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":736165,"byte_end":736198,"line_start":275,"line_end":275,"column_start":5,"column_end":38}},{"value":"/ let angle = 0.1;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":736203,"byte_end":736223,"line_start":276,"line_end":276,"column_start":5,"column_end":25}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, angle);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":736228,"byte_end":736283,"line_start":277,"line_end":277,"column_start":5,"column_end":60}},{"value":"/ let q = UnitQuaternion::from_rotation_matrix(&rot);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":736288,"byte_end":736343,"line_start":278,"line_end":278,"column_start":5,"column_end":60}},{"value":"/ assert_relative_eq!(q.to_rotation_matrix(), rot, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":736348,"byte_end":736419,"line_start":279,"line_end":279,"column_start":5,"column_end":76}},{"value":"/ assert_relative_eq!(q.axis().unwrap(), rot.axis().unwrap(), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":736424,"byte_end":736506,"line_start":280,"line_end":280,"column_start":5,"column_end":87}},{"value":"/ assert_relative_eq!(q.angle(), rot.angle(), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":736511,"byte_end":736577,"line_start":281,"line_end":281,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":736582,"byte_end":736589,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":736594,"byte_end":736603,"line_start":283,"line_end":283,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6974},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":739517,"byte_end":739528,"line_start":349,"line_end":349,"column_start":12,"column_end":23},"name":"from_matrix","qualname":"<UnitQuaternion<N>>::from_matrix","value":"pub fn from_matrix(&Matrix3<N>) -> Self where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Builds an unit quaternion by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds an unit quaternion by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":739165,"byte_end":739259,"line_start":344,"line_end":344,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":739264,"byte_end":739267,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This is an iterative method. See `.from_matrix_eps` to provide mover","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":739272,"byte_end":739344,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/ convergence parameters and starting solution.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":739349,"byte_end":739398,"line_start":347,"line_end":347,"column_start":5,"column_end":54}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":739403,"byte_end":739505,"line_start":348,"line_end":348,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":6975},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":740449,"byte_end":740464,"line_start":368,"line_end":368,"column_start":12,"column_end":27},"name":"from_matrix_eps","qualname":"<UnitQuaternion<N>>::from_matrix_eps","value":"pub fn from_matrix_eps(&Matrix3<N>, N, usize, Self) -> Self where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Builds an unit quaternion by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds an unit quaternion by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":739643,"byte_end":739737,"line_start":356,"line_end":356,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":739742,"byte_end":739745,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":739750,"byte_end":739852,"line_start":358,"line_end":358,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":739857,"byte_end":739860,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":739865,"byte_end":739881,"line_start":360,"line_end":360,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":739886,"byte_end":739889,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ * `m`: the matrix from which the rotational part is to be extracted.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":739894,"byte_end":739966,"line_start":362,"line_end":362,"column_start":5,"column_end":77}},{"value":"/ * `eps`: the angular errors tolerated between the current rotation and the optimal one.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":739971,"byte_end":740062,"line_start":363,"line_end":363,"column_start":5,"column_end":96}},{"value":"/ * `max_iter`: the maximum number of iterations. Loops indefinitely until convergence if set to `0`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":740067,"byte_end":740170,"line_start":364,"line_end":364,"column_start":5,"column_end":108}},{"value":"/ * `guess`: an estimate of the solution. Convergence will be significantly faster if an initial solution close","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":740175,"byte_end":740288,"line_start":365,"line_end":365,"column_start":5,"column_end":118}},{"value":"/           to the actual solution is provided. Can be set to `UnitQuaternion::identity()` if no other","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":740293,"byte_end":740397,"line_start":366,"line_end":366,"column_start":5,"column_end":109}},{"value":"/           guesses come to mind.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":740402,"byte_end":740437,"line_start":367,"line_end":367,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":6976},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":741346,"byte_end":741362,"line_start":391,"line_end":391,"column_start":12,"column_end":28},"name":"rotation_between","qualname":"<UnitQuaternion<N>>::rotation_between","value":"pub fn rotation_between<SB, SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>)\n-> Option<Self> where N: RealField, SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" The unit quaternion needed to make `a` and `b` be collinear and point toward the same\n direction. Returns `None` if both `a` and `b` are collinear and point to opposite directions, as then the\n rotation desired is not unique.","sig":null,"attributes":[{"value":"/ The unit quaternion needed to make `a` and `b` be collinear and point toward the same","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":740687,"byte_end":740776,"line_start":376,"line_end":376,"column_start":5,"column_end":94}},{"value":"/ direction. Returns `None` if both `a` and `b` are collinear and point to opposite directions, as then the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":740781,"byte_end":740890,"line_start":377,"line_end":377,"column_start":5,"column_end":114}},{"value":"/ rotation desired is not unique.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":740895,"byte_end":740930,"line_start":378,"line_end":378,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":740935,"byte_end":740938,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":740943,"byte_end":740956,"line_start":380,"line_end":380,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":740961,"byte_end":740968,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":740973,"byte_end":741012,"line_start":382,"line_end":382,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector3, UnitQuaternion};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":741017,"byte_end":741063,"line_start":383,"line_end":383,"column_start":5,"column_end":51}},{"value":"/ let a = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":741068,"byte_end":741108,"line_start":384,"line_end":384,"column_start":5,"column_end":45}},{"value":"/ let b = Vector3::new(3.0, 1.0, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":741113,"byte_end":741153,"line_start":385,"line_end":385,"column_start":5,"column_end":45}},{"value":"/ let q = UnitQuaternion::rotation_between(&a, &b).unwrap();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":741158,"byte_end":741220,"line_start":386,"line_end":386,"column_start":5,"column_end":67}},{"value":"/ assert_relative_eq!(q * a, b);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":741225,"byte_end":741259,"line_start":387,"line_end":387,"column_start":5,"column_end":39}},{"value":"/ assert_relative_eq!(q.inverse() * b, a);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":741264,"byte_end":741308,"line_start":388,"line_end":388,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":741313,"byte_end":741320,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":741325,"byte_end":741334,"line_start":390,"line_end":390,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6979},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":742286,"byte_end":742309,"line_start":415,"line_end":415,"column_start":12,"column_end":35},"name":"scaled_rotation_between","qualname":"<UnitQuaternion<N>>::scaled_rotation_between","value":"pub fn scaled_rotation_between<SB,\n                               SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>, N)\n-> Option<Self> where N: RealField, SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":741592,"byte_end":741680,"line_start":400,"line_end":400,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":741685,"byte_end":741724,"line_start":401,"line_end":401,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":741729,"byte_end":741732,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":741737,"byte_end":741750,"line_start":403,"line_end":403,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":741755,"byte_end":741762,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":741767,"byte_end":741806,"line_start":405,"line_end":405,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector3, UnitQuaternion};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":741811,"byte_end":741857,"line_start":406,"line_end":406,"column_start":5,"column_end":51}},{"value":"/ let a = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":741862,"byte_end":741902,"line_start":407,"line_end":407,"column_start":5,"column_end":45}},{"value":"/ let b = Vector3::new(3.0, 1.0, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":741907,"byte_end":741947,"line_start":408,"line_end":408,"column_start":5,"column_end":45}},{"value":"/ let q2 = UnitQuaternion::scaled_rotation_between(&a, &b, 0.2).unwrap();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":741952,"byte_end":742027,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/ let q5 = UnitQuaternion::scaled_rotation_between(&a, &b, 0.5).unwrap();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":742032,"byte_end":742107,"line_start":410,"line_end":410,"column_start":5,"column_end":80}},{"value":"/ assert_relative_eq!(q2 * q2 * q2 * q2 * q2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":742112,"byte_end":742185,"line_start":411,"line_end":411,"column_start":5,"column_end":78}},{"value":"/ assert_relative_eq!(q5 * q5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":742190,"byte_end":742248,"line_start":412,"line_end":412,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":742253,"byte_end":742260,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":742265,"byte_end":742274,"line_start":414,"line_end":414,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6982},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":743427,"byte_end":743448,"line_start":450,"line_end":450,"column_start":12,"column_end":33},"name":"rotation_between_axis","qualname":"<UnitQuaternion<N>>::rotation_between_axis","value":"pub fn rotation_between_axis<SB,\n                             SC>(&Unit<Vector<N, U3, SB>>,\n                                 &Unit<Vector<N, U3, SC>>) -> Option<Self>\nwhere N: RealField, SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" The unit quaternion needed to make `a` and `b` be collinear and point toward the same\n direction.","sig":null,"attributes":[{"value":"/ The unit quaternion needed to make `a` and `b` be collinear and point toward the same","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":742855,"byte_end":742944,"line_start":436,"line_end":436,"column_start":5,"column_end":94}},{"value":"/ direction.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":742949,"byte_end":742963,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":742968,"byte_end":742971,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":742976,"byte_end":742989,"line_start":439,"line_end":439,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":742994,"byte_end":743001,"line_start":440,"line_end":440,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":743006,"byte_end":743045,"line_start":441,"line_end":441,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Unit, Vector3, UnitQuaternion};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":743050,"byte_end":743102,"line_start":442,"line_end":442,"column_start":5,"column_end":57}},{"value":"/ let a = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":743107,"byte_end":743168,"line_start":443,"line_end":443,"column_start":5,"column_end":66}},{"value":"/ let b = Unit::new_normalize(Vector3::new(3.0, 1.0, 2.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":743173,"byte_end":743234,"line_start":444,"line_end":444,"column_start":5,"column_end":66}},{"value":"/ let q = UnitQuaternion::rotation_between(&a, &b).unwrap();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":743239,"byte_end":743301,"line_start":445,"line_end":445,"column_start":5,"column_end":67}},{"value":"/ assert_relative_eq!(q * a, b);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":743306,"byte_end":743340,"line_start":446,"line_end":446,"column_start":5,"column_end":39}},{"value":"/ assert_relative_eq!(q.inverse() * b, a);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":743345,"byte_end":743389,"line_start":447,"line_end":447,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":743394,"byte_end":743401,"line_start":448,"line_end":448,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":743406,"byte_end":743415,"line_start":449,"line_end":449,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6985},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":744460,"byte_end":744488,"line_start":477,"line_end":477,"column_start":12,"column_end":40},"name":"scaled_rotation_between_axis","qualname":"<UnitQuaternion<N>>::scaled_rotation_between_axis","value":"pub fn scaled_rotation_between_axis<SB,\n                                    SC>(&Unit<Vector<N, U3, SB>>,\n                                        &Unit<Vector<N, U3, SC>>, N)\n-> Option<Self> where N: RealField, SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":743718,"byte_end":743806,"line_start":462,"line_end":462,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":743811,"byte_end":743850,"line_start":463,"line_end":463,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":743855,"byte_end":743858,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":743863,"byte_end":743876,"line_start":465,"line_end":465,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":743881,"byte_end":743888,"line_start":466,"line_end":466,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":743893,"byte_end":743932,"line_start":467,"line_end":467,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Unit, Vector3, UnitQuaternion};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":743937,"byte_end":743989,"line_start":468,"line_end":468,"column_start":5,"column_end":57}},{"value":"/ let a = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":743994,"byte_end":744055,"line_start":469,"line_end":469,"column_start":5,"column_end":66}},{"value":"/ let b = Unit::new_normalize(Vector3::new(3.0, 1.0, 2.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":744060,"byte_end":744121,"line_start":470,"line_end":470,"column_start":5,"column_end":66}},{"value":"/ let q2 = UnitQuaternion::scaled_rotation_between(&a, &b, 0.2).unwrap();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":744126,"byte_end":744201,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/ let q5 = UnitQuaternion::scaled_rotation_between(&a, &b, 0.5).unwrap();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":744206,"byte_end":744281,"line_start":472,"line_end":472,"column_start":5,"column_end":80}},{"value":"/ assert_relative_eq!(q2 * q2 * q2 * q2 * q2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":744286,"byte_end":744359,"line_start":473,"line_end":473,"column_start":5,"column_end":78}},{"value":"/ assert_relative_eq!(q5 * q5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":744364,"byte_end":744422,"line_start":474,"line_end":474,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":744427,"byte_end":744434,"line_start":475,"line_end":475,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":744439,"byte_end":744448,"line_start":476,"line_end":476,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6988},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":746406,"byte_end":746418,"line_start":536,"line_end":536,"column_start":12,"column_end":24},"name":"face_towards","qualname":"<UnitQuaternion<N>>::face_towards","value":"pub fn face_towards<SB, SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>) -> Self\nwhere SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unit quaternion that corresponds to the local frame of an observer standing at the\n origin and looking toward `dir`.","sig":null,"attributes":[{"value":"/ Creates an unit quaternion that corresponds to the local frame of an observer standing at the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":745503,"byte_end":745600,"line_start":513,"line_end":513,"column_start":5,"column_end":102}},{"value":"/ origin and looking toward `dir`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":745605,"byte_end":745641,"line_start":514,"line_end":514,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":745646,"byte_end":745649,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ It maps the `z` axis to the direction `dir`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":745654,"byte_end":745702,"line_start":516,"line_end":516,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":745707,"byte_end":745710,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":745715,"byte_end":745730,"line_start":518,"line_end":518,"column_start":5,"column_end":20}},{"value":"/   * dir - The look direction. It does not need to be normalized.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":745735,"byte_end":745803,"line_start":519,"line_end":519,"column_start":5,"column_end":73}},{"value":"/   * up - The vertical direction. It does not need to be normalized.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":745808,"byte_end":745879,"line_start":520,"line_end":520,"column_start":5,"column_end":76}},{"value":"/   The only requirement of this parameter is to not be collinear to `dir`. Non-collinearity","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":745884,"byte_end":745978,"line_start":521,"line_end":521,"column_start":5,"column_end":99}},{"value":"/   is not checked.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":745983,"byte_end":746004,"line_start":522,"line_end":522,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":746009,"byte_end":746012,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":746017,"byte_end":746030,"line_start":524,"line_end":524,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":746035,"byte_end":746042,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":746047,"byte_end":746086,"line_start":526,"line_end":526,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":746091,"byte_end":746110,"line_start":527,"line_end":527,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":746115,"byte_end":746161,"line_start":528,"line_end":528,"column_start":5,"column_end":51}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":746166,"byte_end":746208,"line_start":529,"line_end":529,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":746213,"byte_end":746239,"line_start":530,"line_end":530,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":746244,"byte_end":746247,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ let q = UnitQuaternion::face_towards(&dir, &up);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":746252,"byte_end":746304,"line_start":532,"line_end":532,"column_start":5,"column_end":57}},{"value":"/ assert_relative_eq!(q * Vector3::z(), dir.normalize());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":746309,"byte_end":746368,"line_start":533,"line_end":533,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":746373,"byte_end":746380,"line_start":534,"line_end":534,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":746385,"byte_end":746394,"line_start":535,"line_end":535,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6991},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":746762,"byte_end":746781,"line_start":546,"line_end":546,"column_start":12,"column_end":31},"name":"new_observer_frames","qualname":"<UnitQuaternion<N>>::new_observer_frames","value":"pub fn new_observer_frames<SB, SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>)\n-> Self where SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated: Use [UnitQuaternion::face_towards] instead.\n","sig":null,"attributes":[{"value":"/ Deprecated: Use [UnitQuaternion::face_towards] instead.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":746637,"byte_end":746696,"line_start":544,"line_end":544,"column_start":5,"column_end":64}},{"value":"deprecated(note = \"renamed to `face_towards`\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":746701,"byte_end":746750,"line_start":545,"line_end":545,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6994},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":747933,"byte_end":747943,"line_start":577,"line_end":577,"column_start":12,"column_end":22},"name":"look_at_rh","qualname":"<UnitQuaternion<N>>::look_at_rh","value":"pub fn look_at_rh<SB, SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>) -> Self\nwhere SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Builds a right-handed look-at view matrix without translation.","sig":null,"attributes":[{"value":"/ Builds a right-handed look-at view matrix without translation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":746966,"byte_end":747032,"line_start":554,"line_end":554,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":747037,"byte_end":747040,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ It maps the view direction `dir` to the **negative** `z` axis.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":747045,"byte_end":747111,"line_start":556,"line_end":556,"column_start":5,"column_end":71}},{"value":"/ This conforms to the common notion of right handed look-at matrix from the computer","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":747116,"byte_end":747203,"line_start":557,"line_end":557,"column_start":5,"column_end":92}},{"value":"/ graphics community.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":747208,"byte_end":747231,"line_start":558,"line_end":558,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":747236,"byte_end":747239,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":747244,"byte_end":747259,"line_start":560,"line_end":560,"column_start":5,"column_end":20}},{"value":"/   * dir − The view direction. It does not need to be normalized.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":747264,"byte_end":747334,"line_start":561,"line_end":561,"column_start":5,"column_end":73}},{"value":"/   * up - A vector approximately aligned with required the vertical axis. It does not need","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":747339,"byte_end":747432,"line_start":562,"line_end":562,"column_start":5,"column_end":98}},{"value":"/   to be normalized. The only requirement of this parameter is to not be collinear to `dir`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":747437,"byte_end":747532,"line_start":563,"line_end":563,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":747537,"byte_end":747540,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":747545,"byte_end":747558,"line_start":565,"line_end":565,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":747563,"byte_end":747570,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":747575,"byte_end":747614,"line_start":567,"line_end":567,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":747619,"byte_end":747638,"line_start":568,"line_end":568,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":747643,"byte_end":747689,"line_start":569,"line_end":569,"column_start":5,"column_end":51}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":747694,"byte_end":747736,"line_start":570,"line_end":570,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":747741,"byte_end":747767,"line_start":571,"line_end":571,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":747772,"byte_end":747775,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ let q = UnitQuaternion::look_at_rh(&dir, &up);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":747780,"byte_end":747830,"line_start":573,"line_end":573,"column_start":5,"column_end":55}},{"value":"/ assert_relative_eq!(q * dir.normalize(), -Vector3::z());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":747835,"byte_end":747895,"line_start":574,"line_end":574,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":747900,"byte_end":747907,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":747912,"byte_end":747921,"line_start":576,"line_end":576,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6997},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":749069,"byte_end":749079,"line_start":608,"line_end":608,"column_start":12,"column_end":22},"name":"look_at_lh","qualname":"<UnitQuaternion<N>>::look_at_lh","value":"pub fn look_at_lh<SB, SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>) -> Self\nwhere SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Builds a left-handed look-at view matrix without translation.","sig":null,"attributes":[{"value":"/ Builds a left-handed look-at view matrix without translation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":748140,"byte_end":748205,"line_start":585,"line_end":585,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":748210,"byte_end":748213,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ It maps the view direction `dir` to the **positive** `z` axis.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":748218,"byte_end":748284,"line_start":587,"line_end":587,"column_start":5,"column_end":71}},{"value":"/ This conforms to the common notion of left handed look-at matrix from the computer","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":748289,"byte_end":748375,"line_start":588,"line_end":588,"column_start":5,"column_end":91}},{"value":"/ graphics community.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":748380,"byte_end":748403,"line_start":589,"line_end":589,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":748408,"byte_end":748411,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":748416,"byte_end":748431,"line_start":591,"line_end":591,"column_start":5,"column_end":20}},{"value":"/   * dir − The view direction. It does not need to be normalized.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":748436,"byte_end":748506,"line_start":592,"line_end":592,"column_start":5,"column_end":73}},{"value":"/   * up - A vector approximately aligned with required the vertical axis. The only","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":748511,"byte_end":748596,"line_start":593,"line_end":593,"column_start":5,"column_end":90}},{"value":"/   requirement of this parameter is to not be collinear to `dir`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":748601,"byte_end":748669,"line_start":594,"line_end":594,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":748674,"byte_end":748677,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":748682,"byte_end":748695,"line_start":596,"line_end":596,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":748700,"byte_end":748707,"line_start":597,"line_end":597,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":748712,"byte_end":748751,"line_start":598,"line_end":598,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":748756,"byte_end":748775,"line_start":599,"line_end":599,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":748780,"byte_end":748826,"line_start":600,"line_end":600,"column_start":5,"column_end":51}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":748831,"byte_end":748873,"line_start":601,"line_end":601,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":748878,"byte_end":748904,"line_start":602,"line_end":602,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":748909,"byte_end":748912,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ let q = UnitQuaternion::look_at_lh(&dir, &up);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":748917,"byte_end":748967,"line_start":604,"line_end":604,"column_start":5,"column_end":55}},{"value":"/ assert_relative_eq!(q * dir.normalize(), Vector3::z());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":748972,"byte_end":749031,"line_start":605,"line_end":605,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":749036,"byte_end":749043,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":749048,"byte_end":749057,"line_start":607,"line_end":607,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7000},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":750278,"byte_end":750281,"line_start":638,"line_end":638,"column_start":12,"column_end":15},"name":"new","qualname":"<UnitQuaternion<N>>::new","value":"pub fn new<SB>(Vector<N, U3, SB>) -> Self where SB: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":749274,"byte_end":749367,"line_start":616,"line_end":616,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":749372,"byte_end":749375,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ If `axisangle` has a magnitude smaller than `N::default_epsilon()`, this returns the identity rotation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":749380,"byte_end":749487,"line_start":618,"line_end":618,"column_start":5,"column_end":112}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":749492,"byte_end":749495,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":749500,"byte_end":749513,"line_start":620,"line_end":620,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":749518,"byte_end":749525,"line_start":621,"line_end":621,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":749530,"byte_end":749569,"line_start":622,"line_end":622,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":749574,"byte_end":749593,"line_start":623,"line_end":623,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Point3, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":749598,"byte_end":749652,"line_start":624,"line_end":624,"column_start":5,"column_end":59}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":749657,"byte_end":749715,"line_start":625,"line_end":625,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":749720,"byte_end":749775,"line_start":626,"line_end":626,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":749780,"byte_end":749820,"line_start":627,"line_end":627,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":749825,"byte_end":749867,"line_start":628,"line_end":628,"column_start":5,"column_end":47}},{"value":"/ let q = UnitQuaternion::new(axisangle);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":749872,"byte_end":749915,"line_start":629,"line_end":629,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":749920,"byte_end":749923,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(q * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":749928,"byte_end":750007,"line_start":631,"line_end":631,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(q * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":750012,"byte_end":750093,"line_start":632,"line_end":632,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":750098,"byte_end":750101,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":750106,"byte_end":750146,"line_start":634,"line_end":634,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(UnitQuaternion::new(Vector3::<f32>::zeros()), UnitQuaternion::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":750151,"byte_end":750240,"line_start":635,"line_end":635,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":750245,"byte_end":750252,"line_start":636,"line_end":636,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":750257,"byte_end":750266,"line_start":637,"line_end":637,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7002},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":751554,"byte_end":751561,"line_start":669,"line_end":669,"column_start":12,"column_end":19},"name":"new_eps","qualname":"<UnitQuaternion<N>>::new_eps","value":"pub fn new_eps<SB>(Vector<N, U3, SB>, N) -> Self where SB: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":750522,"byte_end":750615,"line_start":647,"line_end":647,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":750620,"byte_end":750623,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ If `axisangle` has a magnitude smaller than `eps`, this returns the identity rotation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":750628,"byte_end":750718,"line_start":649,"line_end":649,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":750723,"byte_end":750726,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":750731,"byte_end":750744,"line_start":651,"line_end":651,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":750749,"byte_end":750756,"line_start":652,"line_end":652,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":750761,"byte_end":750800,"line_start":653,"line_end":653,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":750805,"byte_end":750824,"line_start":654,"line_end":654,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Point3, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":750829,"byte_end":750883,"line_start":655,"line_end":655,"column_start":5,"column_end":59}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":750888,"byte_end":750946,"line_start":656,"line_end":656,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":750951,"byte_end":751006,"line_start":657,"line_end":657,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":751011,"byte_end":751051,"line_start":658,"line_end":658,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":751056,"byte_end":751098,"line_start":659,"line_end":659,"column_start":5,"column_end":47}},{"value":"/ let q = UnitQuaternion::new_eps(axisangle, 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":751103,"byte_end":751158,"line_start":660,"line_end":660,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":751163,"byte_end":751166,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(q * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":751171,"byte_end":751250,"line_start":662,"line_end":662,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(q * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":751255,"byte_end":751336,"line_start":663,"line_end":663,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":751341,"byte_end":751344,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ // An almost zero vector yields an identity.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":751349,"byte_end":751397,"line_start":665,"line_end":665,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(UnitQuaternion::new_eps(Vector3::new(1.0e-8, 1.0e-9, 1.0e-7), 1.0e-6), UnitQuaternion::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":751402,"byte_end":751516,"line_start":666,"line_end":666,"column_start":5,"column_end":119}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":751521,"byte_end":751528,"line_start":667,"line_end":667,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":751533,"byte_end":751542,"line_start":668,"line_end":668,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7004},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":752887,"byte_end":752903,"line_start":701,"line_end":701,"column_start":12,"column_end":28},"name":"from_scaled_axis","qualname":"<UnitQuaternion<N>>::from_scaled_axis","value":"pub fn from_scaled_axis<SB>(Vector<N, U3, SB>) -> Self where\nSB: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":751817,"byte_end":751910,"line_start":678,"line_end":678,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":751915,"byte_end":751918,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ If `axisangle` has a magnitude smaller than `N::default_epsilon()`, this returns the identity rotation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":751923,"byte_end":752030,"line_start":680,"line_end":680,"column_start":5,"column_end":112}},{"value":"/ Same as `Self::new(axisangle)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":752035,"byte_end":752070,"line_start":681,"line_end":681,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":752075,"byte_end":752078,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":752083,"byte_end":752096,"line_start":683,"line_end":683,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":752101,"byte_end":752108,"line_start":684,"line_end":684,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":752113,"byte_end":752152,"line_start":685,"line_end":685,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":752157,"byte_end":752176,"line_start":686,"line_end":686,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Point3, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":752181,"byte_end":752235,"line_start":687,"line_end":687,"column_start":5,"column_end":59}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":752240,"byte_end":752298,"line_start":688,"line_end":688,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":752303,"byte_end":752358,"line_start":689,"line_end":689,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":752363,"byte_end":752403,"line_start":690,"line_end":690,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":752408,"byte_end":752450,"line_start":691,"line_end":691,"column_start":5,"column_end":47}},{"value":"/ let q = UnitQuaternion::from_scaled_axis(axisangle);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":752455,"byte_end":752511,"line_start":692,"line_end":692,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":752516,"byte_end":752519,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(q * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":752524,"byte_end":752603,"line_start":694,"line_end":694,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(q * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":752608,"byte_end":752689,"line_start":695,"line_end":695,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":752694,"byte_end":752697,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":752702,"byte_end":752742,"line_start":697,"line_end":697,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(UnitQuaternion::from_scaled_axis(Vector3::<f32>::zeros()), UnitQuaternion::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":752747,"byte_end":752849,"line_start":698,"line_end":698,"column_start":5,"column_end":107}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":752854,"byte_end":752861,"line_start":699,"line_end":699,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":752866,"byte_end":752875,"line_start":700,"line_end":700,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7006},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":754137,"byte_end":754157,"line_start":731,"line_end":731,"column_start":12,"column_end":32},"name":"from_scaled_axis_eps","qualname":"<UnitQuaternion<N>>::from_scaled_axis_eps","value":"pub fn from_scaled_axis_eps<SB>(Vector<N, U3, SB>, N) -> Self where\nSB: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":753030,"byte_end":753123,"line_start":708,"line_end":708,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":753128,"byte_end":753131,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ If `axisangle` has a magnitude smaller than `eps`, this returns the identity rotation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":753136,"byte_end":753226,"line_start":710,"line_end":710,"column_start":5,"column_end":95}},{"value":"/ Same as `Self::new_eps(axisangle, eps)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":753231,"byte_end":753275,"line_start":711,"line_end":711,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":753280,"byte_end":753283,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":753288,"byte_end":753301,"line_start":713,"line_end":713,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":753306,"byte_end":753313,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":753318,"byte_end":753357,"line_start":715,"line_end":715,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":753362,"byte_end":753381,"line_start":716,"line_end":716,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Point3, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":753386,"byte_end":753440,"line_start":717,"line_end":717,"column_start":5,"column_end":59}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":753445,"byte_end":753503,"line_start":718,"line_end":718,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":753508,"byte_end":753563,"line_start":719,"line_end":719,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":753568,"byte_end":753608,"line_start":720,"line_end":720,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":753613,"byte_end":753655,"line_start":721,"line_end":721,"column_start":5,"column_end":47}},{"value":"/ let q = UnitQuaternion::from_scaled_axis_eps(axisangle, 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":753660,"byte_end":753728,"line_start":722,"line_end":722,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":753733,"byte_end":753736,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(q * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":753741,"byte_end":753820,"line_start":724,"line_end":724,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(q * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":753825,"byte_end":753906,"line_start":725,"line_end":725,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":753911,"byte_end":753914,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ // An almost zero vector yields an identity.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":753919,"byte_end":753967,"line_start":727,"line_end":727,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(UnitQuaternion::from_scaled_axis_eps(Vector3::new(1.0e-8, 1.0e-9, 1.0e-7), 1.0e-6), UnitQuaternion::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":753972,"byte_end":754099,"line_start":728,"line_end":728,"column_start":5,"column_end":132}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":754104,"byte_end":754111,"line_start":729,"line_end":729,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":754116,"byte_end":754125,"line_start":730,"line_end":730,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7008},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":755392,"byte_end":755399,"line_start":763,"line_end":763,"column_start":12,"column_end":19},"name":"mean_of","qualname":"<UnitQuaternion<N>>::mean_of","value":"pub fn mean_of<impl IntoIterator<Item = Self>: IntoIterator<Item =\n               Self>>(impl IntoIterator<Item = Self>) -> Self where\nN: RealField","parent":null,"children":[],"decl_id":null,"docs":" Create the mean unit quaternion from a data structure implementing IntoIterator\n returning unit quaternions.","sig":null,"attributes":[{"value":"/ Create the mean unit quaternion from a data structure implementing IntoIterator","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":754301,"byte_end":754384,"line_start":738,"line_end":738,"column_start":5,"column_end":88}},{"value":"/ returning unit quaternions.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":754389,"byte_end":754420,"line_start":739,"line_end":739,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":754425,"byte_end":754428,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ The method will panic if the iterator does not return any quaternions.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":754433,"byte_end":754507,"line_start":741,"line_end":741,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":754512,"byte_end":754515,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ Algorithm from: Oshman, Yaakov, and Avishy Carmi. \"Attitude estimation from vector","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":754520,"byte_end":754606,"line_start":743,"line_end":743,"column_start":5,"column_end":91}},{"value":"/ observations using a genetic-algorithm-embedded quaternion particle filter.\" Journal of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":754611,"byte_end":754702,"line_start":744,"line_end":744,"column_start":5,"column_end":96}},{"value":"/ Guidance, Control, and Dynamics 29.4 (2006): 879-891.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":754707,"byte_end":754764,"line_start":745,"line_end":745,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":754769,"byte_end":754772,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":754777,"byte_end":754790,"line_start":747,"line_end":747,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":754795,"byte_end":754802,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":754807,"byte_end":754846,"line_start":749,"line_end":749,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":754851,"byte_end":754870,"line_start":750,"line_end":750,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":754875,"byte_end":754912,"line_start":751,"line_end":751,"column_start":5,"column_end":42}},{"value":"/ let q1 = UnitQuaternion::from_euler_angles(0.0, 0.0, 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":754917,"byte_end":754979,"line_start":752,"line_end":752,"column_start":5,"column_end":67}},{"value":"/ let q2 = UnitQuaternion::from_euler_angles(-0.1, 0.0, 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":754984,"byte_end":755047,"line_start":753,"line_end":753,"column_start":5,"column_end":68}},{"value":"/ let q3 = UnitQuaternion::from_euler_angles(0.1, 0.0, 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":755052,"byte_end":755114,"line_start":754,"line_end":754,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":755119,"byte_end":755122,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ let quat_vec = vec![q1, q2, q3];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":755127,"byte_end":755163,"line_start":756,"line_end":756,"column_start":5,"column_end":41}},{"value":"/ let q_mean = UnitQuaternion::mean_of(quat_vec);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":755168,"byte_end":755219,"line_start":757,"line_end":757,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":755224,"byte_end":755227,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ let euler_angles_mean = q_mean.euler_angles();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":755232,"byte_end":755282,"line_start":759,"line_end":759,"column_start":5,"column_end":55}},{"value":"/ assert_relative_eq!(euler_angles_mean.0, 0.0, epsilon = 1.0e-7)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":755287,"byte_end":755354,"line_start":760,"line_end":760,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":755359,"byte_end":755366,"line_start":761,"line_end":761,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":755371,"byte_end":755380,"line_start":762,"line_end":762,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":22712},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":792818,"byte_end":792832,"line_start":32,"line_end":32,"column_start":12,"column_end":26},"name":"DualQuaternion","qualname":"::geometry::dual_quaternion::DualQuaternion","value":"DualQuaternion { real, dual }","parent":null,"children":[{"krate":0,"index":22714},{"krate":0,"index":22715}],"decl_id":null,"docs":" A dual quaternion.","sig":null,"attributes":[{"value":"/ A dual quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":791985,"byte_end":792007,"line_start":5,"line_end":5,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":792008,"byte_end":792011,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Indexing","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":792012,"byte_end":792026,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":792027,"byte_end":792030,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ DualQuaternions are stored as \\[..real, ..dual\\].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":792031,"byte_end":792084,"line_start":9,"line_end":9,"column_start":1,"column_end":54}},{"value":"/ Both of the quaternion components are laid out in `i, j, k, w` order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":792085,"byte_end":792158,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":792159,"byte_end":792162,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":792163,"byte_end":792170,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ # use nalgebra::{DualQuaternion, Quaternion};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":792171,"byte_end":792220,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":792221,"byte_end":792224,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let real = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":792225,"byte_end":792276,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"/ let dual = Quaternion::new(5.0, 6.0, 7.0, 8.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":792277,"byte_end":792328,"line_start":16,"line_end":16,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":792329,"byte_end":792332,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let dq = DualQuaternion::from_real_and_dual(real, dual);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":792333,"byte_end":792393,"line_start":18,"line_end":18,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(dq[0], 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":792394,"byte_end":792421,"line_start":19,"line_end":19,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(dq[1], 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":792422,"byte_end":792449,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":792450,"byte_end":792453,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(dq[4], 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":792454,"byte_end":792481,"line_start":22,"line_end":22,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(dq[7], 5.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":792482,"byte_end":792509,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":792510,"byte_end":792517,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":792518,"byte_end":792521,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ NOTE:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":792522,"byte_end":792531,"line_start":26,"line_end":26,"column_start":1,"column_end":10}},{"value":"/  As of December 2020, dual quaternion support is a work in progress.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":792532,"byte_end":792604,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/  If a feature that you need is missing, feel free to open an issue or a PR.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":792605,"byte_end":792684,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/  See https://github.com/dimforge/nalgebra/issues/487","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":792685,"byte_end":792741,"line_start":29,"line_end":29,"column_start":1,"column_end":57}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":792742,"byte_end":792752,"line_start":30,"line_end":30,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":22714},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":792906,"byte_end":792910,"line_start":34,"line_end":34,"column_start":9,"column_end":13},"name":"real","qualname":"::geometry::dual_quaternion::DualQuaternion::real","value":"geometry::quaternion::Quaternion<N>","parent":{"krate":0,"index":22712},"children":[],"decl_id":null,"docs":" The real component of the quaternion\n","sig":null,"attributes":[{"value":"/ The real component of the quaternion","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":792857,"byte_end":792897,"line_start":33,"line_end":33,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":22715},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":792980,"byte_end":792984,"line_start":36,"line_end":36,"column_start":9,"column_end":13},"name":"dual","qualname":"::geometry::dual_quaternion::DualQuaternion::dual","value":"geometry::quaternion::Quaternion<N>","parent":{"krate":0,"index":22712},"children":[],"decl_id":null,"docs":" The dual component of the quaternion\n","sig":null,"attributes":[{"value":"/ The dual component of the quaternion","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":792931,"byte_end":792971,"line_start":35,"line_end":35,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":7389},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":793641,"byte_end":793650,"line_start":59,"line_end":59,"column_start":12,"column_end":21},"name":"normalize","qualname":"<DualQuaternion<N>>::normalize","value":"pub fn normalize(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this quaternion.","sig":null,"attributes":[{"value":"/ Normalizes this quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":793088,"byte_end":793119,"line_start":43,"line_end":43,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":793124,"byte_end":793127,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":793132,"byte_end":793145,"line_start":45,"line_end":45,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":793150,"byte_end":793157,"line_start":46,"line_end":46,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":793162,"byte_end":793201,"line_start":47,"line_end":47,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{DualQuaternion, Quaternion};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":793206,"byte_end":793255,"line_start":48,"line_end":48,"column_start":5,"column_end":54}},{"value":"/ let real = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":793260,"byte_end":793311,"line_start":49,"line_end":49,"column_start":5,"column_end":56}},{"value":"/ let dual = Quaternion::new(5.0, 6.0, 7.0, 8.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":793316,"byte_end":793367,"line_start":50,"line_end":50,"column_start":5,"column_end":56}},{"value":"/ let dq = DualQuaternion::from_real_and_dual(real, dual);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":793372,"byte_end":793432,"line_start":51,"line_end":51,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":793437,"byte_end":793440,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ let dq_normalized = dq.normalize();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":793445,"byte_end":793484,"line_start":53,"line_end":53,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":793489,"byte_end":793492,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ relative_eq!(dq_normalized.real.norm(), 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":793497,"byte_end":793546,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":793551,"byte_end":793558,"line_start":56,"line_end":56,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":793563,"byte_end":793572,"line_start":57,"line_end":57,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use normalize_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":793577,"byte_end":793629,"line_start":58,"line_end":58,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":7390},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":794274,"byte_end":794287,"line_start":80,"line_end":80,"column_start":12,"column_end":25},"name":"normalize_mut","qualname":"<DualQuaternion<N>>::normalize_mut","value":"pub fn normalize_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this quaternion.","sig":null,"attributes":[{"value":"/ Normalizes this quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":793801,"byte_end":793832,"line_start":65,"line_end":65,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":793837,"byte_end":793840,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":793845,"byte_end":793858,"line_start":67,"line_end":67,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":793863,"byte_end":793870,"line_start":68,"line_end":68,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":793875,"byte_end":793914,"line_start":69,"line_end":69,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{DualQuaternion, Quaternion};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":793919,"byte_end":793968,"line_start":70,"line_end":70,"column_start":5,"column_end":54}},{"value":"/ let real = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":793973,"byte_end":794024,"line_start":71,"line_end":71,"column_start":5,"column_end":56}},{"value":"/ let dual = Quaternion::new(5.0, 6.0, 7.0, 8.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":794029,"byte_end":794080,"line_start":72,"line_end":72,"column_start":5,"column_end":56}},{"value":"/ let mut dq = DualQuaternion::from_real_and_dual(real, dual);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":794085,"byte_end":794149,"line_start":73,"line_end":73,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":794154,"byte_end":794157,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ dq.normalize_mut();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":794162,"byte_end":794185,"line_start":75,"line_end":75,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":794190,"byte_end":794193,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ relative_eq!(dq.real.norm(), 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":794198,"byte_end":794236,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":794241,"byte_end":794248,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":794253,"byte_end":794262,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7404},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_construction.rs","byte_start":795691,"byte_end":795709,"line_start":16,"line_end":16,"column_start":12,"column_end":30},"name":"from_real_and_dual","qualname":"<DualQuaternion<N>>::from_real_and_dual","value":"pub fn from_real_and_dual(Quaternion<N>, Quaternion<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a dual quaternion from its rotation and translation components.","sig":null,"attributes":[{"value":"/ Creates a dual quaternion from its rotation and translation components.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_construction.rs","byte_start":795265,"byte_end":795340,"line_start":4,"line_end":4,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_construction.rs","byte_start":795345,"byte_end":795348,"line_start":5,"line_end":5,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_construction.rs","byte_start":795353,"byte_end":795366,"line_start":6,"line_end":6,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_construction.rs","byte_start":795371,"byte_end":795378,"line_start":7,"line_end":7,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{DualQuaternion, Quaternion};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_construction.rs","byte_start":795383,"byte_end":795432,"line_start":8,"line_end":8,"column_start":5,"column_end":54}},{"value":"/ let rot = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_construction.rs","byte_start":795437,"byte_end":795487,"line_start":9,"line_end":9,"column_start":5,"column_end":55}},{"value":"/ let trans = Quaternion::new(5.0, 6.0, 7.0, 8.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_construction.rs","byte_start":795492,"byte_end":795544,"line_start":10,"line_end":10,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_construction.rs","byte_start":795549,"byte_end":795552,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ let dq = DualQuaternion::from_real_and_dual(rot, trans);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_construction.rs","byte_start":795557,"byte_end":795617,"line_start":12,"line_end":12,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(dq.real.w, 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_construction.rs","byte_start":795622,"byte_end":795653,"line_start":13,"line_end":13,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_construction.rs","byte_start":795658,"byte_end":795665,"line_start":14,"line_end":14,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_construction.rs","byte_start":795670,"byte_end":795679,"line_start":15,"line_end":15,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7405},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_construction.rs","byte_start":796267,"byte_end":796275,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"identity","qualname":"<DualQuaternion<N>>::identity","value":"pub fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" The dual quaternion multiplicative identity","sig":null,"attributes":[{"value":"/ The dual quaternion multiplicative identity","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_construction.rs","byte_start":795800,"byte_end":795847,"line_start":19,"line_end":19,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_construction.rs","byte_start":795852,"byte_end":795855,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_construction.rs","byte_start":795860,"byte_end":795873,"line_start":21,"line_end":21,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_construction.rs","byte_start":795878,"byte_end":795881,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_construction.rs","byte_start":795886,"byte_end":795893,"line_start":23,"line_end":23,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{DualQuaternion, Quaternion};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_construction.rs","byte_start":795898,"byte_end":795947,"line_start":24,"line_end":24,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_construction.rs","byte_start":795952,"byte_end":795955,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ let dq1 = DualQuaternion::identity();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_construction.rs","byte_start":795960,"byte_end":796001,"line_start":26,"line_end":26,"column_start":5,"column_end":46}},{"value":"/ let dq2 = DualQuaternion::from_real_and_dual(","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_construction.rs","byte_start":796006,"byte_end":796055,"line_start":27,"line_end":27,"column_start":5,"column_end":54}},{"value":"/     Quaternion::new(1.,2.,3.,4.),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_construction.rs","byte_start":796060,"byte_end":796097,"line_start":28,"line_end":28,"column_start":5,"column_end":42}},{"value":"/     Quaternion::new(5.,6.,7.,8.)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_construction.rs","byte_start":796102,"byte_end":796138,"line_start":29,"line_end":29,"column_start":5,"column_end":41}},{"value":"/ );","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_construction.rs","byte_start":796143,"byte_end":796149,"line_start":30,"line_end":30,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_construction.rs","byte_start":796154,"byte_end":796157,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(dq1 * dq2, dq2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_construction.rs","byte_start":796162,"byte_end":796193,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(dq2 * dq1, dq2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_construction.rs","byte_start":796198,"byte_end":796229,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_construction.rs","byte_start":796234,"byte_end":796241,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_construction.rs","byte_start":796246,"byte_end":796255,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":7525},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":800710,"byte_end":800721,"line_start":32,"line_end":32,"column_start":10,"column_end":21},"name":"UnitComplex","qualname":"::geometry::unit_complex::UnitComplex","value":"Unit<Complex<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 2D rotation represented as a complex number with magnitude 1.","sig":null,"attributes":[{"value":"/ A 2D rotation represented as a complex number with magnitude 1.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":799149,"byte_end":799216,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":799217,"byte_end":799220,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ All the methods specific [`UnitComplex`](crate::UnitComplex) are listed here. You may also","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":799221,"byte_end":799315,"line_start":14,"line_end":14,"column_start":1,"column_end":95}},{"value":"/ read the documentation of the [`Complex`](crate::Complex) type which","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":799316,"byte_end":799388,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ is used internally and accessible with `unit_complex.complex()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":799389,"byte_end":799457,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":799458,"byte_end":799461,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Construction","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":799462,"byte_end":799480,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/ * [Identity <span style=\"float:right;\">`identity`</span>](#identity)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":799481,"byte_end":799553,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/ * [From a 2D rotation angle <span style=\"float:right;\">`new`, `from_cos_sin_unchecked`…</span>](#construction-from-a-2d-rotation-angle)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":799554,"byte_end":799695,"line_start":20,"line_end":20,"column_start":1,"column_end":140}},{"value":"/ * [From an existing 2D matrix or complex number <span style=\"float:right;\">`from_matrix`, `rotation_to`, `powf`…</span>](#construction-from-an-existing-2d-matrix-or-complex-number)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":799696,"byte_end":799882,"line_start":21,"line_end":21,"column_start":1,"column_end":185}},{"value":"/ * [From two vectors <span style=\"float:right;\">`rotation_between`, `scaled_rotation_between_axis`…</span>](#construction-from-two-vectors)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":799883,"byte_end":800027,"line_start":22,"line_end":22,"column_start":1,"column_end":143}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":800028,"byte_end":800031,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Transformation and composition","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":800032,"byte_end":800068,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/ * [Angle extraction <span style=\"float:right;\">`angle`, `angle_to`…</span>](#angle-extraction)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":800069,"byte_end":800169,"line_start":25,"line_end":25,"column_start":1,"column_end":99}},{"value":"/ * [Transformation of a vector or a point <span style=\"float:right;\">`transform_vector`, `inverse_transform_point`…</span>](#transformation-of-a-vector-or-a-point)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":800170,"byte_end":800338,"line_start":26,"line_end":26,"column_start":1,"column_end":167}},{"value":"/ * [Conjugation and inversion <span style=\"float:right;\">`conjugate`, `inverse_mut`…</span>](#conjugation-and-inversion)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":800339,"byte_end":800464,"line_start":27,"line_end":27,"column_start":1,"column_end":124}},{"value":"/ * [Interpolation <span style=\"float:right;\">`slerp`…</span>](#interpolation)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":800465,"byte_end":800547,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":800548,"byte_end":800551,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Conversion","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":800552,"byte_end":800568,"line_start":30,"line_end":30,"column_start":1,"column_end":17}},{"value":"/ * [Conversion to a matrix <span style=\"float:right;\">`to_rotation_matrix`, `to_homogeneous`…</span>](#conversion-to-a-matrix)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":800569,"byte_end":800700,"line_start":31,"line_end":31,"column_start":1,"column_end":130}}]},{"kind":"Method","id":{"krate":0,"index":7541},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":802070,"byte_end":802075,"line_start":87,"line_end":87,"column_start":12,"column_end":17},"name":"angle","qualname":"<UnitComplex<N>>::angle","value":"pub fn angle(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle in `]-pi; pi]` of this unit complex number.","sig":null,"attributes":[{"value":"/ The rotation angle in `]-pi; pi]` of this unit complex number.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":801810,"byte_end":801876,"line_start":78,"line_end":78,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":801881,"byte_end":801884,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":801889,"byte_end":801902,"line_start":80,"line_end":80,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":801907,"byte_end":801914,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":801919,"byte_end":801951,"line_start":82,"line_end":82,"column_start":5,"column_end":37}},{"value":"/ let rot = UnitComplex::new(1.78);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":801956,"byte_end":801993,"line_start":83,"line_end":83,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(rot.angle(), 1.78);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":801998,"byte_end":802032,"line_start":84,"line_end":84,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":802037,"byte_end":802044,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":802049,"byte_end":802058,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7542},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":802407,"byte_end":802416,"line_start":101,"line_end":101,"column_start":12,"column_end":21},"name":"sin_angle","qualname":"<UnitComplex<N>>::sin_angle","value":"pub fn sin_angle(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The sine of the rotation angle.","sig":null,"attributes":[{"value":"/ The sine of the rotation angle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":802137,"byte_end":802172,"line_start":91,"line_end":91,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":802177,"byte_end":802180,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":802185,"byte_end":802198,"line_start":93,"line_end":93,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":802203,"byte_end":802210,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":802215,"byte_end":802247,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ let angle = 1.78f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":802252,"byte_end":802276,"line_start":96,"line_end":96,"column_start":5,"column_end":29}},{"value":"/ let rot = UnitComplex::new(angle);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":802281,"byte_end":802319,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(rot.sin_angle(), angle.sin());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":802324,"byte_end":802369,"line_start":98,"line_end":98,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":802374,"byte_end":802381,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":802386,"byte_end":802395,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7543},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":802729,"byte_end":802738,"line_start":115,"line_end":115,"column_start":12,"column_end":21},"name":"cos_angle","qualname":"<UnitComplex<N>>::cos_angle","value":"pub fn cos_angle(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The cosine of the rotation angle.","sig":null,"attributes":[{"value":"/ The cosine of the rotation angle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":802458,"byte_end":802495,"line_start":105,"line_end":105,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":802500,"byte_end":802503,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":802508,"byte_end":802521,"line_start":107,"line_end":107,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":802526,"byte_end":802533,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":802538,"byte_end":802570,"line_start":109,"line_end":109,"column_start":5,"column_end":37}},{"value":"/ let angle = 1.78f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":802575,"byte_end":802599,"line_start":110,"line_end":110,"column_start":5,"column_end":29}},{"value":"/ let rot = UnitComplex::new(angle);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":802604,"byte_end":802642,"line_start":111,"line_end":111,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(rot.cos_angle(),angle.cos());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":802647,"byte_end":802691,"line_start":112,"line_end":112,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":802696,"byte_end":802703,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":802708,"byte_end":802717,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7544},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":803002,"byte_end":803013,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"scaled_axis","qualname":"<UnitComplex<N>>::scaled_axis","value":"pub fn scaled_axis(&Self) -> Vector1<N>","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle returned as a 1-dimensional vector.","sig":null,"attributes":[{"value":"/ The rotation angle returned as a 1-dimensional vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":802780,"byte_end":802838,"line_start":119,"line_end":119,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":802843,"byte_end":802846,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This is generally used in the context of generic programming. Using","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":802851,"byte_end":802922,"line_start":121,"line_end":121,"column_start":5,"column_end":76}},{"value":"/ the `.angle()` method instead is more common.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":802927,"byte_end":802976,"line_start":122,"line_end":122,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":802981,"byte_end":802990,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7545},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":803358,"byte_end":803368,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"axis_angle","qualname":"<UnitComplex<N>>::axis_angle","value":"pub fn axis_angle(&Self) -> Option<(Unit<Vector1<N>>, N)> where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis and angle in ]0, pi] of this complex number.","sig":null,"attributes":[{"value":"/ The rotation axis and angle in ]0, pi] of this complex number.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":803083,"byte_end":803149,"line_start":128,"line_end":128,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":803154,"byte_end":803157,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ This is generally used in the context of generic programming. Using","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":803162,"byte_end":803233,"line_start":130,"line_end":130,"column_start":5,"column_end":76}},{"value":"/ the `.angle()` method instead is more common.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":803238,"byte_end":803287,"line_start":131,"line_end":131,"column_start":5,"column_end":54}},{"value":"/ Returns `None` if the angle is zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":803292,"byte_end":803332,"line_start":132,"line_end":132,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":803337,"byte_end":803346,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7546},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":804093,"byte_end":804101,"line_start":160,"line_end":160,"column_start":12,"column_end":20},"name":"angle_to","qualname":"<UnitComplex<N>>::angle_to","value":"pub fn angle_to(&Self, &Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation angle needed to make `self` and `other` coincide.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":803730,"byte_end":803796,"line_start":149,"line_end":149,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":803801,"byte_end":803804,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":803809,"byte_end":803822,"line_start":151,"line_end":151,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":803827,"byte_end":803834,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":803839,"byte_end":803878,"line_start":153,"line_end":153,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":803883,"byte_end":803915,"line_start":154,"line_end":154,"column_start":5,"column_end":37}},{"value":"/ let rot1 = UnitComplex::new(0.1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":803920,"byte_end":803957,"line_start":155,"line_end":155,"column_start":5,"column_end":42}},{"value":"/ let rot2 = UnitComplex::new(1.7);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":803962,"byte_end":803999,"line_start":156,"line_end":156,"column_start":5,"column_end":42}},{"value":"/ assert_relative_eq!(rot1.angle_to(&rot2), 1.6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":804004,"byte_end":804055,"line_start":157,"line_end":157,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":804060,"byte_end":804067,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":804072,"byte_end":804081,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7549},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":804736,"byte_end":804745,"line_start":183,"line_end":183,"column_start":12,"column_end":21},"name":"conjugate","qualname":"<UnitComplex<N>>::conjugate","value":"pub fn conjugate(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compute the conjugate of this unit complex number.","sig":null,"attributes":[{"value":"/ Compute the conjugate of this unit complex number.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":804319,"byte_end":804373,"line_start":171,"line_end":171,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":804378,"byte_end":804381,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":804386,"byte_end":804399,"line_start":173,"line_end":173,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":804404,"byte_end":804411,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":804416,"byte_end":804448,"line_start":175,"line_end":175,"column_start":5,"column_end":37}},{"value":"/ let rot = UnitComplex::new(1.78);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":804453,"byte_end":804490,"line_start":176,"line_end":176,"column_start":5,"column_end":42}},{"value":"/ let conj = rot.conjugate();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":804495,"byte_end":804526,"line_start":177,"line_end":177,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(rot.complex().im, -conj.complex().im);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":804531,"byte_end":804584,"line_start":178,"line_end":178,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(rot.complex().re, conj.complex().re);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":804589,"byte_end":804641,"line_start":179,"line_end":179,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":804646,"byte_end":804653,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":804658,"byte_end":804667,"line_start":181,"line_end":181,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use conjugate_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":804672,"byte_end":804724,"line_start":182,"line_end":182,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":7550},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":805317,"byte_end":805324,"line_start":200,"line_end":200,"column_start":12,"column_end":19},"name":"inverse","qualname":"<UnitComplex<N>>::inverse","value":"pub fn inverse(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inverts this complex number if it is not zero.","sig":null,"attributes":[{"value":"/ Inverts this complex number if it is not zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":804815,"byte_end":804865,"line_start":187,"line_end":187,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":804870,"byte_end":804873,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":804878,"byte_end":804891,"line_start":189,"line_end":189,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":804896,"byte_end":804903,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":804908,"byte_end":804947,"line_start":191,"line_end":191,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":804952,"byte_end":804984,"line_start":192,"line_end":192,"column_start":5,"column_end":37}},{"value":"/ let rot = UnitComplex::new(1.2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":804989,"byte_end":805025,"line_start":193,"line_end":193,"column_start":5,"column_end":41}},{"value":"/ let inv = rot.inverse();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":805030,"byte_end":805058,"line_start":194,"line_end":194,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(rot * inv, UnitComplex::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":805063,"byte_end":805141,"line_start":195,"line_end":195,"column_start":5,"column_end":83}},{"value":"/ assert_relative_eq!(inv * rot, UnitComplex::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":805146,"byte_end":805224,"line_start":196,"line_end":196,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":805229,"byte_end":805236,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":805241,"byte_end":805250,"line_start":198,"line_end":198,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use inverse_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":805255,"byte_end":805305,"line_start":199,"line_end":199,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":7551},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":805859,"byte_end":805872,"line_start":218,"line_end":218,"column_start":12,"column_end":25},"name":"conjugate_mut","qualname":"<UnitComplex<N>>::conjugate_mut","value":"pub fn conjugate_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Compute in-place the conjugate of this unit complex number.","sig":null,"attributes":[{"value":"/ Compute in-place the conjugate of this unit complex number.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":805378,"byte_end":805441,"line_start":204,"line_end":204,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":805446,"byte_end":805449,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":805454,"byte_end":805467,"line_start":206,"line_end":206,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":805472,"byte_end":805479,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":805484,"byte_end":805523,"line_start":208,"line_end":208,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":805528,"byte_end":805560,"line_start":209,"line_end":209,"column_start":5,"column_end":37}},{"value":"/ let angle = 1.7;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":805565,"byte_end":805585,"line_start":210,"line_end":210,"column_start":5,"column_end":25}},{"value":"/ let rot = UnitComplex::new(angle);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":805590,"byte_end":805628,"line_start":211,"line_end":211,"column_start":5,"column_end":43}},{"value":"/ let mut conj = UnitComplex::new(angle);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":805633,"byte_end":805676,"line_start":212,"line_end":212,"column_start":5,"column_end":48}},{"value":"/ conj.conjugate_mut();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":805681,"byte_end":805706,"line_start":213,"line_end":213,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(rot.complex().im, -conj.complex().im);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":805711,"byte_end":805764,"line_start":214,"line_end":214,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(rot.complex().re, conj.complex().re);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":805769,"byte_end":805821,"line_start":215,"line_end":215,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":805826,"byte_end":805833,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":805838,"byte_end":805847,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7552},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":806435,"byte_end":806446,"line_start":236,"line_end":236,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<UnitComplex<N>>::inverse_mut","value":"pub fn inverse_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Inverts in-place this unit complex number.","sig":null,"attributes":[{"value":"/ Inverts in-place this unit complex number.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":805963,"byte_end":806009,"line_start":223,"line_end":223,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":806014,"byte_end":806017,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":806022,"byte_end":806035,"line_start":225,"line_end":225,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":806040,"byte_end":806047,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":806052,"byte_end":806091,"line_start":227,"line_end":227,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":806096,"byte_end":806128,"line_start":228,"line_end":228,"column_start":5,"column_end":37}},{"value":"/ let angle = 1.7;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":806133,"byte_end":806153,"line_start":229,"line_end":229,"column_start":5,"column_end":25}},{"value":"/ let mut rot = UnitComplex::new(angle);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":806158,"byte_end":806200,"line_start":230,"line_end":230,"column_start":5,"column_end":47}},{"value":"/ rot.inverse_mut();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":806205,"byte_end":806227,"line_start":231,"line_end":231,"column_start":5,"column_end":27}},{"value":"/ assert_relative_eq!(rot * UnitComplex::new(angle), UnitComplex::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":806232,"byte_end":806312,"line_start":232,"line_end":232,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(UnitComplex::new(angle) * rot, UnitComplex::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":806317,"byte_end":806397,"line_start":233,"line_end":233,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":806402,"byte_end":806409,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":806414,"byte_end":806423,"line_start":235,"line_end":235,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7555},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":807010,"byte_end":807028,"line_start":257,"line_end":257,"column_start":12,"column_end":30},"name":"to_rotation_matrix","qualname":"<UnitComplex<N>>::to_rotation_matrix","value":"pub fn to_rotation_matrix(&Self) -> Rotation2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds the rotation matrix corresponding to this unit complex number.","sig":null,"attributes":[{"value":"/ Builds the rotation matrix corresponding to this unit complex number.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":806608,"byte_end":806681,"line_start":246,"line_end":246,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":806686,"byte_end":806689,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":806694,"byte_end":806707,"line_start":248,"line_end":248,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":806712,"byte_end":806719,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitComplex, Rotation2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":806724,"byte_end":806769,"line_start":250,"line_end":250,"column_start":5,"column_end":50}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":806774,"byte_end":806793,"line_start":251,"line_end":251,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":806798,"byte_end":806853,"line_start":252,"line_end":252,"column_start":5,"column_end":60}},{"value":"/ let expected = Rotation2::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":806858,"byte_end":806916,"line_start":253,"line_end":253,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(rot.to_rotation_matrix(), expected);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":806921,"byte_end":806972,"line_start":254,"line_end":254,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":806977,"byte_end":806984,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":806989,"byte_end":806998,"line_start":256,"line_end":256,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7556},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":807726,"byte_end":807740,"line_start":277,"line_end":277,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<UnitComplex<N>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> Matrix3<N>","parent":null,"children":[],"decl_id":null,"docs":" Converts this unit complex number into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this unit complex number into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":807184,"byte_end":807276,"line_start":264,"line_end":264,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":807281,"byte_end":807284,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":807289,"byte_end":807302,"line_start":266,"line_end":266,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":807307,"byte_end":807314,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitComplex, Matrix3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":807319,"byte_end":807362,"line_start":268,"line_end":268,"column_start":5,"column_end":48}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":807367,"byte_end":807386,"line_start":269,"line_end":269,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":807391,"byte_end":807446,"line_start":270,"line_end":270,"column_start":5,"column_end":60}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":807451,"byte_end":807509,"line_start":271,"line_end":271,"column_start":5,"column_end":63}},{"value":"/                             0.5,       0.8660254, 0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":807514,"byte_end":807572,"line_start":272,"line_end":272,"column_start":5,"column_end":63}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":807577,"byte_end":807636,"line_start":273,"line_end":273,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(rot.to_homogeneous(), expected);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":807641,"byte_end":807688,"line_start":274,"line_end":274,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":807693,"byte_end":807700,"line_start":275,"line_end":275,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":807705,"byte_end":807714,"line_start":276,"line_end":276,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7559},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":808490,"byte_end":808505,"line_start":301,"line_end":301,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<UnitComplex<N>>::transform_point","value":"pub fn transform_point(&Self, &Point2<N>) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given point by this unit complex number.","sig":null,"attributes":[{"value":"/ Rotate the given point by this unit complex number.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":807949,"byte_end":808004,"line_start":287,"line_end":287,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":808009,"byte_end":808012,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":808017,"byte_end":808072,"line_start":289,"line_end":289,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":808077,"byte_end":808080,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":808085,"byte_end":808098,"line_start":291,"line_end":291,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":808103,"byte_end":808110,"line_start":292,"line_end":292,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":808115,"byte_end":808154,"line_start":293,"line_end":293,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitComplex, Point2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":808159,"byte_end":808201,"line_start":294,"line_end":294,"column_start":5,"column_end":47}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":808206,"byte_end":808225,"line_start":295,"line_end":295,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":808230,"byte_end":808285,"line_start":296,"line_end":296,"column_start":5,"column_end":60}},{"value":"/ let transformed_point = rot.transform_point(&Point2::new(1.0, 2.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":808290,"byte_end":808362,"line_start":297,"line_end":297,"column_start":5,"column_end":77}},{"value":"/ assert_relative_eq!(transformed_point, Point2::new(-2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":808367,"byte_end":808452,"line_start":298,"line_end":298,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":808457,"byte_end":808464,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":808469,"byte_end":808478,"line_start":300,"line_end":300,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7560},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":809120,"byte_end":809136,"line_start":319,"line_end":319,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<UnitComplex<N>>::transform_vector","value":"pub fn transform_vector(&Self, &Vector2<N>) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given vector by this unit complex number.","sig":null,"attributes":[{"value":"/ Rotate the given vector by this unit complex number.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":808573,"byte_end":808629,"line_start":305,"line_end":305,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":808634,"byte_end":808637,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * v`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":808642,"byte_end":808696,"line_start":307,"line_end":307,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":808701,"byte_end":808704,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":808709,"byte_end":808722,"line_start":309,"line_end":309,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":808727,"byte_end":808734,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":808739,"byte_end":808778,"line_start":311,"line_end":311,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitComplex, Vector2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":808783,"byte_end":808826,"line_start":312,"line_end":312,"column_start":5,"column_end":48}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":808831,"byte_end":808850,"line_start":313,"line_end":313,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":808855,"byte_end":808910,"line_start":314,"line_end":314,"column_start":5,"column_end":60}},{"value":"/ let transformed_vector = rot.transform_vector(&Vector2::new(1.0, 2.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":808915,"byte_end":808990,"line_start":315,"line_end":315,"column_start":5,"column_end":80}},{"value":"/ assert_relative_eq!(transformed_vector, Vector2::new(-2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":808995,"byte_end":809082,"line_start":316,"line_end":316,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":809087,"byte_end":809094,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":809099,"byte_end":809108,"line_start":318,"line_end":318,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7561},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":809700,"byte_end":809723,"line_start":335,"line_end":335,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<UnitComplex<N>>::inverse_transform_point","value":"pub fn inverse_transform_point(&Self, &Point2<N>) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given point by the inverse of this unit complex number.","sig":null,"attributes":[{"value":"/ Rotate the given point by the inverse of this unit complex number.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":809204,"byte_end":809274,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":809279,"byte_end":809282,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":809287,"byte_end":809300,"line_start":325,"line_end":325,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":809305,"byte_end":809312,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":809317,"byte_end":809356,"line_start":327,"line_end":327,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitComplex, Point2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":809361,"byte_end":809403,"line_start":328,"line_end":328,"column_start":5,"column_end":47}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":809408,"byte_end":809427,"line_start":329,"line_end":329,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":809432,"byte_end":809487,"line_start":330,"line_end":330,"column_start":5,"column_end":60}},{"value":"/ let transformed_point = rot.inverse_transform_point(&Point2::new(1.0, 2.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":809492,"byte_end":809572,"line_start":331,"line_end":331,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(transformed_point, Point2::new(2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":809577,"byte_end":809662,"line_start":332,"line_end":332,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":809667,"byte_end":809674,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":809679,"byte_end":809688,"line_start":334,"line_end":334,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7562},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":810460,"byte_end":810484,"line_start":353,"line_end":353,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<UnitComplex<N>>::inverse_transform_vector","value":"pub fn inverse_transform_vector(&Self, &Vector2<N>) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given vector by the inverse of this unit complex number.","sig":null,"attributes":[{"value":"/ Rotate the given vector by the inverse of this unit complex number.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":809957,"byte_end":810028,"line_start":341,"line_end":341,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":810033,"byte_end":810036,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":810041,"byte_end":810054,"line_start":343,"line_end":343,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":810059,"byte_end":810066,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":810071,"byte_end":810110,"line_start":345,"line_end":345,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitComplex, Vector2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":810115,"byte_end":810158,"line_start":346,"line_end":346,"column_start":5,"column_end":48}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":810163,"byte_end":810182,"line_start":347,"line_end":347,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":810187,"byte_end":810242,"line_start":348,"line_end":348,"column_start":5,"column_end":60}},{"value":"/ let transformed_vector = rot.inverse_transform_vector(&Vector2::new(1.0, 2.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":810247,"byte_end":810330,"line_start":349,"line_end":349,"column_start":5,"column_end":88}},{"value":"/ assert_relative_eq!(transformed_vector, Vector2::new(2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":810335,"byte_end":810422,"line_start":350,"line_end":350,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":810427,"byte_end":810434,"line_start":351,"line_end":351,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":810439,"byte_end":810448,"line_start":352,"line_end":352,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7563},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":811060,"byte_end":811089,"line_start":369,"line_end":369,"column_start":12,"column_end":41},"name":"inverse_transform_unit_vector","qualname":"<UnitComplex<N>>::inverse_transform_unit_vector","value":"pub fn inverse_transform_unit_vector(&Self, &Unit<Vector2<N>>)\n-> Unit<Vector2<N>>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given vector by the inverse of this unit complex number.","sig":null,"attributes":[{"value":"/ Rotate the given vector by the inverse of this unit complex number.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":810562,"byte_end":810633,"line_start":357,"line_end":357,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":810638,"byte_end":810641,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":810646,"byte_end":810659,"line_start":359,"line_end":359,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":810664,"byte_end":810671,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":810676,"byte_end":810715,"line_start":361,"line_end":361,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitComplex, Vector2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":810720,"byte_end":810763,"line_start":362,"line_end":362,"column_start":5,"column_end":48}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":810768,"byte_end":810787,"line_start":363,"line_end":363,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":810792,"byte_end":810847,"line_start":364,"line_end":364,"column_start":5,"column_end":60}},{"value":"/ let transformed_vector = rot.inverse_transform_unit_vector(&Vector2::x_axis());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":810852,"byte_end":810935,"line_start":365,"line_end":365,"column_start":5,"column_end":88}},{"value":"/ assert_relative_eq!(transformed_vector, -Vector2::y_axis(), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":810940,"byte_end":811022,"line_start":366,"line_end":366,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":811027,"byte_end":811034,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":811039,"byte_end":811048,"line_start":368,"line_end":368,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7566},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":811817,"byte_end":811822,"line_start":395,"line_end":395,"column_start":12,"column_end":17},"name":"slerp","qualname":"<UnitComplex<N>>::slerp","value":"pub fn slerp(&Self, &Self, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Spherical linear interpolation between two rotations represented as unit complex numbers.","sig":null,"attributes":[{"value":"/ Spherical linear interpolation between two rotations represented as unit complex numbers.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":811278,"byte_end":811371,"line_start":379,"line_end":379,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":811376,"byte_end":811379,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":811384,"byte_end":811399,"line_start":381,"line_end":381,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":811404,"byte_end":811407,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":811412,"byte_end":811419,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":811424,"byte_end":811463,"line_start":384,"line_end":384,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::geometry::UnitComplex;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":811468,"byte_end":811510,"line_start":385,"line_end":385,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":811515,"byte_end":811518,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ let rot1 = UnitComplex::new(std::f32::consts::FRAC_PI_4);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":811523,"byte_end":811584,"line_start":387,"line_end":387,"column_start":5,"column_end":66}},{"value":"/ let rot2 = UnitComplex::new(-std::f32::consts::PI);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":811589,"byte_end":811644,"line_start":388,"line_end":388,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":811649,"byte_end":811652,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ let rot = rot1.slerp(&rot2, 1.0 / 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":811657,"byte_end":811700,"line_start":390,"line_end":390,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":811705,"byte_end":811708,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot.angle(), std::f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":811713,"byte_end":811779,"line_start":392,"line_end":392,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":811784,"byte_end":811791,"line_start":393,"line_end":393,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":811796,"byte_end":811805,"line_start":394,"line_end":394,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7638},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":814137,"byte_end":814145,"line_start":33,"line_end":33,"column_start":12,"column_end":20},"name":"identity","qualname":"<UnitComplex<N>>::identity","value":"pub fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" The unit complex number multiplicative identity.","sig":null,"attributes":[{"value":"/ The unit complex number multiplicative identity.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":813800,"byte_end":813852,"line_start":21,"line_end":21,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":813857,"byte_end":813860,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":813865,"byte_end":813878,"line_start":23,"line_end":23,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":813883,"byte_end":813890,"line_start":24,"line_end":24,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":813895,"byte_end":813927,"line_start":25,"line_end":25,"column_start":5,"column_end":37}},{"value":"/ let rot1 = UnitComplex::identity();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":813932,"byte_end":813971,"line_start":26,"line_end":26,"column_start":5,"column_end":44}},{"value":"/ let rot2 = UnitComplex::new(1.7);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":813976,"byte_end":814013,"line_start":27,"line_end":27,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":814018,"byte_end":814021,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(rot1 * rot2, rot2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":814026,"byte_end":814060,"line_start":29,"line_end":29,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(rot2 * rot1, rot2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":814065,"byte_end":814099,"line_start":30,"line_end":30,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":814104,"byte_end":814111,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":814116,"byte_end":814125,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7641},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":814790,"byte_end":814793,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"new","qualname":"<UnitComplex<N>>::new","value":"pub fn new(N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds the unit complex number corresponding to the rotation with the given angle.","sig":null,"attributes":[{"value":"/ Builds the unit complex number corresponding to the rotation with the given angle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":814355,"byte_end":814441,"line_start":43,"line_end":43,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":814446,"byte_end":814449,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":814454,"byte_end":814467,"line_start":45,"line_end":45,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":814472,"byte_end":814475,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":814480,"byte_end":814487,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":814492,"byte_end":814531,"line_start":48,"line_end":48,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":814536,"byte_end":814555,"line_start":49,"line_end":49,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitComplex, Point2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":814560,"byte_end":814602,"line_start":50,"line_end":50,"column_start":5,"column_end":47}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":814607,"byte_end":814662,"line_start":51,"line_end":51,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":814667,"byte_end":814670,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * Point2::new(3.0, 4.0), Point2::new(-4.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":814675,"byte_end":814752,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":814757,"byte_end":814764,"line_start":54,"line_end":54,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":814769,"byte_end":814778,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7642},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":815428,"byte_end":815438,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"from_angle","qualname":"<UnitComplex<N>>::from_angle","value":"pub fn from_angle(N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds the unit complex number corresponding to the rotation with the angle.","sig":null,"attributes":[{"value":"/ Builds the unit complex number corresponding to the rotation with the angle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":814919,"byte_end":814999,"line_start":61,"line_end":61,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":815004,"byte_end":815007,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Same as `Self::new(angle)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":815012,"byte_end":815043,"line_start":63,"line_end":63,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":815048,"byte_end":815051,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":815056,"byte_end":815069,"line_start":65,"line_end":65,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":815074,"byte_end":815077,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":815082,"byte_end":815089,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":815094,"byte_end":815133,"line_start":68,"line_end":68,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":815138,"byte_end":815157,"line_start":69,"line_end":69,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitComplex, Point2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":815162,"byte_end":815204,"line_start":70,"line_end":70,"column_start":5,"column_end":47}},{"value":"/ let rot = UnitComplex::from_angle(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":815209,"byte_end":815271,"line_start":71,"line_end":71,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":815276,"byte_end":815279,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * Point2::new(3.0, 4.0), Point2::new(-4.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":815284,"byte_end":815361,"line_start":73,"line_end":73,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":815366,"byte_end":815373,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":815407,"byte_end":815416,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7643},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":816184,"byte_end":816206,"line_start":98,"line_end":98,"column_start":12,"column_end":34},"name":"from_cos_sin_unchecked","qualname":"<UnitComplex<N>>::from_cos_sin_unchecked","value":"pub fn from_cos_sin_unchecked(N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds the unit complex number from the sinus and cosinus of the rotation angle.","sig":null,"attributes":[{"value":"/ Builds the unit complex number from the sinus and cosinus of the rotation angle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":815495,"byte_end":815579,"line_start":81,"line_end":81,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":815584,"byte_end":815587,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ The input values are not checked to actually be cosines and sine of the same value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":815592,"byte_end":815679,"line_start":83,"line_end":83,"column_start":5,"column_end":92}},{"value":"/ Is is generally preferable to use the `::new(angle)` constructor instead.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":815684,"byte_end":815761,"line_start":84,"line_end":84,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":815766,"byte_end":815769,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":815774,"byte_end":815787,"line_start":86,"line_end":86,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":815792,"byte_end":815795,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":815800,"byte_end":815807,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":815812,"byte_end":815851,"line_start":89,"line_end":89,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":815856,"byte_end":815875,"line_start":90,"line_end":90,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitComplex, Vector2, Point2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":815880,"byte_end":815931,"line_start":91,"line_end":91,"column_start":5,"column_end":56}},{"value":"/ let angle = f32::consts::FRAC_PI_2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":815936,"byte_end":815975,"line_start":92,"line_end":92,"column_start":5,"column_end":44}},{"value":"/ let rot = UnitComplex::from_cos_sin_unchecked(angle.cos(), angle.sin());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":815980,"byte_end":816056,"line_start":93,"line_end":93,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":816061,"byte_end":816064,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * Point2::new(3.0, 4.0), Point2::new(-4.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":816069,"byte_end":816146,"line_start":95,"line_end":95,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":816151,"byte_end":816158,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":816163,"byte_end":816172,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7644},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":816557,"byte_end":816573,"line_start":107,"line_end":107,"column_start":12,"column_end":28},"name":"from_scaled_axis","qualname":"<UnitComplex<N>>::from_scaled_axis","value":"pub fn from_scaled_axis<SB: Storage<N, U1>>(Vector<N, U1, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a unit complex rotation from an angle in radian wrapped in a 1-dimensional vector.","sig":null,"attributes":[{"value":"/ Builds a unit complex rotation from an angle in radian wrapped in a 1-dimensional vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":816296,"byte_end":816389,"line_start":102,"line_end":102,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":816394,"byte_end":816397,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ This is generally used in the context of generic programming. Using","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":816402,"byte_end":816473,"line_start":104,"line_end":104,"column_start":5,"column_end":76}},{"value":"/ the `::new(angle)` method instead is more common.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":816478,"byte_end":816531,"line_start":105,"line_end":105,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":816536,"byte_end":816545,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7648},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":817235,"byte_end":817242,"line_start":131,"line_end":131,"column_start":12,"column_end":19},"name":"complex","qualname":"<UnitComplex<N>>::complex","value":"pub fn complex(&Self) -> &Complex<N>","parent":null,"children":[],"decl_id":null,"docs":" The underlying complex number.","sig":null,"attributes":[{"value":"/ The underlying complex number.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":816827,"byte_end":816861,"line_start":117,"line_end":117,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":816866,"byte_end":816869,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Same as `self.as_ref()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":816874,"byte_end":816902,"line_start":119,"line_end":119,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":816907,"byte_end":816910,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":816915,"byte_end":816928,"line_start":121,"line_end":121,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":816933,"byte_end":816940,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ # extern crate num_complex;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":816945,"byte_end":816976,"line_start":123,"line_end":123,"column_start":5,"column_end":36}},{"value":"/ # use num_complex::Complex;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":816981,"byte_end":817012,"line_start":124,"line_end":124,"column_start":5,"column_end":36}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":817017,"byte_end":817049,"line_start":125,"line_end":125,"column_start":5,"column_end":37}},{"value":"/ let angle = 1.78f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":817054,"byte_end":817078,"line_start":126,"line_end":126,"column_start":5,"column_end":29}},{"value":"/ let rot = UnitComplex::new(angle);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":817083,"byte_end":817121,"line_start":127,"line_end":127,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(*rot.complex(), Complex::new(angle.cos(), angle.sin()));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":817126,"byte_end":817197,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":817202,"byte_end":817209,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":817214,"byte_end":817223,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7649},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":817447,"byte_end":817459,"line_start":139,"line_end":139,"column_start":12,"column_end":24},"name":"from_complex","qualname":"<UnitComplex<N>>::from_complex","value":"pub fn from_complex(Complex<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit complex number from a complex number.","sig":null,"attributes":[{"value":"/ Creates a new unit complex number from a complex number.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":817300,"byte_end":817360,"line_start":135,"line_end":135,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":817365,"byte_end":817368,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ The input complex number will be normalized.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":817373,"byte_end":817421,"line_start":137,"line_end":137,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":817426,"byte_end":817435,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7650},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":817731,"byte_end":817751,"line_start":147,"line_end":147,"column_start":12,"column_end":32},"name":"from_complex_and_get","qualname":"<UnitComplex<N>>::from_complex_and_get","value":"pub fn from_complex_and_get(Complex<N>) -> (Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit complex number from a complex number.","sig":null,"attributes":[{"value":"/ Creates a new unit complex number from a complex number.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":817536,"byte_end":817596,"line_start":143,"line_end":143,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":817601,"byte_end":817604,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ The input complex number will be normalized. Returns the norm of the complex number as well.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":817609,"byte_end":817705,"line_start":145,"line_end":145,"column_start":5,"column_end":101}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":817710,"byte_end":817719,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7651},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":818305,"byte_end":818325,"line_start":163,"line_end":163,"column_start":12,"column_end":32},"name":"from_rotation_matrix","qualname":"<UnitComplex<N>>::from_rotation_matrix","value":"pub fn from_rotation_matrix(&Rotation2<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds the unit complex number from the corresponding 2D rotation matrix.","sig":null,"attributes":[{"value":"/ Builds the unit complex number from the corresponding 2D rotation matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":817899,"byte_end":817976,"line_start":152,"line_end":152,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":817981,"byte_end":817984,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":817989,"byte_end":818002,"line_start":154,"line_end":154,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":818007,"byte_end":818014,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Rotation2, UnitComplex};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":818019,"byte_end":818064,"line_start":156,"line_end":156,"column_start":5,"column_end":50}},{"value":"/ let rot = Rotation2::new(1.7);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":818069,"byte_end":818103,"line_start":157,"line_end":157,"column_start":5,"column_end":39}},{"value":"/ let complex = UnitComplex::from_rotation_matrix(&rot);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":818108,"byte_end":818166,"line_start":158,"line_end":158,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(complex, UnitComplex::new(1.7));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":818171,"byte_end":818218,"line_start":159,"line_end":159,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":818223,"byte_end":818230,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":818284,"byte_end":818293,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7652},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":818793,"byte_end":818804,"line_start":172,"line_end":172,"column_start":12,"column_end":23},"name":"from_matrix","qualname":"<UnitComplex<N>>::from_matrix","value":"pub fn from_matrix(&Matrix2<N>) -> Self where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Builds an unit complex by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds an unit complex by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":818444,"byte_end":818535,"line_start":167,"line_end":167,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":818540,"byte_end":818543,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ This is an iterative method. See `.from_matrix_eps` to provide mover","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":818548,"byte_end":818620,"line_start":169,"line_end":169,"column_start":5,"column_end":77}},{"value":"/ convergence parameters and starting solution.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":818625,"byte_end":818674,"line_start":170,"line_end":170,"column_start":5,"column_end":54}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":818679,"byte_end":818781,"line_start":171,"line_end":171,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":7653},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":819722,"byte_end":819737,"line_start":191,"line_end":191,"column_start":12,"column_end":27},"name":"from_matrix_eps","qualname":"<UnitComplex<N>>::from_matrix_eps","value":"pub fn from_matrix_eps(&Matrix2<N>, N, usize, Self) -> Self where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Builds an unit complex by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds an unit complex by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":818919,"byte_end":819010,"line_start":179,"line_end":179,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":819015,"byte_end":819018,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":819023,"byte_end":819125,"line_start":181,"line_end":181,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":819130,"byte_end":819133,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":819138,"byte_end":819154,"line_start":183,"line_end":183,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":819159,"byte_end":819162,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ * `m`: the matrix from which the rotational part is to be extracted.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":819167,"byte_end":819239,"line_start":185,"line_end":185,"column_start":5,"column_end":77}},{"value":"/ * `eps`: the angular errors tolerated between the current rotation and the optimal one.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":819244,"byte_end":819335,"line_start":186,"line_end":186,"column_start":5,"column_end":96}},{"value":"/ * `max_iter`: the maximum number of iterations. Loops indefinitely until convergence if set to `0`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":819340,"byte_end":819443,"line_start":187,"line_end":187,"column_start":5,"column_end":108}},{"value":"/ * `guess`: an estimate of the solution. Convergence will be significantly faster if an initial solution close","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":819448,"byte_end":819561,"line_start":188,"line_end":188,"column_start":5,"column_end":118}},{"value":"/           to the actual solution is provided. Can be set to `UnitQuaternion::identity()` if no other","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":819566,"byte_end":819670,"line_start":189,"line_end":189,"column_start":5,"column_end":109}},{"value":"/           guesses come to mind.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":819675,"byte_end":819710,"line_start":190,"line_end":190,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":7654},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":820520,"byte_end":820531,"line_start":215,"line_end":215,"column_start":12,"column_end":23},"name":"rotation_to","qualname":"<UnitComplex<N>>::rotation_to","value":"pub fn rotation_to(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The unit complex number needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The unit complex number needed to make `self` and `other` coincide.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":819960,"byte_end":820031,"line_start":199,"line_end":199,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":820036,"byte_end":820039,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ The result is such that: `self.rotation_to(other) * self == other`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":820044,"byte_end":820115,"line_start":201,"line_end":201,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":820120,"byte_end":820123,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":820128,"byte_end":820141,"line_start":203,"line_end":203,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":820146,"byte_end":820153,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":820158,"byte_end":820197,"line_start":205,"line_end":205,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":820202,"byte_end":820234,"line_start":206,"line_end":206,"column_start":5,"column_end":37}},{"value":"/ let rot1 = UnitComplex::new(0.1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":820239,"byte_end":820276,"line_start":207,"line_end":207,"column_start":5,"column_end":42}},{"value":"/ let rot2 = UnitComplex::new(1.7);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":820281,"byte_end":820318,"line_start":208,"line_end":208,"column_start":5,"column_end":42}},{"value":"/ let rot_to = rot1.rotation_to(&rot2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":820323,"byte_end":820364,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":820369,"byte_end":820372,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot_to * rot1, rot2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":820377,"byte_end":820422,"line_start":211,"line_end":211,"column_start":5,"column_end":50}},{"value":"/ assert_relative_eq!(rot_to.inverse() * rot2, rot1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":820427,"byte_end":820482,"line_start":212,"line_end":212,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":820487,"byte_end":820494,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":820499,"byte_end":820508,"line_start":214,"line_end":214,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7655},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":821066,"byte_end":821070,"line_start":233,"line_end":233,"column_start":12,"column_end":16},"name":"powf","qualname":"<UnitComplex<N>>::powf","value":"pub fn powf(&Self, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Raise this unit complex number to a given floating power.","sig":null,"attributes":[{"value":"/ Raise this unit complex number to a given floating power.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":820595,"byte_end":820656,"line_start":219,"line_end":219,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":820661,"byte_end":820664,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ This returns the unit complex number that identifies a rotation angle equal to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":820669,"byte_end":820751,"line_start":221,"line_end":221,"column_start":5,"column_end":87}},{"value":"/ `self.angle() × n`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":820756,"byte_end":820780,"line_start":222,"line_end":222,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":820785,"byte_end":820788,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":820793,"byte_end":820806,"line_start":224,"line_end":224,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":820811,"byte_end":820818,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":820823,"byte_end":820862,"line_start":226,"line_end":226,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":820867,"byte_end":820899,"line_start":227,"line_end":227,"column_start":5,"column_end":37}},{"value":"/ let rot = UnitComplex::new(0.78);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":820904,"byte_end":820941,"line_start":228,"line_end":228,"column_start":5,"column_end":42}},{"value":"/ let pow = rot.powf(2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":820946,"byte_end":820974,"line_start":229,"line_end":229,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(pow.angle(), 2.0 * 0.78);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":820979,"byte_end":821028,"line_start":230,"line_end":230,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":821033,"byte_end":821040,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":821045,"byte_end":821054,"line_start":232,"line_end":232,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7658},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":821765,"byte_end":821781,"line_start":257,"line_end":257,"column_start":12,"column_end":28},"name":"rotation_between","qualname":"<UnitComplex<N>>::rotation_between","value":"pub fn rotation_between<SB, SC>(&Vector<N, U2, SB>, &Vector<N, U2, SC>)\n-> Self where N: RealField, SB: Storage<N, U2>, SC: Storage<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" The unit complex needed to make `a` and `b` be collinear and point toward the same\n direction.","sig":null,"attributes":[{"value":"/ The unit complex needed to make `a` and `b` be collinear and point toward the same","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":821263,"byte_end":821349,"line_start":243,"line_end":243,"column_start":5,"column_end":91}},{"value":"/ direction.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":821354,"byte_end":821368,"line_start":244,"line_end":244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":821373,"byte_end":821376,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":821381,"byte_end":821394,"line_start":246,"line_end":246,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":821399,"byte_end":821406,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":821411,"byte_end":821450,"line_start":248,"line_end":248,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector2, UnitComplex};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":821455,"byte_end":821498,"line_start":249,"line_end":249,"column_start":5,"column_end":48}},{"value":"/ let a = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":821503,"byte_end":821538,"line_start":250,"line_end":250,"column_start":5,"column_end":40}},{"value":"/ let b = Vector2::new(2.0, 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":821543,"byte_end":821578,"line_start":251,"line_end":251,"column_start":5,"column_end":40}},{"value":"/ let rot = UnitComplex::rotation_between(&a, &b);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":821583,"byte_end":821635,"line_start":252,"line_end":252,"column_start":5,"column_end":57}},{"value":"/ assert_relative_eq!(rot * a, b);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":821640,"byte_end":821676,"line_start":253,"line_end":253,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(rot.inverse() * b, a);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":821681,"byte_end":821727,"line_start":254,"line_end":254,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":821732,"byte_end":821739,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":821744,"byte_end":821753,"line_start":256,"line_end":256,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7661},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":822678,"byte_end":822701,"line_start":281,"line_end":281,"column_start":12,"column_end":35},"name":"scaled_rotation_between","qualname":"<UnitComplex<N>>::scaled_rotation_between","value":"pub fn scaled_rotation_between<SB,\n                               SC>(&Vector<N, U2, SB>, &Vector<N, U2, SC>, N)\n-> Self where N: RealField, SB: Storage<N, U2>, SC: Storage<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":822003,"byte_end":822091,"line_start":266,"line_end":266,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":822096,"byte_end":822135,"line_start":267,"line_end":267,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":822140,"byte_end":822143,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":822148,"byte_end":822161,"line_start":269,"line_end":269,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":822166,"byte_end":822173,"line_start":270,"line_end":270,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":822178,"byte_end":822217,"line_start":271,"line_end":271,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector2, UnitComplex};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":822222,"byte_end":822265,"line_start":272,"line_end":272,"column_start":5,"column_end":48}},{"value":"/ let a = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":822270,"byte_end":822305,"line_start":273,"line_end":273,"column_start":5,"column_end":40}},{"value":"/ let b = Vector2::new(2.0, 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":822310,"byte_end":822345,"line_start":274,"line_end":274,"column_start":5,"column_end":40}},{"value":"/ let rot2 = UnitComplex::scaled_rotation_between(&a, &b, 0.2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":822350,"byte_end":822415,"line_start":275,"line_end":275,"column_start":5,"column_end":70}},{"value":"/ let rot5 = UnitComplex::scaled_rotation_between(&a, &b, 0.5);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":822420,"byte_end":822485,"line_start":276,"line_end":276,"column_start":5,"column_end":70}},{"value":"/ assert_relative_eq!(rot2 * rot2 * rot2 * rot2 * rot2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":822490,"byte_end":822573,"line_start":277,"line_end":277,"column_start":5,"column_end":88}},{"value":"/ assert_relative_eq!(rot5 * rot5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":822578,"byte_end":822640,"line_start":278,"line_end":278,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":822645,"byte_end":822652,"line_start":279,"line_end":279,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":822657,"byte_end":822666,"line_start":280,"line_end":280,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7664},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":823788,"byte_end":823809,"line_start":316,"line_end":316,"column_start":12,"column_end":33},"name":"rotation_between_axis","qualname":"<UnitComplex<N>>::rotation_between_axis","value":"pub fn rotation_between_axis<SB,\n                             SC>(&Unit<Vector<N, U2, SB>>,\n                                 &Unit<Vector<N, U2, SC>>) -> Self where\nSB: Storage<N, U2>, SC: Storage<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" The unit complex needed to make `a` and `b` be collinear and point toward the same\n direction.","sig":null,"attributes":[{"value":"/ The unit complex needed to make `a` and `b` be collinear and point toward the same","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":823233,"byte_end":823319,"line_start":302,"line_end":302,"column_start":5,"column_end":91}},{"value":"/ direction.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":823324,"byte_end":823338,"line_start":303,"line_end":303,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":823343,"byte_end":823346,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":823351,"byte_end":823364,"line_start":305,"line_end":305,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":823369,"byte_end":823376,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":823381,"byte_end":823420,"line_start":307,"line_end":307,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Unit, Vector2, UnitComplex};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":823425,"byte_end":823474,"line_start":308,"line_end":308,"column_start":5,"column_end":54}},{"value":"/ let a = Unit::new_normalize(Vector2::new(1.0, 2.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":823479,"byte_end":823535,"line_start":309,"line_end":309,"column_start":5,"column_end":61}},{"value":"/ let b = Unit::new_normalize(Vector2::new(2.0, 1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":823540,"byte_end":823596,"line_start":310,"line_end":310,"column_start":5,"column_end":61}},{"value":"/ let rot = UnitComplex::rotation_between_axis(&a, &b);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":823601,"byte_end":823658,"line_start":311,"line_end":311,"column_start":5,"column_end":62}},{"value":"/ assert_relative_eq!(rot * a, b);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":823663,"byte_end":823699,"line_start":312,"line_end":312,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(rot.inverse() * b, a);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":823704,"byte_end":823750,"line_start":313,"line_end":313,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":823755,"byte_end":823762,"line_start":314,"line_end":314,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":823767,"byte_end":823776,"line_start":315,"line_end":315,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7667},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":824782,"byte_end":824810,"line_start":342,"line_end":342,"column_start":12,"column_end":40},"name":"scaled_rotation_between_axis","qualname":"<UnitComplex<N>>::scaled_rotation_between_axis","value":"pub fn scaled_rotation_between_axis<SB,\n                                    SC>(&Unit<Vector<N, U2, SB>>,\n                                        &Unit<Vector<N, U2, SC>>, N) -> Self\nwhere SB: Storage<N, U2>, SC: Storage<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":824049,"byte_end":824137,"line_start":327,"line_end":327,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":824142,"byte_end":824181,"line_start":328,"line_end":328,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":824186,"byte_end":824189,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":824194,"byte_end":824207,"line_start":330,"line_end":330,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":824212,"byte_end":824219,"line_start":331,"line_end":331,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":824224,"byte_end":824263,"line_start":332,"line_end":332,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Unit, Vector2, UnitComplex};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":824268,"byte_end":824317,"line_start":333,"line_end":333,"column_start":5,"column_end":54}},{"value":"/ let a = Unit::new_normalize(Vector2::new(1.0, 2.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":824322,"byte_end":824378,"line_start":334,"line_end":334,"column_start":5,"column_end":61}},{"value":"/ let b = Unit::new_normalize(Vector2::new(2.0, 1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":824383,"byte_end":824439,"line_start":335,"line_end":335,"column_start":5,"column_end":61}},{"value":"/ let rot2 = UnitComplex::scaled_rotation_between_axis(&a, &b, 0.2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":824444,"byte_end":824514,"line_start":336,"line_end":336,"column_start":5,"column_end":75}},{"value":"/ let rot5 = UnitComplex::scaled_rotation_between_axis(&a, &b, 0.5);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":824519,"byte_end":824589,"line_start":337,"line_end":337,"column_start":5,"column_end":75}},{"value":"/ assert_relative_eq!(rot2 * rot2 * rot2 * rot2 * rot2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":824594,"byte_end":824677,"line_start":338,"line_end":338,"column_start":5,"column_end":88}},{"value":"/ assert_relative_eq!(rot5 * rot5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":824682,"byte_end":824744,"line_start":339,"line_end":339,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":824749,"byte_end":824756,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":824761,"byte_end":824770,"line_start":341,"line_end":341,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":22966},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":848372,"byte_end":848383,"line_start":26,"line_end":26,"column_start":12,"column_end":23},"name":"Translation","qualname":"::geometry::translation::Translation","value":"Translation { vector }","parent":null,"children":[{"krate":0,"index":22969}],"decl_id":null,"docs":" A translation.\n","sig":null,"attributes":[{"value":"/ A translation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":848314,"byte_end":848332,"line_start":23,"line_end":23,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":848333,"byte_end":848343,"line_start":24,"line_end":24,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":22969},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":848579,"byte_end":848585,"line_start":32,"line_end":32,"column_start":9,"column_end":15},"name":"vector","qualname":"::geometry::translation::Translation::vector","value":"base::matrix::Matrix<N, D, base::dimension::U1, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, D>>::Buffer>","parent":{"krate":0,"index":22966},"children":[],"decl_id":null,"docs":" The translation coordinates, i.e., how much is added to a point's coordinates when it is\n translated.\n","sig":null,"attributes":[{"value":"/ The translation coordinates, i.e., how much is added to a point's coordinates when it is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":848458,"byte_end":848550,"line_start":30,"line_end":30,"column_start":5,"column_end":97}},{"value":"/ translated.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":848555,"byte_end":848570,"line_start":31,"line_end":31,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":8078},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":850710,"byte_end":850721,"line_start":121,"line_end":121,"column_start":12,"column_end":23},"name":"from_vector","qualname":"<Translation<N, D>>::from_vector","value":"pub fn from_vector(VectorN<N, D>) -> Translation<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new translation from the given vector.\n","sig":null,"attributes":[{"value":"/ Creates a new translation from the given vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":850582,"byte_end":850634,"line_start":118,"line_end":118,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":850639,"byte_end":850648,"line_start":119,"line_end":119,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"Use `::from` instead.\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":850653,"byte_end":850698,"line_start":120,"line_end":120,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":8079},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":851404,"byte_end":851411,"line_start":141,"line_end":141,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Translation<N, D>>::inverse","value":"pub fn inverse(&Self) -> Translation<N, D> where N: ClosedNeg","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self`.","sig":null,"attributes":[{"value":"/ Inverts `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":850810,"byte_end":850829,"line_start":125,"line_end":125,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":850834,"byte_end":850837,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":850842,"byte_end":850855,"line_start":127,"line_end":127,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":850860,"byte_end":850867,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Translation2, Translation3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":850872,"byte_end":850921,"line_start":129,"line_end":129,"column_start":5,"column_end":54}},{"value":"/ let t = Translation3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":850926,"byte_end":850971,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(t * t.inverse(), Translation3::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":850976,"byte_end":851034,"line_start":131,"line_end":131,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(t.inverse() * t, Translation3::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":851039,"byte_end":851097,"line_start":132,"line_end":132,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":851102,"byte_end":851105,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ // Work in all dimensions.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":851110,"byte_end":851140,"line_start":134,"line_end":134,"column_start":5,"column_end":35}},{"value":"/ let t = Translation2::new(1.0, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":851145,"byte_end":851185,"line_start":135,"line_end":135,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(t * t.inverse(), Translation2::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":851190,"byte_end":851248,"line_start":136,"line_end":136,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(t.inverse() * t, Translation2::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":851253,"byte_end":851311,"line_start":137,"line_end":137,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":851316,"byte_end":851323,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":851328,"byte_end":851337,"line_start":139,"line_end":139,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use inverse_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":851342,"byte_end":851392,"line_start":140,"line_end":140,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":8080},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":852354,"byte_end":852368,"line_start":167,"line_end":167,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Translation<N, D>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> MatrixN<N, DimNameSum<D, U1>> where N: Zero +\nOne, D: DimNameAdd<U1>,\nDefaultAllocator: Allocator<N, DimNameSum<D, U1>, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this translation into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this translation into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":851530,"byte_end":851614,"line_start":148,"line_end":148,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":851619,"byte_end":851622,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":851627,"byte_end":851640,"line_start":150,"line_end":150,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":851645,"byte_end":851652,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Translation2, Translation3, Matrix3, Matrix4};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":851657,"byte_end":851724,"line_start":152,"line_end":152,"column_start":5,"column_end":72}},{"value":"/ let t = Translation3::new(10.0, 20.0, 30.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":851729,"byte_end":851777,"line_start":153,"line_end":153,"column_start":5,"column_end":53}},{"value":"/ let expected = Matrix4::new(1.0, 0.0, 0.0, 10.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":851782,"byte_end":851834,"line_start":154,"line_end":154,"column_start":5,"column_end":57}},{"value":"/                             0.0, 1.0, 0.0, 20.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":851839,"byte_end":851891,"line_start":155,"line_end":155,"column_start":5,"column_end":57}},{"value":"/                             0.0, 0.0, 1.0, 30.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":851896,"byte_end":851948,"line_start":156,"line_end":156,"column_start":5,"column_end":57}},{"value":"/                             0.0, 0.0, 0.0, 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":851953,"byte_end":852005,"line_start":157,"line_end":157,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(t.to_homogeneous(), expected);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":852010,"byte_end":852055,"line_start":158,"line_end":158,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":852060,"byte_end":852063,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ let t = Translation2::new(10.0, 20.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":852068,"byte_end":852110,"line_start":160,"line_end":160,"column_start":5,"column_end":47}},{"value":"/ let expected = Matrix3::new(1.0, 0.0, 10.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":852115,"byte_end":852162,"line_start":161,"line_end":161,"column_start":5,"column_end":52}},{"value":"/                             0.0, 1.0, 20.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":852167,"byte_end":852214,"line_start":162,"line_end":162,"column_start":5,"column_end":52}},{"value":"/                             0.0, 0.0, 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":852219,"byte_end":852266,"line_start":163,"line_end":163,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(t.to_homogeneous(), expected);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":852271,"byte_end":852316,"line_start":164,"line_end":164,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":852321,"byte_end":852328,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":852333,"byte_end":852342,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8081},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":853425,"byte_end":853436,"line_start":199,"line_end":199,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<Translation<N, D>>::inverse_mut","value":"pub fn inverse_mut(&mut Self) where N: ClosedNeg","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self` in-place.","sig":null,"attributes":[{"value":"/ Inverts `self` in-place.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":852732,"byte_end":852760,"line_start":180,"line_end":180,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":852765,"byte_end":852768,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":852773,"byte_end":852786,"line_start":182,"line_end":182,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":852791,"byte_end":852798,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Translation2, Translation3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":852803,"byte_end":852852,"line_start":184,"line_end":184,"column_start":5,"column_end":54}},{"value":"/ let t = Translation3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":852857,"byte_end":852902,"line_start":185,"line_end":185,"column_start":5,"column_end":50}},{"value":"/ let mut inv_t = Translation3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":852907,"byte_end":852960,"line_start":186,"line_end":186,"column_start":5,"column_end":58}},{"value":"/ inv_t.inverse_mut();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":852965,"byte_end":852989,"line_start":187,"line_end":187,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(t * inv_t, Translation3::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":852994,"byte_end":853046,"line_start":188,"line_end":188,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(inv_t * t, Translation3::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":853051,"byte_end":853103,"line_start":189,"line_end":189,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":853108,"byte_end":853111,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ // Work in all dimensions.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":853116,"byte_end":853146,"line_start":191,"line_end":191,"column_start":5,"column_end":35}},{"value":"/ let t = Translation2::new(1.0, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":853151,"byte_end":853191,"line_start":192,"line_end":192,"column_start":5,"column_end":45}},{"value":"/ let mut inv_t = Translation2::new(1.0, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":853196,"byte_end":853244,"line_start":193,"line_end":193,"column_start":5,"column_end":53}},{"value":"/ inv_t.inverse_mut();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":853249,"byte_end":853273,"line_start":194,"line_end":194,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(t * inv_t, Translation2::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":853278,"byte_end":853330,"line_start":195,"line_end":195,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(inv_t * t, Translation2::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":853335,"byte_end":853387,"line_start":196,"line_end":196,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":853392,"byte_end":853399,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":853404,"byte_end":853413,"line_start":198,"line_end":198,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8085},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":854041,"byte_end":854056,"line_start":222,"line_end":222,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Translation<N, D>>::transform_point","value":"pub fn transform_point(&Self, &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Translate the given point.","sig":null,"attributes":[{"value":"/ Translate the given point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":853634,"byte_end":853664,"line_start":211,"line_end":211,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":853669,"byte_end":853672,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":853677,"byte_end":853732,"line_start":213,"line_end":213,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":853737,"byte_end":853740,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":853745,"byte_end":853758,"line_start":215,"line_end":215,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":853763,"byte_end":853770,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Translation3, Point3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":853775,"byte_end":853818,"line_start":217,"line_end":217,"column_start":5,"column_end":48}},{"value":"/ let t = Translation3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":853823,"byte_end":853868,"line_start":218,"line_end":218,"column_start":5,"column_end":50}},{"value":"/ let transformed_point = t.transform_point(&Point3::new(4.0, 5.0, 6.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":853873,"byte_end":853948,"line_start":219,"line_end":219,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(transformed_point, Point3::new(5.0, 7.0, 9.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":853953,"byte_end":854015,"line_start":220,"line_end":220,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":854020,"byte_end":854029,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8089},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":854625,"byte_end":854648,"line_start":240,"line_end":240,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<Translation<N, D>>::inverse_transform_point","value":"pub fn inverse_transform_point(&Self, &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Translate the given point by the inverse of this translation.","sig":null,"attributes":[{"value":"/ Translate the given point by the inverse of this translation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":854243,"byte_end":854308,"line_start":231,"line_end":231,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":854313,"byte_end":854316,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":854321,"byte_end":854334,"line_start":233,"line_end":233,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":854339,"byte_end":854346,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Translation3, Point3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":854351,"byte_end":854394,"line_start":235,"line_end":235,"column_start":5,"column_end":48}},{"value":"/ let t = Translation3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":854399,"byte_end":854444,"line_start":236,"line_end":236,"column_start":5,"column_end":50}},{"value":"/ let transformed_point = t.inverse_transform_point(&Point3::new(4.0, 5.0, 6.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":854449,"byte_end":854532,"line_start":237,"line_end":237,"column_start":5,"column_end":88}},{"value":"/ assert_eq!(transformed_point, Point3::new(3.0, 3.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":854537,"byte_end":854599,"line_start":238,"line_end":238,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":854604,"byte_end":854613,"line_start":239,"line_end":239,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":8140},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_alias.rs","byte_start":856909,"byte_end":856921,"line_start":6,"line_end":6,"column_start":10,"column_end":22},"name":"Translation1","qualname":"::geometry::translation_alias::Translation1","value":"Translation<N, U1>","parent":null,"children":[],"decl_id":null,"docs":" A 1-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 1-dimensional translation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_alias.rs","byte_start":856867,"byte_end":856899,"line_start":5,"line_end":5,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":8142},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_alias.rs","byte_start":856990,"byte_end":857002,"line_start":9,"line_end":9,"column_start":10,"column_end":22},"name":"Translation2","qualname":"::geometry::translation_alias::Translation2","value":"Translation<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 2-dimensional translation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_alias.rs","byte_start":856948,"byte_end":856980,"line_start":8,"line_end":8,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":8144},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_alias.rs","byte_start":857071,"byte_end":857083,"line_start":12,"line_end":12,"column_start":10,"column_end":22},"name":"Translation3","qualname":"::geometry::translation_alias::Translation3","value":"Translation<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 3-dimensional translation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_alias.rs","byte_start":857029,"byte_end":857061,"line_start":11,"line_end":11,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":8146},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_alias.rs","byte_start":857152,"byte_end":857164,"line_start":15,"line_end":15,"column_start":10,"column_end":22},"name":"Translation4","qualname":"::geometry::translation_alias::Translation4","value":"Translation<N, U4>","parent":null,"children":[],"decl_id":null,"docs":" A 4-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 4-dimensional translation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_alias.rs","byte_start":857110,"byte_end":857142,"line_start":14,"line_end":14,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":8148},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_alias.rs","byte_start":857233,"byte_end":857245,"line_start":18,"line_end":18,"column_start":10,"column_end":22},"name":"Translation5","qualname":"::geometry::translation_alias::Translation5","value":"Translation<N, U5>","parent":null,"children":[],"decl_id":null,"docs":" A 5-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 5-dimensional translation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_alias.rs","byte_start":857191,"byte_end":857223,"line_start":17,"line_end":17,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":8150},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_alias.rs","byte_start":857314,"byte_end":857326,"line_start":21,"line_end":21,"column_start":10,"column_end":22},"name":"Translation6","qualname":"::geometry::translation_alias::Translation6","value":"Translation<N, U6>","parent":null,"children":[],"decl_id":null,"docs":" A 6-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 6-dimensional translation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_alias.rs","byte_start":857272,"byte_end":857304,"line_start":20,"line_end":20,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":8214},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_construction.rs","byte_start":858353,"byte_end":858361,"line_start":37,"line_end":37,"column_start":12,"column_end":20},"name":"identity","qualname":"<Translation<N, D>>::identity","value":"pub fn identity() -> Translation<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new identity translation.","sig":null,"attributes":[{"value":"/ Creates a new identity translation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_construction.rs","byte_start":857897,"byte_end":857936,"line_start":22,"line_end":22,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_construction.rs","byte_start":857941,"byte_end":857944,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_construction.rs","byte_start":857949,"byte_end":857962,"line_start":24,"line_end":24,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_construction.rs","byte_start":857967,"byte_end":857974,"line_start":25,"line_end":25,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3, Translation2, Translation3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_construction.rs","byte_start":857979,"byte_end":858044,"line_start":26,"line_end":26,"column_start":5,"column_end":70}},{"value":"/ let t = Translation2::identity();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_construction.rs","byte_start":858049,"byte_end":858086,"line_start":27,"line_end":27,"column_start":5,"column_end":42}},{"value":"/ let p = Point2::new(1.0, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_construction.rs","byte_start":858091,"byte_end":858125,"line_start":28,"line_end":28,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(t * p, p);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_construction.rs","byte_start":858130,"byte_end":858155,"line_start":29,"line_end":29,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_construction.rs","byte_start":858160,"byte_end":858163,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ // Works in all dimensions.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_construction.rs","byte_start":858168,"byte_end":858199,"line_start":31,"line_end":31,"column_start":5,"column_end":36}},{"value":"/ let t = Translation3::identity();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_construction.rs","byte_start":858204,"byte_end":858241,"line_start":32,"line_end":32,"column_start":5,"column_end":42}},{"value":"/ let p = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_construction.rs","byte_start":858246,"byte_end":858285,"line_start":33,"line_end":33,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(t * p, p);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_construction.rs","byte_start":858290,"byte_end":858315,"line_start":34,"line_end":34,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_construction.rs","byte_start":858320,"byte_end":858327,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_construction.rs","byte_start":858332,"byte_end":858341,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":23124},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":879870,"byte_end":879878,"line_start":71,"line_end":71,"column_start":12,"column_end":20},"name":"Isometry","qualname":"::geometry::isometry::Isometry","value":"Isometry { rotation, translation }","parent":null,"children":[{"krate":0,"index":23128},{"krate":0,"index":23129}],"decl_id":null,"docs":" A direct isometry, i.e., a rotation followed by a translation (aka. a rigid-body motion).","sig":null,"attributes":[{"value":"/ A direct isometry, i.e., a rotation followed by a translation (aka. a rigid-body motion).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":876757,"byte_end":876850,"line_start":22,"line_end":22,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":876851,"byte_end":876854,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This is also known as an element of a Special Euclidean (SE) group.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":876855,"byte_end":876926,"line_start":24,"line_end":24,"column_start":1,"column_end":72}},{"value":"/ The `Isometry` type can either represent a 2D or 3D isometry.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":876927,"byte_end":876992,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ A 2D isometry is composed of:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":876993,"byte_end":877026,"line_start":26,"line_end":26,"column_start":1,"column_end":34}},{"value":"/ - A translation part of type [`Translation2`](crate::Translation2)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":877027,"byte_end":877097,"line_start":27,"line_end":27,"column_start":1,"column_end":71}},{"value":"/ - A rotation part which can either be a [`UnitComplex`](crate::UnitComplex) or a [`Rotation2`](crate::Rotation2).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":877098,"byte_end":877215,"line_start":28,"line_end":28,"column_start":1,"column_end":118}},{"value":"/ A 3D isometry is composed of:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":877216,"byte_end":877249,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/ - A translation part of type [`Translation3`](crate::Translation3)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":877250,"byte_end":877320,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/ - A rotation part which can either be a [`UnitQuaternion`](crate::UnitQuaternion) or a [`Rotation3`](crate::Rotation3).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":877321,"byte_end":877444,"line_start":31,"line_end":31,"column_start":1,"column_end":124}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":877445,"byte_end":877448,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Note that instead of using the [`Isometry`](crate::Isometry) type in your code directly, you should use one","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":877449,"byte_end":877560,"line_start":33,"line_end":33,"column_start":1,"column_end":112}},{"value":"/ of its aliases: [`Isometry2`](crate::Isometry2), [`Isometry3`](crate::Isometry3),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":877561,"byte_end":877646,"line_start":34,"line_end":34,"column_start":1,"column_end":86}},{"value":"/ [`IsometryMatrix2`](crate::IsometryMatrix2), [`IsometryMatrix3`](crate::IsometryMatrix3). Though","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":877647,"byte_end":877747,"line_start":35,"line_end":35,"column_start":1,"column_end":101}},{"value":"/ keep in mind that all the documentation of all the methods of these aliases will also appears on","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":877748,"byte_end":877848,"line_start":36,"line_end":36,"column_start":1,"column_end":101}},{"value":"/ this page.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":877849,"byte_end":877863,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":877864,"byte_end":877867,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Construction","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":877868,"byte_end":877886,"line_start":39,"line_end":39,"column_start":1,"column_end":19}},{"value":"/ * [From a 2D vector and/or an angle <span style=\"float:right;\">`new`, `translation`, `rotation`…</span>](#construction-from-a-2d-vector-andor-a-rotation-angle)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":877887,"byte_end":878052,"line_start":40,"line_end":40,"column_start":1,"column_end":164}},{"value":"/ * [From a 3D vector and/or an axis-angle <span style=\"float:right;\">`new`, `translation`, `rotation`…</span>](#construction-from-a-3d-vector-andor-an-axis-angle)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":878053,"byte_end":878220,"line_start":41,"line_end":41,"column_start":1,"column_end":166}},{"value":"/ * [From a 3D eye position and target point <span style=\"float:right;\">`look_at`, `look_at_lh`, `face_towards`…</span>](#construction-from-a-3d-eye-position-and-target-point)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":878221,"byte_end":878400,"line_start":42,"line_end":42,"column_start":1,"column_end":178}},{"value":"/ * [From the translation and rotation parts <span style=\"float:right;\">`from_parts`…</span>](#from-the-translation-and-rotation-parts)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":878401,"byte_end":878540,"line_start":43,"line_end":43,"column_start":1,"column_end":138}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":878541,"byte_end":878544,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # Transformation and composition","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":878545,"byte_end":878581,"line_start":45,"line_end":45,"column_start":1,"column_end":37}},{"value":"/ Note that transforming vectors and points can be done by multiplication, e.g., `isometry * point`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":878582,"byte_end":878684,"line_start":46,"line_end":46,"column_start":1,"column_end":103}},{"value":"/ Composing an isometry with another transformation can also be done by multiplication or division.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":878685,"byte_end":878786,"line_start":47,"line_end":47,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":878787,"byte_end":878790,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ * [Transformation of a vector or a point <span style=\"float:right;\">`transform_vector`, `inverse_transform_point`…</span>](#transformation-of-a-vector-or-a-point)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":878791,"byte_end":878959,"line_start":49,"line_end":49,"column_start":1,"column_end":167}},{"value":"/ * [Inversion and in-place composition <span style=\"float:right;\">`inverse`, `append_rotation_wrt_point_mut`…</span>](#inversion-and-in-place-composition)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":878960,"byte_end":879119,"line_start":50,"line_end":50,"column_start":1,"column_end":158}},{"value":"/ * [Interpolation <span style=\"float:right;\">`lerp_slerp`…</span>](#interpolation)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":879120,"byte_end":879207,"line_start":51,"line_end":51,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":879208,"byte_end":879211,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Conversion to a matrix","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":879212,"byte_end":879240,"line_start":53,"line_end":53,"column_start":1,"column_end":29}},{"value":"/ * [Conversion to a matrix <span style=\"float:right;\">`to_matrix`…</span>](#conversion-to-a-matrix)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":879241,"byte_end":879345,"line_start":54,"line_end":54,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":879346,"byte_end":879349,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":879350,"byte_end":879360,"line_start":56,"line_end":56,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":23128},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":880011,"byte_end":880019,"line_start":76,"line_end":76,"column_start":9,"column_end":17},"name":"rotation","qualname":"::geometry::isometry::Isometry::rotation","value":"R","parent":{"krate":0,"index":23124},"children":[],"decl_id":null,"docs":" The pure rotational part of this isometry.\n","sig":null,"attributes":[{"value":"/ The pure rotational part of this isometry.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":879956,"byte_end":880002,"line_start":75,"line_end":75,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":23129},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":880086,"byte_end":880097,"line_start":78,"line_end":78,"column_start":9,"column_end":20},"name":"translation","qualname":"::geometry::isometry::Isometry::translation","value":"geometry::translation::Translation<N, D>","parent":{"krate":0,"index":23124},"children":[],"decl_id":null,"docs":" The pure translational part of this isometry.\n","sig":null,"attributes":[{"value":"/ The pure translational part of this isometry.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":880028,"byte_end":880077,"line_start":77,"line_end":77,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":8621},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":882354,"byte_end":882364,"line_start":157,"line_end":157,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Isometry<N, D, R>>::from_parts","value":"pub fn from_parts(Translation<N, D>, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new isometry from its rotational and translational parts.","sig":null,"attributes":[{"value":"/ Creates a new isometry from its rotational and translational parts.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":881742,"byte_end":881813,"line_start":142,"line_end":142,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":881818,"byte_end":881821,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":881826,"byte_end":881839,"line_start":144,"line_end":144,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":881844,"byte_end":881847,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":881852,"byte_end":881859,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":881864,"byte_end":881903,"line_start":147,"line_end":147,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":881908,"byte_end":881927,"line_start":148,"line_end":148,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry3, Translation3, UnitQuaternion, Vector3, Point3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":881932,"byte_end":882011,"line_start":149,"line_end":149,"column_start":5,"column_end":84}},{"value":"/ let tra = Translation3::new(0.0, 0.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":882016,"byte_end":882063,"line_start":150,"line_end":150,"column_start":5,"column_end":52}},{"value":"/ let rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::PI);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":882068,"byte_end":882147,"line_start":151,"line_end":151,"column_start":5,"column_end":84}},{"value":"/ let iso = Isometry3::from_parts(tra, rot);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":882152,"byte_end":882198,"line_start":152,"line_end":152,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":882203,"byte_end":882206,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(iso * Point3::new(1.0, 2.0, 3.0), Point3::new(-1.0, 2.0, 0.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":882211,"byte_end":882316,"line_start":154,"line_end":154,"column_start":5,"column_end":110}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":882321,"byte_end":882328,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":882333,"byte_end":882342,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8626},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":883145,"byte_end":883152,"line_start":186,"line_end":186,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Isometry<N, D, R>>::inverse","value":"pub fn inverse(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self`.","sig":null,"attributes":[{"value":"/ Inverts `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":882704,"byte_end":882723,"line_start":171,"line_end":171,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":882728,"byte_end":882731,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":882736,"byte_end":882749,"line_start":173,"line_end":173,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":882754,"byte_end":882757,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":882762,"byte_end":882769,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":882774,"byte_end":882793,"line_start":176,"line_end":176,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Point2, Vector2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":882798,"byte_end":882847,"line_start":177,"line_end":177,"column_start":5,"column_end":54}},{"value":"/ let iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":882852,"byte_end":882929,"line_start":178,"line_end":178,"column_start":5,"column_end":82}},{"value":"/ let inv = iso.inverse();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":882934,"byte_end":882962,"line_start":179,"line_end":179,"column_start":5,"column_end":33}},{"value":"/ let pt = Point2::new(1.0, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":882967,"byte_end":883002,"line_start":180,"line_end":180,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":883007,"byte_end":883010,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(inv * (iso * pt), pt);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":883015,"byte_end":883052,"line_start":182,"line_end":182,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":883057,"byte_end":883064,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":883069,"byte_end":883078,"line_start":184,"line_end":184,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use inverse_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":883083,"byte_end":883133,"line_start":185,"line_end":185,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":8627},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":883692,"byte_end":883703,"line_start":207,"line_end":207,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<Isometry<N, D, R>>::inverse_mut","value":"pub fn inverse_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self` in-place.","sig":null,"attributes":[{"value":"/ Inverts `self` in-place.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":883256,"byte_end":883284,"line_start":192,"line_end":192,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":883289,"byte_end":883292,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":883297,"byte_end":883310,"line_start":194,"line_end":194,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":883315,"byte_end":883318,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":883323,"byte_end":883330,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":883335,"byte_end":883354,"line_start":197,"line_end":197,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Point2, Vector2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":883359,"byte_end":883408,"line_start":198,"line_end":198,"column_start":5,"column_end":54}},{"value":"/ let mut iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":883413,"byte_end":883494,"line_start":199,"line_end":199,"column_start":5,"column_end":86}},{"value":"/ let pt = Point2::new(1.0, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":883499,"byte_end":883534,"line_start":200,"line_end":200,"column_start":5,"column_end":40}},{"value":"/ let transformed_pt = iso * pt;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":883539,"byte_end":883573,"line_start":201,"line_end":201,"column_start":5,"column_end":39}},{"value":"/ iso.inverse_mut();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":883578,"byte_end":883600,"line_start":202,"line_end":202,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":883605,"byte_end":883608,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso * transformed_pt, pt);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":883613,"byte_end":883654,"line_start":204,"line_end":204,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":883659,"byte_end":883666,"line_start":205,"line_end":205,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":883671,"byte_end":883680,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8628},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":884367,"byte_end":884374,"line_start":226,"line_end":226,"column_start":12,"column_end":19},"name":"inv_mul","qualname":"<Isometry<N, D, R>>::inv_mul","value":"pub fn inv_mul(&Self, &Isometry<N, D, R>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self.inverse() * rhs` in a more efficient way.","sig":null,"attributes":[{"value":"/ Computes `self.inverse() * rhs` in a more efficient way.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":883897,"byte_end":883957,"line_start":213,"line_end":213,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":883962,"byte_end":883965,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":883970,"byte_end":883983,"line_start":215,"line_end":215,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":883988,"byte_end":883991,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":883996,"byte_end":884003,"line_start":217,"line_end":217,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":884008,"byte_end":884027,"line_start":218,"line_end":218,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Point2, Vector2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":884032,"byte_end":884081,"line_start":219,"line_end":219,"column_start":5,"column_end":54}},{"value":"/ let mut iso1 = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":884086,"byte_end":884168,"line_start":220,"line_end":220,"column_start":5,"column_end":87}},{"value":"/ let mut iso2 = Isometry2::new(Vector2::new(10.0, 20.0), f32::consts::FRAC_PI_4);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":884173,"byte_end":884257,"line_start":221,"line_end":221,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":884262,"byte_end":884265,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso1.inverse() * iso2, iso1.inv_mul(&iso2));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":884270,"byte_end":884329,"line_start":223,"line_end":223,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":884334,"byte_end":884341,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":884346,"byte_end":884355,"line_start":225,"line_end":225,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8629},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":885209,"byte_end":885231,"line_start":250,"line_end":250,"column_start":12,"column_end":34},"name":"append_translation_mut","qualname":"<Isometry<N, D, R>>::append_translation_mut","value":"pub fn append_translation_mut(&mut Self, &Translation<N, D>)","parent":null,"children":[],"decl_id":null,"docs":" Appends to `self` the given translation in-place.","sig":null,"attributes":[{"value":"/ Appends to `self` the given translation in-place.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":884701,"byte_end":884754,"line_start":235,"line_end":235,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":884759,"byte_end":884762,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":884767,"byte_end":884780,"line_start":237,"line_end":237,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":884785,"byte_end":884788,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":884793,"byte_end":884800,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":884805,"byte_end":884824,"line_start":240,"line_end":240,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Translation2, Vector2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":884829,"byte_end":884884,"line_start":241,"line_end":241,"column_start":5,"column_end":60}},{"value":"/ let mut iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":884889,"byte_end":884970,"line_start":242,"line_end":242,"column_start":5,"column_end":86}},{"value":"/ let tra = Translation2::new(3.0, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":884975,"byte_end":885017,"line_start":243,"line_end":243,"column_start":5,"column_end":47}},{"value":"/ // Same as `iso = tra * iso`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":885022,"byte_end":885055,"line_start":244,"line_end":244,"column_start":5,"column_end":38}},{"value":"/ iso.append_translation_mut(&tra);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":885060,"byte_end":885097,"line_start":245,"line_end":245,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":885102,"byte_end":885105,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso.translation, Translation2::new(4.0, 6.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":885110,"byte_end":885171,"line_start":247,"line_end":247,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":885176,"byte_end":885183,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":885188,"byte_end":885197,"line_start":249,"line_end":249,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8630},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":885950,"byte_end":885969,"line_start":270,"line_end":270,"column_start":12,"column_end":31},"name":"append_rotation_mut","qualname":"<Isometry<N, D, R>>::append_rotation_mut","value":"pub fn append_rotation_mut(&mut Self, &R)","parent":null,"children":[],"decl_id":null,"docs":" Appends to `self` the given rotation in-place.","sig":null,"attributes":[{"value":"/ Appends to `self` the given rotation in-place.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":885324,"byte_end":885374,"line_start":254,"line_end":254,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":885379,"byte_end":885382,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":885387,"byte_end":885400,"line_start":256,"line_end":256,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":885405,"byte_end":885408,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":885413,"byte_end":885420,"line_start":258,"line_end":258,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":885425,"byte_end":885464,"line_start":259,"line_end":259,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":885469,"byte_end":885488,"line_start":260,"line_end":260,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Translation2, UnitComplex, Vector2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":885493,"byte_end":885561,"line_start":261,"line_end":261,"column_start":5,"column_end":73}},{"value":"/ let mut iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::PI / 6.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":885566,"byte_end":885646,"line_start":262,"line_end":262,"column_start":5,"column_end":85}},{"value":"/ let rot = UnitComplex::new(f32::consts::PI / 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":885651,"byte_end":885705,"line_start":263,"line_end":263,"column_start":5,"column_end":59}},{"value":"/ // Same as `iso = rot * iso`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":885710,"byte_end":885743,"line_start":264,"line_end":264,"column_start":5,"column_end":38}},{"value":"/ iso.append_rotation_mut(&rot);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":885748,"byte_end":885782,"line_start":265,"line_end":265,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":885787,"byte_end":885790,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(iso, Isometry2::new(Vector2::new(-2.0, 1.0), f32::consts::PI * 2.0 / 3.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":885795,"byte_end":885912,"line_start":267,"line_end":267,"column_start":5,"column_end":122}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":885917,"byte_end":885924,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":885929,"byte_end":885938,"line_start":269,"line_end":269,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8631},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":886822,"byte_end":886851,"line_start":292,"line_end":292,"column_start":12,"column_end":41},"name":"append_rotation_wrt_point_mut","qualname":"<Isometry<N, D, R>>::append_rotation_wrt_point_mut","value":"pub fn append_rotation_wrt_point_mut(&mut Self, &R, &Point<N, D>)","parent":null,"children":[],"decl_id":null,"docs":" Appends in-place to `self` a rotation centered at the point `p`, i.e., the rotation that\n lets `p` invariant.","sig":null,"attributes":[{"value":"/ Appends in-place to `self` a rotation centered at the point `p`, i.e., the rotation that","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":886140,"byte_end":886232,"line_start":275,"line_end":275,"column_start":5,"column_end":97}},{"value":"/ lets `p` invariant.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":886237,"byte_end":886260,"line_start":276,"line_end":276,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":886265,"byte_end":886268,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":886273,"byte_end":886286,"line_start":278,"line_end":278,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":886291,"byte_end":886294,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":886299,"byte_end":886306,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":886311,"byte_end":886350,"line_start":281,"line_end":281,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":886355,"byte_end":886374,"line_start":282,"line_end":282,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Translation2, UnitComplex, Vector2, Point2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":886379,"byte_end":886455,"line_start":283,"line_end":283,"column_start":5,"column_end":81}},{"value":"/ let mut iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":886460,"byte_end":886541,"line_start":284,"line_end":284,"column_start":5,"column_end":86}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":886546,"byte_end":886601,"line_start":285,"line_end":285,"column_start":5,"column_end":60}},{"value":"/ let pt = Point2::new(1.0, 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":886606,"byte_end":886641,"line_start":286,"line_end":286,"column_start":5,"column_end":40}},{"value":"/ iso.append_rotation_wrt_point_mut(&rot, &pt);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":886646,"byte_end":886695,"line_start":287,"line_end":287,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":886700,"byte_end":886703,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(iso * pt, Point2::new(-2.0, 0.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":886708,"byte_end":886784,"line_start":289,"line_end":289,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":886789,"byte_end":886796,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":886801,"byte_end":886810,"line_start":291,"line_end":291,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8632},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":887724,"byte_end":887754,"line_start":315,"line_end":315,"column_start":12,"column_end":42},"name":"append_rotation_wrt_center_mut","qualname":"<Isometry<N, D, R>>::append_rotation_wrt_center_mut","value":"pub fn append_rotation_wrt_center_mut(&mut Self, &R)","parent":null,"children":[],"decl_id":null,"docs":" Appends in-place to `self` a rotation centered at the point with coordinates\n `self.translation`.","sig":null,"attributes":[{"value":"/ Appends in-place to `self` a rotation centered at the point with coordinates","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":887029,"byte_end":887109,"line_start":298,"line_end":298,"column_start":5,"column_end":85}},{"value":"/ `self.translation`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":887114,"byte_end":887137,"line_start":299,"line_end":299,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":887142,"byte_end":887145,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":887150,"byte_end":887163,"line_start":301,"line_end":301,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":887168,"byte_end":887171,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":887176,"byte_end":887183,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":887188,"byte_end":887207,"line_start":304,"line_end":304,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Translation2, UnitComplex, Vector2, Point2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":887212,"byte_end":887288,"line_start":305,"line_end":305,"column_start":5,"column_end":81}},{"value":"/ let mut iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":887293,"byte_end":887374,"line_start":306,"line_end":306,"column_start":5,"column_end":86}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":887379,"byte_end":887434,"line_start":307,"line_end":307,"column_start":5,"column_end":60}},{"value":"/ iso.append_rotation_wrt_center_mut(&rot);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":887439,"byte_end":887484,"line_start":308,"line_end":308,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":887489,"byte_end":887492,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ // The translation part should not have changed.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":887497,"byte_end":887549,"line_start":310,"line_end":310,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(iso.translation.vector, Vector2::new(1.0, 2.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":887554,"byte_end":887617,"line_start":311,"line_end":311,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(iso.rotation, UnitComplex::new(f32::consts::PI));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":887622,"byte_end":887686,"line_start":312,"line_end":312,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":887691,"byte_end":887698,"line_start":313,"line_end":313,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":887703,"byte_end":887712,"line_start":314,"line_end":314,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8637},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":888778,"byte_end":888793,"line_start":344,"line_end":344,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Isometry<N, D, R>>::transform_point","value":"pub fn transform_point(&Self, &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by this isometry.","sig":null,"attributes":[{"value":"/ Transform the given point by this isometry.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":888049,"byte_end":888096,"line_start":326,"line_end":326,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":888101,"byte_end":888104,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":888109,"byte_end":888164,"line_start":328,"line_end":328,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":888169,"byte_end":888172,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":888177,"byte_end":888190,"line_start":330,"line_end":330,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":888195,"byte_end":888198,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":888203,"byte_end":888210,"line_start":332,"line_end":332,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":888215,"byte_end":888254,"line_start":333,"line_end":333,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":888259,"byte_end":888278,"line_start":334,"line_end":334,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry3, Translation3, UnitQuaternion, Vector3, Point3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":888283,"byte_end":888362,"line_start":335,"line_end":335,"column_start":5,"column_end":84}},{"value":"/ let tra = Translation3::new(0.0, 0.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":888367,"byte_end":888414,"line_start":336,"line_end":336,"column_start":5,"column_end":52}},{"value":"/ let rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":888419,"byte_end":888505,"line_start":337,"line_end":337,"column_start":5,"column_end":91}},{"value":"/ let iso = Isometry3::from_parts(tra, rot);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":888510,"byte_end":888556,"line_start":338,"line_end":338,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":888561,"byte_end":888564,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ let transformed_point = iso.transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":888569,"byte_end":888646,"line_start":340,"line_end":340,"column_start":5,"column_end":82}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(3.0, 2.0, 2.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":888651,"byte_end":888740,"line_start":341,"line_end":341,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":888745,"byte_end":888752,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":888757,"byte_end":888766,"line_start":343,"line_end":343,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8638},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":889650,"byte_end":889666,"line_start":367,"line_end":367,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<Isometry<N, D, R>>::transform_vector","value":"pub fn transform_vector(&Self, &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by this isometry, ignoring the translation\n component of the isometry.","sig":null,"attributes":[{"value":"/ Transform the given vector by this isometry, ignoring the translation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":888865,"byte_end":888938,"line_start":348,"line_end":348,"column_start":5,"column_end":78}},{"value":"/ component of the isometry.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":888943,"byte_end":888973,"line_start":349,"line_end":349,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":888978,"byte_end":888981,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * v`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":888986,"byte_end":889040,"line_start":351,"line_end":351,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":889045,"byte_end":889048,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":889053,"byte_end":889066,"line_start":353,"line_end":353,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":889071,"byte_end":889074,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":889079,"byte_end":889086,"line_start":355,"line_end":355,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":889091,"byte_end":889130,"line_start":356,"line_end":356,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":889135,"byte_end":889154,"line_start":357,"line_end":357,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry3, Translation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":889159,"byte_end":889230,"line_start":358,"line_end":358,"column_start":5,"column_end":76}},{"value":"/ let tra = Translation3::new(0.0, 0.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":889235,"byte_end":889282,"line_start":359,"line_end":359,"column_start":5,"column_end":52}},{"value":"/ let rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":889287,"byte_end":889373,"line_start":360,"line_end":360,"column_start":5,"column_end":91}},{"value":"/ let iso = Isometry3::from_parts(tra, rot);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":889378,"byte_end":889424,"line_start":361,"line_end":361,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":889429,"byte_end":889432,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ let transformed_point = iso.transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":889437,"byte_end":889516,"line_start":363,"line_end":363,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(transformed_point, Vector3::new(3.0, 2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":889521,"byte_end":889612,"line_start":364,"line_end":364,"column_start":5,"column_end":96}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":889617,"byte_end":889624,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":889629,"byte_end":889638,"line_start":366,"line_end":366,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8639},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":890543,"byte_end":890566,"line_start":389,"line_end":389,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<Isometry<N, D, R>>::inverse_transform_point","value":"pub fn inverse_transform_point(&Self, &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by the inverse of this isometry. This may be\n less expensive than computing the entire isometry inverse and then\n transforming the point.","sig":null,"attributes":[{"value":"/ Transform the given point by the inverse of this isometry. This may be","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":889740,"byte_end":889814,"line_start":371,"line_end":371,"column_start":5,"column_end":79}},{"value":"/ less expensive than computing the entire isometry inverse and then","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":889819,"byte_end":889889,"line_start":372,"line_end":372,"column_start":5,"column_end":75}},{"value":"/ transforming the point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":889894,"byte_end":889921,"line_start":373,"line_end":373,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":889926,"byte_end":889929,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":889934,"byte_end":889947,"line_start":375,"line_end":375,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":889952,"byte_end":889955,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":889960,"byte_end":889967,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":889972,"byte_end":890011,"line_start":378,"line_end":378,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":890016,"byte_end":890035,"line_start":379,"line_end":379,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry3, Translation3, UnitQuaternion, Vector3, Point3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":890040,"byte_end":890119,"line_start":380,"line_end":380,"column_start":5,"column_end":84}},{"value":"/ let tra = Translation3::new(0.0, 0.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":890124,"byte_end":890171,"line_start":381,"line_end":381,"column_start":5,"column_end":52}},{"value":"/ let rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":890176,"byte_end":890262,"line_start":382,"line_end":382,"column_start":5,"column_end":91}},{"value":"/ let iso = Isometry3::from_parts(tra, rot);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":890267,"byte_end":890313,"line_start":383,"line_end":383,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":890318,"byte_end":890321,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ let transformed_point = iso.inverse_transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":890326,"byte_end":890411,"line_start":385,"line_end":385,"column_start":5,"column_end":90}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(0.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":890416,"byte_end":890505,"line_start":386,"line_end":386,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":890510,"byte_end":890517,"line_start":387,"line_end":387,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":890522,"byte_end":890531,"line_start":388,"line_end":388,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8640},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":891573,"byte_end":891597,"line_start":413,"line_end":413,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<Isometry<N, D, R>>::inverse_transform_vector","value":"pub fn inverse_transform_vector(&Self, &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by the inverse of this isometry, ignoring the\n translation component of the isometry. This may be\n less expensive than computing the entire isometry inverse and then\n transforming the point.","sig":null,"attributes":[{"value":"/ Transform the given vector by the inverse of this isometry, ignoring the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":890713,"byte_end":890789,"line_start":394,"line_end":394,"column_start":5,"column_end":81}},{"value":"/ translation component of the isometry. This may be","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":890794,"byte_end":890848,"line_start":395,"line_end":395,"column_start":5,"column_end":59}},{"value":"/ less expensive than computing the entire isometry inverse and then","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":890853,"byte_end":890923,"line_start":396,"line_end":396,"column_start":5,"column_end":75}},{"value":"/ transforming the point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":890928,"byte_end":890955,"line_start":397,"line_end":397,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":890960,"byte_end":890963,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":890968,"byte_end":890981,"line_start":399,"line_end":399,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":890986,"byte_end":890989,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":890994,"byte_end":891001,"line_start":401,"line_end":401,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":891006,"byte_end":891045,"line_start":402,"line_end":402,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":891050,"byte_end":891069,"line_start":403,"line_end":403,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry3, Translation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":891074,"byte_end":891145,"line_start":404,"line_end":404,"column_start":5,"column_end":76}},{"value":"/ let tra = Translation3::new(0.0, 0.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":891150,"byte_end":891197,"line_start":405,"line_end":405,"column_start":5,"column_end":52}},{"value":"/ let rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":891202,"byte_end":891288,"line_start":406,"line_end":406,"column_start":5,"column_end":91}},{"value":"/ let iso = Isometry3::from_parts(tra, rot);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":891293,"byte_end":891339,"line_start":407,"line_end":407,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":891344,"byte_end":891347,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ let transformed_point = iso.inverse_transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":891352,"byte_end":891439,"line_start":409,"line_end":409,"column_start":5,"column_end":92}},{"value":"/ assert_relative_eq!(transformed_point, Vector3::new(-3.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":891444,"byte_end":891535,"line_start":410,"line_end":410,"column_start":5,"column_end":96}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":891540,"byte_end":891547,"line_start":411,"line_end":411,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":891552,"byte_end":891561,"line_start":412,"line_end":412,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8641},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":892554,"byte_end":892583,"line_start":436,"line_end":436,"column_start":12,"column_end":41},"name":"inverse_transform_unit_vector","qualname":"<Isometry<N, D, R>>::inverse_transform_unit_vector","value":"pub fn inverse_transform_unit_vector(&Self, &Unit<VectorN<N, D>>)\n-> Unit<VectorN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given unit vector by the inverse of this isometry, ignoring the\n translation component of the isometry. This may be\n less expensive than computing the entire isometry inverse and then\n transforming the point.","sig":null,"attributes":[{"value":"/ Transform the given unit vector by the inverse of this isometry, ignoring the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":891704,"byte_end":891785,"line_start":417,"line_end":417,"column_start":5,"column_end":86}},{"value":"/ translation component of the isometry. This may be","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":891790,"byte_end":891844,"line_start":418,"line_end":418,"column_start":5,"column_end":59}},{"value":"/ less expensive than computing the entire isometry inverse and then","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":891849,"byte_end":891919,"line_start":419,"line_end":419,"column_start":5,"column_end":75}},{"value":"/ transforming the point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":891924,"byte_end":891951,"line_start":420,"line_end":420,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":891956,"byte_end":891959,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":891964,"byte_end":891977,"line_start":422,"line_end":422,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":891982,"byte_end":891985,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":891990,"byte_end":891997,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":892002,"byte_end":892041,"line_start":425,"line_end":425,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":892046,"byte_end":892065,"line_start":426,"line_end":426,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry3, Translation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":892070,"byte_end":892141,"line_start":427,"line_end":427,"column_start":5,"column_end":76}},{"value":"/ let tra = Translation3::new(0.0, 0.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":892146,"byte_end":892193,"line_start":428,"line_end":428,"column_start":5,"column_end":52}},{"value":"/ let rot = UnitQuaternion::from_scaled_axis(Vector3::z() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":892198,"byte_end":892284,"line_start":429,"line_end":429,"column_start":5,"column_end":91}},{"value":"/ let iso = Isometry3::from_parts(tra, rot);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":892289,"byte_end":892335,"line_start":430,"line_end":430,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":892340,"byte_end":892343,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ let transformed_point = iso.inverse_transform_unit_vector(&Vector3::x_axis());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":892348,"byte_end":892430,"line_start":432,"line_end":432,"column_start":5,"column_end":87}},{"value":"/ assert_relative_eq!(transformed_point, -Vector3::y_axis(), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":892435,"byte_end":892516,"line_start":433,"line_end":433,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":892521,"byte_end":892528,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":892533,"byte_end":892542,"line_start":435,"line_end":435,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8646},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":893891,"byte_end":893905,"line_start":468,"line_end":468,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Isometry<N, D, R>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> MatrixN<N, DimNameSum<D, U1>> where\nD: DimNameAdd<U1>, R: SubsetOf<MatrixN<N, DimNameSum<D, U1>>>,\nDefaultAllocator: Allocator<N, DimNameSum<D, U1>, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this isometry into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this isometry into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":893184,"byte_end":893265,"line_start":450,"line_end":450,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":893270,"byte_end":893273,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ This is the same as `self.to_matrix()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":893278,"byte_end":893321,"line_start":452,"line_end":452,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":893326,"byte_end":893329,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":893334,"byte_end":893347,"line_start":454,"line_end":454,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":893352,"byte_end":893355,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":893360,"byte_end":893367,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":893372,"byte_end":893411,"line_start":457,"line_end":457,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":893416,"byte_end":893435,"line_start":458,"line_end":458,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Vector2, Matrix3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":893440,"byte_end":893490,"line_start":459,"line_end":459,"column_start":5,"column_end":55}},{"value":"/ let iso = Isometry2::new(Vector2::new(10.0, 20.0), f32::consts::FRAC_PI_6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":893495,"byte_end":893574,"line_start":460,"line_end":460,"column_start":5,"column_end":84}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      10.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":893579,"byte_end":893638,"line_start":461,"line_end":461,"column_start":5,"column_end":64}},{"value":"/                             0.5,       0.8660254, 20.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":893643,"byte_end":893702,"line_start":462,"line_end":462,"column_start":5,"column_end":64}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":893707,"byte_end":893766,"line_start":463,"line_end":463,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":893771,"byte_end":893774,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(iso.to_homogeneous(), expected, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":893779,"byte_end":893853,"line_start":465,"line_end":465,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":893858,"byte_end":893865,"line_start":466,"line_end":466,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":893870,"byte_end":893879,"line_start":467,"line_end":467,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8647},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":895023,"byte_end":895032,"line_start":499,"line_end":499,"column_start":12,"column_end":21},"name":"to_matrix","qualname":"<Isometry<N, D, R>>::to_matrix","value":"pub fn to_matrix(&Self) -> MatrixN<N, DimNameSum<D, U1>> where\nD: DimNameAdd<U1>, R: SubsetOf<MatrixN<N, DimNameSum<D, U1>>>,\nDefaultAllocator: Allocator<N, DimNameSum<D, U1>, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this isometry into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this isometry into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":894316,"byte_end":894397,"line_start":481,"line_end":481,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":894402,"byte_end":894405,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ This is the same as `self.to_homogeneous()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":894410,"byte_end":894458,"line_start":483,"line_end":483,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":894463,"byte_end":894466,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":894471,"byte_end":894484,"line_start":485,"line_end":485,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":894489,"byte_end":894492,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":894497,"byte_end":894504,"line_start":487,"line_end":487,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":894509,"byte_end":894548,"line_start":488,"line_end":488,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":894553,"byte_end":894572,"line_start":489,"line_end":489,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Vector2, Matrix3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":894577,"byte_end":894627,"line_start":490,"line_end":490,"column_start":5,"column_end":55}},{"value":"/ let iso = Isometry2::new(Vector2::new(10.0, 20.0), f32::consts::FRAC_PI_6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":894632,"byte_end":894711,"line_start":491,"line_end":491,"column_start":5,"column_end":84}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      10.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":894716,"byte_end":894775,"line_start":492,"line_end":492,"column_start":5,"column_end":64}},{"value":"/                             0.5,       0.8660254, 20.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":894780,"byte_end":894839,"line_start":493,"line_end":493,"column_start":5,"column_end":64}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":894844,"byte_end":894903,"line_start":494,"line_end":494,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":894908,"byte_end":894911,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(iso.to_matrix(), expected, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":894916,"byte_end":894985,"line_start":496,"line_end":496,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":894990,"byte_end":894997,"line_start":497,"line_end":497,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":895002,"byte_end":895011,"line_start":498,"line_end":498,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":8705},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_alias.rs","byte_start":898434,"byte_end":898443,"line_start":11,"line_end":11,"column_start":10,"column_end":19},"name":"Isometry2","qualname":"::geometry::isometry_alias::Isometry2","value":"Isometry<N, U2, UnitComplex<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional direct isometry using a unit complex number for its rotational part.","sig":null,"attributes":[{"value":"/ A 2-dimensional direct isometry using a unit complex number for its rotational part.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_alias.rs","byte_start":898139,"byte_end":898227,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_alias.rs","byte_start":898228,"byte_end":898231,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Isometry`](crate::Isometry) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_alias.rs","byte_start":898232,"byte_end":898350,"line_start":7,"line_end":7,"column_start":1,"column_end":119}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_alias.rs","byte_start":898351,"byte_end":898354,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Also known as a 2D rigid-body motion, or as an element of SE(2).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_alias.rs","byte_start":898355,"byte_end":898423,"line_start":9,"line_end":9,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":8707},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_alias.rs","byte_start":898770,"byte_end":898779,"line_start":18,"line_end":18,"column_start":10,"column_end":19},"name":"Isometry3","qualname":"::geometry::isometry_alias::Isometry3","value":"Isometry<N, U3, UnitQuaternion<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional direct isometry using a unit quaternion for its rotational part.","sig":null,"attributes":[{"value":"/ A 3-dimensional direct isometry using a unit quaternion for its rotational part.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_alias.rs","byte_start":898483,"byte_end":898567,"line_start":13,"line_end":13,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_alias.rs","byte_start":898568,"byte_end":898571,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Isometry`](crate::Isometry) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_alias.rs","byte_start":898572,"byte_end":898690,"line_start":15,"line_end":15,"column_start":1,"column_end":119}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_alias.rs","byte_start":898691,"byte_end":898694,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Also known as a rigid-body motion, or as an element of SE(3).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_alias.rs","byte_start":898695,"byte_end":898760,"line_start":17,"line_end":17,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":8709},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_alias.rs","byte_start":899109,"byte_end":899124,"line_start":25,"line_end":25,"column_start":10,"column_end":25},"name":"IsometryMatrix2","qualname":"::geometry::isometry_alias::IsometryMatrix2","value":"Isometry<N, U2, Rotation2<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional direct isometry using a rotation matrix for its rotational part.","sig":null,"attributes":[{"value":"/ A 2-dimensional direct isometry using a rotation matrix for its rotational part.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_alias.rs","byte_start":898822,"byte_end":898906,"line_start":20,"line_end":20,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_alias.rs","byte_start":898907,"byte_end":898910,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Isometry`](crate::Isometry) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_alias.rs","byte_start":898911,"byte_end":899029,"line_start":22,"line_end":22,"column_start":1,"column_end":119}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_alias.rs","byte_start":899030,"byte_end":899033,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also known as a rigid-body motion, or as an element of SE(2).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_alias.rs","byte_start":899034,"byte_end":899099,"line_start":24,"line_end":24,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":8711},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_alias.rs","byte_start":899449,"byte_end":899464,"line_start":32,"line_end":32,"column_start":10,"column_end":25},"name":"IsometryMatrix3","qualname":"::geometry::isometry_alias::IsometryMatrix3","value":"Isometry<N, U3, Rotation3<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional direct isometry using a rotation matrix for its rotational part.","sig":null,"attributes":[{"value":"/ A 3-dimensional direct isometry using a rotation matrix for its rotational part.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_alias.rs","byte_start":899162,"byte_end":899246,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_alias.rs","byte_start":899247,"byte_end":899250,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ **Because this is an alias, not all its methods are listed here. See the [`Isometry`](crate::Isometry) type too.**","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_alias.rs","byte_start":899251,"byte_end":899369,"line_start":29,"line_end":29,"column_start":1,"column_end":119}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_alias.rs","byte_start":899370,"byte_end":899373,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Also known as a rigid-body motion, or as an element of SE(3).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_alias.rs","byte_start":899374,"byte_end":899439,"line_start":31,"line_end":31,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":8806},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":901079,"byte_end":901087,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"identity","qualname":"<Isometry<N, D, R>>::identity","value":"pub fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new identity isometry.","sig":null,"attributes":[{"value":"/ Creates a new identity isometry.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":900644,"byte_end":900680,"line_start":28,"line_end":28,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":900685,"byte_end":900688,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":900693,"byte_end":900706,"line_start":30,"line_end":30,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":900711,"byte_end":900714,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":900719,"byte_end":900726,"line_start":32,"line_end":32,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Isometry2, Point2, Isometry3, Point3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":900731,"byte_end":900790,"line_start":33,"line_end":33,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":900795,"byte_end":900798,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ let iso = Isometry2::identity();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":900803,"byte_end":900839,"line_start":35,"line_end":35,"column_start":5,"column_end":41}},{"value":"/ let pt = Point2::new(1.0, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":900844,"byte_end":900879,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(iso * pt, pt);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":900884,"byte_end":900913,"line_start":37,"line_end":37,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":900918,"byte_end":900921,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let iso = Isometry3::identity();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":900926,"byte_end":900962,"line_start":39,"line_end":39,"column_start":5,"column_end":41}},{"value":"/ let pt = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":900967,"byte_end":901007,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(iso * pt, pt);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":901012,"byte_end":901041,"line_start":41,"line_end":41,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":901046,"byte_end":901053,"line_start":42,"line_end":42,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":901058,"byte_end":901067,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8807},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":901855,"byte_end":901873,"line_start":65,"line_end":65,"column_start":12,"column_end":30},"name":"rotation_wrt_point","qualname":"<Isometry<N, D, R>>::rotation_wrt_point","value":"pub fn rotation_wrt_point(R, Point<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The isometry that applies the rotation `r` with its axis passing through the point `p`.\n This effectively lets `p` invariant.","sig":null,"attributes":[{"value":"/ The isometry that applies the rotation `r` with its axis passing through the point `p`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":901176,"byte_end":901267,"line_start":48,"line_end":48,"column_start":5,"column_end":96}},{"value":"/ This effectively lets `p` invariant.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":901272,"byte_end":901312,"line_start":49,"line_end":49,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":901317,"byte_end":901320,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":901325,"byte_end":901338,"line_start":51,"line_end":51,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":901343,"byte_end":901346,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":901351,"byte_end":901358,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":901363,"byte_end":901402,"line_start":54,"line_end":54,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":901407,"byte_end":901426,"line_start":55,"line_end":55,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Point2, UnitComplex};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":901431,"byte_end":901484,"line_start":56,"line_end":56,"column_start":5,"column_end":58}},{"value":"/ let rot = UnitComplex::new(f32::consts::PI);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":901489,"byte_end":901537,"line_start":57,"line_end":57,"column_start":5,"column_end":53}},{"value":"/ let pt = Point2::new(1.0, 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":901542,"byte_end":901577,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/ let iso = Isometry2::rotation_wrt_point(rot, pt);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":901582,"byte_end":901635,"line_start":59,"line_end":59,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":901640,"byte_end":901643,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso * pt, pt); // The rotation center is not affected.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":901648,"byte_end":901717,"line_start":61,"line_end":61,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(iso * Point2::new(1.0, 2.0), Point2::new(1.0, -2.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":901722,"byte_end":901817,"line_start":62,"line_end":62,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":901822,"byte_end":901829,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":901834,"byte_end":901843,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8822},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":903777,"byte_end":903780,"line_start":135,"line_end":135,"column_start":12,"column_end":15},"name":"new","qualname":"<IsometryMatrix2<N>>::new","value":"pub fn new(Vector2<N>, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new 2D isometry from a translation and a rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new 2D isometry from a translation and a rotation angle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":903305,"byte_end":903375,"line_start":121,"line_end":121,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":903380,"byte_end":903383,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Its rotational part is represented as a 2x2 rotation matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":903388,"byte_end":903452,"line_start":123,"line_end":123,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":903457,"byte_end":903460,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":903465,"byte_end":903478,"line_start":125,"line_end":125,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":903483,"byte_end":903486,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":903491,"byte_end":903498,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":903503,"byte_end":903522,"line_start":128,"line_end":128,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Vector2, Point2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":903527,"byte_end":903576,"line_start":129,"line_end":129,"column_start":5,"column_end":54}},{"value":"/ let iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":903581,"byte_end":903658,"line_start":130,"line_end":130,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":903663,"byte_end":903666,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso * Point2::new(3.0, 4.0), Point2::new(-3.0, 5.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":903671,"byte_end":903739,"line_start":132,"line_end":132,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":903744,"byte_end":903751,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":903756,"byte_end":903765,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8823},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":904052,"byte_end":904063,"line_start":144,"line_end":144,"column_start":12,"column_end":23},"name":"translation","qualname":"<IsometryMatrix2<N>>::translation","value":"pub fn translation(N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new isometry from the given translation coordinates.\n","sig":null,"attributes":[{"value":"/ Creates a new isometry from the given translation coordinates.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":903960,"byte_end":904026,"line_start":142,"line_end":142,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":904031,"byte_end":904040,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8824},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":904229,"byte_end":904237,"line_start":150,"line_end":150,"column_start":12,"column_end":20},"name":"rotation","qualname":"<IsometryMatrix2<N>>::rotation","value":"pub fn rotation(N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new isometry from the given rotation angle.\n","sig":null,"attributes":[{"value":"/ Creates a new isometry from the given rotation angle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":904146,"byte_end":904203,"line_start":148,"line_end":148,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":904208,"byte_end":904217,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8827},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":904874,"byte_end":904877,"line_start":173,"line_end":173,"column_start":12,"column_end":15},"name":"new","qualname":"<Isometry2<N>>::new","value":"pub fn new(Vector2<N>, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new 2D isometry from a translation and a rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new 2D isometry from a translation and a rotation angle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":904389,"byte_end":904459,"line_start":159,"line_end":159,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":904464,"byte_end":904467,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Its rotational part is represented as an unit complex number.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":904472,"byte_end":904537,"line_start":161,"line_end":161,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":904542,"byte_end":904545,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":904550,"byte_end":904563,"line_start":163,"line_end":163,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":904568,"byte_end":904571,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":904576,"byte_end":904583,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":904588,"byte_end":904607,"line_start":166,"line_end":166,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{IsometryMatrix2, Point2, Vector2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":904612,"byte_end":904667,"line_start":167,"line_end":167,"column_start":5,"column_end":60}},{"value":"/ let iso = IsometryMatrix2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":904672,"byte_end":904755,"line_start":168,"line_end":168,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":904760,"byte_end":904763,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso * Point2::new(3.0, 4.0), Point2::new(-3.0, 5.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":904768,"byte_end":904836,"line_start":170,"line_end":170,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":904841,"byte_end":904848,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":904853,"byte_end":904862,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8828},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":905150,"byte_end":905161,"line_start":182,"line_end":182,"column_start":12,"column_end":23},"name":"translation","qualname":"<Isometry2<N>>::translation","value":"pub fn translation(N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new isometry from the given translation coordinates.\n","sig":null,"attributes":[{"value":"/ Creates a new isometry from the given translation coordinates.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":905058,"byte_end":905124,"line_start":180,"line_end":180,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":905129,"byte_end":905138,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8829},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":905353,"byte_end":905361,"line_start":188,"line_end":188,"column_start":12,"column_end":20},"name":"rotation","qualname":"<Isometry2<N>>::rotation","value":"pub fn rotation(N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new isometry from the given rotation angle.\n","sig":null,"attributes":[{"value":"/ Creates a new isometry from the given rotation angle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":905270,"byte_end":905327,"line_start":186,"line_end":186,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":905332,"byte_end":905341,"line_start":187,"line_end":187,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9017},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":926328,"byte_end":926338,"line_start":29,"line_end":29,"column_start":12,"column_end":22},"name":"lerp_slerp","qualname":"<Isometry3<N>>::lerp_slerp","value":"pub fn lerp_slerp(&Self, &Self, N) -> Self where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Interpolates between two isometries using a linear interpolation for the translation part,\n and a spherical interpolation for the rotation part.","sig":null,"attributes":[{"value":"/ Interpolates between two isometries using a linear interpolation for the translation part,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":925202,"byte_end":925296,"line_start":5,"line_end":5,"column_start":5,"column_end":99}},{"value":"/ and a spherical interpolation for the rotation part.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":925301,"byte_end":925357,"line_start":6,"line_end":6,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":925362,"byte_end":925365,"line_start":7,"line_end":7,"column_start":5,"column_end":8}},{"value":"/ Panics if the angle between both rotations is 180 degrees (in which case the interpolation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":925370,"byte_end":925464,"line_start":8,"line_end":8,"column_start":5,"column_end":99}},{"value":"/ is not well-defined). Use `.try_lerp_slerp` instead to avoid the panic.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":925469,"byte_end":925544,"line_start":9,"line_end":9,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":925549,"byte_end":925552,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":925557,"byte_end":925572,"line_start":11,"line_end":11,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":925577,"byte_end":925580,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":925585,"byte_end":925592,"line_start":13,"line_end":13,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, Translation3, Isometry3, UnitQuaternion};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":925597,"byte_end":925668,"line_start":14,"line_end":14,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":925673,"byte_end":925676,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ let t1 = Translation3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":925681,"byte_end":925727,"line_start":16,"line_end":16,"column_start":5,"column_end":51}},{"value":"/ let t2 = Translation3::new(4.0, 8.0, 12.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":925732,"byte_end":925779,"line_start":17,"line_end":17,"column_start":5,"column_end":52}},{"value":"/ let q1 = UnitQuaternion::from_euler_angles(std::f32::consts::FRAC_PI_4, 0.0, 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":925784,"byte_end":925870,"line_start":18,"line_end":18,"column_start":5,"column_end":91}},{"value":"/ let q2 = UnitQuaternion::from_euler_angles(-std::f32::consts::PI, 0.0, 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":925875,"byte_end":925955,"line_start":19,"line_end":19,"column_start":5,"column_end":85}},{"value":"/ let iso1 = Isometry3::from_parts(t1, q1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":925960,"byte_end":926005,"line_start":20,"line_end":20,"column_start":5,"column_end":50}},{"value":"/ let iso2 = Isometry3::from_parts(t2, q2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":926010,"byte_end":926055,"line_start":21,"line_end":21,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":926060,"byte_end":926063,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ let iso3 = iso1.lerp_slerp(&iso2, 1.0 / 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":926068,"byte_end":926117,"line_start":23,"line_end":23,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":926122,"byte_end":926125,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso3.translation.vector, Vector3::new(2.0, 4.0, 6.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":926130,"byte_end":926199,"line_start":25,"line_end":25,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(iso3.rotation.euler_angles(), (std::f32::consts::FRAC_PI_2, 0.0, 0.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":926204,"byte_end":926290,"line_start":26,"line_end":26,"column_start":5,"column_end":91}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":926295,"byte_end":926302,"line_start":27,"line_end":27,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":926307,"byte_end":926316,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9018},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":927694,"byte_end":927708,"line_start":62,"line_end":62,"column_start":12,"column_end":26},"name":"try_lerp_slerp","qualname":"<Isometry3<N>>::try_lerp_slerp","value":"pub fn try_lerp_slerp(&Self, &Self, N, N) -> Option<Self> where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Attempts to interpolate between two isometries using a linear interpolation for the translation part,\n and a spherical interpolation for the rotation part.","sig":null,"attributes":[{"value":"/ Attempts to interpolate between two isometries using a linear interpolation for the translation part,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":926600,"byte_end":926705,"line_start":38,"line_end":38,"column_start":5,"column_end":110}},{"value":"/ and a spherical interpolation for the rotation part.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":926710,"byte_end":926766,"line_start":39,"line_end":39,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":926771,"byte_end":926774,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Retuns `None` if the angle between both rotations is 180 degrees (in which case the interpolation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":926779,"byte_end":926880,"line_start":41,"line_end":41,"column_start":5,"column_end":106}},{"value":"/ is not well-defined).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":926885,"byte_end":926910,"line_start":42,"line_end":42,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":926915,"byte_end":926918,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":926923,"byte_end":926938,"line_start":44,"line_end":44,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":926943,"byte_end":926946,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":926951,"byte_end":926958,"line_start":46,"line_end":46,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, Translation3, Isometry3, UnitQuaternion};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":926963,"byte_end":927034,"line_start":47,"line_end":47,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":927039,"byte_end":927042,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ let t1 = Translation3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":927047,"byte_end":927093,"line_start":49,"line_end":49,"column_start":5,"column_end":51}},{"value":"/ let t2 = Translation3::new(4.0, 8.0, 12.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":927098,"byte_end":927145,"line_start":50,"line_end":50,"column_start":5,"column_end":52}},{"value":"/ let q1 = UnitQuaternion::from_euler_angles(std::f32::consts::FRAC_PI_4, 0.0, 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":927150,"byte_end":927236,"line_start":51,"line_end":51,"column_start":5,"column_end":91}},{"value":"/ let q2 = UnitQuaternion::from_euler_angles(-std::f32::consts::PI, 0.0, 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":927241,"byte_end":927321,"line_start":52,"line_end":52,"column_start":5,"column_end":85}},{"value":"/ let iso1 = Isometry3::from_parts(t1, q1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":927326,"byte_end":927371,"line_start":53,"line_end":53,"column_start":5,"column_end":50}},{"value":"/ let iso2 = Isometry3::from_parts(t2, q2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":927376,"byte_end":927421,"line_start":54,"line_end":54,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":927426,"byte_end":927429,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ let iso3 = iso1.lerp_slerp(&iso2, 1.0 / 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":927434,"byte_end":927483,"line_start":56,"line_end":56,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":927488,"byte_end":927491,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso3.translation.vector, Vector3::new(2.0, 4.0, 6.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":927496,"byte_end":927565,"line_start":58,"line_end":58,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(iso3.rotation.euler_angles(), (std::f32::consts::FRAC_PI_2, 0.0, 0.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":927570,"byte_end":927656,"line_start":59,"line_end":59,"column_start":5,"column_end":91}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":927661,"byte_end":927668,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":927673,"byte_end":927682,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9021},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":929185,"byte_end":929195,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"lerp_slerp","qualname":"<IsometryMatrix3<N>>::lerp_slerp","value":"pub fn lerp_slerp(&Self, &Self, N) -> Self where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Interpolates between two isometries using a linear interpolation for the translation part,\n and a spherical interpolation for the rotation part.","sig":null,"attributes":[{"value":"/ Interpolates between two isometries using a linear interpolation for the translation part,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":928056,"byte_end":928150,"line_start":73,"line_end":73,"column_start":5,"column_end":99}},{"value":"/ and a spherical interpolation for the rotation part.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":928155,"byte_end":928211,"line_start":74,"line_end":74,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":928216,"byte_end":928219,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Panics if the angle between both rotations is 180 degrees (in which case the interpolation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":928224,"byte_end":928318,"line_start":76,"line_end":76,"column_start":5,"column_end":99}},{"value":"/ is not well-defined). Use `.try_lerp_slerp` instead to avoid the panic.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":928323,"byte_end":928398,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":928403,"byte_end":928406,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":928411,"byte_end":928426,"line_start":79,"line_end":79,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":928431,"byte_end":928434,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":928439,"byte_end":928446,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, Translation3, Rotation3, IsometryMatrix3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":928451,"byte_end":928523,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":928528,"byte_end":928531,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ let t1 = Translation3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":928536,"byte_end":928582,"line_start":84,"line_end":84,"column_start":5,"column_end":51}},{"value":"/ let t2 = Translation3::new(4.0, 8.0, 12.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":928587,"byte_end":928634,"line_start":85,"line_end":85,"column_start":5,"column_end":52}},{"value":"/ let q1 = Rotation3::from_euler_angles(std::f32::consts::FRAC_PI_4, 0.0, 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":928639,"byte_end":928720,"line_start":86,"line_end":86,"column_start":5,"column_end":86}},{"value":"/ let q2 = Rotation3::from_euler_angles(-std::f32::consts::PI, 0.0, 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":928725,"byte_end":928800,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/ let iso1 = IsometryMatrix3::from_parts(t1, q1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":928805,"byte_end":928856,"line_start":88,"line_end":88,"column_start":5,"column_end":56}},{"value":"/ let iso2 = IsometryMatrix3::from_parts(t2, q2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":928861,"byte_end":928912,"line_start":89,"line_end":89,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":928917,"byte_end":928920,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let iso3 = iso1.lerp_slerp(&iso2, 1.0 / 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":928925,"byte_end":928974,"line_start":91,"line_end":91,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":928979,"byte_end":928982,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso3.translation.vector, Vector3::new(2.0, 4.0, 6.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":928987,"byte_end":929056,"line_start":93,"line_end":93,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(iso3.rotation.euler_angles(), (std::f32::consts::FRAC_PI_2, 0.0, 0.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":929061,"byte_end":929147,"line_start":94,"line_end":94,"column_start":5,"column_end":91}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":929152,"byte_end":929159,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":929164,"byte_end":929173,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9022},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":930554,"byte_end":930568,"line_start":130,"line_end":130,"column_start":12,"column_end":26},"name":"try_lerp_slerp","qualname":"<IsometryMatrix3<N>>::try_lerp_slerp","value":"pub fn try_lerp_slerp(&Self, &Self, N, N) -> Option<Self> where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Attempts to interpolate between two isometries using a linear interpolation for the translation part,\n and a spherical interpolation for the rotation part.","sig":null,"attributes":[{"value":"/ Attempts to interpolate between two isometries using a linear interpolation for the translation part,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":929457,"byte_end":929562,"line_start":106,"line_end":106,"column_start":5,"column_end":110}},{"value":"/ and a spherical interpolation for the rotation part.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":929567,"byte_end":929623,"line_start":107,"line_end":107,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":929628,"byte_end":929631,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Retuns `None` if the angle between both rotations is 180 degrees (in which case the interpolation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":929636,"byte_end":929737,"line_start":109,"line_end":109,"column_start":5,"column_end":106}},{"value":"/ is not well-defined).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":929742,"byte_end":929767,"line_start":110,"line_end":110,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":929772,"byte_end":929775,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":929780,"byte_end":929795,"line_start":112,"line_end":112,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":929800,"byte_end":929803,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":929808,"byte_end":929815,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, Translation3, Rotation3, IsometryMatrix3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":929820,"byte_end":929892,"line_start":115,"line_end":115,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":929897,"byte_end":929900,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ let t1 = Translation3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":929905,"byte_end":929951,"line_start":117,"line_end":117,"column_start":5,"column_end":51}},{"value":"/ let t2 = Translation3::new(4.0, 8.0, 12.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":929956,"byte_end":930003,"line_start":118,"line_end":118,"column_start":5,"column_end":52}},{"value":"/ let q1 = Rotation3::from_euler_angles(std::f32::consts::FRAC_PI_4, 0.0, 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":930008,"byte_end":930089,"line_start":119,"line_end":119,"column_start":5,"column_end":86}},{"value":"/ let q2 = Rotation3::from_euler_angles(-std::f32::consts::PI, 0.0, 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":930094,"byte_end":930169,"line_start":120,"line_end":120,"column_start":5,"column_end":80}},{"value":"/ let iso1 = IsometryMatrix3::from_parts(t1, q1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":930174,"byte_end":930225,"line_start":121,"line_end":121,"column_start":5,"column_end":56}},{"value":"/ let iso2 = IsometryMatrix3::from_parts(t2, q2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":930230,"byte_end":930281,"line_start":122,"line_end":122,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":930286,"byte_end":930289,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let iso3 = iso1.lerp_slerp(&iso2, 1.0 / 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":930294,"byte_end":930343,"line_start":124,"line_end":124,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":930348,"byte_end":930351,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso3.translation.vector, Vector3::new(2.0, 4.0, 6.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":930356,"byte_end":930425,"line_start":126,"line_end":126,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(iso3.rotation.euler_angles(), (std::f32::consts::FRAC_PI_2, 0.0, 0.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":930430,"byte_end":930516,"line_start":127,"line_end":127,"column_start":5,"column_end":91}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":930521,"byte_end":930528,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":930533,"byte_end":930542,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9025},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":931997,"byte_end":932007,"line_start":166,"line_end":166,"column_start":12,"column_end":22},"name":"lerp_slerp","qualname":"<Isometry2<N>>::lerp_slerp","value":"pub fn lerp_slerp(&Self, &Self, N) -> Self where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Interpolates between two isometries using a linear interpolation for the translation part,\n and a spherical interpolation for the rotation part.","sig":null,"attributes":[{"value":"/ Interpolates between two isometries using a linear interpolation for the translation part,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":930910,"byte_end":931004,"line_start":141,"line_end":141,"column_start":5,"column_end":99}},{"value":"/ and a spherical interpolation for the rotation part.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":931009,"byte_end":931065,"line_start":142,"line_end":142,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":931070,"byte_end":931073,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ Panics if the angle between both rotations is 180 degrees (in which case the interpolation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":931078,"byte_end":931172,"line_start":144,"line_end":144,"column_start":5,"column_end":99}},{"value":"/ is not well-defined). Use `.try_lerp_slerp` instead to avoid the panic.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":931177,"byte_end":931252,"line_start":145,"line_end":145,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":931257,"byte_end":931260,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":931265,"byte_end":931280,"line_start":147,"line_end":147,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":931285,"byte_end":931288,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":931293,"byte_end":931300,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":931305,"byte_end":931344,"line_start":150,"line_end":150,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector2, Translation2, UnitComplex, Isometry2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":931349,"byte_end":931417,"line_start":151,"line_end":151,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":931422,"byte_end":931425,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ let t1 = Translation2::new(1.0, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":931430,"byte_end":931471,"line_start":153,"line_end":153,"column_start":5,"column_end":46}},{"value":"/ let t2 = Translation2::new(4.0, 8.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":931476,"byte_end":931517,"line_start":154,"line_end":154,"column_start":5,"column_end":46}},{"value":"/ let q1 = UnitComplex::new(std::f32::consts::FRAC_PI_4);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":931522,"byte_end":931581,"line_start":155,"line_end":155,"column_start":5,"column_end":64}},{"value":"/ let q2 = UnitComplex::new(-std::f32::consts::PI);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":931586,"byte_end":931639,"line_start":156,"line_end":156,"column_start":5,"column_end":58}},{"value":"/ let iso1 = Isometry2::from_parts(t1, q1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":931644,"byte_end":931689,"line_start":157,"line_end":157,"column_start":5,"column_end":50}},{"value":"/ let iso2 = Isometry2::from_parts(t2, q2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":931694,"byte_end":931739,"line_start":158,"line_end":158,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":931744,"byte_end":931747,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ let iso3 = iso1.lerp_slerp(&iso2, 1.0 / 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":931752,"byte_end":931801,"line_start":160,"line_end":160,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":931806,"byte_end":931809,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso3.translation.vector, Vector2::new(2.0, 4.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":931814,"byte_end":931878,"line_start":162,"line_end":162,"column_start":5,"column_end":69}},{"value":"/ assert_relative_eq!(iso3.rotation.angle(), std::f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":931883,"byte_end":931959,"line_start":163,"line_end":163,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":931964,"byte_end":931971,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":931976,"byte_end":931985,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9028},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":933414,"byte_end":933424,"line_start":202,"line_end":202,"column_start":12,"column_end":22},"name":"lerp_slerp","qualname":"<IsometryMatrix2<N>>::lerp_slerp","value":"pub fn lerp_slerp(&Self, &Self, N) -> Self where N: RealField","parent":null,"children":[],"decl_id":null,"docs":" Interpolates between two isometries using a linear interpolation for the translation part,\n and a spherical interpolation for the rotation part.","sig":null,"attributes":[{"value":"/ Interpolates between two isometries using a linear interpolation for the translation part,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":932315,"byte_end":932409,"line_start":177,"line_end":177,"column_start":5,"column_end":99}},{"value":"/ and a spherical interpolation for the rotation part.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":932414,"byte_end":932470,"line_start":178,"line_end":178,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":932475,"byte_end":932478,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Panics if the angle between both rotations is 180 degrees (in which case the interpolation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":932483,"byte_end":932577,"line_start":180,"line_end":180,"column_start":5,"column_end":99}},{"value":"/ is not well-defined). Use `.try_lerp_slerp` instead to avoid the panic.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":932582,"byte_end":932657,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":932662,"byte_end":932665,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":932670,"byte_end":932685,"line_start":183,"line_end":183,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":932690,"byte_end":932693,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":932698,"byte_end":932705,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":932710,"byte_end":932749,"line_start":186,"line_end":186,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector2, Translation2, Rotation2, IsometryMatrix2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":932754,"byte_end":932826,"line_start":187,"line_end":187,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":932831,"byte_end":932834,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ let t1 = Translation2::new(1.0, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":932839,"byte_end":932880,"line_start":189,"line_end":189,"column_start":5,"column_end":46}},{"value":"/ let t2 = Translation2::new(4.0, 8.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":932885,"byte_end":932926,"line_start":190,"line_end":190,"column_start":5,"column_end":46}},{"value":"/ let q1 = Rotation2::new(std::f32::consts::FRAC_PI_4);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":932931,"byte_end":932988,"line_start":191,"line_end":191,"column_start":5,"column_end":62}},{"value":"/ let q2 = Rotation2::new(-std::f32::consts::PI);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":932993,"byte_end":933044,"line_start":192,"line_end":192,"column_start":5,"column_end":56}},{"value":"/ let iso1 = IsometryMatrix2::from_parts(t1, q1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":933049,"byte_end":933100,"line_start":193,"line_end":193,"column_start":5,"column_end":56}},{"value":"/ let iso2 = IsometryMatrix2::from_parts(t2, q2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":933105,"byte_end":933156,"line_start":194,"line_end":194,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":933161,"byte_end":933164,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ let iso3 = iso1.lerp_slerp(&iso2, 1.0 / 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":933169,"byte_end":933218,"line_start":196,"line_end":196,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":933223,"byte_end":933226,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso3.translation.vector, Vector2::new(2.0, 4.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":933231,"byte_end":933295,"line_start":198,"line_end":198,"column_start":5,"column_end":69}},{"value":"/ assert_relative_eq!(iso3.rotation.angle(), std::f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":933300,"byte_end":933376,"line_start":199,"line_end":199,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":933381,"byte_end":933388,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":933393,"byte_end":933402,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":23728},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":957384,"byte_end":957394,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"Similarity","qualname":"::geometry::similarity::Similarity","value":"Similarity { isometry }","parent":null,"children":[{"krate":0,"index":23732},{"krate":0,"index":23733}],"decl_id":null,"docs":" A similarity, i.e., an uniform scaling, followed by a rotation, followed by a translation.\n","sig":null,"attributes":[{"value":"/ A similarity, i.e., an uniform scaling, followed by a rotation, followed by a translation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":956690,"byte_end":956784,"line_start":24,"line_end":24,"column_start":1,"column_end":95}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":956785,"byte_end":956795,"line_start":25,"line_end":25,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":23732},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":957554,"byte_end":957562,"line_start":47,"line_end":47,"column_start":9,"column_end":17},"name":"isometry","qualname":"::geometry::similarity::Similarity::isometry","value":"geometry::isometry::Isometry<N, D, R>","parent":{"krate":0,"index":23728},"children":[],"decl_id":null,"docs":" The part of this similarity that does not include the scaling factor.\n","sig":null,"attributes":[{"value":"/ The part of this similarity that does not include the scaling factor.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":957472,"byte_end":957545,"line_start":46,"line_end":46,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":9252},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":959137,"byte_end":959147,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Similarity<N, D, R>>::from_parts","value":"pub fn from_parts(Translation<N, D>, R, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new similarity from its rotational and translational parts.\n","sig":null,"attributes":[{"value":"/ Creates a new similarity from its rotational and translational parts.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":959038,"byte_end":959111,"line_start":105,"line_end":105,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":959116,"byte_end":959125,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9253},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":959407,"byte_end":959420,"line_start":113,"line_end":113,"column_start":12,"column_end":25},"name":"from_isometry","qualname":"<Similarity<N, D, R>>::from_isometry","value":"pub fn from_isometry(Isometry<N, D, R>, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new similarity from its rotational and translational parts.\n","sig":null,"attributes":[{"value":"/ Creates a new similarity from its rotational and translational parts.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":959308,"byte_end":959381,"line_start":111,"line_end":111,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":959386,"byte_end":959395,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9254},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":959679,"byte_end":959690,"line_start":121,"line_end":121,"column_start":12,"column_end":23},"name":"set_scaling","qualname":"<Similarity<N, D, R>>::set_scaling","value":"pub fn set_scaling(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" The scaling factor of this similarity transformation.\n","sig":null,"attributes":[{"value":"/ The scaling factor of this similarity transformation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":959596,"byte_end":959653,"line_start":119,"line_end":119,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":959658,"byte_end":959667,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9259},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":960065,"byte_end":960072,"line_start":137,"line_end":137,"column_start":12,"column_end":19},"name":"scaling","qualname":"<Similarity<N, D, R>>::scaling","value":"pub fn scaling(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The scaling factor of this similarity transformation.\n","sig":null,"attributes":[{"value":"/ The scaling factor of this similarity transformation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":959982,"byte_end":960039,"line_start":135,"line_end":135,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":960044,"byte_end":960053,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9264},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":960394,"byte_end":960406,"line_start":150,"line_end":150,"column_start":12,"column_end":24},"name":"from_scaling","qualname":"<Similarity<N, D, R>>::from_scaling","value":"pub fn from_scaling(N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new similarity that applies only a scaling factor.\n","sig":null,"attributes":[{"value":"/ Creates a new similarity that applies only a scaling factor.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":960304,"byte_end":960368,"line_start":148,"line_end":148,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":960373,"byte_end":960382,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9265},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":960599,"byte_end":960606,"line_start":157,"line_end":157,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Similarity<N, D, R>>::inverse","value":"pub fn inverse(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self`.\n","sig":null,"attributes":[{"value":"/ Inverts `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":960499,"byte_end":960518,"line_start":154,"line_end":154,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":960523,"byte_end":960532,"line_start":155,"line_end":155,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use inverse_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":960537,"byte_end":960587,"line_start":156,"line_end":156,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":9266},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":960764,"byte_end":960775,"line_start":165,"line_end":165,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<Similarity<N, D, R>>::inverse_mut","value":"pub fn inverse_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self` in-place.\n","sig":null,"attributes":[{"value":"/ Inverts `self` in-place.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":960710,"byte_end":960738,"line_start":163,"line_end":163,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":960743,"byte_end":960752,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9267},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":961120,"byte_end":961135,"line_start":174,"line_end":174,"column_start":12,"column_end":27},"name":"prepend_scaling","qualname":"<Similarity<N, D, R>>::prepend_scaling","value":"pub fn prepend_scaling(&Self, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The similarity transformation that applies a scaling factor `scaling` before `self`.\n","sig":null,"attributes":[{"value":"/ The similarity transformation that applies a scaling factor `scaling` before `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":960943,"byte_end":961031,"line_start":171,"line_end":171,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":961036,"byte_end":961045,"line_start":172,"line_end":172,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use prepend_scaling_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":961050,"byte_end":961108,"line_start":173,"line_end":173,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":9268},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":961549,"byte_end":961563,"line_start":186,"line_end":186,"column_start":12,"column_end":26},"name":"append_scaling","qualname":"<Similarity<N, D, R>>::append_scaling","value":"pub fn append_scaling(&Self, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The similarity transformation that applies a scaling factor `scaling` after `self`.\n","sig":null,"attributes":[{"value":"/ The similarity transformation that applies a scaling factor `scaling` after `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":961374,"byte_end":961461,"line_start":183,"line_end":183,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":961466,"byte_end":961475,"line_start":184,"line_end":184,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use append_scaling_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":961480,"byte_end":961537,"line_start":185,"line_end":185,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":9269},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":962048,"byte_end":962067,"line_start":201,"line_end":201,"column_start":12,"column_end":31},"name":"prepend_scaling_mut","qualname":"<Similarity<N, D, R>>::prepend_scaling_mut","value":"pub fn prepend_scaling_mut(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets `self` to the similarity transformation that applies a scaling factor `scaling` before `self`.\n","sig":null,"attributes":[{"value":"/ Sets `self` to the similarity transformation that applies a scaling factor `scaling` before `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":961919,"byte_end":962022,"line_start":199,"line_end":199,"column_start":5,"column_end":108}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":962027,"byte_end":962036,"line_start":200,"line_end":200,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9270},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":962387,"byte_end":962405,"line_start":212,"line_end":212,"column_start":12,"column_end":30},"name":"append_scaling_mut","qualname":"<Similarity<N, D, R>>::append_scaling_mut","value":"pub fn append_scaling_mut(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets `self` to the similarity transformation that applies a scaling factor `scaling` after `self`.\n","sig":null,"attributes":[{"value":"/ Sets `self` to the similarity transformation that applies a scaling factor `scaling` after `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":962259,"byte_end":962361,"line_start":210,"line_end":210,"column_start":5,"column_end":107}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":962366,"byte_end":962375,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9271},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":962730,"byte_end":962752,"line_start":224,"line_end":224,"column_start":12,"column_end":34},"name":"append_translation_mut","qualname":"<Similarity<N, D, R>>::append_translation_mut","value":"pub fn append_translation_mut(&mut Self, &Translation<N, D>)","parent":null,"children":[],"decl_id":null,"docs":" Appends to `self` the given translation in-place.\n","sig":null,"attributes":[{"value":"/ Appends to `self` the given translation in-place.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":962651,"byte_end":962704,"line_start":222,"line_end":222,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":962709,"byte_end":962718,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9272},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":962924,"byte_end":962943,"line_start":230,"line_end":230,"column_start":12,"column_end":31},"name":"append_rotation_mut","qualname":"<Similarity<N, D, R>>::append_rotation_mut","value":"pub fn append_rotation_mut(&mut Self, &R)","parent":null,"children":[],"decl_id":null,"docs":" Appends to `self` the given rotation in-place.\n","sig":null,"attributes":[{"value":"/ Appends to `self` the given rotation in-place.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":962848,"byte_end":962898,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":962903,"byte_end":962912,"line_start":229,"line_end":229,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9273},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":963166,"byte_end":963195,"line_start":237,"line_end":237,"column_start":12,"column_end":41},"name":"append_rotation_wrt_point_mut","qualname":"<Similarity<N, D, R>>::append_rotation_wrt_point_mut","value":"pub fn append_rotation_wrt_point_mut(&mut Self, &R, &Point<N, D>)","parent":null,"children":[],"decl_id":null,"docs":" Appends in-place to `self` a rotation centered at the point `p`, i.e., the rotation that\n lets `p` invariant.\n","sig":null,"attributes":[{"value":"/ Appends in-place to `self` a rotation centered at the point `p`, i.e., the rotation that","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":963020,"byte_end":963112,"line_start":234,"line_end":234,"column_start":5,"column_end":97}},{"value":"/ lets `p` invariant.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":963117,"byte_end":963140,"line_start":235,"line_end":235,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":963145,"byte_end":963154,"line_start":236,"line_end":236,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9274},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":963436,"byte_end":963466,"line_start":244,"line_end":244,"column_start":12,"column_end":42},"name":"append_rotation_wrt_center_mut","qualname":"<Similarity<N, D, R>>::append_rotation_wrt_center_mut","value":"pub fn append_rotation_wrt_center_mut(&mut Self, &R)","parent":null,"children":[],"decl_id":null,"docs":" Appends in-place to `self` a rotation centered at the point with coordinates\n `self.translation`.\n","sig":null,"attributes":[{"value":"/ Appends in-place to `self` a rotation centered at the point with coordinates","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":963302,"byte_end":963382,"line_start":241,"line_end":241,"column_start":5,"column_end":85}},{"value":"/ `self.translation`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":963387,"byte_end":963410,"line_start":242,"line_end":242,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":963415,"byte_end":963424,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9275},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":964233,"byte_end":964248,"line_start":264,"line_end":264,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Similarity<N, D, R>>::transform_point","value":"pub fn transform_point(&Self, &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by this similarity.","sig":null,"attributes":[{"value":"/ Transform the given point by this similarity.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":963554,"byte_end":963603,"line_start":248,"line_end":248,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":963608,"byte_end":963611,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":963616,"byte_end":963671,"line_start":250,"line_end":250,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":963676,"byte_end":963679,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":963684,"byte_end":963697,"line_start":252,"line_end":252,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":963702,"byte_end":963709,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":963714,"byte_end":963753,"line_start":254,"line_end":254,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":963758,"byte_end":963777,"line_start":255,"line_end":255,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Point3, Similarity3, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":963782,"byte_end":963833,"line_start":256,"line_end":256,"column_start":5,"column_end":56}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":963838,"byte_end":963896,"line_start":257,"line_end":257,"column_start":5,"column_end":63}},{"value":"/ let translation = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":963901,"byte_end":963951,"line_start":258,"line_end":258,"column_start":5,"column_end":55}},{"value":"/ let sim = Similarity3::new(translation, axisangle, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":963956,"byte_end":964016,"line_start":259,"line_end":259,"column_start":5,"column_end":65}},{"value":"/ let transformed_point = sim.transform_point(&Point3::new(4.0, 5.0, 6.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":964021,"byte_end":964098,"line_start":260,"line_end":260,"column_start":5,"column_end":82}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(19.0, 17.0, -9.0), epsilon = 1.0e-5);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":964103,"byte_end":964195,"line_start":261,"line_end":261,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":964200,"byte_end":964207,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":964212,"byte_end":964221,"line_start":263,"line_end":263,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9276},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":965043,"byte_end":965059,"line_start":285,"line_end":285,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<Similarity<N, D, R>>::transform_vector","value":"pub fn transform_vector(&Self, &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by this similarity, ignoring the translational\n component.","sig":null,"attributes":[{"value":"/ Transform the given vector by this similarity, ignoring the translational","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":964320,"byte_end":964397,"line_start":268,"line_end":268,"column_start":5,"column_end":82}},{"value":"/ component.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":964402,"byte_end":964416,"line_start":269,"line_end":269,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":964421,"byte_end":964424,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * t`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":964429,"byte_end":964483,"line_start":271,"line_end":271,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":964488,"byte_end":964491,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":964496,"byte_end":964509,"line_start":273,"line_end":273,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":964514,"byte_end":964521,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":964526,"byte_end":964565,"line_start":275,"line_end":275,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":964570,"byte_end":964589,"line_start":276,"line_end":276,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Similarity3, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":964594,"byte_end":964637,"line_start":277,"line_end":277,"column_start":5,"column_end":48}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":964642,"byte_end":964700,"line_start":278,"line_end":278,"column_start":5,"column_end":63}},{"value":"/ let translation = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":964705,"byte_end":964755,"line_start":279,"line_end":279,"column_start":5,"column_end":55}},{"value":"/ let sim = Similarity3::new(translation, axisangle, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":964760,"byte_end":964820,"line_start":280,"line_end":280,"column_start":5,"column_end":65}},{"value":"/ let transformed_vector = sim.transform_vector(&Vector3::new(4.0, 5.0, 6.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":964825,"byte_end":964905,"line_start":281,"line_end":281,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(18.0, 15.0, -12.0), epsilon = 1.0e-5);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":964910,"byte_end":965005,"line_start":282,"line_end":282,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":965010,"byte_end":965017,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":965022,"byte_end":965031,"line_start":284,"line_end":284,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9277},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":965870,"byte_end":965893,"line_start":305,"line_end":305,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<Similarity<N, D, R>>::inverse_transform_point","value":"pub fn inverse_transform_point(&Self, &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by the inverse of this similarity. This may\n be cheaper than inverting the similarity and then transforming the\n given point.","sig":null,"attributes":[{"value":"/ Transform the given point by the inverse of this similarity. This may","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":965133,"byte_end":965206,"line_start":289,"line_end":289,"column_start":5,"column_end":78}},{"value":"/ be cheaper than inverting the similarity and then transforming the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":965211,"byte_end":965281,"line_start":290,"line_end":290,"column_start":5,"column_end":75}},{"value":"/ given point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":965286,"byte_end":965302,"line_start":291,"line_end":291,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":965307,"byte_end":965310,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":965315,"byte_end":965328,"line_start":293,"line_end":293,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":965333,"byte_end":965340,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":965345,"byte_end":965384,"line_start":295,"line_end":295,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":965389,"byte_end":965408,"line_start":296,"line_end":296,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Point3, Similarity3, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":965413,"byte_end":965464,"line_start":297,"line_end":297,"column_start":5,"column_end":56}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":965469,"byte_end":965527,"line_start":298,"line_end":298,"column_start":5,"column_end":63}},{"value":"/ let translation = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":965532,"byte_end":965582,"line_start":299,"line_end":299,"column_start":5,"column_end":55}},{"value":"/ let sim = Similarity3::new(translation, axisangle, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":965587,"byte_end":965647,"line_start":300,"line_end":300,"column_start":5,"column_end":65}},{"value":"/ let transformed_point = sim.inverse_transform_point(&Point3::new(4.0, 5.0, 6.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":965652,"byte_end":965737,"line_start":301,"line_end":301,"column_start":5,"column_end":90}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(-1.5, 1.5, 1.5), epsilon = 1.0e-5);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":965742,"byte_end":965832,"line_start":302,"line_end":302,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":965837,"byte_end":965844,"line_start":303,"line_end":303,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":965849,"byte_end":965858,"line_start":304,"line_end":304,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9278},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":966788,"byte_end":966812,"line_start":325,"line_end":325,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<Similarity<N, D, R>>::inverse_transform_vector","value":"pub fn inverse_transform_vector(&Self, &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by the inverse of this similarity,\n ignoring the translational component. This may be cheaper than\n inverting the similarity and then transforming the given vector.","sig":null,"attributes":[{"value":"/ Transform the given vector by the inverse of this similarity,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":966014,"byte_end":966079,"line_start":309,"line_end":309,"column_start":5,"column_end":70}},{"value":"/ ignoring the translational component. This may be cheaper than","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":966084,"byte_end":966150,"line_start":310,"line_end":310,"column_start":5,"column_end":71}},{"value":"/ inverting the similarity and then transforming the given vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":966155,"byte_end":966223,"line_start":311,"line_end":311,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":966228,"byte_end":966231,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":966236,"byte_end":966249,"line_start":313,"line_end":313,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":966254,"byte_end":966261,"line_start":314,"line_end":314,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":966266,"byte_end":966305,"line_start":315,"line_end":315,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":966310,"byte_end":966329,"line_start":316,"line_end":316,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Similarity3, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":966334,"byte_end":966377,"line_start":317,"line_end":317,"column_start":5,"column_end":48}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":966382,"byte_end":966440,"line_start":318,"line_end":318,"column_start":5,"column_end":63}},{"value":"/ let translation = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":966445,"byte_end":966495,"line_start":319,"line_end":319,"column_start":5,"column_end":55}},{"value":"/ let sim = Similarity3::new(translation, axisangle, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":966500,"byte_end":966560,"line_start":320,"line_end":320,"column_start":5,"column_end":65}},{"value":"/ let transformed_vector = sim.inverse_transform_vector(&Vector3::new(4.0, 5.0, 6.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":966565,"byte_end":966653,"line_start":321,"line_end":321,"column_start":5,"column_end":93}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(-3.0, 2.5, 2.0), epsilon = 1.0e-5);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":966658,"byte_end":966750,"line_start":322,"line_end":322,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":966755,"byte_end":966762,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":966767,"byte_end":966776,"line_start":324,"line_end":324,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9283},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":967504,"byte_end":967518,"line_start":340,"line_end":340,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Similarity<N, D, R>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> MatrixN<N, DimNameSum<D, U1>> where\nD: DimNameAdd<U1>, R: SubsetOf<MatrixN<N, DimNameSum<D, U1>>>,\nDefaultAllocator: Allocator<N, DimNameSum<D, U1>, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this similarity into its equivalent homogeneous transformation matrix.\n","sig":null,"attributes":[{"value":"/ Converts this similarity into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":967395,"byte_end":967478,"line_start":338,"line_end":338,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":967483,"byte_end":967492,"line_start":339,"line_end":339,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":9341},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_alias.rs","byte_start":970817,"byte_end":970828,"line_start":6,"line_end":6,"column_start":10,"column_end":21},"name":"Similarity2","qualname":"::geometry::similarity_alias::Similarity2","value":"Similarity<N, U2, UnitComplex<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional similarity.\n","sig":null,"attributes":[{"value":"/ A 2-dimensional similarity.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_alias.rs","byte_start":970776,"byte_end":970807,"line_start":5,"line_end":5,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":9343},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_alias.rs","byte_start":970911,"byte_end":970922,"line_start":9,"line_end":9,"column_start":10,"column_end":21},"name":"Similarity3","qualname":"::geometry::similarity_alias::Similarity3","value":"Similarity<N, U3, UnitQuaternion<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional similarity.\n","sig":null,"attributes":[{"value":"/ A 3-dimensional similarity.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_alias.rs","byte_start":970870,"byte_end":970901,"line_start":8,"line_end":8,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":9345},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_alias.rs","byte_start":971054,"byte_end":971071,"line_start":12,"line_end":12,"column_start":10,"column_end":27},"name":"SimilarityMatrix2","qualname":"::geometry::similarity_alias::SimilarityMatrix2","value":"Similarity<N, U2, Rotation2<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional similarity using a rotation matrix for its rotation part.\n","sig":null,"attributes":[{"value":"/ A 2-dimensional similarity using a rotation matrix for its rotation part.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_alias.rs","byte_start":970967,"byte_end":971044,"line_start":11,"line_end":11,"column_start":1,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":9347},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_alias.rs","byte_start":971198,"byte_end":971215,"line_start":15,"line_end":15,"column_start":10,"column_end":27},"name":"SimilarityMatrix3","qualname":"::geometry::similarity_alias::SimilarityMatrix3","value":"Similarity<N, U3, Rotation3<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional similarity using a rotation matrix for its rotation part.\n","sig":null,"attributes":[{"value":"/ A 3-dimensional similarity using a rotation matrix for its rotation part.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_alias.rs","byte_start":971111,"byte_end":971188,"line_start":14,"line_end":14,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":9427},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":972439,"byte_end":972447,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"identity","qualname":"<Similarity<N, D, R>>::identity","value":"pub fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new identity similarity.","sig":null,"attributes":[{"value":"/ Creates a new identity similarity.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":971994,"byte_end":972032,"line_start":28,"line_end":28,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":972037,"byte_end":972040,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":972045,"byte_end":972058,"line_start":30,"line_end":30,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":972063,"byte_end":972066,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":972071,"byte_end":972078,"line_start":32,"line_end":32,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Similarity2, Point2, Similarity3, Point3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":972083,"byte_end":972146,"line_start":33,"line_end":33,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":972151,"byte_end":972154,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ let sim = Similarity2::identity();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":972159,"byte_end":972197,"line_start":35,"line_end":35,"column_start":5,"column_end":43}},{"value":"/ let pt = Point2::new(1.0, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":972202,"byte_end":972237,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(sim * pt, pt);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":972242,"byte_end":972271,"line_start":37,"line_end":37,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":972276,"byte_end":972279,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let sim = Similarity3::identity();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":972284,"byte_end":972322,"line_start":39,"line_end":39,"column_start":5,"column_end":43}},{"value":"/ let pt = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":972327,"byte_end":972367,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(sim * pt, pt);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":972372,"byte_end":972401,"line_start":41,"line_end":41,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":972406,"byte_end":972413,"line_start":42,"line_end":42,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":972418,"byte_end":972427,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9444},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":974087,"byte_end":974105,"line_start":101,"line_end":101,"column_start":12,"column_end":30},"name":"rotation_wrt_point","qualname":"<Similarity<N, D, R>>::rotation_wrt_point","value":"pub fn rotation_wrt_point(R, Point<N, D>, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The similarity that applies the scaling factor `scaling`, followed by the rotation `r` with\n its axis passing through the point `p`.","sig":null,"attributes":[{"value":"/ The similarity that applies the scaling factor `scaling`, followed by the rotation `r` with","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":973459,"byte_end":973554,"line_start":85,"line_end":85,"column_start":5,"column_end":100}},{"value":"/ its axis passing through the point `p`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":973559,"byte_end":973602,"line_start":86,"line_end":86,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":973607,"byte_end":973610,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":973615,"byte_end":973628,"line_start":88,"line_end":88,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":973633,"byte_end":973636,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":973641,"byte_end":973648,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":973653,"byte_end":973692,"line_start":91,"line_end":91,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":973697,"byte_end":973716,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Similarity2, Point2, UnitComplex};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":973721,"byte_end":973776,"line_start":93,"line_end":93,"column_start":5,"column_end":60}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":973781,"byte_end":973836,"line_start":94,"line_end":94,"column_start":5,"column_end":60}},{"value":"/ let pt = Point2::new(3.0, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":973841,"byte_end":973876,"line_start":95,"line_end":95,"column_start":5,"column_end":40}},{"value":"/ let sim = Similarity2::rotation_wrt_point(rot, pt, 4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":973881,"byte_end":973941,"line_start":96,"line_end":96,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":973946,"byte_end":973949,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(sim * Point2::new(1.0, 2.0), Point2::new(-3.0, 3.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":973954,"byte_end":974049,"line_start":98,"line_end":98,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":974054,"byte_end":974061,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":974066,"byte_end":974075,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9447},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":975503,"byte_end":975506,"line_start":151,"line_end":151,"column_start":12,"column_end":15},"name":"new","qualname":"<Similarity<N, U2, Rotation2<N>>>::new","value":"pub fn new(Vector2<N>, N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new similarity from a translation, a rotation, and an uniform scaling factor.","sig":null,"attributes":[{"value":"/ Creates a new similarity from a translation, a rotation, and an uniform scaling factor.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":974994,"byte_end":975085,"line_start":138,"line_end":138,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":975090,"byte_end":975093,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":975098,"byte_end":975111,"line_start":140,"line_end":140,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":975116,"byte_end":975119,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":975124,"byte_end":975131,"line_start":142,"line_end":142,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":975136,"byte_end":975175,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":975180,"byte_end":975199,"line_start":144,"line_end":144,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{SimilarityMatrix2, Vector2, Point2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":975204,"byte_end":975261,"line_start":145,"line_end":145,"column_start":5,"column_end":62}},{"value":"/ let sim = SimilarityMatrix2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":975266,"byte_end":975356,"line_start":146,"line_end":146,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":975361,"byte_end":975364,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(sim * Point2::new(2.0, 4.0), Point2::new(-11.0, 8.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":975369,"byte_end":975465,"line_start":148,"line_end":148,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":975470,"byte_end":975477,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":975482,"byte_end":975491,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9450},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":976284,"byte_end":976287,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<Similarity<N, U2, UnitComplex<N>>>::new","value":"pub fn new(Vector2<N>, N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new similarity from a translation and a rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new similarity from a translation and a rotation angle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":975809,"byte_end":975878,"line_start":164,"line_end":164,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":975883,"byte_end":975886,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":975891,"byte_end":975904,"line_start":166,"line_end":166,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":975909,"byte_end":975912,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":975917,"byte_end":975924,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":975929,"byte_end":975968,"line_start":169,"line_end":169,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":975973,"byte_end":975992,"line_start":170,"line_end":170,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Similarity2, Vector2, Point2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":975997,"byte_end":976048,"line_start":171,"line_end":171,"column_start":5,"column_end":56}},{"value":"/ let sim = Similarity2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":976053,"byte_end":976137,"line_start":172,"line_end":172,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":976142,"byte_end":976145,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(sim * Point2::new(2.0, 4.0), Point2::new(-11.0, 8.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":976150,"byte_end":976246,"line_start":174,"line_end":174,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":976251,"byte_end":976258,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":976263,"byte_end":976272,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":24350},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1020372,"byte_end":1020374,"line_start":27,"line_end":27,"column_start":19,"column_end":21},"name":"xx","qualname":"<Point<N, D>>::xx","value":"pub fn xx(&Self) -> Point2<N> where D::Value: Cmp<typenum::U0, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24351},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1020413,"byte_end":1020416,"line_start":28,"line_end":28,"column_start":19,"column_end":22},"name":"xxx","qualname":"<Point<N, D>>::xxx","value":"pub fn xxx(&Self) -> Point3<N> where D::Value: Cmp<typenum::U0, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24352},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1020458,"byte_end":1020460,"line_start":30,"line_end":30,"column_start":19,"column_end":21},"name":"xy","qualname":"<Point<N, D>>::xy","value":"pub fn xy(&Self) -> Point2<N> where D::Value: Cmp<typenum::U1, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24353},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1020499,"byte_end":1020501,"line_start":31,"line_end":31,"column_start":19,"column_end":21},"name":"yx","qualname":"<Point<N, D>>::yx","value":"pub fn yx(&Self) -> Point2<N> where D::Value: Cmp<typenum::U1, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24354},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1020540,"byte_end":1020542,"line_start":32,"line_end":32,"column_start":19,"column_end":21},"name":"yy","qualname":"<Point<N, D>>::yy","value":"pub fn yy(&Self) -> Point2<N> where D::Value: Cmp<typenum::U1, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24355},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1020581,"byte_end":1020584,"line_start":33,"line_end":33,"column_start":19,"column_end":22},"name":"xxy","qualname":"<Point<N, D>>::xxy","value":"pub fn xxy(&Self) -> Point3<N> where D::Value: Cmp<typenum::U1, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24356},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1020625,"byte_end":1020628,"line_start":34,"line_end":34,"column_start":19,"column_end":22},"name":"xyx","qualname":"<Point<N, D>>::xyx","value":"pub fn xyx(&Self) -> Point3<N> where D::Value: Cmp<typenum::U1, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24357},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1020669,"byte_end":1020672,"line_start":35,"line_end":35,"column_start":19,"column_end":22},"name":"xyy","qualname":"<Point<N, D>>::xyy","value":"pub fn xyy(&Self) -> Point3<N> where D::Value: Cmp<typenum::U1, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24358},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1020713,"byte_end":1020716,"line_start":36,"line_end":36,"column_start":19,"column_end":22},"name":"yxx","qualname":"<Point<N, D>>::yxx","value":"pub fn yxx(&Self) -> Point3<N> where D::Value: Cmp<typenum::U1, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24359},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1020757,"byte_end":1020760,"line_start":37,"line_end":37,"column_start":19,"column_end":22},"name":"yxy","qualname":"<Point<N, D>>::yxy","value":"pub fn yxy(&Self) -> Point3<N> where D::Value: Cmp<typenum::U1, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24360},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1020801,"byte_end":1020804,"line_start":38,"line_end":38,"column_start":19,"column_end":22},"name":"yyx","qualname":"<Point<N, D>>::yyx","value":"pub fn yyx(&Self) -> Point3<N> where D::Value: Cmp<typenum::U1, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24361},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1020845,"byte_end":1020848,"line_start":39,"line_end":39,"column_start":19,"column_end":22},"name":"yyy","qualname":"<Point<N, D>>::yyy","value":"pub fn yyy(&Self) -> Point3<N> where D::Value: Cmp<typenum::U1, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24362},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1020890,"byte_end":1020892,"line_start":41,"line_end":41,"column_start":19,"column_end":21},"name":"xz","qualname":"<Point<N, D>>::xz","value":"pub fn xz(&Self) -> Point2<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24363},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1020931,"byte_end":1020933,"line_start":42,"line_end":42,"column_start":19,"column_end":21},"name":"yz","qualname":"<Point<N, D>>::yz","value":"pub fn yz(&Self) -> Point2<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24364},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1020972,"byte_end":1020974,"line_start":43,"line_end":43,"column_start":19,"column_end":21},"name":"zx","qualname":"<Point<N, D>>::zx","value":"pub fn zx(&Self) -> Point2<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24365},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1021013,"byte_end":1021015,"line_start":44,"line_end":44,"column_start":19,"column_end":21},"name":"zy","qualname":"<Point<N, D>>::zy","value":"pub fn zy(&Self) -> Point2<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24366},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1021054,"byte_end":1021056,"line_start":45,"line_end":45,"column_start":19,"column_end":21},"name":"zz","qualname":"<Point<N, D>>::zz","value":"pub fn zz(&Self) -> Point2<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24367},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1021095,"byte_end":1021098,"line_start":46,"line_end":46,"column_start":19,"column_end":22},"name":"xxz","qualname":"<Point<N, D>>::xxz","value":"pub fn xxz(&Self) -> Point3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24368},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1021139,"byte_end":1021142,"line_start":47,"line_end":47,"column_start":19,"column_end":22},"name":"xyz","qualname":"<Point<N, D>>::xyz","value":"pub fn xyz(&Self) -> Point3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24369},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1021183,"byte_end":1021186,"line_start":48,"line_end":48,"column_start":19,"column_end":22},"name":"xzx","qualname":"<Point<N, D>>::xzx","value":"pub fn xzx(&Self) -> Point3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24370},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1021227,"byte_end":1021230,"line_start":49,"line_end":49,"column_start":19,"column_end":22},"name":"xzy","qualname":"<Point<N, D>>::xzy","value":"pub fn xzy(&Self) -> Point3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24371},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1021271,"byte_end":1021274,"line_start":50,"line_end":50,"column_start":19,"column_end":22},"name":"xzz","qualname":"<Point<N, D>>::xzz","value":"pub fn xzz(&Self) -> Point3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24372},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1021315,"byte_end":1021318,"line_start":51,"line_end":51,"column_start":19,"column_end":22},"name":"yxz","qualname":"<Point<N, D>>::yxz","value":"pub fn yxz(&Self) -> Point3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24373},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1021359,"byte_end":1021362,"line_start":52,"line_end":52,"column_start":19,"column_end":22},"name":"yyz","qualname":"<Point<N, D>>::yyz","value":"pub fn yyz(&Self) -> Point3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24374},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1021403,"byte_end":1021406,"line_start":53,"line_end":53,"column_start":19,"column_end":22},"name":"yzx","qualname":"<Point<N, D>>::yzx","value":"pub fn yzx(&Self) -> Point3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24375},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1021447,"byte_end":1021450,"line_start":54,"line_end":54,"column_start":19,"column_end":22},"name":"yzy","qualname":"<Point<N, D>>::yzy","value":"pub fn yzy(&Self) -> Point3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24376},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1021491,"byte_end":1021494,"line_start":55,"line_end":55,"column_start":19,"column_end":22},"name":"yzz","qualname":"<Point<N, D>>::yzz","value":"pub fn yzz(&Self) -> Point3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24377},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1021535,"byte_end":1021538,"line_start":56,"line_end":56,"column_start":19,"column_end":22},"name":"zxx","qualname":"<Point<N, D>>::zxx","value":"pub fn zxx(&Self) -> Point3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24378},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1021579,"byte_end":1021582,"line_start":57,"line_end":57,"column_start":19,"column_end":22},"name":"zxy","qualname":"<Point<N, D>>::zxy","value":"pub fn zxy(&Self) -> Point3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24379},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1021623,"byte_end":1021626,"line_start":58,"line_end":58,"column_start":19,"column_end":22},"name":"zxz","qualname":"<Point<N, D>>::zxz","value":"pub fn zxz(&Self) -> Point3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24380},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1021667,"byte_end":1021670,"line_start":59,"line_end":59,"column_start":19,"column_end":22},"name":"zyx","qualname":"<Point<N, D>>::zyx","value":"pub fn zyx(&Self) -> Point3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24381},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1021711,"byte_end":1021714,"line_start":60,"line_end":60,"column_start":19,"column_end":22},"name":"zyy","qualname":"<Point<N, D>>::zyy","value":"pub fn zyy(&Self) -> Point3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24382},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1021755,"byte_end":1021758,"line_start":61,"line_end":61,"column_start":19,"column_end":22},"name":"zyz","qualname":"<Point<N, D>>::zyz","value":"pub fn zyz(&Self) -> Point3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24383},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1021799,"byte_end":1021802,"line_start":62,"line_end":62,"column_start":19,"column_end":22},"name":"zzx","qualname":"<Point<N, D>>::zzx","value":"pub fn zzx(&Self) -> Point3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24384},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1021843,"byte_end":1021846,"line_start":63,"line_end":63,"column_start":19,"column_end":22},"name":"zzy","qualname":"<Point<N, D>>::zzy","value":"pub fn zzy(&Self) -> Point3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":24385},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1021887,"byte_end":1021890,"line_start":64,"line_end":64,"column_start":19,"column_end":22},"name":"zzz","qualname":"<Point<N, D>>::zzz","value":"pub fn zzz(&Self) -> Point3<N> where D::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019915,"byte_end":1019964,"line_start":10,"line_end":10,"column_start":17,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1019981,"byte_end":1019990,"line_start":11,"line_end":11,"column_start":17,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":9819},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1022583,"byte_end":1022592,"line_start":21,"line_end":21,"column_start":11,"column_end":20},"name":"TCategory","qualname":"::geometry::transform::TCategory","value":"TCategory: Any + Debug + Copy + PartialEq + Send","parent":null,"children":[{"krate":0,"index":9820},{"krate":0,"index":9821}],"decl_id":null,"docs":" Trait implemented by phantom types identifying the projective transformation type.","sig":null,"attributes":[{"value":"/ Trait implemented by phantom types identifying the projective transformation type.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1022394,"byte_end":1022480,"line_start":18,"line_end":18,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1022481,"byte_end":1022484,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ NOTE: this trait is not intended to be implemented outside of the `nalgebra` crate.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1022485,"byte_end":1022572,"line_start":20,"line_end":20,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":9820},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1022772,"byte_end":1022786,"line_start":25,"line_end":25,"column_start":8,"column_end":22},"name":"has_normalizer","qualname":"::geometry::transform::TCategory::has_normalizer","value":"pub fn has_normalizer() -> bool","parent":{"krate":0,"index":9819},"children":[],"decl_id":null,"docs":" Indicates whether a `Transform` with the category `Self` has a bottom-row different from\n `0 0 .. 1`.\n","sig":null,"attributes":[{"value":"/ Indicates whether a `Transform` with the category `Self` has a bottom-row different from","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1022638,"byte_end":1022730,"line_start":22,"line_end":22,"column_start":5,"column_end":97}},{"value":"/ `0 0 .. 1`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1022735,"byte_end":1022750,"line_start":23,"line_end":23,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1022755,"byte_end":1022764,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9821},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1022947,"byte_end":1022975,"line_start":31,"line_end":31,"column_start":8,"column_end":36},"name":"check_homogeneous_invariants","qualname":"::geometry::transform::TCategory::check_homogeneous_invariants","value":"pub fn check_homogeneous_invariants<N: RealField, D: DimName>(&MatrixN<N, D>)\n-> bool where N::Epsilon: Copy, DefaultAllocator: Allocator<N, D, D>","parent":{"krate":0,"index":9819},"children":[],"decl_id":null,"docs":" Checks that the given matrix is a valid homogeneous representation of an element of the\n category `Self`.\n","sig":null,"attributes":[{"value":"/ Checks that the given matrix is a valid homogeneous representation of an element of the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1022823,"byte_end":1022914,"line_start":29,"line_end":29,"column_start":5,"column_end":96}},{"value":"/ category `Self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1022919,"byte_end":1022939,"line_start":30,"line_end":30,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":9824},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1023289,"byte_end":1023301,"line_start":39,"line_end":39,"column_start":11,"column_end":23},"name":"TCategoryMul","qualname":"::geometry::transform::TCategoryMul","value":"TCategoryMul<Other: TCategory>: TCategory","parent":null,"children":[{"krate":0,"index":9826}],"decl_id":null,"docs":" Traits that gives the `Transform` category that is compatible with the result of the\n multiplication of transformations with categories `Self` and `Other`.\n","sig":null,"attributes":[{"value":"/ Traits that gives the `Transform` category that is compatible with the result of the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1023116,"byte_end":1023204,"line_start":37,"line_end":37,"column_start":1,"column_end":89}},{"value":"/ multiplication of transformations with categories `Self` and `Other`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1023205,"byte_end":1023278,"line_start":38,"line_end":38,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":9826},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1023558,"byte_end":1023572,"line_start":43,"line_end":43,"column_start":10,"column_end":24},"name":"Representative","qualname":"::geometry::transform::TCategoryMul::Representative","value":"type Representative: TCategory;","parent":{"krate":0,"index":9824},"children":[],"decl_id":null,"docs":" The transform category that results from the multiplication of a `Transform<Self>` to a\n `Transform<Other>`. This is usually equal to `Self` or `Other`, whichever is the most\n general category.\n","sig":null,"attributes":[{"value":"/ The transform category that results from the multiplication of a `Transform<Self>` to a","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1023337,"byte_end":1023428,"line_start":40,"line_end":40,"column_start":5,"column_end":96}},{"value":"/ `Transform<Other>`. This is usually equal to `Self` or `Other`, whichever is the most","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1023433,"byte_end":1023522,"line_start":41,"line_end":41,"column_start":5,"column_end":94}},{"value":"/ general category.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1023527,"byte_end":1023548,"line_start":42,"line_end":42,"column_start":5,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":9827},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1023677,"byte_end":1023693,"line_start":47,"line_end":47,"column_start":11,"column_end":27},"name":"SuperTCategoryOf","qualname":"::geometry::transform::SuperTCategoryOf","value":"SuperTCategoryOf<Other: TCategory>: TCategory","parent":null,"children":[],"decl_id":null,"docs":" Indicates that `Self` is a more general `Transform` category than `Other`.\n","sig":null,"attributes":[{"value":"/ Indicates that `Self` is a more general `Transform` category than `Other`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1023588,"byte_end":1023666,"line_start":46,"line_end":46,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":9829},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1023880,"byte_end":1023894,"line_start":52,"line_end":52,"column_start":11,"column_end":25},"name":"SubTCategoryOf","qualname":"::geometry::transform::SubTCategoryOf","value":"SubTCategoryOf<Other: TCategory>: TCategory","parent":null,"children":[],"decl_id":null,"docs":" Indicates that `Self` is a more specific `Transform` category than `Other`.","sig":null,"attributes":[{"value":"/ Indicates that `Self` is a more specific `Transform` category than `Other`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1023727,"byte_end":1023806,"line_start":49,"line_end":49,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1023807,"byte_end":1023810,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Automatically implemented based on `SuperTCategoryOf`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1023811,"byte_end":1023869,"line_start":51,"line_end":51,"column_start":1,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":24386},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1024171,"byte_end":1024179,"line_start":62,"line_end":62,"column_start":10,"column_end":18},"name":"TGeneral","qualname":"::geometry::transform::TGeneral","value":"pub enum TGeneral { }","parent":null,"children":[],"decl_id":null,"docs":" Tag representing the most general (not necessarily inversible) `Transform` type.\n","sig":null,"attributes":[{"value":"/ Tag representing the most general (not necessarily inversible) `Transform` type.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1024026,"byte_end":1024110,"line_start":60,"line_end":60,"column_start":1,"column_end":85}}]},{"kind":"Enum","id":{"krate":0,"index":24401},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1024311,"byte_end":1024322,"line_start":66,"line_end":66,"column_start":10,"column_end":21},"name":"TProjective","qualname":"::geometry::transform::TProjective","value":"pub enum TProjective { }","parent":null,"children":[],"decl_id":null,"docs":" Tag representing the most general inversible `Transform` type.\n","sig":null,"attributes":[{"value":"/ Tag representing the most general inversible `Transform` type.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1024184,"byte_end":1024250,"line_start":64,"line_end":64,"column_start":1,"column_end":67}}]},{"kind":"Enum","id":{"krate":0,"index":24416},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1024477,"byte_end":1024484,"line_start":70,"line_end":70,"column_start":10,"column_end":17},"name":"TAffine","qualname":"::geometry::transform::TAffine","value":"pub enum TAffine { }","parent":null,"children":[],"decl_id":null,"docs":" Tag representing an affine `Transform`. Its bottom-row is equal to `(0, 0 ... 0, 1)`.\n","sig":null,"attributes":[{"value":"/ Tag representing an affine `Transform`. Its bottom-row is equal to `(0, 0 ... 0, 1)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1024327,"byte_end":1024416,"line_start":68,"line_end":68,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":24446},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1026691,"byte_end":1026700,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"Transform","qualname":"::geometry::transform::Transform","value":"Transform {  }","parent":null,"children":[{"krate":0,"index":24450},{"krate":0,"index":24451}],"decl_id":null,"docs":" A transformation matrix in homogeneous coordinates.","sig":null,"attributes":[{"value":"/ A transformation matrix in homogeneous coordinates.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1026471,"byte_end":1026526,"line_start":154,"line_end":154,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1026527,"byte_end":1026530,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ It is stored as a matrix with dimensions `(D + 1, D + 1)`, e.g., it stores a 4x4 matrix for a","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1026531,"byte_end":1026628,"line_start":156,"line_end":156,"column_start":1,"column_end":98}},{"value":"/ 3D transformation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1026629,"byte_end":1026651,"line_start":157,"line_end":157,"column_start":1,"column_end":23}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1026652,"byte_end":1026662,"line_start":158,"line_end":158,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":9877},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1029552,"byte_end":1029573,"line_start":246,"line_end":246,"column_start":12,"column_end":33},"name":"from_matrix_unchecked","qualname":"<Transform<N, D, C>>::from_matrix_unchecked","value":"pub fn from_matrix_unchecked(MatrixN<N, DimNameSum<D, U1>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new transformation from the given homogeneous matrix. The transformation category\n of `Self` is not checked to be verified by the given matrix.\n","sig":null,"attributes":[{"value":"/ Creates a new transformation from the given homogeneous matrix. The transformation category","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1029362,"byte_end":1029457,"line_start":243,"line_end":243,"column_start":5,"column_end":100}},{"value":"/ of `Self` is not checked to be verified by the given matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1029462,"byte_end":1029526,"line_start":244,"line_end":244,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1029531,"byte_end":1029540,"line_start":245,"line_end":245,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9878},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1030113,"byte_end":1030123,"line_start":266,"line_end":266,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Transform<N, D, C>>::into_inner","value":"pub fn into_inner(Self) -> MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying matrix.","sig":null,"attributes":[{"value":"/ Retrieves the underlying matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1029719,"byte_end":1029755,"line_start":253,"line_end":253,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1029760,"byte_end":1029763,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1029768,"byte_end":1029782,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1029787,"byte_end":1029794,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1029799,"byte_end":1029841,"line_start":257,"line_end":257,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1029846,"byte_end":1029849,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(1.0, 2.0, 0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1029854,"byte_end":1029893,"line_start":259,"line_end":259,"column_start":5,"column_end":44}},{"value":"/                      3.0, 4.0, 0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1029898,"byte_end":1029937,"line_start":260,"line_end":260,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1029942,"byte_end":1029982,"line_start":261,"line_end":261,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1029987,"byte_end":1030036,"line_start":262,"line_end":262,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(t.into_inner(), m);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1030041,"byte_end":1030075,"line_start":263,"line_end":263,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1030080,"byte_end":1030087,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1030092,"byte_end":1030101,"line_start":265,"line_end":265,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9879},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1030371,"byte_end":1030377,"line_start":274,"line_end":274,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Transform<N, D, C>>::unwrap","value":"pub fn unwrap(Self) -> MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying matrix.\n Deprecated: Use [Transform::into_inner] instead.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1030196,"byte_end":1030232,"line_start":270,"line_end":270,"column_start":5,"column_end":41}},{"value":"/ Deprecated: Use [Transform::into_inner] instead.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1030237,"byte_end":1030289,"line_start":271,"line_end":271,"column_start":5,"column_end":57}},{"value":"deprecated(note = \"use `.into_inner()` instead\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1030294,"byte_end":1030345,"line_start":272,"line_end":272,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1030350,"byte_end":1030359,"line_start":273,"line_end":273,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9880},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1030846,"byte_end":1030852,"line_start":291,"line_end":291,"column_start":12,"column_end":18},"name":"matrix","qualname":"<Transform<N, D, C>>::matrix","value":"pub fn matrix(&Self) -> &MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A reference to the underlying matrix.","sig":null,"attributes":[{"value":"/ A reference to the underlying matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1030450,"byte_end":1030491,"line_start":278,"line_end":278,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1030496,"byte_end":1030499,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1030504,"byte_end":1030518,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1030523,"byte_end":1030530,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1030535,"byte_end":1030577,"line_start":282,"line_end":282,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1030582,"byte_end":1030585,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(1.0, 2.0, 0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1030590,"byte_end":1030629,"line_start":284,"line_end":284,"column_start":5,"column_end":44}},{"value":"/                      3.0, 4.0, 0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1030634,"byte_end":1030673,"line_start":285,"line_end":285,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1030678,"byte_end":1030718,"line_start":286,"line_end":286,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1030723,"byte_end":1030772,"line_start":287,"line_end":287,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(*t.matrix(), m);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1030777,"byte_end":1030808,"line_start":288,"line_end":288,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1030813,"byte_end":1030820,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1030825,"byte_end":1030834,"line_start":290,"line_end":290,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9881},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1031759,"byte_end":1031779,"line_start":318,"line_end":318,"column_start":12,"column_end":32},"name":"matrix_mut_unchecked","qualname":"<Transform<N, D, C>>::matrix_mut_unchecked","value":"pub fn matrix_mut_unchecked(&mut Self) -> &mut MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A mutable reference to the underlying matrix.","sig":null,"attributes":[{"value":"/ A mutable reference to the underlying matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1030928,"byte_end":1030977,"line_start":295,"line_end":295,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1030982,"byte_end":1030985,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ It is `_unchecked` because direct modifications of this matrix may break invariants","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1030990,"byte_end":1031077,"line_start":297,"line_end":297,"column_start":5,"column_end":92}},{"value":"/ identified by this transformation category.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1031082,"byte_end":1031129,"line_start":298,"line_end":298,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1031134,"byte_end":1031137,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1031142,"byte_end":1031156,"line_start":300,"line_end":300,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1031161,"byte_end":1031168,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1031173,"byte_end":1031215,"line_start":302,"line_end":302,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1031220,"byte_end":1031223,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(1.0, 2.0, 0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1031228,"byte_end":1031267,"line_start":304,"line_end":304,"column_start":5,"column_end":44}},{"value":"/                      3.0, 4.0, 0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1031272,"byte_end":1031311,"line_start":305,"line_end":305,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1031316,"byte_end":1031356,"line_start":306,"line_end":306,"column_start":5,"column_end":45}},{"value":"/ let mut t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1031361,"byte_end":1031414,"line_start":307,"line_end":307,"column_start":5,"column_end":58}},{"value":"/ t.matrix_mut_unchecked().m12 = 42.0;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1031419,"byte_end":1031459,"line_start":308,"line_end":308,"column_start":5,"column_end":45}},{"value":"/ t.matrix_mut_unchecked().m23 = 90.0;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1031464,"byte_end":1031504,"line_start":309,"line_end":309,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1031509,"byte_end":1031512,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1031517,"byte_end":1031520,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ let expected = Matrix3::new(1.0, 42.0, 0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1031525,"byte_end":1031572,"line_start":312,"line_end":312,"column_start":5,"column_end":52}},{"value":"/                             3.0, 4.0,  90.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1031577,"byte_end":1031625,"line_start":313,"line_end":313,"column_start":5,"column_end":53}},{"value":"/                             0.0, 0.0,  1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1031630,"byte_end":1031678,"line_start":314,"line_end":314,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(*t.matrix(), expected);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1031683,"byte_end":1031721,"line_start":315,"line_end":315,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1031726,"byte_end":1031733,"line_start":316,"line_end":316,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1031738,"byte_end":1031747,"line_start":317,"line_end":317,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9882},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1032251,"byte_end":1032263,"line_start":329,"line_end":329,"column_start":12,"column_end":24},"name":"set_category","qualname":"<Transform<N, D, C>>::set_category","value":"pub fn set_category<CNew: SuperTCategoryOf<C>>(Self) -> Transform<N, D, CNew>","parent":null,"children":[],"decl_id":null,"docs":" Sets the category of this transform.","sig":null,"attributes":[{"value":"/ Sets the category of this transform.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1031867,"byte_end":1031907,"line_start":322,"line_end":322,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1031912,"byte_end":1031915,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ This can be done only if the new category is more general than the current one, e.g., a","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1031920,"byte_end":1032011,"line_start":324,"line_end":324,"column_start":5,"column_end":96}},{"value":"/ transform with category `TProjective` cannot be converted to a transform with category","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1032016,"byte_end":1032106,"line_start":325,"line_end":325,"column_start":5,"column_end":95}},{"value":"/ `TAffine` because not all projective transformations are affine (the other way-round is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1032111,"byte_end":1032202,"line_start":326,"line_end":326,"column_start":5,"column_end":96}},{"value":"/ valid though).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1032207,"byte_end":1032225,"line_start":327,"line_end":327,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1032230,"byte_end":1032239,"line_start":328,"line_end":328,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9884},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1032625,"byte_end":1032636,"line_start":338,"line_end":338,"column_start":12,"column_end":23},"name":"clone_owned","qualname":"<Transform<N, D, C>>::clone_owned","value":"pub fn clone_owned(&Self) -> Transform<N, D, C>","parent":null,"children":[],"decl_id":null,"docs":" Clones this transform into one that owns its data.\n","sig":null,"attributes":[{"value":"/ Clones this transform into one that owns its data.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1032389,"byte_end":1032443,"line_start":333,"line_end":333,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1032448,"byte_end":1032457,"line_start":334,"line_end":334,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This method is redundant with automatic `Copy` and the `.clone()` method and will be removed in a future release.\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1032462,"byte_end":1032613,"line_start":335,"line_end":337,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":9885},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1033187,"byte_end":1033201,"line_start":355,"line_end":355,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Transform<N, D, C>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this transform into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this transform into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1032747,"byte_end":1032829,"line_start":342,"line_end":342,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1032834,"byte_end":1032837,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1032842,"byte_end":1032856,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1032861,"byte_end":1032868,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1032873,"byte_end":1032915,"line_start":346,"line_end":346,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1032920,"byte_end":1032923,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(1.0, 2.0, 0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1032928,"byte_end":1032967,"line_start":348,"line_end":348,"column_start":5,"column_end":44}},{"value":"/                      3.0, 4.0, 0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1032972,"byte_end":1033011,"line_start":349,"line_end":349,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1033016,"byte_end":1033056,"line_start":350,"line_end":350,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1033061,"byte_end":1033110,"line_start":351,"line_end":351,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(t.into_inner(), m);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1033115,"byte_end":1033149,"line_start":352,"line_end":352,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1033154,"byte_end":1033161,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1033166,"byte_end":1033175,"line_start":354,"line_end":354,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9886},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1034353,"byte_end":1034364,"line_start":384,"line_end":384,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<Transform<N, D, C>>::try_inverse","value":"pub fn try_inverse(Self) -> Option<Transform<N, D, C>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to invert this transformation. You may use `.inverse` instead of this\n transformation has a subcategory of `TProjective` (i.e. if it is a `Projective{2,3}` or `Affine{2,3}`).","sig":null,"attributes":[{"value":"/ Attempts to invert this transformation. You may use `.inverse` instead of this","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1033291,"byte_end":1033373,"line_start":359,"line_end":359,"column_start":5,"column_end":87}},{"value":"/ transformation has a subcategory of `TProjective` (i.e. if it is a `Projective{2,3}` or `Affine{2,3}`).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1033378,"byte_end":1033485,"line_start":360,"line_end":360,"column_start":5,"column_end":112}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1033490,"byte_end":1033493,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1033498,"byte_end":1033512,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1033517,"byte_end":1033524,"line_start":363,"line_end":363,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1033529,"byte_end":1033568,"line_start":364,"line_end":364,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1033573,"byte_end":1033615,"line_start":365,"line_end":365,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1033620,"byte_end":1033623,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(2.0, 2.0, -0.3,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1033628,"byte_end":1033668,"line_start":367,"line_end":367,"column_start":5,"column_end":45}},{"value":"/                      3.0, 4.0, 0.1,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1033673,"byte_end":1033712,"line_start":368,"line_end":368,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1033717,"byte_end":1033757,"line_start":369,"line_end":369,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1033762,"byte_end":1033811,"line_start":370,"line_end":370,"column_start":5,"column_end":54}},{"value":"/ let inv_t = t.try_inverse().unwrap();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1033816,"byte_end":1033857,"line_start":371,"line_end":371,"column_start":5,"column_end":46}},{"value":"/ assert_relative_eq!(t * inv_t, Transform2::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1033862,"byte_end":1033921,"line_start":372,"line_end":372,"column_start":5,"column_end":64}},{"value":"/ assert_relative_eq!(inv_t * t, Transform2::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1033926,"byte_end":1033985,"line_start":373,"line_end":373,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1033990,"byte_end":1033993,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ // Non-invertible case.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1033998,"byte_end":1034025,"line_start":375,"line_end":375,"column_start":5,"column_end":32}},{"value":"/ let m = Matrix3::new(0.0, 2.0, 1.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1034030,"byte_end":1034069,"line_start":376,"line_end":376,"column_start":5,"column_end":44}},{"value":"/                      3.0, 0.0, 5.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1034074,"byte_end":1034113,"line_start":377,"line_end":377,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1034118,"byte_end":1034158,"line_start":378,"line_end":378,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1034163,"byte_end":1034212,"line_start":379,"line_end":379,"column_start":5,"column_end":54}},{"value":"/ assert!(t.try_inverse().is_none());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1034217,"byte_end":1034256,"line_start":380,"line_end":380,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1034261,"byte_end":1034268,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1034273,"byte_end":1034282,"line_start":382,"line_end":382,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use try_inverse_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1034287,"byte_end":1034341,"line_start":383,"line_end":383,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":9887},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1035316,"byte_end":1035323,"line_start":410,"line_end":410,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Transform<N, D, C>>::inverse","value":"pub fn inverse(Self) -> Transform<N, D, C> where\nC: SubTCategoryOf<TProjective>","parent":null,"children":[],"decl_id":null,"docs":" Inverts this transformation. Use `.try_inverse` if this transform has the `TGeneral`\n category (i.e., a `Transform{2,3}` may not be invertible).","sig":null,"attributes":[{"value":"/ Inverts this transformation. Use `.try_inverse` if this transform has the `TGeneral`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1034565,"byte_end":1034653,"line_start":392,"line_end":392,"column_start":5,"column_end":93}},{"value":"/ category (i.e., a `Transform{2,3}` may not be invertible).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1034658,"byte_end":1034720,"line_start":393,"line_end":393,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1034725,"byte_end":1034728,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1034733,"byte_end":1034747,"line_start":395,"line_end":395,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1034752,"byte_end":1034759,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1034764,"byte_end":1034803,"line_start":397,"line_end":397,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3, Projective2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1034808,"byte_end":1034851,"line_start":398,"line_end":398,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1034856,"byte_end":1034859,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(2.0, 2.0, -0.3,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1034864,"byte_end":1034904,"line_start":400,"line_end":400,"column_start":5,"column_end":45}},{"value":"/                      3.0, 4.0, 0.1,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1034909,"byte_end":1034948,"line_start":401,"line_end":401,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1034953,"byte_end":1034993,"line_start":402,"line_end":402,"column_start":5,"column_end":45}},{"value":"/ let proj = Projective2::from_matrix_unchecked(m);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1034998,"byte_end":1035051,"line_start":403,"line_end":403,"column_start":5,"column_end":58}},{"value":"/ let inv_t = proj.inverse();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1035056,"byte_end":1035087,"line_start":404,"line_end":404,"column_start":5,"column_end":36}},{"value":"/ assert_relative_eq!(proj * inv_t, Projective2::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1035092,"byte_end":1035155,"line_start":405,"line_end":405,"column_start":5,"column_end":68}},{"value":"/ assert_relative_eq!(inv_t * proj, Projective2::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1035160,"byte_end":1035223,"line_start":406,"line_end":406,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1035228,"byte_end":1035235,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1035240,"byte_end":1035249,"line_start":408,"line_end":408,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use inverse_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1035254,"byte_end":1035304,"line_start":409,"line_end":409,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":9888},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1036522,"byte_end":1036537,"line_start":443,"line_end":443,"column_start":12,"column_end":27},"name":"try_inverse_mut","qualname":"<Transform<N, D, C>>::try_inverse_mut","value":"pub fn try_inverse_mut(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Attempts to invert this transformation in-place. You may use `.inverse_mut` instead of this\n transformation has a subcategory of `TProjective`.","sig":null,"attributes":[{"value":"/ Attempts to invert this transformation in-place. You may use `.inverse_mut` instead of this","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1035537,"byte_end":1035632,"line_start":418,"line_end":418,"column_start":5,"column_end":100}},{"value":"/ transformation has a subcategory of `TProjective`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1035637,"byte_end":1035691,"line_start":419,"line_end":419,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1035696,"byte_end":1035699,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1035704,"byte_end":1035718,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1035723,"byte_end":1035730,"line_start":422,"line_end":422,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1035735,"byte_end":1035774,"line_start":423,"line_end":423,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1035779,"byte_end":1035821,"line_start":424,"line_end":424,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1035826,"byte_end":1035829,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(2.0, 2.0, -0.3,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1035834,"byte_end":1035874,"line_start":426,"line_end":426,"column_start":5,"column_end":45}},{"value":"/                      3.0, 4.0, 0.1,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1035879,"byte_end":1035918,"line_start":427,"line_end":427,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1035923,"byte_end":1035963,"line_start":428,"line_end":428,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1035968,"byte_end":1036017,"line_start":429,"line_end":429,"column_start":5,"column_end":54}},{"value":"/ let mut inv_t = t;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1036022,"byte_end":1036044,"line_start":430,"line_end":430,"column_start":5,"column_end":27}},{"value":"/ assert!(inv_t.try_inverse_mut());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1036049,"byte_end":1036086,"line_start":431,"line_end":431,"column_start":5,"column_end":42}},{"value":"/ assert_relative_eq!(t * inv_t, Transform2::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1036091,"byte_end":1036150,"line_start":432,"line_end":432,"column_start":5,"column_end":64}},{"value":"/ assert_relative_eq!(inv_t * t, Transform2::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1036155,"byte_end":1036214,"line_start":433,"line_end":433,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1036219,"byte_end":1036222,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ // Non-invertible case.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1036227,"byte_end":1036254,"line_start":435,"line_end":435,"column_start":5,"column_end":32}},{"value":"/ let m = Matrix3::new(0.0, 2.0, 1.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1036259,"byte_end":1036298,"line_start":436,"line_end":436,"column_start":5,"column_end":44}},{"value":"/                      3.0, 0.0, 5.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1036303,"byte_end":1036342,"line_start":437,"line_end":437,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1036347,"byte_end":1036387,"line_start":438,"line_end":438,"column_start":5,"column_end":45}},{"value":"/ let mut t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1036392,"byte_end":1036445,"line_start":439,"line_end":439,"column_start":5,"column_end":58}},{"value":"/ assert!(!t.try_inverse_mut());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1036450,"byte_end":1036484,"line_start":440,"line_end":440,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1036489,"byte_end":1036496,"line_start":441,"line_end":441,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1036501,"byte_end":1036510,"line_start":442,"line_end":442,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9889},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1037318,"byte_end":1037329,"line_start":465,"line_end":465,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<Transform<N, D, C>>::inverse_mut","value":"pub fn inverse_mut(&mut Self) where C: SubTCategoryOf<TProjective>","parent":null,"children":[],"decl_id":null,"docs":" Inverts this transformation in-place. Use `.try_inverse_mut` if this transform has the\n `TGeneral` category (it may not be invertible).","sig":null,"attributes":[{"value":"/ Inverts this transformation in-place. Use `.try_inverse_mut` if this transform has the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1036608,"byte_end":1036698,"line_start":447,"line_end":447,"column_start":5,"column_end":95}},{"value":"/ `TGeneral` category (it may not be invertible).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1036703,"byte_end":1036754,"line_start":448,"line_end":448,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1036759,"byte_end":1036762,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1036767,"byte_end":1036781,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1036786,"byte_end":1036793,"line_start":451,"line_end":451,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1036798,"byte_end":1036837,"line_start":452,"line_end":452,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3, Projective2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1036842,"byte_end":1036885,"line_start":453,"line_end":453,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1036890,"byte_end":1036893,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(2.0, 2.0, -0.3,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1036898,"byte_end":1036938,"line_start":455,"line_end":455,"column_start":5,"column_end":45}},{"value":"/                      3.0, 4.0, 0.1,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1036943,"byte_end":1036982,"line_start":456,"line_end":456,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1036987,"byte_end":1037027,"line_start":457,"line_end":457,"column_start":5,"column_end":45}},{"value":"/ let proj = Projective2::from_matrix_unchecked(m);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1037032,"byte_end":1037085,"line_start":458,"line_end":458,"column_start":5,"column_end":58}},{"value":"/ let mut inv_t = proj;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1037090,"byte_end":1037115,"line_start":459,"line_end":459,"column_start":5,"column_end":30}},{"value":"/ inv_t.inverse_mut();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1037120,"byte_end":1037144,"line_start":460,"line_end":460,"column_start":5,"column_end":29}},{"value":"/ assert_relative_eq!(proj * inv_t, Projective2::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1037149,"byte_end":1037212,"line_start":461,"line_end":461,"column_start":5,"column_end":68}},{"value":"/ assert_relative_eq!(inv_t * proj, Projective2::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1037217,"byte_end":1037280,"line_start":462,"line_end":462,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1037285,"byte_end":1037292,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1037297,"byte_end":1037306,"line_start":464,"line_end":464,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9894},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1037868,"byte_end":1037883,"line_start":486,"line_end":486,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Transform<N, D, C>>::transform_point","value":"pub fn transform_point(&Self, &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by this transformation.","sig":null,"attributes":[{"value":"/ Transform the given point by this transformation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1037721,"byte_end":1037774,"line_start":482,"line_end":482,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1037779,"byte_end":1037782,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1037787,"byte_end":1037842,"line_start":484,"line_end":484,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1037847,"byte_end":1037856,"line_start":485,"line_end":485,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9895},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1038170,"byte_end":1038186,"line_start":495,"line_end":495,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<Transform<N, D, C>>::transform_vector","value":"pub fn transform_vector(&Self, &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by this transformation, ignoring the\n translational component of the transformation.","sig":null,"attributes":[{"value":"/ Transform the given vector by this transformation, ignoring the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1037955,"byte_end":1038022,"line_start":490,"line_end":490,"column_start":5,"column_end":72}},{"value":"/ translational component of the transformation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1038027,"byte_end":1038077,"line_start":491,"line_end":491,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1038082,"byte_end":1038085,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * v`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1038090,"byte_end":1038144,"line_start":493,"line_end":493,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1038149,"byte_end":1038158,"line_start":494,"line_end":494,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9900},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1038740,"byte_end":1038763,"line_start":512,"line_end":512,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<Transform<N, D, C>>::inverse_transform_point","value":"pub fn inverse_transform_point(&Self, &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by the inverse of this transformation.\n This may be cheaper than inverting the transformation and transforming\n the point.\n","sig":null,"attributes":[{"value":"/ Transform the given point by the inverse of this transformation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1038548,"byte_end":1038616,"line_start":508,"line_end":508,"column_start":5,"column_end":73}},{"value":"/ This may be cheaper than inverting the transformation and transforming","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1038621,"byte_end":1038695,"line_start":509,"line_end":509,"column_start":5,"column_end":79}},{"value":"/ the point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1038700,"byte_end":1038714,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1038719,"byte_end":1038728,"line_start":511,"line_end":511,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9901},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1039047,"byte_end":1039071,"line_start":520,"line_end":520,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<Transform<N, D, C>>::inverse_transform_vector","value":"pub fn inverse_transform_vector(&Self, &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by the inverse of this transformation.\n This may be cheaper than inverting the transformation and transforming\n the vector.\n","sig":null,"attributes":[{"value":"/ Transform the given vector by the inverse of this transformation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1038853,"byte_end":1038922,"line_start":516,"line_end":516,"column_start":5,"column_end":74}},{"value":"/ This may be cheaper than inverting the transformation and transforming","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1038927,"byte_end":1039001,"line_start":517,"line_end":517,"column_start":5,"column_end":79}},{"value":"/ the vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1039006,"byte_end":1039021,"line_start":518,"line_end":518,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1039026,"byte_end":1039035,"line_start":519,"line_end":519,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9905},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1039477,"byte_end":1039487,"line_start":532,"line_end":532,"column_start":12,"column_end":22},"name":"matrix_mut","qualname":"<Transform<N, D, TGeneral>>::matrix_mut","value":"pub fn matrix_mut(&mut Self) -> &mut MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A mutable reference to underlying matrix. Use `.matrix_mut_unchecked` instead if this\n transformation category is not `TGeneral`.\n","sig":null,"attributes":[{"value":"/ A mutable reference to underlying matrix. Use `.matrix_mut_unchecked` instead if this","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1039311,"byte_end":1039400,"line_start":529,"line_end":529,"column_start":5,"column_end":94}},{"value":"/ transformation category is not `TGeneral`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1039405,"byte_end":1039451,"line_start":530,"line_end":530,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1039456,"byte_end":1039465,"line_start":531,"line_end":531,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":9946},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_alias.rs","byte_start":1041516,"byte_end":1041526,"line_start":6,"line_end":6,"column_start":10,"column_end":20},"name":"Transform2","qualname":"::geometry::transform_alias::Transform2","value":"Transform<N, U2, TGeneral>","parent":null,"children":[],"decl_id":null,"docs":" A 2D general transformation that may not be invertible. Stored as a homogeneous 3x3 matrix.\n","sig":null,"attributes":[{"value":"/ A 2D general transformation that may not be invertible. Stored as a homogeneous 3x3 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_alias.rs","byte_start":1041411,"byte_end":1041506,"line_start":5,"line_end":5,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":9948},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_alias.rs","byte_start":1041650,"byte_end":1041661,"line_start":8,"line_end":8,"column_start":10,"column_end":21},"name":"Projective2","qualname":"::geometry::transform_alias::Projective2","value":"Transform<N, U2, TProjective>","parent":null,"children":[],"decl_id":null,"docs":" An invertible 2D general transformation. Stored as a homogeneous 3x3 matrix.\n","sig":null,"attributes":[{"value":"/ An invertible 2D general transformation. Stored as a homogeneous 3x3 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_alias.rs","byte_start":1041560,"byte_end":1041640,"line_start":7,"line_end":7,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":9950},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_alias.rs","byte_start":1041775,"byte_end":1041782,"line_start":10,"line_end":10,"column_start":10,"column_end":17},"name":"Affine2","qualname":"::geometry::transform_alias::Affine2","value":"Transform<N, U2, TAffine>","parent":null,"children":[],"decl_id":null,"docs":" A 2D affine transformation. Stored as a homogeneous 3x3 matrix.\n","sig":null,"attributes":[{"value":"/ A 2D affine transformation. Stored as a homogeneous 3x3 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_alias.rs","byte_start":1041698,"byte_end":1041765,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":9952},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_alias.rs","byte_start":1041921,"byte_end":1041931,"line_start":13,"line_end":13,"column_start":10,"column_end":20},"name":"Transform3","qualname":"::geometry::transform_alias::Transform3","value":"Transform<N, U3, TGeneral>","parent":null,"children":[],"decl_id":null,"docs":" A 3D general transformation that may not be inversible. Stored as a homogeneous 4x4 matrix.\n","sig":null,"attributes":[{"value":"/ A 3D general transformation that may not be inversible. Stored as a homogeneous 4x4 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_alias.rs","byte_start":1041816,"byte_end":1041911,"line_start":12,"line_end":12,"column_start":1,"column_end":96}}]},{"kind":"Type","id":{"krate":0,"index":9954},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_alias.rs","byte_start":1042055,"byte_end":1042066,"line_start":15,"line_end":15,"column_start":10,"column_end":21},"name":"Projective3","qualname":"::geometry::transform_alias::Projective3","value":"Transform<N, U3, TProjective>","parent":null,"children":[],"decl_id":null,"docs":" An invertible 3D general transformation. Stored as a homogeneous 4x4 matrix.\n","sig":null,"attributes":[{"value":"/ An invertible 3D general transformation. Stored as a homogeneous 4x4 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_alias.rs","byte_start":1041965,"byte_end":1042045,"line_start":14,"line_end":14,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":9956},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_alias.rs","byte_start":1042180,"byte_end":1042187,"line_start":17,"line_end":17,"column_start":10,"column_end":17},"name":"Affine3","qualname":"::geometry::transform_alias::Affine3","value":"Transform<N, U3, TAffine>","parent":null,"children":[],"decl_id":null,"docs":" A 3D affine transformation. Stored as a homogeneous 4x4 matrix.\n","sig":null,"attributes":[{"value":"/ A 3D affine transformation. Stored as a homogeneous 4x4 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_alias.rs","byte_start":1042103,"byte_end":1042170,"line_start":16,"line_end":16,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":9996},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_construction.rs","byte_start":1043451,"byte_end":1043459,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"identity","qualname":"<Transform<N, D, C>>::identity","value":"pub fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new identity transform.","sig":null,"attributes":[{"value":"/ Creates a new identity transform.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_construction.rs","byte_start":1042614,"byte_end":1042651,"line_start":15,"line_end":15,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_construction.rs","byte_start":1042656,"byte_end":1042659,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_construction.rs","byte_start":1042664,"byte_end":1042677,"line_start":17,"line_end":17,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_construction.rs","byte_start":1042682,"byte_end":1042685,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_construction.rs","byte_start":1042690,"byte_end":1042697,"line_start":19,"line_end":19,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Transform2, Projective2, Affine2, Transform3, Projective3, Affine3, Point2, Point3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_construction.rs","byte_start":1042702,"byte_end":1042807,"line_start":20,"line_end":20,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_construction.rs","byte_start":1042812,"byte_end":1042815,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ let pt = Point2::new(1.0, 2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_construction.rs","byte_start":1042820,"byte_end":1042855,"line_start":22,"line_end":22,"column_start":5,"column_end":40}},{"value":"/ let t = Projective2::identity();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_construction.rs","byte_start":1042860,"byte_end":1042896,"line_start":23,"line_end":23,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(t * pt, pt);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_construction.rs","byte_start":1042901,"byte_end":1042928,"line_start":24,"line_end":24,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_construction.rs","byte_start":1042933,"byte_end":1042936,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ let aff = Affine2::identity();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_construction.rs","byte_start":1042941,"byte_end":1042975,"line_start":26,"line_end":26,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(aff * pt, pt);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_construction.rs","byte_start":1042980,"byte_end":1043009,"line_start":27,"line_end":27,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_construction.rs","byte_start":1043014,"byte_end":1043017,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ let aff = Transform2::identity();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_construction.rs","byte_start":1043022,"byte_end":1043059,"line_start":29,"line_end":29,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(aff * pt, pt);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_construction.rs","byte_start":1043064,"byte_end":1043093,"line_start":30,"line_end":30,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_construction.rs","byte_start":1043098,"byte_end":1043101,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ // Also works in 3D.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_construction.rs","byte_start":1043106,"byte_end":1043130,"line_start":32,"line_end":32,"column_start":5,"column_end":29}},{"value":"/ let pt = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_construction.rs","byte_start":1043135,"byte_end":1043175,"line_start":33,"line_end":33,"column_start":5,"column_end":45}},{"value":"/ let t = Projective3::identity();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_construction.rs","byte_start":1043180,"byte_end":1043216,"line_start":34,"line_end":34,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(t * pt, pt);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_construction.rs","byte_start":1043221,"byte_end":1043248,"line_start":35,"line_end":35,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_construction.rs","byte_start":1043253,"byte_end":1043256,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let aff = Affine3::identity();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_construction.rs","byte_start":1043261,"byte_end":1043295,"line_start":37,"line_end":37,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(aff * pt, pt);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_construction.rs","byte_start":1043300,"byte_end":1043329,"line_start":38,"line_end":38,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_construction.rs","byte_start":1043334,"byte_end":1043337,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ let aff = Transform3::identity();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_construction.rs","byte_start":1043342,"byte_end":1043379,"line_start":40,"line_end":40,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(aff * pt, pt);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_construction.rs","byte_start":1043384,"byte_end":1043413,"line_start":41,"line_end":41,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_construction.rs","byte_start":1043418,"byte_end":1043425,"line_start":42,"line_end":42,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_construction.rs","byte_start":1043430,"byte_end":1043439,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":10299},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/reflection.rs","byte_start":1073246,"byte_end":1073256,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"Reflection","qualname":"::geometry::reflection::Reflection","value":"Reflection {  }","parent":null,"children":[{"krate":0,"index":10303},{"krate":0,"index":10304}],"decl_id":null,"docs":" A reflection wrt. a plane.\n","sig":null,"attributes":[{"value":"/ A reflection wrt. a plane.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/reflection.rs","byte_start":1073204,"byte_end":1073234,"line_start":10,"line_end":10,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":10309},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/reflection.rs","byte_start":1073668,"byte_end":1073671,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<Reflection<N, D, S>>::new","value":"pub fn new(Unit<Vector<N, D, S>>, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reflection wrt the plane orthogonal to the given axis and bias.","sig":null,"attributes":[{"value":"/ Creates a new reflection wrt the plane orthogonal to the given axis and bias.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/reflection.rs","byte_start":1073413,"byte_end":1073494,"line_start":17,"line_end":17,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/reflection.rs","byte_start":1073499,"byte_end":1073502,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ The bias is the position of the plane on the axis. In particular, a bias equal to zero","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/reflection.rs","byte_start":1073507,"byte_end":1073597,"line_start":19,"line_end":19,"column_start":5,"column_end":95}},{"value":"/ represents a plane that passes through the origin.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/reflection.rs","byte_start":1073602,"byte_end":1073656,"line_start":20,"line_end":20,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":10310},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/reflection.rs","byte_start":1073937,"byte_end":1073957,"line_start":30,"line_end":30,"column_start":12,"column_end":32},"name":"new_containing_point","qualname":"<Reflection<N, D, S>>::new_containing_point","value":"pub fn new_containing_point(Unit<Vector<N, D, S>>, &Point<N, D>) -> Self where\nD: DimName, DefaultAllocator: Allocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reflection wrt. the plane orthogonal to the given axis and that contains the\n point `pt`.\n","sig":null,"attributes":[{"value":"/ Creates a new reflection wrt. the plane orthogonal to the given axis and that contains the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/reflection.rs","byte_start":1073811,"byte_end":1073905,"line_start":28,"line_end":28,"column_start":5,"column_end":99}},{"value":"/ point `pt`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/reflection.rs","byte_start":1073910,"byte_end":1073925,"line_start":29,"line_end":29,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":10311},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/reflection.rs","byte_start":1074210,"byte_end":1074214,"line_start":40,"line_end":40,"column_start":12,"column_end":16},"name":"axis","qualname":"<Reflection<N, D, S>>::axis","value":"pub fn axis(&Self) -> &Vector<N, D, S>","parent":null,"children":[],"decl_id":null,"docs":" The reflexion axis.\n","sig":null,"attributes":[{"value":"/ The reflexion axis.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/reflection.rs","byte_start":1074175,"byte_end":1074198,"line_start":39,"line_end":39,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":10312},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/reflection.rs","byte_start":1074398,"byte_end":1074405,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"reflect","qualname":"<Reflection<N, D, S>>::reflect","value":"pub fn reflect<R2: Dim, C2: Dim, S2>(&Self, &mut Matrix<N, R2, C2, S2>) where\nS2: StorageMut<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Applies the reflection to the columns of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies the reflection to the columns of `rhs`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/reflection.rs","byte_start":1074335,"byte_end":1074386,"line_start":45,"line_end":45,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":10316},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/reflection.rs","byte_start":1075193,"byte_end":1075210,"line_start":63,"line_end":63,"column_start":12,"column_end":29},"name":"reflect_with_sign","qualname":"<Reflection<N, D, S>>::reflect_with_sign","value":"pub fn reflect_with_sign<R2: Dim, C2: Dim,\n                         S2>(&Self, &mut Matrix<N, R2, C2, S2>, N) where\nS2: StorageMut<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Applies the reflection to the columns of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies the reflection to the columns of `rhs`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/reflection.rs","byte_start":1075130,"byte_end":1075181,"line_start":62,"line_end":62,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":10320},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/reflection.rs","byte_start":1075948,"byte_end":1075960,"line_start":79,"line_end":79,"column_start":12,"column_end":24},"name":"reflect_rows","qualname":"<Reflection<N, D, S>>::reflect_rows","value":"pub fn reflect_rows<R2: Dim, C2: Dim, S2,\n                    S3>(&Self, &mut Matrix<N, R2, C2, S2>,\n                        &mut Vector<N, R2, S3>) where\nS2: StorageMut<N, R2, C2>, S3: StorageMut<N, R2>,\nShapeConstraint: DimEq<C2, D> + AreMultipliable<R2, C2, D, U1>","parent":null,"children":[],"decl_id":null,"docs":" Applies the reflection to the rows of `lhs`.\n","sig":null,"attributes":[{"value":"/ Applies the reflection to the rows of `lhs`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/reflection.rs","byte_start":1075888,"byte_end":1075936,"line_start":78,"line_end":78,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":10325},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/reflection.rs","byte_start":1076540,"byte_end":1076562,"line_start":99,"line_end":99,"column_start":12,"column_end":34},"name":"reflect_rows_with_sign","qualname":"<Reflection<N, D, S>>::reflect_rows_with_sign","value":"pub fn reflect_rows_with_sign<R2: Dim, C2: Dim, S2,\n                              S3>(&Self, &mut Matrix<N, R2, C2, S2>,\n                                  &mut Vector<N, R2, S3>, N) where\nS2: StorageMut<N, R2, C2>, S3: StorageMut<N, R2>,\nShapeConstraint: DimEq<C2, D> + AreMultipliable<R2, C2, D, U1>","parent":null,"children":[],"decl_id":null,"docs":" Applies the reflection to the rows of `lhs`.\n","sig":null,"attributes":[{"value":"/ Applies the reflection to the rows of `lhs`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/reflection.rs","byte_start":1076480,"byte_end":1076528,"line_start":98,"line_end":98,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":10376},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1077654,"byte_end":1077667,"line_start":20,"line_end":20,"column_start":12,"column_end":25},"name":"Orthographic3","qualname":"::geometry::orthographic::Orthographic3","value":"Orthographic3 {  }","parent":null,"children":[{"krate":0,"index":10378}],"decl_id":null,"docs":" A 3D orthographic projection stored as a homogeneous 4x4 matrix.\n","sig":null,"attributes":[{"value":"/ A 3D orthographic projection stored as a homogeneous 4x4 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1077574,"byte_end":1077642,"line_start":19,"line_end":19,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":10392},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1081432,"byte_end":1081435,"line_start":112,"line_end":112,"column_start":12,"column_end":15},"name":"new","qualname":"<Orthographic3<N>>::new","value":"pub fn new(N, N, N, N, N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new orthographic projection matrix.","sig":null,"attributes":[{"value":"/ Creates a new orthographic projection matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1078877,"byte_end":1078926,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1078931,"byte_end":1078934,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ This follows the OpenGL convention, so this will flip the `z` axis.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1078939,"byte_end":1079010,"line_start":71,"line_end":71,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1079015,"byte_end":1079018,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1079023,"byte_end":1079036,"line_start":73,"line_end":73,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1079041,"byte_end":1079048,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1079053,"byte_end":1079092,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Point3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1079097,"byte_end":1079141,"line_start":76,"line_end":76,"column_start":5,"column_end":49}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1079146,"byte_end":1079215,"line_start":77,"line_end":77,"column_start":5,"column_end":74}},{"value":"/ // Check this projection actually transforms the view cuboid into the double-unit cube.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1079220,"byte_end":1079311,"line_start":78,"line_end":78,"column_start":5,"column_end":96}},{"value":"/ // See https://www.nalgebra.org/projections/#orthographic-projection for more details.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1079316,"byte_end":1079406,"line_start":79,"line_end":79,"column_start":5,"column_end":95}},{"value":"/ let p1 = Point3::new(1.0, 2.0, -0.1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1079411,"byte_end":1079452,"line_start":80,"line_end":80,"column_start":5,"column_end":46}},{"value":"/ let p2 = Point3::new(1.0, 2.0, -1000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1079457,"byte_end":1079501,"line_start":81,"line_end":81,"column_start":5,"column_end":49}},{"value":"/ let p3 = Point3::new(1.0, 20.0, -0.1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1079506,"byte_end":1079548,"line_start":82,"line_end":82,"column_start":5,"column_end":47}},{"value":"/ let p4 = Point3::new(1.0, 20.0, -1000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1079553,"byte_end":1079598,"line_start":83,"line_end":83,"column_start":5,"column_end":50}},{"value":"/ let p5 = Point3::new(10.0, 2.0, -0.1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1079603,"byte_end":1079645,"line_start":84,"line_end":84,"column_start":5,"column_end":47}},{"value":"/ let p6 = Point3::new(10.0, 2.0, -1000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1079650,"byte_end":1079695,"line_start":85,"line_end":85,"column_start":5,"column_end":50}},{"value":"/ let p7 = Point3::new(10.0, 20.0, -0.1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1079700,"byte_end":1079743,"line_start":86,"line_end":86,"column_start":5,"column_end":48}},{"value":"/ let p8 = Point3::new(10.0, 20.0, -1000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1079748,"byte_end":1079794,"line_start":87,"line_end":87,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1079799,"byte_end":1079802,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(proj.project_point(&p1), Point3::new(-1.0, -1.0, -1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1079807,"byte_end":1079887,"line_start":89,"line_end":89,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p2), Point3::new(-1.0, -1.0,  1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1079892,"byte_end":1079972,"line_start":90,"line_end":90,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p3), Point3::new(-1.0,  1.0, -1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1079977,"byte_end":1080057,"line_start":91,"line_end":91,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p4), Point3::new(-1.0,  1.0,  1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1080062,"byte_end":1080142,"line_start":92,"line_end":92,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p5), Point3::new( 1.0, -1.0, -1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1080147,"byte_end":1080227,"line_start":93,"line_end":93,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p6), Point3::new( 1.0, -1.0,  1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1080232,"byte_end":1080312,"line_start":94,"line_end":94,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p7), Point3::new( 1.0,  1.0, -1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1080317,"byte_end":1080397,"line_start":95,"line_end":95,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p8), Point3::new( 1.0,  1.0,  1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1080402,"byte_end":1080482,"line_start":96,"line_end":96,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1080487,"byte_end":1080490,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ // This also works with flipped axis. In other words, we allow that","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1080495,"byte_end":1080566,"line_start":98,"line_end":98,"column_start":5,"column_end":76}},{"value":"/ // `left > right`, `bottom > top`, and/or `znear > zfar`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1080571,"byte_end":1080632,"line_start":99,"line_end":99,"column_start":5,"column_end":66}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1080637,"byte_end":1080706,"line_start":100,"line_end":100,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1080711,"byte_end":1080714,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(proj.project_point(&p1), Point3::new( 1.0,  1.0,  1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1080719,"byte_end":1080799,"line_start":102,"line_end":102,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p2), Point3::new( 1.0,  1.0, -1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1080804,"byte_end":1080884,"line_start":103,"line_end":103,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p3), Point3::new( 1.0, -1.0,  1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1080889,"byte_end":1080969,"line_start":104,"line_end":104,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p4), Point3::new( 1.0, -1.0, -1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1080974,"byte_end":1081054,"line_start":105,"line_end":105,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p5), Point3::new(-1.0,  1.0,  1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1081059,"byte_end":1081139,"line_start":106,"line_end":106,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p6), Point3::new(-1.0,  1.0, -1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1081144,"byte_end":1081224,"line_start":107,"line_end":107,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p7), Point3::new(-1.0, -1.0,  1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1081229,"byte_end":1081309,"line_start":108,"line_end":108,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p8), Point3::new(-1.0, -1.0, -1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1081314,"byte_end":1081394,"line_start":109,"line_end":109,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1081399,"byte_end":1081406,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1081411,"byte_end":1081420,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10393},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1082522,"byte_end":1082543,"line_start":141,"line_end":141,"column_start":12,"column_end":33},"name":"from_matrix_unchecked","qualname":"<Orthographic3<N>>::from_matrix_unchecked","value":"pub fn from_matrix_unchecked(Matrix4<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given matrix to interpret it as a 3D orthographic matrix.","sig":null,"attributes":[{"value":"/ Wraps the given matrix to interpret it as a 3D orthographic matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1081769,"byte_end":1081840,"line_start":123,"line_end":123,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1081845,"byte_end":1081848,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ It is not checked whether or not the given matrix actually represents an orthographic","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1081853,"byte_end":1081942,"line_start":125,"line_end":125,"column_start":5,"column_end":94}},{"value":"/ projection.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1081947,"byte_end":1081962,"line_start":126,"line_end":126,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1081967,"byte_end":1081970,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1081975,"byte_end":1081988,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1081993,"byte_end":1082000,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Orthographic3, Point3, Matrix4};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1082005,"byte_end":1082058,"line_start":130,"line_end":130,"column_start":5,"column_end":58}},{"value":"/ let mat = Matrix4::new(","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1082063,"byte_end":1082090,"line_start":131,"line_end":131,"column_start":5,"column_end":32}},{"value":"/     2.0 / 9.0, 0.0,        0.0,         -11.0 / 9.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1082095,"byte_end":1082151,"line_start":132,"line_end":132,"column_start":5,"column_end":61}},{"value":"/     0.0,       2.0 / 18.0, 0.0,         -22.0 / 18.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1082156,"byte_end":1082213,"line_start":133,"line_end":133,"column_start":5,"column_end":62}},{"value":"/     0.0,       0.0,       -2.0 / 999.9, -1000.1 / 999.9,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1082218,"byte_end":1082278,"line_start":134,"line_end":134,"column_start":5,"column_end":65}},{"value":"/     0.0,       0.0,        0.0,         1.0","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1082283,"byte_end":1082330,"line_start":135,"line_end":135,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1082335,"byte_end":1082341,"line_start":136,"line_end":136,"column_start":5,"column_end":11}},{"value":"/ let proj = Orthographic3::from_matrix_unchecked(mat);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1082346,"byte_end":1082403,"line_start":137,"line_end":137,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(proj, Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1082408,"byte_end":1082484,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1082489,"byte_end":1082496,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1082501,"byte_end":1082510,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10394},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1082736,"byte_end":1082744,"line_start":147,"line_end":147,"column_start":12,"column_end":20},"name":"from_fov","qualname":"<Orthographic3<N>>::from_fov","value":"pub fn from_fov(N, N, N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new orthographic projection matrix from an aspect ratio and the vertical field of view.\n","sig":null,"attributes":[{"value":"/ Creates a new orthographic projection matrix from an aspect ratio and the vertical field of view.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1082609,"byte_end":1082710,"line_start":145,"line_end":145,"column_start":5,"column_end":106}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1082715,"byte_end":1082724,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10395},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1084121,"byte_end":1084128,"line_start":189,"line_end":189,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Orthographic3<N>>::inverse","value":"pub fn inverse(&Self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the inverse of the underlying homogeneous matrix.","sig":null,"attributes":[{"value":"/ Retrieves the inverse of the underlying homogeneous matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1083352,"byte_end":1083415,"line_start":171,"line_end":171,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1083420,"byte_end":1083423,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1083428,"byte_end":1083441,"line_start":173,"line_end":173,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1083446,"byte_end":1083453,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1083458,"byte_end":1083497,"line_start":175,"line_end":175,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Point3, Matrix4};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1083502,"byte_end":1083555,"line_start":176,"line_end":176,"column_start":5,"column_end":58}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1083560,"byte_end":1083629,"line_start":177,"line_end":177,"column_start":5,"column_end":74}},{"value":"/ let inv = proj.inverse();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1083634,"byte_end":1083663,"line_start":178,"line_end":178,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1083668,"byte_end":1083671,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(inv * proj.as_matrix(), Matrix4::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1083676,"byte_end":1083745,"line_start":180,"line_end":180,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.as_matrix() * inv, Matrix4::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1083750,"byte_end":1083819,"line_start":181,"line_end":181,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1083824,"byte_end":1083827,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1083832,"byte_end":1083901,"line_start":183,"line_end":183,"column_start":5,"column_end":74}},{"value":"/ let inv = proj.inverse();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1083906,"byte_end":1083935,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(inv * proj.as_matrix(), Matrix4::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1083940,"byte_end":1084009,"line_start":185,"line_end":185,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.as_matrix() * inv, Matrix4::identity());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1084014,"byte_end":1084083,"line_start":186,"line_end":186,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1084088,"byte_end":1084095,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1084100,"byte_end":1084109,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10396},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1085240,"byte_end":1085254,"line_start":222,"line_end":222,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Orthographic3<N>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Computes the corresponding homogeneous matrix.","sig":null,"attributes":[{"value":"/ Computes the corresponding homogeneous matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1084641,"byte_end":1084691,"line_start":207,"line_end":207,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1084696,"byte_end":1084699,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1084704,"byte_end":1084717,"line_start":209,"line_end":209,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1084722,"byte_end":1084729,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Orthographic3, Point3, Matrix4};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1084734,"byte_end":1084787,"line_start":211,"line_end":211,"column_start":5,"column_end":58}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1084792,"byte_end":1084861,"line_start":212,"line_end":212,"column_start":5,"column_end":74}},{"value":"/ let expected = Matrix4::new(","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1084866,"byte_end":1084898,"line_start":213,"line_end":213,"column_start":5,"column_end":37}},{"value":"/     2.0 / 9.0, 0.0,        0.0,         -11.0 / 9.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1084903,"byte_end":1084959,"line_start":214,"line_end":214,"column_start":5,"column_end":61}},{"value":"/     0.0,       2.0 / 18.0, 0.0,         -22.0 / 18.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1084964,"byte_end":1085021,"line_start":215,"line_end":215,"column_start":5,"column_end":62}},{"value":"/     0.0,       0.0,       -2.0 / 999.9, -1000.1 / 999.9,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1085026,"byte_end":1085086,"line_start":216,"line_end":216,"column_start":5,"column_end":65}},{"value":"/     0.0,       0.0,        0.0,         1.0","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1085091,"byte_end":1085138,"line_start":217,"line_end":217,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1085143,"byte_end":1085149,"line_start":218,"line_end":218,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(proj.to_homogeneous(), expected);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1085154,"byte_end":1085202,"line_start":219,"line_end":219,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1085207,"byte_end":1085214,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1085219,"byte_end":1085228,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10397},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1085922,"byte_end":1085931,"line_start":241,"line_end":241,"column_start":12,"column_end":21},"name":"as_matrix","qualname":"<Orthographic3<N>>::as_matrix","value":"pub fn as_matrix(&Self) -> &Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" A reference to the underlying homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ A reference to the underlying homogeneous transformation matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1085309,"byte_end":1085377,"line_start":226,"line_end":226,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1085382,"byte_end":1085385,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1085390,"byte_end":1085403,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1085408,"byte_end":1085415,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Orthographic3, Point3, Matrix4};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1085420,"byte_end":1085473,"line_start":230,"line_end":230,"column_start":5,"column_end":58}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1085478,"byte_end":1085547,"line_start":231,"line_end":231,"column_start":5,"column_end":74}},{"value":"/ let expected = Matrix4::new(","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1085552,"byte_end":1085584,"line_start":232,"line_end":232,"column_start":5,"column_end":37}},{"value":"/     2.0 / 9.0, 0.0,        0.0,         -11.0 / 9.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1085589,"byte_end":1085645,"line_start":233,"line_end":233,"column_start":5,"column_end":61}},{"value":"/     0.0,       2.0 / 18.0, 0.0,         -22.0 / 18.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1085650,"byte_end":1085707,"line_start":234,"line_end":234,"column_start":5,"column_end":62}},{"value":"/     0.0,       0.0,       -2.0 / 999.9, -1000.1 / 999.9,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1085712,"byte_end":1085772,"line_start":235,"line_end":235,"column_start":5,"column_end":65}},{"value":"/     0.0,       0.0,        0.0,         1.0","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1085777,"byte_end":1085824,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1085829,"byte_end":1085835,"line_start":237,"line_end":237,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(*proj.as_matrix(), expected);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1085840,"byte_end":1085884,"line_start":238,"line_end":238,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1085889,"byte_end":1085896,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1085901,"byte_end":1085910,"line_start":240,"line_end":240,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10398},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1086322,"byte_end":1086335,"line_start":254,"line_end":254,"column_start":12,"column_end":25},"name":"as_projective","qualname":"<Orthographic3<N>>::as_projective","value":"pub fn as_projective(&Self) -> &Projective3<N>","parent":null,"children":[],"decl_id":null,"docs":" A reference to this transformation seen as a `Projective3`.","sig":null,"attributes":[{"value":"/ A reference to this transformation seen as a `Projective3`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1085988,"byte_end":1086051,"line_start":245,"line_end":245,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1086056,"byte_end":1086059,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1086064,"byte_end":1086077,"line_start":247,"line_end":247,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1086082,"byte_end":1086089,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1086094,"byte_end":1086128,"line_start":249,"line_end":249,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1086133,"byte_end":1086202,"line_start":250,"line_end":250,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(proj.as_projective().to_homogeneous(), proj.to_homogeneous());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1086207,"byte_end":1086284,"line_start":251,"line_end":251,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1086289,"byte_end":1086296,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1086301,"byte_end":1086310,"line_start":253,"line_end":253,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10399},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1086734,"byte_end":1086747,"line_start":267,"line_end":267,"column_start":12,"column_end":25},"name":"to_projective","qualname":"<Orthographic3<N>>::to_projective","value":"pub fn to_projective(&Self) -> Projective3<N>","parent":null,"children":[],"decl_id":null,"docs":" This transformation seen as a `Projective3`.","sig":null,"attributes":[{"value":"/ This transformation seen as a `Projective3`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1086415,"byte_end":1086463,"line_start":258,"line_end":258,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1086468,"byte_end":1086471,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1086476,"byte_end":1086489,"line_start":260,"line_end":260,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1086494,"byte_end":1086501,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1086506,"byte_end":1086540,"line_start":262,"line_end":262,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1086545,"byte_end":1086614,"line_start":263,"line_end":263,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(proj.to_projective().to_homogeneous(), proj.to_homogeneous());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1086619,"byte_end":1086696,"line_start":264,"line_end":264,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1086701,"byte_end":1086708,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1086713,"byte_end":1086722,"line_start":266,"line_end":266,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10400},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1087479,"byte_end":1087489,"line_start":287,"line_end":287,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Orthographic3<N>>::into_inner","value":"pub fn into_inner(Self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying homogeneous matrix.","sig":null,"attributes":[{"value":"/ Retrieves the underlying homogeneous matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1086842,"byte_end":1086890,"line_start":271,"line_end":271,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1086895,"byte_end":1086898,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1086903,"byte_end":1086916,"line_start":273,"line_end":273,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1086921,"byte_end":1086928,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1086933,"byte_end":1086972,"line_start":275,"line_end":275,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Point3, Matrix4};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1086977,"byte_end":1087030,"line_start":276,"line_end":276,"column_start":5,"column_end":58}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1087035,"byte_end":1087104,"line_start":277,"line_end":277,"column_start":5,"column_end":74}},{"value":"/ let expected = Matrix4::new(","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1087109,"byte_end":1087141,"line_start":278,"line_end":278,"column_start":5,"column_end":37}},{"value":"/     2.0 / 9.0, 0.0,        0.0,         -11.0 / 9.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1087146,"byte_end":1087202,"line_start":279,"line_end":279,"column_start":5,"column_end":61}},{"value":"/     0.0,       2.0 / 18.0, 0.0,         -22.0 / 18.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1087207,"byte_end":1087264,"line_start":280,"line_end":280,"column_start":5,"column_end":62}},{"value":"/     0.0,       0.0,       -2.0 / 999.9, -1000.1 / 999.9,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1087269,"byte_end":1087329,"line_start":281,"line_end":281,"column_start":5,"column_end":65}},{"value":"/     0.0,       0.0,        0.0,         1.0","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1087334,"byte_end":1087381,"line_start":282,"line_end":282,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1087386,"byte_end":1087392,"line_start":283,"line_end":283,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(proj.into_inner(), expected);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1087397,"byte_end":1087441,"line_start":284,"line_end":284,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1087446,"byte_end":1087453,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1087458,"byte_end":1087467,"line_start":286,"line_end":286,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10401},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1087734,"byte_end":1087740,"line_start":295,"line_end":295,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Orthographic3<N>>::unwrap","value":"pub fn unwrap(Self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying homogeneous matrix.\n Deprecated: Use [Orthographic3::into_inner] instead.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying homogeneous matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1087543,"byte_end":1087591,"line_start":291,"line_end":291,"column_start":5,"column_end":53}},{"value":"/ Deprecated: Use [Orthographic3::into_inner] instead.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1087596,"byte_end":1087652,"line_start":292,"line_end":292,"column_start":5,"column_end":61}},{"value":"deprecated(note = \"use `.into_inner()` instead\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1087657,"byte_end":1087708,"line_start":293,"line_end":293,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1087713,"byte_end":1087722,"line_start":294,"line_end":294,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10402},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1088261,"byte_end":1088265,"line_start":311,"line_end":311,"column_start":12,"column_end":16},"name":"left","qualname":"<Orthographic3<N>>::left","value":"pub fn left(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The left offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The left offset of the view cuboid.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1087794,"byte_end":1087833,"line_start":299,"line_end":299,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1087838,"byte_end":1087841,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1087846,"byte_end":1087853,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1087858,"byte_end":1087897,"line_start":302,"line_end":302,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1087902,"byte_end":1087936,"line_start":303,"line_end":303,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1087941,"byte_end":1088010,"line_start":304,"line_end":304,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.left(), 1.0, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1088015,"byte_end":1088075,"line_start":305,"line_end":305,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1088080,"byte_end":1088083,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1088088,"byte_end":1088157,"line_start":307,"line_end":307,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.left(), 10.0, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1088162,"byte_end":1088223,"line_start":308,"line_end":308,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1088228,"byte_end":1088235,"line_start":309,"line_end":309,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1088240,"byte_end":1088249,"line_start":310,"line_end":310,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10403},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1088825,"byte_end":1088830,"line_start":327,"line_end":327,"column_start":12,"column_end":17},"name":"right","qualname":"<Orthographic3<N>>::right","value":"pub fn right(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The right offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The right offset of the view cuboid.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1088355,"byte_end":1088395,"line_start":315,"line_end":315,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1088400,"byte_end":1088403,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1088408,"byte_end":1088415,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1088420,"byte_end":1088459,"line_start":318,"line_end":318,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1088464,"byte_end":1088498,"line_start":319,"line_end":319,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1088503,"byte_end":1088572,"line_start":320,"line_end":320,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.right(), 10.0, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1088577,"byte_end":1088639,"line_start":321,"line_end":321,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1088644,"byte_end":1088647,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1088652,"byte_end":1088721,"line_start":323,"line_end":323,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.right(), 1.0, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1088726,"byte_end":1088787,"line_start":324,"line_end":324,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1088792,"byte_end":1088799,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1088804,"byte_end":1088813,"line_start":326,"line_end":326,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10404},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1089392,"byte_end":1089398,"line_start":343,"line_end":343,"column_start":12,"column_end":18},"name":"bottom","qualname":"<Orthographic3<N>>::bottom","value":"pub fn bottom(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The bottom offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The bottom offset of the view cuboid.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1088919,"byte_end":1088960,"line_start":331,"line_end":331,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1088965,"byte_end":1088968,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1088973,"byte_end":1088980,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1088985,"byte_end":1089024,"line_start":334,"line_end":334,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1089029,"byte_end":1089063,"line_start":335,"line_end":335,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1089068,"byte_end":1089137,"line_start":336,"line_end":336,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.bottom(), 2.0, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1089142,"byte_end":1089204,"line_start":337,"line_end":337,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1089209,"byte_end":1089212,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1089217,"byte_end":1089286,"line_start":339,"line_end":339,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.bottom(), 20.0, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1089291,"byte_end":1089354,"line_start":340,"line_end":340,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1089359,"byte_end":1089366,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1089371,"byte_end":1089380,"line_start":342,"line_end":342,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10405},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1089952,"byte_end":1089955,"line_start":359,"line_end":359,"column_start":12,"column_end":15},"name":"top","qualname":"<Orthographic3<N>>::top","value":"pub fn top(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The top offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The top offset of the view cuboid.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1089488,"byte_end":1089526,"line_start":347,"line_end":347,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1089531,"byte_end":1089534,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1089539,"byte_end":1089546,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1089551,"byte_end":1089590,"line_start":350,"line_end":350,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1089595,"byte_end":1089629,"line_start":351,"line_end":351,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1089634,"byte_end":1089703,"line_start":352,"line_end":352,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.top(), 20.0, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1089708,"byte_end":1089768,"line_start":353,"line_end":353,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1089773,"byte_end":1089776,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1089781,"byte_end":1089850,"line_start":355,"line_end":355,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.top(), 2.0, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1089855,"byte_end":1089914,"line_start":356,"line_end":356,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1089919,"byte_end":1089926,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1089931,"byte_end":1089940,"line_start":358,"line_end":358,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10406},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1090521,"byte_end":1090526,"line_start":375,"line_end":375,"column_start":12,"column_end":17},"name":"znear","qualname":"<Orthographic3<N>>::znear","value":"pub fn znear(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The near plane offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The near plane offset of the view cuboid.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1090044,"byte_end":1090089,"line_start":363,"line_end":363,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1090094,"byte_end":1090097,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1090102,"byte_end":1090109,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1090114,"byte_end":1090153,"line_start":366,"line_end":366,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1090158,"byte_end":1090192,"line_start":367,"line_end":367,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1090197,"byte_end":1090266,"line_start":368,"line_end":368,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.znear(), 0.1, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1090271,"byte_end":1090332,"line_start":369,"line_end":369,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1090337,"byte_end":1090340,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1090345,"byte_end":1090414,"line_start":371,"line_end":371,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.znear(), 1000.0, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1090419,"byte_end":1090483,"line_start":372,"line_end":372,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1090488,"byte_end":1090495,"line_start":373,"line_end":373,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1090500,"byte_end":1090509,"line_start":374,"line_end":374,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10407},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1091089,"byte_end":1091093,"line_start":391,"line_end":391,"column_start":12,"column_end":16},"name":"zfar","qualname":"<Orthographic3<N>>::zfar","value":"pub fn zfar(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The far plane offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The far plane offset of the view cuboid.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1090615,"byte_end":1090659,"line_start":379,"line_end":379,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1090664,"byte_end":1090667,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1090672,"byte_end":1090679,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1090684,"byte_end":1090723,"line_start":382,"line_end":382,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1090728,"byte_end":1090762,"line_start":383,"line_end":383,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1090767,"byte_end":1090836,"line_start":384,"line_end":384,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.zfar(), 1000.0, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1090841,"byte_end":1090904,"line_start":385,"line_end":385,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1090909,"byte_end":1090912,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1090917,"byte_end":1090986,"line_start":387,"line_end":387,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.zfar(), 0.1, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1090991,"byte_end":1091051,"line_start":388,"line_end":388,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1091056,"byte_end":1091063,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1091068,"byte_end":1091077,"line_start":390,"line_end":390,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10408},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1092640,"byte_end":1092653,"line_start":423,"line_end":423,"column_start":12,"column_end":25},"name":"project_point","qualname":"<Orthographic3<N>>::project_point","value":"pub fn project_point(&Self, &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Projects a point. Faster than matrix multiplication.","sig":null,"attributes":[{"value":"/ Projects a point. Faster than matrix multiplication.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1091257,"byte_end":1091313,"line_start":396,"line_end":396,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1091318,"byte_end":1091321,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1091326,"byte_end":1091339,"line_start":398,"line_end":398,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1091344,"byte_end":1091351,"line_start":399,"line_end":399,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1091356,"byte_end":1091395,"line_start":400,"line_end":400,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Point3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1091400,"byte_end":1091444,"line_start":401,"line_end":401,"column_start":5,"column_end":49}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1091449,"byte_end":1091518,"line_start":402,"line_end":402,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1091523,"byte_end":1091526,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ let p1 = Point3::new(1.0, 2.0, -0.1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1091531,"byte_end":1091572,"line_start":404,"line_end":404,"column_start":5,"column_end":46}},{"value":"/ let p2 = Point3::new(1.0, 2.0, -1000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1091577,"byte_end":1091621,"line_start":405,"line_end":405,"column_start":5,"column_end":49}},{"value":"/ let p3 = Point3::new(1.0, 20.0, -0.1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1091626,"byte_end":1091668,"line_start":406,"line_end":406,"column_start":5,"column_end":47}},{"value":"/ let p4 = Point3::new(1.0, 20.0, -1000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1091673,"byte_end":1091718,"line_start":407,"line_end":407,"column_start":5,"column_end":50}},{"value":"/ let p5 = Point3::new(10.0, 2.0, -0.1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1091723,"byte_end":1091765,"line_start":408,"line_end":408,"column_start":5,"column_end":47}},{"value":"/ let p6 = Point3::new(10.0, 2.0, -1000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1091770,"byte_end":1091815,"line_start":409,"line_end":409,"column_start":5,"column_end":50}},{"value":"/ let p7 = Point3::new(10.0, 20.0, -0.1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1091820,"byte_end":1091863,"line_start":410,"line_end":410,"column_start":5,"column_end":48}},{"value":"/ let p8 = Point3::new(10.0, 20.0, -1000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1091868,"byte_end":1091914,"line_start":411,"line_end":411,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1091919,"byte_end":1091922,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(proj.project_point(&p1), Point3::new(-1.0, -1.0, -1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1091927,"byte_end":1092007,"line_start":413,"line_end":413,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p2), Point3::new(-1.0, -1.0,  1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1092012,"byte_end":1092092,"line_start":414,"line_end":414,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p3), Point3::new(-1.0,  1.0, -1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1092097,"byte_end":1092177,"line_start":415,"line_end":415,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p4), Point3::new(-1.0,  1.0,  1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1092182,"byte_end":1092262,"line_start":416,"line_end":416,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p5), Point3::new( 1.0, -1.0, -1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1092267,"byte_end":1092347,"line_start":417,"line_end":417,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p6), Point3::new( 1.0, -1.0,  1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1092352,"byte_end":1092432,"line_start":418,"line_end":418,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p7), Point3::new( 1.0,  1.0, -1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1092437,"byte_end":1092517,"line_start":419,"line_end":419,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p8), Point3::new( 1.0,  1.0,  1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1092522,"byte_end":1092602,"line_start":420,"line_end":420,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1092607,"byte_end":1092614,"line_start":421,"line_end":421,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1092619,"byte_end":1092628,"line_start":422,"line_end":422,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10409},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1094491,"byte_end":1094506,"line_start":458,"line_end":458,"column_start":12,"column_end":27},"name":"unproject_point","qualname":"<Orthographic3<N>>::unproject_point","value":"pub fn unproject_point(&Self, &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Un-projects a point. Faster than multiplication by the underlying matrix inverse.","sig":null,"attributes":[{"value":"/ Un-projects a point. Faster than multiplication by the underlying matrix inverse.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1092919,"byte_end":1093004,"line_start":431,"line_end":431,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1093009,"byte_end":1093012,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1093017,"byte_end":1093030,"line_start":433,"line_end":433,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1093035,"byte_end":1093042,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1093047,"byte_end":1093086,"line_start":435,"line_end":435,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Point3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1093091,"byte_end":1093135,"line_start":436,"line_end":436,"column_start":5,"column_end":49}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1093140,"byte_end":1093209,"line_start":437,"line_end":437,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1093214,"byte_end":1093217,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let p1 = Point3::new(-1.0, -1.0, -1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1093222,"byte_end":1093265,"line_start":439,"line_end":439,"column_start":5,"column_end":48}},{"value":"/ let p2 = Point3::new(-1.0, -1.0,  1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1093270,"byte_end":1093313,"line_start":440,"line_end":440,"column_start":5,"column_end":48}},{"value":"/ let p3 = Point3::new(-1.0,  1.0, -1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1093318,"byte_end":1093361,"line_start":441,"line_end":441,"column_start":5,"column_end":48}},{"value":"/ let p4 = Point3::new(-1.0,  1.0,  1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1093366,"byte_end":1093409,"line_start":442,"line_end":442,"column_start":5,"column_end":48}},{"value":"/ let p5 = Point3::new( 1.0, -1.0, -1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1093414,"byte_end":1093457,"line_start":443,"line_end":443,"column_start":5,"column_end":48}},{"value":"/ let p6 = Point3::new( 1.0, -1.0,  1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1093462,"byte_end":1093505,"line_start":444,"line_end":444,"column_start":5,"column_end":48}},{"value":"/ let p7 = Point3::new( 1.0,  1.0, -1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1093510,"byte_end":1093553,"line_start":445,"line_end":445,"column_start":5,"column_end":48}},{"value":"/ let p8 = Point3::new( 1.0,  1.0,  1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1093558,"byte_end":1093601,"line_start":446,"line_end":446,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1093606,"byte_end":1093609,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p1), Point3::new(1.0, 2.0, -0.1), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1093614,"byte_end":1093712,"line_start":448,"line_end":448,"column_start":5,"column_end":103}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p2), Point3::new(1.0, 2.0, -1000.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1093717,"byte_end":1093818,"line_start":449,"line_end":449,"column_start":5,"column_end":106}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p3), Point3::new(1.0, 20.0, -0.1), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1093823,"byte_end":1093922,"line_start":450,"line_end":450,"column_start":5,"column_end":104}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p4), Point3::new(1.0, 20.0, -1000.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1093927,"byte_end":1094029,"line_start":451,"line_end":451,"column_start":5,"column_end":107}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p5), Point3::new(10.0, 2.0, -0.1), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1094034,"byte_end":1094133,"line_start":452,"line_end":452,"column_start":5,"column_end":104}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p6), Point3::new(10.0, 2.0, -1000.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1094138,"byte_end":1094240,"line_start":453,"line_end":453,"column_start":5,"column_end":107}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p7), Point3::new(10.0, 20.0, -0.1), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1094245,"byte_end":1094345,"line_start":454,"line_end":454,"column_start":5,"column_end":105}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p8), Point3::new(10.0, 20.0, -1000.0), epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1094350,"byte_end":1094453,"line_start":455,"line_end":455,"column_start":5,"column_end":108}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1094458,"byte_end":1094465,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1094470,"byte_end":1094479,"line_start":457,"line_end":457,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10410},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1095593,"byte_end":1095607,"line_start":486,"line_end":486,"column_start":12,"column_end":26},"name":"project_vector","qualname":"<Orthographic3<N>>::project_vector","value":"pub fn project_vector<SB>(&Self, &Vector<N, U3, SB>) -> Vector3<N> where\nSB: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Projects a vector. Faster than matrix multiplication.","sig":null,"attributes":[{"value":"/ Projects a vector. Faster than matrix multiplication.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1094852,"byte_end":1094909,"line_start":467,"line_end":467,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1094914,"byte_end":1094917,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ Vectors are not affected by the translation part of the projection.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1094922,"byte_end":1094993,"line_start":469,"line_end":469,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1094998,"byte_end":1095001,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1095006,"byte_end":1095019,"line_start":471,"line_end":471,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1095024,"byte_end":1095031,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1095036,"byte_end":1095075,"line_start":473,"line_end":473,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Vector3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1095080,"byte_end":1095125,"line_start":474,"line_end":474,"column_start":5,"column_end":50}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1095130,"byte_end":1095199,"line_start":475,"line_end":475,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1095204,"byte_end":1095207,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ let v1 = Vector3::x();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1095212,"byte_end":1095238,"line_start":477,"line_end":477,"column_start":5,"column_end":31}},{"value":"/ let v2 = Vector3::y();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1095243,"byte_end":1095269,"line_start":478,"line_end":478,"column_start":5,"column_end":31}},{"value":"/ let v3 = Vector3::z();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1095274,"byte_end":1095300,"line_start":479,"line_end":479,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1095305,"byte_end":1095308,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(proj.project_vector(&v1), Vector3::x() * 2.0 / 9.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1095313,"byte_end":1095389,"line_start":481,"line_end":481,"column_start":5,"column_end":81}},{"value":"/ assert_relative_eq!(proj.project_vector(&v2), Vector3::y() * 2.0 / 18.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1095394,"byte_end":1095471,"line_start":482,"line_end":482,"column_start":5,"column_end":82}},{"value":"/ assert_relative_eq!(proj.project_vector(&v3), Vector3::z() * -2.0 / 999.9);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1095476,"byte_end":1095555,"line_start":483,"line_end":483,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1095560,"byte_end":1095567,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1095572,"byte_end":1095581,"line_start":485,"line_end":485,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10412},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1096402,"byte_end":1096410,"line_start":511,"line_end":511,"column_start":12,"column_end":20},"name":"set_left","qualname":"<Orthographic3<N>>::set_left","value":"pub fn set_left(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets the left offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the left offset of the view cuboid.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1095863,"byte_end":1095907,"line_start":497,"line_end":497,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1095912,"byte_end":1095915,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1095920,"byte_end":1095927,"line_start":499,"line_end":499,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1095932,"byte_end":1095971,"line_start":500,"line_end":500,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1095976,"byte_end":1096010,"line_start":501,"line_end":501,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1096015,"byte_end":1096088,"line_start":502,"line_end":502,"column_start":5,"column_end":78}},{"value":"/ proj.set_left(2.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1096093,"byte_end":1096116,"line_start":503,"line_end":503,"column_start":5,"column_end":28}},{"value":"/ assert_relative_eq!(proj.left(), 2.0, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1096121,"byte_end":1096181,"line_start":504,"line_end":504,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1096186,"byte_end":1096189,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a left offset greater than the current right offset.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1096194,"byte_end":1096269,"line_start":506,"line_end":506,"column_start":5,"column_end":80}},{"value":"/ proj.set_left(20.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1096274,"byte_end":1096298,"line_start":507,"line_end":507,"column_start":5,"column_end":29}},{"value":"/ assert_relative_eq!(proj.left(), 20.0, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1096303,"byte_end":1096364,"line_start":508,"line_end":508,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1096369,"byte_end":1096376,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1096381,"byte_end":1096390,"line_start":510,"line_end":510,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10413},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1097070,"byte_end":1097079,"line_start":530,"line_end":530,"column_start":12,"column_end":21},"name":"set_right","qualname":"<Orthographic3<N>>::set_right","value":"pub fn set_right(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets the right offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the right offset of the view cuboid.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1096524,"byte_end":1096569,"line_start":516,"line_end":516,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1096574,"byte_end":1096577,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1096582,"byte_end":1096589,"line_start":518,"line_end":518,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1096594,"byte_end":1096633,"line_start":519,"line_end":519,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1096638,"byte_end":1096672,"line_start":520,"line_end":520,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1096677,"byte_end":1096750,"line_start":521,"line_end":521,"column_start":5,"column_end":78}},{"value":"/ proj.set_right(15.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1096755,"byte_end":1096780,"line_start":522,"line_end":522,"column_start":5,"column_end":30}},{"value":"/ assert_relative_eq!(proj.right(), 15.0, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1096785,"byte_end":1096847,"line_start":523,"line_end":523,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1096852,"byte_end":1096855,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a right offset smaller than the current left offset.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1096860,"byte_end":1096935,"line_start":525,"line_end":525,"column_start":5,"column_end":80}},{"value":"/ proj.set_right(-3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1096940,"byte_end":1096965,"line_start":526,"line_end":526,"column_start":5,"column_end":30}},{"value":"/ assert_relative_eq!(proj.right(), -3.0, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1096970,"byte_end":1097032,"line_start":527,"line_end":527,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1097037,"byte_end":1097044,"line_start":528,"line_end":528,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1097049,"byte_end":1097058,"line_start":529,"line_end":529,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10414},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1097741,"byte_end":1097751,"line_start":549,"line_end":549,"column_start":12,"column_end":22},"name":"set_bottom","qualname":"<Orthographic3<N>>::set_bottom","value":"pub fn set_bottom(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets the bottom offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the bottom offset of the view cuboid.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1097192,"byte_end":1097238,"line_start":535,"line_end":535,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1097243,"byte_end":1097246,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1097251,"byte_end":1097258,"line_start":537,"line_end":537,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1097263,"byte_end":1097302,"line_start":538,"line_end":538,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1097307,"byte_end":1097341,"line_start":539,"line_end":539,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1097346,"byte_end":1097419,"line_start":540,"line_end":540,"column_start":5,"column_end":78}},{"value":"/ proj.set_bottom(8.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1097424,"byte_end":1097449,"line_start":541,"line_end":541,"column_start":5,"column_end":30}},{"value":"/ assert_relative_eq!(proj.bottom(), 8.0, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1097454,"byte_end":1097516,"line_start":542,"line_end":542,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1097521,"byte_end":1097524,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a bottom offset greater than the current top offset.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1097529,"byte_end":1097604,"line_start":544,"line_end":544,"column_start":5,"column_end":80}},{"value":"/ proj.set_bottom(50.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1097609,"byte_end":1097635,"line_start":545,"line_end":545,"column_start":5,"column_end":31}},{"value":"/ assert_relative_eq!(proj.bottom(), 50.0, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1097640,"byte_end":1097703,"line_start":546,"line_end":546,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1097708,"byte_end":1097715,"line_start":547,"line_end":547,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1097720,"byte_end":1097729,"line_start":548,"line_end":548,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10415},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1098399,"byte_end":1098406,"line_start":568,"line_end":568,"column_start":12,"column_end":19},"name":"set_top","qualname":"<Orthographic3<N>>::set_top","value":"pub fn set_top(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets the top offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the top offset of the view cuboid.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1097863,"byte_end":1097906,"line_start":554,"line_end":554,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1097911,"byte_end":1097914,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1097919,"byte_end":1097926,"line_start":556,"line_end":556,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1097931,"byte_end":1097970,"line_start":557,"line_end":557,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1097975,"byte_end":1098009,"line_start":558,"line_end":558,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1098014,"byte_end":1098087,"line_start":559,"line_end":559,"column_start":5,"column_end":78}},{"value":"/ proj.set_top(15.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1098092,"byte_end":1098115,"line_start":560,"line_end":560,"column_start":5,"column_end":28}},{"value":"/ assert_relative_eq!(proj.top(), 15.0, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1098120,"byte_end":1098180,"line_start":561,"line_end":561,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1098185,"byte_end":1098188,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a top offset smaller than the current bottom offset.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1098193,"byte_end":1098268,"line_start":563,"line_end":563,"column_start":5,"column_end":80}},{"value":"/ proj.set_top(-3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1098273,"byte_end":1098296,"line_start":564,"line_end":564,"column_start":5,"column_end":28}},{"value":"/ assert_relative_eq!(proj.top(), -3.0, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1098301,"byte_end":1098361,"line_start":565,"line_end":565,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1098366,"byte_end":1098373,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1098378,"byte_end":1098387,"line_start":567,"line_end":567,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10416},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1099060,"byte_end":1099069,"line_start":587,"line_end":587,"column_start":12,"column_end":21},"name":"set_znear","qualname":"<Orthographic3<N>>::set_znear","value":"pub fn set_znear(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets the near plane offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the near plane offset of the view cuboid.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1098521,"byte_end":1098571,"line_start":573,"line_end":573,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1098576,"byte_end":1098579,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1098584,"byte_end":1098591,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1098596,"byte_end":1098635,"line_start":576,"line_end":576,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1098640,"byte_end":1098674,"line_start":577,"line_end":577,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1098679,"byte_end":1098752,"line_start":578,"line_end":578,"column_start":5,"column_end":78}},{"value":"/ proj.set_znear(8.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1098757,"byte_end":1098781,"line_start":579,"line_end":579,"column_start":5,"column_end":29}},{"value":"/ assert_relative_eq!(proj.znear(), 8.0, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1098786,"byte_end":1098847,"line_start":580,"line_end":580,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1098852,"byte_end":1098855,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a znear greater than the current zfar.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1098860,"byte_end":1098921,"line_start":582,"line_end":582,"column_start":5,"column_end":66}},{"value":"/ proj.set_znear(5000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1098926,"byte_end":1098953,"line_start":583,"line_end":583,"column_start":5,"column_end":32}},{"value":"/ assert_relative_eq!(proj.znear(), 5000.0, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1098958,"byte_end":1099022,"line_start":584,"line_end":584,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1099027,"byte_end":1099034,"line_start":585,"line_end":585,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1099039,"byte_end":1099048,"line_start":586,"line_end":586,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10417},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1099714,"byte_end":1099722,"line_start":606,"line_end":606,"column_start":12,"column_end":20},"name":"set_zfar","qualname":"<Orthographic3<N>>::set_zfar","value":"pub fn set_zfar(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets the far plane offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the far plane offset of the view cuboid.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1099182,"byte_end":1099231,"line_start":592,"line_end":592,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1099236,"byte_end":1099239,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1099244,"byte_end":1099251,"line_start":594,"line_end":594,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1099256,"byte_end":1099295,"line_start":595,"line_end":595,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1099300,"byte_end":1099334,"line_start":596,"line_end":596,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1099339,"byte_end":1099412,"line_start":597,"line_end":597,"column_start":5,"column_end":78}},{"value":"/ proj.set_zfar(15.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1099417,"byte_end":1099441,"line_start":598,"line_end":598,"column_start":5,"column_end":29}},{"value":"/ assert_relative_eq!(proj.zfar(), 15.0, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1099446,"byte_end":1099507,"line_start":599,"line_end":599,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1099512,"byte_end":1099515,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a zfar smaller than the current znear.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1099520,"byte_end":1099581,"line_start":601,"line_end":601,"column_start":5,"column_end":66}},{"value":"/ proj.set_zfar(-3.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1099586,"byte_end":1099610,"line_start":602,"line_end":602,"column_start":5,"column_end":29}},{"value":"/ assert_relative_eq!(proj.zfar(), -3.0, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1099615,"byte_end":1099676,"line_start":603,"line_end":603,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1099681,"byte_end":1099688,"line_start":604,"line_end":604,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1099693,"byte_end":1099702,"line_start":605,"line_end":605,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10418},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1100516,"byte_end":1100534,"line_start":627,"line_end":627,"column_start":12,"column_end":30},"name":"set_left_and_right","qualname":"<Orthographic3<N>>::set_left_and_right","value":"pub fn set_left_and_right(&mut Self, N, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets the view cuboid offsets along the `x` axis.","sig":null,"attributes":[{"value":"/ Sets the view cuboid offsets along the `x` axis.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1099836,"byte_end":1099888,"line_start":611,"line_end":611,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1099893,"byte_end":1099896,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1099901,"byte_end":1099908,"line_start":613,"line_end":613,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1099913,"byte_end":1099952,"line_start":614,"line_end":614,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1099957,"byte_end":1099991,"line_start":615,"line_end":615,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1099996,"byte_end":1100069,"line_start":616,"line_end":616,"column_start":5,"column_end":78}},{"value":"/ proj.set_left_and_right(7.0, 70.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1100074,"byte_end":1100113,"line_start":617,"line_end":617,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(proj.left(), 7.0, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1100118,"byte_end":1100178,"line_start":618,"line_end":618,"column_start":5,"column_end":65}},{"value":"/ assert_relative_eq!(proj.right(), 70.0, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1100183,"byte_end":1100245,"line_start":619,"line_end":619,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1100250,"byte_end":1100253,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ // It is also OK to have `left > right`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1100258,"byte_end":1100302,"line_start":621,"line_end":621,"column_start":5,"column_end":49}},{"value":"/ proj.set_left_and_right(70.0, 7.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1100307,"byte_end":1100346,"line_start":622,"line_end":622,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(proj.left(), 70.0, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1100351,"byte_end":1100412,"line_start":623,"line_end":623,"column_start":5,"column_end":66}},{"value":"/ assert_relative_eq!(proj.right(), 7.0, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1100417,"byte_end":1100478,"line_start":624,"line_end":624,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1100483,"byte_end":1100490,"line_start":625,"line_end":625,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1100495,"byte_end":1100504,"line_start":626,"line_end":626,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10419},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1101522,"byte_end":1101540,"line_start":652,"line_end":652,"column_start":12,"column_end":30},"name":"set_bottom_and_top","qualname":"<Orthographic3<N>>::set_bottom_and_top","value":"pub fn set_bottom_and_top(&mut Self, N, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets the view cuboid offsets along the `y` axis.","sig":null,"attributes":[{"value":"/ Sets the view cuboid offsets along the `y` axis.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1100842,"byte_end":1100894,"line_start":636,"line_end":636,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1100899,"byte_end":1100902,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1100907,"byte_end":1100914,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1100919,"byte_end":1100958,"line_start":639,"line_end":639,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1100963,"byte_end":1100997,"line_start":640,"line_end":640,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1101002,"byte_end":1101075,"line_start":641,"line_end":641,"column_start":5,"column_end":78}},{"value":"/ proj.set_bottom_and_top(7.0, 70.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1101080,"byte_end":1101119,"line_start":642,"line_end":642,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(proj.bottom(), 7.0, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1101124,"byte_end":1101186,"line_start":643,"line_end":643,"column_start":5,"column_end":67}},{"value":"/ assert_relative_eq!(proj.top(), 70.0, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1101191,"byte_end":1101251,"line_start":644,"line_end":644,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1101256,"byte_end":1101259,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ // It is also OK to have `bottom > top`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1101264,"byte_end":1101308,"line_start":646,"line_end":646,"column_start":5,"column_end":49}},{"value":"/ proj.set_bottom_and_top(70.0, 7.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1101313,"byte_end":1101352,"line_start":647,"line_end":647,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(proj.bottom(), 70.0, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1101357,"byte_end":1101420,"line_start":648,"line_end":648,"column_start":5,"column_end":68}},{"value":"/ assert_relative_eq!(proj.top(), 7.0, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1101425,"byte_end":1101484,"line_start":649,"line_end":649,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1101489,"byte_end":1101496,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1101501,"byte_end":1101510,"line_start":651,"line_end":651,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10420},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1102545,"byte_end":1102563,"line_start":677,"line_end":677,"column_start":12,"column_end":30},"name":"set_znear_and_zfar","qualname":"<Orthographic3<N>>::set_znear_and_zfar","value":"pub fn set_znear_and_zfar(&mut Self, N, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets the near and far plane offsets of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the near and far plane offsets of the view cuboid.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1101848,"byte_end":1101907,"line_start":661,"line_end":661,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1101912,"byte_end":1101915,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1101920,"byte_end":1101927,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1101932,"byte_end":1101971,"line_start":664,"line_end":664,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1101976,"byte_end":1102010,"line_start":665,"line_end":665,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1102015,"byte_end":1102088,"line_start":666,"line_end":666,"column_start":5,"column_end":78}},{"value":"/ proj.set_znear_and_zfar(50.0, 5000.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1102093,"byte_end":1102135,"line_start":667,"line_end":667,"column_start":5,"column_end":47}},{"value":"/ assert_relative_eq!(proj.znear(), 50.0, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1102140,"byte_end":1102202,"line_start":668,"line_end":668,"column_start":5,"column_end":67}},{"value":"/ assert_relative_eq!(proj.zfar(), 5000.0, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1102207,"byte_end":1102270,"line_start":669,"line_end":669,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1102275,"byte_end":1102278,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ // It is also OK to have `znear > zfar`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1102283,"byte_end":1102327,"line_start":671,"line_end":671,"column_start":5,"column_end":49}},{"value":"/ proj.set_znear_and_zfar(5000.0, 0.5);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1102332,"byte_end":1102373,"line_start":672,"line_end":672,"column_start":5,"column_end":46}},{"value":"/ assert_relative_eq!(proj.znear(), 5000.0, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1102378,"byte_end":1102442,"line_start":673,"line_end":673,"column_start":5,"column_end":69}},{"value":"/ assert_relative_eq!(proj.zfar(), 0.5, epsilon = 1.0e-6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1102447,"byte_end":1102507,"line_start":674,"line_end":674,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1102512,"byte_end":1102519,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1102524,"byte_end":1102533,"line_start":676,"line_end":676,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":10480},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1104653,"byte_end":1104665,"line_start":21,"line_end":21,"column_start":12,"column_end":24},"name":"Perspective3","qualname":"::geometry::perspective::Perspective3","value":"Perspective3 {  }","parent":null,"children":[{"krate":0,"index":10482}],"decl_id":null,"docs":" A 3D perspective projection stored as a homogeneous 4x4 matrix.\n","sig":null,"attributes":[{"value":"/ A 3D perspective projection stored as a homogeneous 4x4 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1104574,"byte_end":1104641,"line_start":20,"line_end":20,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":10496},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1105974,"byte_end":1105977,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<Perspective3<N>>::new","value":"pub fn new(N, N, N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new perspective matrix from the aspect ratio, y field of view, and near/far planes.\n","sig":null,"attributes":[{"value":"/ Creates a new perspective matrix from the aspect ratio, y field of view, and near/far planes.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1105865,"byte_end":1105962,"line_start":70,"line_end":70,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":10497},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1106828,"byte_end":1106849,"line_start":99,"line_end":99,"column_start":12,"column_end":33},"name":"from_matrix_unchecked","qualname":"<Perspective3<N>>::from_matrix_unchecked","value":"pub fn from_matrix_unchecked(Matrix4<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given matrix to interpret it as a 3D perspective matrix.","sig":null,"attributes":[{"value":"/ Wraps the given matrix to interpret it as a 3D perspective matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1106612,"byte_end":1106682,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1106687,"byte_end":1106690,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ It is not checked whether or not the given matrix actually represents a perspective","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1106695,"byte_end":1106782,"line_start":96,"line_end":96,"column_start":5,"column_end":92}},{"value":"/ projection.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1106787,"byte_end":1106802,"line_start":97,"line_end":97,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1106807,"byte_end":1106816,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10498},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1107004,"byte_end":1107011,"line_start":105,"line_end":105,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Perspective3<N>>::inverse","value":"pub fn inverse(&Self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the inverse of the underlying homogeneous matrix.\n","sig":null,"attributes":[{"value":"/ Retrieves the inverse of the underlying homogeneous matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1106915,"byte_end":1106978,"line_start":103,"line_end":103,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1106983,"byte_end":1106992,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10499},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1107536,"byte_end":1107550,"line_start":124,"line_end":124,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Perspective3<N>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Computes the corresponding homogeneous matrix.\n","sig":null,"attributes":[{"value":"/ Computes the corresponding homogeneous matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1107460,"byte_end":1107510,"line_start":122,"line_end":122,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1107515,"byte_end":1107524,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10500},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1107713,"byte_end":1107722,"line_start":130,"line_end":130,"column_start":12,"column_end":21},"name":"as_matrix","qualname":"<Perspective3<N>>::as_matrix","value":"pub fn as_matrix(&Self) -> &Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" A reference to the underlying homogeneous transformation matrix.\n","sig":null,"attributes":[{"value":"/ A reference to the underlying homogeneous transformation matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1107619,"byte_end":1107687,"line_start":128,"line_end":128,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1107692,"byte_end":1107701,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10501},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1107868,"byte_end":1107881,"line_start":136,"line_end":136,"column_start":12,"column_end":25},"name":"as_projective","qualname":"<Perspective3<N>>::as_projective","value":"pub fn as_projective(&Self) -> &Projective3<N>","parent":null,"children":[],"decl_id":null,"docs":" A reference to this transformation seen as a `Projective3`.\n","sig":null,"attributes":[{"value":"/ A reference to this transformation seen as a `Projective3`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1107779,"byte_end":1107842,"line_start":134,"line_end":134,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1107847,"byte_end":1107856,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10502},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1108035,"byte_end":1108048,"line_start":142,"line_end":142,"column_start":12,"column_end":25},"name":"to_projective","qualname":"<Perspective3<N>>::to_projective","value":"pub fn to_projective(&Self) -> Projective3<N>","parent":null,"children":[],"decl_id":null,"docs":" This transformation seen as a `Projective3`.\n","sig":null,"attributes":[{"value":"/ This transformation seen as a `Projective3`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1107961,"byte_end":1108009,"line_start":140,"line_end":140,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1108014,"byte_end":1108023,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10503},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1108217,"byte_end":1108227,"line_start":148,"line_end":148,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Perspective3<N>>::into_inner","value":"pub fn into_inner(Self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying homogeneous matrix.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying homogeneous matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1108143,"byte_end":1108191,"line_start":146,"line_end":146,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1108196,"byte_end":1108205,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10504},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1108471,"byte_end":1108477,"line_start":156,"line_end":156,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Perspective3<N>>::unwrap","value":"pub fn unwrap(Self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying homogeneous matrix.\n Deprecated: Use [Perspective3::into_inner] instead.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying homogeneous matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1108281,"byte_end":1108329,"line_start":152,"line_end":152,"column_start":5,"column_end":53}},{"value":"/ Deprecated: Use [Perspective3::into_inner] instead.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1108334,"byte_end":1108389,"line_start":153,"line_end":153,"column_start":5,"column_end":60}},{"value":"deprecated(note = \"use `.into_inner()` instead\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1108394,"byte_end":1108445,"line_start":154,"line_end":154,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1108450,"byte_end":1108459,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10505},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1108620,"byte_end":1108626,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"aspect","qualname":"<Perspective3<N>>::aspect","value":"pub fn aspect(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Gets the `width / height` aspect ratio of the view frustum.\n","sig":null,"attributes":[{"value":"/ Gets the `width / height` aspect ratio of the view frustum.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1108531,"byte_end":1108594,"line_start":160,"line_end":160,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1108599,"byte_end":1108608,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10506},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1108777,"byte_end":1108781,"line_start":168,"line_end":168,"column_start":12,"column_end":16},"name":"fovy","qualname":"<Perspective3<N>>::fovy","value":"pub fn fovy(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Gets the y field of view of the view frustum.\n","sig":null,"attributes":[{"value":"/ Gets the y field of view of the view frustum.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1108702,"byte_end":1108751,"line_start":166,"line_end":166,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1108756,"byte_end":1108765,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10507},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1108954,"byte_end":1108959,"line_start":174,"line_end":174,"column_start":12,"column_end":17},"name":"znear","qualname":"<Perspective3<N>>::znear","value":"pub fn znear(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Gets the near plane offset of the view frustum.\n","sig":null,"attributes":[{"value":"/ Gets the near plane offset of the view frustum.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1108877,"byte_end":1108928,"line_start":172,"line_end":172,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1108933,"byte_end":1108942,"line_start":173,"line_end":173,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10508},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1109269,"byte_end":1109273,"line_start":183,"line_end":183,"column_start":12,"column_end":16},"name":"zfar","qualname":"<Perspective3<N>>::zfar","value":"pub fn zfar(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Gets the far plane offset of the view frustum.\n","sig":null,"attributes":[{"value":"/ Gets the far plane offset of the view frustum.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1109193,"byte_end":1109243,"line_start":181,"line_end":181,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1109248,"byte_end":1109257,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10509},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1109699,"byte_end":1109712,"line_start":194,"line_end":194,"column_start":12,"column_end":25},"name":"project_point","qualname":"<Perspective3<N>>::project_point","value":"pub fn project_point(&Self, &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Projects a point. Faster than matrix multiplication.\n","sig":null,"attributes":[{"value":"/ Projects a point. Faster than matrix multiplication.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1109617,"byte_end":1109673,"line_start":192,"line_end":192,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1109678,"byte_end":1109687,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10510},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1110130,"byte_end":1110145,"line_start":205,"line_end":205,"column_start":12,"column_end":27},"name":"unproject_point","qualname":"<Perspective3<N>>::unproject_point","value":"pub fn unproject_point(&Self, &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Un-projects a point. Faster than multiplication by the matrix inverse.\n","sig":null,"attributes":[{"value":"/ Un-projects a point. Faster than multiplication by the matrix inverse.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1110030,"byte_end":1110104,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1110109,"byte_end":1110118,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10511},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1110603,"byte_end":1110617,"line_start":218,"line_end":218,"column_start":12,"column_end":26},"name":"project_vector","qualname":"<Perspective3<N>>::project_vector","value":"pub fn project_vector<SB>(&Self, &Vector<N, U3, SB>) -> Vector3<N> where\nSB: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Projects a vector. Faster than matrix multiplication.\n","sig":null,"attributes":[{"value":"/ Projects a vector. Faster than matrix multiplication.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1110520,"byte_end":1110577,"line_start":216,"line_end":216,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1110582,"byte_end":1110591,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10513},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1111075,"byte_end":1111085,"line_start":233,"line_end":233,"column_start":12,"column_end":22},"name":"set_aspect","qualname":"<Perspective3<N>>::set_aspect","value":"pub fn set_aspect(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Updates this perspective matrix with a new `width / height` aspect ratio of the view\n frustum.\n","sig":null,"attributes":[{"value":"/ Updates this perspective matrix with a new `width / height` aspect ratio of the view","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1110944,"byte_end":1111032,"line_start":230,"line_end":230,"column_start":5,"column_end":93}},{"value":"/ frustum.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1111037,"byte_end":1111049,"line_start":231,"line_end":231,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1111054,"byte_end":1111063,"line_start":232,"line_end":232,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10514},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1111406,"byte_end":1111414,"line_start":243,"line_end":243,"column_start":12,"column_end":20},"name":"set_fovy","qualname":"<Perspective3<N>>::set_fovy","value":"pub fn set_fovy(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Updates this perspective with a new y field of view of the view frustum.\n","sig":null,"attributes":[{"value":"/ Updates this perspective with a new y field of view of the view frustum.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1111304,"byte_end":1111380,"line_start":241,"line_end":241,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1111385,"byte_end":1111394,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10515},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1111764,"byte_end":1111773,"line_start":251,"line_end":251,"column_start":12,"column_end":21},"name":"set_znear","qualname":"<Perspective3<N>>::set_znear","value":"pub fn set_znear(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Updates this perspective matrix with a new near plane offset of the view frustum.\n","sig":null,"attributes":[{"value":"/ Updates this perspective matrix with a new near plane offset of the view frustum.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1111653,"byte_end":1111738,"line_start":249,"line_end":249,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1111743,"byte_end":1111752,"line_start":250,"line_end":250,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10516},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1111996,"byte_end":1112004,"line_start":258,"line_end":258,"column_start":12,"column_end":20},"name":"set_zfar","qualname":"<Perspective3<N>>::set_zfar","value":"pub fn set_zfar(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Updates this perspective matrix with a new far plane offset of the view frustum.\n","sig":null,"attributes":[{"value":"/ Updates this perspective matrix with a new far plane offset of the view frustum.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1111886,"byte_end":1111970,"line_start":256,"line_end":256,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1111975,"byte_end":1111984,"line_start":257,"line_end":257,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10517},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1112236,"byte_end":1112254,"line_start":265,"line_end":265,"column_start":12,"column_end":30},"name":"set_znear_and_zfar","qualname":"<Perspective3<N>>::set_znear_and_zfar","value":"pub fn set_znear_and_zfar(&mut Self, N, N)","parent":null,"children":[],"decl_id":null,"docs":" Updates this perspective matrix with new near and far plane offsets of the view frustum.\n","sig":null,"attributes":[{"value":"/ Updates this perspective matrix with new near and far plane offsets of the view frustum.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1112118,"byte_end":1112210,"line_start":263,"line_end":263,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1112215,"byte_end":1112224,"line_start":264,"line_end":264,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":10553},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"linalg","qualname":"::linalg","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/mod.rs","parent":null,"children":[{"krate":0,"index":10554},{"krate":0,"index":10594},{"krate":0,"index":10670},{"krate":0,"index":10768},{"krate":0,"index":10826},{"krate":0,"index":10854},{"krate":0,"index":10941},{"krate":0,"index":11050},{"krate":0,"index":11129},{"krate":0,"index":11190},{"krate":0,"index":11241},{"krate":0,"index":11298},{"krate":0,"index":11342},{"krate":0,"index":11449},{"krate":0,"index":11523},{"krate":0,"index":11626},{"krate":0,"index":11737},{"krate":0,"index":11947},{"krate":0,"index":12062},{"krate":0,"index":12138},{"krate":0,"index":12189},{"krate":0,"index":12190},{"krate":0,"index":12191},{"krate":0,"index":12192},{"krate":0,"index":12193},{"krate":0,"index":12194},{"krate":0,"index":12195},{"krate":0,"index":12196},{"krate":0,"index":12197},{"krate":0,"index":12198},{"krate":0,"index":12199},{"krate":0,"index":12200},{"krate":0,"index":12201}],"decl_id":null,"docs":" [Reexported at the root of this crate.] Factorization of real matrices.\n","sig":null,"attributes":[{"value":"/ [Reexported at the root of this crate.] Factorization of real matrices.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/mod.rs","byte_start":1113403,"byte_end":1113478,"line_start":1,"line_end":1,"column_start":1,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":10554},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/balancing.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"balancing","qualname":"::linalg::balancing","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/balancing.rs","parent":null,"children":[{"krate":0,"index":10555},{"krate":0,"index":10558},{"krate":0,"index":10559},{"krate":0,"index":10562},{"krate":0,"index":10565},{"krate":0,"index":10568},{"krate":0,"index":10569},{"krate":0,"index":10572},{"krate":0,"index":10573},{"krate":0,"index":10575},{"krate":0,"index":10578},{"krate":0,"index":10579},{"krate":0,"index":10580},{"krate":0,"index":10582},{"krate":0,"index":10585},{"krate":0,"index":10588},{"krate":0,"index":10591}],"decl_id":null,"docs":" Functions for balancing a matrix.\n","sig":null,"attributes":[{"value":"/ Functions for balancing a matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/balancing.rs","byte_start":1114531,"byte_end":1114568,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":10588},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/balancing.rs","byte_start":1115015,"byte_end":1115038,"line_start":15,"line_end":15,"column_start":8,"column_end":31},"name":"balance_parlett_reinsch","qualname":"::linalg::balancing::balance_parlett_reinsch","value":"pub fn balance_parlett_reinsch<N: RealField, D: Dim>(&mut MatrixN<N, D>)\n-> VectorN<N, D> where DefaultAllocator: Allocator<N, D, D> + Allocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Applies in-place a modified Parlett and Reinsch matrix balancing with 2-norm to the matrix `m` and returns\n the corresponding diagonal transformation.","sig":null,"attributes":[{"value":"/ Applies in-place a modified Parlett and Reinsch matrix balancing with 2-norm to the matrix `m` and returns","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/balancing.rs","byte_start":1114802,"byte_end":1114912,"line_start":11,"line_end":11,"column_start":1,"column_end":111}},{"value":"/ the corresponding diagonal transformation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/balancing.rs","byte_start":1114913,"byte_end":1114959,"line_start":12,"line_end":12,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/balancing.rs","byte_start":1114960,"byte_end":1114963,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ See https://arxiv.org/pdf/1401.5766.pdf","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/balancing.rs","byte_start":1114964,"byte_end":1115007,"line_start":14,"line_end":14,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":10591},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/balancing.rs","byte_start":1116442,"byte_end":1116451,"line_start":69,"line_end":69,"column_start":8,"column_end":17},"name":"unbalance","qualname":"::linalg::balancing::unbalance","value":"pub fn unbalance<N: RealField, D: Dim>(&mut MatrixN<N, D>, &VectorN<N, D>)\nwhere DefaultAllocator: Allocator<N, D, D> + Allocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes in-place `D * m * D.inverse()`, where `D` is the matrix with diagonal `d`.\n","sig":null,"attributes":[{"value":"/ Computes in-place `D * m * D.inverse()`, where `D` is the matrix with diagonal `d`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/balancing.rs","byte_start":1116347,"byte_end":1116434,"line_start":68,"line_end":68,"column_start":1,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":25139},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/bidiagonal.rs","byte_start":1118389,"byte_end":1118399,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"name":"Bidiagonal","qualname":"::linalg::bidiagonal::Bidiagonal","value":"Bidiagonal {  }","parent":null,"children":[{"krate":0,"index":25143},{"krate":0,"index":25144},{"krate":0,"index":25145},{"krate":0,"index":25146}],"decl_id":null,"docs":" The bidiagonalization of a general matrix.\n","sig":null,"attributes":[{"value":"/ The bidiagonalization of a general matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/bidiagonal.rs","byte_start":1117305,"byte_end":1117351,"line_start":13,"line_end":13,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":10656},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/bidiagonal.rs","byte_start":1119804,"byte_end":1119807,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<Bidiagonal<N, R, C>>::new","value":"pub fn new(MatrixMN<N, R, C>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the Bidiagonal decomposition using householder reflections.\n","sig":null,"attributes":[{"value":"/ Computes the Bidiagonal decomposition using householder reflections.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/bidiagonal.rs","byte_start":1119720,"byte_end":1119792,"line_start":74,"line_end":74,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":10657},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/bidiagonal.rs","byte_start":1122241,"byte_end":1122258,"line_start":150,"line_end":150,"column_start":12,"column_end":29},"name":"is_upper_diagonal","qualname":"<Bidiagonal<N, R, C>>::is_upper_diagonal","value":"pub fn is_upper_diagonal(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether this decomposition contains an upper-diagonal matrix.\n","sig":null,"attributes":[{"value":"/ Indicates whether this decomposition contains an upper-diagonal matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/bidiagonal.rs","byte_start":1122140,"byte_end":1122215,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/bidiagonal.rs","byte_start":1122220,"byte_end":1122229,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10659},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/bidiagonal.rs","byte_start":1122649,"byte_end":1122655,"line_start":167,"line_end":167,"column_start":12,"column_end":18},"name":"unpack","qualname":"<Bidiagonal<N, R, C>>::unpack","value":"pub fn unpack(Self)\n->\n    (MatrixMN<N, R, DimMinimum<R, C>>, MatrixN<N, DimMinimum<R, C>>,\n     MatrixMN<N, DimMinimum<R, C>, C>) where\nDefaultAllocator: Allocator<N, DimMinimum<R, C>, DimMinimum<R, C>> +\nAllocator<N, R, DimMinimum<R, C>> + Allocator<N, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" Unpacks this decomposition into its three matrix factors `(U, D, V^t)`.","sig":null,"attributes":[{"value":"/ Unpacks this decomposition into its three matrix factors `(U, D, V^t)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/bidiagonal.rs","byte_start":1122479,"byte_end":1122554,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/bidiagonal.rs","byte_start":1122559,"byte_end":1122562,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ The decomposed matrix `M` is equal to `U * D * V^t`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/bidiagonal.rs","byte_start":1122567,"byte_end":1122623,"line_start":165,"line_end":165,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/bidiagonal.rs","byte_start":1122628,"byte_end":1122637,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10660},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/bidiagonal.rs","byte_start":1123200,"byte_end":1123201,"line_start":185,"line_end":185,"column_start":12,"column_end":13},"name":"d","qualname":"<Bidiagonal<N, R, C>>::d","value":"pub fn d(&Self) -> MatrixN<N, DimMinimum<R, C>> where\nDefaultAllocator: Allocator<N, DimMinimum<R, C>, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the upper trapezoidal submatrix `R` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Retrieves the upper trapezoidal submatrix `R` of this decomposition.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/bidiagonal.rs","byte_start":1123102,"byte_end":1123174,"line_start":183,"line_end":183,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/bidiagonal.rs","byte_start":1123179,"byte_end":1123188,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10663},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/bidiagonal.rs","byte_start":1123993,"byte_end":1123994,"line_start":204,"line_end":204,"column_start":12,"column_end":13},"name":"u","qualname":"<Bidiagonal<N, R, C>>::u","value":"pub fn u(&Self) -> MatrixMN<N, R, DimMinimum<R, C>> where\nDefaultAllocator: Allocator<N, R, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal matrix `U` of this `U * D * V` decomposition.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal matrix `U` of this `U * D * V` decomposition.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/bidiagonal.rs","byte_start":1123785,"byte_end":1123858,"line_start":201,"line_end":201,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":10664},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/bidiagonal.rs","byte_start":1124996,"byte_end":1124999,"line_start":234,"line_end":234,"column_start":12,"column_end":15},"name":"v_t","qualname":"<Bidiagonal<N, R, C>>::v_t","value":"pub fn v_t(&Self) -> MatrixMN<N, DimMinimum<R, C>, C> where\nDefaultAllocator: Allocator<N, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal matrix `V_t` of this `U * D * V_t` decomposition.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal matrix `V_t` of this `U * D * V_t` decomposition.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/bidiagonal.rs","byte_start":1124907,"byte_end":1124984,"line_start":233,"line_end":233,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":10665},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/bidiagonal.rs","byte_start":1126345,"byte_end":1126353,"line_start":269,"line_end":269,"column_start":12,"column_end":20},"name":"diagonal","qualname":"<Bidiagonal<N, R, C>>::diagonal","value":"pub fn diagonal(&Self) -> VectorN<N::RealField, DimMinimum<R, C>> where\nDefaultAllocator: Allocator<N::RealField, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The diagonal part of this decomposed matrix.\n","sig":null,"attributes":[{"value":"/ The diagonal part of this decomposed matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/bidiagonal.rs","byte_start":1126285,"byte_end":1126333,"line_start":268,"line_end":268,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":10667},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/bidiagonal.rs","byte_start":1126607,"byte_end":1126619,"line_start":277,"line_end":277,"column_start":12,"column_end":24},"name":"off_diagonal","qualname":"<Bidiagonal<N, R, C>>::off_diagonal","value":"pub fn off_diagonal(&Self)\n-> VectorN<N::RealField, DimDiff<DimMinimum<R, C>, U1>> where\nDefaultAllocator: Allocator<N::RealField, DimDiff<DimMinimum<R, C>, U1>>","parent":null,"children":[],"decl_id":null,"docs":" The off-diagonal part of this decomposed matrix.\n","sig":null,"attributes":[{"value":"/ The off-diagonal part of this decomposed matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/bidiagonal.rs","byte_start":1126543,"byte_end":1126595,"line_start":276,"line_end":276,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":10669},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/bidiagonal.rs","byte_start":1126865,"byte_end":1126876,"line_start":285,"line_end":285,"column_start":12,"column_end":23},"name":"uv_internal","qualname":"<Bidiagonal<N, R, C>>::uv_internal","value":"pub fn uv_internal(&Self) -> &MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":25157},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1130866,"byte_end":1130874,"line_start":27,"line_end":27,"column_start":12,"column_end":20},"name":"Cholesky","qualname":"::linalg::cholesky::Cholesky","value":"Cholesky {  }","parent":null,"children":[{"krate":0,"index":25160}],"decl_id":null,"docs":" The Cholesky decomposition of a symmetric-definite-positive matrix.\n","sig":null,"attributes":[{"value":"/ The Cholesky decomposition of a symmetric-definite-positive matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1130379,"byte_end":1130450,"line_start":14,"line_end":14,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":10738},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1131461,"byte_end":1131474,"line_start":48,"line_end":48,"column_start":12,"column_end":25},"name":"new_unchecked","qualname":"<Cholesky<N, D>>::new_unchecked","value":"pub fn new_unchecked(MatrixN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the Cholesky decomposition of `matrix` without checking that the matrix is definite-positive.","sig":null,"attributes":[{"value":"/ Computes the Cholesky decomposition of `matrix` without checking that the matrix is definite-positive.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1131221,"byte_end":1131327,"line_start":45,"line_end":45,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1131332,"byte_end":1131335,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ If the input matrix is not definite-positive, the decomposition may contain trash values (Inf, NaN, etc.)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1131340,"byte_end":1131449,"line_start":47,"line_end":47,"column_start":5,"column_end":114}}]},{"kind":"Method","id":{"krate":0,"index":10739},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1132515,"byte_end":1132521,"line_start":79,"line_end":79,"column_start":12,"column_end":18},"name":"unpack","qualname":"<Cholesky<N, D>>::unpack","value":"pub fn unpack(Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the lower-triangular factor of the Cholesky decomposition with its strictly\n upper-triangular part filled with zeros.\n","sig":null,"attributes":[{"value":"/ Retrieves the lower-triangular factor of the Cholesky decomposition with its strictly","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1132365,"byte_end":1132454,"line_start":77,"line_end":77,"column_start":5,"column_end":94}},{"value":"/ upper-triangular part filled with zeros.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1132459,"byte_end":1132503,"line_start":78,"line_end":78,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":10740},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1132909,"byte_end":1132921,"line_start":89,"line_end":89,"column_start":12,"column_end":24},"name":"unpack_dirty","qualname":"<Cholesky<N, D>>::unpack_dirty","value":"pub fn unpack_dirty(Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the lower-triangular factor of the Cholesky decomposition, without zeroing-out\n its strict upper-triangular part.","sig":null,"attributes":[{"value":"/ Retrieves the lower-triangular factor of the Cholesky decomposition, without zeroing-out","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1132633,"byte_end":1132725,"line_start":84,"line_end":84,"column_start":5,"column_end":97}},{"value":"/ its strict upper-triangular part.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1132730,"byte_end":1132767,"line_start":85,"line_end":85,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1132772,"byte_end":1132775,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ The values of the strict upper-triangular part are garbage and should be ignored by further","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1132780,"byte_end":1132875,"line_start":87,"line_end":87,"column_start":5,"column_end":100}},{"value":"/ computations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1132880,"byte_end":1132897,"line_start":88,"line_end":88,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":10741},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1133126,"byte_end":1133127,"line_start":95,"line_end":95,"column_start":12,"column_end":13},"name":"l","qualname":"<Cholesky<N, D>>::l","value":"pub fn l(&Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the lower-triangular factor of the Cholesky decomposition with its strictly\n uppen-triangular part filled with zeros.\n","sig":null,"attributes":[{"value":"/ Retrieves the lower-triangular factor of the Cholesky decomposition with its strictly","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1132976,"byte_end":1133065,"line_start":93,"line_end":93,"column_start":5,"column_end":94}},{"value":"/ uppen-triangular part filled with zeros.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1133070,"byte_end":1133114,"line_start":94,"line_end":94,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":10742},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1133526,"byte_end":1133533,"line_start":104,"line_end":104,"column_start":12,"column_end":19},"name":"l_dirty","qualname":"<Cholesky<N, D>>::l_dirty","value":"pub fn l_dirty(&Self) -> &MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the lower-triangular factor of the Cholesky decomposition, without zeroing-out\n its strict upper-triangular part.","sig":null,"attributes":[{"value":"/ Retrieves the lower-triangular factor of the Cholesky decomposition, without zeroing-out","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1133200,"byte_end":1133292,"line_start":99,"line_end":99,"column_start":5,"column_end":97}},{"value":"/ its strict upper-triangular part.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1133297,"byte_end":1133334,"line_start":100,"line_end":100,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1133339,"byte_end":1133342,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This is an allocation-less version of `self.l()`. The values of the strict upper-triangular","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1133347,"byte_end":1133442,"line_start":102,"line_end":102,"column_start":5,"column_end":100}},{"value":"/ part are garbage and should be ignored by further computations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1133447,"byte_end":1133514,"line_start":103,"line_end":103,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":10743},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1133743,"byte_end":1133752,"line_start":111,"line_end":111,"column_start":12,"column_end":21},"name":"solve_mut","qualname":"<Cholesky<N, D>>::solve_mut","value":"pub fn solve_mut<R2: Dim, C2: Dim, S2>(&Self, &mut Matrix<N, R2, C2, S2>)\nwhere S2: StorageMut<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the system `self * x = b` where `self` is the decomposed matrix and `x` the unknown.","sig":null,"attributes":[{"value":"/ Solves the system `self * x = b` where `self` is the decomposed matrix and `x` the unknown.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1133591,"byte_end":1133686,"line_start":108,"line_end":108,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1133691,"byte_end":1133694,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ The result is stored on `b`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1133699,"byte_end":1133731,"line_start":110,"line_end":110,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":10747},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1134178,"byte_end":1134183,"line_start":122,"line_end":122,"column_start":12,"column_end":17},"name":"solve","qualname":"<Cholesky<N, D>>::solve","value":"pub fn solve<R2: Dim, C2: Dim, S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> MatrixMN<N, R2, C2> where S2: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Returns the solution of the system `self * x = b` where `self` is the decomposed matrix and\n `x` the unknown.\n","sig":null,"attributes":[{"value":"/ Returns the solution of the system `self * x = b` where `self` is the decomposed matrix and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1134046,"byte_end":1134141,"line_start":120,"line_end":120,"column_start":5,"column_end":100}},{"value":"/ `x` the unknown.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1134146,"byte_end":1134166,"line_start":121,"line_end":121,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":10751},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1134567,"byte_end":1134574,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Cholesky<N, D>>::inverse","value":"pub fn inverse(&Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ Computes the inverse of the decomposed matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1134505,"byte_end":1134555,"line_start":133,"line_end":133,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":10755},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1135115,"byte_end":1135118,"line_start":151,"line_end":151,"column_start":12,"column_end":15},"name":"new","qualname":"<Cholesky<N, D>>::new","value":"pub fn new(MatrixN<N, D>) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Cholesky decomposition of `matrix`.","sig":null,"attributes":[{"value":"/ Attempts to compute the Cholesky decomposition of `matrix`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1134867,"byte_end":1134930,"line_start":147,"line_end":147,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1134935,"byte_end":1134938,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the input matrix is not definite-positive. The input matrix is assumed","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1134943,"byte_end":1135035,"line_start":149,"line_end":149,"column_start":5,"column_end":97}},{"value":"/ to be symmetric and only the lower-triangular part is read.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1135040,"byte_end":1135103,"line_start":150,"line_end":150,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":10756},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1136558,"byte_end":1136573,"line_start":191,"line_end":191,"column_start":12,"column_end":27},"name":"rank_one_update","qualname":"<Cholesky<N, D>>::rank_one_update","value":"pub fn rank_one_update<R2: Dim,\n                       S2>(&mut Self, &Vector<N, R2, S2>, N::RealField) where\nS2: Storage<N, R2, U1>, DefaultAllocator: Allocator<N, R2, U1>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Given the Cholesky decomposition of a matrix `M`, a scalar `sigma` and a vector `v`,\n performs a rank one update such that we end up with the decomposition of `M + sigma * (v * v.adjoint())`.\n","sig":null,"attributes":[{"value":"/ Given the Cholesky decomposition of a matrix `M`, a scalar `sigma` and a vector `v`,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1136330,"byte_end":1136418,"line_start":188,"line_end":188,"column_start":5,"column_end":93}},{"value":"/ performs a rank one update such that we end up with the decomposition of `M + sigma * (v * v.adjoint())`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1136423,"byte_end":1136532,"line_start":189,"line_end":189,"column_start":5,"column_end":114}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1136537,"byte_end":1136546,"line_start":190,"line_end":190,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10759},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1137101,"byte_end":1137114,"line_start":202,"line_end":202,"column_start":12,"column_end":25},"name":"insert_column","qualname":"<Cholesky<N, D>>::insert_column","value":"pub fn insert_column<R2, S2>(&Self, usize, Vector<N, R2, S2>)\n-> Cholesky<N, DimSum<D, U1>> where D: DimAdd<U1>, R2: Dim,\nS2: Storage<N, R2, U1>,\nDefaultAllocator: Allocator<N, DimSum<D, U1>, DimSum<D, U1>> +\nAllocator<N, R2>, ShapeConstraint: SameNumberOfRows<R2, DimSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Updates the decomposition such that we get the decomposition of a matrix with the given column `col` in the `j`th position.\n Since the matrix is square, an identical row will be added in the `j`th row.\n","sig":null,"attributes":[{"value":"/ Updates the decomposition such that we get the decomposition of a matrix with the given column `col` in the `j`th position.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1136877,"byte_end":1137004,"line_start":200,"line_end":200,"column_start":5,"column_end":132}},{"value":"/ Since the matrix is square, an identical row will be added in the `j`th row.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1137009,"byte_end":1137089,"line_start":201,"line_end":201,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":10762},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1140173,"byte_end":1140186,"line_start":280,"line_end":280,"column_start":12,"column_end":25},"name":"remove_column","qualname":"<Cholesky<N, D>>::remove_column","value":"pub fn remove_column(&Self, usize) -> Cholesky<N, DimDiff<D, U1>> where\nD: DimSub<U1>,\nDefaultAllocator: Allocator<N, DimDiff<D, U1>, DimDiff<D, U1>> +\nAllocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Updates the decomposition such that we get the decomposition of the factored matrix with its `j`th column removed.\n Since the matrix is square, the `j`th row will also be removed.\n","sig":null,"attributes":[{"value":"/ Updates the decomposition such that we get the decomposition of the factored matrix with its `j`th column removed.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1139971,"byte_end":1140089,"line_start":278,"line_end":278,"column_start":5,"column_end":123}},{"value":"/ Since the matrix is square, the `j`th row will also be removed.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1140094,"byte_end":1140161,"line_start":279,"line_end":279,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":10817},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/convolution.rs","byte_start":1144446,"byte_end":1144459,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"name":"convolve_full","qualname":"<Vector<N, D1, S1>>::convolve_full","value":"pub fn convolve_full<D2, S2>(&Self, Vector<N, D2, S2>)\n-> VectorN<N, DimDiff<DimSum<D1, D2>, U1>> where D1: DimAdd<D2>,\nD2: DimAdd<D1, Output = DimSum<D1, D2>>, DimSum<D1, D2>: DimSub<U1>,\nS2: Storage<N, D2>,\nDefaultAllocator: Allocator<N, DimDiff<DimSum<D1, D2>, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the convolution of the target vector and a kernel.","sig":null,"attributes":[{"value":"/ Returns the convolution of the target vector and a kernel.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/convolution.rs","byte_start":1144195,"byte_end":1144257,"line_start":10,"line_end":10,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/convolution.rs","byte_start":1144262,"byte_end":1144265,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/convolution.rs","byte_start":1144270,"byte_end":1144285,"line_start":12,"line_end":12,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/convolution.rs","byte_start":1144290,"byte_end":1144293,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ * `kernel` - A Vector with size > 0","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/convolution.rs","byte_start":1144298,"byte_end":1144337,"line_start":14,"line_end":14,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/convolution.rs","byte_start":1144342,"byte_end":1144345,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/convolution.rs","byte_start":1144350,"byte_end":1144362,"line_start":16,"line_end":16,"column_start":5,"column_end":17}},{"value":"/ Inputs must satisfy `vector.len() >= kernel.len() > 0`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/convolution.rs","byte_start":1144367,"byte_end":1144426,"line_start":17,"line_end":17,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/convolution.rs","byte_start":1144431,"byte_end":1144434,"line_start":18,"line_end":18,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":10820},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/convolution.rs","byte_start":1145997,"byte_end":1146011,"line_start":67,"line_end":67,"column_start":12,"column_end":26},"name":"convolve_valid","qualname":"<Vector<N, D1, S1>>::convolve_valid","value":"pub fn convolve_valid<D2, S2>(&Self, Vector<N, D2, S2>)\n-> VectorN<N, DimDiff<DimSum<D1, U1>, D2>> where D1: DimAdd<U1>, D2: Dim,\nDimSum<D1, U1>: DimSub<D2>, S2: Storage<N, D2>,\nDefaultAllocator: Allocator<N, DimDiff<DimSum<D1, U1>, D2>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the convolution of the target vector and a kernel.","sig":null,"attributes":[{"value":"/ Returns the convolution of the target vector and a kernel.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/convolution.rs","byte_start":1145639,"byte_end":1145701,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/convolution.rs","byte_start":1145706,"byte_end":1145709,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The output convolution consists only of those elements that do not rely on the zero-padding.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/convolution.rs","byte_start":1145714,"byte_end":1145810,"line_start":58,"line_end":58,"column_start":5,"column_end":101}},{"value":"/ # Arguments","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/convolution.rs","byte_start":1145815,"byte_end":1145830,"line_start":59,"line_end":59,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/convolution.rs","byte_start":1145835,"byte_end":1145838,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ * `kernel` - A Vector with size > 0","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/convolution.rs","byte_start":1145843,"byte_end":1145882,"line_start":61,"line_end":61,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/convolution.rs","byte_start":1145887,"byte_end":1145890,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/convolution.rs","byte_start":1145895,"byte_end":1145898,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/convolution.rs","byte_start":1145903,"byte_end":1145915,"line_start":64,"line_end":64,"column_start":5,"column_end":17}},{"value":"/ Inputs must satisfy `self.len() >= kernel.len() > 0`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/convolution.rs","byte_start":1145920,"byte_end":1145977,"line_start":65,"line_end":65,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/convolution.rs","byte_start":1145982,"byte_end":1145985,"line_start":66,"line_end":66,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":10823},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/convolution.rs","byte_start":1147211,"byte_end":1147224,"line_start":105,"line_end":105,"column_start":12,"column_end":25},"name":"convolve_same","qualname":"<Vector<N, D1, S1>>::convolve_same","value":"pub fn convolve_same<D2, S2>(&Self, Vector<N, D2, S2>) -> VectorN<N, D1> where\nD2: Dim, S2: Storage<N, D2>, DefaultAllocator: Allocator<N, D1>","parent":null,"children":[],"decl_id":null,"docs":" Returns the convolution of the target vector and a kernel.","sig":null,"attributes":[{"value":"/ Returns the convolution of the target vector and a kernel.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/convolution.rs","byte_start":1146863,"byte_end":1146925,"line_start":96,"line_end":96,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/convolution.rs","byte_start":1146930,"byte_end":1146933,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The output convolution is the same size as vector, centered with respect to the ‘full’ output.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/convolution.rs","byte_start":1146938,"byte_end":1147040,"line_start":98,"line_end":98,"column_start":5,"column_end":103}},{"value":"/ # Arguments","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/convolution.rs","byte_start":1147045,"byte_end":1147060,"line_start":99,"line_end":99,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/convolution.rs","byte_start":1147065,"byte_end":1147068,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ * `kernel` - A Vector with size > 0","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/convolution.rs","byte_start":1147073,"byte_end":1147112,"line_start":101,"line_end":101,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/convolution.rs","byte_start":1147117,"byte_end":1147120,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/convolution.rs","byte_start":1147125,"byte_end":1147137,"line_start":103,"line_end":103,"column_start":5,"column_end":17}},{"value":"/ Inputs must satisfy `self.len() >= kernel.len() > 0`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/convolution.rs","byte_start":1147142,"byte_end":1147199,"line_start":104,"line_end":104,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":10853},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/determinant.rs","byte_start":1148491,"byte_end":1148502,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"determinant","qualname":"<SquareMatrix<N, D, S>>::determinant","value":"pub fn determinant(&Self) -> N where DefaultAllocator: Allocator<N, D, D> +\nAllocator<(usize, usize), D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the matrix determinant.","sig":null,"attributes":[{"value":"/ Computes the matrix determinant.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/determinant.rs","byte_start":1148339,"byte_end":1148375,"line_start":11,"line_end":11,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/determinant.rs","byte_start":1148380,"byte_end":1148383,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ If the matrix has a dimension larger than 3, an LU decomposition is used.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/determinant.rs","byte_start":1148388,"byte_end":1148465,"line_start":13,"line_end":13,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/determinant.rs","byte_start":1148470,"byte_end":1148479,"line_start":14,"line_end":14,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10924},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1151575,"byte_end":1151588,"line_start":21,"line_end":21,"column_start":12,"column_end":25},"name":"bidiagonalize","qualname":"<Matrix<N, R, C, S>>::bidiagonalize","value":"pub fn bidiagonalize(Self) -> Bidiagonal<N, R, C> where R: DimMin<C>,\nDimMinimum<R, C>: DimSub<U1>, DefaultAllocator: Allocator<N, R, C> +\nAllocator<N, C> + Allocator<N, R> + Allocator<N, DimMinimum<R, C>> +\nAllocator<N, DimDiff<DimMinimum<R, C>, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the bidiagonalization using householder reflections.\n","sig":null,"attributes":[{"value":"/ Computes the bidiagonalization using householder reflections.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1151498,"byte_end":1151563,"line_start":20,"line_end":20,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":10925},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1152122,"byte_end":1152133,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"name":"full_piv_lu","qualname":"<Matrix<N, R, C, S>>::full_piv_lu","value":"pub fn full_piv_lu(Self) -> FullPivLU<N, R, C> where R: DimMin<C>,\nDefaultAllocator: Allocator<N, R, C> +\nAllocator<(usize, usize), DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the LU decomposition with full pivoting of `matrix`.","sig":null,"attributes":[{"value":"/ Computes the LU decomposition with full pivoting of `matrix`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1151957,"byte_end":1152022,"line_start":34,"line_end":34,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1152027,"byte_end":1152030,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ This effectively computes `P, L, U, Q` such that `P * matrix * Q = LU`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1152035,"byte_end":1152110,"line_start":36,"line_end":36,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":10926},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1152431,"byte_end":1152433,"line_start":46,"line_end":46,"column_start":12,"column_end":14},"name":"lu","qualname":"<Matrix<N, R, C, S>>::lu","value":"pub fn lu(Self) -> LU<N, R, C> where R: DimMin<C>,\nDefaultAllocator: Allocator<N, R, C> +\nAllocator<(usize, usize), DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the LU decomposition with partial (row) pivoting of `matrix`.\n","sig":null,"attributes":[{"value":"/ Computes the LU decomposition with partial (row) pivoting of `matrix`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1152345,"byte_end":1152419,"line_start":45,"line_end":45,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":10927},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1152692,"byte_end":1152694,"line_start":55,"line_end":55,"column_start":12,"column_end":14},"name":"qr","qualname":"<Matrix<N, R, C, S>>::qr","value":"pub fn qr(Self) -> QR<N, R, C> where R: DimMin<C>,\nDefaultAllocator: Allocator<N, R, C> + Allocator<N, R> +\nAllocator<N, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the QR decomposition of this matrix.\n","sig":null,"attributes":[{"value":"/ Computes the QR decomposition of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1152631,"byte_end":1152680,"line_start":54,"line_end":54,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":10928},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1152976,"byte_end":1152979,"line_start":64,"line_end":64,"column_start":12,"column_end":15},"name":"svd","qualname":"<Matrix<N, R, C, S>>::svd","value":"pub fn svd(Self, bool, bool) -> SVD<N, R, C> where R: DimMin<C>,\nDimMinimum<R, C>: DimSub<U1>, DefaultAllocator: Allocator<N, R, C> +\nAllocator<N, C> + Allocator<N, R> +\nAllocator<N, DimDiff<DimMinimum<R, C>, U1>> +\nAllocator<N, DimMinimum<R, C>, C> + Allocator<N, R, DimMinimum<R, C>> +\nAllocator<N, DimMinimum<R, C>> + Allocator<N::RealField, DimMinimum<R, C>> +\nAllocator<N::RealField, DimDiff<DimMinimum<R, C>, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the Singular Value Decomposition using implicit shift.\n","sig":null,"attributes":[{"value":"/ Computes the Singular Value Decomposition using implicit shift.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1152897,"byte_end":1152964,"line_start":63,"line_end":63,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":10929},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1154290,"byte_end":1154297,"line_start":91,"line_end":91,"column_start":12,"column_end":19},"name":"try_svd","qualname":"<Matrix<N, R, C, S>>::try_svd","value":"pub fn try_svd(Self, bool, bool, N::RealField, usize) -> Option<SVD<N, R, C>>\nwhere R: DimMin<C>, DimMinimum<R, C>: DimSub<U1>,\nDefaultAllocator: Allocator<N, R, C> + Allocator<N, C> + Allocator<N, R> +\nAllocator<N, DimDiff<DimMinimum<R, C>, U1>> +\nAllocator<N, DimMinimum<R, C>, C> + Allocator<N, R, DimMinimum<R, C>> +\nAllocator<N, DimMinimum<R, C>> + Allocator<N::RealField, DimMinimum<R, C>> +\nAllocator<N::RealField, DimDiff<DimMinimum<R, C>, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Singular Value Decomposition of `matrix` using implicit shift.","sig":null,"attributes":[{"value":"/ Attempts to compute the Singular Value Decomposition of `matrix` using implicit shift.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1153630,"byte_end":1153720,"line_start":81,"line_end":81,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1153725,"byte_end":1153728,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1153733,"byte_end":1153748,"line_start":83,"line_end":83,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1153753,"byte_end":1153756,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ * `compute_u` − set this to `true` to enable the computation of left-singular vectors.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1153761,"byte_end":1153853,"line_start":85,"line_end":85,"column_start":5,"column_end":95}},{"value":"/ * `compute_v` − set this to `true` to enable the computation of right-singular vectors.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1153858,"byte_end":1153951,"line_start":86,"line_end":86,"column_start":5,"column_end":96}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1153956,"byte_end":1154034,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1154039,"byte_end":1154131,"line_start":88,"line_end":88,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1154136,"byte_end":1154228,"line_start":89,"line_end":89,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1154233,"byte_end":1154278,"line_start":90,"line_end":90,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":10934},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1156338,"byte_end":1156346,"line_start":132,"line_end":132,"column_start":12,"column_end":20},"name":"cholesky","qualname":"<Matrix<N, D, D, S>>::cholesky","value":"pub fn cholesky(Self) -> Option<Cholesky<N, D>> where\nDefaultAllocator: Allocator<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Cholesky decomposition of this matrix.","sig":null,"attributes":[{"value":"/ Attempts to compute the Cholesky decomposition of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1156087,"byte_end":1156153,"line_start":128,"line_end":128,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1156158,"byte_end":1156161,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the input matrix is not definite-positive. The input matrix is assumed","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1156166,"byte_end":1156258,"line_start":130,"line_end":130,"column_start":5,"column_end":97}},{"value":"/ to be symmetric and only the lower-triangular part is read.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1156263,"byte_end":1156326,"line_start":131,"line_end":131,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":10935},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1156592,"byte_end":1156602,"line_start":140,"line_end":140,"column_start":12,"column_end":22},"name":"hessenberg","qualname":"<Matrix<N, D, D, S>>::hessenberg","value":"pub fn hessenberg(Self) -> Hessenberg<N, D> where D: DimSub<U1>,\nDefaultAllocator: Allocator<N, D, D> + Allocator<N, D> +\nAllocator<N, DimDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the Hessenberg decomposition of this matrix using householder reflections.\n","sig":null,"attributes":[{"value":"/ Computes the Hessenberg decomposition of this matrix using householder reflections.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1156493,"byte_end":1156580,"line_start":139,"line_end":139,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":10936},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1156885,"byte_end":1156890,"line_start":149,"line_end":149,"column_start":12,"column_end":17},"name":"schur","qualname":"<Matrix<N, D, D, S>>::schur","value":"pub fn schur(Self) -> Schur<N, D> where D: DimSub<U1>,\nDefaultAllocator: Allocator<N, D, DimDiff<D, U1>> +\nAllocator<N, DimDiff<D, U1>> + Allocator<N, D, D> + Allocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the Schur decomposition of a square matrix.\n","sig":null,"attributes":[{"value":"/ Computes the Schur decomposition of a square matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1156817,"byte_end":1156873,"line_start":148,"line_end":148,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":10937},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1157755,"byte_end":1157764,"line_start":171,"line_end":171,"column_start":12,"column_end":21},"name":"try_schur","qualname":"<Matrix<N, D, D, S>>::try_schur","value":"pub fn try_schur(Self, N::RealField, usize) -> Option<Schur<N, D>> where\nD: DimSub<U1>, DefaultAllocator: Allocator<N, D, DimDiff<D, U1>> +\nAllocator<N, DimDiff<D, U1>> + Allocator<N, D, D> + Allocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Schur decomposition of a square matrix.","sig":null,"attributes":[{"value":"/ Attempts to compute the Schur decomposition of a square matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1157184,"byte_end":1157251,"line_start":160,"line_end":160,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1157256,"byte_end":1157259,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ If only eigenvalues are needed, it is more efficient to call the matrix method","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1157264,"byte_end":1157346,"line_start":162,"line_end":162,"column_start":5,"column_end":87}},{"value":"/ `.eigenvalues()` instead.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1157351,"byte_end":1157380,"line_start":163,"line_end":163,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1157385,"byte_end":1157388,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1157393,"byte_end":1157408,"line_start":165,"line_end":165,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1157413,"byte_end":1157416,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1157421,"byte_end":1157499,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1157504,"byte_end":1157596,"line_start":168,"line_end":168,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1157601,"byte_end":1157693,"line_start":169,"line_end":169,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1157698,"byte_end":1157743,"line_start":170,"line_end":170,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":10938},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1158284,"byte_end":1158299,"line_start":185,"line_end":185,"column_start":12,"column_end":27},"name":"symmetric_eigen","qualname":"<Matrix<N, D, D, S>>::symmetric_eigen","value":"pub fn symmetric_eigen(Self) -> SymmetricEigen<N, D> where D: DimSub<U1>,\nDefaultAllocator: Allocator<N, D, D> + Allocator<N, DimDiff<D, U1>> +\nAllocator<N::RealField, D> + Allocator<N::RealField, DimDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigendecomposition of this symmetric matrix.","sig":null,"attributes":[{"value":"/ Computes the eigendecomposition of this symmetric matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1158123,"byte_end":1158184,"line_start":182,"line_end":182,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1158189,"byte_end":1158192,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part (including the diagonal) of `m` is read.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1158197,"byte_end":1158272,"line_start":184,"line_end":184,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":10939},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1159191,"byte_end":1159210,"line_start":207,"line_end":207,"column_start":12,"column_end":31},"name":"try_symmetric_eigen","qualname":"<Matrix<N, D, D, S>>::try_symmetric_eigen","value":"pub fn try_symmetric_eigen(Self, N::RealField, usize)\n-> Option<SymmetricEigen<N, D>> where D: DimSub<U1>,\nDefaultAllocator: Allocator<N, D, D> + Allocator<N, DimDiff<D, U1>> +\nAllocator<N::RealField, D> + Allocator<N::RealField, DimDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigendecomposition of the given symmetric matrix with user-specified\n convergence parameters.","sig":null,"attributes":[{"value":"/ Computes the eigendecomposition of the given symmetric matrix with user-specified","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1158611,"byte_end":1158696,"line_start":196,"line_end":196,"column_start":5,"column_end":90}},{"value":"/ convergence parameters.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1158701,"byte_end":1158728,"line_start":197,"line_end":197,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1158733,"byte_end":1158736,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part (including the diagonal) of `m` is read.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1158741,"byte_end":1158816,"line_start":199,"line_end":199,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1158821,"byte_end":1158824,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1158829,"byte_end":1158844,"line_start":201,"line_end":201,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1158849,"byte_end":1158852,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1158857,"byte_end":1158935,"line_start":203,"line_end":203,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1158940,"byte_end":1159032,"line_start":204,"line_end":204,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1159037,"byte_end":1159129,"line_start":205,"line_end":205,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1159134,"byte_end":1159179,"line_start":206,"line_end":206,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":10940},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1159779,"byte_end":1159803,"line_start":225,"line_end":225,"column_start":12,"column_end":36},"name":"symmetric_tridiagonalize","qualname":"<Matrix<N, D, D, S>>::symmetric_tridiagonalize","value":"pub fn symmetric_tridiagonalize(Self) -> SymmetricTridiagonal<N, D> where\nD: DimSub<U1>, DefaultAllocator: Allocator<N, D, D> +\nAllocator<N, DimDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the tridiagonalization of this symmetric matrix.","sig":null,"attributes":[{"value":"/ Computes the tridiagonalization of this symmetric matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1159618,"byte_end":1159679,"line_start":222,"line_end":222,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1159684,"byte_end":1159687,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part (including the diagonal) of `m` is read.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1159692,"byte_end":1159767,"line_start":224,"line_end":224,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":11048},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/exp.rs","byte_start":1172612,"byte_end":1172615,"line_start":438,"line_end":438,"column_start":12,"column_end":15},"name":"exp","qualname":"<MatrixN<N, D>>::exp","value":"pub fn exp(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes exponential of this matrix\n","sig":null,"attributes":[{"value":"/ Computes exponential of this matrix","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/exp.rs","byte_start":1172561,"byte_end":1172600,"line_start":437,"line_end":437,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":25169},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1175710,"byte_end":1175719,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"FullPivLU","qualname":"::linalg::full_piv_lu::FullPivLU","value":"FullPivLU {  }","parent":null,"children":[{"krate":0,"index":25173},{"krate":0,"index":25174},{"krate":0,"index":25175}],"decl_id":null,"docs":" LU decomposition with full row and column pivoting.\n","sig":null,"attributes":[{"value":"/ LU decomposition with full row and column pivoting.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1174954,"byte_end":1175009,"line_start":14,"line_end":14,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":11108},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1176554,"byte_end":1176557,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"new","qualname":"<FullPivLU<N, R, C>>::new","value":"pub fn new(MatrixMN<N, R, C>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the LU decomposition with full pivoting of `matrix`.","sig":null,"attributes":[{"value":"/ Computes the LU decomposition with full pivoting of `matrix`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1176389,"byte_end":1176454,"line_start":52,"line_end":52,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1176459,"byte_end":1176462,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ This effectively computes `P, L, U, Q` such that `P * matrix * Q = LU`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1176467,"byte_end":1176542,"line_start":54,"line_end":54,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":11109},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1177794,"byte_end":1177805,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"lu_internal","qualname":"<FullPivLU<N, R, C>>::lu_internal","value":"pub fn lu_internal(&Self) -> &MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11110},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1177945,"byte_end":1177946,"line_start":99,"line_end":99,"column_start":12,"column_end":13},"name":"l","qualname":"<FullPivLU<N, R, C>>::l","value":"pub fn l(&Self) -> MatrixMN<N, R, DimMinimum<R, C>> where\nDefaultAllocator: Allocator<N, R, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The lower triangular matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ The lower triangular matrix of this decomposition.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1177865,"byte_end":1177919,"line_start":97,"line_end":97,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1177924,"byte_end":1177933,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11111},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1178378,"byte_end":1178379,"line_start":112,"line_end":112,"column_start":12,"column_end":13},"name":"u","qualname":"<FullPivLU<N, R, C>>::u","value":"pub fn u(&Self) -> MatrixMN<N, DimMinimum<R, C>, C> where\nDefaultAllocator: Allocator<N, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" The upper triangular matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ The upper triangular matrix of this decomposition.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1178298,"byte_end":1178352,"line_start":110,"line_end":110,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1178357,"byte_end":1178366,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11112},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1178702,"byte_end":1178703,"line_start":122,"line_end":122,"column_start":12,"column_end":13},"name":"p","qualname":"<FullPivLU<N, R, C>>::p","value":"pub fn p(&Self) -> &PermutationSequence<DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The row permutations of this decomposition.\n","sig":null,"attributes":[{"value":"/ The row permutations of this decomposition.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1178629,"byte_end":1178676,"line_start":120,"line_end":120,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1178681,"byte_end":1178690,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11113},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1178858,"byte_end":1178859,"line_start":128,"line_end":128,"column_start":12,"column_end":13},"name":"q","qualname":"<FullPivLU<N, R, C>>::q","value":"pub fn q(&Self) -> &PermutationSequence<DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The column permutations of this decomposition.\n","sig":null,"attributes":[{"value":"/ The column permutations of this decomposition.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1178782,"byte_end":1178832,"line_start":126,"line_end":126,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1178837,"byte_end":1178846,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11114},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1179059,"byte_end":1179065,"line_start":134,"line_end":134,"column_start":12,"column_end":18},"name":"unpack","qualname":"<FullPivLU<N, R, C>>::unpack","value":"pub fn unpack(Self)\n->\n    (PermutationSequence<DimMinimum<R, C>>, MatrixMN<N, R, DimMinimum<R, C>>,\n     MatrixMN<N, DimMinimum<R, C>, C>, PermutationSequence<DimMinimum<R, C>>)\nwhere DefaultAllocator: Allocator<N, R, DimMinimum<R, C>> +\nAllocator<N, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" The two matrices of this decomposition and the row and column permutations: `(P, L, U, Q)`.\n","sig":null,"attributes":[{"value":"/ The two matrices of this decomposition and the row and column permutations: `(P, L, U, Q)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1178938,"byte_end":1179033,"line_start":132,"line_end":132,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1179038,"byte_end":1179047,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11118},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1179893,"byte_end":1179898,"line_start":162,"line_end":162,"column_start":12,"column_end":17},"name":"solve","qualname":"<FullPivLU<N, D, D>>::solve","value":"pub fn solve<R2: Dim, C2: Dim, S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> Option<MatrixMN<N, R2, C2>> where S2: Storage<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>,\nDefaultAllocator: Allocator<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1179719,"byte_end":1179806,"line_start":159,"line_end":159,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1179811,"byte_end":1179814,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the decomposed matrix is not invertible.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1179819,"byte_end":1179881,"line_start":161,"line_end":161,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":11122},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1180548,"byte_end":1180557,"line_start":183,"line_end":183,"column_start":12,"column_end":21},"name":"solve_mut","qualname":"<FullPivLU<N, D, D>>::solve_mut","value":"pub fn solve_mut<R2: Dim, C2: Dim, S2>(&Self, &mut Matrix<N, R2, C2, S2>)\n-> bool where S2: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1180309,"byte_end":1180396,"line_start":179,"line_end":179,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1180401,"byte_end":1180404,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ If the decomposed matrix is not invertible, this returns `false` and its input `b` may","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1180409,"byte_end":1180499,"line_start":181,"line_end":181,"column_start":5,"column_end":95}},{"value":"/ be overwritten with garbage.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1180504,"byte_end":1180536,"line_start":182,"line_end":182,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":11126},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1181456,"byte_end":1181467,"line_start":213,"line_end":213,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<FullPivLU<N, D, D>>::try_inverse","value":"pub fn try_inverse(&Self) -> Option<MatrixN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse of the decomposed matrix.","sig":null,"attributes":[{"value":"/ Computes the inverse of the decomposed matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1181319,"byte_end":1181369,"line_start":210,"line_end":210,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1181374,"byte_end":1181377,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the decomposed matrix is not invertible.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1181382,"byte_end":1181444,"line_start":212,"line_end":212,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":11127},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1181946,"byte_end":1181959,"line_start":230,"line_end":230,"column_start":12,"column_end":25},"name":"is_invertible","qualname":"<FullPivLU<N, D, D>>::is_invertible","value":"pub fn is_invertible(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if the decomposed matrix is invertible.\n","sig":null,"attributes":[{"value":"/ Indicates if the decomposed matrix is invertible.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1181881,"byte_end":1181934,"line_start":229,"line_end":229,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":11128},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1182280,"byte_end":1182291,"line_start":241,"line_end":241,"column_start":12,"column_end":23},"name":"determinant","qualname":"<FullPivLU<N, D, D>>::determinant","value":"pub fn determinant(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Computes the determinant of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ Computes the determinant of the decomposed matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1182214,"byte_end":1182268,"line_start":240,"line_end":240,"column_start":5,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":11129},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"givens","qualname":"::linalg::givens","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","parent":null,"children":[{"krate":0,"index":11130},{"krate":0,"index":11131},{"krate":0,"index":11134},{"krate":0,"index":11137},{"krate":0,"index":11140},{"krate":0,"index":11141},{"krate":0,"index":11144},{"krate":0,"index":11145},{"krate":0,"index":11147},{"krate":0,"index":11148},{"krate":0,"index":11151},{"krate":0,"index":11152},{"krate":0,"index":11154},{"krate":0,"index":11155},{"krate":0,"index":11158},{"krate":0,"index":11161},{"krate":0,"index":11162},{"krate":0,"index":11165},{"krate":0,"index":25186},{"krate":0,"index":25190},{"krate":0,"index":25193},{"krate":0,"index":25196},{"krate":0,"index":11168}],"decl_id":null,"docs":" Construction of givens rotations.\n","sig":null,"attributes":[{"value":"/ Construction of givens rotations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1182812,"byte_end":1182849,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":25186},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1183150,"byte_end":1183164,"line_start":13,"line_end":13,"column_start":12,"column_end":26},"name":"GivensRotation","qualname":"::linalg::givens::GivensRotation","value":"GivensRotation {  }","parent":null,"children":[{"krate":0,"index":25188},{"krate":0,"index":25189}],"decl_id":null,"docs":" A Givens rotation.\n","sig":null,"attributes":[{"value":"/ A Givens rotation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1183086,"byte_end":1183108,"line_start":11,"line_end":11,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":11170},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1183352,"byte_end":1183360,"line_start":21,"line_end":21,"column_start":12,"column_end":20},"name":"identity","qualname":"<GivensRotation<N>>::identity","value":"pub fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" The Givents rotation that does nothing.\n","sig":null,"attributes":[{"value":"/ The Givents rotation that does nothing.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1183297,"byte_end":1183340,"line_start":20,"line_end":20,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":11171},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1183669,"byte_end":1183682,"line_start":32,"line_end":32,"column_start":12,"column_end":25},"name":"new_unchecked","qualname":"<GivensRotation<N>>::new_unchecked","value":"pub fn new_unchecked(N::RealField, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initializes a Givens rotation from its components.","sig":null,"attributes":[{"value":"/ Initializes a Givens rotation from its components.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1183471,"byte_end":1183525,"line_start":28,"line_end":28,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1183530,"byte_end":1183533,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ The components are copies as-is. It is not checked whether they describe","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1183538,"byte_end":1183614,"line_start":30,"line_end":30,"column_start":5,"column_end":81}},{"value":"/ an actually valid Givens rotation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1183619,"byte_end":1183657,"line_start":31,"line_end":31,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":11172},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1183845,"byte_end":1183848,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<GivensRotation<N>>::new","value":"pub fn new(N, N) -> (Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Initializes a Givens rotation from its non-normalized cosine an sine components.\n","sig":null,"attributes":[{"value":"/ Initializes a Givens rotation from its non-normalized cosine an sine components.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1183749,"byte_end":1183833,"line_start":36,"line_end":36,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":11174},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1184105,"byte_end":1184112,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"try_new","qualname":"<GivensRotation<N>>::try_new","value":"pub fn try_new(N, N, N::RealField) -> Option<(Self, N)>","parent":null,"children":[],"decl_id":null,"docs":" Initializes a Givens rotation form its non-normalized cosine an sine components.\n","sig":null,"attributes":[{"value":"/ Initializes a Givens rotation form its non-normalized cosine an sine components.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1184009,"byte_end":1184093,"line_start":42,"line_end":42,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":11175},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1184811,"byte_end":1184819,"line_start":61,"line_end":61,"column_start":12,"column_end":20},"name":"cancel_y","qualname":"<GivensRotation<N>>::cancel_y","value":"pub fn cancel_y<S: Storage<N, U2>>(&Vector<N, U2, S>) -> Option<(Self, N)>","parent":null,"children":[],"decl_id":null,"docs":" Computes the rotation `R` required such that the `y` component of `R * v` is zero.","sig":null,"attributes":[{"value":"/ Computes the rotation `R` required such that the `y` component of `R * v` is zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1184499,"byte_end":1184585,"line_start":57,"line_end":57,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1184590,"byte_end":1184593,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if no rotation is needed (i.e. if `v.y == 0`). Otherwise, this returns the norm","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1184598,"byte_end":1184696,"line_start":59,"line_end":59,"column_start":5,"column_end":103}},{"value":"/ of `v` and the rotation `r` such that `R * v = [ |v|, 0.0 ]^t` where `|v|` is the norm of `v`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1184701,"byte_end":1184799,"line_start":60,"line_end":60,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":11177},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1185557,"byte_end":1185565,"line_start":78,"line_end":78,"column_start":12,"column_end":20},"name":"cancel_x","qualname":"<GivensRotation<N>>::cancel_x","value":"pub fn cancel_x<S: Storage<N, U2>>(&Vector<N, U2, S>) -> Option<(Self, N)>","parent":null,"children":[],"decl_id":null,"docs":" Computes the rotation `R` required such that the `x` component of `R * v` is zero.","sig":null,"attributes":[{"value":"/ Computes the rotation `R` required such that the `x` component of `R * v` is zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1185245,"byte_end":1185331,"line_start":74,"line_end":74,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1185336,"byte_end":1185339,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if no rotation is needed (i.e. if `v.x == 0`). Otherwise, this returns the norm","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1185344,"byte_end":1185442,"line_start":76,"line_end":76,"column_start":5,"column_end":103}},{"value":"/ of `v` and the rotation `r` such that `R * v = [ 0.0, |v| ]^t` where `|v|` is the norm of `v`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1185447,"byte_end":1185545,"line_start":77,"line_end":77,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":11179},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1186052,"byte_end":1186053,"line_start":92,"line_end":92,"column_start":12,"column_end":13},"name":"c","qualname":"<GivensRotation<N>>::c","value":"pub fn c(&Self) -> N::RealField","parent":null,"children":[],"decl_id":null,"docs":" The cos part of this roration.\n","sig":null,"attributes":[{"value":"/ The cos part of this roration.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1186006,"byte_end":1186040,"line_start":91,"line_end":91,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":11180},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1186151,"byte_end":1186152,"line_start":97,"line_end":97,"column_start":12,"column_end":13},"name":"s","qualname":"<GivensRotation<N>>::s","value":"pub fn s(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The sin part of this roration.\n","sig":null,"attributes":[{"value":"/ The sin part of this roration.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1186105,"byte_end":1186139,"line_start":96,"line_end":96,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":11181},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1186245,"byte_end":1186252,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"inverse","qualname":"<GivensRotation<N>>::inverse","value":"pub fn inverse(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The inverse of this givens rotation.\n","sig":null,"attributes":[{"value":"/ The inverse of this givens rotation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1186193,"byte_end":1186233,"line_start":101,"line_end":101,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":11182},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1186425,"byte_end":1186431,"line_start":110,"line_end":110,"column_start":12,"column_end":18},"name":"rotate","qualname":"<GivensRotation<N>>::rotate","value":"pub fn rotate<R2: Dim, C2: Dim,\n              S2: StorageMut<N, R2, C2>>(&Self, &mut Matrix<N, R2, C2, S2>)\nwhere ShapeConstraint: DimEq<R2, U2>","parent":null,"children":[],"decl_id":null,"docs":" Performs the multiplication `rhs = self * rhs` in-place.\n","sig":null,"attributes":[{"value":"/ Performs the multiplication `rhs = self * rhs` in-place.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1186353,"byte_end":1186413,"line_start":109,"line_end":109,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":11186},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1187211,"byte_end":1187222,"line_start":136,"line_end":136,"column_start":12,"column_end":23},"name":"rotate_rows","qualname":"<GivensRotation<N>>::rotate_rows","value":"pub fn rotate_rows<R2: Dim, C2: Dim,\n                   S2: StorageMut<N, R2,\n                                  C2>>(&Self, &mut Matrix<N, R2, C2, S2>)\nwhere ShapeConstraint: DimEq<C2, U2>","parent":null,"children":[],"decl_id":null,"docs":" Performs the multiplication `lhs = lhs * self` in-place.\n","sig":null,"attributes":[{"value":"/ Performs the multiplication `lhs = lhs * self` in-place.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1187139,"byte_end":1187199,"line_start":135,"line_end":135,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":25198},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/hessenberg.rs","byte_start":1189010,"byte_end":1189020,"line_start":29,"line_end":29,"column_start":12,"column_end":22},"name":"Hessenberg","qualname":"::linalg::hessenberg::Hessenberg","value":"Hessenberg {  }","parent":null,"children":[{"krate":0,"index":25201},{"krate":0,"index":25202}],"decl_id":null,"docs":" Hessenberg decomposition of a general matrix.\n","sig":null,"attributes":[{"value":"/ Hessenberg decomposition of a general matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/hessenberg.rs","byte_start":1188320,"byte_end":1188369,"line_start":12,"line_end":12,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":11232},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/hessenberg.rs","byte_start":1189654,"byte_end":1189657,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"new","qualname":"<Hessenberg<N, D>>::new","value":"pub fn new(MatrixN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the Hessenberg decomposition using householder reflections.\n","sig":null,"attributes":[{"value":"/ Computes the Hessenberg decomposition using householder reflections.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/hessenberg.rs","byte_start":1189570,"byte_end":1189642,"line_start":49,"line_end":49,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":11233},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/hessenberg.rs","byte_start":1190058,"byte_end":1190076,"line_start":59,"line_end":59,"column_start":12,"column_end":30},"name":"new_with_workspace","qualname":"<Hessenberg<N, D>>::new_with_workspace","value":"pub fn new_with_workspace(MatrixN<N, D>, &mut VectorN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the Hessenberg decomposition using householder reflections.","sig":null,"attributes":[{"value":"/ Computes the Hessenberg decomposition using householder reflections.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/hessenberg.rs","byte_start":1189846,"byte_end":1189918,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/hessenberg.rs","byte_start":1189923,"byte_end":1189926,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The workspace containing `D` elements must be provided but its content does not have to be","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/hessenberg.rs","byte_start":1189931,"byte_end":1190025,"line_start":57,"line_end":57,"column_start":5,"column_end":99}},{"value":"/ initialized.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/hessenberg.rs","byte_start":1190030,"byte_end":1190046,"line_start":58,"line_end":58,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":11234},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/hessenberg.rs","byte_start":1191107,"byte_end":1191113,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"name":"unpack","qualname":"<Hessenberg<N, D>>::unpack","value":"pub fn unpack(Self) -> (MatrixN<N, D>, MatrixN<N, D>)","parent":null,"children":[],"decl_id":null,"docs":" Retrieves `(q, h)` with `q` the orthogonal matrix of this decomposition and `h` the\n hessenberg matrix.\n","sig":null,"attributes":[{"value":"/ Retrieves `(q, h)` with `q` the orthogonal matrix of this decomposition and `h` the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/hessenberg.rs","byte_start":1190967,"byte_end":1191054,"line_start":90,"line_end":90,"column_start":5,"column_end":92}},{"value":"/ hessenberg matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/hessenberg.rs","byte_start":1191059,"byte_end":1191081,"line_start":91,"line_end":91,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/hessenberg.rs","byte_start":1191086,"byte_end":1191095,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11235},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/hessenberg.rs","byte_start":1191321,"byte_end":1191329,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"unpack_h","qualname":"<Hessenberg<N, D>>::unpack_h","value":"pub fn unpack_h(Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the upper trapezoidal submatrix `H` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Retrieves the upper trapezoidal submatrix `H` of this decomposition.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/hessenberg.rs","byte_start":1191223,"byte_end":1191295,"line_start":99,"line_end":99,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/hessenberg.rs","byte_start":1191300,"byte_end":1191309,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11237},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/hessenberg.rs","byte_start":1191869,"byte_end":1191870,"line_start":115,"line_end":115,"column_start":12,"column_end":13},"name":"h","qualname":"<Hessenberg<N, D>>::h","value":"pub fn h(&Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the upper trapezoidal submatrix `H` of this decomposition.","sig":null,"attributes":[{"value":"/ Retrieves the upper trapezoidal submatrix `H` of this decomposition.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/hessenberg.rs","byte_start":1191683,"byte_end":1191755,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/hessenberg.rs","byte_start":1191760,"byte_end":1191763,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ This is less efficient than `.unpack_h()` as it allocates a new matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/hessenberg.rs","byte_start":1191768,"byte_end":1191843,"line_start":113,"line_end":113,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/hessenberg.rs","byte_start":1191848,"byte_end":1191857,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11239},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/hessenberg.rs","byte_start":1192259,"byte_end":1192260,"line_start":125,"line_end":125,"column_start":12,"column_end":13},"name":"q","qualname":"<Hessenberg<N, D>>::q","value":"pub fn q(&Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal matrix `Q` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal matrix `Q` of this decomposition.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/hessenberg.rs","byte_start":1192186,"byte_end":1192247,"line_start":124,"line_end":124,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":11240},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/hessenberg.rs","byte_start":1192393,"byte_end":1192406,"line_start":130,"line_end":130,"column_start":12,"column_end":25},"name":"hess_internal","qualname":"<Hessenberg<N, D>>::hess_internal","value":"pub fn hess_internal(&Self) -> &MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":11241},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/householder.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"householder","qualname":"::linalg::householder","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/householder.rs","parent":null,"children":[{"krate":0,"index":11242},{"krate":0,"index":11245},{"krate":0,"index":11246},{"krate":0,"index":11247},{"krate":0,"index":11249},{"krate":0,"index":11252},{"krate":0,"index":11255},{"krate":0,"index":11258},{"krate":0,"index":11261},{"krate":0,"index":11264},{"krate":0,"index":11267},{"krate":0,"index":11268},{"krate":0,"index":11271},{"krate":0,"index":11274},{"krate":0,"index":11277},{"krate":0,"index":11280},{"krate":0,"index":11283},{"krate":0,"index":11287},{"krate":0,"index":11291},{"krate":0,"index":11295}],"decl_id":null,"docs":" Construction of householder elementary reflections.\n","sig":null,"attributes":[{"value":"/ Construction of householder elementary reflections.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/householder.rs","byte_start":1192462,"byte_end":1192517,"line_start":1,"line_end":1,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":11283},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/householder.rs","byte_start":1193121,"byte_end":1193140,"line_start":19,"line_end":19,"column_start":8,"column_end":27},"name":"reflection_axis_mut","qualname":"::linalg::householder::reflection_axis_mut","value":"pub fn reflection_axis_mut<N: ComplexField, D: Dim,\n                           S: StorageMut<N, D>>(&mut Vector<N, D, S>)\n-> (N, bool)","parent":null,"children":[],"decl_id":null,"docs":" Replaces `column` by the axis of the householder reflection that transforms `column` into\n `(+/-|column|, 0, ..., 0)`.","sig":null,"attributes":[{"value":"/ Replaces `column` by the axis of the householder reflection that transforms `column` into","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/householder.rs","byte_start":1192784,"byte_end":1192877,"line_start":12,"line_end":12,"column_start":1,"column_end":94}},{"value":"/ `(+/-|column|, 0, ..., 0)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/householder.rs","byte_start":1192878,"byte_end":1192909,"line_start":13,"line_end":13,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/householder.rs","byte_start":1192910,"byte_end":1192913,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The unit-length axis is output to `column`. Returns what would be the first component of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/householder.rs","byte_start":1192914,"byte_end":1193006,"line_start":15,"line_end":15,"column_start":1,"column_end":93}},{"value":"/ `column` after reflection and `false` if no reflection was necessary.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/householder.rs","byte_start":1193007,"byte_end":1193080,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"inline(always)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/householder.rs","byte_start":1193096,"byte_end":1193113,"line_start":18,"line_end":18,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":11287},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/householder.rs","byte_start":1194021,"byte_end":1194043,"line_start":47,"line_end":47,"column_start":8,"column_end":30},"name":"clear_column_unchecked","qualname":"::linalg::householder::clear_column_unchecked","value":"pub fn clear_column_unchecked<N: ComplexField, R: Dim,\n                              C: Dim>(&mut MatrixMN<N, R, C>, &mut N, usize,\n                                      usize, Option<&mut VectorN<N, R>>) where\nDefaultAllocator: Allocator<N, R, C> + Allocator<N, R>","parent":null,"children":[],"decl_id":null,"docs":" Uses an householder reflection to zero out the `icol`-th column, starting with the `shift + 1`-th\n subdiagonal element.\n","sig":null,"attributes":[{"value":"/ Uses an householder reflection to zero out the `icol`-th column, starting with the `shift + 1`-th","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/householder.rs","byte_start":1193872,"byte_end":1193973,"line_start":44,"line_end":44,"column_start":1,"column_end":102}},{"value":"/ subdiagonal element.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/householder.rs","byte_start":1193974,"byte_end":1193998,"line_start":45,"line_end":45,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":11291},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/householder.rs","byte_start":1195037,"byte_end":1195056,"line_start":75,"line_end":75,"column_start":8,"column_end":27},"name":"clear_row_unchecked","qualname":"::linalg::householder::clear_row_unchecked","value":"pub fn clear_row_unchecked<N: ComplexField, R: Dim,\n                           C: Dim>(&mut MatrixMN<N, R, C>, &mut N,\n                                   &mut VectorN<N, C>, &mut VectorN<N, R>,\n                                   usize, usize) where\nDefaultAllocator: Allocator<N, R, C> + Allocator<N, R> + Allocator<N, C>","parent":null,"children":[],"decl_id":null,"docs":" Uses an householder reflection to zero out the `irow`-th row, ending before the `shift + 1`-th\n superdiagonal element.\n","sig":null,"attributes":[{"value":"/ Uses an householder reflection to zero out the `irow`-th row, ending before the `shift + 1`-th","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/householder.rs","byte_start":1194889,"byte_end":1194987,"line_start":72,"line_end":72,"column_start":1,"column_end":99}},{"value":"/ superdiagonal element.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/householder.rs","byte_start":1194988,"byte_end":1195014,"line_start":73,"line_end":73,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":11295},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/householder.rs","byte_start":1196385,"byte_end":1196395,"line_start":111,"line_end":111,"column_start":8,"column_end":18},"name":"assemble_q","qualname":"::linalg::householder::assemble_q","value":"pub fn assemble_q<N: ComplexField, D: Dim>(&MatrixN<N, D>, &[N])\n-> MatrixN<N, D> where DefaultAllocator: Allocator<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal transformation described by the elementary reflector axii stored on\n the lower-diagonal element of the given matrix.\n matrices.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal transformation described by the elementary reflector axii stored on","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/householder.rs","byte_start":1196201,"byte_end":1196296,"line_start":107,"line_end":107,"column_start":1,"column_end":96}},{"value":"/ the lower-diagonal element of the given matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/householder.rs","byte_start":1196297,"byte_end":1196348,"line_start":108,"line_end":108,"column_start":1,"column_end":52}},{"value":"/ matrices.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/householder.rs","byte_start":1196349,"byte_end":1196362,"line_start":109,"line_end":109,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11332},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/inverse.rs","byte_start":1197530,"byte_end":1197541,"line_start":14,"line_end":14,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<SquareMatrix<N, D, S>>::try_inverse","value":"pub fn try_inverse(Self) -> Option<MatrixN<N, D>> where\nDefaultAllocator: Allocator<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to invert this matrix.\n","sig":null,"attributes":[{"value":"/ Attempts to invert this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/inverse.rs","byte_start":1197410,"byte_end":1197445,"line_start":11,"line_end":11,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/inverse.rs","byte_start":1197450,"byte_end":1197459,"line_start":12,"line_end":12,"column_start":5,"column_end":14}},{"value":"must_use = \"Did you mean to use try_inverse_mut()?\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/inverse.rs","byte_start":1197464,"byte_end":1197518,"line_start":13,"line_end":13,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":11337},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/inverse.rs","byte_start":1198007,"byte_end":1198022,"line_start":31,"line_end":31,"column_start":12,"column_end":27},"name":"try_inverse_mut","qualname":"<SquareMatrix<N, D, S>>::try_inverse_mut","value":"pub fn try_inverse_mut(&mut Self) -> bool where\nDefaultAllocator: Allocator<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to invert this matrix in-place. Returns `false` and leaves `self` untouched if\n inversion fails.\n","sig":null,"attributes":[{"value":"/ Attempts to invert this matrix in-place. Returns `false` and leaves `self` untouched if","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/inverse.rs","byte_start":1197865,"byte_end":1197956,"line_start":28,"line_end":28,"column_start":5,"column_end":96}},{"value":"/ inversion fails.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/inverse.rs","byte_start":1197961,"byte_end":1197981,"line_start":29,"line_end":29,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/inverse.rs","byte_start":1197986,"byte_end":1197995,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":25211},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1206291,"byte_end":1206293,"line_start":31,"line_end":31,"column_start":12,"column_end":14},"name":"LU","qualname":"::linalg::lu::LU","value":"LU {  }","parent":null,"children":[{"krate":0,"index":25215},{"krate":0,"index":25216}],"decl_id":null,"docs":" LU decomposition with partial (row) pivoting.\n","sig":null,"attributes":[{"value":"/ LU decomposition with partial (row) pivoting.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1205541,"byte_end":1205590,"line_start":14,"line_end":14,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":11407},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1206930,"byte_end":1206943,"line_start":50,"line_end":50,"column_start":8,"column_end":21},"name":"try_invert_to","qualname":"::linalg::lu::try_invert_to","value":"pub fn try_invert_to<N: ComplexField, D: Dim,\n                     S>(MatrixN<N, D>, &mut Matrix<N, D, D, S>) -> bool where\nS: StorageMut<N, D, D>, DefaultAllocator: Allocator<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" Performs a LU decomposition to overwrite `out` with the inverse of `matrix`.","sig":null,"attributes":[{"value":"/ Performs a LU decomposition to overwrite `out` with the inverse of `matrix`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1206747,"byte_end":1206827,"line_start":47,"line_end":47,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1206828,"byte_end":1206831,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ If `matrix` is not invertible, `false` is returned and `out` may contain invalid data.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1206832,"byte_end":1206922,"line_start":49,"line_end":49,"column_start":1,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":11415},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1208097,"byte_end":1208100,"line_start":92,"line_end":92,"column_start":12,"column_end":15},"name":"new","qualname":"<LU<N, R, C>>::new","value":"pub fn new(MatrixMN<N, R, C>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the LU decomposition with partial (row) pivoting of `matrix`.\n","sig":null,"attributes":[{"value":"/ Computes the LU decomposition with partial (row) pivoting of `matrix`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1208011,"byte_end":1208085,"line_start":91,"line_end":91,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":11416},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1209050,"byte_end":1209061,"line_start":124,"line_end":124,"column_start":12,"column_end":23},"name":"lu_internal","qualname":"<LU<N, R, C>>::lu_internal","value":"pub fn lu_internal(&Self) -> &MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11417},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1209201,"byte_end":1209202,"line_start":130,"line_end":130,"column_start":12,"column_end":13},"name":"l","qualname":"<LU<N, R, C>>::l","value":"pub fn l(&Self) -> MatrixMN<N, R, DimMinimum<R, C>> where\nDefaultAllocator: Allocator<N, R, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The lower triangular matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ The lower triangular matrix of this decomposition.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1209121,"byte_end":1209175,"line_start":128,"line_end":128,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1209180,"byte_end":1209189,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11419},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1210160,"byte_end":1210168,"line_start":160,"line_end":160,"column_start":12,"column_end":20},"name":"l_unpack","qualname":"<LU<N, R, C>>::l_unpack","value":"pub fn l_unpack(Self) -> MatrixMN<N, R, DimMinimum<R, C>> where\nDefaultAllocator: Reallocator<N, R, C, R, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The lower triangular matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ The lower triangular matrix of this decomposition.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1210080,"byte_end":1210134,"line_start":158,"line_end":158,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1210139,"byte_end":1210148,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11420},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1210608,"byte_end":1210609,"line_start":173,"line_end":173,"column_start":12,"column_end":13},"name":"u","qualname":"<LU<N, R, C>>::u","value":"pub fn u(&Self) -> MatrixMN<N, DimMinimum<R, C>, C> where\nDefaultAllocator: Allocator<N, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" The upper triangular matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ The upper triangular matrix of this decomposition.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1210528,"byte_end":1210582,"line_start":171,"line_end":171,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1210587,"byte_end":1210596,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11421},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1210932,"byte_end":1210933,"line_start":183,"line_end":183,"column_start":12,"column_end":13},"name":"p","qualname":"<LU<N, R, C>>::p","value":"pub fn p(&Self) -> &PermutationSequence<DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The row permutations of this decomposition.\n","sig":null,"attributes":[{"value":"/ The row permutations of this decomposition.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1210859,"byte_end":1210906,"line_start":181,"line_end":181,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1210911,"byte_end":1210920,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11422},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1211126,"byte_end":1211132,"line_start":189,"line_end":189,"column_start":12,"column_end":18},"name":"unpack","qualname":"<LU<N, R, C>>::unpack","value":"pub fn unpack(Self)\n->\n    (PermutationSequence<DimMinimum<R, C>>, MatrixMN<N, R, DimMinimum<R, C>>,\n     MatrixMN<N, DimMinimum<R, C>, C>) where\nDefaultAllocator: Allocator<N, R, DimMinimum<R, C>> +\nAllocator<N, DimMinimum<R, C>, C> + Reallocator<N, R, C, R, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The row permutations and two triangular matrices of this decomposition: `(P, L, U)`.\n","sig":null,"attributes":[{"value":"/ The row permutations and two triangular matrices of this decomposition: `(P, L, U)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1211012,"byte_end":1211100,"line_start":187,"line_end":187,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1211105,"byte_end":1211114,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11426},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1211927,"byte_end":1211932,"line_start":216,"line_end":216,"column_start":12,"column_end":17},"name":"solve","qualname":"<LU<N, D, D>>::solve","value":"pub fn solve<R2: Dim, C2: Dim, S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> Option<MatrixMN<N, R2, C2>> where S2: Storage<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>,\nDefaultAllocator: Allocator<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1211768,"byte_end":1211855,"line_start":213,"line_end":213,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1211860,"byte_end":1211863,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `self` is not invertible.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1211868,"byte_end":1211915,"line_start":215,"line_end":215,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":11430},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1212582,"byte_end":1212591,"line_start":237,"line_end":237,"column_start":12,"column_end":21},"name":"solve_mut","qualname":"<LU<N, D, D>>::solve_mut","value":"pub fn solve_mut<R2: Dim, C2: Dim, S2>(&Self, &mut Matrix<N, R2, C2, S2>)\n-> bool where S2: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1212343,"byte_end":1212430,"line_start":233,"line_end":233,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1212435,"byte_end":1212438,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ If the decomposed matrix is not invertible, this returns `false` and its input `b` may","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1212443,"byte_end":1212533,"line_start":235,"line_end":235,"column_start":5,"column_end":95}},{"value":"/ be overwritten with garbage.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1212538,"byte_end":1212570,"line_start":236,"line_end":236,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":11434},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1213307,"byte_end":1213318,"line_start":260,"line_end":260,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<LU<N, D, D>>::try_inverse","value":"pub fn try_inverse(&Self) -> Option<MatrixN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse of the decomposed matrix.","sig":null,"attributes":[{"value":"/ Computes the inverse of the decomposed matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1213181,"byte_end":1213231,"line_start":257,"line_end":257,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1213236,"byte_end":1213239,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the matrix is not invertible.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1213244,"byte_end":1213295,"line_start":259,"line_end":259,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":11435},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1213955,"byte_end":1213969,"line_start":279,"line_end":279,"column_start":12,"column_end":26},"name":"try_inverse_to","qualname":"<LU<N, D, D>>::try_inverse_to","value":"pub fn try_inverse_to<S2: StorageMut<N, D,\n                                     D>>(&Self, &mut Matrix<N, D, D, S2>)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse of the decomposed matrix and outputs the result to `out`.","sig":null,"attributes":[{"value":"/ Computes the inverse of the decomposed matrix and outputs the result to `out`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1213729,"byte_end":1213811,"line_start":275,"line_end":275,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1213816,"byte_end":1213819,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ If the decomposed matrix is not invertible, this returns `false` and `out` may be","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1213824,"byte_end":1213909,"line_start":277,"line_end":277,"column_start":5,"column_end":90}},{"value":"/ overwritten with garbage.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1213914,"byte_end":1213943,"line_start":278,"line_end":278,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":11437},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1214447,"byte_end":1214458,"line_start":294,"line_end":294,"column_start":12,"column_end":23},"name":"determinant","qualname":"<LU<N, D, D>>::determinant","value":"pub fn determinant(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Computes the determinant of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ Computes the determinant of the decomposed matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1214381,"byte_end":1214435,"line_start":293,"line_end":293,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":11438},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1214900,"byte_end":1214913,"line_start":310,"line_end":310,"column_start":12,"column_end":25},"name":"is_invertible","qualname":"<LU<N, D, D>>::is_invertible","value":"pub fn is_invertible(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if the decomposed matrix is invertible.\n","sig":null,"attributes":[{"value":"/ Indicates if the decomposed matrix is invertible.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1214835,"byte_end":1214888,"line_start":309,"line_end":309,"column_start":5,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":11439},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1215401,"byte_end":1215411,"line_start":329,"line_end":329,"column_start":8,"column_end":18},"name":"gauss_step","qualname":"::linalg::lu::gauss_step","value":"pub fn gauss_step<N, R: Dim, C: Dim, S>(&mut Matrix<N, R, C, S>, N, usize)\nwhere N: Scalar + Field, S: StorageMut<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Executes one step of gaussian elimination on the i-th row and column of `matrix`. The diagonal\n element `matrix[(i, i)]` is provided as argument.\n","sig":null,"attributes":[{"value":"/ Executes one step of gaussian elimination on the i-th row and column of `matrix`. The diagonal","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1215241,"byte_end":1215339,"line_start":327,"line_end":327,"column_start":1,"column_end":99}},{"value":"/ element `matrix[(i, i)]` is provided as argument.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1215340,"byte_end":1215393,"line_start":328,"line_end":328,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":11444},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1216214,"byte_end":1216229,"line_start":354,"line_end":354,"column_start":8,"column_end":23},"name":"gauss_step_swap","qualname":"::linalg::lu::gauss_step_swap","value":"pub fn gauss_step_swap<N, R: Dim, C: Dim,\n                       S>(&mut Matrix<N, R, C, S>, N, usize, usize) where\nN: Scalar + Field, S: StorageMut<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Swaps the rows `i` with the row `piv` and executes one step of gaussian elimination on the i-th\n row and column of `matrix`. The diagonal element `matrix[(i, i)]` is provided as argument.\n","sig":null,"attributes":[{"value":"/ Swaps the rows `i` with the row `piv` and executes one step of gaussian elimination on the i-th","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1216012,"byte_end":1216111,"line_start":352,"line_end":352,"column_start":1,"column_end":100}},{"value":"/ row and column of `matrix`. The diagonal element `matrix[(i, i)]` is provided as argument.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1216112,"byte_end":1216206,"line_start":353,"line_end":353,"column_start":1,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":25227},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1217852,"byte_end":1217871,"line_start":27,"line_end":27,"column_start":12,"column_end":31},"name":"PermutationSequence","qualname":"::linalg::permutation_sequence::PermutationSequence","value":"PermutationSequence {  }","parent":null,"children":[{"krate":0,"index":25229},{"krate":0,"index":25230}],"decl_id":null,"docs":" A sequence of row or column permutations.\n","sig":null,"attributes":[{"value":"/ A sequence of row or column permutations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1217339,"byte_end":1217384,"line_start":14,"line_end":14,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":11492},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1218350,"byte_end":1218358,"line_start":48,"line_end":48,"column_start":12,"column_end":20},"name":"identity","qualname":"<PermutationSequence<D>>::identity","value":"pub fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new statically-allocated sequence of `D` identity permutations.\n","sig":null,"attributes":[{"value":"/ Creates a new statically-allocated sequence of `D` identity permutations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1218247,"byte_end":1218324,"line_start":46,"line_end":46,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1218329,"byte_end":1218338,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11494},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1218678,"byte_end":1218686,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"identity","qualname":"<PermutationSequence<Dynamic>>::identity","value":"pub fn identity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new dynamically-allocated sequence of `n` identity permutations.\n","sig":null,"attributes":[{"value":"/ Creates a new dynamically-allocated sequence of `n` identity permutations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1218574,"byte_end":1218652,"line_start":58,"line_end":58,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1218657,"byte_end":1218666,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11497},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1218944,"byte_end":1218960,"line_start":71,"line_end":71,"column_start":12,"column_end":28},"name":"identity_generic","qualname":"<PermutationSequence<D>>::identity_generic","value":"pub fn identity_generic(D) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new sequence of D identity permutations.\n","sig":null,"attributes":[{"value":"/ Creates a new sequence of D identity permutations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1218864,"byte_end":1218918,"line_start":69,"line_end":69,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1218923,"byte_end":1218932,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11498},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1219290,"byte_end":1219308,"line_start":83,"line_end":83,"column_start":12,"column_end":30},"name":"append_permutation","qualname":"<PermutationSequence<D>>::append_permutation","value":"pub fn append_permutation(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds the interchange of the row (or column) `i` with the row (or column) `i2` to this\n sequence of permutations.\n","sig":null,"attributes":[{"value":"/ Adds the interchange of the row (or column) `i` with the row (or column) `i2` to this","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1219141,"byte_end":1219230,"line_start":80,"line_end":80,"column_start":5,"column_end":94}},{"value":"/ sequence of permutations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1219235,"byte_end":1219264,"line_start":81,"line_end":81,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1219269,"byte_end":1219278,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11499},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1219683,"byte_end":1219695,"line_start":96,"line_end":96,"column_start":12,"column_end":24},"name":"permute_rows","qualname":"<PermutationSequence<D>>::permute_rows","value":"pub fn permute_rows<N: Scalar, R2: Dim, C2: Dim,\n                    S2>(&Self, &mut Matrix<N, R2, C2, S2>) where\nS2: StorageMut<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Applies this sequence of permutations to the rows of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies this sequence of permutations to the rows of `rhs`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1219594,"byte_end":1219657,"line_start":94,"line_end":94,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1219662,"byte_end":1219671,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11504},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1220036,"byte_end":1220052,"line_start":107,"line_end":107,"column_start":12,"column_end":28},"name":"inv_permute_rows","qualname":"<PermutationSequence<D>>::inv_permute_rows","value":"pub fn inv_permute_rows<N: Scalar, R2: Dim, C2: Dim,\n                        S2>(&Self, &mut Matrix<N, R2, C2, S2>) where\nS2: StorageMut<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Applies this sequence of permutations in reverse to the rows of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies this sequence of permutations in reverse to the rows of `rhs`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1219936,"byte_end":1220010,"line_start":105,"line_end":105,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1220015,"byte_end":1220024,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11509},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1220411,"byte_end":1220426,"line_start":119,"line_end":119,"column_start":12,"column_end":27},"name":"permute_columns","qualname":"<PermutationSequence<D>>::permute_columns","value":"pub fn permute_columns<N: Scalar, R2: Dim, C2: Dim,\n                       S2>(&Self, &mut Matrix<N, R2, C2, S2>) where\nS2: StorageMut<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Applies this sequence of permutations to the columns of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies this sequence of permutations to the columns of `rhs`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1220319,"byte_end":1220385,"line_start":117,"line_end":117,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1220390,"byte_end":1220399,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11514},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1220773,"byte_end":1220792,"line_start":130,"line_end":130,"column_start":12,"column_end":31},"name":"inv_permute_columns","qualname":"<PermutationSequence<D>>::inv_permute_columns","value":"pub fn inv_permute_columns<N: Scalar, R2: Dim, C2: Dim,\n                           S2>(&Self, &mut Matrix<N, R2, C2, S2>) where\nS2: StorageMut<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Applies this sequence of permutations in reverse to the columns of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies this sequence of permutations in reverse to the columns of `rhs`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1220670,"byte_end":1220747,"line_start":128,"line_end":128,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1220752,"byte_end":1220761,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11519},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1221162,"byte_end":1221165,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"len","qualname":"<PermutationSequence<D>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of non-identity permutations applied by this sequence.\n","sig":null,"attributes":[{"value":"/ The number of non-identity permutations applied by this sequence.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1221081,"byte_end":1221150,"line_start":142,"line_end":142,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":11520},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1221290,"byte_end":1221298,"line_start":148,"line_end":148,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<PermutationSequence<D>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the permutation sequence contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns true if the permutation sequence contains no elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1221212,"byte_end":1221278,"line_start":147,"line_end":147,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":11521},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1221445,"byte_end":1221456,"line_start":154,"line_end":154,"column_start":12,"column_end":23},"name":"determinant","qualname":"<PermutationSequence<D>>::determinant","value":"pub fn determinant<N: One + ClosedNeg>(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The determinant of the matrix corresponding to this permutation.\n","sig":null,"attributes":[{"value":"/ The determinant of the matrix corresponding to this permutation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1221351,"byte_end":1221419,"line_start":152,"line_end":152,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1221424,"byte_end":1221433,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":25237},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1222775,"byte_end":1222777,"line_start":32,"line_end":32,"column_start":12,"column_end":14},"name":"QR","qualname":"::linalg::qr::QR","value":"QR {  }","parent":null,"children":[{"krate":0,"index":25241},{"krate":0,"index":25242}],"decl_id":null,"docs":" The QR decomposition of a general matrix.\n","sig":null,"attributes":[{"value":"/ The QR decomposition of a general matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1222073,"byte_end":1222118,"line_start":15,"line_end":15,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":11597},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1223427,"byte_end":1223430,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<QR<N, R, C>>::new","value":"pub fn new(MatrixMN<N, R, C>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the QR decomposition using householder reflections.\n","sig":null,"attributes":[{"value":"/ Computes the QR decomposition using householder reflections.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1223351,"byte_end":1223415,"line_start":52,"line_end":52,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":11598},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1224053,"byte_end":1224054,"line_start":72,"line_end":72,"column_start":12,"column_end":13},"name":"r","qualname":"<QR<N, R, C>>::r","value":"pub fn r(&Self) -> MatrixMN<N, DimMinimum<R, C>, C> where\nDefaultAllocator: Allocator<N, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the upper trapezoidal submatrix `R` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Retrieves the upper trapezoidal submatrix `R` of this decomposition.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1223955,"byte_end":1224027,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1224032,"byte_end":1224041,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11600},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1224585,"byte_end":1224593,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"unpack_r","qualname":"<QR<N, R, C>>::unpack_r","value":"pub fn unpack_r(Self) -> MatrixMN<N, DimMinimum<R, C>, C> where\nDefaultAllocator: Reallocator<N, R, C, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the upper trapezoidal submatrix `R` of this decomposition.","sig":null,"attributes":[{"value":"/ Retrieves the upper trapezoidal submatrix `R` of this decomposition.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1224418,"byte_end":1224490,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1224495,"byte_end":1224498,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ This is usually faster than `r` but consumes `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1224503,"byte_end":1224559,"line_start":84,"line_end":84,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1224564,"byte_end":1224573,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11602},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1225084,"byte_end":1225085,"line_start":98,"line_end":98,"column_start":12,"column_end":13},"name":"q","qualname":"<QR<N, R, C>>::q","value":"pub fn q(&Self) -> MatrixMN<N, R, DimMinimum<R, C>> where\nDefaultAllocator: Allocator<N, R, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal matrix `Q` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal matrix `Q` of this decomposition.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1225011,"byte_end":1225072,"line_start":97,"line_end":97,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":11603},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1225995,"byte_end":1226001,"line_start":122,"line_end":122,"column_start":12,"column_end":18},"name":"unpack","qualname":"<QR<N, R, C>>::unpack","value":"pub fn unpack(Self)\n-> (MatrixMN<N, R, DimMinimum<R, C>>, MatrixMN<N, DimMinimum<R, C>, C>) where\nDimMinimum<R, C>: DimMin<C, Output = DimMinimum<R, C>>,\nDefaultAllocator: Allocator<N, R, DimMinimum<R, C>> +\nReallocator<N, R, C, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" Unpacks this decomposition into its two matrix factors.\n","sig":null,"attributes":[{"value":"/ Unpacks this decomposition into its two matrix factors.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1225924,"byte_end":1225983,"line_start":121,"line_end":121,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":11604},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1226388,"byte_end":1226399,"line_start":137,"line_end":137,"column_start":12,"column_end":23},"name":"qr_internal","qualname":"<QR<N, R, C>>::qr_internal","value":"pub fn qr_internal(&Self) -> &MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11605},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1226563,"byte_end":1226571,"line_start":142,"line_end":142,"column_start":12,"column_end":20},"name":"q_tr_mul","qualname":"<QR<N, R, C>>::q_tr_mul","value":"pub fn q_tr_mul<R2: Dim, C2: Dim, S2>(&Self, &mut Matrix<N, R2, C2, S2>) where\nS2: StorageMut<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Multiplies the provided matrix by the transpose of the `Q` matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ Multiplies the provided matrix by the transpose of the `Q` matrix of this decomposition.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1226459,"byte_end":1226551,"line_start":141,"line_end":141,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":11612},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1227404,"byte_end":1227409,"line_start":166,"line_end":166,"column_start":12,"column_end":17},"name":"solve","qualname":"<QR<N, D, D>>::solve","value":"pub fn solve<R2: Dim, C2: Dim, S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> Option<MatrixMN<N, R2, C2>> where S2: Storage<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>,\nDefaultAllocator: Allocator<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1227245,"byte_end":1227332,"line_start":163,"line_end":163,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1227337,"byte_end":1227340,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `self` is not invertible.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1227345,"byte_end":1227392,"line_start":165,"line_end":165,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":11616},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1228056,"byte_end":1228065,"line_start":188,"line_end":188,"column_start":12,"column_end":21},"name":"solve_mut","qualname":"<QR<N, D, D>>::solve_mut","value":"pub fn solve_mut<R2: Dim, C2: Dim, S2>(&Self, &mut Matrix<N, R2, C2, S2>)\n-> bool where S2: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1227821,"byte_end":1227908,"line_start":184,"line_end":184,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1227913,"byte_end":1227916,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ If the decomposed matrix is not invertible, this returns `false` and its input `b` is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1227921,"byte_end":1228010,"line_start":186,"line_end":186,"column_start":5,"column_end":94}},{"value":"/ overwritten with garbage.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1228015,"byte_end":1228044,"line_start":187,"line_end":187,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":11624},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1229653,"byte_end":1229664,"line_start":245,"line_end":245,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<QR<N, D, D>>::try_inverse","value":"pub fn try_inverse(&Self) -> Option<MatrixN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse of the decomposed matrix.","sig":null,"attributes":[{"value":"/ Computes the inverse of the decomposed matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1229516,"byte_end":1229566,"line_start":242,"line_end":242,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1229571,"byte_end":1229574,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the decomposed matrix is not invertible.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1229579,"byte_end":1229641,"line_start":244,"line_end":244,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":11625},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1230184,"byte_end":1230197,"line_start":263,"line_end":263,"column_start":12,"column_end":25},"name":"is_invertible","qualname":"<QR<N, D, D>>::is_invertible","value":"pub fn is_invertible(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if the decomposed matrix is invertible.\n","sig":null,"attributes":[{"value":"/ Indicates if the decomposed matrix is invertible.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1230119,"byte_end":1230172,"line_start":262,"line_end":262,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":25253},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1232073,"byte_end":1232078,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"name":"Schur","qualname":"::linalg::schur::Schur","value":"Schur {  }","parent":null,"children":[{"krate":0,"index":25256},{"krate":0,"index":25257}],"decl_id":null,"docs":" Schur decomposition of a square matrix.","sig":null,"attributes":[{"value":"/ Schur decomposition of a square matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1231528,"byte_end":1231571,"line_start":19,"line_end":19,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1231572,"byte_end":1231575,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If this is a real matrix, this will be a RealField Schur decomposition.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1231576,"byte_end":1231651,"line_start":21,"line_end":21,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":11711},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1232639,"byte_end":1232642,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<Schur<N, D>>::new","value":"pub fn new(MatrixN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the Schur decomposition of a square matrix.\n","sig":null,"attributes":[{"value":"/ Computes the Schur decomposition of a square matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1232571,"byte_end":1232627,"line_start":57,"line_end":57,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":11712},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1233323,"byte_end":1233330,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"try_new","qualname":"<Schur<N, D>>::try_new","value":"pub fn try_new(MatrixN<N, D>, N::RealField, usize) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Schur decomposition of a square matrix.","sig":null,"attributes":[{"value":"/ Attempts to compute the Schur decomposition of a square matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1232752,"byte_end":1232819,"line_start":62,"line_end":62,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1232824,"byte_end":1232827,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ If only eigenvalues are needed, it is more efficient to call the matrix method","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1232832,"byte_end":1232914,"line_start":64,"line_end":64,"column_start":5,"column_end":87}},{"value":"/ `.eigenvalues()` instead.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1232919,"byte_end":1232948,"line_start":65,"line_end":65,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1232953,"byte_end":1232956,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1232961,"byte_end":1232976,"line_start":67,"line_end":67,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1232981,"byte_end":1232984,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1232989,"byte_end":1233067,"line_start":69,"line_end":69,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1233072,"byte_end":1233164,"line_start":70,"line_end":70,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1233169,"byte_end":1233261,"line_start":71,"line_end":71,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1233266,"byte_end":1233311,"line_start":72,"line_end":72,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":11718},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1243193,"byte_end":1243199,"line_start":373,"line_end":373,"column_start":12,"column_end":18},"name":"unpack","qualname":"<Schur<N, D>>::unpack","value":"pub fn unpack(Self) -> (MatrixN<N, D>, MatrixN<N, D>)","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the unitary matrix `Q` and the upper-quasitriangular matrix `T` such that the\n decomposed matrix equals `Q * T * Q.transpose()`.\n","sig":null,"attributes":[{"value":"/ Retrieves the unitary matrix `Q` and the upper-quasitriangular matrix `T` such that the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1243032,"byte_end":1243123,"line_start":371,"line_end":371,"column_start":5,"column_end":96}},{"value":"/ decomposed matrix equals `Q * T * Q.transpose()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1243128,"byte_end":1243181,"line_start":372,"line_end":372,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":11719},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1243412,"byte_end":1243423,"line_start":380,"line_end":380,"column_start":12,"column_end":23},"name":"eigenvalues","qualname":"<Schur<N, D>>::eigenvalues","value":"pub fn eigenvalues(&Self) -> Option<VectorN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the real eigenvalues of the decomposed matrix.","sig":null,"attributes":[{"value":"/ Computes the real eigenvalues of the decomposed matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1243278,"byte_end":1243337,"line_start":377,"line_end":377,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1243342,"byte_end":1243345,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ Return `None` if some eigenvalues are complex.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1243350,"byte_end":1243400,"line_start":379,"line_end":379,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":11720},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1243758,"byte_end":1243777,"line_start":390,"line_end":390,"column_start":12,"column_end":31},"name":"complex_eigenvalues","qualname":"<Schur<N, D>>::complex_eigenvalues","value":"pub fn complex_eigenvalues(&Self) -> VectorN<NumComplex<N>, D> where\nN: RealField, DefaultAllocator: Allocator<NumComplex<N>, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the complex eigenvalues of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ Computes the complex eigenvalues of the decomposed matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1243684,"byte_end":1243746,"line_start":389,"line_end":389,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":11735},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1247243,"byte_end":1247254,"line_start":500,"line_end":500,"column_start":12,"column_end":23},"name":"eigenvalues","qualname":"<SquareMatrix<N, D, S>>::eigenvalues","value":"pub fn eigenvalues(&Self) -> Option<VectorN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigenvalues of this matrix.\n","sig":null,"attributes":[{"value":"/ Computes the eigenvalues of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1247187,"byte_end":1247231,"line_start":499,"line_end":499,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":11736},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1248435,"byte_end":1248454,"line_start":540,"line_end":540,"column_start":12,"column_end":31},"name":"complex_eigenvalues","qualname":"<SquareMatrix<N, D, S>>::complex_eigenvalues","value":"pub fn complex_eigenvalues(&Self) -> VectorN<NumComplex<N>, D> where\nN: RealField, DefaultAllocator: Allocator<NumComplex<N>, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigenvalues of this matrix.\n","sig":null,"attributes":[{"value":"/ Computes the eigenvalues of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1248379,"byte_end":1248423,"line_start":539,"line_end":539,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":11791},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1249729,"byte_end":1249751,"line_start":14,"line_end":14,"column_start":12,"column_end":34},"name":"solve_lower_triangular","qualname":"<SquareMatrix<N, D, S>>::solve_lower_triangular","value":"pub fn solve_lower_triangular<R2: Dim, C2: Dim,\n                              S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> Option<MatrixMN<N, R2, C2>> where S2: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self . x = b` where `x` is the unknown and only\n the lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self . x = b` where `x` is the unknown and only","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1249515,"byte_end":1249610,"line_start":11,"line_end":11,"column_start":5,"column_end":100}},{"value":"/ the lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1249615,"byte_end":1249703,"line_start":12,"line_end":12,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1249708,"byte_end":1249717,"line_start":13,"line_end":13,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11795},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1250393,"byte_end":1250415,"line_start":34,"line_end":34,"column_start":12,"column_end":34},"name":"solve_upper_triangular","qualname":"<SquareMatrix<N, D, S>>::solve_upper_triangular","value":"pub fn solve_upper_triangular<R2: Dim, C2: Dim,\n                              S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> Option<MatrixMN<N, R2, C2>> where S2: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self . x = b` where `x` is the unknown and only\n the upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self . x = b` where `x` is the unknown and only","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1250179,"byte_end":1250274,"line_start":31,"line_end":31,"column_start":5,"column_end":100}},{"value":"/ the upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1250279,"byte_end":1250367,"line_start":32,"line_end":32,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1250372,"byte_end":1250381,"line_start":33,"line_end":33,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11799},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1251025,"byte_end":1251051,"line_start":53,"line_end":53,"column_start":12,"column_end":38},"name":"solve_lower_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::solve_lower_triangular_mut","value":"pub fn solve_lower_triangular_mut<R2: Dim, C2: Dim,\n                                  S2>(&Self, &mut Matrix<N, R2, C2, S2>)\n-> bool where S2: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1250843,"byte_end":1250924,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1250929,"byte_end":1251013,"line_start":52,"line_end":52,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":11806},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1252524,"byte_end":1252560,"line_start":104,"line_end":104,"column_start":12,"column_end":48},"name":"solve_lower_triangular_with_diag_mut","qualname":"<SquareMatrix<N, D, S>>::solve_lower_triangular_with_diag_mut","value":"pub fn solve_lower_triangular_with_diag_mut<R2: Dim, C2: Dim,\n                                            S2>(&Self,\n                                                &mut Matrix<N, R2, C2, S2>, N)\n-> bool where S2: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` is considered not-zero. The diagonal is never read as it is\n assumed to be equal to `diag`. Returns `false` and does not modify its inputs if `diag` is zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1252226,"byte_end":1252307,"line_start":101,"line_end":101,"column_start":5,"column_end":86}},{"value":"/ lower-triangular part of `self` is considered not-zero. The diagonal is never read as it is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1252312,"byte_end":1252407,"line_start":102,"line_end":102,"column_start":5,"column_end":100}},{"value":"/ assumed to be equal to `diag`. Returns `false` and does not modify its inputs if `diag` is zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1252412,"byte_end":1252512,"line_start":103,"line_end":103,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":11810},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1253427,"byte_end":1253453,"line_start":135,"line_end":135,"column_start":12,"column_end":38},"name":"solve_upper_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::solve_upper_triangular_mut","value":"pub fn solve_upper_triangular_mut<R2: Dim, C2: Dim,\n                                  S2>(&Self, &mut Matrix<N, R2, C2, S2>)\n-> bool where S2: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self . x = b` where `x` is the unknown and only the\n upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1253245,"byte_end":1253326,"line_start":133,"line_end":133,"column_start":5,"column_end":86}},{"value":"/ upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1253331,"byte_end":1253415,"line_start":134,"line_end":134,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":11817},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1254861,"byte_end":1254886,"line_start":190,"line_end":190,"column_start":12,"column_end":37},"name":"tr_solve_lower_triangular","qualname":"<SquareMatrix<N, D, S>>::tr_solve_lower_triangular","value":"pub fn tr_solve_lower_triangular<R2: Dim, C2: Dim,\n                                 S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> Option<MatrixMN<N, R2, C2>> where S2: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only\n the lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1254635,"byte_end":1254742,"line_start":187,"line_end":187,"column_start":5,"column_end":112}},{"value":"/ the lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1254747,"byte_end":1254835,"line_start":188,"line_end":188,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1254840,"byte_end":1254849,"line_start":189,"line_end":189,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11821},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1255543,"byte_end":1255568,"line_start":210,"line_end":210,"column_start":12,"column_end":37},"name":"tr_solve_upper_triangular","qualname":"<SquareMatrix<N, D, S>>::tr_solve_upper_triangular","value":"pub fn tr_solve_upper_triangular<R2: Dim, C2: Dim,\n                                 S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> Option<MatrixMN<N, R2, C2>> where S2: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only\n the upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1255317,"byte_end":1255424,"line_start":207,"line_end":207,"column_start":5,"column_end":112}},{"value":"/ the upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1255429,"byte_end":1255517,"line_start":208,"line_end":208,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1255522,"byte_end":1255531,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11825},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1256193,"byte_end":1256222,"line_start":229,"line_end":229,"column_start":12,"column_end":41},"name":"tr_solve_lower_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::tr_solve_lower_triangular_mut","value":"pub fn tr_solve_lower_triangular_mut<R2: Dim, C2: Dim,\n                                     S2>(&Self, &mut Matrix<N, R2, C2, S2>)\n-> bool where S2: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1255999,"byte_end":1256092,"line_start":227,"line_end":227,"column_start":5,"column_end":98}},{"value":"/ lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1256097,"byte_end":1256181,"line_start":228,"line_end":228,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":11831},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1256915,"byte_end":1256944,"line_start":254,"line_end":254,"column_start":12,"column_end":41},"name":"tr_solve_upper_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::tr_solve_upper_triangular_mut","value":"pub fn tr_solve_upper_triangular_mut<R2: Dim, C2: Dim,\n                                     S2>(&Self, &mut Matrix<N, R2, C2, S2>)\n-> bool where S2: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the\n upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1256721,"byte_end":1256814,"line_start":252,"line_end":252,"column_start":5,"column_end":98}},{"value":"/ upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1256819,"byte_end":1256903,"line_start":253,"line_end":253,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":11837},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1257667,"byte_end":1257692,"line_start":280,"line_end":280,"column_start":12,"column_end":37},"name":"ad_solve_lower_triangular","qualname":"<SquareMatrix<N, D, S>>::ad_solve_lower_triangular","value":"pub fn ad_solve_lower_triangular<R2: Dim, C2: Dim,\n                                 S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> Option<MatrixMN<N, R2, C2>> where S2: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only\n the lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1257443,"byte_end":1257548,"line_start":277,"line_end":277,"column_start":5,"column_end":110}},{"value":"/ the lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1257553,"byte_end":1257641,"line_start":278,"line_end":278,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1257646,"byte_end":1257655,"line_start":279,"line_end":279,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11841},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1258347,"byte_end":1258372,"line_start":300,"line_end":300,"column_start":12,"column_end":37},"name":"ad_solve_upper_triangular","qualname":"<SquareMatrix<N, D, S>>::ad_solve_upper_triangular","value":"pub fn ad_solve_upper_triangular<R2: Dim, C2: Dim,\n                                 S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> Option<MatrixMN<N, R2, C2>> where S2: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only\n the upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1258123,"byte_end":1258228,"line_start":297,"line_end":297,"column_start":5,"column_end":110}},{"value":"/ the upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1258233,"byte_end":1258321,"line_start":298,"line_end":298,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1258326,"byte_end":1258335,"line_start":299,"line_end":299,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11845},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1258995,"byte_end":1259024,"line_start":319,"line_end":319,"column_start":12,"column_end":41},"name":"ad_solve_lower_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::ad_solve_lower_triangular_mut","value":"pub fn ad_solve_lower_triangular_mut<R2: Dim, C2: Dim,\n                                     S2>(&Self, &mut Matrix<N, R2, C2, S2>)\n-> bool where S2: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1258803,"byte_end":1258894,"line_start":317,"line_end":317,"column_start":5,"column_end":96}},{"value":"/ lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1258899,"byte_end":1258983,"line_start":318,"line_end":318,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":11851},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1259728,"byte_end":1259757,"line_start":344,"line_end":344,"column_start":12,"column_end":41},"name":"ad_solve_upper_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::ad_solve_upper_triangular_mut","value":"pub fn ad_solve_upper_triangular_mut<R2: Dim, C2: Dim,\n                                     S2>(&Self, &mut Matrix<N, R2, C2, S2>)\n-> bool where S2: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the\n upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1259536,"byte_end":1259627,"line_start":342,"line_end":342,"column_start":5,"column_end":96}},{"value":"/ upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1259632,"byte_end":1259716,"line_start":343,"line_end":343,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":11871},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1262404,"byte_end":1262436,"line_start":447,"line_end":447,"column_start":12,"column_end":44},"name":"solve_lower_triangular_unchecked","qualname":"<SquareMatrix<N, D, S>>::solve_lower_triangular_unchecked","value":"pub fn solve_lower_triangular_unchecked<R2: Dim, C2: Dim,\n                                        S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> MatrixMN<N, R2, C2> where S2: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self . x = b` where `x` is the unknown and only\n the lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self . x = b` where `x` is the unknown and only","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1262190,"byte_end":1262285,"line_start":444,"line_end":444,"column_start":5,"column_end":100}},{"value":"/ the lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1262290,"byte_end":1262378,"line_start":445,"line_end":445,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1262383,"byte_end":1262392,"line_start":446,"line_end":446,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11875},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1263022,"byte_end":1263054,"line_start":464,"line_end":464,"column_start":12,"column_end":44},"name":"solve_upper_triangular_unchecked","qualname":"<SquareMatrix<N, D, S>>::solve_upper_triangular_unchecked","value":"pub fn solve_upper_triangular_unchecked<R2: Dim, C2: Dim,\n                                        S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> MatrixMN<N, R2, C2> where S2: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self . x = b` where `x` is the unknown and only\n the upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self . x = b` where `x` is the unknown and only","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1262808,"byte_end":1262903,"line_start":461,"line_end":461,"column_start":5,"column_end":100}},{"value":"/ the upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1262908,"byte_end":1262996,"line_start":462,"line_end":462,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1263001,"byte_end":1263010,"line_start":463,"line_end":463,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11879},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1263608,"byte_end":1263644,"line_start":480,"line_end":480,"column_start":12,"column_end":48},"name":"solve_lower_triangular_unchecked_mut","qualname":"<SquareMatrix<N, D, S>>::solve_lower_triangular_unchecked_mut","value":"pub fn solve_lower_triangular_unchecked_mut<R2: Dim, C2: Dim,\n                                            S2>(&Self,\n                                                &mut Matrix<N, R2, C2, S2>)\nwhere S2: StorageMut<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1263426,"byte_end":1263507,"line_start":478,"line_end":478,"column_start":5,"column_end":86}},{"value":"/ lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1263512,"byte_end":1263596,"line_start":479,"line_end":479,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":11886},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1264924,"byte_end":1264970,"line_start":517,"line_end":517,"column_start":12,"column_end":58},"name":"solve_lower_triangular_with_diag_unchecked_mut","qualname":"<SquareMatrix<N, D, S>>::solve_lower_triangular_with_diag_unchecked_mut","value":"pub fn solve_lower_triangular_with_diag_unchecked_mut<R2: Dim, C2: Dim,\n                                                      S2>(&Self,\n                                                          &mut Matrix<N, R2,\n                                                                      C2, S2>,\n                                                          N) where\nS2: StorageMut<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` is considered not-zero. The diagonal is never read as it is\n assumed to be equal to `diag`. Returns `false` and does not modify its inputs if `diag` is zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1264626,"byte_end":1264707,"line_start":514,"line_end":514,"column_start":5,"column_end":86}},{"value":"/ lower-triangular part of `self` is considered not-zero. The diagonal is never read as it is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1264712,"byte_end":1264807,"line_start":515,"line_end":515,"column_start":5,"column_end":100}},{"value":"/ assumed to be equal to `diag`. Returns `false` and does not modify its inputs if `diag` is zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1264812,"byte_end":1264912,"line_start":516,"line_end":516,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":11890},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1265746,"byte_end":1265782,"line_start":541,"line_end":541,"column_start":12,"column_end":48},"name":"solve_upper_triangular_unchecked_mut","qualname":"<SquareMatrix<N, D, S>>::solve_upper_triangular_unchecked_mut","value":"pub fn solve_upper_triangular_unchecked_mut<R2: Dim, C2: Dim,\n                                            S2>(&Self,\n                                                &mut Matrix<N, R2, C2, S2>)\nwhere S2: StorageMut<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self . x = b` where `x` is the unknown and only the\n upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1265564,"byte_end":1265645,"line_start":539,"line_end":539,"column_start":5,"column_end":86}},{"value":"/ upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1265650,"byte_end":1265734,"line_start":540,"line_end":540,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":11897},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1266996,"byte_end":1267031,"line_start":582,"line_end":582,"column_start":12,"column_end":47},"name":"tr_solve_lower_triangular_unchecked","qualname":"<SquareMatrix<N, D, S>>::tr_solve_lower_triangular_unchecked","value":"pub fn tr_solve_lower_triangular_unchecked<R2: Dim, C2: Dim,\n                                           S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> MatrixMN<N, R2, C2> where S2: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only\n the lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1266770,"byte_end":1266877,"line_start":579,"line_end":579,"column_start":5,"column_end":112}},{"value":"/ the lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1266882,"byte_end":1266970,"line_start":580,"line_end":580,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1266975,"byte_end":1266984,"line_start":581,"line_end":581,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11901},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1267632,"byte_end":1267667,"line_start":599,"line_end":599,"column_start":12,"column_end":47},"name":"tr_solve_upper_triangular_unchecked","qualname":"<SquareMatrix<N, D, S>>::tr_solve_upper_triangular_unchecked","value":"pub fn tr_solve_upper_triangular_unchecked<R2: Dim, C2: Dim,\n                                           S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> MatrixMN<N, R2, C2> where S2: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only\n the upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1267406,"byte_end":1267513,"line_start":596,"line_end":596,"column_start":5,"column_end":112}},{"value":"/ the upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1267518,"byte_end":1267606,"line_start":597,"line_end":597,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1267611,"byte_end":1267620,"line_start":598,"line_end":598,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11905},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1268236,"byte_end":1268275,"line_start":615,"line_end":615,"column_start":12,"column_end":51},"name":"tr_solve_lower_triangular_unchecked_mut","qualname":"<SquareMatrix<N, D, S>>::tr_solve_lower_triangular_unchecked_mut","value":"pub fn tr_solve_lower_triangular_unchecked_mut<R2: Dim, C2: Dim,\n                                               S2>(&Self,\n                                                   &mut Matrix<N, R2, C2, S2>)\nwhere S2: StorageMut<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1268042,"byte_end":1268135,"line_start":613,"line_end":613,"column_start":5,"column_end":98}},{"value":"/ lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1268140,"byte_end":1268224,"line_start":614,"line_end":614,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":11911},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1268876,"byte_end":1268915,"line_start":633,"line_end":633,"column_start":12,"column_end":51},"name":"tr_solve_upper_triangular_unchecked_mut","qualname":"<SquareMatrix<N, D, S>>::tr_solve_upper_triangular_unchecked_mut","value":"pub fn tr_solve_upper_triangular_unchecked_mut<R2: Dim, C2: Dim,\n                                               S2>(&Self,\n                                                   &mut Matrix<N, R2, C2, S2>)\nwhere S2: StorageMut<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the\n upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1268682,"byte_end":1268775,"line_start":631,"line_end":631,"column_start":5,"column_end":98}},{"value":"/ upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1268780,"byte_end":1268864,"line_start":632,"line_end":632,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":11917},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1269546,"byte_end":1269581,"line_start":652,"line_end":652,"column_start":12,"column_end":47},"name":"ad_solve_lower_triangular_unchecked","qualname":"<SquareMatrix<N, D, S>>::ad_solve_lower_triangular_unchecked","value":"pub fn ad_solve_lower_triangular_unchecked<R2: Dim, C2: Dim,\n                                           S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> MatrixMN<N, R2, C2> where S2: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only\n the lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1269322,"byte_end":1269427,"line_start":649,"line_end":649,"column_start":5,"column_end":110}},{"value":"/ the lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1269432,"byte_end":1269520,"line_start":650,"line_end":650,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1269525,"byte_end":1269534,"line_start":651,"line_end":651,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11921},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1270180,"byte_end":1270215,"line_start":669,"line_end":669,"column_start":12,"column_end":47},"name":"ad_solve_upper_triangular_unchecked","qualname":"<SquareMatrix<N, D, S>>::ad_solve_upper_triangular_unchecked","value":"pub fn ad_solve_upper_triangular_unchecked<R2: Dim, C2: Dim,\n                                           S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> MatrixMN<N, R2, C2> where S2: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only\n the upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1269956,"byte_end":1270061,"line_start":666,"line_end":666,"column_start":5,"column_end":110}},{"value":"/ the upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1270066,"byte_end":1270154,"line_start":667,"line_end":667,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1270159,"byte_end":1270168,"line_start":668,"line_end":668,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11925},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1270782,"byte_end":1270821,"line_start":685,"line_end":685,"column_start":12,"column_end":51},"name":"ad_solve_lower_triangular_unchecked_mut","qualname":"<SquareMatrix<N, D, S>>::ad_solve_lower_triangular_unchecked_mut","value":"pub fn ad_solve_lower_triangular_unchecked_mut<R2: Dim, C2: Dim,\n                                               S2>(&Self,\n                                                   &mut Matrix<N, R2, C2, S2>)\nwhere S2: StorageMut<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1270590,"byte_end":1270681,"line_start":683,"line_end":683,"column_start":5,"column_end":96}},{"value":"/ lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1270686,"byte_end":1270770,"line_start":684,"line_end":684,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":11931},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1271438,"byte_end":1271477,"line_start":703,"line_end":703,"column_start":12,"column_end":51},"name":"ad_solve_upper_triangular_unchecked_mut","qualname":"<SquareMatrix<N, D, S>>::ad_solve_upper_triangular_unchecked_mut","value":"pub fn ad_solve_upper_triangular_unchecked_mut<R2: Dim, C2: Dim,\n                                               S2>(&Self,\n                                                   &mut Matrix<N, R2, C2, S2>)\nwhere S2: StorageMut<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the\n upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1271246,"byte_end":1271337,"line_start":701,"line_end":701,"column_start":5,"column_end":96}},{"value":"/ upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1271342,"byte_end":1271426,"line_start":702,"line_end":702,"column_start":5,"column_end":89}}]},{"kind":"Struct","id":{"krate":0,"index":25266},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1275097,"byte_end":1275100,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"SVD","qualname":"::linalg::svd::SVD","value":"SVD { u, v_t, singular_values }","parent":null,"children":[{"krate":0,"index":25270},{"krate":0,"index":25271},{"krate":0,"index":25272}],"decl_id":null,"docs":" Singular Value Decomposition of a general matrix.\n","sig":null,"attributes":[{"value":"/ Singular Value Decomposition of a general matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1274008,"byte_end":1274061,"line_start":18,"line_end":18,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":25270},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1275360,"byte_end":1275361,"line_start":50,"line_end":50,"column_start":9,"column_end":10},"name":"u","qualname":"::linalg::svd::SVD::u","value":"std::option::Option<base::matrix::Matrix<N, R, <R as base::dimension::DimMin<C>>::Output, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, R, <R as base::dimension::DimMin<C>>::Output>>::Buffer>>","parent":{"krate":0,"index":25266},"children":[],"decl_id":null,"docs":" The left-singular vectors `U` of this SVD.\n","sig":null,"attributes":[{"value":"/ The left-singular vectors `U` of this SVD.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1275305,"byte_end":1275351,"line_start":49,"line_end":49,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":25271},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1275467,"byte_end":1275470,"line_start":52,"line_end":52,"column_start":9,"column_end":12},"name":"v_t","qualname":"::linalg::svd::SVD::v_t","value":"std::option::Option<base::matrix::Matrix<N, <R as base::dimension::DimMin<C>>::Output, C, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, <R as base::dimension::DimMin<C>>::Output, C>>::Buffer>>","parent":{"krate":0,"index":25266},"children":[],"decl_id":null,"docs":" The right-singular vectors `V^t` of this SVD.\n","sig":null,"attributes":[{"value":"/ The right-singular vectors `V^t` of this SVD.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1275409,"byte_end":1275458,"line_start":51,"line_end":51,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":25272},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1275563,"byte_end":1275578,"line_start":54,"line_end":54,"column_start":9,"column_end":24},"name":"singular_values","qualname":"::linalg::svd::SVD::singular_values","value":"base::matrix::Matrix<<N as simba::scalar::ComplexField>::RealField, <R as base::dimension::DimMin<C>>::Output, base::dimension::U1, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<<N as simba::scalar::ComplexField>::RealField, <R as base::dimension::DimMin<C>>::Output>>::Buffer>","parent":{"krate":0,"index":25266},"children":[],"decl_id":null,"docs":" The singular values of this SVD.\n","sig":null,"attributes":[{"value":"/ The singular values of this SVD.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1275518,"byte_end":1275554,"line_start":53,"line_end":53,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":12036},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1276600,"byte_end":1276603,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<SVD<N, R, C>>::new","value":"pub fn new(MatrixMN<N, R, C>, bool, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the Singular Value Decomposition of `matrix` using implicit shift.\n","sig":null,"attributes":[{"value":"/ Computes the Singular Value Decomposition of `matrix` using implicit shift.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1276509,"byte_end":1276588,"line_start":81,"line_end":81,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":12037},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1277523,"byte_end":1277530,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"try_new","qualname":"<SVD<N, R, C>>::try_new","value":"pub fn try_new(MatrixMN<N, R, C>, bool, bool, N::RealField, usize)\n-> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Singular Value Decomposition of `matrix` using implicit shift.","sig":null,"attributes":[{"value":"/ Attempts to compute the Singular Value Decomposition of `matrix` using implicit shift.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1276863,"byte_end":1276953,"line_start":93,"line_end":93,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1276958,"byte_end":1276961,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1276966,"byte_end":1276981,"line_start":95,"line_end":95,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1276986,"byte_end":1276989,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ * `compute_u` − set this to `true` to enable the computation of left-singular vectors.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1276994,"byte_end":1277086,"line_start":97,"line_end":97,"column_start":5,"column_end":95}},{"value":"/ * `compute_v` − set this to `true` to enable the computation of right-singular vectors.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1277091,"byte_end":1277184,"line_start":98,"line_end":98,"column_start":5,"column_end":96}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1277189,"byte_end":1277267,"line_start":99,"line_end":99,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1277272,"byte_end":1277364,"line_start":100,"line_end":100,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1277369,"byte_end":1277461,"line_start":101,"line_end":101,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1277466,"byte_end":1277511,"line_start":102,"line_end":102,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":12043},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1291351,"byte_end":1291355,"line_start":507,"line_end":507,"column_start":12,"column_end":16},"name":"rank","qualname":"<SVD<N, R, C>>::rank","value":"pub fn rank(&Self, N::RealField) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the rank of the decomposed matrix, i.e., the number of singular values greater\n than `eps`.\n","sig":null,"attributes":[{"value":"/ Computes the rank of the decomposed matrix, i.e., the number of singular values greater","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1291228,"byte_end":1291319,"line_start":505,"line_end":505,"column_start":5,"column_end":96}},{"value":"/ than `eps`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1291324,"byte_end":1291339,"line_start":506,"line_end":506,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":12045},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1291848,"byte_end":1291857,"line_start":520,"line_end":520,"column_start":12,"column_end":21},"name":"recompose","qualname":"<SVD<N, R, C>>::recompose","value":"pub fn recompose(Self) -> Result<MatrixMN<N, R, C>, &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Rebuild the original matrix.","sig":null,"attributes":[{"value":"/ Rebuild the original matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1291597,"byte_end":1291629,"line_start":515,"line_end":515,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1291634,"byte_end":1291637,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ This is useful if some of the singular values have been manually modified.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1291642,"byte_end":1291720,"line_start":517,"line_end":517,"column_start":5,"column_end":83}},{"value":"/ Returns `Err` if the right- and left- singular vectors have not been","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1291725,"byte_end":1291797,"line_start":518,"line_end":518,"column_start":5,"column_end":77}},{"value":"/ computed at construction-time.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1291802,"byte_end":1291836,"line_start":519,"line_end":519,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":12046},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1292738,"byte_end":1292752,"line_start":540,"line_end":540,"column_start":12,"column_end":26},"name":"pseudo_inverse","qualname":"<SVD<N, R, C>>::pseudo_inverse","value":"pub fn pseudo_inverse(Self, N::RealField)\n-> Result<MatrixMN<N, C, R>, &'static str> where\nDefaultAllocator: Allocator<N, C, R>","parent":null,"children":[],"decl_id":null,"docs":" Computes the pseudo-inverse of the decomposed matrix.","sig":null,"attributes":[{"value":"/ Computes the pseudo-inverse of the decomposed matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1292476,"byte_end":1292533,"line_start":535,"line_end":535,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1292538,"byte_end":1292541,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ Any singular value smaller than `eps` is assumed to be zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1292546,"byte_end":1292610,"line_start":537,"line_end":537,"column_start":5,"column_end":69}},{"value":"/ Returns `Err` if the right- and left- singular vectors have not","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1292615,"byte_end":1292682,"line_start":538,"line_end":538,"column_start":5,"column_end":72}},{"value":"/ been computed at construction-time.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1292687,"byte_end":1292726,"line_start":539,"line_end":539,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":12048},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1293775,"byte_end":1293780,"line_start":566,"line_end":566,"column_start":12,"column_end":17},"name":"solve","qualname":"<SVD<N, R, C>>::solve","value":"pub fn solve<R2: Dim, C2: Dim,\n             S2>(&Self, &Matrix<N, R2, C2, S2>, N::RealField)\n-> Result<MatrixMN<N, C, C2>, &'static str> where S2: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, C, C2> + Allocator<N, DimMinimum<R, C>, C2>,\nShapeConstraint: SameNumberOfRows<R, R2>","parent":null,"children":[],"decl_id":null,"docs":" Solves the system `self * x = b` where `self` is the decomposed matrix and `x` the unknown.","sig":null,"attributes":[{"value":"/ Solves the system `self * x = b` where `self` is the decomposed matrix and `x` the unknown.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1293423,"byte_end":1293518,"line_start":561,"line_end":561,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1293523,"byte_end":1293526,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ Any singular value smaller than `eps` is assumed to be zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1293531,"byte_end":1293595,"line_start":563,"line_end":563,"column_start":5,"column_end":69}},{"value":"/ Returns `Err` if the singular vectors `U` and `V` have not been computed.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1293600,"byte_end":1293677,"line_start":564,"line_end":564,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":12057},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1295802,"byte_end":1295817,"line_start":620,"line_end":620,"column_start":12,"column_end":27},"name":"singular_values","qualname":"<Matrix<N, R, C, S>>::singular_values","value":"pub fn singular_values(&Self) -> VectorN<N::RealField, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the singular values of this matrix.\n","sig":null,"attributes":[{"value":"/ Computes the singular values of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1295742,"byte_end":1295790,"line_start":619,"line_end":619,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":12058},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1296072,"byte_end":1296076,"line_start":627,"line_end":627,"column_start":12,"column_end":16},"name":"rank","qualname":"<Matrix<N, R, C, S>>::rank","value":"pub fn rank(&Self, N::RealField) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the rank of this matrix.","sig":null,"attributes":[{"value":"/ Computes the rank of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1295948,"byte_end":1295985,"line_start":624,"line_end":624,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1295990,"byte_end":1295993,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ All singular values below `eps` are considered equal to 0.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1295998,"byte_end":1296060,"line_start":626,"line_end":626,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":12059},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1296343,"byte_end":1296357,"line_start":635,"line_end":635,"column_start":12,"column_end":26},"name":"pseudo_inverse","qualname":"<Matrix<N, R, C, S>>::pseudo_inverse","value":"pub fn pseudo_inverse(Self, N::RealField)\n-> Result<MatrixMN<N, C, R>, &'static str> where\nDefaultAllocator: Allocator<N, C, R>","parent":null,"children":[],"decl_id":null,"docs":" Computes the pseudo-inverse of this matrix.","sig":null,"attributes":[{"value":"/ Computes the pseudo-inverse of this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1296209,"byte_end":1296256,"line_start":632,"line_end":632,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1296261,"byte_end":1296264,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ All singular values below `eps` are considered equal to 0.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1296269,"byte_end":1296331,"line_start":634,"line_end":634,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":25283},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1299218,"byte_end":1299232,"line_start":33,"line_end":33,"column_start":12,"column_end":26},"name":"SymmetricEigen","qualname":"::linalg::symmetric_eigen::SymmetricEigen","value":"SymmetricEigen { eigenvectors, eigenvalues }","parent":null,"children":[{"krate":0,"index":25286},{"krate":0,"index":25287}],"decl_id":null,"docs":" Eigendecomposition of a symmetric matrix.\n","sig":null,"attributes":[{"value":"/ Eigendecomposition of a symmetric matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1298540,"byte_end":1298585,"line_start":16,"line_end":16,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":25286},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1299396,"byte_end":1299408,"line_start":38,"line_end":38,"column_start":9,"column_end":21},"name":"eigenvectors","qualname":"::linalg::symmetric_eigen::SymmetricEigen::eigenvectors","value":"base::matrix::Matrix<N, D, D, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, D, D>>::Buffer>","parent":{"krate":0,"index":25283},"children":[],"decl_id":null,"docs":" The eigenvectors of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ The eigenvectors of the decomposed matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1299341,"byte_end":1299387,"line_start":37,"line_end":37,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":25287},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1299493,"byte_end":1299504,"line_start":41,"line_end":41,"column_start":9,"column_end":20},"name":"eigenvalues","qualname":"::linalg::symmetric_eigen::SymmetricEigen::eigenvalues","value":"base::matrix::Matrix<<N as simba::scalar::ComplexField>::RealField, D, base::dimension::U1, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<<N as simba::scalar::ComplexField>::RealField, D>>::Buffer>","parent":{"krate":0,"index":25283},"children":[],"decl_id":null,"docs":" The unsorted eigenvalues of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ The unsorted eigenvalues of the decomposed matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1299430,"byte_end":1299484,"line_start":40,"line_end":40,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":12125},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1300039,"byte_end":1300042,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<SymmetricEigen<N, D>>::new","value":"pub fn new(MatrixN<N, D>) -> Self where D: DimSub<U1>,\nDefaultAllocator: Allocator<N, DimDiff<D, U1>> +\nAllocator<N::RealField, DimDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigendecomposition of the given symmetric matrix.","sig":null,"attributes":[{"value":"/ Computes the eigendecomposition of the given symmetric matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1299872,"byte_end":1299938,"line_start":56,"line_end":56,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1299943,"byte_end":1299946,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular parts (including its diagonal) of `m` is read.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1299951,"byte_end":1300027,"line_start":58,"line_end":58,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":12126},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1300867,"byte_end":1300874,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"try_new","qualname":"<SymmetricEigen<N, D>>::try_new","value":"pub fn try_new(MatrixN<N, D>, N::RealField, usize) -> Option<Self> where\nD: DimSub<U1>, DefaultAllocator: Allocator<N, DimDiff<D, U1>> +\nAllocator<N::RealField, DimDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigendecomposition of the given symmetric matrix with user-specified\n convergence parameters.","sig":null,"attributes":[{"value":"/ Computes the eigendecomposition of the given symmetric matrix with user-specified","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1300287,"byte_end":1300372,"line_start":67,"line_end":67,"column_start":5,"column_end":90}},{"value":"/ convergence parameters.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1300377,"byte_end":1300404,"line_start":68,"line_end":68,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1300409,"byte_end":1300412,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part (including its diagonal) of `m` is read.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1300417,"byte_end":1300492,"line_start":70,"line_end":70,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1300497,"byte_end":1300500,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1300505,"byte_end":1300520,"line_start":72,"line_end":72,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1300525,"byte_end":1300528,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1300533,"byte_end":1300611,"line_start":74,"line_end":74,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1300616,"byte_end":1300708,"line_start":75,"line_end":75,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1300713,"byte_end":1300805,"line_start":76,"line_end":76,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1300810,"byte_end":1300855,"line_start":77,"line_end":77,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":12130},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1306851,"byte_end":1306860,"line_start":271,"line_end":271,"column_start":12,"column_end":21},"name":"recompose","qualname":"<SymmetricEigen<N, D>>::recompose","value":"pub fn recompose(&Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Rebuild the original matrix.","sig":null,"attributes":[{"value":"/ Rebuild the original matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1306720,"byte_end":1306752,"line_start":268,"line_end":268,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1306757,"byte_end":1306760,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ This is useful if some of the eigenvalues have been manually modified.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1306765,"byte_end":1306839,"line_start":270,"line_end":270,"column_start":5,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":12131},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1307356,"byte_end":1307371,"line_start":288,"line_end":288,"column_start":8,"column_end":23},"name":"wilkinson_shift","qualname":"::linalg::symmetric_eigen::wilkinson_shift","value":"pub fn wilkinson_shift<N: ComplexField>(N, N, N) -> N","parent":null,"children":[],"decl_id":null,"docs":" Computes the wilkinson shift, i.e., the 2x2 symmetric matrix eigenvalue to its tailing\n component `tnn`.","sig":null,"attributes":[{"value":"/ Computes the wilkinson shift, i.e., the 2x2 symmetric matrix eigenvalue to its tailing","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1307149,"byte_end":1307239,"line_start":282,"line_end":282,"column_start":1,"column_end":91}},{"value":"/ component `tnn`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1307240,"byte_end":1307260,"line_start":283,"line_end":283,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1307261,"byte_end":1307264,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ The inputs are interpreted as the 2x2 matrix:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1307265,"byte_end":1307314,"line_start":285,"line_end":285,"column_start":1,"column_end":50}},{"value":"/     tmm  tmn","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1307315,"byte_end":1307331,"line_start":286,"line_end":286,"column_start":1,"column_end":17}},{"value":"/     tmn  tnn","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1307332,"byte_end":1307348,"line_start":287,"line_end":287,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":12137},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1308159,"byte_end":1308180,"line_start":314,"line_end":314,"column_start":12,"column_end":33},"name":"symmetric_eigenvalues","qualname":"<SquareMatrix<N, D, S>>::symmetric_eigenvalues","value":"pub fn symmetric_eigenvalues(&Self) -> VectorN<N::RealField, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigenvalues of this symmetric matrix.","sig":null,"attributes":[{"value":"/ Computes the eigenvalues of this symmetric matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1308023,"byte_end":1308077,"line_start":311,"line_end":311,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1308082,"byte_end":1308085,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part of the matrix is read.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1308090,"byte_end":1308147,"line_start":313,"line_end":313,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":25296},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1311517,"byte_end":1311537,"line_start":29,"line_end":29,"column_start":12,"column_end":32},"name":"SymmetricTridiagonal","qualname":"::linalg::symmetric_tridiagonal::SymmetricTridiagonal","value":"SymmetricTridiagonal {  }","parent":null,"children":[{"krate":0,"index":25299},{"krate":0,"index":25300}],"decl_id":null,"docs":" Tridiagonalization of a symmetric matrix.\n","sig":null,"attributes":[{"value":"/ Tridiagonalization of a symmetric matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1310831,"byte_end":1310876,"line_start":12,"line_end":12,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":12180},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1312257,"byte_end":1312260,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<SymmetricTridiagonal<N, D>>::new","value":"pub fn new(MatrixN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the tridiagonalization of the symmetric matrix `m`.","sig":null,"attributes":[{"value":"/ Computes the tridiagonalization of the symmetric matrix `m`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1312093,"byte_end":1312157,"line_start":49,"line_end":49,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1312162,"byte_end":1312165,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part (including the diagonal) of `m` is read.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1312170,"byte_end":1312245,"line_start":51,"line_end":51,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":12181},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1313632,"byte_end":1313644,"line_start":94,"line_end":94,"column_start":12,"column_end":24},"name":"internal_tri","qualname":"<SymmetricTridiagonal<N, D>>::internal_tri","value":"pub fn internal_tri(&Self) -> &MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":12182},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1313823,"byte_end":1313829,"line_start":100,"line_end":100,"column_start":12,"column_end":18},"name":"unpack","qualname":"<SymmetricTridiagonal<N, D>>::unpack","value":"pub fn unpack(Self)\n->\n    (MatrixN<N, D>, VectorN<N::RealField, D>,\n     VectorN<N::RealField, DimDiff<D, U1>>) where\nDefaultAllocator: Allocator<N::RealField, D> +\nAllocator<N::RealField, DimDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the orthogonal transformation, diagonal, and off diagonal elements of this\n decomposition.\n","sig":null,"attributes":[{"value":"/ Retrieve the orthogonal transformation, diagonal, and off diagonal elements of this","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1313701,"byte_end":1313788,"line_start":98,"line_end":98,"column_start":5,"column_end":92}},{"value":"/ decomposition.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1313793,"byte_end":1313811,"line_start":99,"line_end":99,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":12183},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1314292,"byte_end":1314310,"line_start":117,"line_end":117,"column_start":12,"column_end":30},"name":"unpack_tridiagonal","qualname":"<SymmetricTridiagonal<N, D>>::unpack_tridiagonal","value":"pub fn unpack_tridiagonal(Self)\n-> (VectorN<N::RealField, D>, VectorN<N::RealField, DimDiff<D, U1>>) where\nDefaultAllocator: Allocator<N::RealField, D> +\nAllocator<N::RealField, DimDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the diagonal, and off diagonal elements of this decomposition.\n","sig":null,"attributes":[{"value":"/ Retrieve the diagonal, and off diagonal elements of this decomposition.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1314205,"byte_end":1314280,"line_start":116,"line_end":116,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":12184},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1314670,"byte_end":1314678,"line_start":130,"line_end":130,"column_start":12,"column_end":20},"name":"diagonal","qualname":"<SymmetricTridiagonal<N, D>>::diagonal","value":"pub fn diagonal(&Self) -> VectorN<N::RealField, D> where\nDefaultAllocator: Allocator<N::RealField, D>","parent":null,"children":[],"decl_id":null,"docs":" The diagonal components of this decomposition.\n","sig":null,"attributes":[{"value":"/ The diagonal components of this decomposition.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1314608,"byte_end":1314658,"line_start":129,"line_end":129,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":12186},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1314905,"byte_end":1314917,"line_start":138,"line_end":138,"column_start":12,"column_end":24},"name":"off_diagonal","qualname":"<SymmetricTridiagonal<N, D>>::off_diagonal","value":"pub fn off_diagonal(&Self) -> VectorN<N::RealField, DimDiff<D, U1>> where\nDefaultAllocator: Allocator<N::RealField, DimDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" The off-diagonal components of this decomposition.\n","sig":null,"attributes":[{"value":"/ The off-diagonal components of this decomposition.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1314839,"byte_end":1314893,"line_start":137,"line_end":137,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":12187},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1315175,"byte_end":1315176,"line_start":146,"line_end":146,"column_start":12,"column_end":13},"name":"q","qualname":"<SymmetricTridiagonal<N, D>>::q","value":"pub fn q(&Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal matrix `Q` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal matrix `Q` of this decomposition.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1315102,"byte_end":1315163,"line_start":145,"line_end":145,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":12188},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1315344,"byte_end":1315353,"line_start":151,"line_end":151,"column_start":12,"column_end":21},"name":"recompose","qualname":"<SymmetricTridiagonal<N, D>>::recompose","value":"pub fn recompose(Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Recomputes the original symmetric matrix.\n","sig":null,"attributes":[{"value":"/ Recomputes the original symmetric matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1315287,"byte_end":1315332,"line_start":150,"line_end":150,"column_start":5,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":12272},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":5076,"byte_end":5079,"line_start":164,"line_end":164,"column_start":8,"column_end":11},"name":"one","qualname":"::one","value":"pub fn one<T: One>() -> T","parent":null,"children":[],"decl_id":null,"docs":" Gets the multiplicative identity element.","sig":null,"attributes":[{"value":"/ Gets the multiplicative identity element.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":4915,"byte_end":4960,"line_start":157,"line_end":157,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":4961,"byte_end":4964,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":4965,"byte_end":4980,"line_start":159,"line_end":159,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":4981,"byte_end":4984,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ * [`origin`](../nalgebra/fn.origin.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":4985,"byte_end":5029,"line_start":161,"line_end":161,"column_start":1,"column_end":45}},{"value":"/ * [`zero`](fn.zero.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":5030,"byte_end":5058,"line_start":162,"line_end":162,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":5059,"byte_end":5068,"line_start":163,"line_end":163,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":12274},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":5266,"byte_end":5270,"line_start":175,"line_end":175,"column_start":8,"column_end":12},"name":"zero","qualname":"::zero","value":"pub fn zero<T: Zero>() -> T","parent":null,"children":[],"decl_id":null,"docs":" Gets the additive identity element.","sig":null,"attributes":[{"value":"/ Gets the additive identity element.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":5113,"byte_end":5152,"line_start":168,"line_end":168,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":5153,"byte_end":5156,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":5157,"byte_end":5172,"line_start":170,"line_end":170,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":5173,"byte_end":5176,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ * [`one`](fn.one.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":5177,"byte_end":5203,"line_start":172,"line_end":172,"column_start":1,"column_end":27}},{"value":"/ * [`origin`](../nalgebra/fn.origin.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":5204,"byte_end":5248,"line_start":173,"line_end":173,"column_start":1,"column_end":45}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":5249,"byte_end":5258,"line_start":174,"line_end":174,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":12276},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":5683,"byte_end":5687,"line_start":191,"line_end":191,"column_start":8,"column_end":12},"name":"wrap","qualname":"::wrap","value":"pub fn wrap<T>(T, T, T) -> T where T: Copy + PartialOrd + ClosedAdd +\nClosedSub","parent":null,"children":[],"decl_id":null,"docs":" Wraps `val` into the range `[min, max]` using modular arithmetics.","sig":null,"attributes":[{"value":"/ Wraps `val` into the range `[min, max]` using modular arithmetics.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":5558,"byte_end":5628,"line_start":187,"line_end":187,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":5629,"byte_end":5632,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ The range must not be empty.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":5633,"byte_end":5665,"line_start":189,"line_end":189,"column_start":1,"column_end":33}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":5666,"byte_end":5675,"line_start":190,"line_end":190,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":12278},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":6402,"byte_end":6407,"line_start":226,"line_end":226,"column_start":8,"column_end":13},"name":"clamp","qualname":"::clamp","value":"pub fn clamp<T: PartialOrd>(T, T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the input value clamped to the interval `[min, max]`.","sig":null,"attributes":[{"value":"/ Returns a reference to the input value clamped to the interval `[min, max]`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":6135,"byte_end":6215,"line_start":219,"line_end":219,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":6216,"byte_end":6219,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ In particular:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":6220,"byte_end":6238,"line_start":221,"line_end":221,"column_start":1,"column_end":19}},{"value":"/     * If `min < val < max`, this returns `val`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":6239,"byte_end":6290,"line_start":222,"line_end":222,"column_start":1,"column_end":52}},{"value":"/     * If `val <= min`, this returns `min`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":6291,"byte_end":6337,"line_start":223,"line_end":223,"column_start":1,"column_end":47}},{"value":"/     * If `val >= max`, this returns `max`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":6338,"byte_end":6384,"line_start":224,"line_end":224,"column_start":1,"column_end":47}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":6385,"byte_end":6394,"line_start":225,"line_end":225,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":12280},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":6630,"byte_end":6633,"line_start":240,"line_end":240,"column_start":8,"column_end":11},"name":"max","qualname":"::max","value":"pub fn max<T: Ord>(T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Same as `cmp::max`.\n","sig":null,"attributes":[{"value":"/ Same as `cmp::max`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":6589,"byte_end":6612,"line_start":238,"line_end":238,"column_start":1,"column_end":24}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":6613,"byte_end":6622,"line_start":239,"line_end":239,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":12282},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":6724,"byte_end":6727,"line_start":246,"line_end":246,"column_start":8,"column_end":11},"name":"min","qualname":"::min","value":"pub fn min<T: Ord>(T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Same as `cmp::min`.\n","sig":null,"attributes":[{"value":"/ Same as `cmp::min`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":6683,"byte_end":6706,"line_start":244,"line_end":244,"column_start":1,"column_end":24}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":6707,"byte_end":6716,"line_start":245,"line_end":245,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":12284},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":6982,"byte_end":6985,"line_start":255,"line_end":255,"column_start":8,"column_end":11},"name":"abs","qualname":"::abs","value":"pub fn abs<T: Signed>(&T) -> T","parent":null,"children":[],"decl_id":null,"docs":" The absolute value of `a`.","sig":null,"attributes":[{"value":"/ The absolute value of `a`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":6777,"byte_end":6807,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":6808,"byte_end":6811,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ Deprecated: Use [Matrix::abs] or [RealField::abs] instead.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":6812,"byte_end":6874,"line_start":252,"line_end":252,"column_start":1,"column_end":63}},{"value":"deprecated(note =\n             \"use the inherent method `Matrix::abs` or `RealField::abs` instead\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":6875,"byte_end":6964,"line_start":253,"line_end":253,"column_start":1,"column_end":90}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":6965,"byte_end":6974,"line_start":254,"line_end":254,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":12286},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":7153,"byte_end":7156,"line_start":262,"line_end":262,"column_start":8,"column_end":11},"name":"inf","qualname":"::inf","value":"pub fn inf<N, R: Dim, C: Dim>(&MatrixMN<N, R, C>, &MatrixMN<N, R, C>)\n-> MatrixMN<N, R, C> where N: Scalar + SimdPartialOrd,\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns the infimum of `a` and `b`.\n","sig":null,"attributes":[{"value":"/ Returns the infimum of `a` and `b`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":7026,"byte_end":7065,"line_start":259,"line_end":259,"column_start":1,"column_end":40}},{"value":"deprecated(note = \"use the inherent method `Matrix::inf` instead\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":7066,"byte_end":7135,"line_start":260,"line_end":260,"column_start":1,"column_end":70}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":7136,"byte_end":7145,"line_start":261,"line_end":261,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":12290},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":7469,"byte_end":7472,"line_start":273,"line_end":273,"column_start":8,"column_end":11},"name":"sup","qualname":"::sup","value":"pub fn sup<N, R: Dim, C: Dim>(&MatrixMN<N, R, C>, &MatrixMN<N, R, C>)\n-> MatrixMN<N, R, C> where N: Scalar + SimdPartialOrd,\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns the supremum of `a` and `b`.\n","sig":null,"attributes":[{"value":"/ Returns the supremum of `a` and `b`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":7341,"byte_end":7381,"line_start":270,"line_end":270,"column_start":1,"column_end":41}},{"value":"deprecated(note = \"use the inherent method `Matrix::sup` instead\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":7382,"byte_end":7451,"line_start":271,"line_end":271,"column_start":1,"column_end":70}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":7452,"byte_end":7461,"line_start":272,"line_end":272,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":12294},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":7816,"byte_end":7823,"line_start":284,"line_end":284,"column_start":8,"column_end":15},"name":"inf_sup","qualname":"::inf_sup","value":"pub fn inf_sup<N, R: Dim, C: Dim>(&MatrixMN<N, R, C>, &MatrixMN<N, R, C>)\n-> (MatrixMN<N, R, C>, MatrixMN<N, R, C>) where N: Scalar + SimdPartialOrd,\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns simultaneously the infimum and supremum of `a` and `b`.\n","sig":null,"attributes":[{"value":"/ Returns simultaneously the infimum and supremum of `a` and `b`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":7657,"byte_end":7724,"line_start":281,"line_end":281,"column_start":1,"column_end":68}},{"value":"deprecated(note = \"use the inherent method `Matrix::inf_sup` instead\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":7725,"byte_end":7798,"line_start":282,"line_end":282,"column_start":1,"column_end":74}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":7799,"byte_end":7808,"line_start":283,"line_end":283,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":12298},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":8120,"byte_end":8131,"line_start":297,"line_end":297,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"::partial_cmp","value":"pub fn partial_cmp<T: PartialOrd>(&T, &T) -> Option<Ordering>","parent":null,"children":[],"decl_id":null,"docs":" Compare `a` and `b` using a partial ordering relation.\n","sig":null,"attributes":[{"value":"/ Compare `a` and `b` using a partial ordering relation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":8044,"byte_end":8102,"line_start":295,"line_end":295,"column_start":1,"column_end":59}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":8103,"byte_end":8112,"line_start":296,"line_end":296,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":12300},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":8287,"byte_end":8297,"line_start":303,"line_end":303,"column_start":8,"column_end":18},"name":"partial_lt","qualname":"::partial_lt","value":"pub fn partial_lt<T: PartialOrd>(&T, &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff `a` and `b` are comparable and `a < b`.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff `a` and `b` are comparable and `a < b`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":8207,"byte_end":8269,"line_start":301,"line_end":301,"column_start":1,"column_end":63}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":8270,"byte_end":8279,"line_start":302,"line_end":302,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":12302},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":8433,"byte_end":8443,"line_start":309,"line_end":309,"column_start":8,"column_end":18},"name":"partial_le","qualname":"::partial_le","value":"pub fn partial_le<T: PartialOrd>(&T, &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff `a` and `b` are comparable and `a <= b`.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff `a` and `b` are comparable and `a <= b`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":8352,"byte_end":8415,"line_start":307,"line_end":307,"column_start":1,"column_end":64}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":8416,"byte_end":8425,"line_start":308,"line_end":308,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":12304},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":8578,"byte_end":8588,"line_start":315,"line_end":315,"column_start":8,"column_end":18},"name":"partial_gt","qualname":"::partial_gt","value":"pub fn partial_gt<T: PartialOrd>(&T, &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff `a` and `b` are comparable and `a > b`.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff `a` and `b` are comparable and `a > b`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":8498,"byte_end":8560,"line_start":313,"line_end":313,"column_start":1,"column_end":63}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":8561,"byte_end":8570,"line_start":314,"line_end":314,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":12306},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":8724,"byte_end":8734,"line_start":321,"line_end":321,"column_start":8,"column_end":18},"name":"partial_ge","qualname":"::partial_ge","value":"pub fn partial_ge<T: PartialOrd>(&T, &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff `a` and `b` are comparable and `a >= b`.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff `a` and `b` are comparable and `a >= b`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":8643,"byte_end":8706,"line_start":319,"line_end":319,"column_start":1,"column_end":64}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":8707,"byte_end":8716,"line_start":320,"line_end":320,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":12308},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":8868,"byte_end":8879,"line_start":327,"line_end":327,"column_start":8,"column_end":19},"name":"partial_min","qualname":"::partial_min","value":"pub fn partial_min<'a, T: PartialOrd>(&'a T, &'a T) -> Option<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Return the minimum of `a` and `b` if they are comparable.\n","sig":null,"attributes":[{"value":"/ Return the minimum of `a` and `b` if they are comparable.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":8789,"byte_end":8850,"line_start":325,"line_end":325,"column_start":1,"column_end":62}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":8851,"byte_end":8860,"line_start":326,"line_end":326,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":12311},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":9192,"byte_end":9203,"line_start":340,"line_end":340,"column_start":8,"column_end":19},"name":"partial_max","qualname":"::partial_max","value":"pub fn partial_max<'a, T: PartialOrd>(&'a T, &'a T) -> Option<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Return the maximum of `a` and `b` if they are comparable.\n","sig":null,"attributes":[{"value":"/ Return the maximum of `a` and `b` if they are comparable.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":9113,"byte_end":9174,"line_start":338,"line_end":338,"column_start":1,"column_end":62}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":9175,"byte_end":9184,"line_start":339,"line_end":339,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":12314},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":9561,"byte_end":9574,"line_start":354,"line_end":354,"column_start":8,"column_end":21},"name":"partial_clamp","qualname":"::partial_clamp","value":"pub fn partial_clamp<'a, T: PartialOrd>(&'a T, &'a T, &'a T) -> Option<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to\n `min` or `max`.\n","sig":null,"attributes":[{"value":"/ Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":9434,"byte_end":9523,"line_start":351,"line_end":351,"column_start":1,"column_end":90}},{"value":"/ `min` or `max`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":9524,"byte_end":9543,"line_start":352,"line_end":352,"column_start":1,"column_end":20}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":9544,"byte_end":9553,"line_start":353,"line_end":353,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":12317},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":10048,"byte_end":10061,"line_start":370,"line_end":370,"column_start":8,"column_end":21},"name":"partial_sort2","qualname":"::partial_sort2","value":"pub fn partial_sort2<'a, T: PartialOrd>(&'a T, &'a T)\n-> Option<(&'a T, &'a T)>","parent":null,"children":[],"decl_id":null,"docs":" Sorts two values in increasing order using a partial ordering.\n","sig":null,"attributes":[{"value":"/ Sorts two values in increasing order using a partial ordering.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":9964,"byte_end":10030,"line_start":368,"line_end":368,"column_start":1,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":10031,"byte_end":10040,"line_start":369,"line_end":369,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":12320},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":10502,"byte_end":10508,"line_start":393,"line_end":393,"column_start":8,"column_end":14},"name":"center","qualname":"::center","value":"pub fn center<N: SimdComplexField, D: DimName>(&Point<N, D>, &Point<N, D>)\n-> Point<N, D> where DefaultAllocator: Allocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" The center of two points.","sig":null,"attributes":[{"value":"/ The center of two points.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":10345,"byte_end":10374,"line_start":386,"line_end":386,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":10375,"byte_end":10378,"line_start":387,"line_end":387,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":10379,"byte_end":10394,"line_start":388,"line_end":388,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":10395,"byte_end":10398,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ * [distance](fn.distance.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":10399,"byte_end":10433,"line_start":390,"line_end":390,"column_start":1,"column_end":35}},{"value":"/ * [distance_squared](fn.distance_squared.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":10434,"byte_end":10484,"line_start":391,"line_end":391,"column_start":1,"column_end":51}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":10485,"byte_end":10494,"line_start":392,"line_end":392,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":12323},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":10865,"byte_end":10873,"line_start":407,"line_end":407,"column_start":8,"column_end":16},"name":"distance","qualname":"::distance","value":"pub fn distance<N: SimdComplexField, D: DimName>(&Point<N, D>, &Point<N, D>)\n-> N::SimdRealField where DefaultAllocator: Allocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" The distance between two points.","sig":null,"attributes":[{"value":"/ The distance between two points.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":10705,"byte_end":10741,"line_start":400,"line_end":400,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":10742,"byte_end":10745,"line_start":401,"line_end":401,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":10746,"byte_end":10761,"line_start":402,"line_end":402,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":10762,"byte_end":10765,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ * [center](fn.center.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":10766,"byte_end":10796,"line_start":404,"line_end":404,"column_start":1,"column_end":31}},{"value":"/ * [distance_squared](fn.distance_squared.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":10797,"byte_end":10847,"line_start":405,"line_end":405,"column_start":1,"column_end":51}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":10848,"byte_end":10857,"line_start":406,"line_end":406,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":12326},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":11213,"byte_end":11229,"line_start":424,"line_end":424,"column_start":8,"column_end":24},"name":"distance_squared","qualname":"::distance_squared","value":"pub fn distance_squared<N: SimdComplexField,\n                        D: DimName>(&Point<N, D>, &Point<N, D>)\n-> N::SimdRealField where DefaultAllocator: Allocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" The squared distance between two points.","sig":null,"attributes":[{"value":"/ The squared distance between two points.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":11061,"byte_end":11105,"line_start":417,"line_end":417,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":11106,"byte_end":11109,"line_start":418,"line_end":418,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":11110,"byte_end":11125,"line_start":419,"line_end":419,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":11126,"byte_end":11129,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ * [center](fn.center.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":11130,"byte_end":11160,"line_start":421,"line_end":421,"column_start":1,"column_end":31}},{"value":"/ * [distance](fn.distance.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":11161,"byte_end":11195,"line_start":422,"line_end":422,"column_start":1,"column_end":35}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":11196,"byte_end":11205,"line_start":423,"line_end":423,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":12329},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":11900,"byte_end":11907,"line_start":449,"line_end":449,"column_start":8,"column_end":15},"name":"convert","qualname":"::convert","value":"pub fn convert<From, To: SupersetOf<From>>(From) -> To","parent":null,"children":[],"decl_id":null,"docs":" Converts an object from one type to an equivalent or more general one.","sig":null,"attributes":[{"value":"/ Converts an object from one type to an equivalent or more general one.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":11440,"byte_end":11514,"line_start":437,"line_end":437,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":11515,"byte_end":11518,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ See also [`try_convert`](fn.try_convert.html) for conversion to more specific types.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":11519,"byte_end":11607,"line_start":439,"line_end":439,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":11608,"byte_end":11611,"line_start":440,"line_end":440,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":11612,"byte_end":11627,"line_start":441,"line_end":441,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":11628,"byte_end":11631,"line_start":442,"line_end":442,"column_start":1,"column_end":4}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":11632,"byte_end":11672,"line_start":443,"line_end":443,"column_start":1,"column_end":41}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":11673,"byte_end":11733,"line_start":444,"line_end":444,"column_start":1,"column_end":61}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":11734,"byte_end":11792,"line_start":445,"line_end":445,"column_start":1,"column_end":59}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":11793,"byte_end":11833,"line_start":446,"line_end":446,"column_start":1,"column_end":41}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":11834,"byte_end":11882,"line_start":447,"line_end":447,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":11883,"byte_end":11892,"line_start":448,"line_end":448,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":12332},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":12406,"byte_end":12417,"line_start":465,"line_end":465,"column_start":8,"column_end":19},"name":"try_convert","qualname":"::try_convert","value":"pub fn try_convert<From: SupersetOf<To>, To>(From) -> Option<To>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to convert an object to a more specific one.","sig":null,"attributes":[{"value":"/ Attempts to convert an object to a more specific one.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":11980,"byte_end":12037,"line_start":453,"line_end":453,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":12038,"byte_end":12041,"line_start":454,"line_end":454,"column_start":1,"column_end":4}},{"value":"/ See also [`convert`](fn.convert.html) for conversion to more general types.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":12042,"byte_end":12121,"line_start":455,"line_end":455,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":12122,"byte_end":12125,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":12126,"byte_end":12141,"line_start":457,"line_end":457,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":12142,"byte_end":12145,"line_start":458,"line_end":458,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":12146,"byte_end":12178,"line_start":459,"line_end":459,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":12179,"byte_end":12219,"line_start":460,"line_end":460,"column_start":1,"column_end":41}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":12220,"byte_end":12280,"line_start":461,"line_end":461,"column_start":1,"column_end":61}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":12281,"byte_end":12339,"line_start":462,"line_end":462,"column_start":1,"column_end":59}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":12340,"byte_end":12388,"line_start":463,"line_end":463,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":12389,"byte_end":12398,"line_start":464,"line_end":464,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":12335},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":12871,"byte_end":12885,"line_start":480,"line_end":480,"column_start":8,"column_end":22},"name":"is_convertible","qualname":"::is_convertible","value":"pub fn is_convertible<From: SupersetOf<To>, To>(&From) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if [`try_convert`](fn.try_convert.html) will succeed without\n actually performing the conversion.","sig":null,"attributes":[{"value":"/ Indicates if [`try_convert`](fn.try_convert.html) will succeed without","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":12490,"byte_end":12564,"line_start":469,"line_end":469,"column_start":1,"column_end":75}},{"value":"/ actually performing the conversion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":12565,"byte_end":12604,"line_start":470,"line_end":470,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":12605,"byte_end":12608,"line_start":471,"line_end":471,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":12609,"byte_end":12624,"line_start":472,"line_end":472,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":12625,"byte_end":12628,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":12629,"byte_end":12661,"line_start":474,"line_end":474,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":12662,"byte_end":12702,"line_start":475,"line_end":475,"column_start":1,"column_end":41}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":12703,"byte_end":12763,"line_start":476,"line_end":476,"column_start":1,"column_end":61}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":12764,"byte_end":12804,"line_start":477,"line_end":477,"column_start":1,"column_end":41}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":12805,"byte_end":12853,"line_start":478,"line_end":478,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":12854,"byte_end":12863,"line_start":479,"line_end":479,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":12338},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":13382,"byte_end":13399,"line_start":496,"line_end":496,"column_start":8,"column_end":25},"name":"convert_unchecked","qualname":"::convert_unchecked","value":"pub fn convert_unchecked<From: SupersetOf<To>, To>(From) -> To","parent":null,"children":[],"decl_id":null,"docs":" Use with care! Same as [`try_convert`](fn.try_convert.html) but\n without any property checks.","sig":null,"attributes":[{"value":"/ Use with care! Same as [`try_convert`](fn.try_convert.html) but","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":12956,"byte_end":13023,"line_start":484,"line_end":484,"column_start":1,"column_end":68}},{"value":"/ without any property checks.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":13024,"byte_end":13056,"line_start":485,"line_end":485,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":13057,"byte_end":13060,"line_start":486,"line_end":486,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":13061,"byte_end":13076,"line_start":487,"line_end":487,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":13077,"byte_end":13080,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":13081,"byte_end":13113,"line_start":489,"line_end":489,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":13114,"byte_end":13154,"line_start":490,"line_end":490,"column_start":1,"column_end":41}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":13155,"byte_end":13215,"line_start":491,"line_end":491,"column_start":1,"column_end":61}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":13216,"byte_end":13274,"line_start":492,"line_end":492,"column_start":1,"column_end":59}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":13275,"byte_end":13315,"line_start":493,"line_end":493,"column_start":1,"column_end":41}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":13316,"byte_end":13364,"line_start":494,"line_end":494,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":13365,"byte_end":13374,"line_start":495,"line_end":495,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":12341},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":13833,"byte_end":13844,"line_start":510,"line_end":510,"column_start":8,"column_end":19},"name":"convert_ref","qualname":"::convert_ref","value":"pub fn convert_ref<From, To: SupersetOf<From>>(&From) -> To","parent":null,"children":[],"decl_id":null,"docs":" Converts an object from one type to an equivalent or more general one.","sig":null,"attributes":[{"value":"/ Converts an object from one type to an equivalent or more general one.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":13474,"byte_end":13548,"line_start":500,"line_end":500,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":13549,"byte_end":13552,"line_start":501,"line_end":501,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":13553,"byte_end":13568,"line_start":502,"line_end":502,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":13569,"byte_end":13572,"line_start":503,"line_end":503,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":13573,"byte_end":13605,"line_start":504,"line_end":504,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":13606,"byte_end":13666,"line_start":505,"line_end":505,"column_start":1,"column_end":61}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":13667,"byte_end":13725,"line_start":506,"line_end":506,"column_start":1,"column_end":59}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":13726,"byte_end":13766,"line_start":507,"line_end":507,"column_start":1,"column_end":41}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":13767,"byte_end":13815,"line_start":508,"line_end":508,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":13816,"byte_end":13825,"line_start":509,"line_end":509,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":12344},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":14251,"byte_end":14266,"line_start":524,"line_end":524,"column_start":8,"column_end":23},"name":"try_convert_ref","qualname":"::try_convert_ref","value":"pub fn try_convert_ref<From: SupersetOf<To>, To>(&From) -> Option<To>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to convert an object to a more specific one.","sig":null,"attributes":[{"value":"/ Attempts to convert an object to a more specific one.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":13917,"byte_end":13974,"line_start":514,"line_end":514,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":13975,"byte_end":13978,"line_start":515,"line_end":515,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":13979,"byte_end":13994,"line_start":516,"line_end":516,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":13995,"byte_end":13998,"line_start":517,"line_end":517,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":13999,"byte_end":14031,"line_start":518,"line_end":518,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":14032,"byte_end":14072,"line_start":519,"line_end":519,"column_start":1,"column_end":41}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":14073,"byte_end":14133,"line_start":520,"line_end":520,"column_start":1,"column_end":61}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":14134,"byte_end":14192,"line_start":521,"line_end":521,"column_start":1,"column_end":59}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":14193,"byte_end":14233,"line_start":522,"line_end":522,"column_start":1,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":14234,"byte_end":14243,"line_start":523,"line_end":523,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":12347},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":14705,"byte_end":14726,"line_start":539,"line_end":539,"column_start":8,"column_end":29},"name":"convert_ref_unchecked","qualname":"::convert_ref_unchecked","value":"pub fn convert_ref_unchecked<From: SupersetOf<To>, To>(&From) -> To","parent":null,"children":[],"decl_id":null,"docs":" Use with care! Same as [`try_convert`](fn.try_convert.html) but\n without any property checks.","sig":null,"attributes":[{"value":"/ Use with care! Same as [`try_convert`](fn.try_convert.html) but","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":14340,"byte_end":14407,"line_start":528,"line_end":528,"column_start":1,"column_end":68}},{"value":"/ without any property checks.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":14408,"byte_end":14440,"line_start":529,"line_end":529,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":14441,"byte_end":14444,"line_start":530,"line_end":530,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":14445,"byte_end":14460,"line_start":531,"line_end":531,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":14461,"byte_end":14464,"line_start":532,"line_end":532,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":14465,"byte_end":14497,"line_start":533,"line_end":533,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":14498,"byte_end":14538,"line_start":534,"line_end":534,"column_start":1,"column_end":41}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":14539,"byte_end":14597,"line_start":535,"line_end":535,"column_start":1,"column_end":59}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":14598,"byte_end":14638,"line_start":536,"line_end":536,"column_start":1,"column_end":41}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":14639,"byte_end":14687,"line_start":537,"line_end":537,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":14688,"byte_end":14697,"line_start":538,"line_end":538,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":18939,"byte_end":18955,"line_start":73,"line_end":73,"column_start":67,"column_end":83},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":19578,"byte_end":19594,"line_start":97,"line_end":97,"column_start":57,"column_end":73},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":20397,"byte_end":20403,"line_start":20,"line_end":20,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":181},{"krate":0,"index":186},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":30755,"byte_end":30761,"line_start":315,"line_end":315,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":214},{"krate":0,"index":220},{"krate":0,"index":225},{"krate":0,"index":231},{"krate":0,"index":237},{"krate":0,"index":244},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":44258,"byte_end":44264,"line_start":717,"line_end":717,"column_start":53,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":269},{"krate":0,"index":275},{"krate":0,"index":280},{"krate":0,"index":288},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":57655,"byte_end":57661,"line_start":1091,"line_end":1091,"column_start":53,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":313},{"krate":0,"index":318},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":62988,"byte_end":63000,"line_start":1239,"line_end":1239,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":341},{"krate":0,"index":347},{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":71225,"byte_end":71240,"line_start":11,"line_end":11,"column_start":78,"column_end":93},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":71552,"byte_end":71567,"line_start":23,"line_end":23,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":71641,"byte_end":71656,"line_start":27,"line_end":27,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":71730,"byte_end":71745,"line_start":31,"line_end":31,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":73344,"byte_end":73359,"line_start":80,"line_end":80,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":73441,"byte_end":73456,"line_start":84,"line_end":84,"column_start":48,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":73538,"byte_end":73553,"line_start":88,"line_end":88,"column_start":48,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/default_allocator.rs","byte_start":81740,"byte_end":81756,"line_start":37,"line_end":37,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/default_allocator.rs","byte_start":82814,"byte_end":82830,"line_start":79,"line_end":79,"column_start":54,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/default_allocator.rs","byte_start":83754,"byte_end":83770,"line_start":109,"line_end":109,"column_start":58,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/default_allocator.rs","byte_start":84713,"byte_end":84729,"line_start":143,"line_end":143,"column_start":84,"column_end":100},"value":"","parent":null,"children":[{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/default_allocator.rs","byte_start":85618,"byte_end":85634,"line_start":173,"line_end":173,"column_start":83,"column_end":99},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/default_allocator.rs","byte_start":86477,"byte_end":86493,"line_start":201,"line_end":201,"column_start":83,"column_end":99},"value":"","parent":null,"children":[{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/default_allocator.rs","byte_start":87369,"byte_end":87385,"line_start":230,"line_end":230,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/default_allocator.rs","byte_start":87812,"byte_end":87828,"line_start":245,"line_end":245,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/default_allocator.rs","byte_start":88255,"byte_end":88271,"line_start":260,"line_end":260,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/default_allocator.rs","byte_start":88702,"byte_end":88718,"line_start":275,"line_end":275,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":89558,"byte_end":89565,"line_start":22,"line_end":22,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":90372,"byte_end":90379,"line_start":55,"line_end":55,"column_start":20,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":90407,"byte_end":90414,"line_start":56,"line_end":56,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":91279,"byte_end":91286,"line_start":79,"line_end":79,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":91541,"byte_end":91548,"line_start":96,"line_end":96,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":659},{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":91697,"byte_end":91704,"line_start":105,"line_end":105,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":662},{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":94891,"byte_end":94893,"line_start":216,"line_end":216,"column_start":14,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95179,"byte_end":95181,"line_start":234,"line_end":234,"column_start":18,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":676},{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95300,"byte_end":95302,"line_start":243,"line_end":243,"column_start":28,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":97682,"byte_end":97686,"line_start":310,"line_end":310,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":98249,"byte_end":98253,"line_start":323,"line_end":323,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":99115,"byte_end":99119,"line_start":350,"line_end":350,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":99763,"byte_end":99767,"line_start":369,"line_end":369,"column_start":9,"column_end":13},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":99947,"byte_end":99951,"line_start":374,"line_end":374,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":100086,"byte_end":100090,"line_start":380,"line_end":380,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":100518,"byte_end":100522,"line_start":400,"line_end":400,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":732},{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":100734,"byte_end":100738,"line_start":411,"line_end":411,"column_start":9,"column_end":13},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":106097,"byte_end":106104,"line_start":140,"line_end":140,"column_start":63,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":106301,"byte_end":106308,"line_start":146,"line_end":146,"column_start":76,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":107007,"byte_end":107014,"line_start":175,"line_end":175,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":107428,"byte_end":107438,"line_start":190,"line_end":190,"column_start":66,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":107793,"byte_end":107803,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":108475,"byte_end":108485,"line_start":232,"line_end":232,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":108880,"byte_end":108890,"line_start":252,"line_end":252,"column_start":63,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":109094,"byte_end":109104,"line_start":259,"line_end":259,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":109806,"byte_end":109816,"line_start":289,"line_end":289,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":110236,"byte_end":110249,"line_start":304,"line_end":304,"column_start":66,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":869},{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":110607,"byte_end":110620,"line_start":319,"line_end":319,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":111295,"byte_end":111308,"line_start":346,"line_end":346,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":112203,"byte_end":112209,"line_start":23,"line_end":23,"column_start":71,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":1034},{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":112438,"byte_end":112444,"line_start":33,"line_end":33,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1041},{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":112909,"byte_end":112915,"line_start":53,"line_end":53,"column_start":77,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":1048}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":113130,"byte_end":113136,"line_start":61,"line_end":61,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":113545,"byte_end":113551,"line_start":83,"line_end":83,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1060},{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":114153,"byte_end":114159,"line_start":113,"line_end":113,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":125959,"byte_end":125967,"line_start":377,"line_end":377,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1081}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":126234,"byte_end":126242,"line_start":387,"line_end":387,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":127311,"byte_end":127319,"line_start":417,"line_end":417,"column_start":74,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":127623,"byte_end":127631,"line_start":427,"line_end":427,"column_start":64,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":133205,"byte_end":133211,"line_start":602,"line_end":602,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1139},{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":133678,"byte_end":133684,"line_start":619,"line_end":619,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1149},{"krate":0,"index":1150}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":134281,"byte_end":134287,"line_start":638,"line_end":638,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":134774,"byte_end":134780,"line_start":655,"line_end":655,"column_start":74,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":1167}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":135335,"byte_end":135341,"line_start":674,"line_end":674,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1173},{"krate":0,"index":1177},{"krate":0,"index":1181},{"krate":0,"index":1189},{"krate":0,"index":1197},{"krate":0,"index":1205},{"krate":0,"index":1212}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":140964,"byte_end":140971,"line_start":845,"line_end":845,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1219}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":141279,"byte_end":141286,"line_start":855,"line_end":855,"column_start":62,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":1226}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/array_storage.rs","byte_start":200411,"byte_end":200423,"line_start":53,"line_end":53,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2215}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/array_storage.rs","byte_start":200694,"byte_end":200706,"line_start":68,"line_end":68,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2220}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/array_storage.rs","byte_start":200958,"byte_end":200970,"line_start":81,"line_end":81,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2226},{"krate":0,"index":2227}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/array_storage.rs","byte_start":201265,"byte_end":201277,"line_start":96,"line_end":96,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2232}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/array_storage.rs","byte_start":201523,"byte_end":201535,"line_start":109,"line_end":109,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2237}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/array_storage.rs","byte_start":201803,"byte_end":201815,"line_start":123,"line_end":123,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/array_storage.rs","byte_start":202033,"byte_end":202045,"line_start":134,"line_end":134,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2246}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/array_storage.rs","byte_start":202328,"byte_end":202340,"line_start":150,"line_end":150,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/array_storage.rs","byte_start":202507,"byte_end":202519,"line_start":160,"line_end":160,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2255}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/array_storage.rs","byte_start":202800,"byte_end":202812,"line_start":174,"line_end":174,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2260},{"krate":0,"index":2261},{"krate":0,"index":2262},{"krate":0,"index":2263},{"krate":0,"index":2264},{"krate":0,"index":2265},{"krate":0,"index":2266},{"krate":0,"index":2267},{"krate":0,"index":2268}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/array_storage.rs","byte_start":203933,"byte_end":203945,"line_start":230,"line_end":230,"column_start":46,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2273},{"krate":0,"index":2274}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/array_storage.rs","byte_start":204373,"byte_end":204385,"line_start":250,"line_end":250,"column_start":53,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/array_storage.rs","byte_start":204640,"byte_end":204652,"line_start":261,"line_end":261,"column_start":56,"column_end":68},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/array_storage.rs","byte_start":204917,"byte_end":204929,"line_start":272,"line_end":272,"column_start":66,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":2289},{"krate":0,"index":2290}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":209665,"byte_end":209672,"line_start":25,"line_end":25,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2397},{"krate":0,"index":2398},{"krate":0,"index":2400}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":210989,"byte_end":210996,"line_start":70,"line_end":70,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2404},{"krate":0,"index":2405}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":211848,"byte_end":211855,"line_start":99,"line_end":99,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2408},{"krate":0,"index":2409},{"krate":0,"index":2410},{"krate":0,"index":2411},{"krate":0,"index":2412},{"krate":0,"index":2413},{"krate":0,"index":2414},{"krate":0,"index":2415},{"krate":0,"index":2416},{"krate":0,"index":2417},{"krate":0,"index":2418},{"krate":0,"index":2419}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":215980,"byte_end":215992,"line_start":208,"line_end":208,"column_start":5,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2424},{"krate":0,"index":2425},{"krate":0,"index":2426},{"krate":0,"index":2428},{"krate":0,"index":2430},{"krate":0,"index":2432},{"krate":0,"index":2434},{"krate":0,"index":2435},{"krate":0,"index":2436},{"krate":0,"index":2438},{"krate":0,"index":2440},{"krate":0,"index":2442}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":222202,"byte_end":222214,"line_start":392,"line_end":392,"column_start":60,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":2448},{"krate":0,"index":2449}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":224409,"byte_end":224415,"line_start":19,"line_end":19,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2532}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":229460,"byte_end":229466,"line_start":147,"line_end":147,"column_start":59,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":17929},{"krate":0,"index":17933},{"krate":0,"index":17940},{"krate":0,"index":17944},{"krate":0,"index":17948},{"krate":0,"index":17952},{"krate":0,"index":17959},{"krate":0,"index":17963},{"krate":0,"index":2539},{"krate":0,"index":2541},{"krate":0,"index":2543},{"krate":0,"index":2544},{"krate":0,"index":2545}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":234900,"byte_end":234908,"line_start":34,"line_end":34,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2659},{"krate":0,"index":2660},{"krate":0,"index":2661},{"krate":0,"index":2662},{"krate":0,"index":2663},{"krate":0,"index":2665},{"krate":0,"index":2666},{"krate":0,"index":2667},{"krate":0,"index":2669},{"krate":0,"index":2670},{"krate":0,"index":2671},{"krate":0,"index":2672},{"krate":0,"index":2676},{"krate":0,"index":2680},{"krate":0,"index":2682},{"krate":0,"index":2686}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":244346,"byte_end":244353,"line_start":309,"line_end":309,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2690}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":256402,"byte_end":256410,"line_start":593,"line_end":593,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":17969},{"krate":0,"index":17970},{"krate":0,"index":17971},{"krate":0,"index":17972},{"krate":0,"index":17973},{"krate":0,"index":17975},{"krate":0,"index":17977},{"krate":0,"index":17978},{"krate":0,"index":17979},{"krate":0,"index":17980},{"krate":0,"index":17983}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":256927,"byte_end":256935,"line_start":605,"line_end":605,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":17984},{"krate":0,"index":17985},{"krate":0,"index":17986},{"krate":0,"index":17987},{"krate":0,"index":17988},{"krate":0,"index":17990},{"krate":0,"index":17992},{"krate":0,"index":17993},{"krate":0,"index":17994},{"krate":0,"index":17995},{"krate":0,"index":17998}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":257266,"byte_end":257274,"line_start":616,"line_end":616,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":17999},{"krate":0,"index":18000},{"krate":0,"index":18001},{"krate":0,"index":18002},{"krate":0,"index":18003},{"krate":0,"index":18005},{"krate":0,"index":18007},{"krate":0,"index":18008},{"krate":0,"index":18009},{"krate":0,"index":18010},{"krate":0,"index":18013}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":257557,"byte_end":257565,"line_start":627,"line_end":627,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":18014},{"krate":0,"index":18015},{"krate":0,"index":18016},{"krate":0,"index":18017},{"krate":0,"index":18018},{"krate":0,"index":18020},{"krate":0,"index":18022},{"krate":0,"index":18023},{"krate":0,"index":18024},{"krate":0,"index":18025},{"krate":0,"index":18028}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":263125,"byte_end":263133,"line_start":759,"line_end":759,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2710},{"krate":0,"index":2711}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":263434,"byte_end":263441,"line_start":775,"line_end":775,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2716}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":263665,"byte_end":263673,"line_start":786,"line_end":786,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2721},{"krate":0,"index":2722}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":264014,"byte_end":264022,"line_start":802,"line_end":802,"column_start":69,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":2727}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":265104,"byte_end":265112,"line_start":837,"line_end":837,"column_start":70,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":2736}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":272823,"byte_end":272830,"line_start":1028,"line_end":1028,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2743},{"krate":0,"index":2744},{"krate":0,"index":2745},{"krate":0,"index":2746},{"krate":0,"index":2747},{"krate":0,"index":2748},{"krate":0,"index":2749},{"krate":0,"index":2750},{"krate":0,"index":2751},{"krate":0,"index":2752},{"krate":0,"index":2753},{"krate":0,"index":2754},{"krate":0,"index":2755},{"krate":0,"index":2756}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":277033,"byte_end":277046,"line_start":9,"line_end":9,"column_start":5,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2798},{"krate":0,"index":2799}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":279006,"byte_end":279019,"line_start":59,"line_end":59,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2805},{"krate":0,"index":2806}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":282941,"byte_end":282957,"line_start":143,"line_end":143,"column_start":5,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2815},{"krate":0,"index":2816}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":285976,"byte_end":285992,"line_start":215,"line_end":215,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2822},{"krate":0,"index":2823}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/conversion.rs","byte_start":291258,"byte_end":291266,"line_start":35,"line_end":35,"column_start":65,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":3015},{"krate":0,"index":3016},{"krate":0,"index":3018}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/conversion.rs","byte_start":301958,"byte_end":301964,"line_start":351,"line_end":351,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3046}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/conversion.rs","byte_start":302430,"byte_end":302436,"line_start":368,"line_end":368,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3053}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/conversion.rs","byte_start":302823,"byte_end":302829,"line_start":382,"line_end":382,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3060}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/conversion.rs","byte_start":303172,"byte_end":303178,"line_start":395,"line_end":395,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3068}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/conversion.rs","byte_start":303650,"byte_end":303656,"line_start":412,"line_end":412,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3075}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/conversion.rs","byte_start":304049,"byte_end":304055,"line_start":426,"line_end":426,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3082}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/conversion.rs","byte_start":304397,"byte_end":304408,"line_start":439,"line_end":439,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3093}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/conversion.rs","byte_start":305476,"byte_end":305487,"line_start":476,"line_end":476,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3104}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/conversion.rs","byte_start":306559,"byte_end":306573,"line_start":513,"line_end":513,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3115}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/conversion.rs","byte_start":307644,"byte_end":307651,"line_start":550,"line_end":550,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3119}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/conversion.rs","byte_start":308205,"byte_end":308217,"line_start":575,"line_end":575,"column_start":46,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3137}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/conversion.rs","byte_start":308382,"byte_end":308397,"line_start":582,"line_end":582,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3141}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/conversion.rs","byte_start":308616,"byte_end":308624,"line_start":590,"line_end":590,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3148}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/conversion.rs","byte_start":309236,"byte_end":309244,"line_start":611,"line_end":611,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3157}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/conversion.rs","byte_start":309952,"byte_end":309960,"line_start":634,"line_end":634,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3166}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/conversion.rs","byte_start":310861,"byte_end":310869,"line_start":661,"line_end":661,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3175}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":312903,"byte_end":312909,"line_start":22,"line_end":22,"column_start":61,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":3286},{"krate":0,"index":3287},{"krate":0,"index":3288},{"krate":0,"index":3291}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":315649,"byte_end":315655,"line_start":104,"line_end":104,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3299},{"krate":0,"index":3302},{"krate":0,"index":3304},{"krate":0,"index":3307}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":317655,"byte_end":317661,"line_start":159,"line_end":159,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3315},{"krate":0,"index":3316},{"krate":0,"index":3317},{"krate":0,"index":3318},{"krate":0,"index":3319},{"krate":0,"index":3320},{"krate":0,"index":3321}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":320618,"byte_end":320624,"line_start":242,"line_end":242,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3326},{"krate":0,"index":3327}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":321824,"byte_end":321830,"line_start":276,"line_end":276,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3333},{"krate":0,"index":3334}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":322822,"byte_end":322828,"line_start":312,"line_end":312,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3340},{"krate":0,"index":3341},{"krate":0,"index":3342},{"krate":0,"index":3343},{"krate":0,"index":3345},{"krate":0,"index":3346},{"krate":0,"index":3348},{"krate":0,"index":3349},{"krate":0,"index":3351},{"krate":0,"index":3352}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":330181,"byte_end":330187,"line_start":540,"line_end":540,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3359},{"krate":0,"index":3360},{"krate":0,"index":3362},{"krate":0,"index":3363},{"krate":0,"index":3365},{"krate":0,"index":3366},{"krate":0,"index":3368},{"krate":0,"index":3369}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":335212,"byte_end":335218,"line_start":701,"line_end":701,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3376},{"krate":0,"index":3377},{"krate":0,"index":3378},{"krate":0,"index":3379},{"krate":0,"index":3382},{"krate":0,"index":3385}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":342120,"byte_end":342127,"line_start":888,"line_end":888,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3390}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":342920,"byte_end":342928,"line_start":907,"line_end":907,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3394}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":343892,"byte_end":343900,"line_start":931,"line_end":931,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3398}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":346783,"byte_end":346789,"line_start":1029,"line_end":1029,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3407}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":348299,"byte_end":348305,"line_start":1077,"line_end":1077,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3412}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":348917,"byte_end":348923,"line_start":1098,"line_end":1098,"column_start":53,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3420}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":352227,"byte_end":352232,"line_start":51,"line_end":51,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3478},{"krate":0,"index":3479},{"krate":0,"index":3480},{"krate":0,"index":3481}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":353391,"byte_end":353400,"line_start":95,"line_end":95,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3484},{"krate":0,"index":3485},{"krate":0,"index":3486},{"krate":0,"index":3487}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":354419,"byte_end":354428,"line_start":135,"line_end":135,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3491},{"krate":0,"index":3492},{"krate":0,"index":3493},{"krate":0,"index":3494}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":354960,"byte_end":354969,"line_start":163,"line_end":163,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3497},{"krate":0,"index":3498},{"krate":0,"index":3499},{"krate":0,"index":3500}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":355470,"byte_end":355484,"line_start":189,"line_end":189,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3503},{"krate":0,"index":3504},{"krate":0,"index":3505},{"krate":0,"index":3506}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":356989,"byte_end":356996,"line_start":245,"line_end":245,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3509},{"krate":0,"index":3510},{"krate":0,"index":3511},{"krate":0,"index":3512}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":357967,"byte_end":357983,"line_start":285,"line_end":285,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3515},{"krate":0,"index":3516},{"krate":0,"index":3517},{"krate":0,"index":3518}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":363920,"byte_end":363926,"line_start":492,"line_end":492,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3545},{"krate":0,"index":3548},{"krate":0,"index":3551},{"krate":0,"index":3554},{"krate":0,"index":3557},{"krate":0,"index":3560}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":384258,"byte_end":384264,"line_start":182,"line_end":182,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":3796}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":384510,"byte_end":384516,"line_start":191,"line_end":191,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3802}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":386540,"byte_end":386546,"line_start":282,"line_end":282,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3808}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":386942,"byte_end":386948,"line_start":294,"line_end":294,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3814},{"krate":0,"index":3815},{"krate":0,"index":3816},{"krate":0,"index":3817},{"krate":0,"index":3818},{"krate":0,"index":3819},{"krate":0,"index":3820},{"krate":0,"index":3821},{"krate":0,"index":3826},{"krate":0,"index":3831},{"krate":0,"index":3832},{"krate":0,"index":3835},{"krate":0,"index":3836},{"krate":0,"index":3839},{"krate":0,"index":3843}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":394848,"byte_end":394854,"line_start":558,"line_end":558,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3849},{"krate":0,"index":3852},{"krate":0,"index":3856},{"krate":0,"index":3859},{"krate":0,"index":3864},{"krate":0,"index":3871},{"krate":0,"index":3874},{"krate":0,"index":3881},{"krate":0,"index":3883},{"krate":0,"index":3889}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":404367,"byte_end":404373,"line_start":863,"line_end":863,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3904},{"krate":0,"index":3905},{"krate":0,"index":3906},{"krate":0,"index":3907},{"krate":0,"index":3908},{"krate":0,"index":3909}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":407508,"byte_end":407514,"line_start":972,"line_end":972,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3915},{"krate":0,"index":3916},{"krate":0,"index":3917},{"krate":0,"index":3918},{"krate":0,"index":3919},{"krate":0,"index":3923},{"krate":0,"index":3927}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":411217,"byte_end":411223,"line_start":1083,"line_end":1083,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3933}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":411604,"byte_end":411610,"line_start":1093,"line_end":1093,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3938}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":412033,"byte_end":412039,"line_start":1103,"line_end":1103,"column_start":64,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":3944}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":412298,"byte_end":412304,"line_start":1111,"line_end":1111,"column_start":67,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":3950}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":412569,"byte_end":412575,"line_start":1119,"line_end":1119,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3955}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":413053,"byte_end":413059,"line_start":1137,"line_end":1137,"column_start":64,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":3961},{"krate":0,"index":3965},{"krate":0,"index":3966},{"krate":0,"index":3970},{"krate":0,"index":3971},{"krate":0,"index":3973},{"krate":0,"index":3975}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":416022,"byte_end":416028,"line_start":1234,"line_end":1234,"column_start":67,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":3982},{"krate":0,"index":3984},{"krate":0,"index":3986}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":416684,"byte_end":416690,"line_start":1254,"line_end":1254,"column_start":59,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3992},{"krate":0,"index":3993}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":417814,"byte_end":417826,"line_start":1290,"line_end":1290,"column_start":46,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3998},{"krate":0,"index":4000},{"krate":0,"index":4003}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":419376,"byte_end":419388,"line_start":1347,"line_end":1347,"column_start":56,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":4008},{"krate":0,"index":4009}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":420403,"byte_end":420409,"line_start":1383,"line_end":1383,"column_start":5,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4014}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":421181,"byte_end":421187,"line_start":1404,"line_end":1404,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4019},{"krate":0,"index":4020}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":422135,"byte_end":422141,"line_start":1432,"line_end":1432,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4026}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":422760,"byte_end":422766,"line_start":1450,"line_end":1450,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4032},{"krate":0,"index":4033},{"krate":0,"index":4034}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":423230,"byte_end":423236,"line_start":1471,"line_end":1471,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4041},{"krate":0,"index":4042}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":423694,"byte_end":423700,"line_start":1493,"line_end":1493,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4048},{"krate":0,"index":4049}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":424186,"byte_end":424192,"line_start":1513,"line_end":1513,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4056},{"krate":0,"index":4057},{"krate":0,"index":4059},{"krate":0,"index":4061},{"krate":0,"index":4063}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":426864,"byte_end":426870,"line_start":1605,"line_end":1605,"column_start":35,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":427005,"byte_end":427011,"line_start":1612,"line_end":1612,"column_start":67,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":4078}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":430999,"byte_end":431005,"line_start":1732,"line_end":1732,"column_start":5,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4086},{"krate":0,"index":4090}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":435057,"byte_end":435063,"line_start":1833,"line_end":1833,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4097}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":435690,"byte_end":435696,"line_start":1854,"line_end":1854,"column_start":64,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":4103}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":436388,"byte_end":436392,"line_start":1876,"line_end":1876,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4112},{"krate":0,"index":4113},{"krate":0,"index":4114}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":436819,"byte_end":436823,"line_start":1895,"line_end":1895,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4120},{"krate":0,"index":4121}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":437320,"byte_end":437324,"line_start":1918,"line_end":1918,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4127},{"krate":0,"index":4128}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":437709,"byte_end":437715,"line_start":1935,"line_end":1935,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4134}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_simba.rs","byte_start":438348,"byte_end":438356,"line_start":12,"line_end":12,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4160},{"krate":0,"index":4161},{"krate":0,"index":4162},{"krate":0,"index":4163},{"krate":0,"index":4164},{"krate":0,"index":4166},{"krate":0,"index":4168},{"krate":0,"index":4170},{"krate":0,"index":4172}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":443564,"byte_end":443576,"line_start":93,"line_end":93,"column_start":9,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":443691,"byte_end":443703,"line_start":98,"line_end":98,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4257}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":446358,"byte_end":446373,"line_start":182,"line_end":182,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4266},{"krate":0,"index":4267}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":446967,"byte_end":446979,"line_start":202,"line_end":202,"column_start":9,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":447096,"byte_end":447111,"line_start":206,"line_end":206,"column_start":9,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":447231,"byte_end":447246,"line_start":210,"line_end":210,"column_start":9,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":447378,"byte_end":447390,"line_start":215,"line_end":215,"column_start":9,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":447514,"byte_end":447529,"line_start":219,"line_end":219,"column_start":9,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":447656,"byte_end":447671,"line_start":223,"line_end":223,"column_start":9,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":447750,"byte_end":447756,"line_start":227,"line_end":227,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4303}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":464383,"byte_end":464389,"line_start":639,"line_end":639,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":21533},{"krate":0,"index":21534},{"krate":0,"index":21535},{"krate":0,"index":21536},{"krate":0,"index":21537},{"krate":0,"index":21539},{"krate":0,"index":21541},{"krate":0,"index":21543},{"krate":0,"index":21545},{"krate":0,"index":21546},{"krate":0,"index":21547},{"krate":0,"index":21548},{"krate":0,"index":21549},{"krate":0,"index":21551},{"krate":0,"index":21553},{"krate":0,"index":21555},{"krate":0,"index":21557},{"krate":0,"index":21558},{"krate":0,"index":21559},{"krate":0,"index":21562},{"krate":0,"index":21565},{"krate":0,"index":21568},{"krate":0,"index":21571},{"krate":0,"index":21574}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":465128,"byte_end":465134,"line_start":669,"line_end":669,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":21577},{"krate":0,"index":21578},{"krate":0,"index":21579},{"krate":0,"index":21580},{"krate":0,"index":21581},{"krate":0,"index":21583},{"krate":0,"index":21585},{"krate":0,"index":21587},{"krate":0,"index":21589},{"krate":0,"index":21590},{"krate":0,"index":21591},{"krate":0,"index":21592},{"krate":0,"index":21593},{"krate":0,"index":21595},{"krate":0,"index":21597},{"krate":0,"index":21599},{"krate":0,"index":21601},{"krate":0,"index":21602},{"krate":0,"index":21603},{"krate":0,"index":21606},{"krate":0,"index":21609},{"krate":0,"index":21612},{"krate":0,"index":21615},{"krate":0,"index":21618}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":467003,"byte_end":467008,"line_start":737,"line_end":737,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4343},{"krate":0,"index":4344},{"krate":0,"index":4345},{"krate":0,"index":4346}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":467357,"byte_end":467366,"line_start":756,"line_end":756,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4349},{"krate":0,"index":4350},{"krate":0,"index":4351},{"krate":0,"index":4352}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":467725,"byte_end":467732,"line_start":775,"line_end":775,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4355},{"krate":0,"index":4356},{"krate":0,"index":4357},{"krate":0,"index":4358}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":468059,"byte_end":468068,"line_start":794,"line_end":794,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4361},{"krate":0,"index":4362},{"krate":0,"index":4363},{"krate":0,"index":4364}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":468486,"byte_end":468492,"line_start":815,"line_end":815,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4370},{"krate":0,"index":4373},{"krate":0,"index":4375}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":469830,"byte_end":469836,"line_start":856,"line_end":856,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4382},{"krate":0,"index":4385},{"krate":0,"index":4387}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":471159,"byte_end":471170,"line_start":895,"line_end":895,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4396}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":473225,"byte_end":473238,"line_start":49,"line_end":49,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4491},{"krate":0,"index":4495}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":474071,"byte_end":474077,"line_start":83,"line_end":83,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4505},{"krate":0,"index":4510}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":475090,"byte_end":475101,"line_start":120,"line_end":120,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":4520},{"krate":0,"index":4525}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":476167,"byte_end":476173,"line_start":158,"line_end":158,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4538},{"krate":0,"index":4539},{"krate":0,"index":4540},{"krate":0,"index":4544},{"krate":0,"index":4546},{"krate":0,"index":4551},{"krate":0,"index":4552},{"krate":0,"index":4553},{"krate":0,"index":4554},{"krate":0,"index":4555},{"krate":0,"index":4556},{"krate":0,"index":4557},{"krate":0,"index":4558}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":482072,"byte_end":482078,"line_start":363,"line_end":363,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4564},{"krate":0,"index":4565},{"krate":0,"index":4567}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":483638,"byte_end":483646,"line_start":417,"line_end":417,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4572},{"krate":0,"index":4573},{"krate":0,"index":4574},{"krate":0,"index":4575},{"krate":0,"index":4576}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":484163,"byte_end":484167,"line_start":444,"line_end":444,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4581},{"krate":0,"index":4582}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":484661,"byte_end":484668,"line_start":461,"line_end":461,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4586},{"krate":0,"index":4587},{"krate":0,"index":4588}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":490020,"byte_end":490026,"line_start":12,"line_end":12,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4645},{"krate":0,"index":4646},{"krate":0,"index":4647},{"krate":0,"index":4648}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":492743,"byte_end":492749,"line_start":109,"line_end":109,"column_start":60,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":4654}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":493305,"byte_end":493317,"line_start":126,"line_end":126,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4659},{"krate":0,"index":4660}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/scalar.rs","byte_start":494674,"byte_end":494675,"line_start":24,"line_end":24,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4677}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":495065,"byte_end":495071,"line_start":8,"line_end":8,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4728},{"krate":0,"index":4730},{"krate":0,"index":4732}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":497141,"byte_end":497147,"line_start":78,"line_end":78,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4739},{"krate":0,"index":4741},{"krate":0,"index":4743},{"krate":0,"index":4745},{"krate":0,"index":4747},{"krate":0,"index":4749},{"krate":0,"index":4751},{"krate":0,"index":4753},{"krate":0,"index":4756},{"krate":0,"index":4757},{"krate":0,"index":4759},{"krate":0,"index":4761}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506519,"byte_end":506525,"line_start":21,"line_end":21,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":21621},{"krate":0,"index":21622},{"krate":0,"index":21623},{"krate":0,"index":21624},{"krate":0,"index":21625},{"krate":0,"index":21626},{"krate":0,"index":21627},{"krate":0,"index":21628},{"krate":0,"index":21629},{"krate":0,"index":21630},{"krate":0,"index":21631},{"krate":0,"index":21632},{"krate":0,"index":21633},{"krate":0,"index":21634},{"krate":0,"index":21635},{"krate":0,"index":21636},{"krate":0,"index":21637},{"krate":0,"index":21638},{"krate":0,"index":21639},{"krate":0,"index":21640},{"krate":0,"index":21641},{"krate":0,"index":21642},{"krate":0,"index":21643},{"krate":0,"index":21644},{"krate":0,"index":21645},{"krate":0,"index":21646},{"krate":0,"index":21647},{"krate":0,"index":21648},{"krate":0,"index":21649},{"krate":0,"index":21650},{"krate":0,"index":21651},{"krate":0,"index":21652},{"krate":0,"index":21653},{"krate":0,"index":21654},{"krate":0,"index":21655},{"krate":0,"index":21656}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":510439,"byte_end":510443,"line_start":68,"line_end":68,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4841}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":510668,"byte_end":510672,"line_start":81,"line_end":81,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":511281,"byte_end":511285,"line_start":105,"line_end":105,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4855},{"krate":0,"index":4856},{"krate":0,"index":4858},{"krate":0,"index":4859},{"krate":0,"index":4860},{"krate":0,"index":4861}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":513704,"byte_end":513708,"line_start":175,"line_end":175,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4864},{"krate":0,"index":4865},{"krate":0,"index":4867},{"krate":0,"index":4868},{"krate":0,"index":4869}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":514733,"byte_end":514737,"line_start":211,"line_end":211,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4872}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":516511,"byte_end":516515,"line_start":283,"line_end":283,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4875},{"krate":0,"index":4876}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":516932,"byte_end":516936,"line_start":296,"line_end":296,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4883}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":517464,"byte_end":517468,"line_start":312,"line_end":312,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4891}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":518078,"byte_end":518082,"line_start":330,"line_end":330,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4899}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":518857,"byte_end":518861,"line_start":352,"line_end":352,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4907}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":520920,"byte_end":520930,"line_start":38,"line_end":38,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4970},{"krate":0,"index":4971},{"krate":0,"index":4972},{"krate":0,"index":4973},{"krate":0,"index":4974},{"krate":0,"index":4975}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":522567,"byte_end":522577,"line_start":96,"line_end":96,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4980}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":522762,"byte_end":522772,"line_start":108,"line_end":108,"column_start":59,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":4984},{"krate":0,"index":4985},{"krate":0,"index":4986},{"krate":0,"index":4987},{"krate":0,"index":4988},{"krate":0,"index":4989},{"krate":0,"index":4990},{"krate":0,"index":4991},{"krate":0,"index":4992}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":523725,"byte_end":523735,"line_start":157,"line_end":157,"column_start":63,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":4996},{"krate":0,"index":4997},{"krate":0,"index":4998},{"krate":0,"index":4999},{"krate":0,"index":5000},{"krate":0,"index":5001},{"krate":0,"index":5002},{"krate":0,"index":5003},{"krate":0,"index":5004}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":524728,"byte_end":524738,"line_start":211,"line_end":211,"column_start":62,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":5008},{"krate":0,"index":5009}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":525078,"byte_end":525088,"line_start":226,"line_end":226,"column_start":69,"column_end":79},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":525248,"byte_end":525258,"line_start":231,"line_end":231,"column_start":72,"column_end":82},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":525414,"byte_end":525424,"line_start":236,"line_end":236,"column_start":68,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":5020},{"krate":0,"index":5021}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":525853,"byte_end":525863,"line_start":254,"line_end":254,"column_start":68,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":5026},{"krate":0,"index":5027}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":526294,"byte_end":526304,"line_start":272,"line_end":272,"column_start":66,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":5031},{"krate":0,"index":5032}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":526643,"byte_end":526653,"line_start":287,"line_end":287,"column_start":68,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":5037},{"krate":0,"index":5038}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":527086,"byte_end":527096,"line_start":305,"line_end":305,"column_start":68,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":5043},{"krate":0,"index":5044}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":527964,"byte_end":527974,"line_start":338,"line_end":338,"column_start":73,"column_end":83},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":528138,"byte_end":528148,"line_start":343,"line_end":343,"column_start":76,"column_end":86},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":528267,"byte_end":528277,"line_start":348,"line_end":348,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5054}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":528982,"byte_end":528992,"line_start":364,"line_end":364,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5060}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":529474,"byte_end":529484,"line_start":377,"line_end":377,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5067}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":530391,"byte_end":530401,"line_start":405,"line_end":405,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5071}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":531646,"byte_end":531652,"line_start":9,"line_end":9,"column_start":5,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5141},{"krate":0,"index":5143}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":533206,"byte_end":533210,"line_start":60,"line_end":60,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5149},{"krate":0,"index":5152}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":535464,"byte_end":535470,"line_start":7,"line_end":7,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5195},{"krate":0,"index":5198},{"krate":0,"index":5201},{"krate":0,"index":5205},{"krate":0,"index":5209},{"krate":0,"index":5213},{"krate":0,"index":5217}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":540132,"byte_end":540138,"line_start":163,"line_end":163,"column_start":76,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":5223}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":541219,"byte_end":541225,"line_start":198,"line_end":198,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5228},{"krate":0,"index":5229},{"krate":0,"index":5230},{"krate":0,"index":5231},{"krate":0,"index":5232},{"krate":0,"index":5233},{"krate":0,"index":5234}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/abstract_rotation.rs","byte_start":558893,"byte_end":558901,"line_start":40,"line_end":40,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":5313},{"krate":0,"index":5314},{"krate":0,"index":5315},{"krate":0,"index":5316},{"krate":0,"index":5317},{"krate":0,"index":5318},{"krate":0,"index":5319},{"krate":0,"index":5320}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/abstract_rotation.rs","byte_start":560199,"byte_end":560213,"line_start":101,"line_end":101,"column_start":52,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5323},{"krate":0,"index":5324},{"krate":0,"index":5325},{"krate":0,"index":5326},{"krate":0,"index":5327},{"krate":0,"index":5328},{"krate":0,"index":5329}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/abstract_rotation.rs","byte_start":561028,"byte_end":561039,"line_start":141,"line_end":141,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":5332},{"krate":0,"index":5333},{"krate":0,"index":5334},{"krate":0,"index":5335},{"krate":0,"index":5336},{"krate":0,"index":5337},{"krate":0,"index":5338}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":564061,"byte_end":564066,"line_start":51,"line_end":51,"column_start":70,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":5401}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":564321,"byte_end":564326,"line_start":61,"line_end":61,"column_start":45,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":565772,"byte_end":565777,"line_start":119,"line_end":119,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5409},{"krate":0,"index":5412},{"krate":0,"index":5414},{"krate":0,"index":5415},{"krate":0,"index":5416},{"krate":0,"index":5417},{"krate":0,"index":5418},{"krate":0,"index":5419},{"krate":0,"index":5420},{"krate":0,"index":5421},{"krate":0,"index":5422},{"krate":0,"index":5423}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":570911,"byte_end":570916,"line_start":291,"line_end":291,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5427},{"krate":0,"index":5428},{"krate":0,"index":5429}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":571327,"byte_end":571332,"line_start":309,"line_end":309,"column_start":57,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5433},{"krate":0,"index":5434}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":571808,"byte_end":571813,"line_start":331,"line_end":331,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5438},{"krate":0,"index":5439}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":572185,"byte_end":572190,"line_start":347,"line_end":347,"column_start":41,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":572283,"byte_end":572288,"line_start":349,"line_end":349,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":5446}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":572498,"byte_end":572503,"line_start":359,"line_end":359,"column_start":57,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5450},{"krate":0,"index":5451},{"krate":0,"index":5452},{"krate":0,"index":5453},{"krate":0,"index":5454}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":573152,"byte_end":573157,"line_start":392,"line_end":392,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5458},{"krate":0,"index":5459},{"krate":0,"index":5460}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":573919,"byte_end":573924,"line_start":421,"line_end":421,"column_start":61,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5464}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":576135,"byte_end":576140,"line_start":20,"line_end":20,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5593},{"krate":0,"index":5594},{"krate":0,"index":5595},{"krate":0,"index":5596}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":579337,"byte_end":579342,"line_start":123,"line_end":123,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5600},{"krate":0,"index":5601}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":579638,"byte_end":579646,"line_start":138,"line_end":138,"column_start":59,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":5605}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":580420,"byte_end":580426,"line_start":169,"line_end":169,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5610}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_conversion.rs","byte_start":583294,"byte_end":583299,"line_start":28,"line_end":28,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5670},{"krate":0,"index":5671},{"krate":0,"index":5673}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_conversion.rs","byte_start":583985,"byte_end":583990,"line_start":53,"line_end":53,"column_start":62,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":5678},{"krate":0,"index":5679},{"krate":0,"index":5680}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_conversion.rs","byte_start":586382,"byte_end":586389,"line_start":134,"line_end":134,"column_start":64,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":5684}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_conversion.rs","byte_start":586656,"byte_end":586661,"line_start":145,"line_end":145,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5688}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_conversion.rs","byte_start":586904,"byte_end":586909,"line_start":156,"line_end":156,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5694}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_conversion.rs","byte_start":587384,"byte_end":587389,"line_start":170,"line_end":170,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5701}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_conversion.rs","byte_start":587953,"byte_end":587958,"line_start":189,"line_end":189,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5708}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_conversion.rs","byte_start":588631,"byte_end":588636,"line_start":212,"line_end":212,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5715}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_ops.rs","byte_start":591188,"byte_end":591193,"line_start":23,"line_end":23,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5890},{"krate":0,"index":5891}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_ops.rs","byte_start":591413,"byte_end":591418,"line_start":35,"line_end":35,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5895}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_ops.rs","byte_start":591653,"byte_end":591658,"line_start":50,"line_end":50,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5899},{"krate":0,"index":5900}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_simba.rs","byte_start":598932,"byte_end":598937,"line_start":9,"line_end":9,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5936},{"krate":0,"index":5937},{"krate":0,"index":5938},{"krate":0,"index":5939},{"krate":0,"index":5940},{"krate":0,"index":5941},{"krate":0,"index":5942},{"krate":0,"index":5943},{"krate":0,"index":5944}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":603430,"byte_end":603438,"line_start":65,"line_end":65,"column_start":70,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":6013}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":603699,"byte_end":603707,"line_start":75,"line_end":75,"column_start":45,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":603865,"byte_end":603873,"line_start":82,"line_end":82,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6021}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":605406,"byte_end":605414,"line_start":144,"line_end":144,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6025}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":606551,"byte_end":606559,"line_start":182,"line_end":182,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6029},{"krate":0,"index":6030},{"krate":0,"index":6031},{"krate":0,"index":6032},{"krate":0,"index":6033},{"krate":0,"index":6034}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":611016,"byte_end":611024,"line_start":299,"line_end":299,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6038},{"krate":0,"index":6039},{"krate":0,"index":6040},{"krate":0,"index":6041}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":615055,"byte_end":615063,"line_start":407,"line_end":407,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6045},{"krate":0,"index":6046},{"krate":0,"index":6047},{"krate":0,"index":6048},{"krate":0,"index":6049}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":618899,"byte_end":618907,"line_start":508,"line_end":508,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":619015,"byte_end":619023,"line_start":510,"line_end":510,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":6056}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":619214,"byte_end":619222,"line_start":520,"line_end":520,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6060},{"krate":0,"index":6061},{"krate":0,"index":6062}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":619642,"byte_end":619650,"line_start":539,"line_end":539,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6066},{"krate":0,"index":6067}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":620140,"byte_end":620148,"line_start":562,"line_end":562,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6071},{"krate":0,"index":6072}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":620568,"byte_end":620576,"line_start":584,"line_end":584,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6076}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_construction.rs","byte_start":622200,"byte_end":622208,"line_start":12,"line_end":12,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6129}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_construction.rs","byte_start":622795,"byte_end":622803,"line_start":34,"line_end":34,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6133}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_conversion.rs","byte_start":623919,"byte_end":623927,"line_start":33,"line_end":33,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":6234},{"krate":0,"index":6235},{"krate":0,"index":6236}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_conversion.rs","byte_start":624548,"byte_end":624557,"line_start":55,"line_end":55,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6240},{"krate":0,"index":6241},{"krate":0,"index":6242}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_conversion.rs","byte_start":625150,"byte_end":625159,"line_start":78,"line_end":78,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":6246},{"krate":0,"index":6247},{"krate":0,"index":6248}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_conversion.rs","byte_start":625752,"byte_end":625760,"line_start":101,"line_end":101,"column_start":62,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":6254},{"krate":0,"index":6255},{"krate":0,"index":6256}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_conversion.rs","byte_start":626418,"byte_end":626426,"line_start":124,"line_end":124,"column_start":64,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":6262},{"krate":0,"index":6263},{"krate":0,"index":6264}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_conversion.rs","byte_start":627141,"byte_end":627149,"line_start":147,"line_end":147,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":6270},{"krate":0,"index":6271},{"krate":0,"index":6272}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_conversion.rs","byte_start":628099,"byte_end":628107,"line_start":176,"line_end":176,"column_start":62,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":6277},{"krate":0,"index":6278},{"krate":0,"index":6281}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_conversion.rs","byte_start":629713,"byte_end":629720,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6284}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_conversion.rs","byte_start":629857,"byte_end":629864,"line_start":227,"line_end":227,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6287}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_conversion.rs","byte_start":629997,"byte_end":630004,"line_start":234,"line_end":234,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6290}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_conversion.rs","byte_start":630141,"byte_end":630148,"line_start":241,"line_end":241,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6293}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_conversion.rs","byte_start":630331,"byte_end":630339,"line_start":249,"line_end":249,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6299}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_conversion.rs","byte_start":630820,"byte_end":630828,"line_start":265,"line_end":265,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6306}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_conversion.rs","byte_start":631391,"byte_end":631399,"line_start":283,"line_end":283,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6313}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_conversion.rs","byte_start":632127,"byte_end":632135,"line_start":305,"line_end":305,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6320}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":633240,"byte_end":633249,"line_start":4,"line_end":4,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6344}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":634007,"byte_end":634016,"line_start":31,"line_end":31,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6347},{"krate":0,"index":6348}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_ops.rs","byte_start":636581,"byte_end":636589,"line_start":33,"line_end":33,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":6436},{"krate":0,"index":6437}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_simba.rs","byte_start":642434,"byte_end":642442,"line_start":9,"line_end":9,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6464},{"krate":0,"index":6465},{"krate":0,"index":6466},{"krate":0,"index":6467},{"krate":0,"index":6468},{"krate":0,"index":6469},{"krate":0,"index":6470},{"krate":0,"index":6471},{"krate":0,"index":6472}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":644349,"byte_end":644358,"line_start":25,"line_end":25,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6556},{"krate":0,"index":6557}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":645396,"byte_end":645405,"line_start":55,"line_end":55,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6561},{"krate":0,"index":6562},{"krate":0,"index":6563},{"krate":0,"index":6566},{"krate":0,"index":6569},{"krate":0,"index":6570},{"krate":0,"index":6571}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":650901,"byte_end":650910,"line_start":208,"line_end":208,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6574},{"krate":0,"index":6575},{"krate":0,"index":6576}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":652085,"byte_end":652093,"line_start":248,"line_end":248,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":6579}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":652763,"byte_end":652772,"line_start":278,"line_end":278,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6584},{"krate":0,"index":6586},{"krate":0,"index":6588},{"krate":0,"index":6591}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":658337,"byte_end":658346,"line_start":423,"line_end":423,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6594},{"krate":0,"index":6597},{"krate":0,"index":6600},{"krate":0,"index":6603}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":662374,"byte_end":662383,"line_start":537,"line_end":537,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6608},{"krate":0,"index":6611},{"krate":0,"index":6614},{"krate":0,"index":6615},{"krate":0,"index":6616},{"krate":0,"index":6617},{"krate":0,"index":6618}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":669382,"byte_end":669391,"line_start":727,"line_end":727,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6621},{"krate":0,"index":6622},{"krate":0,"index":6623},{"krate":0,"index":6624},{"krate":0,"index":6625},{"krate":0,"index":6626},{"krate":0,"index":6627}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":674879,"byte_end":674887,"line_start":893,"line_end":893,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":6630}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":677538,"byte_end":677548,"line_start":35,"line_end":35,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6721}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":678753,"byte_end":678763,"line_start":89,"line_end":89,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6724},{"krate":0,"index":6725},{"krate":0,"index":6726},{"krate":0,"index":6727},{"krate":0,"index":6728},{"krate":0,"index":6729},{"krate":0,"index":6730},{"krate":0,"index":6731},{"krate":0,"index":6732},{"krate":0,"index":6733},{"krate":0,"index":6734},{"krate":0,"index":6735},{"krate":0,"index":6736},{"krate":0,"index":6737}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":684129,"byte_end":684139,"line_start":279,"line_end":279,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6740},{"krate":0,"index":6741},{"krate":0,"index":6742},{"krate":0,"index":6743},{"krate":0,"index":6744},{"krate":0,"index":6745},{"krate":0,"index":6746},{"krate":0,"index":6747},{"krate":0,"index":6748},{"krate":0,"index":6749},{"krate":0,"index":6751},{"krate":0,"index":6752},{"krate":0,"index":6753},{"krate":0,"index":6754},{"krate":0,"index":6755},{"krate":0,"index":6758},{"krate":0,"index":6759},{"krate":0,"index":6760},{"krate":0,"index":6761},{"krate":0,"index":6762},{"krate":0,"index":6763},{"krate":0,"index":6764},{"krate":0,"index":6766},{"krate":0,"index":6768},{"krate":0,"index":6769},{"krate":0,"index":6770},{"krate":0,"index":6771},{"krate":0,"index":6772},{"krate":0,"index":6773},{"krate":0,"index":6774},{"krate":0,"index":6775},{"krate":0,"index":6776},{"krate":0,"index":6777},{"krate":0,"index":6778},{"krate":0,"index":6779}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":704028,"byte_end":704038,"line_start":892,"line_end":892,"column_start":59,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":6782},{"krate":0,"index":6783},{"krate":0,"index":6784}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":704554,"byte_end":704564,"line_start":908,"line_end":908,"column_start":61,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":6788},{"krate":0,"index":6789}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":705155,"byte_end":705165,"line_start":927,"line_end":927,"column_start":53,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":6793},{"krate":0,"index":6794}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":705665,"byte_end":705675,"line_start":941,"line_end":941,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":6798}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":706049,"byte_end":706063,"line_start":954,"line_end":954,"column_start":55,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":6803}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":706360,"byte_end":706374,"line_start":963,"line_end":963,"column_start":41,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":706416,"byte_end":706426,"line_start":965,"line_end":965,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6809},{"krate":0,"index":6810},{"krate":0,"index":6811},{"krate":0,"index":6812},{"krate":0,"index":6813}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":706888,"byte_end":706902,"line_start":989,"line_end":989,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6816},{"krate":0,"index":6817},{"krate":0,"index":6818},{"krate":0,"index":6819},{"krate":0,"index":6820},{"krate":0,"index":6821},{"krate":0,"index":6822},{"krate":0,"index":6823},{"krate":0,"index":6824},{"krate":0,"index":6825},{"krate":0,"index":6827},{"krate":0,"index":6828},{"krate":0,"index":6829},{"krate":0,"index":6830},{"krate":0,"index":6831},{"krate":0,"index":6833},{"krate":0,"index":6834},{"krate":0,"index":6835},{"krate":0,"index":6836},{"krate":0,"index":6837},{"krate":0,"index":6838},{"krate":0,"index":6839},{"krate":0,"index":6840},{"krate":0,"index":6841},{"krate":0,"index":6842},{"krate":0,"index":6843},{"krate":0,"index":6844}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":726141,"byte_end":726155,"line_start":1547,"line_end":1547,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6847}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":726273,"byte_end":726287,"line_start":1553,"line_end":1553,"column_start":52,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":6850}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":726902,"byte_end":726916,"line_start":1575,"line_end":1575,"column_start":59,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":6853},{"krate":0,"index":6854},{"krate":0,"index":6855}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":727255,"byte_end":727269,"line_start":1589,"line_end":1589,"column_start":61,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":6858},{"krate":0,"index":6859}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":727682,"byte_end":727696,"line_start":1607,"line_end":1607,"column_start":53,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":6862},{"krate":0,"index":6863}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":728564,"byte_end":728574,"line_start":22,"line_end":22,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6935},{"krate":0,"index":6936}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":729566,"byte_end":729576,"line_start":50,"line_end":50,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6939},{"krate":0,"index":6940},{"krate":0,"index":6942},{"krate":0,"index":6943}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":731132,"byte_end":731142,"line_start":104,"line_end":104,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6946}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":731666,"byte_end":731676,"line_start":122,"line_end":122,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6950}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":731822,"byte_end":731832,"line_start":132,"line_end":132,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6953},{"krate":0,"index":6954}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":732096,"byte_end":732104,"line_start":147,"line_end":147,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":6957}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":732674,"byte_end":732688,"line_start":173,"line_end":173,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6962},{"krate":0,"index":6963},{"krate":0,"index":6965},{"krate":0,"index":6966},{"krate":0,"index":6967},{"krate":0,"index":6974},{"krate":0,"index":6975},{"krate":0,"index":6976},{"krate":0,"index":6979},{"krate":0,"index":6982},{"krate":0,"index":6985},{"krate":0,"index":6988},{"krate":0,"index":6991},{"krate":0,"index":6994},{"krate":0,"index":6997},{"krate":0,"index":7000},{"krate":0,"index":7002},{"krate":0,"index":7004},{"krate":0,"index":7006},{"krate":0,"index":7008}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":756445,"byte_end":756459,"line_start":794,"line_end":794,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7014}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":756632,"byte_end":756640,"line_start":804,"line_end":804,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":7017}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":759271,"byte_end":759281,"line_start":35,"line_end":35,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7097},{"krate":0,"index":7098},{"krate":0,"index":7099}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":759813,"byte_end":759827,"line_start":58,"line_end":58,"column_start":47,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":7103},{"krate":0,"index":7104},{"krate":0,"index":7105}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":760385,"byte_end":760399,"line_start":79,"line_end":79,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":7109},{"krate":0,"index":7110},{"krate":0,"index":7111}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":760983,"byte_end":760997,"line_start":102,"line_end":102,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":7116},{"krate":0,"index":7117},{"krate":0,"index":7118}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":761583,"byte_end":761597,"line_start":124,"line_end":124,"column_start":53,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":7123},{"krate":0,"index":7124},{"krate":0,"index":7125}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":762218,"byte_end":762232,"line_start":146,"line_end":146,"column_start":52,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":7130},{"krate":0,"index":7131},{"krate":0,"index":7132}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":762836,"byte_end":762850,"line_start":168,"line_end":168,"column_start":79,"column_end":93},"value":"","parent":null,"children":[{"krate":0,"index":7136},{"krate":0,"index":7137},{"krate":0,"index":7138}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":764315,"byte_end":764322,"line_start":221,"line_end":221,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":7141}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":764510,"byte_end":764519,"line_start":231,"line_end":231,"column_start":52,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":7144}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":764706,"byte_end":764720,"line_start":241,"line_end":241,"column_start":47,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":7147}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":764915,"byte_end":764922,"line_start":251,"line_end":251,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":7150}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":765113,"byte_end":765123,"line_start":261,"line_end":261,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":7153}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":765251,"byte_end":765261,"line_start":268,"line_end":268,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7157}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":765463,"byte_end":765473,"line_start":277,"line_end":277,"column_start":76,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":7163}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":765781,"byte_end":765791,"line_start":288,"line_end":288,"column_start":76,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":7169}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":766188,"byte_end":766198,"line_start":304,"line_end":304,"column_start":76,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":7175}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":766704,"byte_end":766714,"line_start":324,"line_end":324,"column_start":77,"column_end":87},"value":"","parent":null,"children":[{"krate":0,"index":7181}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":767458,"byte_end":767472,"line_start":353,"line_end":353,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7187}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":767836,"byte_end":767850,"line_start":365,"line_end":365,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7193}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":768315,"byte_end":768329,"line_start":382,"line_end":382,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7199}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":768927,"byte_end":768941,"line_start":403,"line_end":403,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7205}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_coordinates.rs","byte_start":769925,"byte_end":769935,"line_start":11,"line_end":11,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":7232},{"krate":0,"index":7233}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_coordinates.rs","byte_start":770112,"byte_end":770122,"line_start":20,"line_end":20,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7236}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_ops.rs","byte_start":771788,"byte_end":771798,"line_start":65,"line_end":65,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":7322},{"krate":0,"index":7323}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_ops.rs","byte_start":771958,"byte_end":771968,"line_start":74,"line_end":74,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7326}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_ops.rs","byte_start":785567,"byte_end":785577,"line_start":541,"line_end":541,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7332},{"krate":0,"index":7333}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_simba.rs","byte_start":789715,"byte_end":789725,"line_start":7,"line_end":7,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7359},{"krate":0,"index":7360},{"krate":0,"index":7361},{"krate":0,"index":7362},{"krate":0,"index":7363},{"krate":0,"index":7364},{"krate":0,"index":7365},{"krate":0,"index":7366},{"krate":0,"index":7367}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_simba.rs","byte_start":790712,"byte_end":790726,"line_start":50,"line_end":50,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":7370},{"krate":0,"index":7371},{"krate":0,"index":7372},{"krate":0,"index":7373},{"krate":0,"index":7374},{"krate":0,"index":7375},{"krate":0,"index":7376},{"krate":0,"index":7377},{"krate":0,"index":7378}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":793027,"byte_end":793041,"line_start":39,"line_end":39,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7389},{"krate":0,"index":7390}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_construction.rs","byte_start":795241,"byte_end":795255,"line_start":3,"line_end":3,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7404},{"krate":0,"index":7405}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_ops.rs","byte_start":797047,"byte_end":797061,"line_start":29,"line_end":29,"column_start":42,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":7436}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_ops.rs","byte_start":797205,"byte_end":797219,"line_start":36,"line_end":36,"column_start":42,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":7441}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_ops.rs","byte_start":797370,"byte_end":797384,"line_start":43,"line_end":43,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":7445},{"krate":0,"index":7446}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_ops.rs","byte_start":797553,"byte_end":797567,"line_start":52,"line_end":52,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":7449}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_ops.rs","byte_start":797726,"byte_end":797740,"line_start":59,"line_end":59,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":7452},{"krate":0,"index":7453}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_ops.rs","byte_start":798045,"byte_end":798059,"line_start":73,"line_end":73,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":7456},{"krate":0,"index":7457}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_ops.rs","byte_start":798309,"byte_end":798323,"line_start":84,"line_end":84,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":7460},{"krate":0,"index":7461}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_ops.rs","byte_start":798599,"byte_end":798613,"line_start":95,"line_end":95,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":7464},{"krate":0,"index":7465}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":800788,"byte_end":800799,"line_start":34,"line_end":34,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":7529}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":800923,"byte_end":800934,"line_start":41,"line_end":41,"column_start":29,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":800976,"byte_end":800983,"line_start":43,"line_end":43,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7534},{"krate":0,"index":7535},{"krate":0,"index":7536},{"krate":0,"index":7537},{"krate":0,"index":7538}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":801752,"byte_end":801763,"line_start":74,"line_end":74,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7541},{"krate":0,"index":7542},{"krate":0,"index":7543},{"krate":0,"index":7544},{"krate":0,"index":7545},{"krate":0,"index":7546}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":804261,"byte_end":804272,"line_start":167,"line_end":167,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7549},{"krate":0,"index":7550},{"krate":0,"index":7551},{"krate":0,"index":7552}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":806550,"byte_end":806561,"line_start":242,"line_end":242,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7555},{"krate":0,"index":7556}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":807891,"byte_end":807902,"line_start":283,"line_end":283,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7559},{"krate":0,"index":7560},{"krate":0,"index":7561},{"krate":0,"index":7562},{"krate":0,"index":7563}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":811220,"byte_end":811231,"line_start":375,"line_end":375,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7566}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":811989,"byte_end":812000,"line_start":400,"line_end":400,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":7569}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":812164,"byte_end":812175,"line_start":406,"line_end":406,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7572},{"krate":0,"index":7573},{"krate":0,"index":7574}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":812520,"byte_end":812531,"line_start":420,"line_end":420,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7577},{"krate":0,"index":7578}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":812967,"byte_end":812978,"line_start":438,"line_end":438,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7581},{"krate":0,"index":7582}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":813742,"byte_end":813753,"line_start":17,"line_end":17,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7638}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":814297,"byte_end":814308,"line_start":39,"line_end":39,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7641},{"krate":0,"index":7642},{"krate":0,"index":7643},{"krate":0,"index":7644}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":816769,"byte_end":816780,"line_start":113,"line_end":113,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7648},{"krate":0,"index":7649},{"krate":0,"index":7650},{"krate":0,"index":7651},{"krate":0,"index":7652},{"krate":0,"index":7653},{"krate":0,"index":7654},{"krate":0,"index":7655}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":821205,"byte_end":821216,"line_start":239,"line_end":239,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7658},{"krate":0,"index":7661},{"krate":0,"index":7664},{"krate":0,"index":7667}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":825154,"byte_end":825165,"line_start":358,"line_end":358,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":7672}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":825335,"byte_end":825343,"line_start":368,"line_end":368,"column_start":57,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":7675}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_conversion.rs","byte_start":826712,"byte_end":826723,"line_start":29,"line_end":29,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":7746},{"krate":0,"index":7747},{"krate":0,"index":7748}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_conversion.rs","byte_start":827255,"byte_end":827266,"line_start":50,"line_end":50,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7752},{"krate":0,"index":7753},{"krate":0,"index":7754}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_conversion.rs","byte_start":827858,"byte_end":827869,"line_start":73,"line_end":73,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":7759},{"krate":0,"index":7760},{"krate":0,"index":7761}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_conversion.rs","byte_start":828455,"byte_end":828466,"line_start":95,"line_end":95,"column_start":53,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":7766},{"krate":0,"index":7767},{"krate":0,"index":7768}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_conversion.rs","byte_start":829087,"byte_end":829098,"line_start":117,"line_end":117,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":7773},{"krate":0,"index":7774},{"krate":0,"index":7775}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_conversion.rs","byte_start":829702,"byte_end":829713,"line_start":139,"line_end":139,"column_start":79,"column_end":90},"value":"","parent":null,"children":[{"krate":0,"index":7779},{"krate":0,"index":7780},{"krate":0,"index":7781}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_conversion.rs","byte_start":830185,"byte_end":830194,"line_start":157,"line_end":157,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":7784}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_conversion.rs","byte_start":830378,"byte_end":830389,"line_start":167,"line_end":167,"column_start":47,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":7787}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_conversion.rs","byte_start":830581,"byte_end":830588,"line_start":177,"line_end":177,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":7790}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_conversion.rs","byte_start":830776,"byte_end":830783,"line_start":187,"line_end":187,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":7793}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_conversion.rs","byte_start":831017,"byte_end":831028,"line_start":197,"line_end":197,"column_start":84,"column_end":95},"value":"","parent":null,"children":[{"krate":0,"index":7798}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_conversion.rs","byte_start":831439,"byte_end":831450,"line_start":211,"line_end":211,"column_start":84,"column_end":95},"value":"","parent":null,"children":[{"krate":0,"index":7804}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_conversion.rs","byte_start":831905,"byte_end":831916,"line_start":225,"line_end":225,"column_start":84,"column_end":95},"value":"","parent":null,"children":[{"krate":0,"index":7810}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_conversion.rs","byte_start":832554,"byte_end":832565,"line_start":245,"line_end":245,"column_start":85,"column_end":96},"value":"","parent":null,"children":[{"krate":0,"index":7816}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_ops.rs","byte_start":834485,"byte_end":834496,"line_start":45,"line_end":45,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":7882},{"krate":0,"index":7883}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_ops.rs","byte_start":834995,"byte_end":835006,"line_start":66,"line_end":66,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":7892},{"krate":0,"index":7893}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_ops.rs","byte_start":835580,"byte_end":835591,"line_start":91,"line_end":91,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":7902},{"krate":0,"index":7903}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_ops.rs","byte_start":836265,"byte_end":836276,"line_start":117,"line_end":117,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":7912},{"krate":0,"index":7913}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_ops.rs","byte_start":843246,"byte_end":843257,"line_start":327,"line_end":327,"column_start":54,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":7924}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_ops.rs","byte_start":843465,"byte_end":843476,"line_start":337,"line_end":337,"column_start":62,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":7928}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_ops.rs","byte_start":843710,"byte_end":843721,"line_start":348,"line_end":348,"column_start":54,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":7931}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_ops.rs","byte_start":843929,"byte_end":843940,"line_start":358,"line_end":358,"column_start":62,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":7935}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_ops.rs","byte_start":844173,"byte_end":844184,"line_start":369,"line_end":369,"column_start":55,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":7938}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_ops.rs","byte_start":844438,"byte_end":844449,"line_start":380,"line_end":380,"column_start":63,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":7942}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_ops.rs","byte_start":844727,"byte_end":844738,"line_start":392,"line_end":392,"column_start":55,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":7945}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_ops.rs","byte_start":844992,"byte_end":845003,"line_start":403,"line_end":403,"column_start":63,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":7949}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_ops.rs","byte_start":845280,"byte_end":845288,"line_start":415,"line_end":415,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":7952}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_ops.rs","byte_start":845565,"byte_end":845573,"line_start":426,"line_end":426,"column_start":62,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":7956}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_ops.rs","byte_start":845874,"byte_end":845882,"line_start":438,"line_end":438,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":7959}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_ops.rs","byte_start":846159,"byte_end":846167,"line_start":449,"line_end":449,"column_start":62,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":7963}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_simba.rs","byte_start":846584,"byte_end":846595,"line_start":9,"line_end":9,"column_start":38,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":7985},{"krate":0,"index":7986},{"krate":0,"index":7987},{"krate":0,"index":7988},{"krate":0,"index":7989},{"krate":0,"index":7990},{"krate":0,"index":7991},{"krate":0,"index":7992},{"krate":0,"index":7993}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":848674,"byte_end":848685,"line_start":35,"line_end":35,"column_start":70,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":8066}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":848906,"byte_end":848917,"line_start":45,"line_end":45,"column_start":45,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":849035,"byte_end":849046,"line_start":52,"line_end":52,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":8074}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":850513,"byte_end":850524,"line_start":114,"line_end":114,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8078},{"krate":0,"index":8079},{"krate":0,"index":8080},{"krate":0,"index":8081}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":853565,"byte_end":853576,"line_start":207,"line_end":207,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":8085}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":854174,"byte_end":854185,"line_start":227,"line_end":227,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":8089}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":854766,"byte_end":854777,"line_start":245,"line_end":245,"column_start":41,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":854882,"byte_end":854893,"line_start":247,"line_end":247,"column_start":55,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":8096}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":855114,"byte_end":855125,"line_start":257,"line_end":257,"column_start":55,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":8100},{"krate":0,"index":8101},{"krate":0,"index":8102}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":855536,"byte_end":855547,"line_start":275,"line_end":275,"column_start":57,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":8106},{"krate":0,"index":8107}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":856023,"byte_end":856034,"line_start":297,"line_end":297,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":8111},{"krate":0,"index":8112}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":856450,"byte_end":856461,"line_start":318,"line_end":318,"column_start":61,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":8116}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_construction.rs","byte_start":857828,"byte_end":857839,"line_start":18,"line_end":18,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8214}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_construction.rs","byte_start":858512,"byte_end":858523,"line_start":42,"line_end":42,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":8218}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_construction.rs","byte_start":858712,"byte_end":858720,"line_start":52,"line_end":52,"column_start":65,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":8222}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_conversion.rs","byte_start":861796,"byte_end":861807,"line_start":25,"line_end":25,"column_start":59,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":8302},{"krate":0,"index":8303},{"krate":0,"index":8304}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_conversion.rs","byte_start":862433,"byte_end":862444,"line_start":49,"line_end":49,"column_start":62,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":8310},{"krate":0,"index":8311},{"krate":0,"index":8312}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_conversion.rs","byte_start":863065,"byte_end":863076,"line_start":72,"line_end":72,"column_start":64,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":8318},{"krate":0,"index":8319},{"krate":0,"index":8320}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_conversion.rs","byte_start":863754,"byte_end":863765,"line_start":95,"line_end":95,"column_start":54,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":8326},{"krate":0,"index":8327},{"krate":0,"index":8328}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_conversion.rs","byte_start":864566,"byte_end":864577,"line_start":122,"line_end":122,"column_start":62,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":8333},{"krate":0,"index":8334},{"krate":0,"index":8336}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_conversion.rs","byte_start":865709,"byte_end":865716,"line_start":158,"line_end":158,"column_start":70,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":8340}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_conversion.rs","byte_start":866008,"byte_end":866019,"line_start":169,"line_end":169,"column_start":53,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":8344}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_conversion.rs","byte_start":866267,"byte_end":866278,"line_start":180,"line_end":180,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":8350}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_conversion.rs","byte_start":866736,"byte_end":866747,"line_start":196,"line_end":196,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":8357}],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_conversion.rs","byte_start":867275,"byte_end":867286,"line_start":214,"line_end":214,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":8364}],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_conversion.rs","byte_start":867955,"byte_end":867966,"line_start":236,"line_end":236,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":8371}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_simba.rs","byte_start":875077,"byte_end":875088,"line_start":10,"line_end":10,"column_start":55,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":8521},{"krate":0,"index":8522},{"krate":0,"index":8523},{"krate":0,"index":8524},{"krate":0,"index":8525},{"krate":0,"index":8526},{"krate":0,"index":8527},{"krate":0,"index":8528},{"krate":0,"index":8529}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":880906,"byte_end":880914,"line_start":107,"line_end":107,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8606}],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":881195,"byte_end":881203,"line_start":118,"line_end":118,"column_start":61,"column_end":69},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":881334,"byte_end":881342,"line_start":125,"line_end":125,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":8616}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":881673,"byte_end":881681,"line_start":138,"line_end":138,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":8621}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":882604,"byte_end":882612,"line_start":166,"line_end":166,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":8626},{"krate":0,"index":8627},{"krate":0,"index":8628},{"krate":0,"index":8629},{"krate":0,"index":8630},{"krate":0,"index":8631},{"krate":0,"index":8632}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":887949,"byte_end":887957,"line_start":321,"line_end":321,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":8637},{"krate":0,"index":8638},{"krate":0,"index":8639},{"krate":0,"index":8640},{"krate":0,"index":8641}],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":893115,"byte_end":893123,"line_start":446,"line_end":446,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8646},{"krate":0,"index":8647}],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":895330,"byte_end":895338,"line_start":509,"line_end":509,"column_start":46,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":895486,"byte_end":895494,"line_start":516,"line_end":516,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":8656}],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":895787,"byte_end":895795,"line_start":527,"line_end":527,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":8661},{"krate":0,"index":8662},{"krate":0,"index":8663}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":896344,"byte_end":896352,"line_start":547,"line_end":547,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":8668},{"krate":0,"index":8669}],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":897019,"byte_end":897027,"line_start":573,"line_end":573,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":8674},{"krate":0,"index":8675}],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":897610,"byte_end":897618,"line_start":597,"line_end":597,"column_start":67,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":8680}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":900544,"byte_end":900552,"line_start":23,"line_end":23,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":8806},{"krate":0,"index":8807}],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":902103,"byte_end":902111,"line_start":71,"line_end":71,"column_start":71,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":8812}],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":902381,"byte_end":902389,"line_start":83,"line_end":83,"column_start":71,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":8817}],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":903243,"byte_end":903258,"line_start":117,"line_end":117,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":8822},{"krate":0,"index":8823},{"krate":0,"index":8824}],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":904333,"byte_end":904342,"line_start":155,"line_end":155,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8827},{"krate":0,"index":8828},{"krate":0,"index":8829}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":914027,"byte_end":914036,"line_start":382,"line_end":382,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":23135},{"krate":0,"index":23136},{"krate":0,"index":23137}],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":914163,"byte_end":914178,"line_start":389,"line_end":389,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":23138},{"krate":0,"index":23139},{"krate":0,"index":23140}],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":914359,"byte_end":914368,"line_start":397,"line_end":397,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":23141},{"krate":0,"index":23142},{"krate":0,"index":23143},{"krate":0,"index":23144}],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":914497,"byte_end":914512,"line_start":404,"line_end":404,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":23145},{"krate":0,"index":23146},{"krate":0,"index":23147},{"krate":0,"index":23148}],"docs":"","sig":null,"attributes":[]},{"id":637,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_conversion.rs","byte_start":915311,"byte_end":915319,"line_start":22,"line_end":22,"column_start":68,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":8918},{"krate":0,"index":8919},{"krate":0,"index":8920}],"docs":"","sig":null,"attributes":[]},{"id":638,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_conversion.rs","byte_start":916207,"byte_end":916215,"line_start":50,"line_end":50,"column_start":70,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":8927},{"krate":0,"index":8928},{"krate":0,"index":8929}],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_conversion.rs","byte_start":916951,"byte_end":916959,"line_start":74,"line_end":74,"column_start":57,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":8936},{"krate":0,"index":8937},{"krate":0,"index":8938}],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_conversion.rs","byte_start":918123,"byte_end":918131,"line_start":108,"line_end":108,"column_start":65,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":8944},{"krate":0,"index":8945},{"krate":0,"index":8948}],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_conversion.rs","byte_start":919864,"byte_end":919872,"line_start":155,"line_end":155,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8953}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_conversion.rs","byte_start":920109,"byte_end":920116,"line_start":165,"line_end":165,"column_start":67,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":8958}],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_conversion.rs","byte_start":920515,"byte_end":920523,"line_start":178,"line_end":178,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8966}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_conversion.rs","byte_start":921238,"byte_end":921246,"line_start":197,"line_end":197,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8975}],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_conversion.rs","byte_start":922169,"byte_end":922177,"line_start":226,"line_end":226,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8984}],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_conversion.rs","byte_start":923377,"byte_end":923385,"line_start":263,"line_end":263,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8993}],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":925183,"byte_end":925192,"line_start":4,"line_end":4,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":9017},{"krate":0,"index":9018}],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":928031,"byte_end":928046,"line_start":72,"line_end":72,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":9021},{"krate":0,"index":9022}],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":930891,"byte_end":930900,"line_start":140,"line_end":140,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":9025}],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":932290,"byte_end":932305,"line_start":176,"line_end":176,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":9028}],"docs":"","sig":null,"attributes":[]},{"id":711,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_simba.rs","byte_start":954441,"byte_end":954449,"line_start":10,"line_end":10,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":9149},{"krate":0,"index":9150},{"krate":0,"index":9151},{"krate":0,"index":9152},{"krate":0,"index":9153},{"krate":0,"index":9154},{"krate":0,"index":9155},{"krate":0,"index":9156},{"krate":0,"index":9157}],"docs":"","sig":null,"attributes":[]},{"id":712,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":958203,"byte_end":958213,"line_start":71,"line_end":71,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":9237}],"docs":"","sig":null,"attributes":[]},{"id":713,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":958526,"byte_end":958536,"line_start":83,"line_end":83,"column_start":9,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":714,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":958699,"byte_end":958709,"line_start":90,"line_end":90,"column_start":81,"column_end":91},"value":"","parent":null,"children":[{"krate":0,"index":9247}],"docs":"","sig":null,"attributes":[]},{"id":715,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":958936,"byte_end":958946,"line_start":100,"line_end":100,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":9252},{"krate":0,"index":9253},{"krate":0,"index":9254}],"docs":"","sig":null,"attributes":[]},{"id":716,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":959911,"byte_end":959921,"line_start":131,"line_end":131,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":9259}],"docs":"","sig":null,"attributes":[]},{"id":717,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":960171,"byte_end":960181,"line_start":142,"line_end":142,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":9264},{"krate":0,"index":9265},{"krate":0,"index":9266},{"krate":0,"index":9267},{"krate":0,"index":9268},{"krate":0,"index":9269},{"krate":0,"index":9270},{"krate":0,"index":9271},{"krate":0,"index":9272},{"krate":0,"index":9273},{"krate":0,"index":9274},{"krate":0,"index":9275},{"krate":0,"index":9276},{"krate":0,"index":9277},{"krate":0,"index":9278}],"docs":"","sig":null,"attributes":[]},{"id":718,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":967324,"byte_end":967334,"line_start":334,"line_end":334,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":9283}],"docs":"","sig":null,"attributes":[]},{"id":719,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":967959,"byte_end":967969,"line_start":356,"line_end":356,"column_start":46,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":720,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":968117,"byte_end":968127,"line_start":363,"line_end":363,"column_start":53,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":9292}],"docs":"","sig":null,"attributes":[]},{"id":721,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":968412,"byte_end":968422,"line_start":374,"line_end":374,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":9297},{"krate":0,"index":9298},{"krate":0,"index":9299}],"docs":"","sig":null,"attributes":[]},{"id":722,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":968963,"byte_end":968973,"line_start":394,"line_end":394,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":9304},{"krate":0,"index":9305}],"docs":"","sig":null,"attributes":[]},{"id":723,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":969632,"byte_end":969642,"line_start":420,"line_end":420,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":9310},{"krate":0,"index":9311}],"docs":"","sig":null,"attributes":[]},{"id":724,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":970178,"byte_end":970188,"line_start":443,"line_end":443,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":9316}],"docs":"","sig":null,"attributes":[]},{"id":725,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":971861,"byte_end":971871,"line_start":22,"line_end":22,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":9427}],"docs":"","sig":null,"attributes":[]},{"id":726,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":972575,"byte_end":972585,"line_start":49,"line_end":49,"column_start":47,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":9432}],"docs":"","sig":null,"attributes":[]},{"id":727,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":972890,"byte_end":972898,"line_start":62,"line_end":62,"column_start":73,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":9437}],"docs":"","sig":null,"attributes":[]},{"id":728,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":973326,"byte_end":973336,"line_start":79,"line_end":79,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":9444}],"docs":"","sig":null,"attributes":[]},{"id":729,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":974919,"byte_end":974929,"line_start":134,"line_end":134,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":9447}],"docs":"","sig":null,"attributes":[]},{"id":730,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":975732,"byte_end":975742,"line_start":160,"line_end":160,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":9450}],"docs":"","sig":null,"attributes":[]},{"id":731,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_conversion.rs","byte_start":985646,"byte_end":985656,"line_start":23,"line_end":23,"column_start":70,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":9533},{"krate":0,"index":9534},{"krate":0,"index":9535}],"docs":"","sig":null,"attributes":[]},{"id":732,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_conversion.rs","byte_start":986557,"byte_end":986567,"line_start":51,"line_end":51,"column_start":57,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":9542},{"krate":0,"index":9543},{"krate":0,"index":9544}],"docs":"","sig":null,"attributes":[]},{"id":733,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_conversion.rs","byte_start":987721,"byte_end":987731,"line_start":85,"line_end":85,"column_start":65,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":9550},{"krate":0,"index":9551},{"krate":0,"index":9554}],"docs":"","sig":null,"attributes":[]},{"id":734,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_conversion.rs","byte_start":991156,"byte_end":991163,"line_start":174,"line_end":174,"column_start":69,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":9559}],"docs":"","sig":null,"attributes":[]},{"id":735,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_conversion.rs","byte_start":991573,"byte_end":991583,"line_start":187,"line_end":187,"column_start":58,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":9567}],"docs":"","sig":null,"attributes":[]},{"id":736,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_conversion.rs","byte_start":992323,"byte_end":992333,"line_start":206,"line_end":206,"column_start":58,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":9576}],"docs":"","sig":null,"attributes":[]},{"id":737,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_conversion.rs","byte_start":993277,"byte_end":993287,"line_start":235,"line_end":235,"column_start":58,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":9585}],"docs":"","sig":null,"attributes":[]},{"id":738,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_conversion.rs","byte_start":994500,"byte_end":994510,"line_start":272,"line_end":272,"column_start":59,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":9594}],"docs":"","sig":null,"attributes":[]},{"id":801,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_simba.rs","byte_start":1017861,"byte_end":1017871,"line_start":9,"line_end":9,"column_start":53,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":9717},{"krate":0,"index":9718},{"krate":0,"index":9719},{"krate":0,"index":9720},{"krate":0,"index":9721},{"krate":0,"index":9722},{"krate":0,"index":9723},{"krate":0,"index":9724},{"krate":0,"index":9725}],"docs":"","sig":null,"attributes":[]},{"id":802,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1020276,"byte_end":1020281,"line_start":22,"line_end":22,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":24350},{"krate":0,"index":24351},{"krate":0,"index":24352},{"krate":0,"index":24353},{"krate":0,"index":24354},{"krate":0,"index":24355},{"krate":0,"index":24356},{"krate":0,"index":24357},{"krate":0,"index":24358},{"krate":0,"index":24359},{"krate":0,"index":24360},{"krate":0,"index":24361},{"krate":0,"index":24362},{"krate":0,"index":24363},{"krate":0,"index":24364},{"krate":0,"index":24365},{"krate":0,"index":24366},{"krate":0,"index":24367},{"krate":0,"index":24368},{"krate":0,"index":24369},{"krate":0,"index":24370},{"krate":0,"index":24371},{"krate":0,"index":24372},{"krate":0,"index":24373},{"krate":0,"index":24374},{"krate":0,"index":24375},{"krate":0,"index":24376},{"krate":0,"index":24377},{"krate":0,"index":24378},{"krate":0,"index":24379},{"krate":0,"index":24380},{"krate":0,"index":24381},{"krate":0,"index":24382},{"krate":0,"index":24383},{"krate":0,"index":24384},{"krate":0,"index":24385}],"docs":"","sig":null,"attributes":[]},{"id":803,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1023963,"byte_end":1023965,"line_start":53,"line_end":53,"column_start":37,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":804,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1024508,"byte_end":1024516,"line_start":72,"line_end":72,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9835}],"docs":"","sig":null,"attributes":[]},{"id":805,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1024751,"byte_end":1024762,"line_start":83,"line_end":83,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":9839}],"docs":"","sig":null,"attributes":[]},{"id":806,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1025014,"byte_end":1025021,"line_start":94,"line_end":94,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9843},{"krate":0,"index":9844}],"docs":"","sig":null,"attributes":[]},{"id":807,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1025732,"byte_end":1025733,"line_start":122,"line_end":122,"column_start":40,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":9851}],"docs":"","sig":null,"attributes":[]},{"id":808,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1026350,"byte_end":1026351,"line_start":146,"line_end":146,"column_start":44,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":809,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1027361,"byte_end":1027370,"line_start":177,"line_end":177,"column_start":69,"column_end":78},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":810,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1027585,"byte_end":1027594,"line_start":184,"line_end":184,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":9863}],"docs":"","sig":null,"attributes":[]},{"id":811,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1028835,"byte_end":1028844,"line_start":224,"line_end":224,"column_start":65,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":812,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1029004,"byte_end":1029013,"line_start":229,"line_end":229,"column_start":67,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":9872}],"docs":"","sig":null,"attributes":[]},{"id":813,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1029257,"byte_end":1029266,"line_start":239,"line_end":239,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":9877},{"krate":0,"index":9878},{"krate":0,"index":9879},{"krate":0,"index":9880},{"krate":0,"index":9881},{"krate":0,"index":9882},{"krate":0,"index":9884},{"krate":0,"index":9885},{"krate":0,"index":9886},{"krate":0,"index":9887},{"krate":0,"index":9888},{"krate":0,"index":9889}],"docs":"","sig":null,"attributes":[]},{"id":814,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1037483,"byte_end":1037492,"line_start":473,"line_end":473,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":9894},{"krate":0,"index":9895}],"docs":"","sig":null,"attributes":[]},{"id":815,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1038310,"byte_end":1038319,"line_start":500,"line_end":500,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":9900},{"krate":0,"index":9901}],"docs":"","sig":null,"attributes":[]},{"id":816,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1039199,"byte_end":1039208,"line_start":525,"line_end":525,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":9905}],"docs":"","sig":null,"attributes":[]},{"id":817,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1039650,"byte_end":1039659,"line_start":537,"line_end":537,"column_start":67,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":9910},{"krate":0,"index":9911},{"krate":0,"index":9912}],"docs":"","sig":null,"attributes":[]},{"id":818,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1040119,"byte_end":1040128,"line_start":555,"line_end":555,"column_start":68,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":9917},{"krate":0,"index":9918}],"docs":"","sig":null,"attributes":[]},{"id":819,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1040657,"byte_end":1040666,"line_start":577,"line_end":577,"column_start":64,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":9923},{"krate":0,"index":9924}],"docs":"","sig":null,"attributes":[]},{"id":820,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_construction.rs","byte_start":1042509,"byte_end":1042518,"line_start":11,"line_end":11,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":9996}],"docs":"","sig":null,"attributes":[]},{"id":821,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_construction.rs","byte_start":1043622,"byte_end":1043631,"line_start":49,"line_end":49,"column_start":61,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":10001}],"docs":"","sig":null,"attributes":[]},{"id":822,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_conversion.rs","byte_start":1044164,"byte_end":1044173,"line_start":9,"line_end":9,"column_start":69,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":10049},{"krate":0,"index":10050},{"krate":0,"index":10051}],"docs":"","sig":null,"attributes":[]},{"id":823,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_conversion.rs","byte_start":1044998,"byte_end":1045007,"line_start":37,"line_end":37,"column_start":74,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":10057},{"krate":0,"index":10058},{"krate":0,"index":10059}],"docs":"","sig":null,"attributes":[]},{"id":824,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_conversion.rs","byte_start":1045784,"byte_end":1045791,"line_start":64,"line_end":64,"column_start":64,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":10064}],"docs":"","sig":null,"attributes":[]},{"id":825,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_ops.rs","byte_start":1048083,"byte_end":1048092,"line_start":82,"line_end":82,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":10187},{"krate":0,"index":10188}],"docs":"","sig":null,"attributes":[]},{"id":826,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_ops.rs","byte_start":1048448,"byte_end":1048457,"line_start":96,"line_end":96,"column_start":52,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":10192}],"docs":"","sig":null,"attributes":[]},{"id":887,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_simba.rs","byte_start":1071546,"byte_end":1071555,"line_start":10,"line_end":10,"column_start":56,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":10234},{"krate":0,"index":10235},{"krate":0,"index":10236},{"krate":0,"index":10237},{"krate":0,"index":10238},{"krate":0,"index":10239},{"krate":0,"index":10240},{"krate":0,"index":10241},{"krate":0,"index":10242}],"docs":"","sig":null,"attributes":[]},{"id":888,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/reflection.rs","byte_start":1073387,"byte_end":1073397,"line_start":16,"line_end":16,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":10309},{"krate":0,"index":10310},{"krate":0,"index":10311},{"krate":0,"index":10312},{"krate":0,"index":10316},{"krate":0,"index":10320},{"krate":0,"index":10325}],"docs":"","sig":null,"attributes":[]},{"id":889,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1077739,"byte_end":1077752,"line_start":24,"line_end":24,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":890,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1077789,"byte_end":1077802,"line_start":26,"line_end":26,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":10383}],"docs":"","sig":null,"attributes":[]},{"id":891,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1077944,"byte_end":1077957,"line_start":33,"line_end":33,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":10386}],"docs":"","sig":null,"attributes":[]},{"id":892,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1078102,"byte_end":1078115,"line_start":39,"line_end":39,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":10389}],"docs":"","sig":null,"attributes":[]},{"id":893,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1078854,"byte_end":1078867,"line_start":68,"line_end":68,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":10392},{"krate":0,"index":10393},{"krate":0,"index":10394},{"krate":0,"index":10395},{"krate":0,"index":10396},{"krate":0,"index":10397},{"krate":0,"index":10398},{"krate":0,"index":10399},{"krate":0,"index":10400},{"krate":0,"index":10401},{"krate":0,"index":10402},{"krate":0,"index":10403},{"krate":0,"index":10404},{"krate":0,"index":10405},{"krate":0,"index":10406},{"krate":0,"index":10407},{"krate":0,"index":10408},{"krate":0,"index":10409},{"krate":0,"index":10410},{"krate":0,"index":10412},{"krate":0,"index":10413},{"krate":0,"index":10414},{"krate":0,"index":10415},{"krate":0,"index":10416},{"krate":0,"index":10417},{"krate":0,"index":10418},{"krate":0,"index":10419},{"krate":0,"index":10420}],"docs":"","sig":null,"attributes":[]},{"id":894,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1102924,"byte_end":1102932,"line_start":687,"line_end":687,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":10423}],"docs":"","sig":null,"attributes":[]},{"id":895,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1103985,"byte_end":1103992,"line_start":720,"line_end":720,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":10430}],"docs":"","sig":null,"attributes":[]},{"id":896,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1104734,"byte_end":1104746,"line_start":25,"line_end":25,"column_start":29,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":897,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1104783,"byte_end":1104795,"line_start":27,"line_end":27,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":10487}],"docs":"","sig":null,"attributes":[]},{"id":898,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1104937,"byte_end":1104949,"line_start":34,"line_end":34,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":10490}],"docs":"","sig":null,"attributes":[]},{"id":899,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1105094,"byte_end":1105106,"line_start":40,"line_end":40,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":10493}],"docs":"","sig":null,"attributes":[]},{"id":900,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1105843,"byte_end":1105855,"line_start":69,"line_end":69,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":10496},{"krate":0,"index":10497},{"krate":0,"index":10498},{"krate":0,"index":10499},{"krate":0,"index":10500},{"krate":0,"index":10501},{"krate":0,"index":10502},{"krate":0,"index":10503},{"krate":0,"index":10504},{"krate":0,"index":10505},{"krate":0,"index":10506},{"krate":0,"index":10507},{"krate":0,"index":10508},{"krate":0,"index":10509},{"krate":0,"index":10510},{"krate":0,"index":10511},{"krate":0,"index":10513},{"krate":0,"index":10514},{"krate":0,"index":10515},{"krate":0,"index":10516},{"krate":0,"index":10517}],"docs":"","sig":null,"attributes":[]},{"id":901,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1112495,"byte_end":1112503,"line_start":271,"line_end":271,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":10520}],"docs":"","sig":null,"attributes":[]},{"id":902,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1113296,"byte_end":1113303,"line_start":295,"line_end":295,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":10527}],"docs":"","sig":null,"attributes":[]},{"id":903,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/bidiagonal.rs","byte_start":1119097,"byte_end":1119107,"line_start":53,"line_end":53,"column_start":54,"column_end":64},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":904,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/bidiagonal.rs","byte_start":1119465,"byte_end":1119475,"line_start":65,"line_end":65,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":10656},{"krate":0,"index":10657},{"krate":0,"index":10658},{"krate":0,"index":10659},{"krate":0,"index":10660},{"krate":0,"index":10663},{"krate":0,"index":10664},{"krate":0,"index":10665},{"krate":0,"index":10667},{"krate":0,"index":10669}],"docs":"","sig":null,"attributes":[]},{"id":905,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1131025,"byte_end":1131033,"line_start":34,"line_end":34,"column_start":44,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":906,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1131152,"byte_end":1131160,"line_start":41,"line_end":41,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":10738},{"krate":0,"index":10739},{"krate":0,"index":10740},{"krate":0,"index":10741},{"krate":0,"index":10742},{"krate":0,"index":10743},{"krate":0,"index":10747},{"krate":0,"index":10751}],"docs":"","sig":null,"attributes":[]},{"id":907,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1134798,"byte_end":1134806,"line_start":143,"line_end":143,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":10755},{"krate":0,"index":10756},{"krate":0,"index":10759},{"krate":0,"index":10762},{"krate":0,"index":10763}],"docs":"","sig":null,"attributes":[]},{"id":908,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/convolution.rs","byte_start":1144171,"byte_end":1144177,"line_start":9,"line_end":9,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":10817},{"krate":0,"index":10820},{"krate":0,"index":10823}],"docs":"","sig":null,"attributes":[]},{"id":909,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/determinant.rs","byte_start":1148311,"byte_end":1148323,"line_start":10,"line_end":10,"column_start":70,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":10853}],"docs":"","sig":null,"attributes":[]},{"id":910,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1151473,"byte_end":1151479,"line_start":19,"line_end":19,"column_start":60,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":10924},{"krate":0,"index":10925},{"krate":0,"index":10926},{"krate":0,"index":10927},{"krate":0,"index":10928},{"krate":0,"index":10929}],"docs":"","sig":null,"attributes":[]},{"id":911,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1156062,"byte_end":1156068,"line_start":127,"line_end":127,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":10934},{"krate":0,"index":10935},{"krate":0,"index":10936},{"krate":0,"index":10937},{"krate":0,"index":10938},{"krate":0,"index":10939},{"krate":0,"index":10940}],"docs":"","sig":null,"attributes":[]},{"id":912,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/exp.rs","byte_start":1161169,"byte_end":1161183,"line_start":43,"line_end":43,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":11006},{"krate":0,"index":11007},{"krate":0,"index":11008},{"krate":0,"index":11009},{"krate":0,"index":11010},{"krate":0,"index":11011},{"krate":0,"index":11012},{"krate":0,"index":11013},{"krate":0,"index":11014},{"krate":0,"index":11015},{"krate":0,"index":11016},{"krate":0,"index":11017},{"krate":0,"index":11018},{"krate":0,"index":11019},{"krate":0,"index":11020},{"krate":0,"index":11022},{"krate":0,"index":11024},{"krate":0,"index":11026},{"krate":0,"index":11028}],"docs":"","sig":null,"attributes":[]},{"id":913,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/exp.rs","byte_start":1172306,"byte_end":1172313,"line_start":428,"line_end":428,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":11048}],"docs":"","sig":null,"attributes":[]},{"id":914,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1176030,"byte_end":1176039,"line_start":40,"line_end":40,"column_start":54,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":915,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1176270,"byte_end":1176279,"line_start":48,"line_end":48,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":11108},{"krate":0,"index":11109},{"krate":0,"index":11110},{"krate":0,"index":11111},{"krate":0,"index":11112},{"krate":0,"index":11113},{"krate":0,"index":11114}],"docs":"","sig":null,"attributes":[]},{"id":916,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1179615,"byte_end":1179624,"line_start":155,"line_end":155,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":11118},{"krate":0,"index":11122},{"krate":0,"index":11126},{"krate":0,"index":11127},{"krate":0,"index":11128}],"docs":"","sig":null,"attributes":[]},{"id":917,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1183273,"byte_end":1183287,"line_start":19,"line_end":19,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":11170},{"krate":0,"index":11171},{"krate":0,"index":11172},{"krate":0,"index":11174},{"krate":0,"index":11175},{"krate":0,"index":11177},{"krate":0,"index":11179},{"krate":0,"index":11180},{"krate":0,"index":11181},{"krate":0,"index":11182},{"krate":0,"index":11186}],"docs":"","sig":null,"attributes":[]},{"id":918,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/hessenberg.rs","byte_start":1189249,"byte_end":1189259,"line_start":37,"line_end":37,"column_start":47,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":919,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/hessenberg.rs","byte_start":1189450,"byte_end":1189460,"line_start":45,"line_end":45,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":11232},{"krate":0,"index":11233},{"krate":0,"index":11234},{"krate":0,"index":11235},{"krate":0,"index":11237},{"krate":0,"index":11239},{"krate":0,"index":11240}],"docs":"","sig":null,"attributes":[]},{"id":920,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/inverse.rs","byte_start":1197382,"byte_end":1197394,"line_start":10,"line_end":10,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":11332}],"docs":"","sig":null,"attributes":[]},{"id":921,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/inverse.rs","byte_start":1197837,"byte_end":1197849,"line_start":27,"line_end":27,"column_start":55,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":11337}],"docs":"","sig":null,"attributes":[]},{"id":922,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1206558,"byte_end":1206560,"line_start":39,"line_end":39,"column_start":54,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":923,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1207899,"byte_end":1207901,"line_start":87,"line_end":87,"column_start":45,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":11415},{"krate":0,"index":11416},{"krate":0,"index":11417},{"krate":0,"index":11418},{"krate":0,"index":11419},{"krate":0,"index":11420},{"krate":0,"index":11421},{"krate":0,"index":11422}],"docs":"","sig":null,"attributes":[]},{"id":924,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1211671,"byte_end":1211673,"line_start":209,"line_end":209,"column_start":49,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":11426},{"krate":0,"index":11430},{"krate":0,"index":11434},{"krate":0,"index":11435},{"krate":0,"index":11437},{"krate":0,"index":11438}],"docs":"","sig":null,"attributes":[]},{"id":925,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1218019,"byte_end":1218038,"line_start":35,"line_end":35,"column_start":23,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":926,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1218160,"byte_end":1218179,"line_start":42,"line_end":42,"column_start":18,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":11492}],"docs":"","sig":null,"attributes":[]},{"id":927,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1218475,"byte_end":1218494,"line_start":54,"line_end":54,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":11494}],"docs":"","sig":null,"attributes":[]},{"id":928,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1218777,"byte_end":1218796,"line_start":65,"line_end":65,"column_start":14,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":11497},{"krate":0,"index":11498},{"krate":0,"index":11499},{"krate":0,"index":11504},{"krate":0,"index":11509},{"krate":0,"index":11514},{"krate":0,"index":11519},{"krate":0,"index":11520},{"krate":0,"index":11521}],"docs":"","sig":null,"attributes":[]},{"id":929,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1223023,"byte_end":1223025,"line_start":40,"line_end":40,"column_start":54,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":930,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1223234,"byte_end":1223236,"line_start":48,"line_end":48,"column_start":45,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":11597},{"krate":0,"index":11598},{"krate":0,"index":11600},{"krate":0,"index":11602},{"krate":0,"index":11603},{"krate":0,"index":11604},{"krate":0,"index":11605}],"docs":"","sig":null,"attributes":[]},{"id":931,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1227161,"byte_end":1227163,"line_start":159,"line_end":159,"column_start":49,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":11612},{"krate":0,"index":11616},{"krate":0,"index":11620},{"krate":0,"index":11624},{"krate":0,"index":11625}],"docs":"","sig":null,"attributes":[]},{"id":932,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1232240,"byte_end":1232245,"line_start":42,"line_end":42,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":933,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1232360,"byte_end":1232365,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":11711},{"krate":0,"index":11712},{"krate":0,"index":11714},{"krate":0,"index":11715},{"krate":0,"index":11716},{"krate":0,"index":11717},{"krate":0,"index":11718},{"krate":0,"index":11719},{"krate":0,"index":11720}],"docs":"","sig":null,"attributes":[]},{"id":934,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1246966,"byte_end":1246978,"line_start":491,"line_end":491,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":11735},{"krate":0,"index":11736}],"docs":"","sig":null,"attributes":[]},{"id":935,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1249487,"byte_end":1249499,"line_start":10,"line_end":10,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":11791},{"krate":0,"index":11795},{"krate":0,"index":11799},{"krate":0,"index":11803},{"krate":0,"index":11806},{"krate":0,"index":11810},{"krate":0,"index":11814},{"krate":0,"index":11817},{"krate":0,"index":11821},{"krate":0,"index":11825},{"krate":0,"index":11831},{"krate":0,"index":11837},{"krate":0,"index":11841},{"krate":0,"index":11845},{"krate":0,"index":11851},{"krate":0,"index":11857},{"krate":0,"index":11862}],"docs":"","sig":null,"attributes":[]},{"id":936,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1262162,"byte_end":1262174,"line_start":443,"line_end":443,"column_start":56,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":11871},{"krate":0,"index":11875},{"krate":0,"index":11879},{"krate":0,"index":11883},{"krate":0,"index":11886},{"krate":0,"index":11890},{"krate":0,"index":11894},{"krate":0,"index":11897},{"krate":0,"index":11901},{"krate":0,"index":11905},{"krate":0,"index":11911},{"krate":0,"index":11917},{"krate":0,"index":11921},{"krate":0,"index":11925},{"krate":0,"index":11931},{"krate":0,"index":11937},{"krate":0,"index":11942}],"docs":"","sig":null,"attributes":[]},{"id":937,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1275677,"byte_end":1275680,"line_start":57,"line_end":57,"column_start":54,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":938,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1276037,"byte_end":1276040,"line_start":68,"line_end":68,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":12036},{"krate":0,"index":12037},{"krate":0,"index":12040},{"krate":0,"index":12041},{"krate":0,"index":12042},{"krate":0,"index":12043},{"krate":0,"index":12045},{"krate":0,"index":12046},{"krate":0,"index":12048}],"docs":"","sig":null,"attributes":[]},{"id":939,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1295264,"byte_end":1295270,"line_start":606,"line_end":606,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":12057},{"krate":0,"index":12058},{"krate":0,"index":12059}],"docs":"","sig":null,"attributes":[]},{"id":940,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1299574,"byte_end":1299588,"line_start":44,"line_end":44,"column_start":40,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":941,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1299768,"byte_end":1299782,"line_start":52,"line_end":52,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":12125},{"krate":0,"index":12126},{"krate":0,"index":12128},{"krate":0,"index":12129},{"krate":0,"index":12130}],"docs":"","sig":null,"attributes":[]},{"id":942,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1307821,"byte_end":1307833,"line_start":304,"line_end":304,"column_start":59,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":12137}],"docs":"","sig":null,"attributes":[]},{"id":943,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1311770,"byte_end":1311790,"line_start":37,"line_end":37,"column_start":47,"column_end":67},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":944,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1311981,"byte_end":1312001,"line_start":45,"line_end":45,"column_start":38,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":12180},{"krate":0,"index":12181},{"krate":0,"index":12182},{"krate":0,"index":12183},{"krate":0,"index":12184},{"krate":0,"index":12186},{"krate":0,"index":12187},{"krate":0,"index":12188}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":4100,"byte_end":4104,"line_start":124,"line_end":124,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":7}},{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/mod.rs","byte_start":14907,"byte_end":14916,"line_start":3,"line_end":3,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":8}},{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/mod.rs","byte_start":14936,"byte_end":14946,"line_start":5,"line_end":5,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":361}},{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/mod.rs","byte_start":14956,"byte_end":14967,"line_start":6,"line_end":6,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":411}},{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/mod.rs","byte_start":14977,"byte_end":14994,"line_start":7,"line_end":7,"column_start":9,"column_end":26},"ref_id":{"krate":0,"index":457}},{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/mod.rs","byte_start":15004,"byte_end":15013,"line_start":8,"line_end":8,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":572}},{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/mod.rs","byte_start":15023,"byte_end":15027,"line_start":9,"line_end":9,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":737}},{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/mod.rs","byte_start":15046,"byte_end":15053,"line_start":11,"line_end":11,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1229}},{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/mod.rs","byte_start":15209,"byte_end":15217,"line_start":22,"line_end":22,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":3422}},{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/mod.rs","byte_start":15475,"byte_end":15481,"line_start":38,"line_end":38,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":5073}},{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":4155,"byte_end":4163,"line_start":127,"line_end":127,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":5246}},{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/lib.rs","byte_start":4208,"byte_end":4214,"line_start":130,"line_end":130,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":10553}},{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/mod.rs","byte_start":1113488,"byte_end":1113497,"line_start":3,"line_end":3,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":10554}},{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/mod.rs","byte_start":1113823,"byte_end":1113829,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":11129}},{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/mod.rs","byte_start":1113855,"byte_end":1113866,"line_start":17,"line_end":17,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":11241}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":16647,"byte_end":16650,"line_start":19,"line_end":19,"column_start":54,"column_end":57},"kind":"SuperTrait","from":{"krate":2,"index":3503},"to":{"krate":0,"index":39}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":16653,"byte_end":16658,"line_start":19,"line_end":19,"column_start":60,"column_end":65},"kind":"SuperTrait","from":{"krate":2,"index":2830},"to":{"krate":0,"index":39}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":17411,"byte_end":17420,"line_start":37,"line_end":37,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":39},"to":{"krate":0,"index":47}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":17440,"byte_end":17449,"line_start":37,"line_end":37,"column_start":34,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":39},"to":{"krate":0,"index":47}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":18642,"byte_end":18651,"line_start":62,"line_end":62,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":39},"to":{"krate":0,"index":60}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":18665,"byte_end":18674,"line_start":62,"line_end":62,"column_start":28,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":39},"to":{"krate":0,"index":60}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":18939,"byte_end":18955,"line_start":73,"line_end":73,"column_start":67,"column_end":83},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":509},"to":{"krate":0,"index":60}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":19331,"byte_end":19340,"line_start":88,"line_end":88,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":39},"to":{"krate":0,"index":72}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":19350,"byte_end":19359,"line_start":88,"line_end":88,"column_start":24,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":39},"to":{"krate":0,"index":72}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":19385,"byte_end":19403,"line_start":88,"line_end":88,"column_start":59,"column_end":77},"kind":"SuperTrait","from":{"krate":0,"index":60},"to":{"krate":0,"index":72}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/allocator.rs","byte_start":19578,"byte_end":19594,"line_start":97,"line_end":97,"column_start":57,"column_end":73},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":509},"to":{"krate":0,"index":72}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":20397,"byte_end":20403,"line_start":20,"line_end":20,"column_start":46,"column_end":52},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":30755,"byte_end":30761,"line_start":315,"line_end":315,"column_start":20,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":3767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":44258,"byte_end":44264,"line_start":717,"line_end":717,"column_start":53,"column_end":59},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":57655,"byte_end":57661,"line_start":1091,"line_end":1091,"column_start":53,"column_end":59},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/blas.rs","byte_start":62988,"byte_end":63000,"line_start":1239,"line_end":1239,"column_start":44,"column_end":56},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":71130,"byte_end":71135,"line_start":9,"line_end":9,"column_start":64,"column_end":69},"kind":"SuperTrait","from":{"krate":0,"index":384},"to":{"krate":0,"index":374}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":71225,"byte_end":71240,"line_start":11,"line_end":11,"column_start":78,"column_end":93},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":372},"to":{"krate":0,"index":374}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":71552,"byte_end":71567,"line_start":23,"line_end":23,"column_start":30,"column_end":45},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":372},"to":{"krate":0,"index":384}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":71641,"byte_end":71656,"line_start":27,"line_end":27,"column_start":40,"column_end":55},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":372},"to":{"krate":0,"index":384}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":71730,"byte_end":71745,"line_start":31,"line_end":31,"column_start":40,"column_end":55},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":372},"to":{"krate":0,"index":384}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":73098,"byte_end":73114,"line_start":73,"line_end":73,"column_start":5,"column_end":21},"kind":"SuperTrait","from":{"krate":0,"index":12350},"to":{"krate":0,"index":398}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":73125,"byte_end":73144,"line_start":73,"line_end":73,"column_start":32,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":12363},"to":{"krate":0,"index":398}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":73344,"byte_end":73359,"line_start":80,"line_end":80,"column_start":38,"column_end":53},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":372},"to":{"krate":0,"index":398}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":73441,"byte_end":73456,"line_start":84,"line_end":84,"column_start":48,"column_end":63},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":372},"to":{"krate":0,"index":398}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/constraint.rs","byte_start":73538,"byte_end":73553,"line_start":88,"line_end":88,"column_start":48,"column_end":63},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":372},"to":{"krate":0,"index":398}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/default_allocator.rs","byte_start":81740,"byte_end":81756,"line_start":37,"line_end":37,"column_start":38,"column_end":54},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":509},"to":{"krate":0,"index":39}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/default_allocator.rs","byte_start":82814,"byte_end":82830,"line_start":79,"line_end":79,"column_start":54,"column_end":70},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":509},"to":{"krate":0,"index":39}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/default_allocator.rs","byte_start":83754,"byte_end":83770,"line_start":109,"line_end":109,"column_start":58,"column_end":74},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":509},"to":{"krate":0,"index":39}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/default_allocator.rs","byte_start":84713,"byte_end":84729,"line_start":143,"line_end":143,"column_start":84,"column_end":100},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":509},"to":{"krate":0,"index":47}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/default_allocator.rs","byte_start":85618,"byte_end":85634,"line_start":173,"line_end":173,"column_start":83,"column_end":99},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":509},"to":{"krate":0,"index":47}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/default_allocator.rs","byte_start":86477,"byte_end":86493,"line_start":201,"line_end":201,"column_start":83,"column_end":99},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":509},"to":{"krate":0,"index":47}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/default_allocator.rs","byte_start":87369,"byte_end":87385,"line_start":230,"line_end":230,"column_start":9,"column_end":25},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":509},"to":{"krate":0,"index":47}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/default_allocator.rs","byte_start":87812,"byte_end":87828,"line_start":245,"line_end":245,"column_start":9,"column_end":25},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":509},"to":{"krate":0,"index":47}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/default_allocator.rs","byte_start":88255,"byte_end":88271,"line_start":260,"line_end":260,"column_start":9,"column_end":25},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":509},"to":{"krate":0,"index":47}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/default_allocator.rs","byte_start":88702,"byte_end":88718,"line_start":275,"line_end":275,"column_start":9,"column_end":25},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":509},"to":{"krate":0,"index":47}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":89558,"byte_end":89565,"line_start":22,"line_end":22,"column_start":6,"column_end":13},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":13925},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":90372,"byte_end":90379,"line_start":55,"line_end":55,"column_start":20,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":13925},"to":{"krate":0,"index":644}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":90407,"byte_end":90414,"line_start":56,"line_end":56,"column_start":25,"column_end":32},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":13925},"to":{"krate":0,"index":645}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":90597,"byte_end":90600,"line_start":60,"line_end":60,"column_start":16,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":3503},"to":{"krate":0,"index":648}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":90603,"byte_end":90608,"line_start":60,"line_end":60,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":8829},"to":{"krate":0,"index":648}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":90611,"byte_end":90615,"line_start":60,"line_end":60,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2835},"to":{"krate":0,"index":648}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":90618,"byte_end":90627,"line_start":60,"line_end":60,"column_start":37,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":2480},"to":{"krate":0,"index":648}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":90630,"byte_end":90634,"line_start":60,"line_end":60,"column_start":49,"column_end":53},"kind":"SuperTrait","from":{"krate":2,"index":2825},"to":{"krate":0,"index":648}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":90637,"byte_end":90641,"line_start":60,"line_end":60,"column_start":56,"column_end":60},"kind":"SuperTrait","from":{"krate":2,"index":2837},"to":{"krate":0,"index":648}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":91279,"byte_end":91286,"line_start":79,"line_end":79,"column_start":14,"column_end":21},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":13925},"to":{"krate":0,"index":648}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":91541,"byte_end":91548,"line_start":96,"line_end":96,"column_start":21,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":13925},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":91697,"byte_end":91704,"line_start":105,"line_end":105,"column_start":21,"column_end":28},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":13925},"to":{"krate":2,"index":2897}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":94306,"byte_end":94309,"line_start":193,"line_end":193,"column_start":20,"column_end":23},"kind":"SuperTrait","from":{"krate":0,"index":648},"to":{"krate":0,"index":665}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":94624,"byte_end":94629,"line_start":207,"line_end":207,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2830},"to":{"krate":0,"index":669}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":94632,"byte_end":94635,"line_start":207,"line_end":207,"column_start":29,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":3503},"to":{"krate":0,"index":669}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":94638,"byte_end":94646,"line_start":207,"line_end":207,"column_start":35,"column_end":43},"kind":"SuperTrait","from":{"krate":35,"index":716},"to":{"krate":0,"index":669}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":94891,"byte_end":94893,"line_start":216,"line_end":216,"column_start":14,"column_end":16},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":14131},"to":{"krate":0,"index":648}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95179,"byte_end":95181,"line_start":234,"line_end":234,"column_start":18,"column_end":20},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":14131},"to":{"krate":0,"index":665}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":95300,"byte_end":95302,"line_start":243,"line_end":243,"column_start":28,"column_end":30},"kind":{"Impl":{"id":32}},"from":{"krate":35,"index":2786},"to":{"krate":0,"index":669}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":97682,"byte_end":97686,"line_start":310,"line_end":310,"column_start":20,"column_end":24},"kind":{"Impl":{"id":33}},"from":{"krate":35,"index":6663},"to":{"krate":0,"index":669}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":98249,"byte_end":98253,"line_start":323,"line_end":323,"column_start":15,"column_end":19},"kind":{"Impl":{"id":34}},"from":{"krate":35,"index":6663},"to":{"krate":0,"index":648}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":99115,"byte_end":99119,"line_start":350,"line_end":350,"column_start":19,"column_end":23},"kind":{"Impl":{"id":35}},"from":{"krate":35,"index":6663},"to":{"krate":0,"index":665}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":99763,"byte_end":99767,"line_start":369,"line_end":369,"column_start":9,"column_end":13},"kind":{"Impl":{"id":36}},"from":{"krate":35,"index":6663},"to":{"krate":0,"index":645}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":99947,"byte_end":99951,"line_start":374,"line_end":374,"column_start":9,"column_end":13},"kind":{"Impl":{"id":37}},"from":{"krate":35,"index":6663},"to":{"krate":0,"index":669}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":100086,"byte_end":100090,"line_start":380,"line_end":380,"column_start":9,"column_end":13},"kind":{"Impl":{"id":38}},"from":{"krate":35,"index":6663},"to":{"krate":0,"index":648}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":100518,"byte_end":100522,"line_start":400,"line_end":400,"column_start":9,"column_end":13},"kind":{"Impl":{"id":39}},"from":{"krate":35,"index":6663},"to":{"krate":0,"index":665}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/dimension.rs","byte_start":100734,"byte_end":100738,"line_start":411,"line_end":411,"column_start":9,"column_end":13},"kind":{"Impl":{"id":40}},"from":{"krate":35,"index":6663},"to":{"krate":0,"index":645}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":106097,"byte_end":106104,"line_start":140,"line_end":140,"column_start":63,"column_end":70},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":17521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":106301,"byte_end":106308,"line_start":146,"line_end":146,"column_start":76,"column_end":83},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":17521},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":107007,"byte_end":107014,"line_start":175,"line_end":175,"column_start":9,"column_end":16},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":17521},"to":{"krate":2,"index":7138}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":107428,"byte_end":107438,"line_start":190,"line_end":190,"column_start":66,"column_end":76},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":796},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":107793,"byte_end":107803,"line_start":205,"line_end":205,"column_start":9,"column_end":19},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":796},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":108475,"byte_end":108485,"line_start":232,"line_end":232,"column_start":9,"column_end":19},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":796},"to":{"krate":2,"index":7138}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":108880,"byte_end":108890,"line_start":252,"line_end":252,"column_start":63,"column_end":73},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":17536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":109094,"byte_end":109104,"line_start":259,"line_end":259,"column_start":9,"column_end":19},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":17536},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":109806,"byte_end":109816,"line_start":289,"line_end":289,"column_start":9,"column_end":19},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":17536},"to":{"krate":2,"index":7138}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":110236,"byte_end":110249,"line_start":304,"line_end":304,"column_start":66,"column_end":79},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":854},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":110607,"byte_end":110620,"line_start":319,"line_end":319,"column_start":9,"column_end":22},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":854},"to":{"krate":2,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/iter.rs","byte_start":111295,"byte_end":111308,"line_start":346,"line_end":346,"column_start":9,"column_end":22},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":854},"to":{"krate":2,"index":7138}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":112203,"byte_end":112209,"line_start":23,"line_end":23,"column_start":71,"column_end":77},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":21307},"to":{"krate":2,"index":3132}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":112438,"byte_end":112444,"line_start":33,"line_end":33,"column_start":54,"column_end":60},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":21307},"to":{"krate":2,"index":3132}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":112909,"byte_end":112915,"line_start":53,"line_end":53,"column_start":77,"column_end":83},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":21307},"to":{"krate":2,"index":3136}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":113130,"byte_end":113136,"line_start":61,"line_end":61,"column_start":57,"column_end":63},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":21307},"to":{"krate":2,"index":3136}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":113545,"byte_end":113551,"line_start":83,"line_end":83,"column_start":36,"column_end":42},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":21307},"to":{"krate":2,"index":2919}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":114153,"byte_end":114159,"line_start":113,"line_end":113,"column_start":28,"column_end":34},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":125959,"byte_end":125967,"line_start":377,"line_end":377,"column_start":47,"column_end":55},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1359},"to":{"krate":2,"index":7045}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":126234,"byte_end":126242,"line_start":387,"line_end":387,"column_start":31,"column_end":39},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1359},"to":{"krate":2,"index":7045}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":127311,"byte_end":127319,"line_start":417,"line_end":417,"column_start":74,"column_end":82},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1359},"to":{"krate":2,"index":7045}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":127623,"byte_end":127631,"line_start":427,"line_end":427,"column_start":64,"column_end":72},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1359},"to":{"krate":2,"index":7045}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":133205,"byte_end":133211,"line_start":602,"line_end":602,"column_start":9,"column_end":15},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":21307},"to":{"krate":2,"index":2902}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":133678,"byte_end":133684,"line_start":619,"line_end":619,"column_start":9,"column_end":15},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":21307},"to":{"krate":2,"index":2902}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":134281,"byte_end":134287,"line_start":638,"line_end":638,"column_start":66,"column_end":72},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":21307},"to":{"krate":2,"index":2931}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":134774,"byte_end":134780,"line_start":655,"line_end":655,"column_start":74,"column_end":80},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":21307},"to":{"krate":2,"index":2931}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":135335,"byte_end":135341,"line_start":674,"line_end":674,"column_start":31,"column_end":37},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":140964,"byte_end":140971,"line_start":845,"line_end":845,"column_start":39,"column_end":46},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1363},"to":{"krate":2,"index":7049}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/ops.rs","byte_start":141279,"byte_end":141286,"line_start":855,"line_end":855,"column_start":62,"column_end":69},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1363},"to":{"krate":2,"index":7049}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":143258,"byte_end":143263,"line_start":39,"line_end":39,"column_start":59,"column_end":64},"kind":"SuperTrait","from":{"krate":2,"index":8829},"to":{"krate":0,"index":1277}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":143266,"byte_end":143271,"line_start":39,"line_end":39,"column_start":67,"column_end":72},"kind":"SuperTrait","from":{"krate":2,"index":2830},"to":{"krate":0,"index":1277}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":146451,"byte_end":146458,"line_start":120,"line_end":120,"column_start":62,"column_end":69},"kind":"SuperTrait","from":{"krate":0,"index":1277},"to":{"krate":0,"index":1295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":148810,"byte_end":148817,"line_start":178,"line_end":178,"column_start":5,"column_end":12},"kind":"SuperTrait","from":{"krate":0,"index":1277},"to":{"krate":0,"index":1307}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":149233,"byte_end":149250,"line_start":188,"line_end":188,"column_start":5,"column_end":22},"kind":"SuperTrait","from":{"krate":0,"index":1307},"to":{"krate":0,"index":1311}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":149262,"byte_end":149272,"line_start":188,"line_end":188,"column_start":34,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":1295},"to":{"krate":0,"index":1311}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/storage.rs","byte_start":149387,"byte_end":149394,"line_start":193,"line_end":193,"column_start":49,"column_end":56},"kind":"SuperTrait","from":{"krate":0,"index":1277},"to":{"krate":0,"index":1315}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/array_storage.rs","byte_start":200411,"byte_end":200423,"line_start":53,"line_end":53,"column_start":27,"column_end":39},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2202},"to":{"krate":2,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/array_storage.rs","byte_start":200694,"byte_end":200706,"line_start":68,"line_end":68,"column_start":24,"column_end":36},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2202},"to":{"krate":2,"index":9035}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/array_storage.rs","byte_start":200958,"byte_end":200970,"line_start":81,"line_end":81,"column_start":25,"column_end":37},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2202},"to":{"krate":2,"index":3047}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/array_storage.rs","byte_start":201265,"byte_end":201277,"line_start":96,"line_end":96,"column_start":28,"column_end":40},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2202},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/array_storage.rs","byte_start":201523,"byte_end":201535,"line_start":109,"line_end":109,"column_start":25,"column_end":37},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2202},"to":{"krate":2,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/array_storage.rs","byte_start":201803,"byte_end":201815,"line_start":123,"line_end":123,"column_start":24,"column_end":36},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2202},"to":{"krate":2,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/array_storage.rs","byte_start":202033,"byte_end":202045,"line_start":134,"line_end":134,"column_start":25,"column_end":37},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2202},"to":{"krate":2,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/array_storage.rs","byte_start":202328,"byte_end":202340,"line_start":150,"line_end":150,"column_start":22,"column_end":34},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2202},"to":{"krate":2,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/array_storage.rs","byte_start":202507,"byte_end":202519,"line_start":160,"line_end":160,"column_start":29,"column_end":41},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2202},"to":{"krate":2,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/array_storage.rs","byte_start":202800,"byte_end":202812,"line_start":174,"line_end":174,"column_start":43,"column_end":55},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2202},"to":{"krate":0,"index":1277}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/array_storage.rs","byte_start":203933,"byte_end":203945,"line_start":230,"line_end":230,"column_start":46,"column_end":58},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2202},"to":{"krate":0,"index":1295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/array_storage.rs","byte_start":204373,"byte_end":204385,"line_start":250,"line_end":250,"column_start":53,"column_end":65},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2202},"to":{"krate":0,"index":1307}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/array_storage.rs","byte_start":204640,"byte_end":204652,"line_start":261,"line_end":261,"column_start":56,"column_end":68},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2202},"to":{"krate":0,"index":1311}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/array_storage.rs","byte_start":204917,"byte_end":204929,"line_start":272,"line_end":272,"column_start":66,"column_end":78},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2202},"to":{"krate":0,"index":1315}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":209665,"byte_end":209672,"line_start":25,"line_end":25,"column_start":21,"column_end":28},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":210989,"byte_end":210996,"line_start":70,"line_end":70,"column_start":20,"column_end":27},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1396},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":211848,"byte_end":211855,"line_start":99,"line_end":99,"column_start":20,"column_end":27},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1398},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":215980,"byte_end":215992,"line_start":208,"line_end":208,"column_start":5,"column_end":17},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":3763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/cg.rs","byte_start":222202,"byte_end":222214,"line_start":392,"line_end":392,"column_start":60,"column_end":72},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":3763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":224409,"byte_end":224415,"line_start":19,"line_end":19,"column_start":54,"column_end":60},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/componentwise.rs","byte_start":229460,"byte_end":229466,"line_start":147,"line_end":147,"column_start":59,"column_end":65},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":234900,"byte_end":234908,"line_start":34,"line_end":34,"column_start":33,"column_end":41},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":244346,"byte_end":244353,"line_start":309,"line_end":309,"column_start":17,"column_end":24},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":256402,"byte_end":256410,"line_start":593,"line_end":593,"column_start":41,"column_end":49},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":256927,"byte_end":256935,"line_start":605,"line_end":605,"column_start":29,"column_end":37},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":257266,"byte_end":257274,"line_start":616,"line_end":616,"column_start":29,"column_end":37},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":257557,"byte_end":257565,"line_start":627,"line_end":627,"column_start":17,"column_end":25},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":263125,"byte_end":263133,"line_start":759,"line_end":759,"column_start":42,"column_end":50},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1359},"to":{"krate":20,"index":497}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":263434,"byte_end":263441,"line_start":775,"line_end":775,"column_start":29,"column_end":36},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1363},"to":{"krate":20,"index":507}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":263665,"byte_end":263673,"line_start":786,"line_end":786,"column_start":45,"column_end":53},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1359},"to":{"krate":20,"index":230}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":264014,"byte_end":264022,"line_start":802,"line_end":802,"column_start":69,"column_end":77},"kind":{"Impl":{"id":124}},"from":{"krate":24,"index":2414},"to":{"krate":24,"index":807}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":265104,"byte_end":265112,"line_start":837,"line_end":837,"column_start":70,"column_end":78},"kind":{"Impl":{"id":125}},"from":{"krate":24,"index":2414},"to":{"krate":24,"index":807}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction.rs","byte_start":272823,"byte_end":272830,"line_start":1028,"line_end":1028,"column_start":21,"column_end":28},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":277033,"byte_end":277046,"line_start":9,"line_end":9,"column_start":5,"column_end":18},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1531},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":279006,"byte_end":279019,"line_start":59,"line_end":59,"column_start":37,"column_end":50},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1531},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":282941,"byte_end":282957,"line_start":143,"line_end":143,"column_start":5,"column_end":21},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/construction_slice.rs","byte_start":285976,"byte_end":285992,"line_start":215,"line_end":215,"column_start":37,"column_end":53},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/conversion.rs","byte_start":291258,"byte_end":291266,"line_start":35,"line_end":35,"column_start":65,"column_end":73},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1359},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/conversion.rs","byte_start":301958,"byte_end":301964,"line_start":351,"line_end":351,"column_start":9,"column_end":15},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":21307},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/conversion.rs","byte_start":302430,"byte_end":302436,"line_start":368,"line_end":368,"column_start":9,"column_end":15},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":21307},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/conversion.rs","byte_start":302823,"byte_end":302829,"line_start":382,"line_end":382,"column_start":9,"column_end":15},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":21307},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/conversion.rs","byte_start":303172,"byte_end":303178,"line_start":395,"line_end":395,"column_start":9,"column_end":15},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":21307},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/conversion.rs","byte_start":303650,"byte_end":303656,"line_start":412,"line_end":412,"column_start":9,"column_end":15},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":21307},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/conversion.rs","byte_start":304049,"byte_end":304055,"line_start":426,"line_end":426,"column_start":9,"column_end":15},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":21307},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/conversion.rs","byte_start":304397,"byte_end":304408,"line_start":439,"line_end":439,"column_start":9,"column_end":20},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":4305},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/conversion.rs","byte_start":305476,"byte_end":305487,"line_start":476,"line_end":476,"column_start":9,"column_end":20},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":4305},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/conversion.rs","byte_start":306559,"byte_end":306573,"line_start":513,"line_end":513,"column_start":9,"column_end":23},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":4312},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/conversion.rs","byte_start":307644,"byte_end":307651,"line_start":550,"line_end":550,"column_start":38,"column_end":45},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1464},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/conversion.rs","byte_start":308205,"byte_end":308217,"line_start":575,"line_end":575,"column_start":46,"column_end":58},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1795},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/conversion.rs","byte_start":308382,"byte_end":308397,"line_start":582,"line_end":582,"column_start":50,"column_end":65},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2094},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/conversion.rs","byte_start":308616,"byte_end":308624,"line_start":590,"line_end":590,"column_start":9,"column_end":17},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1359},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/conversion.rs","byte_start":309236,"byte_end":309244,"line_start":611,"line_end":611,"column_start":9,"column_end":17},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1359},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/conversion.rs","byte_start":309952,"byte_end":309960,"line_start":634,"line_end":634,"column_start":9,"column_end":17},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1359},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/conversion.rs","byte_start":310861,"byte_end":310869,"line_start":661,"line_end":661,"column_start":9,"column_end":17},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1359},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":312903,"byte_end":312909,"line_start":22,"line_end":22,"column_start":61,"column_end":67},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":315649,"byte_end":315655,"line_start":104,"line_end":104,"column_start":57,"column_end":63},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":317655,"byte_end":317661,"line_start":159,"line_end":159,"column_start":57,"column_end":63},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":320618,"byte_end":320624,"line_start":242,"line_end":242,"column_start":49,"column_end":55},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":321824,"byte_end":321830,"line_start":276,"line_end":276,"column_start":57,"column_end":63},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":322822,"byte_end":322828,"line_start":312,"line_end":312,"column_start":54,"column_end":60},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":330181,"byte_end":330187,"line_start":540,"line_end":540,"column_start":54,"column_end":60},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":335212,"byte_end":335218,"line_start":701,"line_end":701,"column_start":54,"column_end":60},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":342120,"byte_end":342127,"line_start":888,"line_end":888,"column_start":17,"column_end":24},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":342920,"byte_end":342928,"line_start":907,"line_end":907,"column_start":25,"column_end":33},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":343892,"byte_end":343900,"line_start":931,"line_end":931,"column_start":25,"column_end":33},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":346783,"byte_end":346789,"line_start":1029,"line_end":1029,"column_start":29,"column_end":35},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":21307},"to":{"krate":2,"index":7095}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":348299,"byte_end":348305,"line_start":1077,"line_end":1077,"column_start":26,"column_end":32},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":21307},"to":{"krate":2,"index":7095}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/edition.rs","byte_start":348917,"byte_end":348923,"line_start":1098,"line_end":1098,"column_start":53,"column_end":59},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":21307},"to":{"krate":2,"index":7095}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":352227,"byte_end":352232,"line_start":51,"line_end":51,"column_start":35,"column_end":40},"kind":{"Impl":{"id":163}},"from":{"krate":2,"index":38328},"to":{"krate":0,"index":3464}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":353391,"byte_end":353400,"line_start":95,"line_end":95,"column_start":35,"column_end":44},"kind":{"Impl":{"id":164}},"from":{"krate":2,"index":38353},"to":{"krate":0,"index":3464}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":354419,"byte_end":354428,"line_start":135,"line_end":135,"column_start":43,"column_end":52},"kind":{"Impl":{"id":165}},"from":{"krate":2,"index":38353},"to":{"krate":0,"index":3464}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":354960,"byte_end":354969,"line_start":163,"line_end":163,"column_start":35,"column_end":44},"kind":{"Impl":{"id":166}},"from":{"krate":2,"index":38312},"to":{"krate":0,"index":3464}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":355470,"byte_end":355484,"line_start":189,"line_end":189,"column_start":35,"column_end":49},"kind":{"Impl":{"id":167}},"from":{"krate":2,"index":38397},"to":{"krate":0,"index":3464}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":356989,"byte_end":356996,"line_start":245,"line_end":245,"column_start":35,"column_end":42},"kind":{"Impl":{"id":168}},"from":{"krate":2,"index":38374},"to":{"krate":0,"index":3464}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":357967,"byte_end":357983,"line_start":285,"line_end":285,"column_start":35,"column_end":51},"kind":{"Impl":{"id":169}},"from":{"krate":2,"index":38420},"to":{"krate":0,"index":3464}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":359055,"byte_end":359060,"line_start":326,"line_end":326,"column_start":76,"column_end":81},"kind":"SuperTrait","from":{"krate":2,"index":2830},"to":{"krate":0,"index":3519}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":360270,"byte_end":360281,"line_start":362,"line_end":362,"column_start":5,"column_end":16},"kind":"SuperTrait","from":{"krate":0,"index":3519},"to":{"krate":0,"index":3530}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/indexing.rs","byte_start":363920,"byte_end":363926,"line_start":492,"line_end":492,"column_start":54,"column_end":60},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":384258,"byte_end":384264,"line_start":182,"line_end":182,"column_start":63,"column_end":69},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":21307},"to":{"krate":2,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":384510,"byte_end":384516,"line_start":191,"line_end":191,"column_start":30,"column_end":36},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":21307},"to":{"krate":2,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":386540,"byte_end":386546,"line_start":282,"line_end":282,"column_start":36,"column_end":42},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":386942,"byte_end":386948,"line_start":294,"line_end":294,"column_start":54,"column_end":60},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":394848,"byte_end":394854,"line_start":558,"line_end":558,"column_start":54,"column_end":60},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":404367,"byte_end":404373,"line_start":863,"line_end":863,"column_start":54,"column_end":60},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":407508,"byte_end":407514,"line_start":972,"line_end":972,"column_start":57,"column_end":63},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":411217,"byte_end":411223,"line_start":1083,"line_end":1083,"column_start":43,"column_end":49},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":411604,"byte_end":411610,"line_start":1093,"line_end":1093,"column_start":46,"column_end":52},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":412033,"byte_end":412039,"line_start":1103,"line_end":1103,"column_start":64,"column_end":70},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":412298,"byte_end":412304,"line_start":1111,"line_end":1111,"column_start":67,"column_end":73},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":412569,"byte_end":412575,"line_start":1119,"line_end":1119,"column_start":49,"column_end":55},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":413053,"byte_end":413059,"line_start":1137,"line_end":1137,"column_start":64,"column_end":70},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":416022,"byte_end":416028,"line_start":1234,"line_end":1234,"column_start":67,"column_end":73},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":416684,"byte_end":416690,"line_start":1254,"line_end":1254,"column_start":59,"column_end":65},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":417814,"byte_end":417826,"line_start":1290,"line_end":1290,"column_start":46,"column_end":58},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":419376,"byte_end":419388,"line_start":1347,"line_end":1347,"column_start":56,"column_end":68},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":420403,"byte_end":420409,"line_start":1383,"line_end":1383,"column_start":5,"column_end":11},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":421181,"byte_end":421187,"line_start":1404,"line_end":1404,"column_start":57,"column_end":63},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":3767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":422135,"byte_end":422141,"line_start":1432,"line_end":1432,"column_start":57,"column_end":63},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":422760,"byte_end":422766,"line_start":1450,"line_end":1450,"column_start":42,"column_end":48},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":21307},"to":{"krate":19,"index":15}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":423230,"byte_end":423236,"line_start":1471,"line_end":1471,"column_start":43,"column_end":49},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":21307},"to":{"krate":19,"index":66}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":423694,"byte_end":423700,"line_start":1493,"line_end":1493,"column_start":39,"column_end":45},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":21307},"to":{"krate":19,"index":107}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":424186,"byte_end":424192,"line_start":1513,"line_end":1513,"column_start":43,"column_end":49},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":21307},"to":{"krate":2,"index":2523}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":426864,"byte_end":426870,"line_start":1605,"line_end":1605,"column_start":35,"column_end":41},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":21307},"to":{"krate":2,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":427005,"byte_end":427011,"line_start":1612,"line_end":1612,"column_start":67,"column_end":73},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":21307},"to":{"krate":2,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":430999,"byte_end":431005,"line_start":1732,"line_end":1732,"column_start":5,"column_end":11},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":435057,"byte_end":435063,"line_start":1833,"line_end":1833,"column_start":44,"column_end":50},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":3767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":435690,"byte_end":435696,"line_start":1854,"line_end":1854,"column_start":64,"column_end":70},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":436388,"byte_end":436392,"line_start":1876,"line_end":1876,"column_start":42,"column_end":46},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":21657},"to":{"krate":19,"index":15}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":436819,"byte_end":436823,"line_start":1895,"line_end":1895,"column_start":43,"column_end":47},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":21657},"to":{"krate":19,"index":66}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":437320,"byte_end":437324,"line_start":1918,"line_end":1918,"column_start":39,"column_end":43},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":21657},"to":{"krate":19,"index":107}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix.rs","byte_start":437709,"byte_end":437715,"line_start":1935,"line_end":1935,"column_start":27,"column_end":33},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":21307},"to":{"krate":2,"index":9035}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_simba.rs","byte_start":438348,"byte_end":438356,"line_start":12,"line_end":12,"column_start":29,"column_end":37},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":1359},"to":{"krate":31,"index":852}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":443564,"byte_end":443576,"line_start":93,"line_end":93,"column_start":9,"column_end":21},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":21426},"to":{"krate":2,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":443691,"byte_end":443703,"line_start":98,"line_end":98,"column_start":9,"column_end":21},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":21426},"to":{"krate":2,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":446358,"byte_end":446373,"line_start":182,"line_end":182,"column_start":9,"column_end":24},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":21482},"to":{"krate":0,"index":1295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":446967,"byte_end":446979,"line_start":202,"line_end":202,"column_start":9,"column_end":21},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":21426},"to":{"krate":0,"index":1307}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":447096,"byte_end":447111,"line_start":206,"line_end":206,"column_start":9,"column_end":24},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":21482},"to":{"krate":0,"index":1307}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":447231,"byte_end":447246,"line_start":210,"line_end":210,"column_start":9,"column_end":24},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":21482},"to":{"krate":0,"index":1311}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":447378,"byte_end":447390,"line_start":215,"line_end":215,"column_start":9,"column_end":21},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":21426},"to":{"krate":0,"index":1307}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":447514,"byte_end":447529,"line_start":219,"line_end":219,"column_start":9,"column_end":24},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":21482},"to":{"krate":0,"index":1307}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":447656,"byte_end":447671,"line_start":223,"line_end":223,"column_start":9,"column_end":24},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":21482},"to":{"krate":0,"index":1311}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":447750,"byte_end":447756,"line_start":227,"line_end":227,"column_start":54,"column_end":60},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":464383,"byte_end":464389,"line_start":639,"line_end":639,"column_start":54,"column_end":60},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":465128,"byte_end":465134,"line_start":669,"line_end":669,"column_start":57,"column_end":63},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":467003,"byte_end":467008,"line_start":737,"line_end":737,"column_start":32,"column_end":37},"kind":{"Impl":{"id":220}},"from":{"krate":2,"index":38328},"to":{"krate":0,"index":4329}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":467357,"byte_end":467366,"line_start":756,"line_end":756,"column_start":32,"column_end":41},"kind":{"Impl":{"id":221}},"from":{"krate":2,"index":38353},"to":{"krate":0,"index":4329}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":467725,"byte_end":467732,"line_start":775,"line_end":775,"column_start":32,"column_end":39},"kind":{"Impl":{"id":222}},"from":{"krate":2,"index":38374},"to":{"krate":0,"index":4329}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":468059,"byte_end":468068,"line_start":794,"line_end":794,"column_start":32,"column_end":41},"kind":{"Impl":{"id":223}},"from":{"krate":2,"index":38312},"to":{"krate":0,"index":4329}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":468486,"byte_end":468492,"line_start":815,"line_end":815,"column_start":54,"column_end":60},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":469830,"byte_end":469836,"line_start":856,"line_end":856,"column_start":57,"column_end":63},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/matrix_slice.rs","byte_start":471159,"byte_end":471170,"line_start":895,"line_end":895,"column_start":9,"column_end":20},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":4305},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":473225,"byte_end":473238,"line_start":49,"line_end":49,"column_start":39,"column_end":52},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":4482},"to":{"krate":0,"index":4469}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":474071,"byte_end":474077,"line_start":83,"line_end":83,"column_start":39,"column_end":45},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":4484},"to":{"krate":0,"index":4469}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":475090,"byte_end":475101,"line_start":120,"line_end":120,"column_start":39,"column_end":50},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":4487},"to":{"krate":0,"index":4469}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":476167,"byte_end":476173,"line_start":158,"line_end":158,"column_start":54,"column_end":60},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":482072,"byte_end":482078,"line_start":363,"line_end":363,"column_start":57,"column_end":63},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":483638,"byte_end":483646,"line_start":417,"line_end":417,"column_start":54,"column_end":62},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":1359},"to":{"krate":0,"index":4847}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":484163,"byte_end":484167,"line_start":444,"line_end":444,"column_start":53,"column_end":57},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":21657},"to":{"krate":2,"index":2919}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/norm.rs","byte_start":484661,"byte_end":484668,"line_start":461,"line_end":461,"column_start":35,"column_end":42},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":1466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":490020,"byte_end":490026,"line_start":12,"line_end":12,"column_start":54,"column_end":60},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":492743,"byte_end":492749,"line_start":109,"line_end":109,"column_start":60,"column_end":66},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/properties.rs","byte_start":493305,"byte_end":493317,"line_start":126,"line_end":126,"column_start":49,"column_end":61},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":3763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/scalar.rs","byte_start":494148,"byte_end":494153,"line_start":8,"line_end":8,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2450},"to":{"krate":0,"index":4671}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/scalar.rs","byte_start":494156,"byte_end":494165,"line_start":8,"line_end":8,"column_start":27,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":2480},"to":{"krate":0,"index":4671}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/scalar.rs","byte_start":494168,"byte_end":494173,"line_start":8,"line_end":8,"column_start":39,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":8829},"to":{"krate":0,"index":4671}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/scalar.rs","byte_start":494176,"byte_end":494179,"line_start":8,"line_end":8,"column_start":47,"column_end":50},"kind":"SuperTrait","from":{"krate":2,"index":3503},"to":{"krate":0,"index":4671}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/scalar.rs","byte_start":494674,"byte_end":494675,"line_start":24,"line_end":24,"column_start":52,"column_end":53},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":4676},"to":{"krate":0,"index":4671}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":495065,"byte_end":495071,"line_start":8,"line_end":8,"column_start":54,"column_end":60},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/statistics.rs","byte_start":497141,"byte_end":497147,"line_start":78,"line_end":78,"column_start":54,"column_end":60},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/swizzle.rs","byte_start":506519,"byte_end":506525,"line_start":21,"line_end":21,"column_start":47,"column_end":53},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":3767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":510439,"byte_end":510443,"line_start":68,"line_end":68,"column_start":32,"column_end":36},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":21657},"to":{"krate":2,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":510668,"byte_end":510672,"line_start":81,"line_end":81,"column_start":25,"column_end":29},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":21657},"to":{"krate":2,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":511281,"byte_end":511285,"line_start":105,"line_end":105,"column_start":17,"column_end":21},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":21657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":513704,"byte_end":513708,"line_start":175,"line_end":175,"column_start":9,"column_end":13},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":21657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":514733,"byte_end":514737,"line_start":211,"line_end":211,"column_start":22,"column_end":26},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":21657},"to":{"krate":2,"index":2722}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":516511,"byte_end":516515,"line_start":283,"line_end":283,"column_start":19,"column_end":23},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":21657},"to":{"krate":2,"index":3047}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":516932,"byte_end":516936,"line_start":296,"line_end":296,"column_start":53,"column_end":57},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":21657},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":517464,"byte_end":517468,"line_start":312,"line_end":312,"column_start":53,"column_end":57},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":21657},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":518078,"byte_end":518082,"line_start":330,"line_end":330,"column_start":53,"column_end":57},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":21657},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/unit.rs","byte_start":518857,"byte_end":518861,"line_start":352,"line_end":352,"column_start":54,"column_end":58},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":21657},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":520920,"byte_end":520930,"line_start":38,"line_end":38,"column_start":25,"column_end":35},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":21672},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":522567,"byte_end":522577,"line_start":96,"line_end":96,"column_start":42,"column_end":52},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":21672},"to":{"krate":2,"index":2728}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":522762,"byte_end":522772,"line_start":108,"line_end":108,"column_start":59,"column_end":69},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":21672},"to":{"krate":0,"index":1277}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":523725,"byte_end":523735,"line_start":157,"line_end":157,"column_start":63,"column_end":73},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":21672},"to":{"krate":0,"index":1277}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":524728,"byte_end":524738,"line_start":211,"line_end":211,"column_start":62,"column_end":72},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":21672},"to":{"krate":0,"index":1295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":525078,"byte_end":525088,"line_start":226,"line_end":226,"column_start":69,"column_end":79},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":21672},"to":{"krate":0,"index":1307}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":525248,"byte_end":525258,"line_start":231,"line_end":231,"column_start":72,"column_end":82},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":21672},"to":{"krate":0,"index":1311}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":525414,"byte_end":525424,"line_start":236,"line_end":236,"column_start":68,"column_end":78},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":21672},"to":{"krate":0,"index":1315}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":525853,"byte_end":525863,"line_start":254,"line_end":254,"column_start":68,"column_end":78},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":21672},"to":{"krate":0,"index":1315}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":526294,"byte_end":526304,"line_start":272,"line_end":272,"column_start":66,"column_end":76},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":21672},"to":{"krate":0,"index":1295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":526643,"byte_end":526653,"line_start":287,"line_end":287,"column_start":68,"column_end":78},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":21672},"to":{"krate":0,"index":1315}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":527086,"byte_end":527096,"line_start":305,"line_end":305,"column_start":68,"column_end":78},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":21672},"to":{"krate":0,"index":1315}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":527964,"byte_end":527974,"line_start":338,"line_end":338,"column_start":73,"column_end":83},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":21672},"to":{"krate":0,"index":1307}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":528138,"byte_end":528148,"line_start":343,"line_end":343,"column_start":76,"column_end":86},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":21672},"to":{"krate":0,"index":1311}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":528267,"byte_end":528277,"line_start":348,"line_end":348,"column_start":31,"column_end":41},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":21672},"to":{"krate":2,"index":7095}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":528982,"byte_end":528992,"line_start":364,"line_end":364,"column_start":50,"column_end":60},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":21672},"to":{"krate":2,"index":7095}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":529474,"byte_end":529484,"line_start":377,"line_end":377,"column_start":50,"column_end":60},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":21672},"to":{"krate":2,"index":7095}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/vec_storage.rs","byte_start":530391,"byte_end":530401,"line_start":405,"line_end":405,"column_start":23,"column_end":33},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":21672},"to":{"krate":2,"index":7095}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":531646,"byte_end":531652,"line_start":9,"line_end":9,"column_start":5,"column_end":11},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/interpolation.rs","byte_start":533206,"byte_end":533210,"line_start":60,"line_end":60,"column_start":46,"column_end":50},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":21657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":535464,"byte_end":535470,"line_start":7,"line_end":7,"column_start":54,"column_end":60},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":540132,"byte_end":540138,"line_start":163,"line_end":163,"column_start":76,"column_end":82},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/base/min_max.rs","byte_start":541219,"byte_end":541225,"line_start":198,"line_end":198,"column_start":43,"column_end":49},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":3767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/abstract_rotation.rs","byte_start":557633,"byte_end":557642,"line_start":8,"line_end":8,"column_start":52,"column_end":61},"kind":"SuperTrait","from":{"krate":2,"index":2480},"to":{"krate":0,"index":5299}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/abstract_rotation.rs","byte_start":557645,"byte_end":557654,"line_start":8,"line_end":8,"column_start":64,"column_end":73},"kind":"SuperTrait","from":{"krate":31,"index":234},"to":{"krate":0,"index":5299}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/abstract_rotation.rs","byte_start":557657,"byte_end":557662,"line_start":8,"line_end":8,"column_start":76,"column_end":81},"kind":"SuperTrait","from":{"krate":2,"index":2450},"to":{"krate":0,"index":5299}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/abstract_rotation.rs","byte_start":558893,"byte_end":558901,"line_start":40,"line_end":40,"column_start":63,"column_end":71},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":22095},"to":{"krate":0,"index":5299}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/abstract_rotation.rs","byte_start":560199,"byte_end":560213,"line_start":101,"line_end":101,"column_start":52,"column_end":66},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":6799},"to":{"krate":0,"index":5299}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/abstract_rotation.rs","byte_start":561028,"byte_end":561039,"line_start":141,"line_end":141,"column_start":52,"column_end":63},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":7525},"to":{"krate":0,"index":5299}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":564061,"byte_end":564066,"line_start":51,"line_end":51,"column_start":70,"column_end":75},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":21708},"to":{"krate":2,"index":9035}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":564321,"byte_end":564326,"line_start":61,"line_end":61,"column_start":45,"column_end":50},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":21708},"to":{"krate":2,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":565772,"byte_end":565777,"line_start":119,"line_end":119,"column_start":29,"column_end":34},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":21708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":570911,"byte_end":570916,"line_start":291,"line_end":291,"column_start":55,"column_end":60},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":21708},"to":{"krate":19,"index":15}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":571327,"byte_end":571332,"line_start":309,"line_end":309,"column_start":57,"column_end":62},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":21708},"to":{"krate":19,"index":66}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":571808,"byte_end":571813,"line_start":331,"line_end":331,"column_start":49,"column_end":54},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":21708},"to":{"krate":19,"index":107}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":572185,"byte_end":572190,"line_start":347,"line_end":347,"column_start":41,"column_end":46},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":21708},"to":{"krate":2,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":572283,"byte_end":572288,"line_start":349,"line_end":349,"column_start":43,"column_end":48},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":21708},"to":{"krate":2,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":572498,"byte_end":572503,"line_start":359,"line_end":359,"column_start":57,"column_end":62},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":21708},"to":{"krate":2,"index":2523}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":573152,"byte_end":573157,"line_start":392,"line_end":392,"column_start":46,"column_end":51},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":21708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point.rs","byte_start":573919,"byte_end":573924,"line_start":421,"line_end":421,"column_start":61,"column_end":66},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":21708},"to":{"krate":2,"index":8836}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":576135,"byte_end":576140,"line_start":20,"line_end":20,"column_start":29,"column_end":34},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":21708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":579337,"byte_end":579342,"line_start":123,"line_end":123,"column_start":51,"column_end":56},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":21708},"to":{"krate":20,"index":230}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":579638,"byte_end":579646,"line_start":138,"line_end":138,"column_start":59,"column_end":67},"kind":{"Impl":{"id":291}},"from":{"krate":24,"index":2414},"to":{"krate":24,"index":807}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_construction.rs","byte_start":580420,"byte_end":580426,"line_start":169,"line_end":169,"column_start":17,"column_end":23},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":5488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_conversion.rs","byte_start":583294,"byte_end":583299,"line_start":28,"line_end":28,"column_start":44,"column_end":49},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":21708},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_conversion.rs","byte_start":583985,"byte_end":583990,"line_start":53,"line_end":53,"column_start":62,"column_end":67},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":21708},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_conversion.rs","byte_start":586382,"byte_end":586389,"line_start":134,"line_end":134,"column_start":64,"column_end":71},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":1466},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_conversion.rs","byte_start":586656,"byte_end":586661,"line_start":145,"line_end":145,"column_start":53,"column_end":58},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":21708},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_conversion.rs","byte_start":586904,"byte_end":586909,"line_start":156,"line_end":156,"column_start":9,"column_end":14},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":21708},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_conversion.rs","byte_start":587384,"byte_end":587389,"line_start":170,"line_end":170,"column_start":9,"column_end":14},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":21708},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_conversion.rs","byte_start":587953,"byte_end":587958,"line_start":189,"line_end":189,"column_start":9,"column_end":14},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":21708},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_conversion.rs","byte_start":588631,"byte_end":588636,"line_start":212,"line_end":212,"column_start":9,"column_end":14},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":21708},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_ops.rs","byte_start":591188,"byte_end":591193,"line_start":23,"line_end":23,"column_start":46,"column_end":51},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":21708},"to":{"krate":2,"index":3132}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_ops.rs","byte_start":591413,"byte_end":591418,"line_start":35,"line_end":35,"column_start":49,"column_end":54},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":21708},"to":{"krate":2,"index":3136}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_ops.rs","byte_start":591653,"byte_end":591658,"line_start":50,"line_end":50,"column_start":49,"column_end":54},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":21708},"to":{"krate":2,"index":2919}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/point_simba.rs","byte_start":598932,"byte_end":598937,"line_start":9,"line_end":9,"column_start":55,"column_end":60},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":21708},"to":{"krate":31,"index":852}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":603430,"byte_end":603438,"line_start":65,"line_end":65,"column_start":70,"column_end":78},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":22095},"to":{"krate":2,"index":9035}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":603699,"byte_end":603707,"line_start":75,"line_end":75,"column_start":45,"column_end":53},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":22095},"to":{"krate":2,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":603865,"byte_end":603873,"line_start":82,"line_end":82,"column_start":39,"column_end":47},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":22095},"to":{"krate":2,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":605406,"byte_end":605414,"line_start":144,"line_end":144,"column_start":29,"column_end":37},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":22095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":606551,"byte_end":606559,"line_start":182,"line_end":182,"column_start":29,"column_end":37},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":22095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":611016,"byte_end":611024,"line_start":299,"line_end":299,"column_start":29,"column_end":37},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":22095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":615055,"byte_end":615063,"line_start":407,"line_end":407,"column_start":36,"column_end":44},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":22095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":618899,"byte_end":618907,"line_start":508,"line_end":508,"column_start":41,"column_end":49},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":22095},"to":{"krate":2,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":619015,"byte_end":619023,"line_start":510,"line_end":510,"column_start":55,"column_end":63},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":22095},"to":{"krate":2,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":619214,"byte_end":619222,"line_start":520,"line_end":520,"column_start":35,"column_end":43},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":22095},"to":{"krate":19,"index":15}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":619642,"byte_end":619650,"line_start":539,"line_end":539,"column_start":36,"column_end":44},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":22095},"to":{"krate":19,"index":66}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":620140,"byte_end":620148,"line_start":562,"line_end":562,"column_start":32,"column_end":40},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":22095},"to":{"krate":19,"index":107}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation.rs","byte_start":620568,"byte_end":620576,"line_start":584,"line_end":584,"column_start":38,"column_end":46},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":22095},"to":{"krate":2,"index":8836}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_construction.rs","byte_start":622200,"byte_end":622208,"line_start":12,"line_end":12,"column_start":21,"column_end":29},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":22095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_construction.rs","byte_start":622795,"byte_end":622803,"line_start":34,"line_end":34,"column_start":29,"column_end":37},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":22095},"to":{"krate":20,"index":507}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_conversion.rs","byte_start":623919,"byte_end":623927,"line_start":33,"line_end":33,"column_start":56,"column_end":64},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":22095},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_conversion.rs","byte_start":624548,"byte_end":624557,"line_start":55,"line_end":55,"column_start":47,"column_end":56},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":6090},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_conversion.rs","byte_start":625150,"byte_end":625159,"line_start":78,"line_end":78,"column_start":44,"column_end":53},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":6088},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_conversion.rs","byte_start":625752,"byte_end":625760,"line_start":101,"line_end":101,"column_start":62,"column_end":70},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":22095},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_conversion.rs","byte_start":626418,"byte_end":626426,"line_start":124,"line_end":124,"column_start":64,"column_end":72},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":22095},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_conversion.rs","byte_start":627141,"byte_end":627149,"line_start":147,"line_end":147,"column_start":54,"column_end":62},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":22095},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_conversion.rs","byte_start":628099,"byte_end":628107,"line_start":176,"line_end":176,"column_start":62,"column_end":70},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":22095},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_conversion.rs","byte_start":629713,"byte_end":629720,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":1396},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_conversion.rs","byte_start":629857,"byte_end":629864,"line_start":227,"line_end":227,"column_start":43,"column_end":50},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":1394},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_conversion.rs","byte_start":629997,"byte_end":630004,"line_start":234,"line_end":234,"column_start":43,"column_end":50},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":1398},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_conversion.rs","byte_start":630141,"byte_end":630148,"line_start":241,"line_end":241,"column_start":43,"column_end":50},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":1396},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_conversion.rs","byte_start":630331,"byte_end":630339,"line_start":249,"line_end":249,"column_start":9,"column_end":17},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":22095},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_conversion.rs","byte_start":630820,"byte_end":630828,"line_start":265,"line_end":265,"column_start":9,"column_end":17},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":22095},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_conversion.rs","byte_start":631391,"byte_end":631399,"line_start":283,"line_end":283,"column_start":9,"column_end":17},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":22095},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_conversion.rs","byte_start":632127,"byte_end":632135,"line_start":305,"line_end":305,"column_start":9,"column_end":17},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":22095},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":633240,"byte_end":633249,"line_start":4,"line_end":4,"column_start":24,"column_end":33},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":6088},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_interpolation.rs","byte_start":634007,"byte_end":634016,"line_start":31,"line_end":31,"column_start":24,"column_end":33},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":6090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_ops.rs","byte_start":636581,"byte_end":636589,"line_start":33,"line_end":33,"column_start":55,"column_end":63},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":22095},"to":{"krate":2,"index":3132}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_simba.rs","byte_start":642434,"byte_end":642442,"line_start":9,"line_end":9,"column_start":26,"column_end":34},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":22095},"to":{"krate":31,"index":852}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":644349,"byte_end":644358,"line_start":25,"line_end":25,"column_start":24,"column_end":33},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":6088},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":645396,"byte_end":645405,"line_start":55,"line_end":55,"column_start":24,"column_end":33},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":6088},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":650901,"byte_end":650910,"line_start":208,"line_end":208,"column_start":24,"column_end":33},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":6088},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":652085,"byte_end":652093,"line_start":248,"line_end":248,"column_start":55,"column_end":63},"kind":{"Impl":{"id":396}},"from":{"krate":24,"index":2414},"to":{"krate":24,"index":807}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":652763,"byte_end":652772,"line_start":278,"line_end":278,"column_start":24,"column_end":33},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":6090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":658337,"byte_end":658346,"line_start":423,"line_end":423,"column_start":24,"column_end":33},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":6090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":662374,"byte_end":662383,"line_start":537,"line_end":537,"column_start":24,"column_end":33},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":6090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":669382,"byte_end":669391,"line_start":727,"line_end":727,"column_start":24,"column_end":33},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":6090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/rotation_specialization.rs","byte_start":674879,"byte_end":674887,"line_start":893,"line_end":893,"column_start":55,"column_end":63},"kind":{"Impl":{"id":401}},"from":{"krate":24,"index":2414},"to":{"krate":24,"index":807}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":677538,"byte_end":677548,"line_start":35,"line_end":35,"column_start":36,"column_end":46},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":22351},"to":{"krate":2,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":678753,"byte_end":678763,"line_start":89,"line_end":89,"column_start":24,"column_end":34},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":22351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":684129,"byte_end":684139,"line_start":279,"line_end":279,"column_start":24,"column_end":34},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":22351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":704028,"byte_end":704038,"line_start":892,"line_end":892,"column_start":59,"column_end":69},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":22351},"to":{"krate":19,"index":15}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":704554,"byte_end":704564,"line_start":908,"line_end":908,"column_start":61,"column_end":71},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":22351},"to":{"krate":19,"index":66}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":705155,"byte_end":705165,"line_start":927,"line_end":927,"column_start":53,"column_end":63},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":22351},"to":{"krate":19,"index":107}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":705665,"byte_end":705675,"line_start":941,"line_end":941,"column_start":52,"column_end":62},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":22351},"to":{"krate":2,"index":8836}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":706049,"byte_end":706063,"line_start":954,"line_end":954,"column_start":55,"column_end":69},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":6799},"to":{"krate":2,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":706360,"byte_end":706374,"line_start":963,"line_end":963,"column_start":41,"column_end":55},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":6799},"to":{"krate":2,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":706416,"byte_end":706426,"line_start":965,"line_end":965,"column_start":35,"column_end":45},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":22351},"to":{"krate":0,"index":4847}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":706888,"byte_end":706902,"line_start":989,"line_end":989,"column_start":24,"column_end":38},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":6799},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":726141,"byte_end":726155,"line_start":1547,"line_end":1547,"column_start":32,"column_end":46},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":6799},"to":{"krate":2,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":726273,"byte_end":726287,"line_start":1553,"line_end":1553,"column_start":52,"column_end":66},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":6799},"to":{"krate":2,"index":8836}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":726902,"byte_end":726916,"line_start":1575,"line_end":1575,"column_start":59,"column_end":73},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":6799},"to":{"krate":19,"index":15}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":727255,"byte_end":727269,"line_start":1589,"line_end":1589,"column_start":61,"column_end":75},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":6799},"to":{"krate":19,"index":66}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion.rs","byte_start":727682,"byte_end":727696,"line_start":1607,"line_end":1607,"column_start":53,"column_end":67},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":6799},"to":{"krate":19,"index":107}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":728564,"byte_end":728574,"line_start":22,"line_end":22,"column_start":17,"column_end":27},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":22351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":729566,"byte_end":729576,"line_start":50,"line_end":50,"column_start":24,"column_end":34},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":22351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":731132,"byte_end":731142,"line_start":104,"line_end":104,"column_start":24,"column_end":34},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":22351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":731666,"byte_end":731676,"line_start":122,"line_end":122,"column_start":32,"column_end":42},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":22351},"to":{"krate":20,"index":507}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":731822,"byte_end":731832,"line_start":132,"line_end":132,"column_start":33,"column_end":43},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":22351},"to":{"krate":20,"index":497}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":732096,"byte_end":732104,"line_start":147,"line_end":147,"column_start":56,"column_end":64},"kind":{"Impl":{"id":423}},"from":{"krate":24,"index":2414},"to":{"krate":24,"index":807}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":732674,"byte_end":732688,"line_start":173,"line_end":173,"column_start":24,"column_end":38},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":6799},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":756445,"byte_end":756459,"line_start":794,"line_end":794,"column_start":32,"column_end":46},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":6799},"to":{"krate":20,"index":507}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_construction.rs","byte_start":756632,"byte_end":756640,"line_start":804,"line_end":804,"column_start":60,"column_end":68},"kind":{"Impl":{"id":426}},"from":{"krate":24,"index":2414},"to":{"krate":24,"index":807}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":759271,"byte_end":759281,"line_start":35,"line_end":35,"column_start":43,"column_end":53},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":22351},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":759813,"byte_end":759827,"line_start":58,"line_end":58,"column_start":47,"column_end":61},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":6799},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":760385,"byte_end":760399,"line_start":79,"line_end":79,"column_start":45,"column_end":59},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":6799},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":760983,"byte_end":760997,"line_start":102,"line_end":102,"column_start":51,"column_end":65},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":6799},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":761583,"byte_end":761597,"line_start":124,"line_end":124,"column_start":53,"column_end":67},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":6799},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":762218,"byte_end":762232,"line_start":146,"line_end":146,"column_start":52,"column_end":66},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":6799},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":762836,"byte_end":762850,"line_start":168,"line_end":168,"column_start":79,"column_end":93},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":6799},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":764315,"byte_end":764322,"line_start":221,"line_end":221,"column_start":52,"column_end":59},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":1398},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":764510,"byte_end":764519,"line_start":231,"line_end":231,"column_start":52,"column_end":61},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":6090},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":764706,"byte_end":764720,"line_start":241,"line_end":241,"column_start":47,"column_end":61},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":6799},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":764915,"byte_end":764922,"line_start":251,"line_end":251,"column_start":52,"column_end":59},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":1396},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":765113,"byte_end":765123,"line_start":261,"line_end":261,"column_start":38,"column_end":48},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":22351},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":765251,"byte_end":765261,"line_start":268,"line_end":268,"column_start":34,"column_end":44},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":22351},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":765463,"byte_end":765473,"line_start":277,"line_end":277,"column_start":76,"column_end":86},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":22351},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":765781,"byte_end":765791,"line_start":288,"line_end":288,"column_start":76,"column_end":86},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":22351},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":766188,"byte_end":766198,"line_start":304,"line_end":304,"column_start":76,"column_end":86},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":22351},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":766704,"byte_end":766714,"line_start":324,"line_end":324,"column_start":77,"column_end":87},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":22351},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":767458,"byte_end":767472,"line_start":353,"line_end":353,"column_start":9,"column_end":23},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":6799},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":767836,"byte_end":767850,"line_start":365,"line_end":365,"column_start":9,"column_end":23},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":6799},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":768315,"byte_end":768329,"line_start":382,"line_end":382,"column_start":9,"column_end":23},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":6799},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_conversion.rs","byte_start":768927,"byte_end":768941,"line_start":403,"line_end":403,"column_start":9,"column_end":23},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":6799},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_coordinates.rs","byte_start":769925,"byte_end":769935,"line_start":11,"line_end":11,"column_start":39,"column_end":49},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":22351},"to":{"krate":2,"index":3047}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_coordinates.rs","byte_start":770112,"byte_end":770122,"line_start":20,"line_end":20,"column_start":42,"column_end":52},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":22351},"to":{"krate":2,"index":3060}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_ops.rs","byte_start":771788,"byte_end":771798,"line_start":65,"line_end":65,"column_start":34,"column_end":44},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":22351},"to":{"krate":2,"index":3132}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_ops.rs","byte_start":771958,"byte_end":771968,"line_start":74,"line_end":74,"column_start":37,"column_end":47},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":22351},"to":{"krate":2,"index":3136}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_ops.rs","byte_start":785567,"byte_end":785577,"line_start":541,"line_end":541,"column_start":32,"column_end":42},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":22351},"to":{"krate":2,"index":2919}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_simba.rs","byte_start":789715,"byte_end":789725,"line_start":7,"line_end":7,"column_start":43,"column_end":53},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":22351},"to":{"krate":31,"index":852}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/quaternion_simba.rs","byte_start":790712,"byte_end":790726,"line_start":50,"line_end":50,"column_start":43,"column_end":57},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":6799},"to":{"krate":31,"index":852}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion.rs","byte_start":793027,"byte_end":793041,"line_start":39,"line_end":39,"column_start":24,"column_end":38},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":22712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_construction.rs","byte_start":795241,"byte_end":795255,"line_start":3,"line_end":3,"column_start":24,"column_end":38},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":22712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_ops.rs","byte_start":797047,"byte_end":797061,"line_start":29,"line_end":29,"column_start":42,"column_end":56},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":22712},"to":{"krate":2,"index":2722}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_ops.rs","byte_start":797205,"byte_end":797219,"line_start":36,"line_end":36,"column_start":42,"column_end":56},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":22712},"to":{"krate":2,"index":2725}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_ops.rs","byte_start":797370,"byte_end":797384,"line_start":43,"line_end":43,"column_start":41,"column_end":55},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":22712},"to":{"krate":2,"index":3132}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_ops.rs","byte_start":797553,"byte_end":797567,"line_start":52,"line_end":52,"column_start":44,"column_end":58},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":22712},"to":{"krate":2,"index":3136}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_ops.rs","byte_start":797726,"byte_end":797740,"line_start":59,"line_end":59,"column_start":51,"column_end":65},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":22712},"to":{"krate":2,"index":2902}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_ops.rs","byte_start":798045,"byte_end":798059,"line_start":73,"line_end":73,"column_start":35,"column_end":49},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":22712},"to":{"krate":2,"index":2902}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_ops.rs","byte_start":798309,"byte_end":798323,"line_start":84,"line_end":84,"column_start":51,"column_end":65},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":22712},"to":{"krate":2,"index":2892}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/dual_quaternion_ops.rs","byte_start":798599,"byte_end":798613,"line_start":95,"line_end":95,"column_start":51,"column_end":65},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":22712},"to":{"krate":2,"index":2897}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":800788,"byte_end":800799,"line_start":34,"line_end":34,"column_start":43,"column_end":54},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":7525},"to":{"krate":2,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":800923,"byte_end":800934,"line_start":41,"line_end":41,"column_start":29,"column_end":40},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":7525},"to":{"krate":2,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":800976,"byte_end":800983,"line_start":43,"line_end":43,"column_start":35,"column_end":42},"kind":{"Impl":{"id":509}},"from":{"krate":32,"index":523},"to":{"krate":0,"index":4847}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":801752,"byte_end":801763,"line_start":74,"line_end":74,"column_start":24,"column_end":35},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":7525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":804261,"byte_end":804272,"line_start":167,"line_end":167,"column_start":24,"column_end":35},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":7525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":806550,"byte_end":806561,"line_start":242,"line_end":242,"column_start":24,"column_end":35},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":7525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":807891,"byte_end":807902,"line_start":283,"line_end":283,"column_start":24,"column_end":35},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":7525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":811220,"byte_end":811231,"line_start":375,"line_end":375,"column_start":24,"column_end":35},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":7525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":811989,"byte_end":812000,"line_start":400,"line_end":400,"column_start":52,"column_end":63},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":7525},"to":{"krate":2,"index":8836}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":812164,"byte_end":812175,"line_start":406,"line_end":406,"column_start":34,"column_end":45},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":7525},"to":{"krate":19,"index":15}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":812520,"byte_end":812531,"line_start":420,"line_end":420,"column_start":35,"column_end":46},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":7525},"to":{"krate":19,"index":66}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex.rs","byte_start":812967,"byte_end":812978,"line_start":438,"line_end":438,"column_start":31,"column_end":42},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":7525},"to":{"krate":19,"index":107}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":813742,"byte_end":813753,"line_start":17,"line_end":17,"column_start":24,"column_end":35},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":7525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":814297,"byte_end":814308,"line_start":39,"line_end":39,"column_start":24,"column_end":35},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":7525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":816769,"byte_end":816780,"line_start":113,"line_end":113,"column_start":24,"column_end":35},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":7525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":821205,"byte_end":821216,"line_start":239,"line_end":239,"column_start":24,"column_end":35},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":7525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":825154,"byte_end":825165,"line_start":358,"line_end":358,"column_start":32,"column_end":43},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":7525},"to":{"krate":20,"index":507}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_construction.rs","byte_start":825335,"byte_end":825343,"line_start":368,"line_end":368,"column_start":57,"column_end":65},"kind":{"Impl":{"id":524}},"from":{"krate":24,"index":2414},"to":{"krate":24,"index":807}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_conversion.rs","byte_start":826712,"byte_end":826723,"line_start":29,"line_end":29,"column_start":44,"column_end":55},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":7525},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_conversion.rs","byte_start":827255,"byte_end":827266,"line_start":50,"line_end":50,"column_start":42,"column_end":53},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":7525},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_conversion.rs","byte_start":827858,"byte_end":827869,"line_start":73,"line_end":73,"column_start":51,"column_end":62},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":7525},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_conversion.rs","byte_start":828455,"byte_end":828466,"line_start":95,"line_end":95,"column_start":53,"column_end":64},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":7525},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_conversion.rs","byte_start":829087,"byte_end":829098,"line_start":117,"line_end":117,"column_start":52,"column_end":63},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":7525},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_conversion.rs","byte_start":829702,"byte_end":829713,"line_start":139,"line_end":139,"column_start":79,"column_end":90},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":7525},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_conversion.rs","byte_start":830185,"byte_end":830194,"line_start":157,"line_end":157,"column_start":49,"column_end":58},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":6088},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_conversion.rs","byte_start":830378,"byte_end":830389,"line_start":167,"line_end":167,"column_start":47,"column_end":58},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":7525},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_conversion.rs","byte_start":830581,"byte_end":830588,"line_start":177,"line_end":177,"column_start":49,"column_end":56},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":1396},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_conversion.rs","byte_start":830776,"byte_end":830783,"line_start":187,"line_end":187,"column_start":49,"column_end":56},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":1394},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_conversion.rs","byte_start":831017,"byte_end":831028,"line_start":197,"line_end":197,"column_start":84,"column_end":95},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":7525},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_conversion.rs","byte_start":831439,"byte_end":831450,"line_start":211,"line_end":211,"column_start":84,"column_end":95},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":7525},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_conversion.rs","byte_start":831905,"byte_end":831916,"line_start":225,"line_end":225,"column_start":84,"column_end":95},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":7525},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_conversion.rs","byte_start":832554,"byte_end":832565,"line_start":245,"line_end":245,"column_start":85,"column_end":96},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":7525},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_ops.rs","byte_start":834485,"byte_end":834496,"line_start":45,"line_end":45,"column_start":38,"column_end":49},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":7525},"to":{"krate":2,"index":2902}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_ops.rs","byte_start":834995,"byte_end":835006,"line_start":66,"line_end":66,"column_start":56,"column_end":67},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":7525},"to":{"krate":2,"index":2902}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_ops.rs","byte_start":835580,"byte_end":835591,"line_start":91,"line_end":91,"column_start":38,"column_end":49},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":7525},"to":{"krate":2,"index":2907}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_ops.rs","byte_start":836265,"byte_end":836276,"line_start":117,"line_end":117,"column_start":56,"column_end":67},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":7525},"to":{"krate":2,"index":2907}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_ops.rs","byte_start":843246,"byte_end":843257,"line_start":327,"line_end":327,"column_start":54,"column_end":65},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":7525},"to":{"krate":2,"index":2931}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_ops.rs","byte_start":843465,"byte_end":843476,"line_start":337,"line_end":337,"column_start":62,"column_end":73},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":7525},"to":{"krate":2,"index":2931}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_ops.rs","byte_start":843710,"byte_end":843721,"line_start":348,"line_end":348,"column_start":54,"column_end":65},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":7525},"to":{"krate":2,"index":2935}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_ops.rs","byte_start":843929,"byte_end":843940,"line_start":358,"line_end":358,"column_start":62,"column_end":73},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":7525},"to":{"krate":2,"index":2935}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_ops.rs","byte_start":844173,"byte_end":844184,"line_start":369,"line_end":369,"column_start":55,"column_end":66},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":7525},"to":{"krate":2,"index":2931}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_ops.rs","byte_start":844438,"byte_end":844449,"line_start":380,"line_end":380,"column_start":63,"column_end":74},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":7525},"to":{"krate":2,"index":2931}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_ops.rs","byte_start":844727,"byte_end":844738,"line_start":392,"line_end":392,"column_start":55,"column_end":66},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":7525},"to":{"krate":2,"index":2935}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_ops.rs","byte_start":844992,"byte_end":845003,"line_start":403,"line_end":403,"column_start":63,"column_end":74},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":7525},"to":{"krate":2,"index":2935}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_ops.rs","byte_start":845280,"byte_end":845288,"line_start":415,"line_end":415,"column_start":54,"column_end":62},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":22095},"to":{"krate":2,"index":2931}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_ops.rs","byte_start":845565,"byte_end":845573,"line_start":426,"line_end":426,"column_start":62,"column_end":70},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":22095},"to":{"krate":2,"index":2931}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_ops.rs","byte_start":845874,"byte_end":845882,"line_start":438,"line_end":438,"column_start":54,"column_end":62},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":22095},"to":{"krate":2,"index":2935}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_ops.rs","byte_start":846159,"byte_end":846167,"line_start":449,"line_end":449,"column_start":62,"column_end":70},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":22095},"to":{"krate":2,"index":2935}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/unit_complex_simba.rs","byte_start":846584,"byte_end":846595,"line_start":9,"line_end":9,"column_start":38,"column_end":49},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":7525},"to":{"krate":31,"index":852}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":848674,"byte_end":848685,"line_start":35,"line_end":35,"column_start":70,"column_end":81},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":22966},"to":{"krate":2,"index":9035}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":848906,"byte_end":848917,"line_start":45,"line_end":45,"column_start":45,"column_end":56},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":22966},"to":{"krate":2,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":849035,"byte_end":849046,"line_start":52,"line_end":52,"column_start":39,"column_end":50},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":22966},"to":{"krate":2,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":850513,"byte_end":850524,"line_start":114,"line_end":114,"column_start":29,"column_end":40},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":22966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":853565,"byte_end":853576,"line_start":207,"line_end":207,"column_start":41,"column_end":52},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":22966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":854174,"byte_end":854185,"line_start":227,"line_end":227,"column_start":41,"column_end":52},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":22966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":854766,"byte_end":854777,"line_start":245,"line_end":245,"column_start":41,"column_end":52},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":22966},"to":{"krate":2,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":854882,"byte_end":854893,"line_start":247,"line_end":247,"column_start":55,"column_end":66},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":22966},"to":{"krate":2,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":855114,"byte_end":855125,"line_start":257,"line_end":257,"column_start":55,"column_end":66},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":22966},"to":{"krate":19,"index":15}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":855536,"byte_end":855547,"line_start":275,"line_end":275,"column_start":57,"column_end":68},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":22966},"to":{"krate":19,"index":66}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":856023,"byte_end":856034,"line_start":297,"line_end":297,"column_start":49,"column_end":60},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":22966},"to":{"krate":19,"index":107}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation.rs","byte_start":856450,"byte_end":856461,"line_start":318,"line_end":318,"column_start":61,"column_end":72},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":22966},"to":{"krate":2,"index":8836}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_construction.rs","byte_start":857828,"byte_end":857839,"line_start":18,"line_end":18,"column_start":36,"column_end":47},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":22966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_construction.rs","byte_start":858512,"byte_end":858523,"line_start":42,"line_end":42,"column_start":56,"column_end":67},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":22966},"to":{"krate":20,"index":507}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_construction.rs","byte_start":858712,"byte_end":858720,"line_start":52,"line_end":52,"column_start":65,"column_end":73},"kind":{"Impl":{"id":592}},"from":{"krate":24,"index":2414},"to":{"krate":24,"index":807}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_conversion.rs","byte_start":861796,"byte_end":861807,"line_start":25,"line_end":25,"column_start":59,"column_end":70},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":22966},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_conversion.rs","byte_start":862433,"byte_end":862444,"line_start":49,"line_end":49,"column_start":62,"column_end":73},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":22966},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_conversion.rs","byte_start":863065,"byte_end":863076,"line_start":72,"line_end":72,"column_start":64,"column_end":75},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":22966},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_conversion.rs","byte_start":863754,"byte_end":863765,"line_start":95,"line_end":95,"column_start":54,"column_end":65},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":22966},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_conversion.rs","byte_start":864566,"byte_end":864577,"line_start":122,"line_end":122,"column_start":62,"column_end":73},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":22966},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_conversion.rs","byte_start":865709,"byte_end":865716,"line_start":158,"line_end":158,"column_start":70,"column_end":77},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":1363},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_conversion.rs","byte_start":866008,"byte_end":866019,"line_start":169,"line_end":169,"column_start":53,"column_end":64},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":22966},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_conversion.rs","byte_start":866267,"byte_end":866278,"line_start":180,"line_end":180,"column_start":9,"column_end":20},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":22966},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_conversion.rs","byte_start":866736,"byte_end":866747,"line_start":196,"line_end":196,"column_start":9,"column_end":20},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":22966},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_conversion.rs","byte_start":867275,"byte_end":867286,"line_start":214,"line_end":214,"column_start":9,"column_end":20},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":22966},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_conversion.rs","byte_start":867955,"byte_end":867966,"line_start":236,"line_end":236,"column_start":9,"column_end":20},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":22966},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/translation_simba.rs","byte_start":875077,"byte_end":875088,"line_start":10,"line_end":10,"column_start":55,"column_end":66},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":22966},"to":{"krate":31,"index":852}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":880906,"byte_end":880914,"line_start":107,"line_end":107,"column_start":9,"column_end":17},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":23124},"to":{"krate":2,"index":9035}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":881195,"byte_end":881203,"line_start":118,"line_end":118,"column_start":61,"column_end":69},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":23124},"to":{"krate":2,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":881334,"byte_end":881342,"line_start":125,"line_end":125,"column_start":49,"column_end":57},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":23124},"to":{"krate":2,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":881673,"byte_end":881681,"line_start":138,"line_end":138,"column_start":56,"column_end":64},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":23124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":882604,"byte_end":882612,"line_start":166,"line_end":166,"column_start":63,"column_end":71},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":23124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":887949,"byte_end":887957,"line_start":321,"line_end":321,"column_start":63,"column_end":71},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":23124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":893115,"byte_end":893123,"line_start":446,"line_end":446,"column_start":39,"column_end":47},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":23124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":895330,"byte_end":895338,"line_start":509,"line_end":509,"column_start":46,"column_end":54},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":23124},"to":{"krate":2,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":895486,"byte_end":895494,"line_start":516,"line_end":516,"column_start":53,"column_end":61},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":23124},"to":{"krate":2,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":895787,"byte_end":895795,"line_start":527,"line_end":527,"column_start":49,"column_end":57},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":23124},"to":{"krate":19,"index":15}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":896344,"byte_end":896352,"line_start":547,"line_end":547,"column_start":50,"column_end":58},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":23124},"to":{"krate":19,"index":66}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":897019,"byte_end":897027,"line_start":573,"line_end":573,"column_start":46,"column_end":54},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":23124},"to":{"krate":19,"index":107}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry.rs","byte_start":897610,"byte_end":897618,"line_start":597,"line_end":597,"column_start":67,"column_end":75},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":23124},"to":{"krate":2,"index":8836}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":900544,"byte_end":900552,"line_start":23,"line_end":23,"column_start":63,"column_end":71},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":23124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":902103,"byte_end":902111,"line_start":71,"line_end":71,"column_start":71,"column_end":79},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":23124},"to":{"krate":20,"index":507}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":902381,"byte_end":902389,"line_start":83,"line_end":83,"column_start":71,"column_end":79},"kind":{"Impl":{"id":630}},"from":{"krate":24,"index":2414},"to":{"krate":24,"index":807}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":903243,"byte_end":903258,"line_start":117,"line_end":117,"column_start":24,"column_end":39},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":8709},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":904333,"byte_end":904342,"line_start":155,"line_end":155,"column_start":24,"column_end":33},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":8705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":914027,"byte_end":914036,"line_start":382,"line_end":382,"column_start":24,"column_end":33},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":8707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":914163,"byte_end":914178,"line_start":389,"line_end":389,"column_start":24,"column_end":39},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":8711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":914359,"byte_end":914368,"line_start":397,"line_end":397,"column_start":24,"column_end":33},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":8707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_construction.rs","byte_start":914497,"byte_end":914512,"line_start":404,"line_end":404,"column_start":24,"column_end":39},"kind":{"Impl":{"id":636}},"from":{"krate":0,"index":8711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_conversion.rs","byte_start":915311,"byte_end":915319,"line_start":22,"line_end":22,"column_start":68,"column_end":76},"kind":{"Impl":{"id":637}},"from":{"krate":0,"index":23124},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_conversion.rs","byte_start":916207,"byte_end":916215,"line_start":50,"line_end":50,"column_start":70,"column_end":78},"kind":{"Impl":{"id":638}},"from":{"krate":0,"index":23124},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_conversion.rs","byte_start":916951,"byte_end":916959,"line_start":74,"line_end":74,"column_start":57,"column_end":65},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":23124},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_conversion.rs","byte_start":918123,"byte_end":918131,"line_start":108,"line_end":108,"column_start":65,"column_end":73},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":23124},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_conversion.rs","byte_start":919864,"byte_end":919872,"line_start":155,"line_end":155,"column_start":9,"column_end":17},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":23124},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_conversion.rs","byte_start":920109,"byte_end":920116,"line_start":165,"line_end":165,"column_start":67,"column_end":74},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":1363},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_conversion.rs","byte_start":920515,"byte_end":920523,"line_start":178,"line_end":178,"column_start":9,"column_end":17},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":23124},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_conversion.rs","byte_start":921238,"byte_end":921246,"line_start":197,"line_end":197,"column_start":9,"column_end":17},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":23124},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_conversion.rs","byte_start":922169,"byte_end":922177,"line_start":226,"line_end":226,"column_start":9,"column_end":17},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":23124},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_conversion.rs","byte_start":923377,"byte_end":923385,"line_start":263,"line_end":263,"column_start":9,"column_end":17},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":23124},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":925183,"byte_end":925192,"line_start":4,"line_end":4,"column_start":24,"column_end":33},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":8707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":928031,"byte_end":928046,"line_start":72,"line_end":72,"column_start":24,"column_end":39},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":8711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":930891,"byte_end":930900,"line_start":140,"line_end":140,"column_start":24,"column_end":33},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":8705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_interpolation.rs","byte_start":932290,"byte_end":932305,"line_start":176,"line_end":176,"column_start":24,"column_end":39},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":8709},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/isometry_simba.rs","byte_start":954441,"byte_end":954449,"line_start":10,"line_end":10,"column_start":53,"column_end":61},"kind":{"Impl":{"id":711}},"from":{"krate":0,"index":23124},"to":{"krate":31,"index":852}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":958203,"byte_end":958213,"line_start":71,"line_end":71,"column_start":9,"column_end":19},"kind":{"Impl":{"id":712}},"from":{"krate":0,"index":23728},"to":{"krate":2,"index":9035}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":958526,"byte_end":958536,"line_start":83,"line_end":83,"column_start":9,"column_end":19},"kind":{"Impl":{"id":713}},"from":{"krate":0,"index":23728},"to":{"krate":2,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":958699,"byte_end":958709,"line_start":90,"line_end":90,"column_start":81,"column_end":91},"kind":{"Impl":{"id":714}},"from":{"krate":0,"index":23728},"to":{"krate":2,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":958936,"byte_end":958946,"line_start":100,"line_end":100,"column_start":39,"column_end":49},"kind":{"Impl":{"id":715}},"from":{"krate":0,"index":23728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":959911,"byte_end":959921,"line_start":131,"line_end":131,"column_start":32,"column_end":42},"kind":{"Impl":{"id":716}},"from":{"krate":0,"index":23728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":960171,"byte_end":960181,"line_start":142,"line_end":142,"column_start":39,"column_end":49},"kind":{"Impl":{"id":717}},"from":{"krate":0,"index":23728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":967324,"byte_end":967334,"line_start":334,"line_end":334,"column_start":39,"column_end":49},"kind":{"Impl":{"id":718}},"from":{"krate":0,"index":23728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":967959,"byte_end":967969,"line_start":356,"line_end":356,"column_start":46,"column_end":56},"kind":{"Impl":{"id":719}},"from":{"krate":0,"index":23728},"to":{"krate":2,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":968117,"byte_end":968127,"line_start":363,"line_end":363,"column_start":53,"column_end":63},"kind":{"Impl":{"id":720}},"from":{"krate":0,"index":23728},"to":{"krate":2,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":968412,"byte_end":968422,"line_start":374,"line_end":374,"column_start":49,"column_end":59},"kind":{"Impl":{"id":721}},"from":{"krate":0,"index":23728},"to":{"krate":19,"index":15}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":968963,"byte_end":968973,"line_start":394,"line_end":394,"column_start":50,"column_end":60},"kind":{"Impl":{"id":722}},"from":{"krate":0,"index":23728},"to":{"krate":19,"index":66}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":969632,"byte_end":969642,"line_start":420,"line_end":420,"column_start":46,"column_end":56},"kind":{"Impl":{"id":723}},"from":{"krate":0,"index":23728},"to":{"krate":19,"index":107}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity.rs","byte_start":970178,"byte_end":970188,"line_start":443,"line_end":443,"column_start":41,"column_end":51},"kind":{"Impl":{"id":724}},"from":{"krate":0,"index":23728},"to":{"krate":2,"index":8836}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":971861,"byte_end":971871,"line_start":22,"line_end":22,"column_start":39,"column_end":49},"kind":{"Impl":{"id":725}},"from":{"krate":0,"index":23728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":972575,"byte_end":972585,"line_start":49,"line_end":49,"column_start":47,"column_end":57},"kind":{"Impl":{"id":726}},"from":{"krate":0,"index":23728},"to":{"krate":20,"index":507}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":972890,"byte_end":972898,"line_start":62,"line_end":62,"column_start":73,"column_end":81},"kind":{"Impl":{"id":727}},"from":{"krate":24,"index":2414},"to":{"krate":24,"index":807}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":973326,"byte_end":973336,"line_start":79,"line_end":79,"column_start":39,"column_end":49},"kind":{"Impl":{"id":728}},"from":{"krate":0,"index":23728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":974919,"byte_end":974929,"line_start":134,"line_end":134,"column_start":24,"column_end":34},"kind":{"Impl":{"id":729}},"from":{"krate":0,"index":23728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_construction.rs","byte_start":975732,"byte_end":975742,"line_start":160,"line_end":160,"column_start":24,"column_end":34},"kind":{"Impl":{"id":730}},"from":{"krate":0,"index":23728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_conversion.rs","byte_start":985646,"byte_end":985656,"line_start":23,"line_end":23,"column_start":70,"column_end":80},"kind":{"Impl":{"id":731}},"from":{"krate":0,"index":23728},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_conversion.rs","byte_start":986557,"byte_end":986567,"line_start":51,"line_end":51,"column_start":57,"column_end":67},"kind":{"Impl":{"id":732}},"from":{"krate":0,"index":23728},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_conversion.rs","byte_start":987721,"byte_end":987731,"line_start":85,"line_end":85,"column_start":65,"column_end":75},"kind":{"Impl":{"id":733}},"from":{"krate":0,"index":23728},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_conversion.rs","byte_start":991156,"byte_end":991163,"line_start":174,"line_end":174,"column_start":69,"column_end":76},"kind":{"Impl":{"id":734}},"from":{"krate":0,"index":1363},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_conversion.rs","byte_start":991573,"byte_end":991583,"line_start":187,"line_end":187,"column_start":58,"column_end":68},"kind":{"Impl":{"id":735}},"from":{"krate":0,"index":23728},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_conversion.rs","byte_start":992323,"byte_end":992333,"line_start":206,"line_end":206,"column_start":58,"column_end":68},"kind":{"Impl":{"id":736}},"from":{"krate":0,"index":23728},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_conversion.rs","byte_start":993277,"byte_end":993287,"line_start":235,"line_end":235,"column_start":58,"column_end":68},"kind":{"Impl":{"id":737}},"from":{"krate":0,"index":23728},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_conversion.rs","byte_start":994500,"byte_end":994510,"line_start":272,"line_end":272,"column_start":59,"column_end":69},"kind":{"Impl":{"id":738}},"from":{"krate":0,"index":23728},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/similarity_simba.rs","byte_start":1017861,"byte_end":1017871,"line_start":9,"line_end":9,"column_start":53,"column_end":63},"kind":{"Impl":{"id":801}},"from":{"krate":0,"index":23728},"to":{"krate":31,"index":852}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/swizzle.rs","byte_start":1020276,"byte_end":1020281,"line_start":22,"line_end":22,"column_start":29,"column_end":34},"kind":{"Impl":{"id":802}},"from":{"krate":0,"index":21708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1022594,"byte_end":1022597,"line_start":21,"line_end":21,"column_start":22,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":3503},"to":{"krate":0,"index":9819}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1022600,"byte_end":1022605,"line_start":21,"line_end":21,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":8829},"to":{"krate":0,"index":9819}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1022608,"byte_end":1022612,"line_start":21,"line_end":21,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2835},"to":{"krate":0,"index":9819}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1022615,"byte_end":1022624,"line_start":21,"line_end":21,"column_start":43,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":2480},"to":{"krate":0,"index":9819}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1022627,"byte_end":1022631,"line_start":21,"line_end":21,"column_start":55,"column_end":59},"kind":"SuperTrait","from":{"krate":2,"index":2825},"to":{"krate":0,"index":9819}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1023321,"byte_end":1023330,"line_start":39,"line_end":39,"column_start":43,"column_end":52},"kind":"SuperTrait","from":{"krate":0,"index":9819},"to":{"krate":0,"index":9824}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1023713,"byte_end":1023722,"line_start":47,"line_end":47,"column_start":47,"column_end":56},"kind":"SuperTrait","from":{"krate":0,"index":9819},"to":{"krate":0,"index":9827}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1023914,"byte_end":1023923,"line_start":52,"line_end":52,"column_start":45,"column_end":54},"kind":"SuperTrait","from":{"krate":0,"index":9819},"to":{"krate":0,"index":9829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1023963,"byte_end":1023965,"line_start":53,"line_end":53,"column_start":37,"column_end":39},"kind":{"Impl":{"id":803}},"from":{"krate":0,"index":9832},"to":{"krate":0,"index":9829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1024508,"byte_end":1024516,"line_start":72,"line_end":72,"column_start":20,"column_end":28},"kind":{"Impl":{"id":804}},"from":{"krate":0,"index":24386},"to":{"krate":0,"index":9819}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1024751,"byte_end":1024762,"line_start":83,"line_end":83,"column_start":20,"column_end":31},"kind":{"Impl":{"id":805}},"from":{"krate":0,"index":24401},"to":{"krate":0,"index":9819}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1025014,"byte_end":1025021,"line_start":94,"line_end":94,"column_start":20,"column_end":27},"kind":{"Impl":{"id":806}},"from":{"krate":0,"index":24416},"to":{"krate":0,"index":9819}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1025732,"byte_end":1025733,"line_start":122,"line_end":122,"column_start":40,"column_end":41},"kind":{"Impl":{"id":807}},"from":{"krate":0,"index":9850},"to":{"krate":0,"index":9824}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1026350,"byte_end":1026351,"line_start":146,"line_end":146,"column_start":44,"column_end":45},"kind":{"Impl":{"id":808}},"from":{"krate":0,"index":9854},"to":{"krate":0,"index":9827}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1027361,"byte_end":1027370,"line_start":177,"line_end":177,"column_start":69,"column_end":78},"kind":{"Impl":{"id":809}},"from":{"krate":0,"index":24446},"to":{"krate":2,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1027585,"byte_end":1027594,"line_start":184,"line_end":184,"column_start":63,"column_end":72},"kind":{"Impl":{"id":810}},"from":{"krate":0,"index":24446},"to":{"krate":2,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1028835,"byte_end":1028844,"line_start":224,"line_end":224,"column_start":65,"column_end":74},"kind":{"Impl":{"id":811}},"from":{"krate":0,"index":24446},"to":{"krate":2,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1029004,"byte_end":1029013,"line_start":229,"line_end":229,"column_start":67,"column_end":76},"kind":{"Impl":{"id":812}},"from":{"krate":0,"index":24446},"to":{"krate":2,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1029257,"byte_end":1029266,"line_start":239,"line_end":239,"column_start":53,"column_end":62},"kind":{"Impl":{"id":813}},"from":{"krate":0,"index":24446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1037483,"byte_end":1037492,"line_start":473,"line_end":473,"column_start":31,"column_end":40},"kind":{"Impl":{"id":814}},"from":{"krate":0,"index":24446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1038310,"byte_end":1038319,"line_start":500,"line_end":500,"column_start":53,"column_end":62},"kind":{"Impl":{"id":815}},"from":{"krate":0,"index":24446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1039199,"byte_end":1039208,"line_start":525,"line_end":525,"column_start":39,"column_end":48},"kind":{"Impl":{"id":816}},"from":{"krate":0,"index":24446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1039650,"byte_end":1039659,"line_start":537,"line_end":537,"column_start":67,"column_end":76},"kind":{"Impl":{"id":817}},"from":{"krate":0,"index":24446},"to":{"krate":19,"index":15}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1040119,"byte_end":1040128,"line_start":555,"line_end":555,"column_start":68,"column_end":77},"kind":{"Impl":{"id":818}},"from":{"krate":0,"index":24446},"to":{"krate":19,"index":66}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform.rs","byte_start":1040657,"byte_end":1040666,"line_start":577,"line_end":577,"column_start":64,"column_end":73},"kind":{"Impl":{"id":819}},"from":{"krate":0,"index":24446},"to":{"krate":19,"index":107}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_construction.rs","byte_start":1042509,"byte_end":1042518,"line_start":11,"line_end":11,"column_start":53,"column_end":62},"kind":{"Impl":{"id":820}},"from":{"krate":0,"index":24446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_construction.rs","byte_start":1043622,"byte_end":1043631,"line_start":49,"line_end":49,"column_start":61,"column_end":70},"kind":{"Impl":{"id":821}},"from":{"krate":0,"index":24446},"to":{"krate":20,"index":507}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_conversion.rs","byte_start":1044164,"byte_end":1044173,"line_start":9,"line_end":9,"column_start":69,"column_end":78},"kind":{"Impl":{"id":822}},"from":{"krate":0,"index":24446},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_conversion.rs","byte_start":1044998,"byte_end":1045007,"line_start":37,"line_end":37,"column_start":74,"column_end":83},"kind":{"Impl":{"id":823}},"from":{"krate":0,"index":24446},"to":{"krate":31,"index":264}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_conversion.rs","byte_start":1045784,"byte_end":1045791,"line_start":64,"line_end":64,"column_start":64,"column_end":71},"kind":{"Impl":{"id":824}},"from":{"krate":0,"index":1363},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_ops.rs","byte_start":1048083,"byte_end":1048092,"line_start":82,"line_end":82,"column_start":63,"column_end":72},"kind":{"Impl":{"id":825}},"from":{"krate":0,"index":24446},"to":{"krate":2,"index":3132}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_ops.rs","byte_start":1048448,"byte_end":1048457,"line_start":96,"line_end":96,"column_start":52,"column_end":61},"kind":{"Impl":{"id":826}},"from":{"krate":0,"index":24446},"to":{"krate":2,"index":3136}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/transform_simba.rs","byte_start":1071546,"byte_end":1071555,"line_start":10,"line_end":10,"column_start":56,"column_end":65},"kind":{"Impl":{"id":887}},"from":{"krate":0,"index":24446},"to":{"krate":31,"index":852}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/reflection.rs","byte_start":1073387,"byte_end":1073397,"line_start":16,"line_end":16,"column_start":49,"column_end":59},"kind":{"Impl":{"id":888}},"from":{"krate":0,"index":10299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1077739,"byte_end":1077752,"line_start":24,"line_end":24,"column_start":29,"column_end":42},"kind":{"Impl":{"id":889}},"from":{"krate":0,"index":10376},"to":{"krate":2,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1077789,"byte_end":1077802,"line_start":26,"line_end":26,"column_start":30,"column_end":43},"kind":{"Impl":{"id":890}},"from":{"krate":0,"index":10376},"to":{"krate":2,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1077944,"byte_end":1077957,"line_start":33,"line_end":33,"column_start":35,"column_end":48},"kind":{"Impl":{"id":891}},"from":{"krate":0,"index":10376},"to":{"krate":2,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1078102,"byte_end":1078115,"line_start":39,"line_end":39,"column_start":34,"column_end":47},"kind":{"Impl":{"id":892}},"from":{"krate":0,"index":10376},"to":{"krate":2,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1078854,"byte_end":1078867,"line_start":68,"line_end":68,"column_start":20,"column_end":33},"kind":{"Impl":{"id":893}},"from":{"krate":0,"index":10376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1102924,"byte_end":1102932,"line_start":687,"line_end":687,"column_start":55,"column_end":63},"kind":{"Impl":{"id":894}},"from":{"krate":24,"index":2414},"to":{"krate":24,"index":807}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/orthographic.rs","byte_start":1103985,"byte_end":1103992,"line_start":720,"line_end":720,"column_start":47,"column_end":54},"kind":{"Impl":{"id":895}},"from":{"krate":0,"index":1398},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1104734,"byte_end":1104746,"line_start":25,"line_end":25,"column_start":29,"column_end":41},"kind":{"Impl":{"id":896}},"from":{"krate":0,"index":10480},"to":{"krate":2,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1104783,"byte_end":1104795,"line_start":27,"line_end":27,"column_start":30,"column_end":42},"kind":{"Impl":{"id":897}},"from":{"krate":0,"index":10480},"to":{"krate":2,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1104937,"byte_end":1104949,"line_start":34,"line_end":34,"column_start":35,"column_end":47},"kind":{"Impl":{"id":898}},"from":{"krate":0,"index":10480},"to":{"krate":2,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1105094,"byte_end":1105106,"line_start":40,"line_end":40,"column_start":34,"column_end":46},"kind":{"Impl":{"id":899}},"from":{"krate":0,"index":10480},"to":{"krate":2,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1105843,"byte_end":1105855,"line_start":69,"line_end":69,"column_start":20,"column_end":32},"kind":{"Impl":{"id":900}},"from":{"krate":0,"index":10480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1112495,"byte_end":1112503,"line_start":271,"line_end":271,"column_start":54,"column_end":62},"kind":{"Impl":{"id":901}},"from":{"krate":24,"index":2414},"to":{"krate":24,"index":807}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/geometry/perspective.rs","byte_start":1113296,"byte_end":1113303,"line_start":295,"line_end":295,"column_start":46,"column_end":53},"kind":{"Impl":{"id":902}},"from":{"krate":0,"index":1398},"to":{"krate":2,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/bidiagonal.rs","byte_start":1119097,"byte_end":1119107,"line_start":53,"line_end":53,"column_start":54,"column_end":64},"kind":{"Impl":{"id":903}},"from":{"krate":0,"index":25139},"to":{"krate":2,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/bidiagonal.rs","byte_start":1119465,"byte_end":1119475,"line_start":65,"line_end":65,"column_start":45,"column_end":55},"kind":{"Impl":{"id":904}},"from":{"krate":0,"index":25139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1131025,"byte_end":1131033,"line_start":34,"line_end":34,"column_start":44,"column_end":52},"kind":{"Impl":{"id":905}},"from":{"krate":0,"index":25157},"to":{"krate":2,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1131152,"byte_end":1131160,"line_start":41,"line_end":41,"column_start":35,"column_end":43},"kind":{"Impl":{"id":906}},"from":{"krate":0,"index":25157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/cholesky.rs","byte_start":1134798,"byte_end":1134806,"line_start":143,"line_end":143,"column_start":31,"column_end":39},"kind":{"Impl":{"id":907}},"from":{"krate":0,"index":25157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/convolution.rs","byte_start":1144171,"byte_end":1144177,"line_start":9,"line_end":9,"column_start":49,"column_end":55},"kind":{"Impl":{"id":908}},"from":{"krate":0,"index":3767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/determinant.rs","byte_start":1148311,"byte_end":1148323,"line_start":10,"line_end":10,"column_start":70,"column_end":82},"kind":{"Impl":{"id":909}},"from":{"krate":0,"index":3763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1151473,"byte_end":1151479,"line_start":19,"line_end":19,"column_start":60,"column_end":66},"kind":{"Impl":{"id":910}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/decomposition.rs","byte_start":1156062,"byte_end":1156068,"line_start":127,"line_end":127,"column_start":52,"column_end":58},"kind":{"Impl":{"id":911}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/exp.rs","byte_start":1161169,"byte_end":1161183,"line_start":43,"line_end":43,"column_start":12,"column_end":26},"kind":{"Impl":{"id":912}},"from":{"krate":0,"index":10984},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/exp.rs","byte_start":1172306,"byte_end":1172313,"line_start":428,"line_end":428,"column_start":26,"column_end":33},"kind":{"Impl":{"id":913}},"from":{"krate":0,"index":1363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1176030,"byte_end":1176039,"line_start":40,"line_end":40,"column_start":54,"column_end":63},"kind":{"Impl":{"id":914}},"from":{"krate":0,"index":25169},"to":{"krate":2,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1176270,"byte_end":1176279,"line_start":48,"line_end":48,"column_start":45,"column_end":54},"kind":{"Impl":{"id":915}},"from":{"krate":0,"index":25169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/full_piv_lu.rs","byte_start":1179615,"byte_end":1179624,"line_start":155,"line_end":155,"column_start":49,"column_end":58},"kind":{"Impl":{"id":916}},"from":{"krate":0,"index":25169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/givens.rs","byte_start":1183273,"byte_end":1183287,"line_start":19,"line_end":19,"column_start":23,"column_end":37},"kind":{"Impl":{"id":917}},"from":{"krate":0,"index":25186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/hessenberg.rs","byte_start":1189249,"byte_end":1189259,"line_start":37,"line_end":37,"column_start":47,"column_end":57},"kind":{"Impl":{"id":918}},"from":{"krate":0,"index":25198},"to":{"krate":2,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/hessenberg.rs","byte_start":1189450,"byte_end":1189460,"line_start":45,"line_end":45,"column_start":38,"column_end":48},"kind":{"Impl":{"id":919}},"from":{"krate":0,"index":25198},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/inverse.rs","byte_start":1197382,"byte_end":1197394,"line_start":10,"line_end":10,"column_start":52,"column_end":64},"kind":{"Impl":{"id":920}},"from":{"krate":0,"index":3763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/inverse.rs","byte_start":1197837,"byte_end":1197849,"line_start":27,"line_end":27,"column_start":55,"column_end":67},"kind":{"Impl":{"id":921}},"from":{"krate":0,"index":3763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1206558,"byte_end":1206560,"line_start":39,"line_end":39,"column_start":54,"column_end":56},"kind":{"Impl":{"id":922}},"from":{"krate":0,"index":25211},"to":{"krate":2,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1207899,"byte_end":1207901,"line_start":87,"line_end":87,"column_start":45,"column_end":47},"kind":{"Impl":{"id":923}},"from":{"krate":0,"index":25211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/lu.rs","byte_start":1211671,"byte_end":1211673,"line_start":209,"line_end":209,"column_start":49,"column_end":51},"kind":{"Impl":{"id":924}},"from":{"krate":0,"index":25211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1218019,"byte_end":1218038,"line_start":35,"line_end":35,"column_start":23,"column_end":42},"kind":{"Impl":{"id":925}},"from":{"krate":0,"index":25227},"to":{"krate":2,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1218160,"byte_end":1218179,"line_start":42,"line_end":42,"column_start":18,"column_end":37},"kind":{"Impl":{"id":926}},"from":{"krate":0,"index":25227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1218475,"byte_end":1218494,"line_start":54,"line_end":54,"column_start":6,"column_end":25},"kind":{"Impl":{"id":927}},"from":{"krate":0,"index":25227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/permutation_sequence.rs","byte_start":1218777,"byte_end":1218796,"line_start":65,"line_end":65,"column_start":14,"column_end":33},"kind":{"Impl":{"id":928}},"from":{"krate":0,"index":25227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1223023,"byte_end":1223025,"line_start":40,"line_end":40,"column_start":54,"column_end":56},"kind":{"Impl":{"id":929}},"from":{"krate":0,"index":25237},"to":{"krate":2,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1223234,"byte_end":1223236,"line_start":48,"line_end":48,"column_start":45,"column_end":47},"kind":{"Impl":{"id":930}},"from":{"krate":0,"index":25237},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/qr.rs","byte_start":1227161,"byte_end":1227163,"line_start":159,"line_end":159,"column_start":49,"column_end":51},"kind":{"Impl":{"id":931}},"from":{"krate":0,"index":25237},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1232240,"byte_end":1232245,"line_start":42,"line_end":42,"column_start":40,"column_end":45},"kind":{"Impl":{"id":932}},"from":{"krate":0,"index":25253},"to":{"krate":2,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1232360,"byte_end":1232365,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"kind":{"Impl":{"id":933}},"from":{"krate":0,"index":25253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/schur.rs","byte_start":1246966,"byte_end":1246978,"line_start":491,"line_end":491,"column_start":52,"column_end":64},"kind":{"Impl":{"id":934}},"from":{"krate":0,"index":3763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1249487,"byte_end":1249499,"line_start":10,"line_end":10,"column_start":52,"column_end":64},"kind":{"Impl":{"id":935}},"from":{"krate":0,"index":3763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/solve.rs","byte_start":1262162,"byte_end":1262174,"line_start":443,"line_end":443,"column_start":56,"column_end":68},"kind":{"Impl":{"id":936}},"from":{"krate":0,"index":3763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1275677,"byte_end":1275680,"line_start":57,"line_end":57,"column_start":54,"column_end":57},"kind":{"Impl":{"id":937}},"from":{"krate":0,"index":25266},"to":{"krate":2,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1276037,"byte_end":1276040,"line_start":68,"line_end":68,"column_start":45,"column_end":48},"kind":{"Impl":{"id":938}},"from":{"krate":0,"index":25266},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/svd.rs","byte_start":1295264,"byte_end":1295270,"line_start":606,"line_end":606,"column_start":66,"column_end":72},"kind":{"Impl":{"id":939}},"from":{"krate":0,"index":21307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1299574,"byte_end":1299588,"line_start":44,"line_end":44,"column_start":40,"column_end":54},"kind":{"Impl":{"id":940}},"from":{"krate":0,"index":25283},"to":{"krate":2,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1299768,"byte_end":1299782,"line_start":52,"line_end":52,"column_start":31,"column_end":45},"kind":{"Impl":{"id":941}},"from":{"krate":0,"index":25283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_eigen.rs","byte_start":1307821,"byte_end":1307833,"line_start":304,"line_end":304,"column_start":59,"column_end":71},"kind":{"Impl":{"id":942}},"from":{"krate":0,"index":3763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1311770,"byte_end":1311790,"line_start":37,"line_end":37,"column_start":47,"column_end":67},"kind":{"Impl":{"id":943}},"from":{"krate":0,"index":25296},"to":{"krate":2,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.24.1/src/linalg/symmetric_tridiagonal.rs","byte_start":1311981,"byte_end":1312001,"line_start":45,"line_end":45,"column_start":38,"column_end":58},"kind":{"Impl":{"id":944}},"from":{"krate":0,"index":25296},"to":{"krate":4294967295,"index":4294967295}}]}