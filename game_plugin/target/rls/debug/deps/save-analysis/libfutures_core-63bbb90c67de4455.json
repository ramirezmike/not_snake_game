{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13","program":"/home/mramirez/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_core","--edition=2018","/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=63bbb90c67de4455","-C","extra-filename=-63bbb90c67de4455","--out-dir","/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps","-L","dependency=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/mramirez/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libfutures_core-63bbb90c67de4455.rmeta"},"prelude":{"crate_id":{"name":"futures_core","disambiguator":[16159176423473745805,12690798511306193971]},"crate_root":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src","external_crates":[{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[397594041871667817,11704163070354659695]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","num":2,"id":{"name":"core","disambiguator":[17044353007700780372,2918200604221815240]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15333840167806743833,9889193056877993824]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4550415707075219492,6623162258675921486]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8289379911494056514,13856099756999900329]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[10514502805115346386,576110030083780649]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9878185313679130060,1975285035821961205]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[4010603182529655334,7152219772350788052]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[1807637986128902209,18379128151258407121]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11140927657351163542,6267109750485550558]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[13809795498598848728,13320395723520943315]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13869841232067652907,9875669357213642224]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15533050656730733495,14669839968799848603]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[14371692877540073659,8181723439448527964]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[639541300699627395,1995254029228069844]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[12482123824895737424,11765111494567609733]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[1169880241773671279,8605314106566979368]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[5016943468141875609,13494347935157563341]}}],"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","byte_start":0,"byte_end":1101,"line_start":1,"line_end":32,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":12043},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":1236,"byte_end":1242,"line_start":8,"line_end":8,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":2,"index":12043},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","byte_start":866,"byte_end":872,"line_start":20,"line_end":20,"column_start":39,"column_end":45},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":27},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","byte_start":874,"byte_end":885,"line_start":20,"line_end":20,"column_start":47,"column_end":58},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":44},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","byte_start":887,"byte_end":896,"line_start":20,"line_end":20,"column_start":60,"column_end":69},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":96},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","byte_start":954,"byte_end":960,"line_start":23,"line_end":23,"column_start":39,"column_end":45},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":110},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","byte_start":962,"byte_end":973,"line_start":23,"line_end":23,"column_start":47,"column_end":58},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":127},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","byte_start":975,"byte_end":984,"line_start":23,"line_end":23,"column_start":60,"column_end":69},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":194},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/mod.rs","byte_start":13198,"byte_end":13209,"line_start":4,"line_end":4,"column_start":29,"column_end":40},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":170}},{"kind":"Use","ref_id":{"krate":2,"index":12315},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/mod.rs","byte_start":12587,"byte_end":12594,"line_start":10,"line_end":10,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":2,"index":42402},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/mod.rs","byte_start":12596,"byte_end":12600,"line_start":10,"line_end":10,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":2,"index":12325},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/mod.rs","byte_start":12602,"byte_end":12607,"line_start":10,"line_end":10,"column_start":37,"column_end":42},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":2,"index":42438},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/mod.rs","byte_start":12609,"byte_end":12617,"line_start":10,"line_end":10,"column_start":44,"column_end":52},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":2,"index":42447},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/mod.rs","byte_start":12619,"byte_end":12633,"line_start":10,"line_end":10,"column_start":54,"column_end":68},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":2,"index":42402},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","byte_start":1094,"byte_end":1098,"line_start":31,"line_end":31,"column_start":25,"column_end":29},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":233}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","byte_start":0,"byte_end":1101,"line_start":1,"line_end":32,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":233}],"decl_id":null,"docs":" Core traits and types for asynchronous operations in Rust.\n","sig":null,"attributes":[{"value":"/ Core traits and types for asynchronous operations in Rust.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","byte_start":0,"byte_end":62,"line_start":1,"line_end":1,"column_start":1,"column_end":63}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","byte_start":189,"byte_end":277,"line_start":7,"line_end":7,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","byte_start":445,"byte_end":466,"line_start":10,"line_end":10,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":44},{"krate":0,"index":48},{"krate":0,"index":55}],"decl_id":null,"docs":" Futures.\n","sig":null,"attributes":[{"value":"/ Futures.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":1103,"byte_end":1115,"line_start":1,"line_end":1,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":21},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":1420,"byte_end":1429,"line_start":13,"line_end":13,"column_start":10,"column_end":19},"name":"BoxFuture","qualname":"::future::BoxFuture","value":"Pin<alloc::boxed::Box<dyn Future<Output = T> + Send + 'a>>","parent":null,"children":[],"decl_id":null,"docs":" An owned dynamically typed [`Future`] for use in cases where you can't\n statically type your result or need to add some indirection.\n","sig":null,"attributes":[{"value":"/ An owned dynamically typed [`Future`] for use in cases where you can't","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":1245,"byte_end":1319,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ statically type your result or need to add some indirection.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":1320,"byte_end":1384,"line_start":11,"line_end":11,"column_start":1,"column_end":65}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":1385,"byte_end":1410,"line_start":12,"line_end":12,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":24},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":1588,"byte_end":1602,"line_start":17,"line_end":17,"column_start":10,"column_end":24},"name":"LocalBoxFuture","qualname":"::future::LocalBoxFuture","value":"Pin<alloc::boxed::Box<dyn Future<Output = T> + 'a>>","parent":null,"children":[],"decl_id":null,"docs":" `BoxFuture`, but without the `Send` requirement.\n","sig":null,"attributes":[{"value":"/ `BoxFuture`, but without the `Send` requirement.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":1500,"byte_end":1552,"line_start":15,"line_end":15,"column_start":1,"column_end":53}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":1553,"byte_end":1578,"line_start":16,"line_end":16,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":27},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":2129,"byte_end":2140,"line_start":27,"line_end":27,"column_start":11,"column_end":22},"name":"FusedFuture","qualname":"::future::FusedFuture","value":"FusedFuture: Future","parent":null,"children":[{"krate":0,"index":28}],"decl_id":null,"docs":" A future which tracks whether or not the underlying future\n should no longer be polled.","sig":null,"attributes":[{"value":"/ A future which tracks whether or not the underlying future","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":1666,"byte_end":1728,"line_start":19,"line_end":19,"column_start":1,"column_end":63}},{"value":"/ should no longer be polled.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":1729,"byte_end":1760,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":1761,"byte_end":1764,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ `is_terminated` will return `true` if a future should no longer be polled.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":1765,"byte_end":1843,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ Usually, this state occurs after `poll` (or `try_poll`) returned","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":1844,"byte_end":1912,"line_start":23,"line_end":23,"column_start":1,"column_end":69}},{"value":"/ `Poll::Ready`. However, `is_terminated` may also return `true` if a future","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":1913,"byte_end":1991,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ has become inactive and can no longer make progress and should be ignored","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":1992,"byte_end":2069,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ or dropped rather than being `poll`ed again.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":2070,"byte_end":2118,"line_start":26,"line_end":26,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":2234,"byte_end":2247,"line_start":29,"line_end":29,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"::future::FusedFuture::is_terminated","value":"pub fn is_terminated(&Self) -> bool","parent":{"krate":0,"index":27},"children":[],"decl_id":null,"docs":" Returns `true` if the underlying future should no longer be polled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the underlying future should no longer be polled.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":2155,"byte_end":2226,"line_start":28,"line_end":28,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":39},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":2689,"byte_end":2695,"line_start":51,"line_end":51,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::future::private_try_future::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":44},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":2919,"byte_end":2928,"line_start":58,"line_end":58,"column_start":11,"column_end":20},"name":"TryFuture","qualname":"::future::TryFuture","value":"TryFuture: Future + private_try_future::Sealed","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47}],"decl_id":null,"docs":" A convenience for futures that return `Result` values that includes\n a variety of adapters tailored to such futures.\n","sig":null,"attributes":[{"value":"/ A convenience for futures that return `Result` values that includes","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":2785,"byte_end":2856,"line_start":56,"line_end":56,"column_start":1,"column_end":72}},{"value":"/ a variety of adapters tailored to such futures.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":2857,"byte_end":2908,"line_start":57,"line_end":57,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":45},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":3038,"byte_end":3040,"line_start":60,"line_end":60,"column_start":10,"column_end":12},"name":"Ok","qualname":"::future::TryFuture::Ok","value":"type Ok;","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" The type of successful values yielded by this future\n","sig":null,"attributes":[{"value":"/ The type of successful values yielded by this future","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":2972,"byte_end":3028,"line_start":59,"line_end":59,"column_start":5,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":46},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":3104,"byte_end":3109,"line_start":63,"line_end":63,"column_start":10,"column_end":15},"name":"Error","qualname":"::future::TryFuture::Error","value":"type Error;","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" The type of failures yielded by this future\n","sig":null,"attributes":[{"value":"/ The type of failures yielded by this future","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":3047,"byte_end":3094,"line_start":62,"line_end":62,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":3359,"byte_end":3367,"line_start":70,"line_end":70,"column_start":8,"column_end":16},"name":"try_poll","qualname":"::future::TryFuture::try_poll","value":"pub fn try_poll(Pin<&mut Self>, &mut Context)\n-> Poll<Result<Self::Ok, Self::Error>>","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Poll this `TryFuture` as if it were a `Future`.","sig":null,"attributes":[{"value":"/ Poll this `TryFuture` as if it were a `Future`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":3116,"byte_end":3167,"line_start":65,"line_end":65,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":3172,"byte_end":3175,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This method is a stopgap for a compiler limitation that prevents us from","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":3180,"byte_end":3256,"line_start":67,"line_end":67,"column_start":5,"column_end":81}},{"value":"/ directly inheriting from the `Future` trait; in the future it won't be","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":3261,"byte_end":3335,"line_start":68,"line_end":68,"column_start":5,"column_end":79}},{"value":"/ needed.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":3340,"byte_end":3351,"line_start":69,"line_end":69,"column_start":5,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":76},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":100},{"krate":0,"index":105},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":127},{"krate":0,"index":131},{"krate":0,"index":138}],"decl_id":null,"docs":" Asynchronous streams.\n","sig":null,"attributes":[{"value":"/ Asynchronous streams.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":4216,"byte_end":4241,"line_start":1,"line_end":1,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":90},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":4497,"byte_end":4506,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"BoxStream","qualname":"::stream::BoxStream","value":"Pin<alloc::boxed::Box<dyn Stream<Item = T> + Send + 'a>>","parent":null,"children":[],"decl_id":null,"docs":" An owned dynamically typed [`Stream`] for use in cases where you can't\n statically type your result or need to add some indirection.\n","sig":null,"attributes":[{"value":"/ An owned dynamically typed [`Stream`] for use in cases where you can't","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":4322,"byte_end":4396,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ statically type your result or need to add some indirection.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":4397,"byte_end":4461,"line_start":8,"line_end":8,"column_start":1,"column_end":65}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":4462,"byte_end":4487,"line_start":9,"line_end":9,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":93},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":4663,"byte_end":4677,"line_start":14,"line_end":14,"column_start":10,"column_end":24},"name":"LocalBoxStream","qualname":"::stream::LocalBoxStream","value":"Pin<alloc::boxed::Box<dyn Stream<Item = T> + 'a>>","parent":null,"children":[],"decl_id":null,"docs":" `BoxStream`, but without the `Send` requirement.\n","sig":null,"attributes":[{"value":"/ `BoxStream`, but without the `Send` requirement.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":4575,"byte_end":4627,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":4628,"byte_end":4653,"line_start":13,"line_end":13,"column_start":1,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":96},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":5284,"byte_end":5290,"line_start":27,"line_end":27,"column_start":11,"column_end":17},"name":"Stream","qualname":"::stream::Stream","value":"Stream","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99}],"decl_id":null,"docs":" A stream of values produced asynchronously.","sig":null,"attributes":[{"value":"/ A stream of values produced asynchronously.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":4739,"byte_end":4786,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":4787,"byte_end":4790,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If `Future<Output = T>` is an asynchronous version of `T`, then `Stream<Item","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":4791,"byte_end":4871,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ = T>` is an asynchronous version of `Iterator<Item = T>`. A stream","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":4872,"byte_end":4942,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/ represents a sequence of value-producing events that occur asynchronously to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":4943,"byte_end":5023,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ the caller.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":5024,"byte_end":5039,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":5040,"byte_end":5043,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The trait is modeled after `Future`, but allows `poll_next` to be called","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":5044,"byte_end":5120,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ even after a value has been produced, yielding `None` once the stream has","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":5121,"byte_end":5198,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ been fully exhausted.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":5199,"byte_end":5224,"line_start":25,"line_end":25,"column_start":1,"column_end":26}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":5225,"byte_end":5273,"line_start":26,"line_end":26,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":97},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":5340,"byte_end":5344,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"name":"Item","qualname":"::stream::Stream::Item","value":"type Item;","parent":{"krate":0,"index":96},"children":[],"decl_id":null,"docs":" Values yielded by the stream.\n","sig":null,"attributes":[{"value":"/ Values yielded by the stream.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":5297,"byte_end":5330,"line_start":28,"line_end":28,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":7060,"byte_end":7069,"line_start":66,"line_end":66,"column_start":8,"column_end":17},"name":"poll_next","qualname":"::stream::Stream::poll_next","value":"pub fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":0,"index":96},"children":[],"decl_id":null,"docs":" Attempt to pull out the next value of this stream, registering the\n current task for wakeup if the value is not yet available, and returning\n `None` if the stream is exhausted.","sig":null,"attributes":[{"value":"/ Attempt to pull out the next value of this stream, registering the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":5351,"byte_end":5421,"line_start":31,"line_end":31,"column_start":5,"column_end":75}},{"value":"/ current task for wakeup if the value is not yet available, and returning","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":5426,"byte_end":5502,"line_start":32,"line_end":32,"column_start":5,"column_end":81}},{"value":"/ `None` if the stream is exhausted.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":5507,"byte_end":5545,"line_start":33,"line_end":33,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":5550,"byte_end":5553,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":5558,"byte_end":5576,"line_start":35,"line_end":35,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":5581,"byte_end":5584,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ There are several possible return values, each indicating a distinct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":5589,"byte_end":5661,"line_start":37,"line_end":37,"column_start":5,"column_end":77}},{"value":"/ stream state:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":5666,"byte_end":5683,"line_start":38,"line_end":38,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":5688,"byte_end":5691,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ - `Poll::Pending` means that this stream's next value is not ready","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":5696,"byte_end":5766,"line_start":40,"line_end":40,"column_start":5,"column_end":75}},{"value":"/ yet. Implementations will ensure that the current task will be notified","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":5771,"byte_end":5846,"line_start":41,"line_end":41,"column_start":5,"column_end":80}},{"value":"/ when the next value may be ready.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":5851,"byte_end":5888,"line_start":42,"line_end":42,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":5893,"byte_end":5896,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ - `Poll::Ready(Some(val))` means that the stream has successfully","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":5901,"byte_end":5970,"line_start":44,"line_end":44,"column_start":5,"column_end":74}},{"value":"/ produced a value, `val`, and may produce further values on subsequent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":5975,"byte_end":6048,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ `poll_next` calls.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":6053,"byte_end":6075,"line_start":46,"line_end":46,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":6080,"byte_end":6083,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ - `Poll::Ready(None)` means that the stream has terminated, and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":6088,"byte_end":6155,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/ `poll_next` should not be invoked again.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":6160,"byte_end":6204,"line_start":49,"line_end":49,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":6209,"byte_end":6212,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":6217,"byte_end":6229,"line_start":51,"line_end":51,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":6234,"byte_end":6237,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Once a stream has finished (returned `Ready(None)` from `poll_next`), calling its","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":6242,"byte_end":6327,"line_start":53,"line_end":53,"column_start":5,"column_end":90}},{"value":"/ `poll_next` method again may panic, block forever, or cause other kinds of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":6332,"byte_end":6410,"line_start":54,"line_end":54,"column_start":5,"column_end":83}},{"value":"/ problems; the `Stream` trait places no requirements on the effects of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":6415,"byte_end":6488,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ such a call. However, as the `poll_next` method is not marked `unsafe`,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":6493,"byte_end":6568,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/ Rust's usual rules apply: calls must never cause undefined behavior","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":6573,"byte_end":6644,"line_start":57,"line_end":57,"column_start":5,"column_end":76}},{"value":"/ (memory corruption, incorrect use of `unsafe` functions, or the like),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":6649,"byte_end":6723,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ regardless of the stream's state.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":6728,"byte_end":6765,"line_start":59,"line_end":59,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":6770,"byte_end":6773,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ If this is difficult to guard against then the [`fuse`] adapter can be used","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":6778,"byte_end":6857,"line_start":61,"line_end":61,"column_start":5,"column_end":84}},{"value":"/ to ensure that `poll_next` always returns `Ready(None)` in subsequent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":6862,"byte_end":6935,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ calls.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":6940,"byte_end":6950,"line_start":63,"line_end":63,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":6955,"byte_end":6958,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`fuse`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.fuse","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":6963,"byte_end":7052,"line_start":65,"line_end":65,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":8477,"byte_end":8486,"line_start":98,"line_end":98,"column_start":8,"column_end":17},"name":"size_hint","qualname":"::stream::Stream::size_hint","value":"pub fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":0,"index":96},"children":[],"decl_id":null,"docs":" Returns the bounds on the remaining length of the stream.","sig":null,"attributes":[{"value":"/ Returns the bounds on the remaining length of the stream.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":7171,"byte_end":7232,"line_start":71,"line_end":71,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":7237,"byte_end":7240,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Specifically, `size_hint()` returns a tuple where the first element","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":7245,"byte_end":7316,"line_start":73,"line_end":73,"column_start":5,"column_end":76}},{"value":"/ is the lower bound, and the second element is the upper bound.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":7321,"byte_end":7387,"line_start":74,"line_end":74,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":7392,"byte_end":7395,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ The second half of the tuple that is returned is an [`Option`]`<`[`usize`]`>`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":7400,"byte_end":7482,"line_start":76,"line_end":76,"column_start":5,"column_end":87}},{"value":"/ A [`None`] here means that either there is no known upper bound, or the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":7487,"byte_end":7562,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ upper bound is larger than [`usize`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":7567,"byte_end":7608,"line_start":78,"line_end":78,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":7613,"byte_end":7616,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ # Implementation notes","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":7621,"byte_end":7647,"line_start":80,"line_end":80,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":7652,"byte_end":7655,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ It is not enforced that a stream implementation yields the declared","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":7660,"byte_end":7731,"line_start":82,"line_end":82,"column_start":5,"column_end":76}},{"value":"/ number of elements. A buggy stream may yield less than the lower bound","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":7736,"byte_end":7810,"line_start":83,"line_end":83,"column_start":5,"column_end":79}},{"value":"/ or more than the upper bound of elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":7815,"byte_end":7860,"line_start":84,"line_end":84,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":7865,"byte_end":7868,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ `size_hint()` is primarily intended to be used for optimizations such as","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":7873,"byte_end":7949,"line_start":86,"line_end":86,"column_start":5,"column_end":81}},{"value":"/ reserving space for the elements of the stream, but must not be","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":7954,"byte_end":8021,"line_start":87,"line_end":87,"column_start":5,"column_end":72}},{"value":"/ trusted to e.g., omit bounds checks in unsafe code. An incorrect","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":8026,"byte_end":8094,"line_start":88,"line_end":88,"column_start":5,"column_end":73}},{"value":"/ implementation of `size_hint()` should not lead to memory safety","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":8099,"byte_end":8167,"line_start":89,"line_end":89,"column_start":5,"column_end":73}},{"value":"/ violations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":8172,"byte_end":8187,"line_start":90,"line_end":90,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":8192,"byte_end":8195,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ That said, the implementation should provide a correct estimation,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":8200,"byte_end":8270,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ because otherwise it would be a violation of the trait's protocol.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":8275,"byte_end":8345,"line_start":93,"line_end":93,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":8350,"byte_end":8353,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ The default implementation returns `(0, `[`None`]`)` which is correct for any","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":8358,"byte_end":8439,"line_start":95,"line_end":95,"column_start":5,"column_end":86}},{"value":"/ stream.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":8444,"byte_end":8455,"line_start":96,"line_end":96,"column_start":5,"column_end":16}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":8460,"byte_end":8469,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":110},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":9753,"byte_end":9764,"line_start":145,"line_end":145,"column_start":11,"column_end":22},"name":"FusedStream","qualname":"::stream::FusedStream","value":"FusedStream: Stream","parent":null,"children":[{"krate":0,"index":111}],"decl_id":null,"docs":" A stream which tracks whether or not the underlying stream\n should no longer be polled.","sig":null,"attributes":[{"value":"/ A stream which tracks whether or not the underlying stream","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":9276,"byte_end":9338,"line_start":137,"line_end":137,"column_start":1,"column_end":63}},{"value":"/ should no longer be polled.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":9339,"byte_end":9370,"line_start":138,"line_end":138,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":9371,"byte_end":9374,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ `is_terminated` will return `true` if a future should no longer be polled.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":9375,"byte_end":9453,"line_start":140,"line_end":140,"column_start":1,"column_end":79}},{"value":"/ Usually, this state occurs after `poll_next` (or `try_poll_next`) returned","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":9454,"byte_end":9532,"line_start":141,"line_end":141,"column_start":1,"column_end":79}},{"value":"/ `Poll::Ready(None)`. However, `is_terminated` may also return `true` if a","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":9533,"byte_end":9610,"line_start":142,"line_end":142,"column_start":1,"column_end":78}},{"value":"/ stream has become inactive and can no longer make progress and should be","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":9611,"byte_end":9687,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ ignored or dropped rather than being polled again.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":9688,"byte_end":9742,"line_start":144,"line_end":144,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":9847,"byte_end":9860,"line_start":147,"line_end":147,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"::stream::FusedStream::is_terminated","value":"pub fn is_terminated(&Self) -> bool","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" Returns `true` if the stream should no longer be polled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the stream should no longer be polled.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":9779,"byte_end":9839,"line_start":146,"line_end":146,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":122},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":10302,"byte_end":10308,"line_start":169,"line_end":169,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::stream::private_try_stream::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":127},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":10530,"byte_end":10539,"line_start":176,"line_end":176,"column_start":11,"column_end":20},"name":"TryStream","qualname":"::stream::TryStream","value":"TryStream: Stream + private_try_stream::Sealed","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130}],"decl_id":null,"docs":" A convenience for streams that return `Result` values that includes\n a variety of adapters tailored to such futures.\n","sig":null,"attributes":[{"value":"/ A convenience for streams that return `Result` values that includes","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":10396,"byte_end":10467,"line_start":174,"line_end":174,"column_start":1,"column_end":72}},{"value":"/ a variety of adapters tailored to such futures.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":10468,"byte_end":10519,"line_start":175,"line_end":175,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":128},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":10649,"byte_end":10651,"line_start":178,"line_end":178,"column_start":10,"column_end":12},"name":"Ok","qualname":"::stream::TryStream::Ok","value":"type Ok;","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" The type of successful values yielded by this future\n","sig":null,"attributes":[{"value":"/ The type of successful values yielded by this future","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":10583,"byte_end":10639,"line_start":177,"line_end":177,"column_start":5,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":129},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":10715,"byte_end":10720,"line_start":181,"line_end":181,"column_start":10,"column_end":15},"name":"Error","qualname":"::stream::TryStream::Error","value":"type Error;","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" The type of failures yielded by this future\n","sig":null,"attributes":[{"value":"/ The type of failures yielded by this future","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":10658,"byte_end":10705,"line_start":180,"line_end":180,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":10970,"byte_end":10983,"line_start":188,"line_end":188,"column_start":8,"column_end":21},"name":"try_poll_next","qualname":"::stream::TryStream::try_poll_next","value":"pub fn try_poll_next(Pin<&mut Self>, &mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>>","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Poll this `TryStream` as if it were a `Stream`.","sig":null,"attributes":[{"value":"/ Poll this `TryStream` as if it were a `Stream`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":10727,"byte_end":10778,"line_start":183,"line_end":183,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":10783,"byte_end":10786,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ This method is a stopgap for a compiler limitation that prevents us from","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":10791,"byte_end":10867,"line_start":185,"line_end":185,"column_start":5,"column_end":81}},{"value":"/ directly inheriting from the `Stream` trait; in the future it won't be","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":10872,"byte_end":10946,"line_start":186,"line_end":186,"column_start":5,"column_end":79}},{"value":"/ needed.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":10951,"byte_end":10962,"line_start":187,"line_end":187,"column_start":5,"column_end":16}}]},{"kind":"Mod","id":{"krate":0,"index":167},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":224},{"krate":0,"index":227},{"krate":0,"index":230}],"decl_id":null,"docs":" Task notification.\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","byte_start":988,"byte_end":1000,"line_start":25,"line_end":25,"column_start":1,"column_end":13}},{"value":"/ Task notification.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/mod.rs","byte_start":12464,"byte_end":12486,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":170},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"__internal","qualname":"::task::__internal","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/mod.rs","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":214}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":194},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":16113,"byte_end":16124,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"AtomicWaker","qualname":"::task::__internal::atomic_waker::AtomicWaker","value":"AtomicWaker {  }","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196}],"decl_id":null,"docs":" A synchronization primitive for task wakeup.","sig":null,"attributes":[{"value":"/ A synchronization primitive for task wakeup.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":13378,"byte_end":13426,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":13427,"byte_end":13430,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Sometimes the task interested in a given event will change over time.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":13431,"byte_end":13504,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ An `AtomicWaker` can coordinate concurrent notifications with the consumer","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":13505,"byte_end":13583,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ potentially \"updating\" the underlying task to wake up. This is useful in","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":13584,"byte_end":13660,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ scenarios where a computation completes in another thread and wants to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":13661,"byte_end":13735,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ notify the consumer, but the consumer is in the process of being migrated to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":13736,"byte_end":13816,"line_start":13,"line_end":13,"column_start":1,"column_end":81}},{"value":"/ a new logical task.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":13817,"byte_end":13840,"line_start":14,"line_end":14,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":13841,"byte_end":13844,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Consumers should call `register` before checking the result of a computation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":13845,"byte_end":13925,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ and producers should call `wake` after producing the computation (this","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":13926,"byte_end":14000,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ differs from the usual `thread::park` pattern). It is also permitted for","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":14001,"byte_end":14077,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ `wake` to be called **before** `register`. This results in a no-op.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":14078,"byte_end":14149,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":14150,"byte_end":14153,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ A single `AtomicWaker` may be reused for any number of calls to `register` or","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":14154,"byte_end":14235,"line_start":21,"line_end":21,"column_start":1,"column_end":82}},{"value":"/ `wake`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":14236,"byte_end":14247,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":14248,"byte_end":14251,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Memory ordering","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":14252,"byte_end":14273,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":14274,"byte_end":14277,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Calling `register` \"acquires\" all memory \"released\" by calls to `wake`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":14278,"byte_end":14352,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/ before the call to `register`.  Later calls to `wake` will wake the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":14353,"byte_end":14424,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/ registered waker (on contention this wake might be triggered in `register`).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":14425,"byte_end":14505,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":14506,"byte_end":14509,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ For concurrent calls to `register` (should be avoided) the ordering is only","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":14510,"byte_end":14589,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ guaranteed for the winning call.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":14590,"byte_end":14626,"line_start":31,"line_end":31,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":14627,"byte_end":14630,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":14631,"byte_end":14645,"line_start":33,"line_end":33,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":14646,"byte_end":14649,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example providing a `Flag` that can be signalled manually","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":14650,"byte_end":14728,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ when it is ready.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":14729,"byte_end":14750,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":14751,"byte_end":14754,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":14755,"byte_end":14762,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use futures::future::Future;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":14763,"byte_end":14795,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/ use futures::task::{Context, Poll, AtomicWaker};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":14796,"byte_end":14848,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":14849,"byte_end":14872,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":14873,"byte_end":14911,"line_start":42,"line_end":42,"column_start":1,"column_end":39}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":14912,"byte_end":14957,"line_start":43,"line_end":43,"column_start":1,"column_end":46}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":14958,"byte_end":14980,"line_start":44,"line_end":44,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":14981,"byte_end":14984,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ struct Inner {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":14985,"byte_end":15003,"line_start":46,"line_end":46,"column_start":1,"column_end":19}},{"value":"/     waker: AtomicWaker,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15004,"byte_end":15031,"line_start":47,"line_end":47,"column_start":1,"column_end":28}},{"value":"/     set: AtomicBool,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15032,"byte_end":15056,"line_start":48,"line_end":48,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15057,"byte_end":15062,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15063,"byte_end":15066,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ #[derive(Clone)]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15067,"byte_end":15087,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/ struct Flag(Arc<Inner>);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15088,"byte_end":15116,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15117,"byte_end":15120,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ impl Flag {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15121,"byte_end":15136,"line_start":54,"line_end":54,"column_start":1,"column_end":16}},{"value":"/     pub fn new() -> Self {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15137,"byte_end":15167,"line_start":55,"line_end":55,"column_start":1,"column_end":31}},{"value":"/         Self(Arc::new(Inner {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15168,"byte_end":15201,"line_start":56,"line_end":56,"column_start":1,"column_end":34}},{"value":"/             waker: AtomicWaker::new(),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15202,"byte_end":15244,"line_start":57,"line_end":57,"column_start":1,"column_end":43}},{"value":"/             set: AtomicBool::new(false),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15245,"byte_end":15289,"line_start":58,"line_end":58,"column_start":1,"column_end":45}},{"value":"/         }))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15290,"byte_end":15305,"line_start":59,"line_end":59,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15306,"byte_end":15315,"line_start":60,"line_end":60,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15316,"byte_end":15319,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     pub fn signal(&self) {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15320,"byte_end":15350,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/         self.0.set.store(true, Relaxed);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15351,"byte_end":15395,"line_start":63,"line_end":63,"column_start":1,"column_end":45}},{"value":"/         self.0.waker.wake();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15396,"byte_end":15428,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15429,"byte_end":15438,"line_start":65,"line_end":65,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15439,"byte_end":15444,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15445,"byte_end":15448,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ impl Future for Flag {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15449,"byte_end":15475,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/     type Output = ();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15476,"byte_end":15501,"line_start":69,"line_end":69,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15502,"byte_end":15505,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/     fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<()> {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15506,"byte_end":15579,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/         // quick check to avoid registration if already done.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15580,"byte_end":15645,"line_start":72,"line_end":72,"column_start":1,"column_end":66}},{"value":"/         if self.0.set.load(Relaxed) {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15646,"byte_end":15687,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/             return Poll::Ready(());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15688,"byte_end":15727,"line_start":74,"line_end":74,"column_start":1,"column_end":40}},{"value":"/         }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15728,"byte_end":15741,"line_start":75,"line_end":75,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15742,"byte_end":15745,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/         self.0.waker.register(cx.waker());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15746,"byte_end":15792,"line_start":77,"line_end":77,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15793,"byte_end":15796,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/         // Need to check condition **after** `register` to avoid a race","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15797,"byte_end":15872,"line_start":79,"line_end":79,"column_start":1,"column_end":76}},{"value":"/         // condition that would result in lost notifications.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15873,"byte_end":15938,"line_start":80,"line_end":80,"column_start":1,"column_end":66}},{"value":"/         if self.0.set.load(Relaxed) {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15939,"byte_end":15980,"line_start":81,"line_end":81,"column_start":1,"column_end":42}},{"value":"/             Poll::Ready(())","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":15981,"byte_end":16012,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/         } else {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":16013,"byte_end":16033,"line_start":83,"line_end":83,"column_start":1,"column_end":21}},{"value":"/             Poll::Pending","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":16034,"byte_end":16063,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/         }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":16064,"byte_end":16077,"line_start":85,"line_end":85,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":16078,"byte_end":16087,"line_start":86,"line_end":86,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":16088,"byte_end":16093,"line_start":87,"line_end":87,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":16094,"byte_end":16101,"line_start":88,"line_end":88,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":21189,"byte_end":21192,"line_start":200,"line_end":200,"column_start":18,"column_end":21},"name":"new","qualname":"<AtomicWaker>::new","value":"pub const fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `AtomicWaker`.\n","sig":null,"attributes":[{"value":"/ Create an `AtomicWaker`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":21143,"byte_end":21171,"line_start":199,"line_end":199,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":23478,"byte_end":23486,"line_start":261,"line_end":261,"column_start":12,"column_end":20},"name":"register","qualname":"<AtomicWaker>::register","value":"pub fn register(&Self, &Waker)","parent":null,"children":[],"decl_id":null,"docs":" Registers the waker to be notified on calls to `wake`.","sig":null,"attributes":[{"value":"/ Registers the waker to be notified on calls to `wake`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":21440,"byte_end":21498,"line_start":211,"line_end":211,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":21503,"byte_end":21506,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ The new task will take place of any previous tasks that were registered","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":21511,"byte_end":21586,"line_start":213,"line_end":213,"column_start":5,"column_end":80}},{"value":"/ by previous calls to `register`. Any calls to `wake` that happen after","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":21591,"byte_end":21665,"line_start":214,"line_end":214,"column_start":5,"column_end":79}},{"value":"/ a call to `register` (as defined by the memory ordering rules), will","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":21670,"byte_end":21742,"line_start":215,"line_end":215,"column_start":5,"column_end":77}},{"value":"/ notify the `register` caller's task and deregister the waker from future","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":21747,"byte_end":21823,"line_start":216,"line_end":216,"column_start":5,"column_end":81}},{"value":"/ notifications. Because of this, callers should ensure `register` gets","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":21828,"byte_end":21901,"line_start":217,"line_end":217,"column_start":5,"column_end":78}},{"value":"/ invoked with a new `Waker` **each** time they require a wakeup.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":21906,"byte_end":21973,"line_start":218,"line_end":218,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":21978,"byte_end":21981,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ It is safe to call `register` with multiple other threads concurrently","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":21986,"byte_end":22060,"line_start":220,"line_end":220,"column_start":5,"column_end":79}},{"value":"/ calling `wake`. This will result in the `register` caller's current","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":22065,"byte_end":22136,"line_start":221,"line_end":221,"column_start":5,"column_end":76}},{"value":"/ task being notified once.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":22141,"byte_end":22170,"line_start":222,"line_end":222,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":22175,"byte_end":22178,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ This function is safe to call concurrently, but this is generally a bad","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":22183,"byte_end":22258,"line_start":224,"line_end":224,"column_start":5,"column_end":80}},{"value":"/ idea. Concurrent calls to `register` will attempt to register different","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":22263,"byte_end":22338,"line_start":225,"line_end":225,"column_start":5,"column_end":80}},{"value":"/ tasks to be notified. One of the callers will win and have its task set,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":22343,"byte_end":22419,"line_start":226,"line_end":226,"column_start":5,"column_end":81}},{"value":"/ but there is no guarantee as to which caller will succeed.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":22424,"byte_end":22486,"line_start":227,"line_end":227,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":22491,"byte_end":22494,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":22499,"byte_end":22513,"line_start":229,"line_end":229,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":22518,"byte_end":22521,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ Here is how `register` is used when implementing a flag.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":22526,"byte_end":22586,"line_start":231,"line_end":231,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":22591,"byte_end":22594,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":22599,"byte_end":22606,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"/ use futures::future::Future;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":22611,"byte_end":22643,"line_start":234,"line_end":234,"column_start":5,"column_end":37}},{"value":"/ use futures::task::{Context, Poll, AtomicWaker};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":22648,"byte_end":22700,"line_start":235,"line_end":235,"column_start":5,"column_end":57}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":22705,"byte_end":22743,"line_start":236,"line_end":236,"column_start":5,"column_end":43}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":22748,"byte_end":22793,"line_start":237,"line_end":237,"column_start":5,"column_end":50}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":22798,"byte_end":22820,"line_start":238,"line_end":238,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":22825,"byte_end":22828,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ struct Flag {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":22833,"byte_end":22850,"line_start":240,"line_end":240,"column_start":5,"column_end":22}},{"value":"/     waker: AtomicWaker,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":22855,"byte_end":22882,"line_start":241,"line_end":241,"column_start":5,"column_end":32}},{"value":"/     set: AtomicBool,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":22887,"byte_end":22911,"line_start":242,"line_end":242,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":22916,"byte_end":22921,"line_start":243,"line_end":243,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":22926,"byte_end":22929,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ impl Future for Flag {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":22934,"byte_end":22960,"line_start":245,"line_end":245,"column_start":5,"column_end":31}},{"value":"/     type Output = ();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":22965,"byte_end":22990,"line_start":246,"line_end":246,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":22995,"byte_end":22998,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/     fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<()> {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":23003,"byte_end":23076,"line_start":248,"line_end":248,"column_start":5,"column_end":78}},{"value":"/         // Register **before** checking `set` to avoid a race condition","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":23081,"byte_end":23156,"line_start":249,"line_end":249,"column_start":5,"column_end":80}},{"value":"/         // that would result in lost notifications.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":23161,"byte_end":23216,"line_start":250,"line_end":250,"column_start":5,"column_end":60}},{"value":"/         self.waker.register(cx.waker());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":23221,"byte_end":23265,"line_start":251,"line_end":251,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":23270,"byte_end":23273,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/         if self.set.load(Relaxed) {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":23278,"byte_end":23317,"line_start":253,"line_end":253,"column_start":5,"column_end":44}},{"value":"/             Poll::Ready(())","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":23322,"byte_end":23353,"line_start":254,"line_end":254,"column_start":5,"column_end":36}},{"value":"/         } else {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":23358,"byte_end":23378,"line_start":255,"line_end":255,"column_start":5,"column_end":25}},{"value":"/             Poll::Pending","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":23383,"byte_end":23412,"line_start":256,"line_end":256,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":23417,"byte_end":23430,"line_start":257,"line_end":257,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":23435,"byte_end":23444,"line_start":258,"line_end":258,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":23449,"byte_end":23454,"line_start":259,"line_end":259,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":23459,"byte_end":23466,"line_start":260,"line_end":260,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":28232,"byte_end":28236,"line_start":357,"line_end":357,"column_start":12,"column_end":16},"name":"wake","qualname":"<AtomicWaker>::wake","value":"pub fn wake(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Calls `wake` on the last `Waker` passed to `register`.","sig":null,"attributes":[{"value":"/ Calls `wake` on the last `Waker` passed to `register`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":28083,"byte_end":28141,"line_start":354,"line_end":354,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":28146,"byte_end":28149,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ If `register` has not been called yet, then this does nothing.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":28154,"byte_end":28220,"line_start":356,"line_end":356,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":28732,"byte_end":28736,"line_start":371,"line_end":371,"column_start":12,"column_end":16},"name":"take","qualname":"<AtomicWaker>::take","value":"pub fn take(&Self) -> Option<Waker>","parent":null,"children":[],"decl_id":null,"docs":" Returns the last `Waker` passed to `register`, so that the user can wake it.","sig":null,"attributes":[{"value":"/ Returns the last `Waker` passed to `register`, so that the user can wake it.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":28336,"byte_end":28416,"line_start":363,"line_end":363,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":28421,"byte_end":28424,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":28429,"byte_end":28432,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Sometimes, just waking the AtomicWaker is not fine grained enough. This allows the user","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":28437,"byte_end":28528,"line_start":366,"line_end":366,"column_start":5,"column_end":96}},{"value":"/ to take the waker and then wake it separately, rather than performing both steps in one","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":28533,"byte_end":28624,"line_start":367,"line_end":367,"column_start":5,"column_end":96}},{"value":"/ atomic action.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":28629,"byte_end":28647,"line_start":368,"line_end":368,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":28652,"byte_end":28655,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ If a waker has not been registered, this returns `None`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":28660,"byte_end":28720,"line_start":370,"line_end":370,"column_start":5,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":233},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","byte_start":1058,"byte_end":1067,"line_start":30,"line_end":30,"column_start":9,"column_end":18},"name":"__private","qualname":"::__private","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","parent":null,"children":[{"krate":0,"index":234}],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":2452,"byte_end":2455,"line_start":38,"line_end":38,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":2729,"byte_end":2730,"line_start":53,"line_end":53,"column_start":30,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":3506,"byte_end":3507,"line_start":76,"line_end":76,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":3874,"byte_end":3877,"line_start":93,"line_end":93,"column_start":59,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":4078,"byte_end":4094,"line_start":100,"line_end":100,"column_start":54,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":8910,"byte_end":8913,"line_start":118,"line_end":118,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":10065,"byte_end":10068,"line_start":156,"line_end":156,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":10342,"byte_end":10343,"line_start":171,"line_end":171,"column_start":30,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":11115,"byte_end":11116,"line_start":192,"line_end":192,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":11504,"byte_end":11507,"line_start":210,"line_end":210,"column_start":49,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":11913,"byte_end":11929,"line_start":226,"line_end":226,"column_start":44,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":12339,"byte_end":12342,"line_start":241,"line_end":241,"column_start":59,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":21125,"byte_end":21136,"line_start":198,"line_end":198,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":21306,"byte_end":21311,"line_start":203,"line_end":203,"column_start":29,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":29886,"byte_end":29897,"line_start":403,"line_end":403,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":29976,"byte_end":29987,"line_start":409,"line_end":409,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":30116,"byte_end":30127,"line_start":415,"line_end":415,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":30152,"byte_end":30163,"line_start":416,"line_end":416,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","byte_start":820,"byte_end":826,"line_start":19,"line_end":19,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","byte_start":908,"byte_end":914,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":76}},{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/lib.rs","byte_start":1009,"byte_end":1013,"line_start":26,"line_end":26,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":167}},{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/mod.rs","byte_start":12535,"byte_end":12545,"line_start":7,"line_end":7,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":170}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":2142,"byte_end":2148,"line_start":27,"line_end":27,"column_start":24,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":12043},"to":{"krate":0,"index":27}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":2452,"byte_end":2455,"line_start":38,"line_end":38,"column_start":25,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":2,"index":39872},"to":{"krate":0,"index":27}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":2729,"byte_end":2730,"line_start":53,"line_end":53,"column_start":30,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":41},"to":{"krate":0,"index":39}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":2930,"byte_end":2936,"line_start":58,"line_end":58,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":12043},"to":{"krate":0,"index":44}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":2959,"byte_end":2965,"line_start":58,"line_end":58,"column_start":51,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":39},"to":{"krate":0,"index":44}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":3506,"byte_end":3507,"line_start":76,"line_end":76,"column_start":29,"column_end":30},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":49},"to":{"krate":0,"index":44}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":3874,"byte_end":3877,"line_start":93,"line_end":93,"column_start":59,"column_end":62},"kind":{"Impl":{"id":3}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":27}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/future.rs","byte_start":4078,"byte_end":4094,"line_start":100,"line_end":100,"column_start":54,"column_end":70},"kind":{"Impl":{"id":4}},"from":{"krate":1,"index":6416},"to":{"krate":0,"index":27}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":8910,"byte_end":8913,"line_start":118,"line_end":118,"column_start":20,"column_end":23},"kind":{"Impl":{"id":5}},"from":{"krate":2,"index":39872},"to":{"krate":0,"index":96}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":9766,"byte_end":9772,"line_start":145,"line_end":145,"column_start":24,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":96},"to":{"krate":0,"index":110}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":10065,"byte_end":10068,"line_start":156,"line_end":156,"column_start":25,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":2,"index":39872},"to":{"krate":0,"index":110}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":10342,"byte_end":10343,"line_start":171,"line_end":171,"column_start":30,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":124},"to":{"krate":0,"index":122}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":10541,"byte_end":10547,"line_start":176,"line_end":176,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":0,"index":96},"to":{"krate":0,"index":127}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":10570,"byte_end":10576,"line_start":176,"line_end":176,"column_start":51,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":122},"to":{"krate":0,"index":127}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":11115,"byte_end":11116,"line_start":192,"line_end":192,"column_start":29,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":132},"to":{"krate":0,"index":127}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":11504,"byte_end":11507,"line_start":210,"line_end":210,"column_start":49,"column_end":52},"kind":{"Impl":{"id":9}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":96}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":11913,"byte_end":11929,"line_start":226,"line_end":226,"column_start":44,"column_end":60},"kind":{"Impl":{"id":10}},"from":{"krate":1,"index":6416},"to":{"krate":0,"index":96}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/stream.rs","byte_start":12339,"byte_end":12342,"line_start":241,"line_end":241,"column_start":59,"column_end":62},"kind":{"Impl":{"id":11}},"from":{"krate":5,"index":196},"to":{"krate":0,"index":110}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":21125,"byte_end":21136,"line_start":198,"line_end":198,"column_start":6,"column_end":17},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":21270,"byte_end":21274,"line_start":202,"line_end":202,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2837},"to":{"krate":0,"index":202}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":21306,"byte_end":21311,"line_start":203,"line_end":203,"column_start":29,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":2,"index":12325},"to":{"krate":0,"index":202}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":29886,"byte_end":29897,"line_start":403,"line_end":403,"column_start":18,"column_end":29},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":194},"to":{"krate":2,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":29976,"byte_end":29987,"line_start":409,"line_end":409,"column_start":21,"column_end":32},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":194},"to":{"krate":2,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":30116,"byte_end":30127,"line_start":415,"line_end":415,"column_start":22,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":194},"to":{"krate":2,"index":2825}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.13/src/task/__internal/atomic_waker.rs","byte_start":30152,"byte_end":30163,"line_start":416,"line_end":416,"column_start":22,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":194},"to":{"krate":2,"index":2837}}]}