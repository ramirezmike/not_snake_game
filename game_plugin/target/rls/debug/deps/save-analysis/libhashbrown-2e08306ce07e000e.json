{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1","program":"/home/mramirez/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","hashbrown","--edition=2018","/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"ahash\"","--cfg","feature=\"default\"","--cfg","feature=\"inline-more\"","--cfg","feature=\"raw\"","-C","metadata=2e08306ce07e000e","-C","extra-filename=-2e08306ce07e000e","--out-dir","/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps","-L","dependency=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps","--extern","ahash=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libahash-c5e88752c16d925b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/mramirez/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libhashbrown-2e08306ce07e000e.rmeta"},"prelude":{"crate_id":{"name":"hashbrown","disambiguator":[8298503007030453831,6187886020237225386]},"crate_root":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src","external_crates":[{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[17044353007700780372,2918200604221815240]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[15333840167806743833,9889193056877993824]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[4550415707075219492,6623162258675921486]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[8289379911494056514,13856099756999900329]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","num":5,"id":{"name":"ahash","disambiguator":[8167947935135209263,11163943892117107900]}}],"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":0,"byte_end":3193,"line_start":1,"line_end":112,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":1401,"byte_end":1402,"line_start":48,"line_end":48,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"RawDrain, RawIter, RawIntoIter, RawTable, Bucket","parent":{"krate":0,"index":8}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":1793,"byte_end":1794,"line_start":67,"line_end":67,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1504}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":2348,"byte_end":2349,"line_start":84,"line_end":84,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1506}},{"kind":"Use","ref_id":{"krate":0,"index":407},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":2731,"byte_end":2738,"line_start":97,"line_end":97,"column_start":21,"column_end":28},"alias_span":null,"name":"HashMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1176},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":2760,"byte_end":2767,"line_start":98,"line_end":98,"column_start":21,"column_end":28},"alias_span":null,"name":"HashSet","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":0,"byte_end":3193,"line_start":1,"line_end":112,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":1082},{"krate":0,"index":1111},{"krate":0,"index":1504},{"krate":0,"index":1506},{"krate":0,"index":1508},{"krate":0,"index":1511},{"krate":0,"index":1574},{"krate":0,"index":1579},{"krate":0,"index":1581},{"krate":0,"index":1582},{"krate":0,"index":1585},{"krate":0,"index":1586},{"krate":0,"index":1588}],"decl_id":null,"docs":" This crate is a Rust port of Google's high-performance [SwissTable] hash\n map, adapted to make it a drop-in replacement for Rust's standard `HashMap`\n and `HashSet` types.","sig":null,"attributes":[{"value":"/ This crate is a Rust port of Google's high-performance [SwissTable] hash","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":0,"byte_end":76,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/ map, adapted to make it a drop-in replacement for Rust's standard `HashMap`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":77,"byte_end":156,"line_start":2,"line_end":2,"column_start":1,"column_end":80}},{"value":"/ and `HashSet` types.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":157,"byte_end":181,"line_start":3,"line_end":3,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":182,"byte_end":185,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The original C++ version of [SwissTable] can be found [here], and this","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":186,"byte_end":260,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/ [CppCon talk] gives an overview of how the algorithm works.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":261,"byte_end":324,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":325,"byte_end":328,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [SwissTable]: https://abseil.io/blog/20180927-swisstables","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":329,"byte_end":390,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"/ [here]: https://github.com/abseil/abseil-cpp/blob/master/absl/container/internal/raw_hash_set.h","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":391,"byte_end":490,"line_start":9,"line_end":9,"column_start":1,"column_end":100}},{"value":"/ [CppCon talk]: https://www.youtube.com/watch?v=ncHmEUmJZf4","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":491,"byte_end":553,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"no_std","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":555,"byte_end":565,"line_start":12,"line_end":12,"column_start":1,"column_end":11}},{"value":"allow(clippy :: doc_markdown, clippy :: module_name_repetitions, clippy ::\n        must_use_candidate, clippy :: option_if_let_else)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":691,"byte_end":829,"line_start":17,"line_end":22,"column_start":1,"column_end":3}},{"value":"warn(missing_docs)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":830,"byte_end":852,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":853,"byte_end":879,"line_start":24,"line_end":24,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":8},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":1229,"byte_end":1232,"line_start":43,"line_end":43,"column_start":9,"column_end":12},"name":"raw","qualname":"::raw","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":348}],"decl_id":null,"docs":" Experimental and unsafe `RawTable` API. This module is only available if the\n `raw` feature is enabled.\n","sig":null,"attributes":[{"value":"cfg(feature = \"raw\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":1086,"byte_end":1109,"line_start":40,"line_end":40,"column_start":1,"column_end":24}},{"value":"/ Experimental and unsafe `RawTable` API. This module is only available if the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":1110,"byte_end":1190,"line_start":41,"line_end":41,"column_start":1,"column_end":81}},{"value":"/ `raw` feature is enabled.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":1191,"byte_end":1220,"line_start":42,"line_end":42,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":112},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":14673,"byte_end":14679,"line_start":272,"line_end":272,"column_start":12,"column_end":18},"name":"Bucket","qualname":"::raw::inner::Bucket","value":"Bucket {  }","parent":null,"children":[{"krate":0,"index":114}],"decl_id":null,"docs":" A reference to a hash table bucket containing a `T`.","sig":null,"attributes":[{"value":"/ A reference to a hash table bucket containing a `T`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":14410,"byte_end":14466,"line_start":267,"line_end":267,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":14467,"byte_end":14470,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ This is usually just a pointer to the element itself. However if the element","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":14471,"byte_end":14551,"line_start":269,"line_end":269,"column_start":1,"column_end":81}},{"value":"/ is a ZST, then we instead track the index of the element in the table so","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":14552,"byte_end":14628,"line_start":270,"line_end":270,"column_start":1,"column_end":77}},{"value":"/ that `erase` works properly.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":14629,"byte_end":14661,"line_start":271,"line_end":271,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":16039,"byte_end":16045,"line_start":313,"line_end":313,"column_start":19,"column_end":25},"name":"as_ptr","qualname":"<Bucket<T>>::as_ptr","value":"pub unsafe fn as_ptr(&Self) -> *mut T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":16012,"byte_end":16018,"line_start":312,"line_end":312,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":16718,"byte_end":16722,"line_start":333,"line_end":333,"column_start":19,"column_end":23},"name":"drop","qualname":"<Bucket<T>>::drop","value":"pub unsafe fn drop(&Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":16691,"byte_end":16697,"line_start":332,"line_end":332,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":16844,"byte_end":16848,"line_start":337,"line_end":337,"column_start":19,"column_end":23},"name":"read","qualname":"<Bucket<T>>::read","value":"pub unsafe fn read(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":16817,"byte_end":16823,"line_start":336,"line_end":336,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":16965,"byte_end":16970,"line_start":341,"line_end":341,"column_start":19,"column_end":24},"name":"write","qualname":"<Bucket<T>>::write","value":"pub unsafe fn write(&Self, T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":16938,"byte_end":16944,"line_start":340,"line_end":340,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":17095,"byte_end":17101,"line_start":345,"line_end":345,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Bucket<T>>::as_ref","value":"pub unsafe fn as_ref<'a>(&Self) -> &'a T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":17068,"byte_end":17074,"line_start":344,"line_end":344,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":17221,"byte_end":17227,"line_start":349,"line_end":349,"column_start":19,"column_end":25},"name":"as_mut","qualname":"<Bucket<T>>::as_mut","value":"pub unsafe fn as_mut<'a>(&Self) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":17194,"byte_end":17200,"line_start":348,"line_end":348,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":17355,"byte_end":17379,"line_start":353,"line_end":353,"column_start":19,"column_end":43},"name":"copy_from_nonoverlapping","qualname":"<Bucket<T>>::copy_from_nonoverlapping","value":"pub unsafe fn copy_from_nonoverlapping(&Self, &Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":17328,"byte_end":17334,"line_start":352,"line_end":352,"column_start":41,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":134},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":17531,"byte_end":17539,"line_start":359,"line_end":359,"column_start":12,"column_end":20},"name":"RawTable","qualname":"::raw::inner::RawTable","value":"RawTable {  }","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140}],"decl_id":null,"docs":" A raw hash table with an unsafe API.\n","sig":null,"attributes":[{"value":"/ A raw hash table with an unsafe API.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":17479,"byte_end":17519,"line_start":358,"line_end":358,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":18483,"byte_end":18486,"line_start":385,"line_end":385,"column_start":18,"column_end":21},"name":"new","qualname":"<RawTable<T>>::new","value":"pub const fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty hash table without allocating any memory.","sig":null,"attributes":[{"value":"/ Creates a new empty hash table without allocating any memory.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":18107,"byte_end":18172,"line_start":379,"line_end":379,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":18177,"byte_end":18180,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ In effect this returns a table with exactly 1 bucket. However we can","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":18185,"byte_end":18257,"line_start":381,"line_end":381,"column_start":5,"column_end":77}},{"value":"/ leave the data pointer dangling since that bucket is never written to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":18262,"byte_end":18335,"line_start":382,"line_end":382,"column_start":5,"column_end":78}},{"value":"/ due to our load factor forcing us to always have at least 1 free bucket.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":18340,"byte_end":18416,"line_start":383,"line_end":383,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":18457,"byte_end":18463,"line_start":384,"line_end":384,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":20909,"byte_end":20926,"line_start":451,"line_end":451,"column_start":12,"column_end":29},"name":"try_with_capacity","qualname":"<RawTable<T>>::try_with_capacity","value":"pub fn try_with_capacity(usize) -> Result<Self, TryReserveError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to allocate a new hash table with at least enough capacity\n for inserting the given number of elements without reallocating.\n","sig":null,"attributes":[{"value":"/ Attempts to allocate a new hash table with at least enough capacity","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":20725,"byte_end":20796,"line_start":448,"line_end":448,"column_start":5,"column_end":76}},{"value":"/ for inserting the given number of elements without reallocating.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":20801,"byte_end":20869,"line_start":449,"line_end":449,"column_start":5,"column_end":73}},{"value":"cfg(feature = \"raw\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":20874,"byte_end":20897,"line_start":450,"line_end":450,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":21205,"byte_end":21218,"line_start":457,"line_end":457,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<RawTable<T>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allocates a new hash table with at least enough capacity for inserting\n the given number of elements without reallocating.\n","sig":null,"attributes":[{"value":"/ Allocates a new hash table with at least enough capacity for inserting","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":21060,"byte_end":21134,"line_start":455,"line_end":455,"column_start":5,"column_end":79}},{"value":"/ the given number of elements without reallocating.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":21139,"byte_end":21193,"line_start":456,"line_end":456,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":22106,"byte_end":22114,"line_start":478,"line_end":478,"column_start":19,"column_end":27},"name":"data_end","qualname":"<RawTable<T>>::data_end","value":"pub unsafe fn data_end(&Self) -> NonNull<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns pointer to one past last element of data table.\n","sig":null,"attributes":[{"value":"/ Returns pointer to one past last element of data table.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":21979,"byte_end":22038,"line_start":476,"line_end":476,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":22079,"byte_end":22085,"line_start":477,"line_end":477,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":22574,"byte_end":22586,"line_start":491,"line_end":491,"column_start":19,"column_end":31},"name":"bucket_index","qualname":"<RawTable<T>>::bucket_index","value":"pub unsafe fn bucket_index(&Self, &Bucket<T>) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of a bucket from a `Bucket`.\n","sig":null,"attributes":[{"value":"/ Returns the index of a bucket from a `Bucket`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":22456,"byte_end":22506,"line_start":489,"line_end":489,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":22547,"byte_end":22553,"line_start":490,"line_end":490,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":23045,"byte_end":23051,"line_start":504,"line_end":504,"column_start":19,"column_end":25},"name":"bucket","qualname":"<RawTable<T>>::bucket","value":"pub unsafe fn bucket(&Self, usize) -> Bucket<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to an element in the table.\n","sig":null,"attributes":[{"value":"/ Returns a pointer to an element in the table.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":22928,"byte_end":22977,"line_start":502,"line_end":502,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":23018,"byte_end":23024,"line_start":503,"line_end":503,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":23447,"byte_end":23460,"line_start":513,"line_end":513,"column_start":19,"column_end":32},"name":"erase_no_drop","qualname":"<RawTable<T>>::erase_no_drop","value":"pub unsafe fn erase_no_drop(&mut Self, &Bucket<T>)","parent":null,"children":[],"decl_id":null,"docs":" Erases an element from the table without dropping it.\n","sig":null,"attributes":[{"value":"/ Erases an element from the table without dropping it.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":23249,"byte_end":23306,"line_start":510,"line_end":510,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":23347,"byte_end":23353,"line_start":511,"line_end":511,"column_start":41,"column_end":47}},{"value":"deprecated(since = \"0.8.1\", note = \"use erase or remove instead\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":23360,"byte_end":23428,"line_start":512,"line_end":512,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":24790,"byte_end":24795,"line_start":542,"line_end":542,"column_start":19,"column_end":24},"name":"erase","qualname":"<RawTable<T>>::erase","value":"pub unsafe fn erase(&mut Self, Bucket<T>)","parent":null,"children":[],"decl_id":null,"docs":" Erases an element from the table, dropping it in place.\n","sig":null,"attributes":[{"value":"/ Erases an element from the table, dropping it in place.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":24593,"byte_end":24652,"line_start":538,"line_end":538,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":24693,"byte_end":24699,"line_start":539,"line_end":539,"column_start":41,"column_end":47}},{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":24706,"byte_end":24746,"line_start":540,"line_end":540,"column_start":5,"column_end":45}},{"value":"allow(deprecated)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":24751,"byte_end":24771,"line_start":541,"line_end":541,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":25171,"byte_end":25182,"line_start":552,"line_end":552,"column_start":12,"column_end":23},"name":"erase_entry","qualname":"<RawTable<T>>::erase_entry","value":"pub fn erase_entry<impl FnMut(&T) -> bool: FnMut(&T) ->\n                   bool>(&mut Self, u64, impl FnMut(&T) -> bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Finds and erases an element from the table, dropping it in place.\n Returns true if an element was found.\n","sig":null,"attributes":[{"value":"/ Finds and erases an element from the table, dropping it in place.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":24967,"byte_end":25036,"line_start":548,"line_end":548,"column_start":5,"column_end":74}},{"value":"/ Returns true if an element was found.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":25041,"byte_end":25082,"line_start":549,"line_end":549,"column_start":5,"column_end":46}},{"value":"cfg(feature = \"raw\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":25087,"byte_end":25110,"line_start":550,"line_end":550,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":25151,"byte_end":25157,"line_start":551,"line_end":551,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":25659,"byte_end":25665,"line_start":566,"line_end":566,"column_start":19,"column_end":25},"name":"remove","qualname":"<RawTable<T>>::remove","value":"pub unsafe fn remove(&mut Self, Bucket<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Removes an element from the table, returning it.\n","sig":null,"attributes":[{"value":"/ Removes an element from the table, returning it.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":25469,"byte_end":25521,"line_start":562,"line_end":562,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":25562,"byte_end":25568,"line_start":563,"line_end":563,"column_start":41,"column_end":47}},{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":25575,"byte_end":25615,"line_start":564,"line_end":564,"column_start":5,"column_end":45}},{"value":"allow(deprecated)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":25620,"byte_end":25640,"line_start":565,"line_end":565,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":25890,"byte_end":25902,"line_start":573,"line_end":573,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<RawTable<T>>::remove_entry","value":"pub fn remove_entry<impl FnMut(&T) -> bool: FnMut(&T) ->\n                    bool>(&mut Self, u64, impl FnMut(&T) -> bool) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Finds and removes an element from the table, returning it.\n","sig":null,"attributes":[{"value":"/ Finds and removes an element from the table, returning it.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":25767,"byte_end":25829,"line_start":571,"line_end":571,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":25870,"byte_end":25876,"line_start":572,"line_end":572,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":29966,"byte_end":29979,"line_start":663,"line_end":663,"column_start":12,"column_end":25},"name":"clear_no_drop","qualname":"<RawTable<T>>::clear_no_drop","value":"pub fn clear_no_drop(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Marks all table buckets as empty without dropping their contents.\n","sig":null,"attributes":[{"value":"/ Marks all table buckets as empty without dropping their contents.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":29836,"byte_end":29905,"line_start":661,"line_end":661,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":29946,"byte_end":29952,"line_start":662,"line_end":662,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":30391,"byte_end":30396,"line_start":675,"line_end":675,"column_start":12,"column_end":17},"name":"clear","qualname":"<RawTable<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Removes all elements from the table without freeing the backing memory.\n","sig":null,"attributes":[{"value":"/ Removes all elements from the table without freeing the backing memory.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":30255,"byte_end":30330,"line_start":673,"line_end":673,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":30371,"byte_end":30377,"line_start":674,"line_end":674,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":30881,"byte_end":30890,"line_start":690,"line_end":690,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<RawTable<T>>::shrink_to","value":"pub fn shrink_to<impl Fn(&T) -> u64: Fn(&T) ->\n                 u64>(&mut Self, usize, impl Fn(&T) -> u64)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the table to fit `max(self.len(), min_size)` elements.\n","sig":null,"attributes":[{"value":"/ Shrinks the table to fit `max(self.len(), min_size)` elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":30754,"byte_end":30820,"line_start":688,"line_end":688,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":30861,"byte_end":30867,"line_start":689,"line_end":689,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":32349,"byte_end":32356,"line_start":728,"line_end":728,"column_start":12,"column_end":19},"name":"reserve","qualname":"<RawTable<T>>::reserve","value":"pub fn reserve<impl Fn(&T) -> u64: Fn(&T) ->\n               u64>(&mut Self, usize, impl Fn(&T) -> u64)","parent":null,"children":[],"decl_id":null,"docs":" Ensures that at least `additional` items can be inserted into the table\n without reallocation.\n","sig":null,"attributes":[{"value":"/ Ensures that at least `additional` items can be inserted into the table","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":32183,"byte_end":32258,"line_start":725,"line_end":725,"column_start":5,"column_end":80}},{"value":"/ without reallocation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":32263,"byte_end":32288,"line_start":726,"line_end":726,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":32329,"byte_end":32335,"line_start":727,"line_end":727,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":32936,"byte_end":32947,"line_start":743,"line_end":743,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<RawTable<T>>::try_reserve","value":"pub fn try_reserve<impl Fn(&T) -> u64: Fn(&T) ->\n                   u64>(&mut Self, usize, impl Fn(&T) -> u64)\n-> Result<(), TryReserveError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to ensure that at least `additional` items can be inserted into\n the table without reallocation.\n","sig":null,"attributes":[{"value":"/ Tries to ensure that at least `additional` items can be inserted into","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":32762,"byte_end":32835,"line_start":740,"line_end":740,"column_start":5,"column_end":78}},{"value":"/ the table without reallocation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":32840,"byte_end":32875,"line_start":741,"line_end":741,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":32916,"byte_end":32922,"line_start":742,"line_end":742,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":41401,"byte_end":41407,"line_start":941,"line_end":941,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawTable<T>>::insert","value":"pub fn insert<impl Fn(&T) -> u64: Fn(&T) ->\n              u64>(&mut Self, u64, T, impl Fn(&T) -> u64) -> Bucket<T>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new element into the table, and returns its raw bucket.","sig":null,"attributes":[{"value":"/ Inserts a new element into the table, and returns its raw bucket.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":41185,"byte_end":41254,"line_start":937,"line_end":937,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":41259,"byte_end":41262,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ This does not check if the given element already exists in the table.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":41267,"byte_end":41340,"line_start":939,"line_end":939,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":41381,"byte_end":41387,"line_start":940,"line_end":940,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":42498,"byte_end":42510,"line_start":967,"line_end":967,"column_start":12,"column_end":24},"name":"insert_entry","qualname":"<RawTable<T>>::insert_entry","value":"pub fn insert_entry<impl Fn(&T) -> u64: Fn(&T) ->\n                    u64>(&mut Self, u64, T, impl Fn(&T) -> u64) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new element into the table, and returns a mutable reference to it.","sig":null,"attributes":[{"value":"/ Inserts a new element into the table, and returns a mutable reference to it.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":42271,"byte_end":42351,"line_start":963,"line_end":963,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":42356,"byte_end":42359,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ This does not check if the given element already exists in the table.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":42364,"byte_end":42437,"line_start":965,"line_end":965,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":42478,"byte_end":42484,"line_start":966,"line_end":966,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":43018,"byte_end":43032,"line_start":978,"line_end":978,"column_start":12,"column_end":26},"name":"insert_no_grow","qualname":"<RawTable<T>>::insert_no_grow","value":"pub fn insert_no_grow(&mut Self, u64, T) -> Bucket<T>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new element into the table, without growing the table.","sig":null,"attributes":[{"value":"/ Inserts a new element into the table, without growing the table.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":42655,"byte_end":42723,"line_start":971,"line_end":971,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":42728,"byte_end":42731,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ There must be enough space in the table to insert the new element.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":42736,"byte_end":42806,"line_start":973,"line_end":973,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":42811,"byte_end":42814,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ This does not check if the given element already exists in the table.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":42819,"byte_end":42892,"line_start":975,"line_end":975,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":42933,"byte_end":42939,"line_start":976,"line_end":976,"column_start":41,"column_end":47}},{"value":"cfg(any(feature = \"raw\", feature = \"rustc-internal-api\"))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":42946,"byte_end":43006,"line_start":977,"line_end":977,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":43941,"byte_end":43960,"line_start":1002,"line_end":1002,"column_start":19,"column_end":38},"name":"replace_bucket_with","qualname":"<RawTable<T>>::replace_bucket_with","value":"pub unsafe fn replace_bucket_with<F>(&mut Self, Bucket<T>, F) -> bool where\nF: FnOnce(T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Temporary removes a bucket, applying the given function to the removed\n element and optionally put back the returned value in the same bucket.","sig":null,"attributes":[{"value":"/ Temporary removes a bucket, applying the given function to the removed","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":43571,"byte_end":43645,"line_start":995,"line_end":995,"column_start":5,"column_end":79}},{"value":"/ element and optionally put back the returned value in the same bucket.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":43650,"byte_end":43724,"line_start":996,"line_end":996,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":43729,"byte_end":43732,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if the bucket still contains an element","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":43737,"byte_end":43795,"line_start":998,"line_end":998,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":43800,"byte_end":43803,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ This does not check if the given bucket is actually occupied.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":43808,"byte_end":43873,"line_start":1000,"line_end":1000,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":43914,"byte_end":43920,"line_start":1001,"line_end":1001,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":44630,"byte_end":44634,"line_start":1024,"line_end":1024,"column_start":12,"column_end":16},"name":"find","qualname":"<RawTable<T>>::find","value":"pub fn find<impl FnMut(&T) -> bool: FnMut(&T) ->\n            bool>(&Self, u64, impl FnMut(&T) -> bool) -> Option<Bucket<T>>","parent":null,"children":[],"decl_id":null,"docs":" Searches for an element in the table.\n","sig":null,"attributes":[{"value":"/ Searches for an element in the table.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":44563,"byte_end":44604,"line_start":1022,"line_end":1022,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":44609,"byte_end":44618,"line_start":1023,"line_end":1023,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":45039,"byte_end":45042,"line_start":1038,"line_end":1038,"column_start":12,"column_end":15},"name":"get","qualname":"<RawTable<T>>::get","value":"pub fn get<impl FnMut(&T) -> bool: FnMut(&T) ->\n           bool>(&Self, u64, impl FnMut(&T) -> bool) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to an element in the table.\n","sig":null,"attributes":[{"value":"/ Gets a reference to an element in the table.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":44965,"byte_end":45013,"line_start":1036,"line_end":1036,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":45018,"byte_end":45027,"line_start":1037,"line_end":1037,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":45390,"byte_end":45397,"line_start":1048,"line_end":1048,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RawTable<T>>::get_mut","value":"pub fn get_mut<impl FnMut(&T) -> bool: FnMut(&T) ->\n               bool>(&mut Self, u64, impl FnMut(&T) -> bool) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to an element in the table.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to an element in the table.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":45308,"byte_end":45364,"line_start":1046,"line_end":1046,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":45369,"byte_end":45378,"line_start":1047,"line_end":1047,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":45954,"byte_end":45962,"line_start":1061,"line_end":1061,"column_start":12,"column_end":20},"name":"capacity","qualname":"<RawTable<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the map can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the map can hold without reallocating.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":45671,"byte_end":45744,"line_start":1056,"line_end":1056,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":45749,"byte_end":45752,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ This number is a lower bound; the table might be able to hold","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":45757,"byte_end":45822,"line_start":1058,"line_end":1058,"column_start":5,"column_end":70}},{"value":"/ more, but is guaranteed to be able to hold at least this many.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":45827,"byte_end":45893,"line_start":1059,"line_end":1059,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":45934,"byte_end":45940,"line_start":1060,"line_end":1060,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":46139,"byte_end":46142,"line_start":1067,"line_end":1067,"column_start":12,"column_end":15},"name":"len","qualname":"<RawTable<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the table.\n","sig":null,"attributes":[{"value":"/ Returns the number of elements in the table.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":46030,"byte_end":46078,"line_start":1065,"line_end":1065,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":46119,"byte_end":46125,"line_start":1066,"line_end":1066,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":46299,"byte_end":46306,"line_start":1073,"line_end":1073,"column_start":12,"column_end":19},"name":"buckets","qualname":"<RawTable<T>>::buckets","value":"pub fn buckets(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of buckets in the table.\n","sig":null,"attributes":[{"value":"/ Returns the number of buckets in the table.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":46191,"byte_end":46238,"line_start":1071,"line_end":1071,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":46279,"byte_end":46285,"line_start":1072,"line_end":1072,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":47127,"byte_end":47131,"line_start":1095,"line_end":1095,"column_start":19,"column_end":23},"name":"iter","qualname":"<RawTable<T>>::iter","value":"pub unsafe fn iter(&Self) -> RawIter<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over every element in the table. It is up to\n the caller to ensure that the `RawTable` outlives the `RawIter`.\n Because we cannot make the `next` method unsafe on the `RawIter`\n struct, we have to make the `iter` method unsafe.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over every element in the table. It is up to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":46787,"byte_end":46855,"line_start":1090,"line_end":1090,"column_start":5,"column_end":73}},{"value":"/ the caller to ensure that the `RawTable` outlives the `RawIter`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":46860,"byte_end":46928,"line_start":1091,"line_end":1091,"column_start":5,"column_end":73}},{"value":"/ Because we cannot make the `next` method unsafe on the `RawIter`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":46933,"byte_end":47001,"line_start":1092,"line_end":1092,"column_start":5,"column_end":73}},{"value":"/ struct, we have to make the `iter` method unsafe.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":47006,"byte_end":47059,"line_start":1093,"line_end":1093,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":47100,"byte_end":47106,"line_start":1094,"line_end":1094,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":47836,"byte_end":47845,"line_start":1111,"line_end":1111,"column_start":19,"column_end":28},"name":"iter_hash","qualname":"<RawTable<T>>::iter_hash","value":"pub unsafe fn iter_hash(&Self, u64) -> RawIterHash<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over occupied buckets that could match a given hash.","sig":null,"attributes":[{"value":"/ Returns an iterator over occupied buckets that could match a given hash.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":47368,"byte_end":47444,"line_start":1103,"line_end":1103,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":47449,"byte_end":47452,"line_start":1104,"line_end":1104,"column_start":5,"column_end":8}},{"value":"/ In rare cases, the iterator may return a bucket with a different hash.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":47457,"byte_end":47531,"line_start":1105,"line_end":1105,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":47536,"byte_end":47539,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ It is up to the caller to ensure that the `RawTable` outlives the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":47544,"byte_end":47613,"line_start":1107,"line_end":1107,"column_start":5,"column_end":74}},{"value":"/ `RawIterHash`. Because we cannot make the `next` method unsafe on the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":47618,"byte_end":47691,"line_start":1108,"line_end":1108,"column_start":5,"column_end":78}},{"value":"/ `RawIterHash` struct, we have to make the `iter_hash` method unsafe.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":47696,"byte_end":47768,"line_start":1109,"line_end":1109,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":47809,"byte_end":47815,"line_start":1110,"line_end":1110,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":48098,"byte_end":48103,"line_start":1118,"line_end":1118,"column_start":12,"column_end":17},"name":"drain","qualname":"<RawTable<T>>::drain","value":"pub fn drain(&mut Self) -> RawDrain<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator which removes all elements from the table without\n freeing the memory.\n","sig":null,"attributes":[{"value":"/ Returns an iterator which removes all elements from the table without","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":47936,"byte_end":48009,"line_start":1115,"line_end":1115,"column_start":5,"column_end":78}},{"value":"/ freeing the memory.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":48014,"byte_end":48037,"line_start":1116,"line_end":1116,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":48078,"byte_end":48084,"line_start":1117,"line_end":1117,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":48647,"byte_end":48662,"line_start":1133,"line_end":1133,"column_start":19,"column_end":34},"name":"drain_iter_from","qualname":"<RawTable<T>>::drain_iter_from","value":"pub unsafe fn drain_iter_from(&mut Self, RawIter<T>) -> RawDrain<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator which removes all elements from the table without\n freeing the memory.","sig":null,"attributes":[{"value":"/ Returns an iterator which removes all elements from the table without","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":48249,"byte_end":48322,"line_start":1125,"line_end":1125,"column_start":5,"column_end":78}},{"value":"/ freeing the memory.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":48327,"byte_end":48350,"line_start":1126,"line_end":1126,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":48355,"byte_end":48358,"line_start":1127,"line_end":1127,"column_start":5,"column_end":8}},{"value":"/ Iteration starts at the provided iterator's current location.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":48363,"byte_end":48428,"line_start":1128,"line_end":1128,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":48433,"byte_end":48436,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ It is up to the caller to ensure that the iterator is valid for this","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":48441,"byte_end":48513,"line_start":1130,"line_end":1130,"column_start":5,"column_end":77}},{"value":"/ `RawTable` and covers all items that remain in the table.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":48518,"byte_end":48579,"line_start":1131,"line_end":1131,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":48620,"byte_end":48626,"line_start":1132,"line_end":1132,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":49285,"byte_end":49299,"line_start":1149,"line_end":1149,"column_start":19,"column_end":33},"name":"into_iter_from","qualname":"<RawTable<T>>::into_iter_from","value":"pub unsafe fn into_iter_from(Self, RawIter<T>) -> RawIntoIter<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator which consumes all elements from the table.","sig":null,"attributes":[{"value":"/ Returns an iterator which consumes all elements from the table.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":48970,"byte_end":49037,"line_start":1143,"line_end":1143,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":49042,"byte_end":49045,"line_start":1144,"line_end":1144,"column_start":5,"column_end":8}},{"value":"/ Iteration starts at the provided iterator's current location.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":49050,"byte_end":49115,"line_start":1145,"line_end":1145,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":49120,"byte_end":49123,"line_start":1146,"line_end":1146,"column_start":5,"column_end":8}},{"value":"/ It is up to the caller to ensure that the iterator is valid for this","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":49128,"byte_end":49200,"line_start":1147,"line_end":1147,"column_start":5,"column_end":77}},{"value":"/ `RawTable` and covers all items that remain in the table.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":49205,"byte_end":49266,"line_start":1148,"line_end":1148,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":55449,"byte_end":55471,"line_start":1319,"line_end":1319,"column_start":12,"column_end":34},"name":"clone_from_with_hasher","qualname":"<RawTable<T>>::clone_from_with_hasher","value":"pub fn clone_from_with_hasher<impl Fn(&T) -> u64: Fn(&T) ->\n                              u64>(&mut Self, &Self, impl Fn(&T) -> u64)","parent":null,"children":[],"decl_id":null,"docs":" Variant of `clone_from` to use when a hasher is available.\n","sig":null,"attributes":[{"value":"/ Variant of `clone_from` to use when a hasher is available.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":55347,"byte_end":55409,"line_start":1317,"line_end":1317,"column_start":5,"column_end":67}},{"value":"cfg(feature = \"raw\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":55414,"byte_end":55437,"line_start":1318,"line_end":1318,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":259},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":64499,"byte_end":64506,"line_start":1563,"line_end":1563,"column_start":12,"column_end":19},"name":"RawIter","qualname":"::raw::inner::RawIter","value":"RawIter {  }","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262}],"decl_id":null,"docs":" Iterator which returns a raw pointer to every full bucket in the table.","sig":null,"attributes":[{"value":"/ Iterator which returns a raw pointer to every full bucket in the table.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":63692,"byte_end":63767,"line_start":1551,"line_end":1551,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":63768,"byte_end":63771,"line_start":1552,"line_end":1552,"column_start":1,"column_end":4}},{"value":"/ For maximum flexibility this iterator is not bound by a lifetime, but you","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":63772,"byte_end":63849,"line_start":1553,"line_end":1553,"column_start":1,"column_end":78}},{"value":"/ must observe several rules when using it:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":63850,"byte_end":63895,"line_start":1554,"line_end":1554,"column_start":1,"column_end":46}},{"value":"/ - You must not free the hash table while iterating (including via growing/shrinking).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":63896,"byte_end":63985,"line_start":1555,"line_end":1555,"column_start":1,"column_end":90}},{"value":"/ - It is fine to erase a bucket that has been yielded by the iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":63986,"byte_end":64059,"line_start":1556,"line_end":1556,"column_start":1,"column_end":74}},{"value":"/ - Erasing a bucket that has not yet been yielded by the iterator may still","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":64060,"byte_end":64138,"line_start":1557,"line_end":1557,"column_start":1,"column_end":79}},{"value":"/   result in the iterator yielding that bucket (unless `reflect_remove` is called).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":64139,"byte_end":64225,"line_start":1558,"line_end":1558,"column_start":1,"column_end":87}},{"value":"/ - It is unspecified whether an element inserted after the iterator was","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":64226,"byte_end":64300,"line_start":1559,"line_end":1559,"column_start":1,"column_end":75}},{"value":"/   created will be yielded by that iterator (unless `reflect_insert` is called).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":64301,"byte_end":64384,"line_start":1560,"line_end":1560,"column_start":1,"column_end":84}},{"value":"/ - The order in which the iterator yields bucket is unspecified and may","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":64385,"byte_end":64459,"line_start":1561,"line_end":1561,"column_start":1,"column_end":75}},{"value":"/   change in the future.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":64460,"byte_end":64487,"line_start":1562,"line_end":1562,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":65049,"byte_end":65063,"line_start":1577,"line_end":1577,"column_start":12,"column_end":26},"name":"reflect_remove","qualname":"<RawIter<T>>::reflect_remove","value":"pub fn reflect_remove(&mut Self, &Bucket<T>)","parent":null,"children":[],"decl_id":null,"docs":" Refresh the iterator so that it reflects a removal from the given bucket.","sig":null,"attributes":[{"value":"/ Refresh the iterator so that it reflects a removal from the given bucket.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":64596,"byte_end":64673,"line_start":1569,"line_end":1569,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":64678,"byte_end":64681,"line_start":1570,"line_end":1570,"column_start":5,"column_end":8}},{"value":"/ For the iterator to remain valid, this method must be called once","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":64686,"byte_end":64755,"line_start":1571,"line_end":1571,"column_start":5,"column_end":74}},{"value":"/ for each removed bucket before `next` is called again.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":64760,"byte_end":64818,"line_start":1572,"line_end":1572,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":64823,"byte_end":64826,"line_start":1573,"line_end":1573,"column_start":5,"column_end":8}},{"value":"/ This method should be called _before_ the removal is made. It is not necessary to call this","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":64831,"byte_end":64926,"line_start":1574,"line_end":1574,"column_start":5,"column_end":100}},{"value":"/ method if you are removing an item that this iterator yielded in the past.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":64931,"byte_end":65009,"line_start":1575,"line_end":1575,"column_start":5,"column_end":83}},{"value":"cfg(feature = \"raw\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":65014,"byte_end":65037,"line_start":1576,"line_end":1576,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":65649,"byte_end":65663,"line_start":1591,"line_end":1591,"column_start":12,"column_end":26},"name":"reflect_insert","qualname":"<RawIter<T>>::reflect_insert","value":"pub fn reflect_insert(&mut Self, &Bucket<T>)","parent":null,"children":[],"decl_id":null,"docs":" Refresh the iterator so that it reflects an insertion into the given bucket.","sig":null,"attributes":[{"value":"/ Refresh the iterator so that it reflects an insertion into the given bucket.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":65147,"byte_end":65227,"line_start":1581,"line_end":1581,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":65232,"byte_end":65235,"line_start":1582,"line_end":1582,"column_start":5,"column_end":8}},{"value":"/ For the iterator to remain valid, this method must be called once","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":65240,"byte_end":65309,"line_start":1583,"line_end":1583,"column_start":5,"column_end":74}},{"value":"/ for each insert before `next` is called again.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":65314,"byte_end":65364,"line_start":1584,"line_end":1584,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":65369,"byte_end":65372,"line_start":1585,"line_end":1585,"column_start":5,"column_end":8}},{"value":"/ This method does not guarantee that an insertion of a bucket witha greater","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":65377,"byte_end":65455,"line_start":1586,"line_end":1586,"column_start":5,"column_end":83}},{"value":"/ index than the last one yielded will be reflected in the iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":65460,"byte_end":65530,"line_start":1587,"line_end":1587,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":65535,"byte_end":65538,"line_start":1588,"line_end":1588,"column_start":5,"column_end":8}},{"value":"/ This method should be called _after_ the given insert is made.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":65543,"byte_end":65609,"line_start":1589,"line_end":1589,"column_start":5,"column_end":71}},{"value":"cfg(feature = \"raw\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":65614,"byte_end":65637,"line_start":1590,"line_end":1590,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":280},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":71556,"byte_end":71567,"line_start":1723,"line_end":1723,"column_start":12,"column_end":23},"name":"RawIntoIter","qualname":"::raw::inner::RawIntoIter","value":"RawIntoIter {  }","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284}],"decl_id":null,"docs":" Iterator which consumes a table and returns elements.\n","sig":null,"attributes":[{"value":"/ Iterator which consumes a table and returns elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":71487,"byte_end":71544,"line_start":1722,"line_end":1722,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":71753,"byte_end":71757,"line_start":1731,"line_end":1731,"column_start":12,"column_end":16},"name":"iter","qualname":"<RawIntoIter<T>>::iter","value":"pub fn iter(&Self) -> RawIter<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":71733,"byte_end":71739,"line_start":1730,"line_end":1730,"column_start":41,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":304},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":73568,"byte_end":73576,"line_start":1796,"line_end":1796,"column_start":12,"column_end":20},"name":"RawDrain","qualname":"::raw::inner::RawDrain","value":"RawDrain {  }","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310}],"decl_id":null,"docs":" Iterator which consumes elements without freeing the table storage.\n","sig":null,"attributes":[{"value":"/ Iterator which consumes elements without freeing the table storage.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":73485,"byte_end":73556,"line_start":1795,"line_end":1795,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":74095,"byte_end":74099,"line_start":1812,"line_end":1812,"column_start":12,"column_end":16},"name":"iter","qualname":"<RawDrain>::iter","value":"pub fn iter(&Self) -> RawIter<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":74075,"byte_end":74081,"line_start":1811,"line_end":1811,"column_start":41,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":330},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":75648,"byte_end":75659,"line_start":1866,"line_end":1866,"column_start":12,"column_end":23},"name":"RawIterHash","qualname":"::raw::inner::RawIterHash","value":"RawIterHash {  }","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338}],"decl_id":null,"docs":" Iterator over occupied buckets that could match a given hash.","sig":null,"attributes":[{"value":"/ Iterator over occupied buckets that could match a given hash.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":75492,"byte_end":75557,"line_start":1863,"line_end":1863,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":75558,"byte_end":75561,"line_start":1864,"line_end":1864,"column_start":1,"column_end":4}},{"value":"/ In rare cases, the iterator may return a bucket with a different hash.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":75562,"byte_end":75636,"line_start":1865,"line_end":1865,"column_start":1,"column_end":75}}]},{"kind":"Type","id":{"krate":0,"index":406},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":81735,"byte_end":81753,"line_start":13,"line_end":13,"column_start":10,"column_end":28},"name":"DefaultHashBuilder","qualname":"::map::DefaultHashBuilder","value":"ahash::RandomState","parent":null,"children":[],"decl_id":null,"docs":" Default hasher for `HashMap`.\n","sig":null,"attributes":[{"value":"/ Default hasher for `HashMap`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":81666,"byte_end":81699,"line_start":11,"line_end":11,"column_start":1,"column_end":34}},{"value":"cfg(feature = \"ahash\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":81700,"byte_end":81725,"line_start":12,"line_end":12,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":407},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":88146,"byte_end":88153,"line_start":188,"line_end":188,"column_start":12,"column_end":19},"name":"HashMap","qualname":"::map::HashMap","value":"HashMap {  }","parent":null,"children":[{"krate":0,"index":411},{"krate":0,"index":412}],"decl_id":null,"docs":" A hash map implemented with quadratic probing and SIMD lookup.","sig":null,"attributes":[{"value":"/ A hash map implemented with quadratic probing and SIMD lookup.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":81880,"byte_end":81946,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":81947,"byte_end":81950,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The default hashing algorithm is currently [`AHash`], though this is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":81951,"byte_end":82023,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ subject to change at any point in the future. This hash function is very","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":82024,"byte_end":82100,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ fast for all types of keys, but this algorithm will typically *not* protect","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":82101,"byte_end":82180,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ against attacks such as HashDoS.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":82181,"byte_end":82217,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":82218,"byte_end":82221,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The hashing algorithm can be replaced on a per-`HashMap` basis using the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":82222,"byte_end":82298,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ [`default`], [`with_hasher`], and [`with_capacity_and_hasher`] methods. Many","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":82299,"byte_end":82379,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ alternative algorithms are available on crates.io, such as the [`fnv`] crate.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":82380,"byte_end":82461,"line_start":28,"line_end":28,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":82462,"byte_end":82465,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ It is required that the keys implement the [`Eq`] and [`Hash`] traits, although","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":82466,"byte_end":82549,"line_start":30,"line_end":30,"column_start":1,"column_end":84}},{"value":"/ this can frequently be achieved by using `#[derive(PartialEq, Eq, Hash)]`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":82550,"byte_end":82628,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/ If you implement these yourself, it is important that the following","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":82629,"byte_end":82700,"line_start":32,"line_end":32,"column_start":1,"column_end":72}},{"value":"/ property holds:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":82701,"byte_end":82720,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":82721,"byte_end":82724,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":82725,"byte_end":82736,"line_start":35,"line_end":35,"column_start":1,"column_end":12}},{"value":"/ k1 == k2 -> hash(k1) == hash(k2)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":82737,"byte_end":82773,"line_start":36,"line_end":36,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":82774,"byte_end":82781,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":82782,"byte_end":82785,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ In other words, if two keys are equal, their hashes must be equal.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":82786,"byte_end":82856,"line_start":39,"line_end":39,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":82857,"byte_end":82860,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ It is a logic error for a key to be modified in such a way that the key's","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":82861,"byte_end":82938,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ hash, as determined by the [`Hash`] trait, or its equality, as determined by","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":82939,"byte_end":83019,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ the [`Eq`] trait, changes while it is in the map. This is normally only","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":83020,"byte_end":83095,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/ possible through [`Cell`], [`RefCell`], global state, I/O, or unsafe code.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":83096,"byte_end":83174,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":83175,"byte_end":83178,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ It is also a logic error for the [`Hash`] implementation of a key to panic.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":83179,"byte_end":83258,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ This is generally only possible if the trait is implemented manually. If a","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":83259,"byte_end":83337,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/ panic does occur then the contents of the `HashMap` may become corrupted and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":83338,"byte_end":83418,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"/ some items may be dropped from the table.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":83419,"byte_end":83464,"line_start":49,"line_end":49,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":83465,"byte_end":83468,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":83469,"byte_end":83483,"line_start":51,"line_end":51,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":83484,"byte_end":83487,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":83488,"byte_end":83495,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":83496,"byte_end":83523,"line_start":54,"line_end":54,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":83524,"byte_end":83527,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ // Type inference lets us omit an explicit type signature (which","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":83528,"byte_end":83596,"line_start":56,"line_end":56,"column_start":1,"column_end":69}},{"value":"/ // would be `HashMap<String, String>` in this example).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":83597,"byte_end":83656,"line_start":57,"line_end":57,"column_start":1,"column_end":60}},{"value":"/ let mut book_reviews = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":83657,"byte_end":83699,"line_start":58,"line_end":58,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":83700,"byte_end":83703,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ // Review some books.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":83704,"byte_end":83729,"line_start":60,"line_end":60,"column_start":1,"column_end":26}},{"value":"/ book_reviews.insert(","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":83730,"byte_end":83754,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/     \"Adventures of Huckleberry Finn\".to_string(),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":83755,"byte_end":83808,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"/     \"My favorite book.\".to_string(),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":83809,"byte_end":83849,"line_start":63,"line_end":63,"column_start":1,"column_end":41}},{"value":"/ );","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":83850,"byte_end":83856,"line_start":64,"line_end":64,"column_start":1,"column_end":7}},{"value":"/ book_reviews.insert(","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":83857,"byte_end":83881,"line_start":65,"line_end":65,"column_start":1,"column_end":25}},{"value":"/     \"Grimms' Fairy Tales\".to_string(),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":83882,"byte_end":83924,"line_start":66,"line_end":66,"column_start":1,"column_end":43}},{"value":"/     \"Masterpiece.\".to_string(),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":83925,"byte_end":83960,"line_start":67,"line_end":67,"column_start":1,"column_end":36}},{"value":"/ );","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":83961,"byte_end":83967,"line_start":68,"line_end":68,"column_start":1,"column_end":7}},{"value":"/ book_reviews.insert(","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":83968,"byte_end":83992,"line_start":69,"line_end":69,"column_start":1,"column_end":25}},{"value":"/     \"Pride and Prejudice\".to_string(),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":83993,"byte_end":84035,"line_start":70,"line_end":70,"column_start":1,"column_end":43}},{"value":"/     \"Very enjoyable.\".to_string(),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":84036,"byte_end":84074,"line_start":71,"line_end":71,"column_start":1,"column_end":39}},{"value":"/ );","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":84075,"byte_end":84081,"line_start":72,"line_end":72,"column_start":1,"column_end":7}},{"value":"/ book_reviews.insert(","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":84082,"byte_end":84106,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/     \"The Adventures of Sherlock Holmes\".to_string(),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":84107,"byte_end":84163,"line_start":74,"line_end":74,"column_start":1,"column_end":57}},{"value":"/     \"Eye lyked it alot.\".to_string(),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":84164,"byte_end":84205,"line_start":75,"line_end":75,"column_start":1,"column_end":42}},{"value":"/ );","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":84206,"byte_end":84212,"line_start":76,"line_end":76,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":84213,"byte_end":84216,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ // Check for a specific one.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":84217,"byte_end":84249,"line_start":78,"line_end":78,"column_start":1,"column_end":33}},{"value":"/ // When collections store owned values (String), they can still be","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":84250,"byte_end":84320,"line_start":79,"line_end":79,"column_start":1,"column_end":71}},{"value":"/ // queried using references (&str).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":84321,"byte_end":84360,"line_start":80,"line_end":80,"column_start":1,"column_end":40}},{"value":"/ if !book_reviews.contains_key(\"Les Misérables\") {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":84361,"byte_end":84415,"line_start":81,"line_end":81,"column_start":1,"column_end":54}},{"value":"/     println!(\"We've got {} reviews, but Les Misérables ain't one.\",","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":84416,"byte_end":84488,"line_start":82,"line_end":82,"column_start":1,"column_end":72}},{"value":"/              book_reviews.len());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":84489,"byte_end":84526,"line_start":83,"line_end":83,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":84527,"byte_end":84532,"line_start":84,"line_end":84,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":84533,"byte_end":84536,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ // oops, this review has a lot of spelling mistakes, let's delete it.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":84537,"byte_end":84610,"line_start":86,"line_end":86,"column_start":1,"column_end":74}},{"value":"/ book_reviews.remove(\"The Adventures of Sherlock Holmes\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":84611,"byte_end":84672,"line_start":87,"line_end":87,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":84673,"byte_end":84676,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ // Look up the values associated with some keys.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":84677,"byte_end":84729,"line_start":89,"line_end":89,"column_start":1,"column_end":53}},{"value":"/ let to_find = [\"Pride and Prejudice\", \"Alice's Adventure in Wonderland\"];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":84730,"byte_end":84807,"line_start":90,"line_end":90,"column_start":1,"column_end":78}},{"value":"/ for &book in &to_find {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":84808,"byte_end":84835,"line_start":91,"line_end":91,"column_start":1,"column_end":28}},{"value":"/     match book_reviews.get(book) {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":84836,"byte_end":84874,"line_start":92,"line_end":92,"column_start":1,"column_end":39}},{"value":"/         Some(review) => println!(\"{}: {}\", book, review),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":84875,"byte_end":84936,"line_start":93,"line_end":93,"column_start":1,"column_end":62}},{"value":"/         None => println!(\"{} is unreviewed.\", book)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":84937,"byte_end":84992,"line_start":94,"line_end":94,"column_start":1,"column_end":56}},{"value":"/     }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":84993,"byte_end":85002,"line_start":95,"line_end":95,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":85003,"byte_end":85008,"line_start":96,"line_end":96,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":85009,"byte_end":85012,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ // Look up the value for a key (will panic if the key is not found).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":85013,"byte_end":85085,"line_start":98,"line_end":98,"column_start":1,"column_end":73}},{"value":"/ println!(\"Review for Jane: {}\", book_reviews[\"Pride and Prejudice\"]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":85086,"byte_end":85159,"line_start":99,"line_end":99,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":85160,"byte_end":85163,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ // Iterate over everything.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":85164,"byte_end":85195,"line_start":101,"line_end":101,"column_start":1,"column_end":32}},{"value":"/ for (book, review) in &book_reviews {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":85196,"byte_end":85237,"line_start":102,"line_end":102,"column_start":1,"column_end":42}},{"value":"/     println!(\"{}: \\\"{}\\\"\", book, review);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":85238,"byte_end":85283,"line_start":103,"line_end":103,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":85284,"byte_end":85289,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":85290,"byte_end":85297,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":85298,"byte_end":85301,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ `HashMap` also implements an [`Entry API`](#method.entry), which allows","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":85302,"byte_end":85377,"line_start":107,"line_end":107,"column_start":1,"column_end":76}},{"value":"/ for more complex methods of getting, setting, updating and removing keys and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":85378,"byte_end":85458,"line_start":108,"line_end":108,"column_start":1,"column_end":81}},{"value":"/ their values:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":85459,"byte_end":85476,"line_start":109,"line_end":109,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":85477,"byte_end":85480,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":85481,"byte_end":85488,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":85489,"byte_end":85516,"line_start":112,"line_end":112,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":85517,"byte_end":85520,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ // type inference lets us omit an explicit type signature (which","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":85521,"byte_end":85589,"line_start":114,"line_end":114,"column_start":1,"column_end":69}},{"value":"/ // would be `HashMap<&str, u8>` in this example).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":85590,"byte_end":85643,"line_start":115,"line_end":115,"column_start":1,"column_end":54}},{"value":"/ let mut player_stats = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":85644,"byte_end":85686,"line_start":116,"line_end":116,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":85687,"byte_end":85690,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ fn random_stat_buff() -> u8 {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":85691,"byte_end":85724,"line_start":118,"line_end":118,"column_start":1,"column_end":34}},{"value":"/     // could actually return some random value here - let's just return","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":85725,"byte_end":85800,"line_start":119,"line_end":119,"column_start":1,"column_end":76}},{"value":"/     // some fixed value for now","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":85801,"byte_end":85836,"line_start":120,"line_end":120,"column_start":1,"column_end":36}},{"value":"/     42","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":85837,"byte_end":85847,"line_start":121,"line_end":121,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":85848,"byte_end":85853,"line_start":122,"line_end":122,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":85854,"byte_end":85857,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ // insert a key only if it doesn't already exist","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":85858,"byte_end":85910,"line_start":124,"line_end":124,"column_start":1,"column_end":53}},{"value":"/ player_stats.entry(\"health\").or_insert(100);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":85911,"byte_end":85959,"line_start":125,"line_end":125,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":85960,"byte_end":85963,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ // insert a key using a function that provides a new value only if it","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":85964,"byte_end":86037,"line_start":127,"line_end":127,"column_start":1,"column_end":74}},{"value":"/ // doesn't already exist","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":86038,"byte_end":86066,"line_start":128,"line_end":128,"column_start":1,"column_end":29}},{"value":"/ player_stats.entry(\"defence\").or_insert_with(random_stat_buff);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":86067,"byte_end":86134,"line_start":129,"line_end":129,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":86135,"byte_end":86138,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ // update a key, guarding against the key possibly not being set","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":86139,"byte_end":86207,"line_start":131,"line_end":131,"column_start":1,"column_end":69}},{"value":"/ let stat = player_stats.entry(\"attack\").or_insert(100);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":86208,"byte_end":86267,"line_start":132,"line_end":132,"column_start":1,"column_end":60}},{"value":"/ *stat += random_stat_buff();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":86268,"byte_end":86300,"line_start":133,"line_end":133,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":86301,"byte_end":86308,"line_start":134,"line_end":134,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":86309,"byte_end":86312,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ The easiest way to use `HashMap` with a custom key type is to derive [`Eq`] and [`Hash`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":86313,"byte_end":86406,"line_start":136,"line_end":136,"column_start":1,"column_end":94}},{"value":"/ We must also derive [`PartialEq`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":86407,"byte_end":86445,"line_start":137,"line_end":137,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":86446,"byte_end":86449,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":86450,"byte_end":86509,"line_start":139,"line_end":139,"column_start":1,"column_end":60}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":86510,"byte_end":86574,"line_start":140,"line_end":140,"column_start":1,"column_end":65}},{"value":"/ [`PartialEq`]: https://doc.rust-lang.org/std/cmp/trait.PartialEq.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":86575,"byte_end":86648,"line_start":141,"line_end":141,"column_start":1,"column_end":74}},{"value":"/ [`RefCell`]: https://doc.rust-lang.org/std/cell/struct.RefCell.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":86649,"byte_end":86720,"line_start":142,"line_end":142,"column_start":1,"column_end":72}},{"value":"/ [`Cell`]: https://doc.rust-lang.org/std/cell/struct.Cell.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":86721,"byte_end":86786,"line_start":143,"line_end":143,"column_start":1,"column_end":66}},{"value":"/ [`default`]: #method.default","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":86787,"byte_end":86819,"line_start":144,"line_end":144,"column_start":1,"column_end":33}},{"value":"/ [`with_hasher`]: #method.with_hasher","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":86820,"byte_end":86860,"line_start":145,"line_end":145,"column_start":1,"column_end":41}},{"value":"/ [`with_capacity_and_hasher`]: #method.with_capacity_and_hasher","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":86861,"byte_end":86927,"line_start":146,"line_end":146,"column_start":1,"column_end":67}},{"value":"/ [`fnv`]: https://crates.io/crates/fnv","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":86928,"byte_end":86969,"line_start":147,"line_end":147,"column_start":1,"column_end":42}},{"value":"/ [`AHash`]: https://crates.io/crates/ahash","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":86970,"byte_end":87015,"line_start":148,"line_end":148,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87016,"byte_end":87019,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87020,"byte_end":87027,"line_start":150,"line_end":150,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87028,"byte_end":87055,"line_start":151,"line_end":151,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87056,"byte_end":87059,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ #[derive(Hash, Eq, PartialEq, Debug)]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87060,"byte_end":87101,"line_start":153,"line_end":153,"column_start":1,"column_end":42}},{"value":"/ struct Viking {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87102,"byte_end":87121,"line_start":154,"line_end":154,"column_start":1,"column_end":20}},{"value":"/     name: String,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87122,"byte_end":87143,"line_start":155,"line_end":155,"column_start":1,"column_end":22}},{"value":"/     country: String,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87144,"byte_end":87168,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87169,"byte_end":87174,"line_start":157,"line_end":157,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87175,"byte_end":87178,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ impl Viking {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87179,"byte_end":87196,"line_start":159,"line_end":159,"column_start":1,"column_end":18}},{"value":"/     /// Creates a new Viking.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87197,"byte_end":87230,"line_start":160,"line_end":160,"column_start":1,"column_end":34}},{"value":"/     fn new(name: &str, country: &str) -> Viking {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87231,"byte_end":87284,"line_start":161,"line_end":161,"column_start":1,"column_end":54}},{"value":"/         Viking { name: name.to_string(), country: country.to_string() }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87285,"byte_end":87360,"line_start":162,"line_end":162,"column_start":1,"column_end":76}},{"value":"/     }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87361,"byte_end":87370,"line_start":163,"line_end":163,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87371,"byte_end":87376,"line_start":164,"line_end":164,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87377,"byte_end":87380,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ // Use a HashMap to store the vikings' health points.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87381,"byte_end":87438,"line_start":166,"line_end":166,"column_start":1,"column_end":58}},{"value":"/ let mut vikings = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87439,"byte_end":87476,"line_start":167,"line_end":167,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87477,"byte_end":87480,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ vikings.insert(Viking::new(\"Einar\", \"Norway\"), 25);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87481,"byte_end":87536,"line_start":169,"line_end":169,"column_start":1,"column_end":56}},{"value":"/ vikings.insert(Viking::new(\"Olaf\", \"Denmark\"), 24);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87537,"byte_end":87592,"line_start":170,"line_end":170,"column_start":1,"column_end":56}},{"value":"/ vikings.insert(Viking::new(\"Harald\", \"Iceland\"), 12);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87593,"byte_end":87650,"line_start":171,"line_end":171,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87651,"byte_end":87654,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ // Use derived implementation to print the status of the vikings.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87655,"byte_end":87724,"line_start":173,"line_end":173,"column_start":1,"column_end":70}},{"value":"/ for (viking, health) in &vikings {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87725,"byte_end":87763,"line_start":174,"line_end":174,"column_start":1,"column_end":39}},{"value":"/     println!(\"{:?} has {} hp\", viking, health);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87764,"byte_end":87815,"line_start":175,"line_end":175,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87816,"byte_end":87821,"line_start":176,"line_end":176,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87822,"byte_end":87829,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87830,"byte_end":87833,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ A `HashMap` with fixed list of elements can be initialized from an array:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87834,"byte_end":87911,"line_start":179,"line_end":179,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87912,"byte_end":87915,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87916,"byte_end":87923,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87924,"byte_end":87951,"line_start":182,"line_end":182,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87952,"byte_end":87955,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ let timber_resources: HashMap<&str, i32> = [(\"Norway\", 100), (\"Denmark\", 50), (\"Iceland\", 10)]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":87956,"byte_end":88054,"line_start":184,"line_end":184,"column_start":1,"column_end":99}},{"value":"/     .iter().cloned().collect();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":88055,"byte_end":88090,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/ // use the values stored in map","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":88091,"byte_end":88126,"line_start":186,"line_end":186,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":88127,"byte_end":88134,"line_start":187,"line_end":187,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89410,"byte_end":89413,"line_start":230,"line_end":230,"column_start":12,"column_end":15},"name":"new","qualname":"<HashMap<K, V, DefaultHashBuilder>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap`.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89032,"byte_end":89063,"line_start":218,"line_end":218,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89068,"byte_end":89071,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ The hash map is initially created with a capacity of 0, so it will not allocate until it","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89076,"byte_end":89168,"line_start":220,"line_end":220,"column_start":5,"column_end":97}},{"value":"/ is first inserted into.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89173,"byte_end":89200,"line_start":221,"line_end":221,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89205,"byte_end":89208,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89213,"byte_end":89227,"line_start":223,"line_end":223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89232,"byte_end":89235,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89240,"byte_end":89247,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89252,"byte_end":89279,"line_start":226,"line_end":226,"column_start":5,"column_end":32}},{"value":"/ let mut map: HashMap<&str, i32> = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89284,"byte_end":89337,"line_start":227,"line_end":227,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89342,"byte_end":89349,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89390,"byte_end":89396,"line_start":229,"line_end":229,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89903,"byte_end":89916,"line_start":246,"line_end":246,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<HashMap<K, V, DefaultHashBuilder>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap` with the specified capacity.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89461,"byte_end":89520,"line_start":234,"line_end":234,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89525,"byte_end":89528,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ The hash map will be able to hold at least `capacity` elements without","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89533,"byte_end":89607,"line_start":236,"line_end":236,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash map will not allocate.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89612,"byte_end":89681,"line_start":237,"line_end":237,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89686,"byte_end":89689,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89694,"byte_end":89708,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89713,"byte_end":89716,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89721,"byte_end":89728,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89733,"byte_end":89760,"line_start":242,"line_end":242,"column_start":5,"column_end":32}},{"value":"/ let mut map: HashMap<&str, i32> = HashMap::with_capacity(10);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89765,"byte_end":89830,"line_start":243,"line_end":243,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89835,"byte_end":89842,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":89883,"byte_end":89889,"line_start":245,"line_end":245,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91077,"byte_end":91088,"line_start":278,"line_end":278,"column_start":18,"column_end":29},"name":"with_hasher","qualname":"<HashMap<K, V, S>>::with_hasher","value":"pub const fn with_hasher(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` which will use the given hash builder to hash\n keys.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap` which will use the given hash builder to hash","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90070,"byte_end":90146,"line_start":252,"line_end":252,"column_start":5,"column_end":81}},{"value":"/ keys.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90151,"byte_end":90160,"line_start":253,"line_end":253,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90165,"byte_end":90168,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ The created map has the default initial capacity.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90173,"byte_end":90226,"line_start":255,"line_end":255,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90231,"byte_end":90234,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ Warning: `hash_builder` is normally randomly generated, and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90239,"byte_end":90302,"line_start":257,"line_end":257,"column_start":5,"column_end":68}},{"value":"/ is designed to allow HashMaps to be resistant to attacks that","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90307,"byte_end":90372,"line_start":258,"line_end":258,"column_start":5,"column_end":70}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90377,"byte_end":90440,"line_start":259,"line_end":259,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90445,"byte_end":90509,"line_start":260,"line_end":260,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90514,"byte_end":90517,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The `hash_builder` passed should implement the [`BuildHasher`] trait for","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90522,"byte_end":90598,"line_start":262,"line_end":262,"column_start":5,"column_end":81}},{"value":"/ the HashMap to be useful, see its documentation for details.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90603,"byte_end":90667,"line_start":263,"line_end":263,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90672,"byte_end":90675,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90680,"byte_end":90694,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90699,"byte_end":90702,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90707,"byte_end":90714,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90719,"byte_end":90746,"line_start":268,"line_end":268,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90751,"byte_end":90799,"line_start":269,"line_end":269,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90804,"byte_end":90807,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90812,"byte_end":90854,"line_start":271,"line_end":271,"column_start":5,"column_end":47}},{"value":"/ let mut map = HashMap::with_hasher(s);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90859,"byte_end":90901,"line_start":272,"line_end":272,"column_start":5,"column_end":47}},{"value":"/ map.insert(1, 2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90906,"byte_end":90927,"line_start":273,"line_end":273,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90932,"byte_end":90939,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90944,"byte_end":90947,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: ../../std/hash/trait.BuildHasher.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90952,"byte_end":91010,"line_start":276,"line_end":276,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91051,"byte_end":91057,"line_start":277,"line_end":277,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92343,"byte_end":92367,"line_start":312,"line_end":312,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<HashMap<K, V, S>>::with_capacity_and_hasher","value":"pub fn with_capacity_and_hasher(usize, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashMap` with the specified capacity, using `hash_builder`\n to hash the keys.","sig":null,"attributes":[{"value":"/ Creates an empty `HashMap` with the specified capacity, using `hash_builder`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91214,"byte_end":91294,"line_start":285,"line_end":285,"column_start":5,"column_end":85}},{"value":"/ to hash the keys.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91299,"byte_end":91320,"line_start":286,"line_end":286,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91325,"byte_end":91328,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ The hash map will be able to hold at least `capacity` elements without","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91333,"byte_end":91407,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash map will not allocate.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91412,"byte_end":91481,"line_start":289,"line_end":289,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91486,"byte_end":91489,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ Warning: `hash_builder` is normally randomly generated, and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91494,"byte_end":91557,"line_start":291,"line_end":291,"column_start":5,"column_end":68}},{"value":"/ is designed to allow HashMaps to be resistant to attacks that","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91562,"byte_end":91627,"line_start":292,"line_end":292,"column_start":5,"column_end":70}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91632,"byte_end":91695,"line_start":293,"line_end":293,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91700,"byte_end":91764,"line_start":294,"line_end":294,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91769,"byte_end":91772,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ The `hash_builder` passed should implement the [`BuildHasher`] trait for","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91777,"byte_end":91853,"line_start":296,"line_end":296,"column_start":5,"column_end":81}},{"value":"/ the HashMap to be useful, see its documentation for details.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91858,"byte_end":91922,"line_start":297,"line_end":297,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91927,"byte_end":91930,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91935,"byte_end":91949,"line_start":299,"line_end":299,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91954,"byte_end":91957,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91962,"byte_end":91969,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":91974,"byte_end":92001,"line_start":302,"line_end":302,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92006,"byte_end":92054,"line_start":303,"line_end":303,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92059,"byte_end":92062,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92067,"byte_end":92109,"line_start":305,"line_end":305,"column_start":5,"column_end":47}},{"value":"/ let mut map = HashMap::with_capacity_and_hasher(10, s);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92114,"byte_end":92173,"line_start":306,"line_end":306,"column_start":5,"column_end":64}},{"value":"/ map.insert(1, 2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92178,"byte_end":92199,"line_start":307,"line_end":307,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92204,"byte_end":92211,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92216,"byte_end":92219,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: ../../std/hash/trait.BuildHasher.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92224,"byte_end":92282,"line_start":310,"line_end":310,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92323,"byte_end":92329,"line_start":311,"line_end":311,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93060,"byte_end":93066,"line_start":334,"line_end":334,"column_start":12,"column_end":18},"name":"hasher","qualname":"<HashMap<K, V, S>>::hasher","value":"pub fn hasher(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the map's [`BuildHasher`].","sig":null,"attributes":[{"value":"/ Returns a reference to the map's [`BuildHasher`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92528,"byte_end":92581,"line_start":319,"line_end":319,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92586,"byte_end":92589,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92594,"byte_end":92672,"line_start":321,"line_end":321,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92677,"byte_end":92680,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92685,"byte_end":92699,"line_start":323,"line_end":323,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92704,"byte_end":92707,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92712,"byte_end":92719,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92724,"byte_end":92751,"line_start":326,"line_end":326,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92756,"byte_end":92804,"line_start":327,"line_end":327,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92809,"byte_end":92812,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ let hasher = DefaultHashBuilder::default();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92817,"byte_end":92864,"line_start":329,"line_end":329,"column_start":5,"column_end":52}},{"value":"/ let map: HashMap<i32, i32> = HashMap::with_hasher(hasher);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92869,"byte_end":92931,"line_start":330,"line_end":330,"column_start":5,"column_end":67}},{"value":"/ let hasher: &DefaultHashBuilder = map.hasher();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92936,"byte_end":92987,"line_start":331,"line_end":331,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":92992,"byte_end":92999,"line_start":332,"line_end":332,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93040,"byte_end":93046,"line_start":333,"line_end":333,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93610,"byte_end":93618,"line_start":351,"line_end":351,"column_start":12,"column_end":20},"name":"capacity","qualname":"<HashMap<K, V, S>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the map can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the map can hold without reallocating.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93120,"byte_end":93193,"line_start":338,"line_end":338,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93198,"byte_end":93201,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ This number is a lower bound; the `HashMap<K, V>` might be able to hold","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93206,"byte_end":93281,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ more, but is guaranteed to be able to hold at least this many.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93286,"byte_end":93352,"line_start":341,"line_end":341,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93357,"byte_end":93360,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93365,"byte_end":93379,"line_start":343,"line_end":343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93384,"byte_end":93387,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93392,"byte_end":93399,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93404,"byte_end":93431,"line_start":346,"line_end":346,"column_start":5,"column_end":32}},{"value":"/ let map: HashMap<i32, i32> = HashMap::with_capacity(100);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93436,"byte_end":93497,"line_start":347,"line_end":347,"column_start":5,"column_end":66}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93502,"byte_end":93537,"line_start":348,"line_end":348,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93542,"byte_end":93549,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93590,"byte_end":93596,"line_start":350,"line_end":350,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94142,"byte_end":94146,"line_start":373,"line_end":373,"column_start":12,"column_end":16},"name":"keys","qualname":"<HashMap<K, V, S>>::keys","value":"pub fn keys(&Self) -> Keys<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all keys in arbitrary order.\n The iterator element type is `&'a K`.","sig":null,"attributes":[{"value":"/ An iterator visiting all keys in arbitrary order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93678,"byte_end":93731,"line_start":355,"line_end":355,"column_start":5,"column_end":58}},{"value":"/ The iterator element type is `&'a K`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93736,"byte_end":93777,"line_start":356,"line_end":356,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93782,"byte_end":93785,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93790,"byte_end":93804,"line_start":358,"line_end":358,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93809,"byte_end":93812,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93817,"byte_end":93824,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93829,"byte_end":93856,"line_start":361,"line_end":361,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93861,"byte_end":93864,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93869,"byte_end":93902,"line_start":363,"line_end":363,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93907,"byte_end":93930,"line_start":364,"line_end":364,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93935,"byte_end":93958,"line_start":365,"line_end":365,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93963,"byte_end":93986,"line_start":366,"line_end":366,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93991,"byte_end":93994,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ for key in map.keys() {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":93999,"byte_end":94026,"line_start":368,"line_end":368,"column_start":5,"column_end":32}},{"value":"/     println!(\"{}\", key);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94031,"byte_end":94059,"line_start":369,"line_end":369,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94064,"byte_end":94069,"line_start":370,"line_end":370,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94074,"byte_end":94081,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94122,"byte_end":94128,"line_start":372,"line_end":372,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94689,"byte_end":94695,"line_start":395,"line_end":395,"column_start":12,"column_end":18},"name":"values","qualname":"<HashMap<K, V, S>>::values","value":"pub fn values(&Self) -> Values<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values in arbitrary order.\n The iterator element type is `&'a V`.","sig":null,"attributes":[{"value":"/ An iterator visiting all values in arbitrary order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94221,"byte_end":94276,"line_start":377,"line_end":377,"column_start":5,"column_end":60}},{"value":"/ The iterator element type is `&'a V`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94281,"byte_end":94322,"line_start":378,"line_end":378,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94327,"byte_end":94330,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94335,"byte_end":94349,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94354,"byte_end":94357,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94362,"byte_end":94369,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94374,"byte_end":94401,"line_start":383,"line_end":383,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94406,"byte_end":94409,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94414,"byte_end":94447,"line_start":385,"line_end":385,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94452,"byte_end":94475,"line_start":386,"line_end":386,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94480,"byte_end":94503,"line_start":387,"line_end":387,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94508,"byte_end":94531,"line_start":388,"line_end":388,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94536,"byte_end":94539,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ for val in map.values() {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94544,"byte_end":94573,"line_start":390,"line_end":390,"column_start":5,"column_end":34}},{"value":"/     println!(\"{}\", val);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94578,"byte_end":94606,"line_start":391,"line_end":391,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94611,"byte_end":94616,"line_start":392,"line_end":392,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94621,"byte_end":94628,"line_start":393,"line_end":393,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94669,"byte_end":94675,"line_start":394,"line_end":394,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95348,"byte_end":95358,"line_start":422,"line_end":422,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<HashMap<K, V, S>>::values_mut","value":"pub fn values_mut(&mut Self) -> ValuesMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all values mutably in arbitrary order.\n The iterator element type is `&'a mut V`.","sig":null,"attributes":[{"value":"/ An iterator visiting all values mutably in arbitrary order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94774,"byte_end":94837,"line_start":399,"line_end":399,"column_start":5,"column_end":68}},{"value":"/ The iterator element type is `&'a mut V`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94842,"byte_end":94887,"line_start":400,"line_end":400,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94892,"byte_end":94895,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94900,"byte_end":94914,"line_start":402,"line_end":402,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94919,"byte_end":94922,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94927,"byte_end":94934,"line_start":404,"line_end":404,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94939,"byte_end":94966,"line_start":405,"line_end":405,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94971,"byte_end":94974,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":94979,"byte_end":95012,"line_start":407,"line_end":407,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95017,"byte_end":95020,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95025,"byte_end":95048,"line_start":409,"line_end":409,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95053,"byte_end":95076,"line_start":410,"line_end":410,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95081,"byte_end":95104,"line_start":411,"line_end":411,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95109,"byte_end":95112,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ for val in map.values_mut() {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95117,"byte_end":95150,"line_start":413,"line_end":413,"column_start":5,"column_end":38}},{"value":"/     *val = *val + 10;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95155,"byte_end":95180,"line_start":414,"line_end":414,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95185,"byte_end":95190,"line_start":415,"line_end":415,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95195,"byte_end":95198,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ for val in map.values() {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95203,"byte_end":95232,"line_start":417,"line_end":417,"column_start":5,"column_end":34}},{"value":"/     println!(\"{}\", val);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95237,"byte_end":95265,"line_start":418,"line_end":418,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95270,"byte_end":95275,"line_start":419,"line_end":419,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95280,"byte_end":95287,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95328,"byte_end":95334,"line_start":421,"line_end":421,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95981,"byte_end":95985,"line_start":446,"line_end":446,"column_start":12,"column_end":16},"name":"iter","qualname":"<HashMap<K, V, S>>::iter","value":"pub fn iter(&Self) -> Iter<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs in arbitrary order.\n The iterator element type is `(&'a K, &'a V)`.","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs in arbitrary order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95472,"byte_end":95536,"line_start":428,"line_end":428,"column_start":5,"column_end":69}},{"value":"/ The iterator element type is `(&'a K, &'a V)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95541,"byte_end":95591,"line_start":429,"line_end":429,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95596,"byte_end":95599,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95604,"byte_end":95618,"line_start":431,"line_end":431,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95623,"byte_end":95626,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95631,"byte_end":95638,"line_start":433,"line_end":433,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95643,"byte_end":95670,"line_start":434,"line_end":434,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95675,"byte_end":95678,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95683,"byte_end":95716,"line_start":436,"line_end":436,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95721,"byte_end":95744,"line_start":437,"line_end":437,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95749,"byte_end":95772,"line_start":438,"line_end":438,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95777,"byte_end":95800,"line_start":439,"line_end":439,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95805,"byte_end":95808,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ for (key, val) in map.iter() {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95813,"byte_end":95847,"line_start":441,"line_end":441,"column_start":5,"column_end":39}},{"value":"/     println!(\"key: {} val: {}\", key, val);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95852,"byte_end":95898,"line_start":442,"line_end":442,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95903,"byte_end":95908,"line_start":443,"line_end":443,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95913,"byte_end":95920,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":95961,"byte_end":95967,"line_start":445,"line_end":445,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96885,"byte_end":96893,"line_start":480,"line_end":480,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<HashMap<K, V, S>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all key-value pairs in arbitrary order,\n with mutable references to the values.\n The iterator element type is `(&'a K, &'a mut V)`.","sig":null,"attributes":[{"value":"/ An iterator visiting all key-value pairs in arbitrary order,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96220,"byte_end":96284,"line_start":456,"line_end":456,"column_start":5,"column_end":69}},{"value":"/ with mutable references to the values.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96289,"byte_end":96331,"line_start":457,"line_end":457,"column_start":5,"column_end":47}},{"value":"/ The iterator element type is `(&'a K, &'a mut V)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96336,"byte_end":96390,"line_start":458,"line_end":458,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96395,"byte_end":96398,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96403,"byte_end":96417,"line_start":460,"line_end":460,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96422,"byte_end":96425,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96430,"byte_end":96437,"line_start":462,"line_end":462,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96442,"byte_end":96469,"line_start":463,"line_end":463,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96474,"byte_end":96477,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96482,"byte_end":96515,"line_start":465,"line_end":465,"column_start":5,"column_end":38}},{"value":"/ map.insert(\"a\", 1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96520,"byte_end":96543,"line_start":466,"line_end":466,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"b\", 2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96548,"byte_end":96571,"line_start":467,"line_end":467,"column_start":5,"column_end":28}},{"value":"/ map.insert(\"c\", 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96576,"byte_end":96599,"line_start":468,"line_end":468,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96604,"byte_end":96607,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ // Update all values","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96612,"byte_end":96636,"line_start":470,"line_end":470,"column_start":5,"column_end":29}},{"value":"/ for (_, val) in map.iter_mut() {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96641,"byte_end":96677,"line_start":471,"line_end":471,"column_start":5,"column_end":41}},{"value":"/     *val *= 2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96682,"byte_end":96700,"line_start":472,"line_end":472,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96705,"byte_end":96710,"line_start":473,"line_end":473,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96715,"byte_end":96718,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ for (key, val) in &map {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96723,"byte_end":96751,"line_start":475,"line_end":475,"column_start":5,"column_end":33}},{"value":"/     println!(\"key: {} val: {}\", key, val);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96756,"byte_end":96802,"line_start":476,"line_end":476,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96807,"byte_end":96812,"line_start":477,"line_end":477,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96817,"byte_end":96824,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":96865,"byte_end":96871,"line_start":479,"line_end":479,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97610,"byte_end":97613,"line_start":509,"line_end":509,"column_start":12,"column_end":15},"name":"len","qualname":"<HashMap<K, V, S>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the map.","sig":null,"attributes":[{"value":"/ Returns the number of elements in the map.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97278,"byte_end":97324,"line_start":496,"line_end":496,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97329,"byte_end":97332,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97337,"byte_end":97351,"line_start":498,"line_end":498,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97356,"byte_end":97359,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97364,"byte_end":97371,"line_start":500,"line_end":500,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97376,"byte_end":97403,"line_start":501,"line_end":501,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97408,"byte_end":97411,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97416,"byte_end":97447,"line_start":503,"line_end":503,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(a.len(), 0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97452,"byte_end":97479,"line_start":504,"line_end":504,"column_start":5,"column_end":32}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97484,"byte_end":97505,"line_start":505,"line_end":505,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(a.len(), 1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97510,"byte_end":97537,"line_start":506,"line_end":506,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97542,"byte_end":97549,"line_start":507,"line_end":507,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97590,"byte_end":97596,"line_start":508,"line_end":508,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98004,"byte_end":98012,"line_start":526,"line_end":526,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<HashMap<K, V, S>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains no elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97668,"byte_end":97719,"line_start":513,"line_end":513,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97724,"byte_end":97727,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97732,"byte_end":97746,"line_start":515,"line_end":515,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97751,"byte_end":97754,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97759,"byte_end":97766,"line_start":517,"line_end":517,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97771,"byte_end":97798,"line_start":518,"line_end":518,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97803,"byte_end":97806,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97811,"byte_end":97842,"line_start":520,"line_end":520,"column_start":5,"column_end":36}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97847,"byte_end":97873,"line_start":521,"line_end":521,"column_start":5,"column_end":31}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97878,"byte_end":97899,"line_start":522,"line_end":522,"column_start":5,"column_end":26}},{"value":"/ assert!(!a.is_empty());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97904,"byte_end":97931,"line_start":523,"line_end":523,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97936,"byte_end":97943,"line_start":524,"line_end":524,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":97984,"byte_end":97990,"line_start":525,"line_end":525,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98605,"byte_end":98610,"line_start":550,"line_end":550,"column_start":12,"column_end":17},"name":"drain","qualname":"<HashMap<K, V, S>>::drain","value":"pub fn drain(&mut Self) -> Drain<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, returning all key-value pairs as an iterator. Keeps the\n allocated memory for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, returning all key-value pairs as an iterator. Keeps the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98065,"byte_end":98140,"line_start":530,"line_end":530,"column_start":5,"column_end":80}},{"value":"/ allocated memory for reuse.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98145,"byte_end":98176,"line_start":531,"line_end":531,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98181,"byte_end":98184,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98189,"byte_end":98203,"line_start":533,"line_end":533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98208,"byte_end":98211,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98216,"byte_end":98223,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98228,"byte_end":98255,"line_start":536,"line_end":536,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98260,"byte_end":98263,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98268,"byte_end":98299,"line_start":538,"line_end":538,"column_start":5,"column_end":36}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98304,"byte_end":98325,"line_start":539,"line_end":539,"column_start":5,"column_end":26}},{"value":"/ a.insert(2, \"b\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98330,"byte_end":98351,"line_start":540,"line_end":540,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98356,"byte_end":98359,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ for (k, v) in a.drain().take(1) {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98364,"byte_end":98401,"line_start":542,"line_end":542,"column_start":5,"column_end":42}},{"value":"/     assert!(k == 1 || k == 2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98406,"byte_end":98440,"line_start":543,"line_end":543,"column_start":5,"column_end":39}},{"value":"/     assert!(v == \"a\" || v == \"b\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98445,"byte_end":98483,"line_start":544,"line_end":544,"column_start":5,"column_end":43}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98488,"byte_end":98493,"line_start":545,"line_end":545,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98498,"byte_end":98501,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98506,"byte_end":98532,"line_start":547,"line_end":547,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98537,"byte_end":98544,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98585,"byte_end":98591,"line_start":549,"line_end":549,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99138,"byte_end":99144,"line_start":569,"line_end":569,"column_start":12,"column_end":18},"name":"retain","qualname":"<HashMap<K, V, S>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&K, &mut V) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Retains only the elements specified by the predicate.","sig":null,"attributes":[{"value":"/ Retains only the elements specified by the predicate.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98719,"byte_end":98776,"line_start":556,"line_end":556,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98781,"byte_end":98784,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ In other words, remove all pairs `(k, v)` such that `f(&k,&mut v)` returns `false`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98789,"byte_end":98876,"line_start":558,"line_end":558,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98881,"byte_end":98884,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98889,"byte_end":98903,"line_start":560,"line_end":560,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98908,"byte_end":98911,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98916,"byte_end":98923,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98928,"byte_end":98955,"line_start":563,"line_end":563,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98960,"byte_end":98963,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<i32, i32> = (0..8).map(|x|(x, x*10)).collect();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":98968,"byte_end":99040,"line_start":565,"line_end":565,"column_start":5,"column_end":77}},{"value":"/ map.retain(|&k, _| k % 2 == 0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99045,"byte_end":99080,"line_start":566,"line_end":566,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(map.len(), 4);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99085,"byte_end":99114,"line_start":567,"line_end":567,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99119,"byte_end":99126,"line_start":568,"line_end":568,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100560,"byte_end":100572,"line_start":610,"line_end":610,"column_start":12,"column_end":24},"name":"drain_filter","qualname":"<HashMap<K, V, S>>::drain_filter","value":"pub fn drain_filter<F>(&mut Self, F) -> DrainFilter<, K, V, F> where\nF: FnMut(&K, &mut V) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Drains elements which are true under the given predicate,\n and returns an iterator over the removed items.","sig":null,"attributes":[{"value":"/ Drains elements which are true under the given predicate,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99561,"byte_end":99622,"line_start":584,"line_end":584,"column_start":5,"column_end":66}},{"value":"/ and returns an iterator over the removed items.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99627,"byte_end":99678,"line_start":585,"line_end":585,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99683,"byte_end":99686,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ In other words, move all pairs `(k, v)` such that `f(&k,&mut v)` returns `true` out","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99691,"byte_end":99778,"line_start":587,"line_end":587,"column_start":5,"column_end":92}},{"value":"/ into another iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99783,"byte_end":99809,"line_start":588,"line_end":588,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99814,"byte_end":99817,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ When the returned DrainedFilter is dropped, any remaining elements that satisfy","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99822,"byte_end":99905,"line_start":590,"line_end":590,"column_start":5,"column_end":88}},{"value":"/ the predicate are dropped from the table.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99910,"byte_end":99955,"line_start":591,"line_end":591,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99960,"byte_end":99963,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99968,"byte_end":99982,"line_start":593,"line_end":593,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99987,"byte_end":99990,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":99995,"byte_end":100002,"line_start":595,"line_end":595,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100007,"byte_end":100034,"line_start":596,"line_end":596,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100039,"byte_end":100042,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<i32, i32> = (0..8).map(|x| (x, x)).collect();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100047,"byte_end":100117,"line_start":598,"line_end":598,"column_start":5,"column_end":75}},{"value":"/ let drained: HashMap<i32, i32> = map.drain_filter(|k, _v| k % 2 == 0).collect();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100122,"byte_end":100206,"line_start":599,"line_end":599,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100211,"byte_end":100214,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ let mut evens = drained.keys().cloned().collect::<Vec<_>>();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100219,"byte_end":100283,"line_start":601,"line_end":601,"column_start":5,"column_end":69}},{"value":"/ let mut odds = map.keys().cloned().collect::<Vec<_>>();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100288,"byte_end":100347,"line_start":602,"line_end":602,"column_start":5,"column_end":64}},{"value":"/ evens.sort();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100352,"byte_end":100369,"line_start":603,"line_end":603,"column_start":5,"column_end":22}},{"value":"/ odds.sort();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100374,"byte_end":100390,"line_start":604,"line_end":604,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100395,"byte_end":100398,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens, vec![0, 2, 4, 6]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100403,"byte_end":100443,"line_start":606,"line_end":606,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(odds, vec![1, 3, 5, 7]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100448,"byte_end":100487,"line_start":607,"line_end":607,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100492,"byte_end":100499,"line_start":608,"line_end":608,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100540,"byte_end":100546,"line_start":609,"line_end":609,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101245,"byte_end":101250,"line_start":637,"line_end":637,"column_start":12,"column_end":17},"name":"clear","qualname":"<HashMap<K, V, S>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the map, removing all key-value pairs. Keeps the allocated memory\n for reuse.","sig":null,"attributes":[{"value":"/ Clears the map, removing all key-value pairs. Keeps the allocated memory","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100878,"byte_end":100954,"line_start":623,"line_end":623,"column_start":5,"column_end":81}},{"value":"/ for reuse.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100959,"byte_end":100973,"line_start":624,"line_end":624,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100978,"byte_end":100981,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":100986,"byte_end":101000,"line_start":626,"line_end":626,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101005,"byte_end":101008,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101013,"byte_end":101020,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101025,"byte_end":101052,"line_start":629,"line_end":629,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101057,"byte_end":101060,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ let mut a = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101065,"byte_end":101096,"line_start":631,"line_end":631,"column_start":5,"column_end":36}},{"value":"/ a.insert(1, \"a\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101101,"byte_end":101122,"line_start":632,"line_end":632,"column_start":5,"column_end":26}},{"value":"/ a.clear();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101127,"byte_end":101141,"line_start":633,"line_end":633,"column_start":5,"column_end":19}},{"value":"/ assert!(a.is_empty());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101146,"byte_end":101172,"line_start":634,"line_end":634,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101177,"byte_end":101184,"line_start":635,"line_end":635,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101225,"byte_end":101231,"line_start":636,"line_end":636,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101972,"byte_end":101979,"line_start":665,"line_end":665,"column_start":12,"column_end":19},"name":"reserve","qualname":"<HashMap<K, V, S>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more elements to be inserted\n in the `HashMap`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more elements to be inserted","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101382,"byte_end":101458,"line_start":647,"line_end":647,"column_start":5,"column_end":81}},{"value":"/ in the `HashMap`. The collection may reserve more space to avoid","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101463,"byte_end":101531,"line_start":648,"line_end":648,"column_start":5,"column_end":73}},{"value":"/ frequent reallocations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101536,"byte_end":101563,"line_start":649,"line_end":649,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101568,"byte_end":101571,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101576,"byte_end":101588,"line_start":651,"line_end":651,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101593,"byte_end":101596,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ Panics if the new allocation size overflows [`usize`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101601,"byte_end":101659,"line_start":653,"line_end":653,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101664,"byte_end":101667,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ [`usize`]: https://doc.rust-lang.org/std/primitive.usize.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101672,"byte_end":101737,"line_start":655,"line_end":655,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101742,"byte_end":101745,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101750,"byte_end":101764,"line_start":657,"line_end":657,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101769,"byte_end":101772,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101777,"byte_end":101784,"line_start":659,"line_end":659,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101789,"byte_end":101816,"line_start":660,"line_end":660,"column_start":5,"column_end":32}},{"value":"/ let mut map: HashMap<&str, i32> = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101821,"byte_end":101874,"line_start":661,"line_end":661,"column_start":5,"column_end":58}},{"value":"/ map.reserve(10);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101879,"byte_end":101899,"line_start":662,"line_end":662,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101904,"byte_end":101911,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101952,"byte_end":101958,"line_start":664,"line_end":664,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102792,"byte_end":102803,"line_start":688,"line_end":688,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<HashMap<K, V, S>>::try_reserve","value":"pub fn try_reserve(&mut Self, usize) -> Result<(), TryReserveError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to reserve capacity for at least `additional` more elements to be inserted\n in the given `HashMap<K,V>`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"/ Tries to reserve capacity for at least `additional` more elements to be inserted","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102158,"byte_end":102242,"line_start":671,"line_end":671,"column_start":5,"column_end":89}},{"value":"/ in the given `HashMap<K,V>`. The collection may reserve more space to avoid","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102247,"byte_end":102326,"line_start":672,"line_end":672,"column_start":5,"column_end":84}},{"value":"/ frequent reallocations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102331,"byte_end":102358,"line_start":673,"line_end":673,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102363,"byte_end":102366,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102371,"byte_end":102383,"line_start":675,"line_end":675,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102388,"byte_end":102391,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ If the capacity overflows, or the allocator reports a failure, then an error","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102396,"byte_end":102476,"line_start":677,"line_end":677,"column_start":5,"column_end":85}},{"value":"/ is returned.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102481,"byte_end":102497,"line_start":678,"line_end":678,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102502,"byte_end":102505,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102510,"byte_end":102524,"line_start":680,"line_end":680,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102529,"byte_end":102532,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102537,"byte_end":102544,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102549,"byte_end":102576,"line_start":683,"line_end":683,"column_start":5,"column_end":32}},{"value":"/ let mut map: HashMap<&str, isize> = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102581,"byte_end":102636,"line_start":684,"line_end":684,"column_start":5,"column_end":60}},{"value":"/ map.try_reserve(10).expect(\"why is the test harness OOMing on 10 bytes?\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102641,"byte_end":102719,"line_start":685,"line_end":685,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102724,"byte_end":102731,"line_start":686,"line_end":686,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":102772,"byte_end":102778,"line_start":687,"line_end":687,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103622,"byte_end":103635,"line_start":711,"line_end":711,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<HashMap<K, V, S>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the map as much as possible. It will drop\n down as much as possible while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the map as much as possible. It will drop","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103016,"byte_end":103085,"line_start":694,"line_end":694,"column_start":5,"column_end":74}},{"value":"/ down as much as possible while maintaining the internal rules","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103090,"byte_end":103155,"line_start":695,"line_end":695,"column_start":5,"column_end":70}},{"value":"/ and possibly leaving some space in accordance with the resize policy.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103160,"byte_end":103233,"line_start":696,"line_end":696,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103238,"byte_end":103241,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103246,"byte_end":103260,"line_start":698,"line_end":698,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103265,"byte_end":103268,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103273,"byte_end":103280,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103285,"byte_end":103312,"line_start":701,"line_end":701,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103317,"byte_end":103320,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<i32, i32> = HashMap::with_capacity(100);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103325,"byte_end":103390,"line_start":703,"line_end":703,"column_start":5,"column_end":70}},{"value":"/ map.insert(1, 2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103395,"byte_end":103416,"line_start":704,"line_end":704,"column_start":5,"column_end":26}},{"value":"/ map.insert(3, 4);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103421,"byte_end":103442,"line_start":705,"line_end":705,"column_start":5,"column_end":26}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103447,"byte_end":103482,"line_start":706,"line_end":706,"column_start":5,"column_end":40}},{"value":"/ map.shrink_to_fit();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103487,"byte_end":103511,"line_start":707,"line_end":707,"column_start":5,"column_end":29}},{"value":"/ assert!(map.capacity() >= 2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103516,"byte_end":103549,"line_start":708,"line_end":708,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103554,"byte_end":103561,"line_start":709,"line_end":709,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103602,"byte_end":103608,"line_start":710,"line_end":710,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104643,"byte_end":104652,"line_start":740,"line_end":740,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<HashMap<K, V, S>>::shrink_to","value":"pub fn shrink_to(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the map with a lower limit. It will drop\n down no lower than the supplied limit while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the map with a lower limit. It will drop","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103775,"byte_end":103843,"line_start":716,"line_end":716,"column_start":5,"column_end":73}},{"value":"/ down no lower than the supplied limit while maintaining the internal rules","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103848,"byte_end":103926,"line_start":717,"line_end":717,"column_start":5,"column_end":83}},{"value":"/ and possibly leaving some space in accordance with the resize policy.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":103931,"byte_end":104004,"line_start":718,"line_end":718,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104009,"byte_end":104012,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ This function does nothing if the current capacity is smaller than the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104017,"byte_end":104091,"line_start":720,"line_end":720,"column_start":5,"column_end":79}},{"value":"/ supplied minimum capacity.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104096,"byte_end":104126,"line_start":721,"line_end":721,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104131,"byte_end":104134,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104139,"byte_end":104153,"line_start":723,"line_end":723,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104158,"byte_end":104161,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104166,"byte_end":104173,"line_start":725,"line_end":725,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104178,"byte_end":104205,"line_start":726,"line_end":726,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104210,"byte_end":104213,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<i32, i32> = HashMap::with_capacity(100);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104218,"byte_end":104283,"line_start":728,"line_end":728,"column_start":5,"column_end":70}},{"value":"/ map.insert(1, 2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104288,"byte_end":104309,"line_start":729,"line_end":729,"column_start":5,"column_end":26}},{"value":"/ map.insert(3, 4);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104314,"byte_end":104335,"line_start":730,"line_end":730,"column_start":5,"column_end":26}},{"value":"/ assert!(map.capacity() >= 100);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104340,"byte_end":104375,"line_start":731,"line_end":731,"column_start":5,"column_end":40}},{"value":"/ map.shrink_to(10);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104380,"byte_end":104402,"line_start":732,"line_end":732,"column_start":5,"column_end":27}},{"value":"/ assert!(map.capacity() >= 10);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104407,"byte_end":104441,"line_start":733,"line_end":733,"column_start":5,"column_end":39}},{"value":"/ map.shrink_to(0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104446,"byte_end":104467,"line_start":734,"line_end":734,"column_start":5,"column_end":26}},{"value":"/ assert!(map.capacity() >= 2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104472,"byte_end":104505,"line_start":735,"line_end":735,"column_start":5,"column_end":38}},{"value":"/ map.shrink_to(10);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104510,"byte_end":104532,"line_start":736,"line_end":736,"column_start":5,"column_end":27}},{"value":"/ assert!(map.capacity() >= 2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104537,"byte_end":104570,"line_start":737,"line_end":737,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104575,"byte_end":104582,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104623,"byte_end":104629,"line_start":739,"line_end":739,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":105447,"byte_end":105452,"line_start":766,"line_end":766,"column_start":12,"column_end":17},"name":"entry","qualname":"<HashMap<K, V, S>>::entry","value":"pub fn entry(&mut Self, K) -> Entry<, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Gets the given key's corresponding entry in the map for in-place manipulation.","sig":null,"attributes":[{"value":"/ Gets the given key's corresponding entry in the map for in-place manipulation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104837,"byte_end":104919,"line_start":746,"line_end":746,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104924,"byte_end":104927,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104932,"byte_end":104946,"line_start":748,"line_end":748,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104951,"byte_end":104954,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104959,"byte_end":104966,"line_start":750,"line_end":750,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":104971,"byte_end":104998,"line_start":751,"line_end":751,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":105003,"byte_end":105006,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ let mut letters = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":105011,"byte_end":105048,"line_start":753,"line_end":753,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":105053,"byte_end":105056,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ for ch in \"a short treatise on fungi\".chars() {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":105061,"byte_end":105112,"line_start":755,"line_end":755,"column_start":5,"column_end":56}},{"value":"/     let counter = letters.entry(ch).or_insert(0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":105117,"byte_end":105170,"line_start":756,"line_end":756,"column_start":5,"column_end":58}},{"value":"/     *counter += 1;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":105175,"byte_end":105197,"line_start":757,"line_end":757,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":105202,"byte_end":105207,"line_start":758,"line_end":758,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":105212,"byte_end":105215,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(letters[&'s'], 2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":105220,"byte_end":105253,"line_start":760,"line_end":760,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(letters[&'t'], 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":105258,"byte_end":105291,"line_start":761,"line_end":761,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(letters[&'u'], 1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":105296,"byte_end":105329,"line_start":762,"line_end":762,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(letters.get(&'y'), None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":105334,"byte_end":105374,"line_start":763,"line_end":763,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":105379,"byte_end":105386,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":105427,"byte_end":105433,"line_start":765,"line_end":765,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106599,"byte_end":106602,"line_start":804,"line_end":804,"column_start":12,"column_end":15},"name":"get","qualname":"<HashMap<K, V, S>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&V> where K: Borrow<Q>, Q: Hash +\nEq","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a reference to the value corresponding to the key.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":105951,"byte_end":106013,"line_start":784,"line_end":784,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106018,"byte_end":106021,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106026,"byte_end":106089,"line_start":786,"line_end":786,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106094,"byte_end":106161,"line_start":787,"line_end":787,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106166,"byte_end":106183,"line_start":788,"line_end":788,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106188,"byte_end":106191,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106196,"byte_end":106255,"line_start":790,"line_end":790,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106260,"byte_end":106324,"line_start":791,"line_end":791,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106329,"byte_end":106332,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106337,"byte_end":106351,"line_start":793,"line_end":793,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106356,"byte_end":106359,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106364,"byte_end":106371,"line_start":795,"line_end":795,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106376,"byte_end":106403,"line_start":796,"line_end":796,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106408,"byte_end":106411,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106416,"byte_end":106449,"line_start":798,"line_end":798,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106454,"byte_end":106477,"line_start":799,"line_end":799,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.get(&1), Some(&\"a\"));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106482,"byte_end":106522,"line_start":800,"line_end":800,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(map.get(&2), None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106527,"byte_end":106561,"line_start":801,"line_end":801,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106566,"byte_end":106573,"line_start":802,"line_end":802,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106578,"byte_end":106587,"line_start":803,"line_end":803,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107569,"byte_end":107582,"line_start":836,"line_end":836,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<HashMap<K, V, S>>::get_key_value","value":"pub fn get_key_value<Q: ?Sized>(&Self, &Q) -> Option<(&K, &V)> where\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns the key-value pair corresponding to the supplied key.","sig":null,"attributes":[{"value":"/ Returns the key-value pair corresponding to the supplied key.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106883,"byte_end":106948,"line_start":816,"line_end":816,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106953,"byte_end":106956,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ The supplied key may be any borrowed form of the map's key type, but","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":106961,"byte_end":107033,"line_start":818,"line_end":818,"column_start":5,"column_end":77}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107038,"byte_end":107105,"line_start":819,"line_end":819,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107110,"byte_end":107127,"line_start":820,"line_end":820,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107132,"byte_end":107135,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107140,"byte_end":107199,"line_start":822,"line_end":822,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107204,"byte_end":107268,"line_start":823,"line_end":823,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107273,"byte_end":107276,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107281,"byte_end":107295,"line_start":825,"line_end":825,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107300,"byte_end":107303,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107308,"byte_end":107315,"line_start":827,"line_end":827,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107320,"byte_end":107347,"line_start":828,"line_end":828,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107352,"byte_end":107355,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107360,"byte_end":107393,"line_start":830,"line_end":830,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107398,"byte_end":107421,"line_start":831,"line_end":831,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.get_key_value(&1), Some((&1, &\"a\")));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107426,"byte_end":107482,"line_start":832,"line_end":832,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(map.get_key_value(&2), None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107487,"byte_end":107531,"line_start":833,"line_end":833,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107536,"byte_end":107543,"line_start":834,"line_end":834,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":107548,"byte_end":107557,"line_start":835,"line_end":835,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109006,"byte_end":109023,"line_start":882,"line_end":882,"column_start":12,"column_end":29},"name":"get_key_value_mut","qualname":"<HashMap<K, V, S>>::get_key_value_mut","value":"pub fn get_key_value_mut<Q: ?Sized>(&mut Self, &Q) -> Option<(&K, &mut V)>\nwhere K: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns the key-value pair corresponding to the supplied key, with a mutable reference to value.","sig":null,"attributes":[{"value":"/ Returns the key-value pair corresponding to the supplied key, with a mutable reference to value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108138,"byte_end":108238,"line_start":858,"line_end":858,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108243,"byte_end":108246,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ The supplied key may be any borrowed form of the map's key type, but","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108251,"byte_end":108323,"line_start":860,"line_end":860,"column_start":5,"column_end":77}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108328,"byte_end":108395,"line_start":861,"line_end":861,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108400,"byte_end":108417,"line_start":862,"line_end":862,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108422,"byte_end":108425,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108430,"byte_end":108489,"line_start":864,"line_end":864,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108494,"byte_end":108558,"line_start":865,"line_end":865,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108563,"byte_end":108566,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108571,"byte_end":108585,"line_start":867,"line_end":867,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108590,"byte_end":108593,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108598,"byte_end":108605,"line_start":869,"line_end":869,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108610,"byte_end":108637,"line_start":870,"line_end":870,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108642,"byte_end":108645,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108650,"byte_end":108683,"line_start":872,"line_end":872,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108688,"byte_end":108711,"line_start":873,"line_end":873,"column_start":5,"column_end":28}},{"value":"/ let (k, v) = map.get_key_value_mut(&1).unwrap();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108716,"byte_end":108768,"line_start":874,"line_end":874,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(k, &1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108773,"byte_end":108795,"line_start":875,"line_end":875,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(v, &mut \"a\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108800,"byte_end":108828,"line_start":876,"line_end":876,"column_start":5,"column_end":33}},{"value":"/ *v = \"b\";","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108833,"byte_end":108846,"line_start":877,"line_end":877,"column_start":5,"column_end":18}},{"value":"/ assert_eq!(map.get_key_value_mut(&1), Some((&1, &mut \"b\")));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108851,"byte_end":108915,"line_start":878,"line_end":878,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(map.get_key_value_mut(&2), None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108920,"byte_end":108968,"line_start":879,"line_end":879,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108973,"byte_end":108980,"line_start":880,"line_end":880,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":108985,"byte_end":108994,"line_start":881,"line_end":881,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110054,"byte_end":110066,"line_start":914,"line_end":914,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<HashMap<K, V, S>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the map contains a value for the specified key.","sig":null,"attributes":[{"value":"/ Returns `true` if the map contains a value for the specified key.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109351,"byte_end":109420,"line_start":894,"line_end":894,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109425,"byte_end":109428,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109433,"byte_end":109496,"line_start":896,"line_end":896,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109501,"byte_end":109568,"line_start":897,"line_end":897,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109573,"byte_end":109590,"line_start":898,"line_end":898,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109595,"byte_end":109598,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109603,"byte_end":109662,"line_start":900,"line_end":900,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109667,"byte_end":109731,"line_start":901,"line_end":901,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109736,"byte_end":109739,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109744,"byte_end":109758,"line_start":903,"line_end":903,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109763,"byte_end":109766,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109771,"byte_end":109778,"line_start":905,"line_end":905,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109783,"byte_end":109810,"line_start":906,"line_end":906,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109815,"byte_end":109818,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109823,"byte_end":109856,"line_start":908,"line_end":908,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109861,"byte_end":109884,"line_start":909,"line_end":909,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.contains_key(&1), true);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109889,"byte_end":109932,"line_start":910,"line_end":910,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(map.contains_key(&2), false);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109937,"byte_end":109981,"line_start":911,"line_end":911,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":109986,"byte_end":109993,"line_start":912,"line_end":912,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110034,"byte_end":110040,"line_start":913,"line_end":913,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110923,"byte_end":110930,"line_start":944,"line_end":944,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<HashMap<K, V, S>>::get_mut","value":"pub fn get_mut<Q: ?Sized>(&mut Self, &Q) -> Option<&mut V> where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value corresponding to the key.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value corresponding to the key.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110207,"byte_end":110277,"line_start":922,"line_end":922,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110282,"byte_end":110285,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110290,"byte_end":110353,"line_start":924,"line_end":924,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110358,"byte_end":110425,"line_start":925,"line_end":925,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110430,"byte_end":110447,"line_start":926,"line_end":926,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110452,"byte_end":110455,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110460,"byte_end":110519,"line_start":928,"line_end":928,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110524,"byte_end":110588,"line_start":929,"line_end":929,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110593,"byte_end":110596,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110601,"byte_end":110615,"line_start":931,"line_end":931,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110620,"byte_end":110623,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110628,"byte_end":110635,"line_start":933,"line_end":933,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110640,"byte_end":110667,"line_start":934,"line_end":934,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110672,"byte_end":110675,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110680,"byte_end":110713,"line_start":936,"line_end":936,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110718,"byte_end":110741,"line_start":937,"line_end":937,"column_start":5,"column_end":28}},{"value":"/ if let Some(x) = map.get_mut(&1) {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110746,"byte_end":110784,"line_start":938,"line_end":938,"column_start":5,"column_end":43}},{"value":"/     *x = \"b\";","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110789,"byte_end":110806,"line_start":939,"line_end":939,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110811,"byte_end":110816,"line_start":940,"line_end":940,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[&1], \"b\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110821,"byte_end":110850,"line_start":941,"line_end":941,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110855,"byte_end":110862,"line_start":942,"line_end":942,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":110903,"byte_end":110909,"line_start":943,"line_end":943,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112470,"byte_end":112476,"line_start":992,"line_end":992,"column_start":12,"column_end":18},"name":"insert","qualname":"<HashMap<K, V, S>>::insert","value":"pub fn insert(&mut Self, K, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a key-value pair into the map.","sig":null,"attributes":[{"value":"/ Inserts a key-value pair into the map.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":111495,"byte_end":111537,"line_start":966,"line_end":966,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":111542,"byte_end":111545,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ If the map did not have this key present, [`None`] is returned.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":111550,"byte_end":111617,"line_start":968,"line_end":968,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":111622,"byte_end":111625,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ If the map did have this key present, the value is updated, and the old","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":111630,"byte_end":111705,"line_start":970,"line_end":970,"column_start":5,"column_end":80}},{"value":"/ value is returned. The key is not updated, though; this matters for","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":111710,"byte_end":111781,"line_start":971,"line_end":971,"column_start":5,"column_end":76}},{"value":"/ types that can be `==` without being identical. See the [module-level","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":111786,"byte_end":111859,"line_start":972,"line_end":972,"column_start":5,"column_end":78}},{"value":"/ documentation] for more.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":111864,"byte_end":111892,"line_start":973,"line_end":973,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":111897,"byte_end":111900,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ [`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":111905,"byte_end":111985,"line_start":975,"line_end":975,"column_start":5,"column_end":85}},{"value":"/ [module-level documentation]: index.html#insert-and-complex-keys","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":111990,"byte_end":112058,"line_start":976,"line_end":976,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112063,"byte_end":112066,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112071,"byte_end":112085,"line_start":978,"line_end":978,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112090,"byte_end":112093,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112098,"byte_end":112105,"line_start":980,"line_end":980,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112110,"byte_end":112137,"line_start":981,"line_end":981,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112142,"byte_end":112145,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112150,"byte_end":112183,"line_start":983,"line_end":983,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(map.insert(37, \"a\"), None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112188,"byte_end":112230,"line_start":984,"line_end":984,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map.is_empty(), false);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112235,"byte_end":112273,"line_start":985,"line_end":985,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112278,"byte_end":112281,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ map.insert(37, \"b\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112286,"byte_end":112310,"line_start":987,"line_end":987,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(map.insert(37, \"c\"), Some(\"b\"));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112315,"byte_end":112362,"line_start":988,"line_end":988,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(map[&37], \"c\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112367,"byte_end":112397,"line_start":989,"line_end":989,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112402,"byte_end":112409,"line_start":990,"line_end":990,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112450,"byte_end":112456,"line_start":991,"line_end":991,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113622,"byte_end":113628,"line_start":1025,"line_end":1025,"column_start":12,"column_end":18},"name":"remove","qualname":"<HashMap<K, V, S>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where K: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the value at the key if the key\n was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the value at the key if the key","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112888,"byte_end":112961,"line_start":1004,"line_end":1004,"column_start":5,"column_end":78}},{"value":"/ was previously in the map.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":112966,"byte_end":112996,"line_start":1005,"line_end":1005,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113001,"byte_end":113004,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113009,"byte_end":113072,"line_start":1007,"line_end":1007,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113077,"byte_end":113144,"line_start":1008,"line_end":1008,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113149,"byte_end":113166,"line_start":1009,"line_end":1009,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113171,"byte_end":113174,"line_start":1010,"line_end":1010,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113179,"byte_end":113238,"line_start":1011,"line_end":1011,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113243,"byte_end":113307,"line_start":1012,"line_end":1012,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113312,"byte_end":113315,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113320,"byte_end":113334,"line_start":1014,"line_end":1014,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113339,"byte_end":113342,"line_start":1015,"line_end":1015,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113347,"byte_end":113354,"line_start":1016,"line_end":1016,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113359,"byte_end":113386,"line_start":1017,"line_end":1017,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113391,"byte_end":113394,"line_start":1018,"line_end":1018,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113399,"byte_end":113432,"line_start":1019,"line_end":1019,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113437,"byte_end":113460,"line_start":1020,"line_end":1020,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.remove(&1), Some(\"a\"));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113465,"byte_end":113507,"line_start":1021,"line_end":1021,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(map.remove(&1), None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113512,"byte_end":113549,"line_start":1022,"line_end":1022,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113554,"byte_end":113561,"line_start":1023,"line_end":1023,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113602,"byte_end":113608,"line_start":1024,"line_end":1024,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114659,"byte_end":114671,"line_start":1058,"line_end":1058,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<HashMap<K, V, S>>::remove_entry","value":"pub fn remove_entry<Q: ?Sized>(&mut Self, &Q) -> Option<(K, V)> where\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Removes a key from the map, returning the stored key and value if the\n key was previously in the map.","sig":null,"attributes":[{"value":"/ Removes a key from the map, returning the stored key and value if the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113910,"byte_end":113983,"line_start":1037,"line_end":1037,"column_start":5,"column_end":78}},{"value":"/ key was previously in the map.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":113988,"byte_end":114022,"line_start":1038,"line_end":1038,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114027,"byte_end":114030,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ The key may be any borrowed form of the map's key type, but","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114035,"byte_end":114098,"line_start":1040,"line_end":1040,"column_start":5,"column_end":68}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114103,"byte_end":114170,"line_start":1041,"line_end":1041,"column_start":5,"column_end":72}},{"value":"/ the key type.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114175,"byte_end":114192,"line_start":1042,"line_end":1042,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114197,"byte_end":114200,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114205,"byte_end":114264,"line_start":1044,"line_end":1044,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114269,"byte_end":114333,"line_start":1045,"line_end":1045,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114338,"byte_end":114341,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114346,"byte_end":114360,"line_start":1047,"line_end":1047,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114365,"byte_end":114368,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114373,"byte_end":114380,"line_start":1049,"line_end":1049,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114385,"byte_end":114412,"line_start":1050,"line_end":1050,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114417,"byte_end":114420,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ let mut map = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114425,"byte_end":114458,"line_start":1052,"line_end":1052,"column_start":5,"column_end":38}},{"value":"/ map.insert(1, \"a\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114463,"byte_end":114486,"line_start":1053,"line_end":1053,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(map.remove_entry(&1), Some((1, \"a\")));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114491,"byte_end":114544,"line_start":1054,"line_end":1054,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(map.remove(&1), None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114549,"byte_end":114586,"line_start":1055,"line_end":1055,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114591,"byte_end":114598,"line_start":1056,"line_end":1056,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114639,"byte_end":114645,"line_start":1057,"line_end":1057,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116881,"byte_end":116894,"line_start":1101,"line_end":1101,"column_start":12,"column_end":25},"name":"raw_entry_mut","qualname":"<HashMap<K, V, S>>::raw_entry_mut","value":"pub fn raw_entry_mut(&mut Self) -> RawEntryBuilderMut<, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a raw entry builder for the HashMap.","sig":null,"attributes":[{"value":"/ Creates a raw entry builder for the HashMap.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114941,"byte_end":114989,"line_start":1069,"line_end":1069,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114994,"byte_end":114997,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ Raw entries provide the lowest level of control for searching and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115002,"byte_end":115071,"line_start":1071,"line_end":1071,"column_start":5,"column_end":74}},{"value":"/ manipulating a map. They must be manually initialized with a hash and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115076,"byte_end":115149,"line_start":1072,"line_end":1072,"column_start":5,"column_end":78}},{"value":"/ then manually searched. After this, insertions into a vacant entry","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115154,"byte_end":115224,"line_start":1073,"line_end":1073,"column_start":5,"column_end":75}},{"value":"/ still require an owned key to be provided.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115229,"byte_end":115275,"line_start":1074,"line_end":1074,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115280,"byte_end":115283,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ Raw entries are useful for such exotic situations as:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115288,"byte_end":115345,"line_start":1076,"line_end":1076,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115350,"byte_end":115353,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ * Hash memoization","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115358,"byte_end":115380,"line_start":1078,"line_end":1078,"column_start":5,"column_end":27}},{"value":"/ * Deferring the creation of an owned key until it is known to be required","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115385,"byte_end":115462,"line_start":1079,"line_end":1079,"column_start":5,"column_end":82}},{"value":"/ * Using a search key that doesn't work with the Borrow trait","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115467,"byte_end":115531,"line_start":1080,"line_end":1080,"column_start":5,"column_end":69}},{"value":"/ * Using custom comparison logic without newtype wrappers","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115536,"byte_end":115596,"line_start":1081,"line_end":1081,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115601,"byte_end":115604,"line_start":1082,"line_end":1082,"column_start":5,"column_end":8}},{"value":"/ Because raw entries provide much more low-level control, it's much easier","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115609,"byte_end":115686,"line_start":1083,"line_end":1083,"column_start":5,"column_end":82}},{"value":"/ to put the HashMap into an inconsistent state which, while memory-safe,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115691,"byte_end":115766,"line_start":1084,"line_end":1084,"column_start":5,"column_end":80}},{"value":"/ will cause the map to produce seemingly random results. Higher-level and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115771,"byte_end":115847,"line_start":1085,"line_end":1085,"column_start":5,"column_end":81}},{"value":"/ more foolproof APIs like `entry` should be preferred when possible.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115852,"byte_end":115923,"line_start":1086,"line_end":1086,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115928,"byte_end":115931,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ In particular, the hash used to initialized the raw entry must still be","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":115936,"byte_end":116011,"line_start":1088,"line_end":1088,"column_start":5,"column_end":80}},{"value":"/ consistent with the hash of the key that is ultimately stored in the entry.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116016,"byte_end":116095,"line_start":1089,"line_end":1089,"column_start":5,"column_end":84}},{"value":"/ This is because implementations of HashMap may need to recompute hashes","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116100,"byte_end":116175,"line_start":1090,"line_end":1090,"column_start":5,"column_end":80}},{"value":"/ when resizing, at which point only the keys are available.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116180,"byte_end":116242,"line_start":1091,"line_end":1091,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116247,"byte_end":116250,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ Raw entries give mutable access to the keys. This must not be used","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116255,"byte_end":116325,"line_start":1093,"line_end":1093,"column_start":5,"column_end":75}},{"value":"/ to modify how the key would compare or hash, as the map will not re-evaluate","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116330,"byte_end":116410,"line_start":1094,"line_end":1094,"column_start":5,"column_end":85}},{"value":"/ where the key should go, meaning the keys may become \"lost\" if their","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116415,"byte_end":116487,"line_start":1095,"line_end":1095,"column_start":5,"column_end":77}},{"value":"/ location does not reflect their state. For instance, if you change a key","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116492,"byte_end":116568,"line_start":1096,"line_end":1096,"column_start":5,"column_end":81}},{"value":"/ so that the map now contains keys which compare equal, search may start","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116573,"byte_end":116648,"line_start":1097,"line_end":1097,"column_start":5,"column_end":80}},{"value":"/ acting erratically, with two keys randomly masking each other. Implementations","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116653,"byte_end":116735,"line_start":1098,"line_end":1098,"column_start":5,"column_end":87}},{"value":"/ are free to assume this doesn't happen (within the limits of memory-safety).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116740,"byte_end":116820,"line_start":1099,"line_end":1099,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116861,"byte_end":116867,"line_start":1100,"line_end":1100,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":117732,"byte_end":117741,"line_start":1121,"line_end":1121,"column_start":12,"column_end":21},"name":"raw_entry","qualname":"<HashMap<K, V, S>>::raw_entry","value":"pub fn raw_entry(&Self) -> RawEntryBuilder<, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a raw immutable entry builder for the HashMap.","sig":null,"attributes":[{"value":"/ Creates a raw immutable entry builder for the HashMap.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":116995,"byte_end":117053,"line_start":1105,"line_end":1105,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":117058,"byte_end":117061,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ Raw entries provide the lowest level of control for searching and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":117066,"byte_end":117135,"line_start":1107,"line_end":1107,"column_start":5,"column_end":74}},{"value":"/ manipulating a map. They must be manually initialized with a hash and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":117140,"byte_end":117213,"line_start":1108,"line_end":1108,"column_start":5,"column_end":78}},{"value":"/ then manually searched.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":117218,"byte_end":117245,"line_start":1109,"line_end":1109,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":117250,"byte_end":117253,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ This is useful for","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":117258,"byte_end":117280,"line_start":1111,"line_end":1111,"column_start":5,"column_end":27}},{"value":"/ * Hash memoization","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":117285,"byte_end":117307,"line_start":1112,"line_end":1112,"column_start":5,"column_end":27}},{"value":"/ * Using a search key that doesn't work with the Borrow trait","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":117312,"byte_end":117376,"line_start":1113,"line_end":1113,"column_start":5,"column_end":69}},{"value":"/ * Using custom comparison logic without newtype wrappers","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":117381,"byte_end":117441,"line_start":1114,"line_end":1114,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":117446,"byte_end":117449,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}},{"value":"/ Unless you are in such a situation, higher-level and more foolproof APIs like","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":117454,"byte_end":117535,"line_start":1116,"line_end":1116,"column_start":5,"column_end":86}},{"value":"/ `get` should be preferred.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":117540,"byte_end":117570,"line_start":1117,"line_end":1117,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":117575,"byte_end":117578,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ Immutable raw entries have very limited use; you might instead want `raw_entry_mut`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":117583,"byte_end":117671,"line_start":1119,"line_end":1119,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":117712,"byte_end":117718,"line_start":1120,"line_end":1120,"column_start":41,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":520},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":119475,"byte_end":119479,"line_start":1197,"line_end":1197,"column_start":12,"column_end":16},"name":"Iter","qualname":"::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525}],"decl_id":null,"docs":" An iterator over the entries of a `HashMap`.","sig":null,"attributes":[{"value":"/ An iterator over the entries of a `HashMap`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":119220,"byte_end":119268,"line_start":1190,"line_end":1190,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":119269,"byte_end":119272,"line_start":1191,"line_end":1191,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`HashMap`]. See its","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":119273,"byte_end":119348,"line_start":1192,"line_end":1192,"column_start":1,"column_end":76}},{"value":"/ documentation for more.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":119349,"byte_end":119376,"line_start":1193,"line_end":1193,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":119377,"byte_end":119380,"line_start":1194,"line_end":1194,"column_start":1,"column_end":4}},{"value":"/ [`iter`]: struct.HashMap.html#method.iter","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":119381,"byte_end":119426,"line_start":1195,"line_end":1195,"column_start":1,"column_end":46}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":119427,"byte_end":119463,"line_start":1196,"line_end":1196,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":534},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120299,"byte_end":120306,"line_start":1226,"line_end":1226,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":539}],"decl_id":null,"docs":" A mutable iterator over the entries of a `HashMap`.","sig":null,"attributes":[{"value":"/ A mutable iterator over the entries of a `HashMap`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120025,"byte_end":120080,"line_start":1219,"line_end":1219,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120081,"byte_end":120084,"line_start":1220,"line_end":1220,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter_mut`] method on [`HashMap`]. See its","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120085,"byte_end":120164,"line_start":1221,"line_end":1221,"column_start":1,"column_end":80}},{"value":"/ documentation for more.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120165,"byte_end":120192,"line_start":1222,"line_end":1222,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120193,"byte_end":120196,"line_start":1223,"line_end":1223,"column_start":1,"column_end":4}},{"value":"/ [`iter_mut`]: struct.HashMap.html#method.iter_mut","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120197,"byte_end":120250,"line_start":1224,"line_end":1224,"column_start":1,"column_end":54}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120251,"byte_end":120287,"line_start":1225,"line_end":1225,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":547},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121305,"byte_end":121313,"line_start":1255,"line_end":1255,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":550}],"decl_id":null,"docs":" An owning iterator over the entries of a `HashMap`.","sig":null,"attributes":[{"value":"/ An owning iterator over the entries of a `HashMap`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120989,"byte_end":121044,"line_start":1248,"line_end":1248,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121045,"byte_end":121048,"line_start":1249,"line_end":1249,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`HashMap`]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121049,"byte_end":121120,"line_start":1250,"line_end":1250,"column_start":1,"column_end":72}},{"value":"/ (provided by the `IntoIterator` trait). See its documentation for more.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121121,"byte_end":121196,"line_start":1251,"line_end":1251,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121197,"byte_end":121200,"line_start":1252,"line_end":1252,"column_start":1,"column_end":4}},{"value":"/ [`into_iter`]: struct.HashMap.html#method.into_iter","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121201,"byte_end":121256,"line_start":1253,"line_end":1253,"column_start":1,"column_end":56}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121257,"byte_end":121293,"line_start":1254,"line_end":1254,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":555},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121908,"byte_end":121912,"line_start":1277,"line_end":1277,"column_start":12,"column_end":16},"name":"Keys","qualname":"::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":559}],"decl_id":null,"docs":" An iterator over the keys of a `HashMap`.","sig":null,"attributes":[{"value":"/ An iterator over the keys of a `HashMap`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121656,"byte_end":121701,"line_start":1270,"line_end":1270,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121702,"byte_end":121705,"line_start":1271,"line_end":1271,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`keys`] method on [`HashMap`]. See its","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121706,"byte_end":121781,"line_start":1272,"line_end":1272,"column_start":1,"column_end":76}},{"value":"/ documentation for more.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121782,"byte_end":121809,"line_start":1273,"line_end":1273,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121810,"byte_end":121813,"line_start":1274,"line_end":1274,"column_start":1,"column_end":4}},{"value":"/ [`keys`]: struct.HashMap.html#method.keys","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121814,"byte_end":121859,"line_start":1275,"line_end":1275,"column_start":1,"column_end":46}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121860,"byte_end":121896,"line_start":1276,"line_end":1276,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":568},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":122636,"byte_end":122642,"line_start":1304,"line_end":1304,"column_start":12,"column_end":18},"name":"Values","qualname":"::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":572}],"decl_id":null,"docs":" An iterator over the values of a `HashMap`.","sig":null,"attributes":[{"value":"/ An iterator over the values of a `HashMap`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":122376,"byte_end":122423,"line_start":1297,"line_end":1297,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":122424,"byte_end":122427,"line_start":1298,"line_end":1298,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`values`] method on [`HashMap`]. See its","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":122428,"byte_end":122505,"line_start":1299,"line_end":1299,"column_start":1,"column_end":78}},{"value":"/ documentation for more.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":122506,"byte_end":122533,"line_start":1300,"line_end":1300,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":122534,"byte_end":122537,"line_start":1301,"line_end":1301,"column_start":1,"column_end":4}},{"value":"/ [`values`]: struct.HashMap.html#method.values","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":122538,"byte_end":122587,"line_start":1302,"line_end":1302,"column_start":1,"column_end":50}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":122588,"byte_end":122624,"line_start":1303,"line_end":1303,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":581},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123378,"byte_end":123383,"line_start":1331,"line_end":1331,"column_start":12,"column_end":17},"name":"Drain","qualname":"::map::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":585}],"decl_id":null,"docs":" A draining iterator over the entries of a `HashMap`.","sig":null,"attributes":[{"value":"/ A draining iterator over the entries of a `HashMap`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123112,"byte_end":123168,"line_start":1324,"line_end":1324,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123169,"byte_end":123172,"line_start":1325,"line_end":1325,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain`] method on [`HashMap`]. See its","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123173,"byte_end":123249,"line_start":1326,"line_end":1326,"column_start":1,"column_end":77}},{"value":"/ documentation for more.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123250,"byte_end":123277,"line_start":1327,"line_end":1327,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123278,"byte_end":123281,"line_start":1328,"line_end":1328,"column_start":1,"column_end":4}},{"value":"/ [`drain`]: struct.HashMap.html#method.drain","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123282,"byte_end":123329,"line_start":1329,"line_end":1329,"column_start":1,"column_end":48}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123330,"byte_end":123366,"line_start":1330,"line_end":1330,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":590},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":124053,"byte_end":124064,"line_start":1353,"line_end":1353,"column_start":12,"column_end":23},"name":"DrainFilter","qualname":"::map::DrainFilter","value":"DrainFilter {  }","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596}],"decl_id":null,"docs":" A draining iterator over entries of a `HashMap` which don't satisfy the predicate `f`.","sig":null,"attributes":[{"value":"/ A draining iterator over entries of a `HashMap` which don't satisfy the predicate `f`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123732,"byte_end":123822,"line_start":1346,"line_end":1346,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123823,"byte_end":123826,"line_start":1347,"line_end":1347,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain_filter`] method on [`HashMap`]. See its","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123827,"byte_end":123910,"line_start":1348,"line_end":1348,"column_start":1,"column_end":84}},{"value":"/ documentation for more.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123911,"byte_end":123938,"line_start":1349,"line_end":1349,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123939,"byte_end":123942,"line_start":1350,"line_end":1350,"column_start":1,"column_end":4}},{"value":"/ [`drain_filter`]: struct.HashMap.html#method.drain_filter","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123943,"byte_end":124004,"line_start":1351,"line_end":1351,"column_start":1,"column_end":62}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":124005,"byte_end":124041,"line_start":1352,"line_end":1352,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":633},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":126182,"byte_end":126191,"line_start":1434,"line_end":1434,"column_start":12,"column_end":21},"name":"ValuesMut","qualname":"::map::ValuesMut","value":"ValuesMut {  }","parent":null,"children":[{"krate":0,"index":637}],"decl_id":null,"docs":" A mutable iterator over the values of a `HashMap`.","sig":null,"attributes":[{"value":"/ A mutable iterator over the values of a `HashMap`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":125903,"byte_end":125957,"line_start":1427,"line_end":1427,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":125958,"byte_end":125961,"line_start":1428,"line_end":1428,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`values_mut`] method on [`HashMap`]. See its","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":125962,"byte_end":126043,"line_start":1429,"line_end":1429,"column_start":1,"column_end":82}},{"value":"/ documentation for more.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":126044,"byte_end":126071,"line_start":1430,"line_end":1430,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":126072,"byte_end":126075,"line_start":1431,"line_end":1431,"column_start":1,"column_end":4}},{"value":"/ [`values_mut`]: struct.HashMap.html#method.values_mut","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":126076,"byte_end":126133,"line_start":1432,"line_end":1432,"column_start":1,"column_end":58}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":126134,"byte_end":126170,"line_start":1433,"line_end":1433,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":638},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":126478,"byte_end":126496,"line_start":1443,"line_end":1443,"column_start":12,"column_end":30},"name":"RawEntryBuilderMut","qualname":"::map::RawEntryBuilderMut","value":"RawEntryBuilderMut {  }","parent":null,"children":[{"krate":0,"index":643}],"decl_id":null,"docs":" A builder for computing where in a [`HashMap`] a key-value pair would be stored.","sig":null,"attributes":[{"value":"/ A builder for computing where in a [`HashMap`] a key-value pair would be stored.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":126237,"byte_end":126321,"line_start":1438,"line_end":1438,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":126322,"byte_end":126325,"line_start":1439,"line_end":1439,"column_start":1,"column_end":4}},{"value":"/ See the [`HashMap::raw_entry_mut`] docs for usage examples.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":126326,"byte_end":126389,"line_start":1440,"line_end":1440,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":126390,"byte_end":126393,"line_start":1441,"line_end":1441,"column_start":1,"column_end":4}},{"value":"/ [`HashMap::raw_entry_mut`]: struct.HashMap.html#method.raw_entry_mut","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":126394,"byte_end":126466,"line_start":1442,"line_end":1442,"column_start":1,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":649},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127101,"byte_end":127109,"line_start":1460,"line_end":1460,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::RawEntryMut::Occupied","value":"RawEntryMut::Occupied(RawOccupiedEntryMut)","parent":{"krate":0,"index":644},"children":[],"decl_id":null,"docs":" An occupied entry.\n","sig":null,"attributes":[{"value":"/ An occupied entry.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127074,"byte_end":127096,"line_start":1459,"line_end":1459,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":652},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127173,"byte_end":127179,"line_start":1462,"line_end":1462,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::RawEntryMut::Vacant","value":"RawEntryMut::Vacant(RawVacantEntryMut)","parent":{"krate":0,"index":644},"children":[],"decl_id":null,"docs":" A vacant entry.\n","sig":null,"attributes":[{"value":"/ A vacant entry.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127149,"byte_end":127168,"line_start":1461,"line_end":1461,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":644},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127043,"byte_end":127054,"line_start":1458,"line_end":1458,"column_start":10,"column_end":21},"name":"RawEntryMut","qualname":"::map::RawEntryMut","value":"pub enum RawEntryMut<'a, K, V, S> {\n    Occupied(RawOccupiedEntryMut),\n    Vacant(RawVacantEntryMut),\n}","parent":null,"children":[{"krate":0,"index":649},{"krate":0,"index":652}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.","sig":null,"attributes":[{"value":"/ A view into a single entry in a map, which may either be vacant or occupied.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":126550,"byte_end":126630,"line_start":1447,"line_end":1447,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":126631,"byte_end":126634,"line_start":1448,"line_end":1448,"column_start":1,"column_end":4}},{"value":"/ This is a lower-level version of [`Entry`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":126635,"byte_end":126682,"line_start":1449,"line_end":1449,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":126683,"byte_end":126686,"line_start":1450,"line_end":1450,"column_start":1,"column_end":4}},{"value":"/ This `enum` is constructed through the [`raw_entry_mut`] method on [`HashMap`],","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":126687,"byte_end":126770,"line_start":1451,"line_end":1451,"column_start":1,"column_end":84}},{"value":"/ then calling one of the methods of that [`RawEntryBuilderMut`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":126771,"byte_end":126838,"line_start":1452,"line_end":1452,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":126839,"byte_end":126842,"line_start":1453,"line_end":1453,"column_start":1,"column_end":4}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":126843,"byte_end":126879,"line_start":1454,"line_end":1454,"column_start":1,"column_end":37}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":126880,"byte_end":126910,"line_start":1455,"line_end":1455,"column_start":1,"column_end":31}},{"value":"/ [`raw_entry_mut`]: struct.HashMap.html#method.raw_entry_mut","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":126911,"byte_end":126974,"line_start":1456,"line_end":1456,"column_start":1,"column_end":64}},{"value":"/ [`RawEntryBuilderMut`]: struct.RawEntryBuilderMut.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":126975,"byte_end":127033,"line_start":1457,"line_end":1457,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":655},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127368,"byte_end":127387,"line_start":1469,"line_end":1469,"column_start":12,"column_end":31},"name":"RawOccupiedEntryMut","qualname":"::map::RawOccupiedEntryMut","value":"RawOccupiedEntryMut {  }","parent":null,"children":[{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662}],"decl_id":null,"docs":" A view into an occupied entry in a `HashMap`.\n It is part of the [`RawEntryMut`] enum.","sig":null,"attributes":[{"value":"/ A view into an occupied entry in a `HashMap`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127216,"byte_end":127265,"line_start":1465,"line_end":1465,"column_start":1,"column_end":50}},{"value":"/ It is part of the [`RawEntryMut`] enum.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127266,"byte_end":127309,"line_start":1466,"line_end":1466,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127310,"byte_end":127313,"line_start":1467,"line_end":1467,"column_start":1,"column_end":4}},{"value":"/ [`RawEntryMut`]: enum.RawEntryMut.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127314,"byte_end":127356,"line_start":1468,"line_end":1468,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":671},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127868,"byte_end":127885,"line_start":1494,"line_end":1494,"column_start":12,"column_end":29},"name":"RawVacantEntryMut","qualname":"::map::RawVacantEntryMut","value":"RawVacantEntryMut {  }","parent":null,"children":[{"krate":0,"index":676},{"krate":0,"index":677}],"decl_id":null,"docs":" A view into a vacant entry in a `HashMap`.\n It is part of the [`RawEntryMut`] enum.","sig":null,"attributes":[{"value":"/ A view into a vacant entry in a `HashMap`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127719,"byte_end":127765,"line_start":1490,"line_end":1490,"column_start":1,"column_end":47}},{"value":"/ It is part of the [`RawEntryMut`] enum.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127766,"byte_end":127809,"line_start":1491,"line_end":1491,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127810,"byte_end":127813,"line_start":1492,"line_end":1492,"column_start":1,"column_end":4}},{"value":"/ [`RawEntryMut`]: enum.RawEntryMut.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127814,"byte_end":127856,"line_start":1493,"line_end":1493,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":678},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":128195,"byte_end":128210,"line_start":1504,"line_end":1504,"column_start":12,"column_end":27},"name":"RawEntryBuilder","qualname":"::map::RawEntryBuilder","value":"RawEntryBuilder {  }","parent":null,"children":[{"krate":0,"index":683}],"decl_id":null,"docs":" A builder for computing where in a [`HashMap`] a key-value pair would be stored.","sig":null,"attributes":[{"value":"/ A builder for computing where in a [`HashMap`] a key-value pair would be stored.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127966,"byte_end":128050,"line_start":1499,"line_end":1499,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":128051,"byte_end":128054,"line_start":1500,"line_end":1500,"column_start":1,"column_end":4}},{"value":"/ See the [`HashMap::raw_entry`] docs for usage examples.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":128055,"byte_end":128114,"line_start":1501,"line_end":1501,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":128115,"byte_end":128118,"line_start":1502,"line_end":1502,"column_start":1,"column_end":4}},{"value":"/ [`HashMap::raw_entry`]: struct.HashMap.html#method.raw_entry","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":128119,"byte_end":128183,"line_start":1503,"line_end":1503,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":128468,"byte_end":128476,"line_start":1512,"line_end":1512,"column_start":12,"column_end":20},"name":"from_key","qualname":"<RawEntryBuilderMut>::from_key","value":"pub fn from_key<Q: ?Sized>(Self, &Q) -> RawEntryMut where S: BuildHasher,\nK: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Creates a `RawEntryMut` from the given key.\n","sig":null,"attributes":[{"value":"/ Creates a `RawEntryMut` from the given key.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":128316,"byte_end":128363,"line_start":1509,"line_end":1509,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":128404,"byte_end":128410,"line_start":1510,"line_end":1510,"column_start":41,"column_end":47}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":128417,"byte_end":128456,"line_start":1511,"line_end":1511,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":128903,"byte_end":128926,"line_start":1526,"line_end":1526,"column_start":12,"column_end":35},"name":"from_key_hashed_nocheck","qualname":"<RawEntryBuilderMut>::from_key_hashed_nocheck","value":"pub fn from_key_hashed_nocheck<Q: ?Sized>(Self, u64, &Q) -> RawEntryMut where\nK: Borrow<Q>, Q: Eq","parent":null,"children":[],"decl_id":null,"docs":" Creates a `RawEntryMut` from the given key and its hash.\n","sig":null,"attributes":[{"value":"/ Creates a `RawEntryMut` from the given key and its hash.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":128773,"byte_end":128833,"line_start":1523,"line_end":1523,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":128838,"byte_end":128847,"line_start":1524,"line_end":1524,"column_start":5,"column_end":14}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":128852,"byte_end":128891,"line_start":1525,"line_end":1525,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":129312,"byte_end":129321,"line_start":1539,"line_end":1539,"column_start":12,"column_end":21},"name":"from_hash","qualname":"<RawEntryBuilderMut>::from_hash","value":"pub fn from_hash<F>(Self, u64, F) -> RawEntryMut where for<'b> F: FnMut(&'b K)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Creates a `RawEntryMut` from the given hash.\n","sig":null,"attributes":[{"value":"/ Creates a `RawEntryMut` from the given hash.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":129159,"byte_end":129207,"line_start":1536,"line_end":1536,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":129248,"byte_end":129254,"line_start":1537,"line_end":1537,"column_start":41,"column_end":47}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":129261,"byte_end":129300,"line_start":1538,"line_end":1538,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":130316,"byte_end":130324,"line_start":1569,"line_end":1569,"column_start":12,"column_end":20},"name":"from_key","qualname":"<RawEntryBuilder>::from_key","value":"pub fn from_key<Q: ?Sized>(Self, &Q) -> Option<(&'a K, &'a V)> where\nS: BuildHasher, K: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Access an entry by key.\n","sig":null,"attributes":[{"value":"/ Access an entry by key.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":130184,"byte_end":130211,"line_start":1566,"line_end":1566,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":130252,"byte_end":130258,"line_start":1567,"line_end":1567,"column_start":41,"column_end":47}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":130265,"byte_end":130304,"line_start":1568,"line_end":1568,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":130766,"byte_end":130789,"line_start":1583,"line_end":1583,"column_start":12,"column_end":35},"name":"from_key_hashed_nocheck","qualname":"<RawEntryBuilder>::from_key_hashed_nocheck","value":"pub fn from_key_hashed_nocheck<Q: ?Sized>(Self, u64, &Q)\n-> Option<(&'a K, &'a V)> where K: Borrow<Q>, Q: Eq","parent":null,"children":[],"decl_id":null,"docs":" Access an entry by a key and its hash.\n","sig":null,"attributes":[{"value":"/ Access an entry by a key and its hash.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":130619,"byte_end":130661,"line_start":1580,"line_end":1580,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":130702,"byte_end":130708,"line_start":1581,"line_end":1581,"column_start":41,"column_end":47}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":130715,"byte_end":130754,"line_start":1582,"line_end":1582,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":131440,"byte_end":131449,"line_start":1605,"line_end":1605,"column_start":12,"column_end":21},"name":"from_hash","qualname":"<RawEntryBuilder>::from_hash","value":"pub fn from_hash<F>(Self, u64, F) -> Option<(&'a K, &'a V)> where F: FnMut(&K)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Access an entry by hash.\n","sig":null,"attributes":[{"value":"/ Access an entry by hash.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":131307,"byte_end":131335,"line_start":1602,"line_end":1602,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":131376,"byte_end":131382,"line_start":1603,"line_end":1603,"column_start":41,"column_end":47}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":131389,"byte_end":131428,"line_start":1604,"line_end":1604,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132093,"byte_end":132099,"line_start":1627,"line_end":1627,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawEntryMut>::insert","value":"pub fn insert(Self, K, V) -> RawOccupiedEntryMut where K: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns a RawOccupiedEntryMut.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns a RawOccupiedEntryMut.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":131649,"byte_end":131716,"line_start":1614,"line_end":1614,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":131721,"byte_end":131724,"line_start":1615,"line_end":1615,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":131729,"byte_end":131743,"line_start":1616,"line_end":1616,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":131748,"byte_end":131751,"line_start":1617,"line_end":1617,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":131756,"byte_end":131763,"line_start":1618,"line_end":1618,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":131768,"byte_end":131795,"line_start":1619,"line_end":1619,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":131800,"byte_end":131803,"line_start":1620,"line_end":1620,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":131808,"byte_end":131861,"line_start":1621,"line_end":1621,"column_start":5,"column_end":58}},{"value":"/ let entry = map.raw_entry_mut().from_key(\"horseyland\").insert(\"horseyland\", 37);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":131866,"byte_end":131950,"line_start":1622,"line_end":1622,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":131955,"byte_end":131958,"line_start":1623,"line_end":1623,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(entry.remove_entry(), (\"horseyland\", 37));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":131963,"byte_end":132020,"line_start":1624,"line_end":1624,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132025,"byte_end":132032,"line_start":1625,"line_end":1625,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132073,"byte_end":132079,"line_start":1626,"line_end":1626,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133079,"byte_end":133088,"line_start":1658,"line_end":1658,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<RawEntryMut>::or_insert","value":"pub fn or_insert(Self, K, V) -> (&'a mut K, &'a mut V) where K: Hash,\nS: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n mutable references to the key and value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and returns","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132456,"byte_end":132538,"line_start":1641,"line_end":1641,"column_start":5,"column_end":87}},{"value":"/ mutable references to the key and value in the entry.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132543,"byte_end":132600,"line_start":1642,"line_end":1642,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132605,"byte_end":132608,"line_start":1643,"line_end":1643,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132613,"byte_end":132627,"line_start":1644,"line_end":1644,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132632,"byte_end":132635,"line_start":1645,"line_end":1645,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132640,"byte_end":132647,"line_start":1646,"line_end":1646,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132652,"byte_end":132679,"line_start":1647,"line_end":1647,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132684,"byte_end":132687,"line_start":1648,"line_end":1648,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132692,"byte_end":132745,"line_start":1649,"line_end":1649,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132750,"byte_end":132753,"line_start":1650,"line_end":1650,"column_start":5,"column_end":8}},{"value":"/ map.raw_entry_mut().from_key(\"poneyland\").or_insert(\"poneyland\", 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132758,"byte_end":132830,"line_start":1651,"line_end":1651,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(map[\"poneyland\"], 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132835,"byte_end":132871,"line_start":1652,"line_end":1652,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132876,"byte_end":132879,"line_start":1653,"line_end":1653,"column_start":5,"column_end":8}},{"value":"/ *map.raw_entry_mut().from_key(\"poneyland\").or_insert(\"poneyland\", 10).1 *= 2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132884,"byte_end":132965,"line_start":1654,"line_end":1654,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(map[\"poneyland\"], 6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":132970,"byte_end":133006,"line_start":1655,"line_end":1655,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133011,"byte_end":133018,"line_start":1656,"line_end":1656,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133059,"byte_end":133065,"line_start":1657,"line_end":1657,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133992,"byte_end":134006,"line_start":1686,"line_end":1686,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<RawEntryMut>::or_insert_with","value":"pub fn or_insert_with<F>(Self, F) -> (&'a mut K, &'a mut V) where F: FnOnce()\n-> (K, V), K: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns mutable references to the key and value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default function if empty,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133402,"byte_end":133495,"line_start":1669,"line_end":1669,"column_start":5,"column_end":98}},{"value":"/ and returns mutable references to the key and value in the entry.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133500,"byte_end":133569,"line_start":1670,"line_end":1670,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133574,"byte_end":133577,"line_start":1671,"line_end":1671,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133582,"byte_end":133596,"line_start":1672,"line_end":1672,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133601,"byte_end":133604,"line_start":1673,"line_end":1673,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133609,"byte_end":133616,"line_start":1674,"line_end":1674,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133621,"byte_end":133648,"line_start":1675,"line_end":1675,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133653,"byte_end":133656,"line_start":1676,"line_end":1676,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, String> = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133661,"byte_end":133717,"line_start":1677,"line_end":1677,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133722,"byte_end":133725,"line_start":1678,"line_end":1678,"column_start":5,"column_end":8}},{"value":"/ map.raw_entry_mut().from_key(\"poneyland\").or_insert_with(|| {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133730,"byte_end":133795,"line_start":1679,"line_end":1679,"column_start":5,"column_end":70}},{"value":"/     (\"poneyland\", \"hoho\".to_string())","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133800,"byte_end":133841,"line_start":1680,"line_end":1680,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133846,"byte_end":133853,"line_start":1681,"line_end":1681,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133858,"byte_end":133861,"line_start":1682,"line_end":1682,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], \"hoho\".to_string());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133866,"byte_end":133919,"line_start":1683,"line_end":1683,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133924,"byte_end":133931,"line_start":1684,"line_end":1684,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":133972,"byte_end":133978,"line_start":1685,"line_end":1685,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":135102,"byte_end":135112,"line_start":1724,"line_end":1724,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<RawEntryMut>::and_modify","value":"pub fn and_modify<F>(Self, F) -> Self where F: FnOnce(&mut K, &mut V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Provides in-place mutable access to an occupied entry before any\n potential inserts into the map.","sig":null,"attributes":[{"value":"/ Provides in-place mutable access to an occupied entry before any","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134385,"byte_end":134453,"line_start":1701,"line_end":1701,"column_start":5,"column_end":73}},{"value":"/ potential inserts into the map.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134458,"byte_end":134493,"line_start":1702,"line_end":1702,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134498,"byte_end":134501,"line_start":1703,"line_end":1703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134506,"byte_end":134520,"line_start":1704,"line_end":1704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134525,"byte_end":134528,"line_start":1705,"line_end":1705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134533,"byte_end":134540,"line_start":1706,"line_end":1706,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134545,"byte_end":134572,"line_start":1707,"line_end":1707,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134577,"byte_end":134580,"line_start":1708,"line_end":1708,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134585,"byte_end":134638,"line_start":1709,"line_end":1709,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134643,"byte_end":134646,"line_start":1710,"line_end":1710,"column_start":5,"column_end":8}},{"value":"/ map.raw_entry_mut()","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134651,"byte_end":134674,"line_start":1711,"line_end":1711,"column_start":5,"column_end":28}},{"value":"/    .from_key(\"poneyland\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134679,"byte_end":134708,"line_start":1712,"line_end":1712,"column_start":5,"column_end":34}},{"value":"/    .and_modify(|_k, v| { *v += 1 })","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134713,"byte_end":134752,"line_start":1713,"line_end":1713,"column_start":5,"column_end":44}},{"value":"/    .or_insert(\"poneyland\", 42);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134757,"byte_end":134792,"line_start":1714,"line_end":1714,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(map[\"poneyland\"], 42);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134797,"byte_end":134834,"line_start":1715,"line_end":1715,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134839,"byte_end":134842,"line_start":1716,"line_end":1716,"column_start":5,"column_end":8}},{"value":"/ map.raw_entry_mut()","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134847,"byte_end":134870,"line_start":1717,"line_end":1717,"column_start":5,"column_end":28}},{"value":"/    .from_key(\"poneyland\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134875,"byte_end":134904,"line_start":1718,"line_end":1718,"column_start":5,"column_end":34}},{"value":"/    .and_modify(|_k, v| { *v += 1 })","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134909,"byte_end":134948,"line_start":1719,"line_end":1719,"column_start":5,"column_end":44}},{"value":"/    .or_insert(\"poneyland\", 0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134953,"byte_end":134987,"line_start":1720,"line_end":1720,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":134992,"byte_end":135029,"line_start":1721,"line_end":1721,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":135034,"byte_end":135041,"line_start":1722,"line_end":1722,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":135082,"byte_end":135088,"line_start":1723,"line_end":1723,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":137198,"byte_end":137220,"line_start":1796,"line_end":1796,"column_start":12,"column_end":34},"name":"and_replace_entry_with","qualname":"<RawEntryMut>::and_replace_entry_with","value":"pub fn and_replace_entry_with<F>(Self, F) -> Self where F: FnOnce(&K, V) ->\nOption<V>","parent":null,"children":[],"decl_id":null,"docs":" Provides shared access to the key and owned access to the value of\n an occupied entry and allows to replace or remove it based on the\n value of the returned option.","sig":null,"attributes":[{"value":"/ Provides shared access to the key and owned access to the value of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":135533,"byte_end":135603,"line_start":1740,"line_end":1740,"column_start":5,"column_end":75}},{"value":"/ an occupied entry and allows to replace or remove it based on the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":135608,"byte_end":135677,"line_start":1741,"line_end":1741,"column_start":5,"column_end":74}},{"value":"/ value of the returned option.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":135682,"byte_end":135715,"line_start":1742,"line_end":1742,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":135720,"byte_end":135723,"line_start":1743,"line_end":1743,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":135728,"byte_end":135742,"line_start":1744,"line_end":1744,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":135747,"byte_end":135750,"line_start":1745,"line_end":1745,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":135755,"byte_end":135762,"line_start":1746,"line_end":1746,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":135767,"byte_end":135794,"line_start":1747,"line_end":1747,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::RawEntryMut;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":135799,"byte_end":135840,"line_start":1748,"line_end":1748,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":135845,"byte_end":135848,"line_start":1749,"line_end":1749,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":135853,"byte_end":135906,"line_start":1750,"line_end":1750,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":135911,"byte_end":135914,"line_start":1751,"line_end":1751,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":135919,"byte_end":135938,"line_start":1752,"line_end":1752,"column_start":5,"column_end":24}},{"value":"/     .raw_entry_mut()","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":135943,"byte_end":135967,"line_start":1753,"line_end":1753,"column_start":5,"column_end":29}},{"value":"/     .from_key(\"poneyland\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":135972,"byte_end":136002,"line_start":1754,"line_end":1754,"column_start":5,"column_end":35}},{"value":"/     .and_replace_entry_with(|_k, _v| panic!());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136007,"byte_end":136058,"line_start":1755,"line_end":1755,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136063,"byte_end":136066,"line_start":1756,"line_end":1756,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136071,"byte_end":136088,"line_start":1757,"line_end":1757,"column_start":5,"column_end":22}},{"value":"/     RawEntryMut::Vacant(_) => {},","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136093,"byte_end":136130,"line_start":1758,"line_end":1758,"column_start":5,"column_end":42}},{"value":"/     RawEntryMut::Occupied(_) => panic!(),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136135,"byte_end":136180,"line_start":1759,"line_end":1759,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136185,"byte_end":136190,"line_start":1760,"line_end":1760,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136195,"byte_end":136198,"line_start":1761,"line_end":1761,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"poneyland\", 42);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136203,"byte_end":136235,"line_start":1762,"line_end":1762,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136240,"byte_end":136243,"line_start":1763,"line_end":1763,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136248,"byte_end":136267,"line_start":1764,"line_end":1764,"column_start":5,"column_end":24}},{"value":"/     .raw_entry_mut()","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136272,"byte_end":136296,"line_start":1765,"line_end":1765,"column_start":5,"column_end":29}},{"value":"/     .from_key(\"poneyland\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136301,"byte_end":136331,"line_start":1766,"line_end":1766,"column_start":5,"column_end":35}},{"value":"/     .and_replace_entry_with(|k, v| {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136336,"byte_end":136376,"line_start":1767,"line_end":1767,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(k, &\"poneyland\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136381,"byte_end":136421,"line_start":1768,"line_end":1768,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(v, 42);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136426,"byte_end":136456,"line_start":1769,"line_end":1769,"column_start":5,"column_end":35}},{"value":"/         Some(v + 1)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136461,"byte_end":136484,"line_start":1770,"line_end":1770,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136489,"byte_end":136500,"line_start":1771,"line_end":1771,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136505,"byte_end":136508,"line_start":1772,"line_end":1772,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136513,"byte_end":136530,"line_start":1773,"line_end":1773,"column_start":5,"column_end":22}},{"value":"/     RawEntryMut::Occupied(e) => {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136535,"byte_end":136572,"line_start":1774,"line_end":1774,"column_start":5,"column_end":42}},{"value":"/         assert_eq!(e.key(), &\"poneyland\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136577,"byte_end":136623,"line_start":1775,"line_end":1775,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(e.get(), &43);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136628,"byte_end":136665,"line_start":1776,"line_end":1776,"column_start":5,"column_end":42}},{"value":"/     },","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136670,"byte_end":136680,"line_start":1777,"line_end":1777,"column_start":5,"column_end":15}},{"value":"/     RawEntryMut::Vacant(_) => panic!(),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136685,"byte_end":136728,"line_start":1778,"line_end":1778,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136733,"byte_end":136738,"line_start":1779,"line_end":1779,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136743,"byte_end":136746,"line_start":1780,"line_end":1780,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136751,"byte_end":136788,"line_start":1781,"line_end":1781,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136793,"byte_end":136796,"line_start":1782,"line_end":1782,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136801,"byte_end":136820,"line_start":1783,"line_end":1783,"column_start":5,"column_end":24}},{"value":"/     .raw_entry_mut()","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136825,"byte_end":136849,"line_start":1784,"line_end":1784,"column_start":5,"column_end":29}},{"value":"/     .from_key(\"poneyland\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136854,"byte_end":136884,"line_start":1785,"line_end":1785,"column_start":5,"column_end":35}},{"value":"/     .and_replace_entry_with(|_k, _v| None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136889,"byte_end":136936,"line_start":1786,"line_end":1786,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136941,"byte_end":136944,"line_start":1787,"line_end":1787,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136949,"byte_end":136966,"line_start":1788,"line_end":1788,"column_start":5,"column_end":22}},{"value":"/     RawEntryMut::Vacant(_) => {},","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":136971,"byte_end":137008,"line_start":1789,"line_end":1789,"column_start":5,"column_end":42}},{"value":"/     RawEntryMut::Occupied(_) => panic!(),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":137013,"byte_end":137058,"line_start":1790,"line_end":1790,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":137063,"byte_end":137068,"line_start":1791,"line_end":1791,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":137073,"byte_end":137076,"line_start":1792,"line_end":1792,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.contains_key(\"poneyland\"));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":137081,"byte_end":137125,"line_start":1793,"line_end":1793,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":137130,"byte_end":137137,"line_start":1794,"line_end":1794,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":137178,"byte_end":137184,"line_start":1795,"line_end":1795,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":137619,"byte_end":137622,"line_start":1810,"line_end":1810,"column_start":12,"column_end":15},"name":"key","qualname":"<RawOccupiedEntryMut>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the key in the entry.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":137513,"byte_end":137558,"line_start":1808,"line_end":1808,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":137599,"byte_end":137605,"line_start":1809,"line_end":1809,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":137804,"byte_end":137811,"line_start":1816,"line_end":1816,"column_start":12,"column_end":19},"name":"key_mut","qualname":"<RawOccupiedEntryMut>::key_mut","value":"pub fn key_mut(&mut Self) -> &mut K","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the key in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the key in the entry.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":137690,"byte_end":137743,"line_start":1814,"line_end":1814,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":137784,"byte_end":137790,"line_start":1815,"line_end":1815,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":138072,"byte_end":138080,"line_start":1823,"line_end":1823,"column_start":12,"column_end":20},"name":"into_key","qualname":"<RawOccupiedEntryMut>::into_key","value":"pub fn into_key(Self) -> &'a mut K","parent":null,"children":[],"decl_id":null,"docs":" Converts the entry into a mutable reference to the key in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"/ Converts the entry into a mutable reference to the key in the entry","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":137891,"byte_end":137962,"line_start":1820,"line_end":1820,"column_start":5,"column_end":76}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":137967,"byte_end":138011,"line_start":1821,"line_end":1821,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":138052,"byte_end":138058,"line_start":1822,"line_end":1822,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":138266,"byte_end":138269,"line_start":1829,"line_end":1829,"column_start":12,"column_end":15},"name":"get","qualname":"<RawOccupiedEntryMut>::get","value":"pub fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":138158,"byte_end":138205,"line_start":1827,"line_end":1827,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":138246,"byte_end":138252,"line_start":1828,"line_end":1828,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":138528,"byte_end":138536,"line_start":1836,"line_end":1836,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<RawOccupiedEntryMut>::into_mut","value":"pub fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the value in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"/ Converts the OccupiedEntry into a mutable reference to the value in the entry","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":138337,"byte_end":138418,"line_start":1833,"line_end":1833,"column_start":5,"column_end":86}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":138423,"byte_end":138467,"line_start":1834,"line_end":1834,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":138508,"byte_end":138514,"line_start":1835,"line_end":1835,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":138730,"byte_end":138737,"line_start":1842,"line_end":1842,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RawOccupiedEntryMut>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the value in the entry.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":138614,"byte_end":138669,"line_start":1840,"line_end":1840,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":138710,"byte_end":138716,"line_start":1841,"line_end":1841,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":138933,"byte_end":138946,"line_start":1848,"line_end":1848,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<RawOccupiedEntryMut>::get_key_value","value":"pub fn get_key_value(&mut Self) -> (&K, &V)","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key and value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the key and value in the entry.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":138817,"byte_end":138872,"line_start":1846,"line_end":1846,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":138913,"byte_end":138919,"line_start":1847,"line_end":1847,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":139219,"byte_end":139236,"line_start":1857,"line_end":1857,"column_start":12,"column_end":29},"name":"get_key_value_mut","qualname":"<RawOccupiedEntryMut>::get_key_value_mut","value":"pub fn get_key_value_mut(&mut Self) -> (&mut K, &mut V)","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the key and value in the entry.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the key and value in the entry.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":139095,"byte_end":139158,"line_start":1855,"line_end":1855,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":139199,"byte_end":139205,"line_start":1856,"line_end":1856,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":139604,"byte_end":139618,"line_start":1867,"line_end":1867,"column_start":12,"column_end":26},"name":"into_key_value","qualname":"<RawOccupiedEntryMut>::into_key_value","value":"pub fn into_key_value(Self) -> (&'a mut K, &'a mut V)","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the key and value in the entry\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"/ Converts the OccupiedEntry into a mutable reference to the key and value in the entry","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":139405,"byte_end":139494,"line_start":1864,"line_end":1864,"column_start":5,"column_end":94}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":139499,"byte_end":139543,"line_start":1865,"line_end":1865,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":139584,"byte_end":139590,"line_start":1866,"line_end":1866,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":139916,"byte_end":139922,"line_start":1876,"line_end":1876,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawOccupiedEntryMut>::insert","value":"pub fn insert(&mut Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":139788,"byte_end":139855,"line_start":1874,"line_end":1874,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":139896,"byte_end":139902,"line_start":1875,"line_end":1875,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140134,"byte_end":140144,"line_start":1882,"line_end":1882,"column_start":12,"column_end":22},"name":"insert_key","qualname":"<RawOccupiedEntryMut>::insert_key","value":"pub fn insert_key(&mut Self, K) -> K","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140006,"byte_end":140073,"line_start":1880,"line_end":1880,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140114,"byte_end":140120,"line_start":1881,"line_end":1881,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140338,"byte_end":140344,"line_start":1888,"line_end":1888,"column_start":12,"column_end":18},"name":"remove","qualname":"<RawOccupiedEntryMut>::remove","value":"pub fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.\n","sig":null,"attributes":[{"value":"/ Takes the value out of the entry, and returns it.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140224,"byte_end":140277,"line_start":1886,"line_end":1886,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140318,"byte_end":140324,"line_start":1887,"line_end":1887,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140517,"byte_end":140529,"line_start":1894,"line_end":1894,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<RawOccupiedEntryMut>::remove_entry","value":"pub fn remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Take the ownership of the key and value from the map.\n","sig":null,"attributes":[{"value":"/ Take the ownership of the key and value from the map.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140399,"byte_end":140456,"line_start":1892,"line_end":1892,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140497,"byte_end":140503,"line_start":1893,"line_end":1893,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140842,"byte_end":140860,"line_start":1902,"line_end":1902,"column_start":12,"column_end":30},"name":"replace_entry_with","qualname":"<RawOccupiedEntryMut>::replace_entry_with","value":"pub fn replace_entry_with<F>(Self, F) -> RawEntryMut where F: FnOnce(&K, V) ->\nOption<V>","parent":null,"children":[],"decl_id":null,"docs":" Provides shared access to the key and owned access to the value of\n the entry and allows to replace or remove it based on the\n value of the returned option.\n","sig":null,"attributes":[{"value":"/ Provides shared access to the key and owned access to the value of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140607,"byte_end":140677,"line_start":1898,"line_end":1898,"column_start":5,"column_end":75}},{"value":"/ the entry and allows to replace or remove it based on the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140682,"byte_end":140743,"line_start":1899,"line_end":1899,"column_start":5,"column_end":66}},{"value":"/ value of the returned option.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140748,"byte_end":140781,"line_start":1900,"line_end":1900,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":140822,"byte_end":140828,"line_start":1901,"line_end":1901,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":141719,"byte_end":141725,"line_start":1929,"line_end":1929,"column_start":12,"column_end":18},"name":"insert","qualname":"<RawVacantEntryMut>::insert","value":"pub fn insert(Self, K, V) -> (&'a mut K, &'a mut V) where K: Hash,\nS: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntry's key,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":141552,"byte_end":141611,"line_start":1926,"line_end":1926,"column_start":5,"column_end":64}},{"value":"/ and returns a mutable reference to it.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":141616,"byte_end":141658,"line_start":1927,"line_end":1927,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":141699,"byte_end":141705,"line_start":1928,"line_end":1928,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142204,"byte_end":142225,"line_start":1943,"line_end":1943,"column_start":12,"column_end":33},"name":"insert_hashed_nocheck","qualname":"<RawVacantEntryMut>::insert_hashed_nocheck","value":"pub fn insert_hashed_nocheck(Self, u64, K, V) -> (&'a mut K, &'a mut V) where\nK: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntry's key,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":141998,"byte_end":142057,"line_start":1939,"line_end":1939,"column_start":5,"column_end":64}},{"value":"/ and returns a mutable reference to it.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142062,"byte_end":142104,"line_start":1940,"line_end":1940,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142145,"byte_end":142151,"line_start":1941,"line_end":1941,"column_start":41,"column_end":47}},{"value":"allow(clippy :: shadow_unrelated)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142158,"byte_end":142192,"line_start":1942,"line_end":1942,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142604,"byte_end":142622,"line_start":1954,"line_end":1954,"column_start":12,"column_end":30},"name":"insert_with_hasher","qualname":"<RawVacantEntryMut>::insert_with_hasher","value":"pub fn insert_with_hasher<H>(Self, u64, K, V, H) -> (&'a mut K, &'a mut V)\nwhere H: Fn(&K) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Set the value of an entry with a custom hasher function.\n","sig":null,"attributes":[{"value":"/ Set the value of an entry with a custom hasher function.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142483,"byte_end":142543,"line_start":1952,"line_end":1952,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":142584,"byte_end":142590,"line_start":1953,"line_end":1953,"column_start":41,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":799},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":145019,"byte_end":145027,"line_start":2035,"line_end":2035,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":794},"children":[],"decl_id":null,"docs":" An occupied entry.\n","sig":null,"attributes":[{"value":"/ An occupied entry.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":144992,"byte_end":145014,"line_start":2034,"line_end":2034,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":802},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":145086,"byte_end":145092,"line_start":2038,"line_end":2038,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":794},"children":[],"decl_id":null,"docs":" A vacant entry.\n","sig":null,"attributes":[{"value":"/ A vacant entry.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":145062,"byte_end":145081,"line_start":2037,"line_end":2037,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":794},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":144967,"byte_end":144972,"line_start":2033,"line_end":2033,"column_start":10,"column_end":15},"name":"Entry","qualname":"::map::Entry","value":"pub enum Entry<'a, K, V, S> { Occupied(OccupiedEntry), Vacant(VacantEntry), }","parent":null,"children":[{"krate":0,"index":799},{"krate":0,"index":802}],"decl_id":null,"docs":" A view into a single entry in a map, which may either be vacant or occupied.","sig":null,"attributes":[{"value":"/ A view into a single entry in a map, which may either be vacant or occupied.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":144711,"byte_end":144791,"line_start":2027,"line_end":2027,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":144792,"byte_end":144795,"line_start":2028,"line_end":2028,"column_start":1,"column_end":4}},{"value":"/ This `enum` is constructed from the [`entry`] method on [`HashMap`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":144796,"byte_end":144868,"line_start":2029,"line_end":2029,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":144869,"byte_end":144872,"line_start":2030,"line_end":2030,"column_start":1,"column_end":4}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":144873,"byte_end":144909,"line_start":2031,"line_end":2031,"column_start":1,"column_end":37}},{"value":"/ [`entry`]: struct.HashMap.html#method.entry","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":144910,"byte_end":144957,"line_start":2032,"line_end":2032,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":810},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":145578,"byte_end":145591,"line_start":2054,"line_end":2054,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::map::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818}],"decl_id":null,"docs":" A view into an occupied entry in a `HashMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into an occupied entry in a `HashMap`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":145444,"byte_end":145493,"line_start":2050,"line_end":2050,"column_start":1,"column_end":50}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":145494,"byte_end":145531,"line_start":2051,"line_end":2051,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":145532,"byte_end":145535,"line_start":2052,"line_end":2052,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":145536,"byte_end":145566,"line_start":2053,"line_end":2053,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":832},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":146331,"byte_end":146342,"line_start":2089,"line_end":2089,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::map::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839}],"decl_id":null,"docs":" A view into a vacant entry in a `HashMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into a vacant entry in a `HashMap`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":146200,"byte_end":146246,"line_start":2085,"line_end":2085,"column_start":1,"column_end":47}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":146247,"byte_end":146284,"line_start":2086,"line_end":2086,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":146285,"byte_end":146288,"line_start":2087,"line_end":2087,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":146289,"byte_end":146319,"line_start":2088,"line_end":2088,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":153924,"byte_end":153930,"line_start":2367,"line_end":2367,"column_start":12,"column_end":18},"name":"insert","qualname":"<Entry>::insert","value":"pub fn insert(Self, V) -> OccupiedEntry where K: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns an OccupiedEntry.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns an OccupiedEntry.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":153532,"byte_end":153594,"line_start":2354,"line_end":2354,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":153599,"byte_end":153602,"line_start":2355,"line_end":2355,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":153607,"byte_end":153621,"line_start":2356,"line_end":2356,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":153626,"byte_end":153629,"line_start":2357,"line_end":2357,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":153634,"byte_end":153641,"line_start":2358,"line_end":2358,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":153646,"byte_end":153673,"line_start":2359,"line_end":2359,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":153678,"byte_end":153681,"line_start":2360,"line_end":2360,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":153686,"byte_end":153739,"line_start":2361,"line_end":2361,"column_start":5,"column_end":58}},{"value":"/ let entry = map.entry(\"horseyland\").insert(37);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":153744,"byte_end":153795,"line_start":2362,"line_end":2362,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":153800,"byte_end":153803,"line_start":2363,"line_end":2363,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(entry.key(), &\"horseyland\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":153808,"byte_end":153851,"line_start":2364,"line_end":2364,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":153856,"byte_end":153863,"line_start":2365,"line_end":2365,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":153904,"byte_end":153910,"line_start":2366,"line_end":2366,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":154806,"byte_end":154815,"line_start":2398,"line_end":2398,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, V) -> &'a mut V where K: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default if empty, and returns\n a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default if empty, and returns","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":154256,"byte_end":154338,"line_start":2381,"line_end":2381,"column_start":5,"column_end":87}},{"value":"/ a mutable reference to the value in the entry.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":154343,"byte_end":154393,"line_start":2382,"line_end":2382,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":154398,"byte_end":154401,"line_start":2383,"line_end":2383,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":154406,"byte_end":154420,"line_start":2384,"line_end":2384,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":154425,"byte_end":154428,"line_start":2385,"line_end":2385,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":154433,"byte_end":154440,"line_start":2386,"line_end":2386,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":154445,"byte_end":154472,"line_start":2387,"line_end":2387,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":154477,"byte_end":154480,"line_start":2388,"line_end":2388,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":154485,"byte_end":154538,"line_start":2389,"line_end":2389,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":154543,"byte_end":154546,"line_start":2390,"line_end":2390,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\").or_insert(3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":154551,"byte_end":154591,"line_start":2391,"line_end":2391,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(map[\"poneyland\"], 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":154596,"byte_end":154632,"line_start":2392,"line_end":2392,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":154637,"byte_end":154640,"line_start":2393,"line_end":2393,"column_start":5,"column_end":8}},{"value":"/ *map.entry(\"poneyland\").or_insert(10) *= 2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":154645,"byte_end":154692,"line_start":2394,"line_end":2394,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(map[\"poneyland\"], 6);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":154697,"byte_end":154733,"line_start":2395,"line_end":2395,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":154738,"byte_end":154745,"line_start":2396,"line_end":2396,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":154786,"byte_end":154792,"line_start":2397,"line_end":2397,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":155605,"byte_end":155619,"line_start":2425,"line_end":2425,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F: FnOnce() -> V>(Self, F) -> &'a mut V where K: Hash,\nS: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the result of the default function if empty,\n and returns a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the result of the default function if empty,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":155061,"byte_end":155154,"line_start":2409,"line_end":2409,"column_start":5,"column_end":98}},{"value":"/ and returns a mutable reference to the value in the entry.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":155159,"byte_end":155221,"line_start":2410,"line_end":2410,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":155226,"byte_end":155229,"line_start":2411,"line_end":2411,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":155234,"byte_end":155248,"line_start":2412,"line_end":2412,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":155253,"byte_end":155256,"line_start":2413,"line_end":2413,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":155261,"byte_end":155268,"line_start":2414,"line_end":2414,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":155273,"byte_end":155300,"line_start":2415,"line_end":2415,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":155305,"byte_end":155308,"line_start":2416,"line_end":2416,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, String> = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":155313,"byte_end":155369,"line_start":2417,"line_end":2417,"column_start":5,"column_end":61}},{"value":"/ let s = \"hoho\".to_string();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":155374,"byte_end":155405,"line_start":2418,"line_end":2418,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":155410,"byte_end":155413,"line_start":2419,"line_end":2419,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\").or_insert_with(|| s);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":155418,"byte_end":155466,"line_start":2420,"line_end":2420,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":155471,"byte_end":155474,"line_start":2421,"line_end":2421,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], \"hoho\".to_string());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":155479,"byte_end":155532,"line_start":2422,"line_end":2422,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":155537,"byte_end":155544,"line_start":2423,"line_end":2423,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":155585,"byte_end":155591,"line_start":2424,"line_end":2424,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":156447,"byte_end":156465,"line_start":2452,"line_end":2452,"column_start":12,"column_end":30},"name":"or_insert_with_key","qualname":"<Entry>::or_insert_with_key","value":"pub fn or_insert_with_key<F: FnOnce(&K) -> V>(Self, F) -> &'a mut V where\nK: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting, if empty, the result of the default function,\n which takes the key as its argument, and returns a mutable reference to the value in the\n entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting, if empty, the result of the default function,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":155885,"byte_end":155980,"line_start":2436,"line_end":2436,"column_start":5,"column_end":100}},{"value":"/ which takes the key as its argument, and returns a mutable reference to the value in the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":155985,"byte_end":156077,"line_start":2437,"line_end":2437,"column_start":5,"column_end":97}},{"value":"/ entry.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":156082,"byte_end":156092,"line_start":2438,"line_end":2438,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":156097,"byte_end":156100,"line_start":2439,"line_end":2439,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":156105,"byte_end":156119,"line_start":2440,"line_end":2440,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":156124,"byte_end":156127,"line_start":2441,"line_end":2441,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":156132,"byte_end":156139,"line_start":2442,"line_end":2442,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":156144,"byte_end":156171,"line_start":2443,"line_end":2443,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":156176,"byte_end":156179,"line_start":2444,"line_end":2444,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, usize> = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":156184,"byte_end":156239,"line_start":2445,"line_end":2445,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":156244,"byte_end":156247,"line_start":2446,"line_end":2446,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\").or_insert_with_key(|key| key.chars().count());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":156252,"byte_end":156325,"line_start":2447,"line_end":2447,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":156330,"byte_end":156333,"line_start":2448,"line_end":2448,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 9);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":156338,"byte_end":156374,"line_start":2449,"line_end":2449,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":156379,"byte_end":156386,"line_start":2450,"line_end":2450,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":156427,"byte_end":156433,"line_start":2451,"line_end":2451,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157136,"byte_end":157139,"line_start":2477,"line_end":2477,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to this entry's key.","sig":null,"attributes":[{"value":"/ Returns a reference to this entry's key.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":156810,"byte_end":156854,"line_start":2466,"line_end":2466,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":156859,"byte_end":156862,"line_start":2467,"line_end":2467,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":156867,"byte_end":156881,"line_start":2468,"line_end":2468,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":156886,"byte_end":156889,"line_start":2469,"line_end":2469,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":156894,"byte_end":156901,"line_start":2470,"line_end":2470,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":156906,"byte_end":156933,"line_start":2471,"line_end":2471,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":156938,"byte_end":156941,"line_start":2472,"line_end":2472,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":156946,"byte_end":156999,"line_start":2473,"line_end":2473,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(map.entry(\"poneyland\").key(), &\"poneyland\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157004,"byte_end":157063,"line_start":2474,"line_end":2474,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157068,"byte_end":157075,"line_start":2475,"line_end":2475,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157116,"byte_end":157122,"line_start":2476,"line_end":2476,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157928,"byte_end":157938,"line_start":2505,"line_end":2505,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<Entry>::and_modify","value":"pub fn and_modify<F>(Self, F) -> Self where F: FnOnce(&mut V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Provides in-place mutable access to an occupied entry before any\n potential inserts into the map.","sig":null,"attributes":[{"value":"/ Provides in-place mutable access to an occupied entry before any","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157306,"byte_end":157374,"line_start":2484,"line_end":2484,"column_start":5,"column_end":73}},{"value":"/ potential inserts into the map.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157379,"byte_end":157414,"line_start":2485,"line_end":2485,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157419,"byte_end":157422,"line_start":2486,"line_end":2486,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157427,"byte_end":157441,"line_start":2487,"line_end":2487,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157446,"byte_end":157449,"line_start":2488,"line_end":2488,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157454,"byte_end":157461,"line_start":2489,"line_end":2489,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157466,"byte_end":157493,"line_start":2490,"line_end":2490,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157498,"byte_end":157501,"line_start":2491,"line_end":2491,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157506,"byte_end":157559,"line_start":2492,"line_end":2492,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157564,"byte_end":157567,"line_start":2493,"line_end":2493,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157572,"byte_end":157598,"line_start":2494,"line_end":2494,"column_start":5,"column_end":31}},{"value":"/    .and_modify(|e| { *e += 1 })","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157603,"byte_end":157638,"line_start":2495,"line_end":2495,"column_start":5,"column_end":40}},{"value":"/    .or_insert(42);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157643,"byte_end":157665,"line_start":2496,"line_end":2496,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(map[\"poneyland\"], 42);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157670,"byte_end":157707,"line_start":2497,"line_end":2497,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157712,"byte_end":157715,"line_start":2498,"line_end":2498,"column_start":5,"column_end":8}},{"value":"/ map.entry(\"poneyland\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157720,"byte_end":157746,"line_start":2499,"line_end":2499,"column_start":5,"column_end":31}},{"value":"/    .and_modify(|e| { *e += 1 })","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157751,"byte_end":157786,"line_start":2500,"line_end":2500,"column_start":5,"column_end":40}},{"value":"/    .or_insert(42);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157791,"byte_end":157813,"line_start":2501,"line_end":2501,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157818,"byte_end":157855,"line_start":2502,"line_end":2502,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157860,"byte_end":157867,"line_start":2503,"line_end":2503,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":157908,"byte_end":157914,"line_start":2504,"line_end":2504,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159858,"byte_end":159880,"line_start":2573,"line_end":2573,"column_start":12,"column_end":34},"name":"and_replace_entry_with","qualname":"<Entry>::and_replace_entry_with","value":"pub fn and_replace_entry_with<F>(Self, F) -> Self where F: FnOnce(&K, V) ->\nOption<V>","parent":null,"children":[],"decl_id":null,"docs":" Provides shared access to the key and owned access to the value of\n an occupied entry and allows to replace or remove it based on the\n value of the returned option.","sig":null,"attributes":[{"value":"/ Provides shared access to the key and owned access to the value of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158238,"byte_end":158308,"line_start":2518,"line_end":2518,"column_start":5,"column_end":75}},{"value":"/ an occupied entry and allows to replace or remove it based on the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158313,"byte_end":158382,"line_start":2519,"line_end":2519,"column_start":5,"column_end":74}},{"value":"/ value of the returned option.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158387,"byte_end":158420,"line_start":2520,"line_end":2520,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158425,"byte_end":158428,"line_start":2521,"line_end":2521,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158433,"byte_end":158447,"line_start":2522,"line_end":2522,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158452,"byte_end":158455,"line_start":2523,"line_end":2523,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158460,"byte_end":158467,"line_start":2524,"line_end":2524,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158472,"byte_end":158499,"line_start":2525,"line_end":2525,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158504,"byte_end":158539,"line_start":2526,"line_end":2526,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158544,"byte_end":158547,"line_start":2527,"line_end":2527,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158552,"byte_end":158605,"line_start":2528,"line_end":2528,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158610,"byte_end":158613,"line_start":2529,"line_end":2529,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158618,"byte_end":158637,"line_start":2530,"line_end":2530,"column_start":5,"column_end":24}},{"value":"/     .entry(\"poneyland\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158642,"byte_end":158669,"line_start":2531,"line_end":2531,"column_start":5,"column_end":32}},{"value":"/     .and_replace_entry_with(|_k, _v| panic!());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158674,"byte_end":158725,"line_start":2532,"line_end":2532,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158730,"byte_end":158733,"line_start":2533,"line_end":2533,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158738,"byte_end":158755,"line_start":2534,"line_end":2534,"column_start":5,"column_end":22}},{"value":"/     Entry::Vacant(e) => {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158760,"byte_end":158789,"line_start":2535,"line_end":2535,"column_start":5,"column_end":34}},{"value":"/         assert_eq!(e.key(), &\"poneyland\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158794,"byte_end":158840,"line_start":2536,"line_end":2536,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158845,"byte_end":158854,"line_start":2537,"line_end":2537,"column_start":5,"column_end":14}},{"value":"/     Entry::Occupied(_) => panic!(),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158859,"byte_end":158898,"line_start":2538,"line_end":2538,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158903,"byte_end":158908,"line_start":2539,"line_end":2539,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158913,"byte_end":158916,"line_start":2540,"line_end":2540,"column_start":5,"column_end":8}},{"value":"/ map.insert(\"poneyland\", 42);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158921,"byte_end":158953,"line_start":2541,"line_end":2541,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158958,"byte_end":158961,"line_start":2542,"line_end":2542,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158966,"byte_end":158985,"line_start":2543,"line_end":2543,"column_start":5,"column_end":24}},{"value":"/     .entry(\"poneyland\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":158990,"byte_end":159017,"line_start":2544,"line_end":2544,"column_start":5,"column_end":32}},{"value":"/     .and_replace_entry_with(|k, v| {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159022,"byte_end":159062,"line_start":2545,"line_end":2545,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(k, &\"poneyland\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159067,"byte_end":159107,"line_start":2546,"line_end":2546,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(v, 42);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159112,"byte_end":159142,"line_start":2547,"line_end":2547,"column_start":5,"column_end":35}},{"value":"/         Some(v + 1)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159147,"byte_end":159170,"line_start":2548,"line_end":2548,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159175,"byte_end":159186,"line_start":2549,"line_end":2549,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159191,"byte_end":159194,"line_start":2550,"line_end":2550,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159199,"byte_end":159216,"line_start":2551,"line_end":2551,"column_start":5,"column_end":22}},{"value":"/     Entry::Occupied(e) => {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159221,"byte_end":159252,"line_start":2552,"line_end":2552,"column_start":5,"column_end":36}},{"value":"/         assert_eq!(e.key(), &\"poneyland\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159257,"byte_end":159303,"line_start":2553,"line_end":2553,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(e.get(), &43);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159308,"byte_end":159345,"line_start":2554,"line_end":2554,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159350,"byte_end":159359,"line_start":2555,"line_end":2555,"column_start":5,"column_end":14}},{"value":"/     Entry::Vacant(_) => panic!(),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159364,"byte_end":159401,"line_start":2556,"line_end":2556,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159406,"byte_end":159411,"line_start":2557,"line_end":2557,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159416,"byte_end":159419,"line_start":2558,"line_end":2558,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159424,"byte_end":159461,"line_start":2559,"line_end":2559,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159466,"byte_end":159469,"line_start":2560,"line_end":2560,"column_start":5,"column_end":8}},{"value":"/ let entry = map","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159474,"byte_end":159493,"line_start":2561,"line_end":2561,"column_start":5,"column_end":24}},{"value":"/     .entry(\"poneyland\")","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159498,"byte_end":159525,"line_start":2562,"line_end":2562,"column_start":5,"column_end":32}},{"value":"/     .and_replace_entry_with(|_k, _v| None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159530,"byte_end":159577,"line_start":2563,"line_end":2563,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159582,"byte_end":159585,"line_start":2564,"line_end":2564,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159590,"byte_end":159607,"line_start":2565,"line_end":2565,"column_start":5,"column_end":22}},{"value":"/     Entry::Vacant(e) => assert_eq!(e.key(), &\"poneyland\"),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159612,"byte_end":159674,"line_start":2566,"line_end":2566,"column_start":5,"column_end":67}},{"value":"/     Entry::Occupied(_) => panic!(),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159679,"byte_end":159718,"line_start":2567,"line_end":2567,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159723,"byte_end":159728,"line_start":2568,"line_end":2568,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159733,"byte_end":159736,"line_start":2569,"line_end":2569,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.contains_key(\"poneyland\"));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159741,"byte_end":159785,"line_start":2570,"line_end":2570,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159790,"byte_end":159797,"line_start":2571,"line_end":2571,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":159838,"byte_end":159844,"line_start":2572,"line_end":2572,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160622,"byte_end":160632,"line_start":2599,"line_end":2599,"column_start":12,"column_end":22},"name":"or_default","qualname":"<Entry>::or_default","value":"pub fn or_default(Self) -> &'a mut V where K: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Ensures a value is in the entry by inserting the default value if empty,\n and returns a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Ensures a value is in the entry by inserting the default value if empty,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160156,"byte_end":160232,"line_start":2585,"line_end":2585,"column_start":5,"column_end":81}},{"value":"/ and returns a mutable reference to the value in the entry.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160237,"byte_end":160299,"line_start":2586,"line_end":2586,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160304,"byte_end":160307,"line_start":2587,"line_end":2587,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160312,"byte_end":160326,"line_start":2588,"line_end":2588,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160331,"byte_end":160334,"line_start":2589,"line_end":2589,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160339,"byte_end":160346,"line_start":2590,"line_end":2590,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160351,"byte_end":160378,"line_start":2591,"line_end":2591,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160383,"byte_end":160386,"line_start":2592,"line_end":2592,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, Option<u32>> = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160391,"byte_end":160452,"line_start":2593,"line_end":2593,"column_start":5,"column_end":66}},{"value":"/ map.entry(\"poneyland\").or_default();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160457,"byte_end":160497,"line_start":2594,"line_end":2594,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160502,"byte_end":160505,"line_start":2595,"line_end":2595,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160510,"byte_end":160549,"line_start":2596,"line_end":2596,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160554,"byte_end":160561,"line_start":2597,"line_end":2597,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160602,"byte_end":160608,"line_start":2598,"line_end":2598,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161299,"byte_end":161302,"line_start":2624,"line_end":2624,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key in the entry.","sig":null,"attributes":[{"value":"/ Gets a reference to the key in the entry.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160926,"byte_end":160971,"line_start":2612,"line_end":2612,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160976,"byte_end":160979,"line_start":2613,"line_end":2613,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160984,"byte_end":160998,"line_start":2614,"line_end":2614,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161003,"byte_end":161006,"line_start":2615,"line_end":2615,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161011,"byte_end":161018,"line_start":2616,"line_end":2616,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161023,"byte_end":161050,"line_start":2617,"line_end":2617,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161055,"byte_end":161058,"line_start":2618,"line_end":2618,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161063,"byte_end":161116,"line_start":2619,"line_end":2619,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161121,"byte_end":161162,"line_start":2620,"line_end":2620,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(map.entry(\"poneyland\").key(), &\"poneyland\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161167,"byte_end":161226,"line_start":2621,"line_end":2621,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161231,"byte_end":161238,"line_start":2622,"line_end":2622,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161279,"byte_end":161285,"line_start":2623,"line_end":2623,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161955,"byte_end":161967,"line_start":2647,"line_end":2647,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"pub fn remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Take the ownership of the key and value from the map.","sig":null,"attributes":[{"value":"/ Take the ownership of the key and value from the map.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161370,"byte_end":161427,"line_start":2628,"line_end":2628,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161432,"byte_end":161435,"line_start":2629,"line_end":2629,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161440,"byte_end":161454,"line_start":2630,"line_end":2630,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161459,"byte_end":161462,"line_start":2631,"line_end":2631,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161467,"byte_end":161474,"line_start":2632,"line_end":2632,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161479,"byte_end":161506,"line_start":2633,"line_end":2633,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161511,"byte_end":161546,"line_start":2634,"line_end":2634,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161551,"byte_end":161554,"line_start":2635,"line_end":2635,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161559,"byte_end":161612,"line_start":2636,"line_end":2636,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161617,"byte_end":161658,"line_start":2637,"line_end":2637,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161663,"byte_end":161666,"line_start":2638,"line_end":2638,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(o) = map.entry(\"poneyland\") {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161671,"byte_end":161727,"line_start":2639,"line_end":2639,"column_start":5,"column_end":61}},{"value":"/     // We delete the entry from the map.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161732,"byte_end":161776,"line_start":2640,"line_end":2640,"column_start":5,"column_end":49}},{"value":"/     o.remove_entry();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161781,"byte_end":161806,"line_start":2641,"line_end":2641,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161811,"byte_end":161816,"line_start":2642,"line_end":2642,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161821,"byte_end":161824,"line_start":2643,"line_end":2643,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.contains_key(\"poneyland\"), false);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161829,"byte_end":161882,"line_start":2644,"line_end":2644,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161887,"byte_end":161894,"line_start":2645,"line_end":2645,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":161935,"byte_end":161941,"line_start":2646,"line_end":2646,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162519,"byte_end":162522,"line_start":2667,"line_end":2667,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Gets a reference to the value in the entry.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162051,"byte_end":162098,"line_start":2651,"line_end":2651,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162103,"byte_end":162106,"line_start":2652,"line_end":2652,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162111,"byte_end":162125,"line_start":2653,"line_end":2653,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162130,"byte_end":162133,"line_start":2654,"line_end":2654,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162138,"byte_end":162145,"line_start":2655,"line_end":2655,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162150,"byte_end":162177,"line_start":2656,"line_end":2656,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162182,"byte_end":162217,"line_start":2657,"line_end":2657,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162222,"byte_end":162225,"line_start":2658,"line_end":2658,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162230,"byte_end":162283,"line_start":2659,"line_end":2659,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162288,"byte_end":162329,"line_start":2660,"line_end":2660,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162334,"byte_end":162337,"line_start":2661,"line_end":2661,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(o) = map.entry(\"poneyland\") {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162342,"byte_end":162398,"line_start":2662,"line_end":2662,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(o.get(), &12);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162403,"byte_end":162436,"line_start":2663,"line_end":2663,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162441,"byte_end":162446,"line_start":2664,"line_end":2664,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162451,"byte_end":162458,"line_start":2665,"line_end":2665,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162499,"byte_end":162505,"line_start":2666,"line_end":2666,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163482,"byte_end":163489,"line_start":2699,"line_end":2699,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the value in the entry.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the value in the entry.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162590,"byte_end":162645,"line_start":2671,"line_end":2671,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162650,"byte_end":162653,"line_start":2672,"line_end":2672,"column_start":5,"column_end":8}},{"value":"/ If you need a reference to the `OccupiedEntry` which may outlive the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162658,"byte_end":162730,"line_start":2673,"line_end":2673,"column_start":5,"column_end":77}},{"value":"/ destruction of the `Entry` value, see [`into_mut`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162735,"byte_end":162790,"line_start":2674,"line_end":2674,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162795,"byte_end":162798,"line_start":2675,"line_end":2675,"column_start":5,"column_end":8}},{"value":"/ [`into_mut`]: #method.into_mut","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162803,"byte_end":162837,"line_start":2676,"line_end":2676,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162842,"byte_end":162845,"line_start":2677,"line_end":2677,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162850,"byte_end":162864,"line_start":2678,"line_end":2678,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162869,"byte_end":162872,"line_start":2679,"line_end":2679,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162877,"byte_end":162884,"line_start":2680,"line_end":2680,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162889,"byte_end":162916,"line_start":2681,"line_end":2681,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162921,"byte_end":162956,"line_start":2682,"line_end":2682,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162961,"byte_end":162964,"line_start":2683,"line_end":2683,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":162969,"byte_end":163022,"line_start":2684,"line_end":2684,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163027,"byte_end":163068,"line_start":2685,"line_end":2685,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163073,"byte_end":163076,"line_start":2686,"line_end":2686,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 12);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163081,"byte_end":163118,"line_start":2687,"line_end":2687,"column_start":5,"column_end":42}},{"value":"/ if let Entry::Occupied(mut o) = map.entry(\"poneyland\") {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163123,"byte_end":163183,"line_start":2688,"line_end":2688,"column_start":5,"column_end":65}},{"value":"/     *o.get_mut() += 10;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163188,"byte_end":163215,"line_start":2689,"line_end":2689,"column_start":5,"column_end":32}},{"value":"/     assert_eq!(*o.get(), 22);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163220,"byte_end":163253,"line_start":2690,"line_end":2690,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163258,"byte_end":163261,"line_start":2691,"line_end":2691,"column_start":5,"column_end":8}},{"value":"/     // We can use the same Entry multiple times.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163266,"byte_end":163318,"line_start":2692,"line_end":2692,"column_start":5,"column_end":57}},{"value":"/     *o.get_mut() += 2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163323,"byte_end":163349,"line_start":2693,"line_end":2693,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163354,"byte_end":163359,"line_start":2694,"line_end":2694,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163364,"byte_end":163367,"line_start":2695,"line_end":2695,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 24);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163372,"byte_end":163409,"line_start":2696,"line_end":2696,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163414,"byte_end":163421,"line_start":2697,"line_end":2697,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163462,"byte_end":163468,"line_start":2698,"line_end":2698,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164341,"byte_end":164349,"line_start":2727,"line_end":2727,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts the OccupiedEntry into a mutable reference to the value in the entry\n with a lifetime bound to the map itself.","sig":null,"attributes":[{"value":"/ Converts the OccupiedEntry into a mutable reference to the value in the entry","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163569,"byte_end":163650,"line_start":2703,"line_end":2703,"column_start":5,"column_end":86}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163655,"byte_end":163699,"line_start":2704,"line_end":2704,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163704,"byte_end":163707,"line_start":2705,"line_end":2705,"column_start":5,"column_end":8}},{"value":"/ If you need multiple references to the `OccupiedEntry`, see [`get_mut`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163712,"byte_end":163788,"line_start":2706,"line_end":2706,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163793,"byte_end":163796,"line_start":2707,"line_end":2707,"column_start":5,"column_end":8}},{"value":"/ [`get_mut`]: #method.get_mut","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163801,"byte_end":163833,"line_start":2708,"line_end":2708,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163838,"byte_end":163841,"line_start":2709,"line_end":2709,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163846,"byte_end":163860,"line_start":2710,"line_end":2710,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163865,"byte_end":163868,"line_start":2711,"line_end":2711,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163873,"byte_end":163880,"line_start":2712,"line_end":2712,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163885,"byte_end":163912,"line_start":2713,"line_end":2713,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163917,"byte_end":163952,"line_start":2714,"line_end":2714,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163957,"byte_end":163960,"line_start":2715,"line_end":2715,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":163965,"byte_end":164018,"line_start":2716,"line_end":2716,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164023,"byte_end":164064,"line_start":2717,"line_end":2717,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164069,"byte_end":164072,"line_start":2718,"line_end":2718,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 12);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164077,"byte_end":164114,"line_start":2719,"line_end":2719,"column_start":5,"column_end":42}},{"value":"/ if let Entry::Occupied(o) = map.entry(\"poneyland\") {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164119,"byte_end":164175,"line_start":2720,"line_end":2720,"column_start":5,"column_end":61}},{"value":"/     *o.into_mut() += 10;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164180,"byte_end":164208,"line_start":2721,"line_end":2721,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164213,"byte_end":164218,"line_start":2722,"line_end":2722,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164223,"byte_end":164226,"line_start":2723,"line_end":2723,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 22);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164231,"byte_end":164268,"line_start":2724,"line_end":2724,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164273,"byte_end":164280,"line_start":2725,"line_end":2725,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164321,"byte_end":164327,"line_start":2726,"line_end":2726,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164973,"byte_end":164979,"line_start":2749,"line_end":2749,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry, and returns the entry's old value.","sig":null,"attributes":[{"value":"/ Sets the value of the entry, and returns the entry's old value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164427,"byte_end":164494,"line_start":2731,"line_end":2731,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164499,"byte_end":164502,"line_start":2732,"line_end":2732,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164507,"byte_end":164521,"line_start":2733,"line_end":2733,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164526,"byte_end":164529,"line_start":2734,"line_end":2734,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164534,"byte_end":164541,"line_start":2735,"line_end":2735,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164546,"byte_end":164573,"line_start":2736,"line_end":2736,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164578,"byte_end":164613,"line_start":2737,"line_end":2737,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164618,"byte_end":164621,"line_start":2738,"line_end":2738,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164626,"byte_end":164679,"line_start":2739,"line_end":2739,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164684,"byte_end":164725,"line_start":2740,"line_end":2740,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164730,"byte_end":164733,"line_start":2741,"line_end":2741,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(mut o) = map.entry(\"poneyland\") {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164738,"byte_end":164798,"line_start":2742,"line_end":2742,"column_start":5,"column_end":65}},{"value":"/     assert_eq!(o.insert(15), 12);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164803,"byte_end":164840,"line_start":2743,"line_end":2743,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164845,"byte_end":164850,"line_start":2744,"line_end":2744,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164855,"byte_end":164858,"line_start":2745,"line_end":2745,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 15);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164863,"byte_end":164900,"line_start":2746,"line_end":2746,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164905,"byte_end":164912,"line_start":2747,"line_end":2747,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":164953,"byte_end":164959,"line_start":2748,"line_end":2748,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165661,"byte_end":165667,"line_start":2773,"line_end":2773,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Takes the value out of the entry, and returns it.","sig":null,"attributes":[{"value":"/ Takes the value out of the entry, and returns it.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165119,"byte_end":165172,"line_start":2755,"line_end":2755,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165177,"byte_end":165180,"line_start":2756,"line_end":2756,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165185,"byte_end":165199,"line_start":2757,"line_end":2757,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165204,"byte_end":165207,"line_start":2758,"line_end":2758,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165212,"byte_end":165219,"line_start":2759,"line_end":2759,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165224,"byte_end":165251,"line_start":2760,"line_end":2760,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165256,"byte_end":165291,"line_start":2761,"line_end":2761,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165296,"byte_end":165299,"line_start":2762,"line_end":2762,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165304,"byte_end":165357,"line_start":2763,"line_end":2763,"column_start":5,"column_end":58}},{"value":"/ map.entry(\"poneyland\").or_insert(12);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165362,"byte_end":165403,"line_start":2764,"line_end":2764,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165408,"byte_end":165411,"line_start":2765,"line_end":2765,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(o) = map.entry(\"poneyland\") {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165416,"byte_end":165472,"line_start":2766,"line_end":2766,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(o.remove(), 12);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165477,"byte_end":165512,"line_start":2767,"line_end":2767,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165517,"byte_end":165522,"line_start":2768,"line_end":2768,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165527,"byte_end":165530,"line_start":2769,"line_end":2769,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map.contains_key(\"poneyland\"), false);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165535,"byte_end":165588,"line_start":2770,"line_end":2770,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165593,"byte_end":165600,"line_start":2771,"line_end":2771,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165641,"byte_end":165647,"line_start":2772,"line_end":2772,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166487,"byte_end":166500,"line_start":2798,"line_end":2798,"column_start":12,"column_end":25},"name":"replace_entry","qualname":"<OccupiedEntry>::replace_entry","value":"pub fn replace_entry(Self, V) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Replaces the entry, returning the old key and value. The new key in the hash map will be\n the key used to create this entry.","sig":null,"attributes":[{"value":"/ Replaces the entry, returning the old key and value. The new key in the hash map will be","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165722,"byte_end":165814,"line_start":2777,"line_end":2777,"column_start":5,"column_end":97}},{"value":"/ the key used to create this entry.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165819,"byte_end":165857,"line_start":2778,"line_end":2778,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165862,"byte_end":165865,"line_start":2779,"line_end":2779,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165870,"byte_end":165884,"line_start":2780,"line_end":2780,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165889,"byte_end":165892,"line_start":2781,"line_end":2781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165897,"byte_end":165904,"line_start":2782,"line_end":2782,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{Entry, HashMap};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165909,"byte_end":165955,"line_start":2783,"line_end":2783,"column_start":5,"column_end":51}},{"value":"/ use std::rc::Rc;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165960,"byte_end":165980,"line_start":2784,"line_end":2784,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165985,"byte_end":165988,"line_start":2785,"line_end":2785,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<Rc<String>, u32> = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":165993,"byte_end":166052,"line_start":2786,"line_end":2786,"column_start":5,"column_end":64}},{"value":"/ map.insert(Rc::new(\"Stringthing\".to_string()), 15);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166057,"byte_end":166112,"line_start":2787,"line_end":2787,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166117,"byte_end":166120,"line_start":2788,"line_end":2788,"column_start":5,"column_end":8}},{"value":"/ let my_key = Rc::new(\"Stringthing\".to_string());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166125,"byte_end":166177,"line_start":2789,"line_end":2789,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166182,"byte_end":166185,"line_start":2790,"line_end":2790,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Occupied(entry) = map.entry(my_key) {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166190,"byte_end":166245,"line_start":2791,"line_end":2791,"column_start":5,"column_end":60}},{"value":"/     // Also replace the key with a handle to our other key.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166250,"byte_end":166313,"line_start":2792,"line_end":2792,"column_start":5,"column_end":68}},{"value":"/     let (old_key, old_value): (Rc<String>, u32) = entry.replace_entry(16);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166318,"byte_end":166396,"line_start":2793,"line_end":2793,"column_start":5,"column_end":83}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166401,"byte_end":166406,"line_start":2794,"line_end":2794,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166411,"byte_end":166414,"line_start":2795,"line_end":2795,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166419,"byte_end":166426,"line_start":2796,"line_end":2796,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166467,"byte_end":166473,"line_start":2797,"line_end":2797,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167661,"byte_end":167672,"line_start":2832,"line_end":2832,"column_start":12,"column_end":23},"name":"replace_key","qualname":"<OccupiedEntry>::replace_key","value":"pub fn replace_key(Self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Replaces the key in the hash map with the key used to create this entry.","sig":null,"attributes":[{"value":"/ Replaces the key in the hash map with the key used to create this entry.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166750,"byte_end":166826,"line_start":2807,"line_end":2807,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166831,"byte_end":166834,"line_start":2808,"line_end":2808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166839,"byte_end":166853,"line_start":2809,"line_end":2809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166858,"byte_end":166861,"line_start":2810,"line_end":2810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166866,"byte_end":166873,"line_start":2811,"line_end":2811,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::hash_map::{Entry, HashMap};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166878,"byte_end":166924,"line_start":2812,"line_end":2812,"column_start":5,"column_end":51}},{"value":"/ use std::rc::Rc;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166929,"byte_end":166949,"line_start":2813,"line_end":2813,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166954,"byte_end":166957,"line_start":2814,"line_end":2814,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<Rc<String>, u32> = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":166962,"byte_end":167021,"line_start":2815,"line_end":2815,"column_start":5,"column_end":64}},{"value":"/ let mut known_strings: Vec<Rc<String>> = Vec::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167026,"byte_end":167082,"line_start":2816,"line_end":2816,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167087,"byte_end":167090,"line_start":2817,"line_end":2817,"column_start":5,"column_end":8}},{"value":"/ // Initialise known strings, run program, etc.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167095,"byte_end":167145,"line_start":2818,"line_end":2818,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167150,"byte_end":167153,"line_start":2819,"line_end":2819,"column_start":5,"column_end":8}},{"value":"/ reclaim_memory(&mut map, &known_strings);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167158,"byte_end":167203,"line_start":2820,"line_end":2820,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167208,"byte_end":167211,"line_start":2821,"line_end":2821,"column_start":5,"column_end":8}},{"value":"/ fn reclaim_memory(map: &mut HashMap<Rc<String>, u32>, known_strings: &[Rc<String>] ) {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167216,"byte_end":167306,"line_start":2822,"line_end":2822,"column_start":5,"column_end":95}},{"value":"/     for s in known_strings {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167311,"byte_end":167343,"line_start":2823,"line_end":2823,"column_start":5,"column_end":37}},{"value":"/         if let Entry::Occupied(entry) = map.entry(s.clone()) {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167348,"byte_end":167414,"line_start":2824,"line_end":2824,"column_start":5,"column_end":71}},{"value":"/             // Replaces the entry's key with our version of it in `known_strings`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167419,"byte_end":167505,"line_start":2825,"line_end":2825,"column_start":5,"column_end":91}},{"value":"/             entry.replace_key();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167510,"byte_end":167546,"line_start":2826,"line_end":2826,"column_start":5,"column_end":41}},{"value":"/         }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167551,"byte_end":167564,"line_start":2827,"line_end":2827,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167569,"byte_end":167578,"line_start":2828,"line_end":2828,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167583,"byte_end":167588,"line_start":2829,"line_end":2829,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167593,"byte_end":167600,"line_start":2830,"line_end":2830,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167641,"byte_end":167647,"line_start":2831,"line_end":2831,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169316,"byte_end":169334,"line_start":2886,"line_end":2886,"column_start":12,"column_end":30},"name":"replace_entry_with","qualname":"<OccupiedEntry>::replace_entry_with","value":"pub fn replace_entry_with<F>(Self, F) -> Entry where F: FnOnce(&K, V) ->\nOption<V>","parent":null,"children":[],"decl_id":null,"docs":" Provides shared access to the key and owned access to the value of\n the entry and allows to replace or remove it based on the\n value of the returned option.","sig":null,"attributes":[{"value":"/ Provides shared access to the key and owned access to the value of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167802,"byte_end":167872,"line_start":2837,"line_end":2837,"column_start":5,"column_end":75}},{"value":"/ the entry and allows to replace or remove it based on the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167877,"byte_end":167938,"line_start":2838,"line_end":2838,"column_start":5,"column_end":66}},{"value":"/ value of the returned option.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167943,"byte_end":167976,"line_start":2839,"line_end":2839,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167981,"byte_end":167984,"line_start":2840,"line_end":2840,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":167989,"byte_end":168003,"line_start":2841,"line_end":2841,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168008,"byte_end":168011,"line_start":2842,"line_end":2842,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168016,"byte_end":168023,"line_start":2843,"line_end":2843,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168028,"byte_end":168055,"line_start":2844,"line_end":2844,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168060,"byte_end":168095,"line_start":2845,"line_end":2845,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168100,"byte_end":168103,"line_start":2846,"line_end":2846,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168108,"byte_end":168161,"line_start":2847,"line_end":2847,"column_start":5,"column_end":58}},{"value":"/ map.insert(\"poneyland\", 42);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168166,"byte_end":168198,"line_start":2848,"line_end":2848,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168203,"byte_end":168206,"line_start":2849,"line_end":2849,"column_start":5,"column_end":8}},{"value":"/ let entry = match map.entry(\"poneyland\") {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168211,"byte_end":168257,"line_start":2850,"line_end":2850,"column_start":5,"column_end":51}},{"value":"/     Entry::Occupied(e) => {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168262,"byte_end":168293,"line_start":2851,"line_end":2851,"column_start":5,"column_end":36}},{"value":"/         e.replace_entry_with(|k, v| {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168298,"byte_end":168339,"line_start":2852,"line_end":2852,"column_start":5,"column_end":46}},{"value":"/             assert_eq!(k, &\"poneyland\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168344,"byte_end":168388,"line_start":2853,"line_end":2853,"column_start":5,"column_end":49}},{"value":"/             assert_eq!(v, 42);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168393,"byte_end":168427,"line_start":2854,"line_end":2854,"column_start":5,"column_end":39}},{"value":"/             Some(v + 1)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168432,"byte_end":168459,"line_start":2855,"line_end":2855,"column_start":5,"column_end":32}},{"value":"/         })","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168464,"byte_end":168478,"line_start":2856,"line_end":2856,"column_start":5,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168483,"byte_end":168492,"line_start":2857,"line_end":2857,"column_start":5,"column_end":14}},{"value":"/     Entry::Vacant(_) => panic!(),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168497,"byte_end":168534,"line_start":2858,"line_end":2858,"column_start":5,"column_end":42}},{"value":"/ };","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168539,"byte_end":168545,"line_start":2859,"line_end":2859,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168550,"byte_end":168553,"line_start":2860,"line_end":2860,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168558,"byte_end":168575,"line_start":2861,"line_end":2861,"column_start":5,"column_end":22}},{"value":"/     Entry::Occupied(e) => {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168580,"byte_end":168611,"line_start":2862,"line_end":2862,"column_start":5,"column_end":36}},{"value":"/         assert_eq!(e.key(), &\"poneyland\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168616,"byte_end":168662,"line_start":2863,"line_end":2863,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(e.get(), &43);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168667,"byte_end":168704,"line_start":2864,"line_end":2864,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168709,"byte_end":168718,"line_start":2865,"line_end":2865,"column_start":5,"column_end":14}},{"value":"/     Entry::Vacant(_) => panic!(),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168723,"byte_end":168760,"line_start":2866,"line_end":2866,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168765,"byte_end":168770,"line_start":2867,"line_end":2867,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168775,"byte_end":168778,"line_start":2868,"line_end":2868,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(map[\"poneyland\"], 43);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168783,"byte_end":168820,"line_start":2869,"line_end":2869,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168825,"byte_end":168828,"line_start":2870,"line_end":2870,"column_start":5,"column_end":8}},{"value":"/ let entry = match map.entry(\"poneyland\") {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168833,"byte_end":168879,"line_start":2871,"line_end":2871,"column_start":5,"column_end":51}},{"value":"/     Entry::Occupied(e) => e.replace_entry_with(|_k, _v| None),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168884,"byte_end":168950,"line_start":2872,"line_end":2872,"column_start":5,"column_end":71}},{"value":"/     Entry::Vacant(_) => panic!(),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168955,"byte_end":168992,"line_start":2873,"line_end":2873,"column_start":5,"column_end":42}},{"value":"/ };","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":168997,"byte_end":169003,"line_start":2874,"line_end":2874,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169008,"byte_end":169011,"line_start":2875,"line_end":2875,"column_start":5,"column_end":8}},{"value":"/ match entry {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169016,"byte_end":169033,"line_start":2876,"line_end":2876,"column_start":5,"column_end":22}},{"value":"/     Entry::Vacant(e) => {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169038,"byte_end":169067,"line_start":2877,"line_end":2877,"column_start":5,"column_end":34}},{"value":"/         assert_eq!(e.key(), &\"poneyland\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169072,"byte_end":169118,"line_start":2878,"line_end":2878,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169123,"byte_end":169132,"line_start":2879,"line_end":2879,"column_start":5,"column_end":14}},{"value":"/     Entry::Occupied(_) => panic!(),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169137,"byte_end":169176,"line_start":2880,"line_end":2880,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169181,"byte_end":169186,"line_start":2881,"line_end":2881,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169191,"byte_end":169194,"line_start":2882,"line_end":2882,"column_start":5,"column_end":8}},{"value":"/ assert!(!map.contains_key(\"poneyland\"));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169199,"byte_end":169243,"line_start":2883,"line_end":2883,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169248,"byte_end":169255,"line_start":2884,"line_end":2884,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":169296,"byte_end":169302,"line_start":2885,"line_end":2885,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170597,"byte_end":170600,"line_start":2930,"line_end":2930,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key that would be used when inserting a value\n through the `VacantEntry`.","sig":null,"attributes":[{"value":"/ Gets a reference to the key that would be used when inserting a value","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170207,"byte_end":170280,"line_start":2918,"line_end":2918,"column_start":5,"column_end":78}},{"value":"/ through the `VacantEntry`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170285,"byte_end":170315,"line_start":2919,"line_end":2919,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170320,"byte_end":170323,"line_start":2920,"line_end":2920,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170328,"byte_end":170342,"line_start":2921,"line_end":2921,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170347,"byte_end":170350,"line_start":2922,"line_end":2922,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170355,"byte_end":170362,"line_start":2923,"line_end":2923,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170367,"byte_end":170394,"line_start":2924,"line_end":2924,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170399,"byte_end":170402,"line_start":2925,"line_end":2925,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170407,"byte_end":170460,"line_start":2926,"line_end":2926,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(map.entry(\"poneyland\").key(), &\"poneyland\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170465,"byte_end":170524,"line_start":2927,"line_end":2927,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170529,"byte_end":170536,"line_start":2928,"line_end":2928,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170577,"byte_end":170583,"line_start":2929,"line_end":2929,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171036,"byte_end":171044,"line_start":2949,"line_end":2949,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"pub fn into_key(Self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Take ownership of the key.","sig":null,"attributes":[{"value":"/ Take ownership of the key.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170645,"byte_end":170675,"line_start":2934,"line_end":2934,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170680,"byte_end":170683,"line_start":2935,"line_end":2935,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170688,"byte_end":170702,"line_start":2936,"line_end":2936,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170707,"byte_end":170710,"line_start":2937,"line_end":2937,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170715,"byte_end":170722,"line_start":2938,"line_end":2938,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170727,"byte_end":170754,"line_start":2939,"line_end":2939,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170759,"byte_end":170794,"line_start":2940,"line_end":2940,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170799,"byte_end":170802,"line_start":2941,"line_end":2941,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170807,"byte_end":170860,"line_start":2942,"line_end":2942,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170865,"byte_end":170868,"line_start":2943,"line_end":2943,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Vacant(v) = map.entry(\"poneyland\") {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170873,"byte_end":170927,"line_start":2944,"line_end":2944,"column_start":5,"column_end":59}},{"value":"/     v.into_key();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170932,"byte_end":170953,"line_start":2945,"line_end":2945,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170958,"byte_end":170963,"line_start":2946,"line_end":2946,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170968,"byte_end":170975,"line_start":2947,"line_end":2947,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171016,"byte_end":171022,"line_start":2948,"line_end":2948,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171595,"byte_end":171601,"line_start":2970,"line_end":2970,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, V) -> &'a mut V where K: Hash, S: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry with the VacantEntry's key,\n and returns a mutable reference to it.","sig":null,"attributes":[{"value":"/ Sets the value of the entry with the VacantEntry's key,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171086,"byte_end":171145,"line_start":2953,"line_end":2953,"column_start":5,"column_end":64}},{"value":"/ and returns a mutable reference to it.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171150,"byte_end":171192,"line_start":2954,"line_end":2954,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171197,"byte_end":171200,"line_start":2955,"line_end":2955,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171205,"byte_end":171219,"line_start":2956,"line_end":2956,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171224,"byte_end":171227,"line_start":2957,"line_end":2957,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171232,"byte_end":171239,"line_start":2958,"line_end":2958,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashMap;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171244,"byte_end":171271,"line_start":2959,"line_end":2959,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::Entry;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171276,"byte_end":171311,"line_start":2960,"line_end":2960,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171316,"byte_end":171319,"line_start":2961,"line_end":2961,"column_start":5,"column_end":8}},{"value":"/ let mut map: HashMap<&str, u32> = HashMap::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171324,"byte_end":171377,"line_start":2962,"line_end":2962,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171382,"byte_end":171385,"line_start":2963,"line_end":2963,"column_start":5,"column_end":8}},{"value":"/ if let Entry::Vacant(o) = map.entry(\"poneyland\") {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171390,"byte_end":171444,"line_start":2964,"line_end":2964,"column_start":5,"column_end":59}},{"value":"/     o.insert(37);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171449,"byte_end":171470,"line_start":2965,"line_end":2965,"column_start":5,"column_end":26}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171475,"byte_end":171480,"line_start":2966,"line_end":2966,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(map[\"poneyland\"], 37);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171485,"byte_end":171522,"line_start":2967,"line_end":2967,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171527,"byte_end":171534,"line_start":2968,"line_end":2968,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":171575,"byte_end":171581,"line_start":2969,"line_end":2969,"column_start":41,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1176},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":220316,"byte_end":220323,"line_start":114,"line_end":114,"column_start":12,"column_end":19},"name":"HashSet","qualname":"::set::HashSet","value":"HashSet {  }","parent":null,"children":[{"krate":0,"index":1179}],"decl_id":null,"docs":" A hash set implemented as a `HashMap` where the value is `()`.","sig":null,"attributes":[{"value":"/ A hash set implemented as a `HashMap` where the value is `()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":216944,"byte_end":217010,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":217011,"byte_end":217014,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ As with the [`HashMap`] type, a `HashSet` requires that the elements","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":217015,"byte_end":217087,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ implement the [`Eq`] and [`Hash`] traits. This can frequently be achieved by","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":217088,"byte_end":217168,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ using `#[derive(PartialEq, Eq, Hash)]`. If you implement these yourself,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":217169,"byte_end":217245,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ it is important that the following property holds:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":217246,"byte_end":217300,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":217301,"byte_end":217304,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":217305,"byte_end":217316,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/ k1 == k2 -> hash(k1) == hash(k2)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":217317,"byte_end":217353,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":217354,"byte_end":217361,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":217362,"byte_end":217365,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In other words, if two keys are equal, their hashes must be equal.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":217366,"byte_end":217436,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":217437,"byte_end":217440,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":217441,"byte_end":217444,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ It is a logic error for an item to be modified in such a way that the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":217445,"byte_end":217518,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ item's hash, as determined by the [`Hash`] trait, or its equality, as","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":217519,"byte_end":217592,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ determined by the [`Eq`] trait, changes while it is in the set. This is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":217593,"byte_end":217668,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/ normally only possible through [`Cell`], [`RefCell`], global state, I/O, or","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":217669,"byte_end":217748,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ unsafe code.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":217749,"byte_end":217765,"line_start":37,"line_end":37,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":217766,"byte_end":217769,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ It is also a logic error for the [`Hash`] implementation of a key to panic.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":217770,"byte_end":217849,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ This is generally only possible if the trait is implemented manually. If a","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":217850,"byte_end":217928,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ panic does occur then the contents of the `HashSet` may become corrupted and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":217929,"byte_end":218009,"line_start":41,"line_end":41,"column_start":1,"column_end":81}},{"value":"/ some items may be dropped from the table.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":218010,"byte_end":218055,"line_start":42,"line_end":42,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":218056,"byte_end":218059,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":218060,"byte_end":218074,"line_start":44,"line_end":44,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":218075,"byte_end":218078,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":218079,"byte_end":218086,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":218087,"byte_end":218114,"line_start":47,"line_end":47,"column_start":1,"column_end":28}},{"value":"/ // Type inference lets us omit an explicit type signature (which","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":218115,"byte_end":218183,"line_start":48,"line_end":48,"column_start":1,"column_end":69}},{"value":"/ // would be `HashSet<String>` in this example).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":218184,"byte_end":218235,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/ let mut books = HashSet::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":218236,"byte_end":218271,"line_start":50,"line_end":50,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":218272,"byte_end":218275,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // Add some books.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":218276,"byte_end":218298,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/ books.insert(\"A Dance With Dragons\".to_string());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":218299,"byte_end":218352,"line_start":53,"line_end":53,"column_start":1,"column_end":54}},{"value":"/ books.insert(\"To Kill a Mockingbird\".to_string());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":218353,"byte_end":218407,"line_start":54,"line_end":54,"column_start":1,"column_end":55}},{"value":"/ books.insert(\"The Odyssey\".to_string());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":218408,"byte_end":218452,"line_start":55,"line_end":55,"column_start":1,"column_end":45}},{"value":"/ books.insert(\"The Great Gatsby\".to_string());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":218453,"byte_end":218502,"line_start":56,"line_end":56,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":218503,"byte_end":218506,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ // Check for a specific one.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":218507,"byte_end":218539,"line_start":58,"line_end":58,"column_start":1,"column_end":33}},{"value":"/ if !books.contains(\"The Winds of Winter\") {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":218540,"byte_end":218587,"line_start":59,"line_end":59,"column_start":1,"column_end":48}},{"value":"/     println!(\"We have {} books, but The Winds of Winter ain't one.\",","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":218588,"byte_end":218660,"line_start":60,"line_end":60,"column_start":1,"column_end":73}},{"value":"/              books.len());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":218661,"byte_end":218691,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":218692,"byte_end":218697,"line_start":62,"line_end":62,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":218698,"byte_end":218701,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ // Remove a book.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":218702,"byte_end":218723,"line_start":64,"line_end":64,"column_start":1,"column_end":22}},{"value":"/ books.remove(\"The Odyssey\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":218724,"byte_end":218756,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":218757,"byte_end":218760,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ // Iterate over everything.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":218761,"byte_end":218792,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/ for book in &books {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":218793,"byte_end":218817,"line_start":68,"line_end":68,"column_start":1,"column_end":25}},{"value":"/     println!(\"{}\", book);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":218818,"byte_end":218847,"line_start":69,"line_end":69,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":218848,"byte_end":218853,"line_start":70,"line_end":70,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":218854,"byte_end":218861,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":218862,"byte_end":218865,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ The easiest way to use `HashSet` with a custom type is to derive","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":218866,"byte_end":218934,"line_start":73,"line_end":73,"column_start":1,"column_end":69}},{"value":"/ [`Eq`] and [`Hash`]. We must also derive [`PartialEq`], this will in the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":218935,"byte_end":219011,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ future be implied by [`Eq`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219012,"byte_end":219044,"line_start":75,"line_end":75,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219045,"byte_end":219048,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219049,"byte_end":219056,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219057,"byte_end":219084,"line_start":78,"line_end":78,"column_start":1,"column_end":28}},{"value":"/ #[derive(Hash, Eq, PartialEq, Debug)]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219085,"byte_end":219126,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/ struct Viking {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219127,"byte_end":219146,"line_start":80,"line_end":80,"column_start":1,"column_end":20}},{"value":"/     name: String,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219147,"byte_end":219168,"line_start":81,"line_end":81,"column_start":1,"column_end":22}},{"value":"/     power: usize,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219169,"byte_end":219190,"line_start":82,"line_end":82,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219191,"byte_end":219196,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219197,"byte_end":219200,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ let mut vikings = HashSet::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219201,"byte_end":219238,"line_start":85,"line_end":85,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219239,"byte_end":219242,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ vikings.insert(Viking { name: \"Einar\".to_string(), power: 9 });","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219243,"byte_end":219310,"line_start":87,"line_end":87,"column_start":1,"column_end":68}},{"value":"/ vikings.insert(Viking { name: \"Einar\".to_string(), power: 9 });","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219311,"byte_end":219378,"line_start":88,"line_end":88,"column_start":1,"column_end":68}},{"value":"/ vikings.insert(Viking { name: \"Olaf\".to_string(), power: 4 });","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219379,"byte_end":219445,"line_start":89,"line_end":89,"column_start":1,"column_end":67}},{"value":"/ vikings.insert(Viking { name: \"Harald\".to_string(), power: 8 });","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219446,"byte_end":219514,"line_start":90,"line_end":90,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219515,"byte_end":219518,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ // Use derived implementation to print the vikings.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219519,"byte_end":219574,"line_start":92,"line_end":92,"column_start":1,"column_end":56}},{"value":"/ for x in &vikings {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219575,"byte_end":219598,"line_start":93,"line_end":93,"column_start":1,"column_end":24}},{"value":"/     println!(\"{:?}\", x);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219599,"byte_end":219627,"line_start":94,"line_end":94,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219628,"byte_end":219633,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219634,"byte_end":219641,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219642,"byte_end":219645,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ A `HashSet` with fixed list of elements can be initialized from an array:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219646,"byte_end":219723,"line_start":98,"line_end":98,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219724,"byte_end":219727,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219728,"byte_end":219735,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219736,"byte_end":219763,"line_start":101,"line_end":101,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219764,"byte_end":219767,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ let viking_names: HashSet<&'static str> =","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219768,"byte_end":219813,"line_start":103,"line_end":103,"column_start":1,"column_end":46}},{"value":"/     [ \"Einar\", \"Olaf\", \"Harald\" ].iter().cloned().collect();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219814,"byte_end":219878,"line_start":104,"line_end":104,"column_start":1,"column_end":65}},{"value":"/ // use the values stored in the set","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219879,"byte_end":219918,"line_start":105,"line_end":105,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219919,"byte_end":219926,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219927,"byte_end":219930,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`Cell`]: https://doc.rust-lang.org/std/cell/struct.Cell.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219931,"byte_end":219996,"line_start":108,"line_end":108,"column_start":1,"column_end":66}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":219997,"byte_end":220056,"line_start":109,"line_end":109,"column_start":1,"column_end":60}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":220057,"byte_end":220121,"line_start":110,"line_end":110,"column_start":1,"column_end":65}},{"value":"/ [`HashMap`]: struct.HashMap.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":220122,"byte_end":220158,"line_start":111,"line_end":111,"column_start":1,"column_end":37}},{"value":"/ [`PartialEq`]: https://doc.rust-lang.org/std/cmp/trait.PartialEq.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":220159,"byte_end":220232,"line_start":112,"line_end":112,"column_start":1,"column_end":74}},{"value":"/ [`RefCell`]: https://doc.rust-lang.org/std/cell/struct.RefCell.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":220233,"byte_end":220304,"line_start":113,"line_end":113,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1187},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":221082,"byte_end":221085,"line_start":144,"line_end":144,"column_start":12,"column_end":15},"name":"new","qualname":"<HashSet<T, DefaultHashBuilder>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashSet`.","sig":null,"attributes":[{"value":"/ Creates an empty `HashSet`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":220714,"byte_end":220745,"line_start":132,"line_end":132,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":220750,"byte_end":220753,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ The hash set is initially created with a capacity of 0, so it will not allocate until it","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":220758,"byte_end":220850,"line_start":134,"line_end":134,"column_start":5,"column_end":97}},{"value":"/ is first inserted into.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":220855,"byte_end":220882,"line_start":135,"line_end":135,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":220887,"byte_end":220890,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":220895,"byte_end":220909,"line_start":137,"line_end":137,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":220914,"byte_end":220917,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":220922,"byte_end":220929,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":220934,"byte_end":220961,"line_start":140,"line_end":140,"column_start":5,"column_end":32}},{"value":"/ let set: HashSet<i32> = HashSet::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":220966,"byte_end":221009,"line_start":141,"line_end":141,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":221014,"byte_end":221021,"line_start":142,"line_end":142,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":221062,"byte_end":221068,"line_start":143,"line_end":143,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1188},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":221638,"byte_end":221651,"line_start":163,"line_end":163,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<HashSet<T, DefaultHashBuilder>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashSet` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates an empty `HashSet` with the specified capacity.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":221167,"byte_end":221226,"line_start":150,"line_end":150,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":221231,"byte_end":221234,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ The hash set will be able to hold at least `capacity` elements without","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":221239,"byte_end":221313,"line_start":152,"line_end":152,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash set will not allocate.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":221318,"byte_end":221387,"line_start":153,"line_end":153,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":221392,"byte_end":221395,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":221400,"byte_end":221414,"line_start":155,"line_end":155,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":221419,"byte_end":221422,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":221427,"byte_end":221434,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":221439,"byte_end":221466,"line_start":158,"line_end":158,"column_start":5,"column_end":32}},{"value":"/ let set: HashSet<i32> = HashSet::with_capacity(10);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":221471,"byte_end":221526,"line_start":159,"line_end":159,"column_start":5,"column_end":60}},{"value":"/ assert!(set.capacity() >= 10);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":221531,"byte_end":221565,"line_start":160,"line_end":160,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":221570,"byte_end":221577,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":221618,"byte_end":221624,"line_start":162,"line_end":162,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1192},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":222813,"byte_end":222824,"line_start":198,"line_end":198,"column_start":18,"column_end":29},"name":"with_hasher","qualname":"<HashSet<T, S>>::with_hasher","value":"pub const fn with_hasher(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty hash set which will use the given hasher to hash\n keys.","sig":null,"attributes":[{"value":"/ Creates a new empty hash set which will use the given hasher to hash","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":221795,"byte_end":221867,"line_start":171,"line_end":171,"column_start":5,"column_end":77}},{"value":"/ keys.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":221872,"byte_end":221881,"line_start":172,"line_end":172,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":221886,"byte_end":221889,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The hash set is also created with the default initial capacity.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":221894,"byte_end":221961,"line_start":174,"line_end":174,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":221966,"byte_end":221969,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Warning: `hasher` is normally randomly generated, and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":221974,"byte_end":222031,"line_start":176,"line_end":176,"column_start":5,"column_end":62}},{"value":"/ is designed to allow `HashSet`s to be resistant to attacks that","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":222036,"byte_end":222103,"line_start":177,"line_end":177,"column_start":5,"column_end":72}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":222108,"byte_end":222171,"line_start":178,"line_end":178,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":222176,"byte_end":222240,"line_start":179,"line_end":179,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":222245,"byte_end":222248,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ The `hash_builder` passed should implement the [`BuildHasher`] trait for","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":222253,"byte_end":222329,"line_start":181,"line_end":181,"column_start":5,"column_end":81}},{"value":"/ the HashMap to be useful, see its documentation for details.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":222334,"byte_end":222398,"line_start":182,"line_end":182,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":222403,"byte_end":222406,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":222411,"byte_end":222414,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":222419,"byte_end":222433,"line_start":185,"line_end":185,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":222438,"byte_end":222441,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":222446,"byte_end":222453,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":222458,"byte_end":222485,"line_start":188,"line_end":188,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":222490,"byte_end":222538,"line_start":189,"line_end":189,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":222543,"byte_end":222546,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":222551,"byte_end":222593,"line_start":191,"line_end":191,"column_start":5,"column_end":47}},{"value":"/ let mut set = HashSet::with_hasher(s);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":222598,"byte_end":222640,"line_start":192,"line_end":192,"column_start":5,"column_end":47}},{"value":"/ set.insert(2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":222645,"byte_end":222663,"line_start":193,"line_end":193,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":222668,"byte_end":222675,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":222680,"byte_end":222683,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: ../../std/hash/trait.BuildHasher.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":222688,"byte_end":222746,"line_start":196,"line_end":196,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":222787,"byte_end":222793,"line_start":197,"line_end":197,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1193},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224045,"byte_end":224069,"line_start":231,"line_end":231,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<HashSet<T, S>>::with_capacity_and_hasher","value":"pub fn with_capacity_and_hasher(usize, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty `HashSet` with the specified capacity, using\n `hasher` to hash the keys.","sig":null,"attributes":[{"value":"/ Creates an empty `HashSet` with the specified capacity, using","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":222929,"byte_end":222994,"line_start":204,"line_end":204,"column_start":5,"column_end":70}},{"value":"/ `hasher` to hash the keys.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":222999,"byte_end":223029,"line_start":205,"line_end":205,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223034,"byte_end":223037,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ The hash set will be able to hold at least `capacity` elements without","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223042,"byte_end":223116,"line_start":207,"line_end":207,"column_start":5,"column_end":79}},{"value":"/ reallocating. If `capacity` is 0, the hash set will not allocate.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223121,"byte_end":223190,"line_start":208,"line_end":208,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223195,"byte_end":223198,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Warning: `hasher` is normally randomly generated, and","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223203,"byte_end":223260,"line_start":210,"line_end":210,"column_start":5,"column_end":62}},{"value":"/ is designed to allow `HashSet`s to be resistant to attacks that","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223265,"byte_end":223332,"line_start":211,"line_end":211,"column_start":5,"column_end":72}},{"value":"/ cause many collisions and very poor performance. Setting it","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223337,"byte_end":223400,"line_start":212,"line_end":212,"column_start":5,"column_end":68}},{"value":"/ manually using this function can expose a DoS attack vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223405,"byte_end":223469,"line_start":213,"line_end":213,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223474,"byte_end":223477,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ The `hash_builder` passed should implement the [`BuildHasher`] trait for","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223482,"byte_end":223558,"line_start":215,"line_end":215,"column_start":5,"column_end":81}},{"value":"/ the HashMap to be useful, see its documentation for details.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223563,"byte_end":223627,"line_start":216,"line_end":216,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223632,"byte_end":223635,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223640,"byte_end":223654,"line_start":218,"line_end":218,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223659,"byte_end":223662,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223667,"byte_end":223674,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223679,"byte_end":223706,"line_start":221,"line_end":221,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223711,"byte_end":223759,"line_start":222,"line_end":222,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223764,"byte_end":223767,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ let s = DefaultHashBuilder::default();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223772,"byte_end":223814,"line_start":224,"line_end":224,"column_start":5,"column_end":47}},{"value":"/ let mut set = HashSet::with_capacity_and_hasher(10, s);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223819,"byte_end":223878,"line_start":225,"line_end":225,"column_start":5,"column_end":64}},{"value":"/ set.insert(1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223883,"byte_end":223901,"line_start":226,"line_end":226,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223906,"byte_end":223913,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223918,"byte_end":223921,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: ../../std/hash/trait.BuildHasher.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":223926,"byte_end":223984,"line_start":229,"line_end":229,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224025,"byte_end":224031,"line_start":230,"line_end":230,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1194},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224540,"byte_end":224548,"line_start":247,"line_end":247,"column_start":12,"column_end":20},"name":"capacity","qualname":"<HashSet<T, S>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the set can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the set can hold without reallocating.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224214,"byte_end":224287,"line_start":237,"line_end":237,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224292,"byte_end":224295,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224300,"byte_end":224314,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224319,"byte_end":224322,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224327,"byte_end":224334,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224339,"byte_end":224366,"line_start":242,"line_end":242,"column_start":5,"column_end":32}},{"value":"/ let set: HashSet<i32> = HashSet::with_capacity(100);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224371,"byte_end":224427,"line_start":243,"line_end":243,"column_start":5,"column_end":61}},{"value":"/ assert!(set.capacity() >= 100);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224432,"byte_end":224467,"line_start":244,"line_end":244,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224472,"byte_end":224479,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224520,"byte_end":224526,"line_start":246,"line_end":246,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1195},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225073,"byte_end":225077,"line_start":268,"line_end":268,"column_start":12,"column_end":16},"name":"iter","qualname":"<HashSet<T, S>>::iter","value":"pub fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" An iterator visiting all elements in arbitrary order.\n The iterator element type is `&'a T`.","sig":null,"attributes":[{"value":"/ An iterator visiting all elements in arbitrary order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224606,"byte_end":224663,"line_start":251,"line_end":251,"column_start":5,"column_end":62}},{"value":"/ The iterator element type is `&'a T`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224668,"byte_end":224709,"line_start":252,"line_end":252,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224714,"byte_end":224717,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224722,"byte_end":224736,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224741,"byte_end":224744,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224749,"byte_end":224756,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224761,"byte_end":224788,"line_start":257,"line_end":257,"column_start":5,"column_end":32}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224793,"byte_end":224826,"line_start":258,"line_end":258,"column_start":5,"column_end":38}},{"value":"/ set.insert(\"a\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224831,"byte_end":224851,"line_start":259,"line_end":259,"column_start":5,"column_end":25}},{"value":"/ set.insert(\"b\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224856,"byte_end":224876,"line_start":260,"line_end":260,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224881,"byte_end":224884,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ // Will print in an arbitrary order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224889,"byte_end":224929,"line_start":262,"line_end":262,"column_start":5,"column_end":45}},{"value":"/ for x in set.iter() {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224934,"byte_end":224959,"line_start":263,"line_end":263,"column_start":5,"column_end":30}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224964,"byte_end":224990,"line_start":264,"line_end":264,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":224995,"byte_end":225000,"line_start":265,"line_end":265,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225005,"byte_end":225012,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225053,"byte_end":225059,"line_start":267,"line_end":267,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1196},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225500,"byte_end":225503,"line_start":287,"line_end":287,"column_start":12,"column_end":15},"name":"len","qualname":"<HashSet<T, S>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements in the set.","sig":null,"attributes":[{"value":"/ Returns the number of elements in the set.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225173,"byte_end":225219,"line_start":274,"line_end":274,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225224,"byte_end":225227,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225232,"byte_end":225246,"line_start":276,"line_end":276,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225251,"byte_end":225254,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225259,"byte_end":225266,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225271,"byte_end":225298,"line_start":279,"line_end":279,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225303,"byte_end":225306,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ let mut v = HashSet::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225311,"byte_end":225342,"line_start":281,"line_end":281,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(v.len(), 0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225347,"byte_end":225374,"line_start":282,"line_end":282,"column_start":5,"column_end":32}},{"value":"/ v.insert(1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225379,"byte_end":225395,"line_start":283,"line_end":283,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(v.len(), 1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225400,"byte_end":225427,"line_start":284,"line_end":284,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225432,"byte_end":225439,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225480,"byte_end":225486,"line_start":286,"line_end":286,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1197},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225887,"byte_end":225895,"line_start":304,"line_end":304,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<HashSet<T, S>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no elements.","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no elements.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225556,"byte_end":225607,"line_start":291,"line_end":291,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225612,"byte_end":225615,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225620,"byte_end":225634,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225639,"byte_end":225642,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225647,"byte_end":225654,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225659,"byte_end":225686,"line_start":296,"line_end":296,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225691,"byte_end":225694,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ let mut v = HashSet::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225699,"byte_end":225730,"line_start":298,"line_end":298,"column_start":5,"column_end":36}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225735,"byte_end":225761,"line_start":299,"line_end":299,"column_start":5,"column_end":31}},{"value":"/ v.insert(1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225766,"byte_end":225782,"line_start":300,"line_end":300,"column_start":5,"column_end":21}},{"value":"/ assert!(!v.is_empty());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225787,"byte_end":225814,"line_start":301,"line_end":301,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225819,"byte_end":225826,"line_start":302,"line_end":302,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225867,"byte_end":225873,"line_start":303,"line_end":303,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1198},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226443,"byte_end":226448,"line_start":326,"line_end":326,"column_start":12,"column_end":17},"name":"drain","qualname":"<HashSet<T, S>>::drain","value":"pub fn drain(&mut Self) -> Drain<, T>","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, returning all elements in an iterator.","sig":null,"attributes":[{"value":"/ Clears the set, returning all elements in an iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":225952,"byte_end":226010,"line_start":308,"line_end":308,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226015,"byte_end":226018,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226023,"byte_end":226037,"line_start":310,"line_end":310,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226042,"byte_end":226045,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226050,"byte_end":226057,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226062,"byte_end":226089,"line_start":313,"line_end":313,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226094,"byte_end":226097,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226102,"byte_end":226168,"line_start":315,"line_end":315,"column_start":5,"column_end":71}},{"value":"/ assert!(!set.is_empty());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226173,"byte_end":226202,"line_start":316,"line_end":316,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226207,"byte_end":226210,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ // print 1, 2, 3 in an arbitrary order","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226215,"byte_end":226257,"line_start":318,"line_end":318,"column_start":5,"column_end":47}},{"value":"/ for i in set.drain() {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226262,"byte_end":226288,"line_start":319,"line_end":319,"column_start":5,"column_end":31}},{"value":"/     println!(\"{}\", i);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226293,"byte_end":226319,"line_start":320,"line_end":320,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226324,"byte_end":226329,"line_start":321,"line_end":321,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226334,"byte_end":226337,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ assert!(set.is_empty());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226342,"byte_end":226370,"line_start":323,"line_end":323,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226375,"byte_end":226382,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226423,"byte_end":226429,"line_start":325,"line_end":325,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1199},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226979,"byte_end":226985,"line_start":346,"line_end":346,"column_start":12,"column_end":18},"name":"retain","qualname":"<HashSet<T, S>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Retains only the elements specified by the predicate.","sig":null,"attributes":[{"value":"/ Retains only the elements specified by the predicate.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226551,"byte_end":226608,"line_start":332,"line_end":332,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226613,"byte_end":226616,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ In other words, remove all elements `e` such that `f(&e)` returns `false`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226621,"byte_end":226699,"line_start":334,"line_end":334,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226704,"byte_end":226707,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226712,"byte_end":226726,"line_start":336,"line_end":336,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226731,"byte_end":226734,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226739,"byte_end":226746,"line_start":338,"line_end":338,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226751,"byte_end":226778,"line_start":339,"line_end":339,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226783,"byte_end":226786,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ let xs = [1,2,3,4,5,6];","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226791,"byte_end":226818,"line_start":341,"line_end":341,"column_start":5,"column_end":32}},{"value":"/ let mut set: HashSet<i32> = xs.iter().cloned().collect();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226823,"byte_end":226884,"line_start":342,"line_end":342,"column_start":5,"column_end":66}},{"value":"/ set.retain(|&k| k % 2 == 0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226889,"byte_end":226921,"line_start":343,"line_end":343,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226926,"byte_end":226955,"line_start":344,"line_end":344,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":226960,"byte_end":226967,"line_start":345,"line_end":345,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1202},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228055,"byte_end":228067,"line_start":379,"line_end":379,"column_start":12,"column_end":24},"name":"drain_filter","qualname":"<HashSet<T, S>>::drain_filter","value":"pub fn drain_filter<F>(&mut Self, F) -> DrainFilter<, T, F> where F: FnMut(&T)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Drains elements which are true under the given predicate,\n and returns an iterator over the removed items.","sig":null,"attributes":[{"value":"/ Drains elements which are true under the given predicate,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227105,"byte_end":227166,"line_start":353,"line_end":353,"column_start":5,"column_end":66}},{"value":"/ and returns an iterator over the removed items.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227171,"byte_end":227222,"line_start":354,"line_end":354,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227227,"byte_end":227230,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ In other words, move all elements `e` such that `f(&e)` returns `true` out","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227235,"byte_end":227313,"line_start":356,"line_end":356,"column_start":5,"column_end":83}},{"value":"/ into another iterator.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227318,"byte_end":227344,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227349,"byte_end":227352,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ When the returned DrainedFilter is dropped, any remaining elements that satisfy","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227357,"byte_end":227440,"line_start":359,"line_end":359,"column_start":5,"column_end":88}},{"value":"/ the predicate are dropped from the set.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227445,"byte_end":227488,"line_start":360,"line_end":360,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227493,"byte_end":227496,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227501,"byte_end":227515,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227520,"byte_end":227523,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227528,"byte_end":227535,"line_start":364,"line_end":364,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227540,"byte_end":227567,"line_start":365,"line_end":365,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227572,"byte_end":227575,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<i32> = (0..8).collect();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227580,"byte_end":227629,"line_start":367,"line_end":367,"column_start":5,"column_end":54}},{"value":"/ let drained: HashSet<i32> = set.drain_filter(|v| v % 2 == 0).collect();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227634,"byte_end":227709,"line_start":368,"line_end":368,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227714,"byte_end":227717,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ let mut evens = drained.into_iter().collect::<Vec<_>>();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227722,"byte_end":227782,"line_start":370,"line_end":370,"column_start":5,"column_end":65}},{"value":"/ let mut odds = set.into_iter().collect::<Vec<_>>();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227787,"byte_end":227842,"line_start":371,"line_end":371,"column_start":5,"column_end":60}},{"value":"/ evens.sort();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227847,"byte_end":227864,"line_start":372,"line_end":372,"column_start":5,"column_end":22}},{"value":"/ odds.sort();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227869,"byte_end":227885,"line_start":373,"line_end":373,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227890,"byte_end":227893,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens, vec![0, 2, 4, 6]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227898,"byte_end":227938,"line_start":375,"line_end":375,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(odds, vec![1, 3, 5, 7]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227943,"byte_end":227982,"line_start":376,"line_end":376,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":227987,"byte_end":227994,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228035,"byte_end":228041,"line_start":378,"line_end":378,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1204},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228677,"byte_end":228682,"line_start":405,"line_end":405,"column_start":12,"column_end":17},"name":"clear","qualname":"<HashSet<T, S>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all values.","sig":null,"attributes":[{"value":"/ Clears the set, removing all values.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228370,"byte_end":228410,"line_start":392,"line_end":392,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228415,"byte_end":228418,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228423,"byte_end":228437,"line_start":394,"line_end":394,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228442,"byte_end":228445,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228450,"byte_end":228457,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228462,"byte_end":228489,"line_start":397,"line_end":397,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228494,"byte_end":228497,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ let mut v = HashSet::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228502,"byte_end":228533,"line_start":399,"line_end":399,"column_start":5,"column_end":36}},{"value":"/ v.insert(1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228538,"byte_end":228554,"line_start":400,"line_end":400,"column_start":5,"column_end":21}},{"value":"/ v.clear();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228559,"byte_end":228573,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228578,"byte_end":228604,"line_start":402,"line_end":402,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228609,"byte_end":228616,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228657,"byte_end":228663,"line_start":404,"line_end":404,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1205},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229259,"byte_end":229265,"line_start":424,"line_end":424,"column_start":12,"column_end":18},"name":"hasher","qualname":"<HashSet<T, S>>::hasher","value":"pub fn hasher(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the set's [`BuildHasher`].","sig":null,"attributes":[{"value":"/ Returns a reference to the set's [`BuildHasher`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228732,"byte_end":228785,"line_start":409,"line_end":409,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228790,"byte_end":228793,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ [`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228798,"byte_end":228876,"line_start":411,"line_end":411,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228881,"byte_end":228884,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228889,"byte_end":228903,"line_start":413,"line_end":413,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228908,"byte_end":228911,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228916,"byte_end":228923,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228928,"byte_end":228955,"line_start":416,"line_end":416,"column_start":5,"column_end":32}},{"value":"/ use hashbrown::hash_map::DefaultHashBuilder;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":228960,"byte_end":229008,"line_start":417,"line_end":417,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229013,"byte_end":229016,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ let hasher = DefaultHashBuilder::default();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229021,"byte_end":229068,"line_start":419,"line_end":419,"column_start":5,"column_end":52}},{"value":"/ let set: HashSet<i32> = HashSet::with_hasher(hasher);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229073,"byte_end":229130,"line_start":420,"line_end":420,"column_start":5,"column_end":62}},{"value":"/ let hasher: &DefaultHashBuilder = set.hasher();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229135,"byte_end":229186,"line_start":421,"line_end":421,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229191,"byte_end":229198,"line_start":422,"line_end":422,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229239,"byte_end":229245,"line_start":423,"line_end":423,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1209},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229934,"byte_end":229941,"line_start":451,"line_end":451,"column_start":12,"column_end":19},"name":"reserve","qualname":"<HashSet<T, S>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more elements to be inserted\n in the `HashSet`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more elements to be inserted","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229391,"byte_end":229467,"line_start":434,"line_end":434,"column_start":5,"column_end":81}},{"value":"/ in the `HashSet`. The collection may reserve more space to avoid","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229472,"byte_end":229540,"line_start":435,"line_end":435,"column_start":5,"column_end":73}},{"value":"/ frequent reallocations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229545,"byte_end":229572,"line_start":436,"line_end":436,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229577,"byte_end":229580,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229585,"byte_end":229597,"line_start":438,"line_end":438,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229602,"byte_end":229605,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ Panics if the new allocation size overflows `usize`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229610,"byte_end":229666,"line_start":440,"line_end":440,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229671,"byte_end":229674,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229679,"byte_end":229693,"line_start":442,"line_end":442,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229698,"byte_end":229701,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229706,"byte_end":229713,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229718,"byte_end":229745,"line_start":445,"line_end":445,"column_start":5,"column_end":32}},{"value":"/ let mut set: HashSet<i32> = HashSet::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229750,"byte_end":229797,"line_start":446,"line_end":446,"column_start":5,"column_end":52}},{"value":"/ set.reserve(10);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229802,"byte_end":229822,"line_start":447,"line_end":447,"column_start":5,"column_end":25}},{"value":"/ assert!(set.capacity() >= 10);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229827,"byte_end":229861,"line_start":448,"line_end":448,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229866,"byte_end":229873,"line_start":449,"line_end":449,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229914,"byte_end":229920,"line_start":450,"line_end":450,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1210},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230648,"byte_end":230659,"line_start":472,"line_end":472,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<HashSet<T, S>>::try_reserve","value":"pub fn try_reserve(&mut Self, usize) -> Result<(), TryReserveError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to reserve capacity for at least `additional` more elements to be inserted\n in the given `HashSet<K,V>`. The collection may reserve more space to avoid\n frequent reallocations.","sig":null,"attributes":[{"value":"/ Tries to reserve capacity for at least `additional` more elements to be inserted","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230022,"byte_end":230106,"line_start":455,"line_end":455,"column_start":5,"column_end":89}},{"value":"/ in the given `HashSet<K,V>`. The collection may reserve more space to avoid","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230111,"byte_end":230190,"line_start":456,"line_end":456,"column_start":5,"column_end":84}},{"value":"/ frequent reallocations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230195,"byte_end":230222,"line_start":457,"line_end":457,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230227,"byte_end":230230,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230235,"byte_end":230247,"line_start":459,"line_end":459,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230252,"byte_end":230255,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ If the capacity overflows, or the allocator reports a failure, then an error","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230260,"byte_end":230340,"line_start":461,"line_end":461,"column_start":5,"column_end":85}},{"value":"/ is returned.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230345,"byte_end":230361,"line_start":462,"line_end":462,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230366,"byte_end":230369,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230374,"byte_end":230388,"line_start":464,"line_end":464,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230393,"byte_end":230396,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230401,"byte_end":230408,"line_start":466,"line_end":466,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230413,"byte_end":230440,"line_start":467,"line_end":467,"column_start":5,"column_end":32}},{"value":"/ let mut set: HashSet<i32> = HashSet::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230445,"byte_end":230492,"line_start":468,"line_end":468,"column_start":5,"column_end":52}},{"value":"/ set.try_reserve(10).expect(\"why is the test harness OOMing on 10 bytes?\");","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230497,"byte_end":230575,"line_start":469,"line_end":469,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230580,"byte_end":230587,"line_start":470,"line_end":470,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230628,"byte_end":230634,"line_start":471,"line_end":471,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1211},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231356,"byte_end":231369,"line_start":493,"line_end":493,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<HashSet<T, S>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the set as much as possible. It will drop\n down as much as possible while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the set as much as possible. It will drop","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230775,"byte_end":230844,"line_start":476,"line_end":476,"column_start":5,"column_end":74}},{"value":"/ down as much as possible while maintaining the internal rules","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230849,"byte_end":230914,"line_start":477,"line_end":477,"column_start":5,"column_end":70}},{"value":"/ and possibly leaving some space in accordance with the resize policy.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230919,"byte_end":230992,"line_start":478,"line_end":478,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":230997,"byte_end":231000,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231005,"byte_end":231019,"line_start":480,"line_end":480,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231024,"byte_end":231027,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231032,"byte_end":231039,"line_start":482,"line_end":482,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231044,"byte_end":231071,"line_start":483,"line_end":483,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231076,"byte_end":231079,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::with_capacity(100);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231084,"byte_end":231130,"line_start":485,"line_end":485,"column_start":5,"column_end":51}},{"value":"/ set.insert(1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231135,"byte_end":231153,"line_start":486,"line_end":486,"column_start":5,"column_end":23}},{"value":"/ set.insert(2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231158,"byte_end":231176,"line_start":487,"line_end":487,"column_start":5,"column_end":23}},{"value":"/ assert!(set.capacity() >= 100);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231181,"byte_end":231216,"line_start":488,"line_end":488,"column_start":5,"column_end":40}},{"value":"/ set.shrink_to_fit();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231221,"byte_end":231245,"line_start":489,"line_end":489,"column_start":5,"column_end":29}},{"value":"/ assert!(set.capacity() >= 2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231250,"byte_end":231283,"line_start":490,"line_end":490,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231288,"byte_end":231295,"line_start":491,"line_end":491,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231336,"byte_end":231342,"line_start":492,"line_end":492,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232185,"byte_end":232194,"line_start":519,"line_end":519,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<HashSet<T, S>>::shrink_to","value":"pub fn shrink_to(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the set with a lower limit. It will drop\n down no lower than the supplied limit while maintaining the internal rules\n and possibly leaving some space in accordance with the resize policy.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the set with a lower limit. It will drop","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231427,"byte_end":231495,"line_start":497,"line_end":497,"column_start":5,"column_end":73}},{"value":"/ down no lower than the supplied limit while maintaining the internal rules","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231500,"byte_end":231578,"line_start":498,"line_end":498,"column_start":5,"column_end":83}},{"value":"/ and possibly leaving some space in accordance with the resize policy.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231583,"byte_end":231656,"line_start":499,"line_end":499,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231661,"byte_end":231664,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ Panics if the current capacity is smaller than the supplied","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231669,"byte_end":231732,"line_start":501,"line_end":501,"column_start":5,"column_end":68}},{"value":"/ minimum capacity.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231737,"byte_end":231758,"line_start":502,"line_end":502,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231763,"byte_end":231766,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231771,"byte_end":231785,"line_start":504,"line_end":504,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231790,"byte_end":231793,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231798,"byte_end":231805,"line_start":506,"line_end":506,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231810,"byte_end":231837,"line_start":507,"line_end":507,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231842,"byte_end":231845,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::with_capacity(100);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231850,"byte_end":231896,"line_start":509,"line_end":509,"column_start":5,"column_end":51}},{"value":"/ set.insert(1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231901,"byte_end":231919,"line_start":510,"line_end":510,"column_start":5,"column_end":23}},{"value":"/ set.insert(2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231924,"byte_end":231942,"line_start":511,"line_end":511,"column_start":5,"column_end":23}},{"value":"/ assert!(set.capacity() >= 100);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231947,"byte_end":231982,"line_start":512,"line_end":512,"column_start":5,"column_end":40}},{"value":"/ set.shrink_to(10);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":231987,"byte_end":232009,"line_start":513,"line_end":513,"column_start":5,"column_end":27}},{"value":"/ assert!(set.capacity() >= 10);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232014,"byte_end":232048,"line_start":514,"line_end":514,"column_start":5,"column_end":39}},{"value":"/ set.shrink_to(0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232053,"byte_end":232074,"line_start":515,"line_end":515,"column_start":5,"column_end":26}},{"value":"/ assert!(set.capacity() >= 2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232079,"byte_end":232112,"line_start":516,"line_end":516,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232117,"byte_end":232124,"line_start":517,"line_end":517,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232165,"byte_end":232171,"line_start":518,"line_end":518,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1213},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233136,"byte_end":233146,"line_start":547,"line_end":547,"column_start":12,"column_end":22},"name":"difference","qualname":"<HashSet<T, S>>::difference","value":"pub fn difference<'a>(&'a Self, &'a Self) -> Difference","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the difference,\n i.e., the values that are in `self` but not in `other`.","sig":null,"attributes":[{"value":"/ Visits the values representing the difference,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232281,"byte_end":232331,"line_start":523,"line_end":523,"column_start":5,"column_end":55}},{"value":"/ i.e., the values that are in `self` but not in `other`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232336,"byte_end":232395,"line_start":524,"line_end":524,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232400,"byte_end":232403,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232408,"byte_end":232422,"line_start":526,"line_end":526,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232427,"byte_end":232430,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232435,"byte_end":232442,"line_start":528,"line_end":528,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232447,"byte_end":232474,"line_start":529,"line_end":529,"column_start":5,"column_end":32}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232479,"byte_end":232539,"line_start":530,"line_end":530,"column_start":5,"column_end":65}},{"value":"/ let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232544,"byte_end":232607,"line_start":531,"line_end":531,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232612,"byte_end":232615,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ // Can be seen as `a - b`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232620,"byte_end":232650,"line_start":533,"line_end":533,"column_start":5,"column_end":35}},{"value":"/ for x in a.difference(&b) {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232655,"byte_end":232686,"line_start":534,"line_end":534,"column_start":5,"column_end":36}},{"value":"/     println!(\"{}\", x); // Print 1","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232691,"byte_end":232728,"line_start":535,"line_end":535,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232733,"byte_end":232738,"line_start":536,"line_end":536,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232743,"byte_end":232746,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ let diff: HashSet<_> = a.difference(&b).collect();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232751,"byte_end":232805,"line_start":538,"line_end":538,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(diff, [1].iter().collect());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232810,"byte_end":232853,"line_start":539,"line_end":539,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232858,"byte_end":232861,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ // Note that difference is not symmetric,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232866,"byte_end":232911,"line_start":541,"line_end":541,"column_start":5,"column_end":50}},{"value":"/ // and `b - a` means something else:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232916,"byte_end":232956,"line_start":542,"line_end":542,"column_start":5,"column_end":45}},{"value":"/ let diff: HashSet<_> = b.difference(&a).collect();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":232961,"byte_end":233015,"line_start":543,"line_end":543,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(diff, [4].iter().collect());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233020,"byte_end":233063,"line_start":544,"line_end":544,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233068,"byte_end":233075,"line_start":545,"line_end":545,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233116,"byte_end":233122,"line_start":546,"line_end":546,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1215},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234095,"byte_end":234115,"line_start":576,"line_end":576,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<HashSet<T, S>>::symmetric_difference","value":"pub fn symmetric_difference<'a>(&'a Self, &'a Self) -> SymmetricDifference","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the symmetric difference,\n i.e., the values that are in `self` or in `other` but not in both.","sig":null,"attributes":[{"value":"/ Visits the values representing the symmetric difference,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233296,"byte_end":233356,"line_start":554,"line_end":554,"column_start":5,"column_end":65}},{"value":"/ i.e., the values that are in `self` or in `other` but not in both.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233361,"byte_end":233431,"line_start":555,"line_end":555,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233436,"byte_end":233439,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233444,"byte_end":233458,"line_start":557,"line_end":557,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233463,"byte_end":233466,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233471,"byte_end":233478,"line_start":559,"line_end":559,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233483,"byte_end":233510,"line_start":560,"line_end":560,"column_start":5,"column_end":32}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233515,"byte_end":233575,"line_start":561,"line_end":561,"column_start":5,"column_end":65}},{"value":"/ let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233580,"byte_end":233643,"line_start":562,"line_end":562,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233648,"byte_end":233651,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ // Print 1, 4 in arbitrary order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233656,"byte_end":233693,"line_start":564,"line_end":564,"column_start":5,"column_end":42}},{"value":"/ for x in a.symmetric_difference(&b) {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233698,"byte_end":233739,"line_start":565,"line_end":565,"column_start":5,"column_end":46}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233744,"byte_end":233770,"line_start":566,"line_end":566,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233775,"byte_end":233780,"line_start":567,"line_end":567,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233785,"byte_end":233788,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ let diff1: HashSet<_> = a.symmetric_difference(&b).collect();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233793,"byte_end":233858,"line_start":569,"line_end":569,"column_start":5,"column_end":70}},{"value":"/ let diff2: HashSet<_> = b.symmetric_difference(&a).collect();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233863,"byte_end":233928,"line_start":570,"line_end":570,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233933,"byte_end":233936,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(diff1, diff2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233941,"byte_end":233970,"line_start":572,"line_end":572,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(diff1, [1, 4].iter().collect());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":233975,"byte_end":234022,"line_start":573,"line_end":573,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234027,"byte_end":234034,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234075,"byte_end":234081,"line_start":575,"line_end":575,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1217},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234969,"byte_end":234981,"line_start":601,"line_end":601,"column_start":12,"column_end":24},"name":"intersection","qualname":"<HashSet<T, S>>::intersection","value":"pub fn intersection<'a>(&'a Self, &'a Self) -> Intersection","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the intersection,\n i.e., the values that are both in `self` and `other`.","sig":null,"attributes":[{"value":"/ Visits the values representing the intersection,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234305,"byte_end":234357,"line_start":582,"line_end":582,"column_start":5,"column_end":57}},{"value":"/ i.e., the values that are both in `self` and `other`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234362,"byte_end":234419,"line_start":583,"line_end":583,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234424,"byte_end":234427,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234432,"byte_end":234446,"line_start":585,"line_end":585,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234451,"byte_end":234454,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234459,"byte_end":234466,"line_start":587,"line_end":587,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234471,"byte_end":234498,"line_start":588,"line_end":588,"column_start":5,"column_end":32}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234503,"byte_end":234563,"line_start":589,"line_end":589,"column_start":5,"column_end":65}},{"value":"/ let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234568,"byte_end":234631,"line_start":590,"line_end":590,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234636,"byte_end":234639,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ // Print 2, 3 in arbitrary order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234644,"byte_end":234681,"line_start":592,"line_end":592,"column_start":5,"column_end":42}},{"value":"/ for x in a.intersection(&b) {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234686,"byte_end":234719,"line_start":593,"line_end":593,"column_start":5,"column_end":38}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234724,"byte_end":234750,"line_start":594,"line_end":594,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234755,"byte_end":234760,"line_start":595,"line_end":595,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234765,"byte_end":234768,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ let intersection: HashSet<_> = a.intersection(&b).collect();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234773,"byte_end":234837,"line_start":597,"line_end":597,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(intersection, [2, 3].iter().collect());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234842,"byte_end":234896,"line_start":598,"line_end":598,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234901,"byte_end":234908,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":234949,"byte_end":234955,"line_start":600,"line_end":600,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1219},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235939,"byte_end":235944,"line_start":632,"line_end":632,"column_start":12,"column_end":17},"name":"union","qualname":"<HashSet<T, S>>::union","value":"pub fn union<'a>(&'a Self, &'a Self) -> Union","parent":null,"children":[],"decl_id":null,"docs":" Visits the values representing the union,\n i.e., all the values in `self` or `other`, without duplicates.","sig":null,"attributes":[{"value":"/ Visits the values representing the union,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235289,"byte_end":235334,"line_start":613,"line_end":613,"column_start":5,"column_end":50}},{"value":"/ i.e., all the values in `self` or `other`, without duplicates.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235339,"byte_end":235405,"line_start":614,"line_end":614,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235410,"byte_end":235413,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235418,"byte_end":235432,"line_start":616,"line_end":616,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235437,"byte_end":235440,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235445,"byte_end":235452,"line_start":618,"line_end":618,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235457,"byte_end":235484,"line_start":619,"line_end":619,"column_start":5,"column_end":32}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235489,"byte_end":235549,"line_start":620,"line_end":620,"column_start":5,"column_end":65}},{"value":"/ let b: HashSet<_> = [4, 2, 3, 4].iter().cloned().collect();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235554,"byte_end":235617,"line_start":621,"line_end":621,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235622,"byte_end":235625,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ // Print 1, 2, 3, 4 in arbitrary order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235630,"byte_end":235673,"line_start":623,"line_end":623,"column_start":5,"column_end":48}},{"value":"/ for x in a.union(&b) {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235678,"byte_end":235704,"line_start":624,"line_end":624,"column_start":5,"column_end":31}},{"value":"/     println!(\"{}\", x);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235709,"byte_end":235735,"line_start":625,"line_end":625,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235740,"byte_end":235745,"line_start":626,"line_end":626,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235750,"byte_end":235753,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ let union: HashSet<_> = a.union(&b).collect();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235758,"byte_end":235808,"line_start":628,"line_end":628,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(union, [1, 2, 3, 4].iter().collect());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235813,"byte_end":235866,"line_start":629,"line_end":629,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235871,"byte_end":235878,"line_start":630,"line_end":630,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":235919,"byte_end":235925,"line_start":631,"line_end":631,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1221},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236924,"byte_end":236932,"line_start":662,"line_end":662,"column_start":12,"column_end":20},"name":"contains","qualname":"<HashSet<T, S>>::contains","value":"pub fn contains<Q: ?Sized>(&Self, &Q) -> bool where T: Borrow<Q>, Q: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains a value.","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains a value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236244,"byte_end":236291,"line_start":643,"line_end":643,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236296,"byte_end":236299,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236304,"byte_end":236371,"line_start":645,"line_end":645,"column_start":5,"column_end":72}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236376,"byte_end":236443,"line_start":646,"line_end":646,"column_start":5,"column_end":72}},{"value":"/ the value type.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236448,"byte_end":236467,"line_start":647,"line_end":647,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236472,"byte_end":236475,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236480,"byte_end":236494,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236499,"byte_end":236502,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236507,"byte_end":236514,"line_start":651,"line_end":651,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236519,"byte_end":236546,"line_start":652,"line_end":652,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236551,"byte_end":236554,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ let set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236559,"byte_end":236621,"line_start":654,"line_end":654,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(set.contains(&1), true);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236626,"byte_end":236665,"line_start":655,"line_end":655,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(set.contains(&4), false);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236670,"byte_end":236710,"line_start":656,"line_end":656,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236715,"byte_end":236722,"line_start":657,"line_end":657,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236727,"byte_end":236730,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236735,"byte_end":236794,"line_start":659,"line_end":659,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236799,"byte_end":236863,"line_start":660,"line_end":660,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":236904,"byte_end":236910,"line_start":661,"line_end":661,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1223},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237794,"byte_end":237797,"line_start":689,"line_end":689,"column_start":12,"column_end":15},"name":"get","qualname":"<HashSet<T, S>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&T> where T: Borrow<Q>, Q: Hash +\nEq","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value in the set, if any, that is equal to the given value.","sig":null,"attributes":[{"value":"/ Returns a reference to the value in the set, if any, that is equal to the given value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237078,"byte_end":237168,"line_start":670,"line_end":670,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237173,"byte_end":237176,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237181,"byte_end":237248,"line_start":672,"line_end":672,"column_start":5,"column_end":72}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237253,"byte_end":237320,"line_start":673,"line_end":673,"column_start":5,"column_end":72}},{"value":"/ the value type.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237325,"byte_end":237344,"line_start":674,"line_end":674,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237349,"byte_end":237352,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237357,"byte_end":237371,"line_start":676,"line_end":676,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237376,"byte_end":237379,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237384,"byte_end":237391,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237396,"byte_end":237423,"line_start":679,"line_end":679,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237428,"byte_end":237431,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ let set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237436,"byte_end":237498,"line_start":681,"line_end":681,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(set.get(&2), Some(&2));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237503,"byte_end":237541,"line_start":682,"line_end":682,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(set.get(&4), None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237546,"byte_end":237580,"line_start":683,"line_end":683,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237585,"byte_end":237592,"line_start":684,"line_end":684,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237597,"byte_end":237600,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237605,"byte_end":237664,"line_start":686,"line_end":686,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237669,"byte_end":237733,"line_start":687,"line_end":687,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":237774,"byte_end":237780,"line_start":688,"line_end":688,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1225},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238626,"byte_end":238639,"line_start":716,"line_end":716,"column_start":12,"column_end":25},"name":"get_or_insert","qualname":"<HashSet<T, S>>::get_or_insert","value":"pub fn get_or_insert(&mut Self, T) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Inserts the given `value` into the set if it is not present, then\n returns a reference to the value in the set.","sig":null,"attributes":[{"value":"/ Inserts the given `value` into the set if it is not present, then","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238089,"byte_end":238158,"line_start":701,"line_end":701,"column_start":5,"column_end":74}},{"value":"/ returns a reference to the value in the set.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238163,"byte_end":238211,"line_start":702,"line_end":702,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238216,"byte_end":238219,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238224,"byte_end":238238,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238243,"byte_end":238246,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238251,"byte_end":238258,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238263,"byte_end":238290,"line_start":707,"line_end":707,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238295,"byte_end":238298,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238303,"byte_end":238369,"line_start":709,"line_end":709,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238374,"byte_end":238403,"line_start":710,"line_end":710,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(set.get_or_insert(2), &2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238408,"byte_end":238449,"line_start":711,"line_end":711,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(set.get_or_insert(100), &100);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238454,"byte_end":238499,"line_start":712,"line_end":712,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(set.len(), 4); // 100 was inserted","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238504,"byte_end":238553,"line_start":713,"line_end":713,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238558,"byte_end":238565,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238606,"byte_end":238612,"line_start":715,"line_end":715,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1226},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239630,"byte_end":239649,"line_start":745,"line_end":745,"column_start":12,"column_end":31},"name":"get_or_insert_owned","qualname":"<HashSet<T, S>>::get_or_insert_owned","value":"pub fn get_or_insert_owned<Q: ?Sized>(&mut Self, &Q) -> &T where T: Borrow<Q>,\nQ: Hash + Eq + ToOwned<Owned = T>","parent":null,"children":[],"decl_id":null,"docs":" Inserts an owned copy of the given `value` into the set if it is not\n present, then returns a reference to the value in the set.","sig":null,"attributes":[{"value":"/ Inserts an owned copy of the given `value` into the set if it is not","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":238994,"byte_end":239066,"line_start":726,"line_end":726,"column_start":5,"column_end":77}},{"value":"/ present, then returns a reference to the value in the set.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239071,"byte_end":239133,"line_start":727,"line_end":727,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239138,"byte_end":239141,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239146,"byte_end":239160,"line_start":729,"line_end":729,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239165,"byte_end":239168,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239173,"byte_end":239180,"line_start":731,"line_end":731,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239185,"byte_end":239212,"line_start":732,"line_end":732,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239217,"byte_end":239220,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<String> = [\"cat\", \"dog\", \"horse\"]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239225,"byte_end":239283,"line_start":734,"line_end":734,"column_start":5,"column_end":63}},{"value":"/     .iter().map(|&pet| pet.to_owned()).collect();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239288,"byte_end":239341,"line_start":735,"line_end":735,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239346,"byte_end":239349,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239354,"byte_end":239383,"line_start":737,"line_end":737,"column_start":5,"column_end":34}},{"value":"/ for &pet in &[\"cat\", \"dog\", \"fish\"] {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239388,"byte_end":239429,"line_start":738,"line_end":738,"column_start":5,"column_end":46}},{"value":"/     let value = set.get_or_insert_owned(pet);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239434,"byte_end":239483,"line_start":739,"line_end":739,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(value, pet);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239488,"byte_end":239519,"line_start":740,"line_end":740,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239524,"byte_end":239529,"line_start":741,"line_end":741,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(set.len(), 4); // a new \"fish\" was inserted","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239534,"byte_end":239592,"line_start":742,"line_end":742,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239597,"byte_end":239604,"line_start":743,"line_end":743,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":239609,"byte_end":239618,"line_start":744,"line_end":744,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1229},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240806,"byte_end":240824,"line_start":778,"line_end":778,"column_start":12,"column_end":30},"name":"get_or_insert_with","qualname":"<HashSet<T, S>>::get_or_insert_with","value":"pub fn get_or_insert_with<Q: ?Sized, F>(&mut Self, &Q, F) -> &T where\nT: Borrow<Q>, Q: Hash + Eq, F: FnOnce(&Q) -> T","parent":null,"children":[],"decl_id":null,"docs":" Inserts a value computed from `f` into the set if the given `value` is\n not present, then returns a reference to the value in the set.","sig":null,"attributes":[{"value":"/ Inserts a value computed from `f` into the set if the given `value` is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240115,"byte_end":240189,"line_start":759,"line_end":759,"column_start":5,"column_end":79}},{"value":"/ not present, then returns a reference to the value in the set.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240194,"byte_end":240260,"line_start":760,"line_end":760,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240265,"byte_end":240268,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240273,"byte_end":240287,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240292,"byte_end":240295,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240300,"byte_end":240307,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240312,"byte_end":240339,"line_start":765,"line_end":765,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240344,"byte_end":240347,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<String> = [\"cat\", \"dog\", \"horse\"]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240352,"byte_end":240410,"line_start":767,"line_end":767,"column_start":5,"column_end":63}},{"value":"/     .iter().map(|&pet| pet.to_owned()).collect();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240415,"byte_end":240468,"line_start":768,"line_end":768,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240473,"byte_end":240476,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.len(), 3);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240481,"byte_end":240510,"line_start":770,"line_end":770,"column_start":5,"column_end":34}},{"value":"/ for &pet in &[\"cat\", \"dog\", \"fish\"] {","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240515,"byte_end":240556,"line_start":771,"line_end":771,"column_start":5,"column_end":46}},{"value":"/     let value = set.get_or_insert_with(pet, str::to_owned);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240561,"byte_end":240624,"line_start":772,"line_end":772,"column_start":5,"column_end":68}},{"value":"/     assert_eq!(value, pet);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240629,"byte_end":240660,"line_start":773,"line_end":773,"column_start":5,"column_end":36}},{"value":"/ }","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240665,"byte_end":240670,"line_start":774,"line_end":774,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(set.len(), 4); // a new \"fish\" was inserted","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240675,"byte_end":240733,"line_start":775,"line_end":775,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240738,"byte_end":240745,"line_start":776,"line_end":776,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":240786,"byte_end":240792,"line_start":777,"line_end":777,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1233},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241830,"byte_end":241841,"line_start":810,"line_end":810,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<HashSet<T, S>>::is_disjoint","value":"pub fn is_disjoint(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` has no elements in common with `other`.\n This is equivalent to checking for an empty intersection.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` has no elements in common with `other`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241298,"byte_end":241366,"line_start":793,"line_end":793,"column_start":5,"column_end":73}},{"value":"/ This is equivalent to checking for an empty intersection.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241371,"byte_end":241432,"line_start":794,"line_end":794,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241437,"byte_end":241440,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241445,"byte_end":241459,"line_start":796,"line_end":796,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241464,"byte_end":241467,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241472,"byte_end":241479,"line_start":798,"line_end":798,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241484,"byte_end":241511,"line_start":799,"line_end":799,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241516,"byte_end":241519,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ let a: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241524,"byte_end":241584,"line_start":801,"line_end":801,"column_start":5,"column_end":65}},{"value":"/ let mut b = HashSet::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241589,"byte_end":241620,"line_start":802,"line_end":802,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241625,"byte_end":241628,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.is_disjoint(&b), true);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241633,"byte_end":241673,"line_start":804,"line_end":804,"column_start":5,"column_end":45}},{"value":"/ b.insert(4);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241678,"byte_end":241694,"line_start":805,"line_end":805,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(a.is_disjoint(&b), true);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241699,"byte_end":241739,"line_start":806,"line_end":806,"column_start":5,"column_end":45}},{"value":"/ b.insert(1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241744,"byte_end":241760,"line_start":807,"line_end":807,"column_start":5,"column_end":21}},{"value":"/ assert_eq!(a.is_disjoint(&b), false);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241765,"byte_end":241806,"line_start":808,"line_end":808,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241811,"byte_end":241818,"line_start":809,"line_end":809,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1235},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242463,"byte_end":242472,"line_start":831,"line_end":831,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<HashSet<T, S>>::is_subset","value":"pub fn is_subset(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a subset of another,\n i.e., `other` contains at least all the values in `self`.","sig":null,"attributes":[{"value":"/ Returns `true` if the set is a subset of another,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241932,"byte_end":241985,"line_start":814,"line_end":814,"column_start":5,"column_end":58}},{"value":"/ i.e., `other` contains at least all the values in `self`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":241990,"byte_end":242051,"line_start":815,"line_end":815,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242056,"byte_end":242059,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242064,"byte_end":242078,"line_start":817,"line_end":817,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242083,"byte_end":242086,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242091,"byte_end":242098,"line_start":819,"line_end":819,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242103,"byte_end":242130,"line_start":820,"line_end":820,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242135,"byte_end":242138,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ let sup: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242143,"byte_end":242205,"line_start":822,"line_end":822,"column_start":5,"column_end":67}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242210,"byte_end":242243,"line_start":823,"line_end":823,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242248,"byte_end":242251,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.is_subset(&sup), true);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242256,"byte_end":242298,"line_start":825,"line_end":825,"column_start":5,"column_end":47}},{"value":"/ set.insert(2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242303,"byte_end":242321,"line_start":826,"line_end":826,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_subset(&sup), true);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242326,"byte_end":242368,"line_start":827,"line_end":827,"column_start":5,"column_end":47}},{"value":"/ set.insert(4);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242373,"byte_end":242391,"line_start":828,"line_end":828,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_subset(&sup), false);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242396,"byte_end":242439,"line_start":829,"line_end":829,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242444,"byte_end":242451,"line_start":830,"line_end":830,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1237},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243216,"byte_end":243227,"line_start":856,"line_end":856,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<HashSet<T, S>>::is_superset","value":"pub fn is_superset(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set is a superset of another,\n i.e., `self` contains at least all the values in `other`.","sig":null,"attributes":[{"value":"/ Returns `true` if the set is a superset of another,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242591,"byte_end":242646,"line_start":835,"line_end":835,"column_start":5,"column_end":60}},{"value":"/ i.e., `self` contains at least all the values in `other`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242651,"byte_end":242712,"line_start":836,"line_end":836,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242717,"byte_end":242720,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242725,"byte_end":242739,"line_start":838,"line_end":838,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242744,"byte_end":242747,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242752,"byte_end":242759,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242764,"byte_end":242791,"line_start":841,"line_end":841,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242796,"byte_end":242799,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ let sub: HashSet<_> = [1, 2].iter().cloned().collect();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242804,"byte_end":242863,"line_start":843,"line_end":843,"column_start":5,"column_end":64}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242868,"byte_end":242901,"line_start":844,"line_end":844,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242906,"byte_end":242909,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.is_superset(&sub), false);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242914,"byte_end":242959,"line_start":846,"line_end":846,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242964,"byte_end":242967,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ set.insert(0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242972,"byte_end":242990,"line_start":848,"line_end":848,"column_start":5,"column_end":23}},{"value":"/ set.insert(1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":242995,"byte_end":243013,"line_start":849,"line_end":849,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_superset(&sub), false);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243018,"byte_end":243063,"line_start":850,"line_end":850,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243068,"byte_end":243071,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ set.insert(2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243076,"byte_end":243094,"line_start":852,"line_end":852,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.is_superset(&sub), true);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243099,"byte_end":243143,"line_start":853,"line_end":853,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243148,"byte_end":243155,"line_start":854,"line_end":854,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243196,"byte_end":243202,"line_start":855,"line_end":855,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1238},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243808,"byte_end":243814,"line_start":878,"line_end":878,"column_start":12,"column_end":18},"name":"insert","qualname":"<HashSet<T, S>>::insert","value":"pub fn insert(&mut Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set.","sig":null,"attributes":[{"value":"/ Adds a value to the set.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243300,"byte_end":243328,"line_start":860,"line_end":860,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243333,"byte_end":243336,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ If the set did not have this value present, `true` is returned.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243341,"byte_end":243408,"line_start":862,"line_end":862,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243413,"byte_end":243416,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ If the set did have this value present, `false` is returned.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243421,"byte_end":243485,"line_start":864,"line_end":864,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243490,"byte_end":243493,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243498,"byte_end":243512,"line_start":866,"line_end":866,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243517,"byte_end":243520,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243525,"byte_end":243532,"line_start":868,"line_end":868,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243537,"byte_end":243564,"line_start":869,"line_end":869,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243569,"byte_end":243572,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243577,"byte_end":243610,"line_start":871,"line_end":871,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243615,"byte_end":243618,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.insert(2), true);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243623,"byte_end":243659,"line_start":873,"line_end":873,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(set.insert(2), false);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243664,"byte_end":243701,"line_start":874,"line_end":874,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(set.len(), 1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243706,"byte_end":243735,"line_start":875,"line_end":875,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243740,"byte_end":243747,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243788,"byte_end":243794,"line_start":877,"line_end":877,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1239},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244449,"byte_end":244456,"line_start":898,"line_end":898,"column_start":12,"column_end":19},"name":"replace","qualname":"<HashSet<T, S>>::replace","value":"pub fn replace(&mut Self, T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set, replacing the existing value, if any, that is equal to the given\n one. Returns the replaced value.","sig":null,"attributes":[{"value":"/ Adds a value to the set, replacing the existing value, if any, that is equal to the given","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":243902,"byte_end":243995,"line_start":882,"line_end":882,"column_start":5,"column_end":98}},{"value":"/ one. Returns the replaced value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244000,"byte_end":244036,"line_start":883,"line_end":883,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244041,"byte_end":244044,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244049,"byte_end":244063,"line_start":885,"line_end":885,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244068,"byte_end":244071,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244076,"byte_end":244083,"line_start":887,"line_end":887,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244088,"byte_end":244115,"line_start":888,"line_end":888,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244120,"byte_end":244123,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244128,"byte_end":244161,"line_start":890,"line_end":890,"column_start":5,"column_end":38}},{"value":"/ set.insert(Vec::<i32>::new());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244166,"byte_end":244200,"line_start":891,"line_end":891,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244205,"byte_end":244208,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(set.get(&[][..]).unwrap().capacity(), 0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244213,"byte_end":244269,"line_start":893,"line_end":893,"column_start":5,"column_end":61}},{"value":"/ set.replace(Vec::with_capacity(10));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244274,"byte_end":244314,"line_start":894,"line_end":894,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(set.get(&[][..]).unwrap().capacity(), 10);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244319,"byte_end":244376,"line_start":895,"line_end":895,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244381,"byte_end":244388,"line_start":896,"line_end":896,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244429,"byte_end":244435,"line_start":897,"line_end":897,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1240},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245464,"byte_end":245470,"line_start":930,"line_end":930,"column_start":12,"column_end":18},"name":"remove","qualname":"<HashSet<T, S>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> bool where T: Borrow<Q>, Q: Hash +\nEq","parent":null,"children":[],"decl_id":null,"docs":" Removes a value from the set. Returns whether the value was\n present in the set.","sig":null,"attributes":[{"value":"/ Removes a value from the set. Returns whether the value was","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244742,"byte_end":244805,"line_start":908,"line_end":908,"column_start":5,"column_end":68}},{"value":"/ present in the set.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244810,"byte_end":244833,"line_start":909,"line_end":909,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244838,"byte_end":244841,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244846,"byte_end":244913,"line_start":911,"line_end":911,"column_start":5,"column_end":72}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244918,"byte_end":244985,"line_start":912,"line_end":912,"column_start":5,"column_end":72}},{"value":"/ the value type.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":244990,"byte_end":245009,"line_start":913,"line_end":913,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245014,"byte_end":245017,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245022,"byte_end":245036,"line_start":915,"line_end":915,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245041,"byte_end":245044,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245049,"byte_end":245056,"line_start":917,"line_end":917,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245061,"byte_end":245088,"line_start":918,"line_end":918,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245093,"byte_end":245096,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ let mut set = HashSet::new();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245101,"byte_end":245134,"line_start":920,"line_end":920,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245139,"byte_end":245142,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ set.insert(2);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245147,"byte_end":245165,"line_start":922,"line_end":922,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(set.remove(&2), true);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245170,"byte_end":245207,"line_start":923,"line_end":923,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(set.remove(&2), false);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245212,"byte_end":245250,"line_start":924,"line_end":924,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245255,"byte_end":245262,"line_start":925,"line_end":925,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245267,"byte_end":245270,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245275,"byte_end":245334,"line_start":927,"line_end":927,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245339,"byte_end":245403,"line_start":928,"line_end":928,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245444,"byte_end":245450,"line_start":929,"line_end":929,"column_start":41,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1242},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":246340,"byte_end":246344,"line_start":957,"line_end":957,"column_start":12,"column_end":16},"name":"take","qualname":"<HashSet<T, S>>::take","value":"pub fn take<Q: ?Sized>(&mut Self, &Q) -> Option<T> where T: Borrow<Q>,\nQ: Hash + Eq","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the given one.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245624,"byte_end":245709,"line_start":938,"line_end":938,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245714,"byte_end":245717,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ The value may be any borrowed form of the set's value type, but","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245722,"byte_end":245789,"line_start":940,"line_end":940,"column_start":5,"column_end":72}},{"value":"/ [`Hash`] and [`Eq`] on the borrowed form *must* match those for","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245794,"byte_end":245861,"line_start":941,"line_end":941,"column_start":5,"column_end":72}},{"value":"/ the value type.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245866,"byte_end":245885,"line_start":942,"line_end":942,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245890,"byte_end":245893,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245898,"byte_end":245912,"line_start":944,"line_end":944,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245917,"byte_end":245920,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245925,"byte_end":245932,"line_start":946,"line_end":946,"column_start":5,"column_end":12}},{"value":"/ use hashbrown::HashSet;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245937,"byte_end":245964,"line_start":947,"line_end":947,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245969,"byte_end":245972,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ let mut set: HashSet<_> = [1, 2, 3].iter().cloned().collect();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":245977,"byte_end":246043,"line_start":949,"line_end":949,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(set.take(&2), Some(2));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":246048,"byte_end":246086,"line_start":950,"line_end":950,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(set.take(&2), None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":246091,"byte_end":246126,"line_start":951,"line_end":951,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":246131,"byte_end":246138,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":246143,"byte_end":246146,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ [`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":246151,"byte_end":246210,"line_start":954,"line_end":954,"column_start":5,"column_end":64}},{"value":"/ [`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":246215,"byte_end":246279,"line_start":955,"line_end":955,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":246320,"byte_end":246326,"line_start":956,"line_end":956,"column_start":41,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1297},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":252462,"byte_end":252466,"line_start":1208,"line_end":1208,"column_start":12,"column_end":16},"name":"Iter","qualname":"::set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1300}],"decl_id":null,"docs":" An iterator over the items of a `HashSet`.","sig":null,"attributes":[{"value":"/ An iterator over the items of a `HashSet`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":252209,"byte_end":252255,"line_start":1201,"line_end":1201,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":252256,"byte_end":252259,"line_start":1202,"line_end":1202,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`HashSet`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":252260,"byte_end":252327,"line_start":1203,"line_end":1203,"column_start":1,"column_end":68}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":252328,"byte_end":252363,"line_start":1204,"line_end":1204,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":252364,"byte_end":252367,"line_start":1205,"line_end":1205,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":252368,"byte_end":252404,"line_start":1206,"line_end":1206,"column_start":1,"column_end":37}},{"value":"/ [`iter`]: struct.HashSet.html#method.iter","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":252405,"byte_end":252450,"line_start":1207,"line_end":1207,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1301},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":252820,"byte_end":252828,"line_start":1219,"line_end":1219,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":1303}],"decl_id":null,"docs":" An owning iterator over the items of a `HashSet`.","sig":null,"attributes":[{"value":"/ An owning iterator over the items of a `HashSet`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":252506,"byte_end":252559,"line_start":1212,"line_end":1212,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":252560,"byte_end":252563,"line_start":1213,"line_end":1213,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`HashSet`]","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":252564,"byte_end":252635,"line_start":1214,"line_end":1214,"column_start":1,"column_end":72}},{"value":"/ (provided by the `IntoIterator` trait). See its documentation for more.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":252636,"byte_end":252711,"line_start":1215,"line_end":1215,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":252712,"byte_end":252715,"line_start":1216,"line_end":1216,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":252716,"byte_end":252752,"line_start":1217,"line_end":1217,"column_start":1,"column_end":37}},{"value":"/ [`into_iter`]: struct.HashSet.html#method.into_iter","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":252753,"byte_end":252808,"line_start":1218,"line_end":1218,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1304},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":253133,"byte_end":253138,"line_start":1230,"line_end":1230,"column_start":12,"column_end":17},"name":"Drain","qualname":"::set::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":1307}],"decl_id":null,"docs":" A draining iterator over the items of a `HashSet`.","sig":null,"attributes":[{"value":"/ A draining iterator over the items of a `HashSet`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":252869,"byte_end":252923,"line_start":1223,"line_end":1223,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":252924,"byte_end":252927,"line_start":1224,"line_end":1224,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain`] method on [`HashSet`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":252928,"byte_end":252996,"line_start":1225,"line_end":1225,"column_start":1,"column_end":69}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":252997,"byte_end":253032,"line_start":1226,"line_end":1226,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":253033,"byte_end":253036,"line_start":1227,"line_end":1227,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":253037,"byte_end":253073,"line_start":1228,"line_end":1228,"column_start":1,"column_end":37}},{"value":"/ [`drain`]: struct.HashSet.html#method.drain","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":253074,"byte_end":253121,"line_start":1229,"line_end":1229,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1308},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":253505,"byte_end":253516,"line_start":1241,"line_end":1241,"column_start":12,"column_end":23},"name":"DrainFilter","qualname":"::set::DrainFilter","value":"DrainFilter {  }","parent":null,"children":[{"krate":0,"index":1312},{"krate":0,"index":1313}],"decl_id":null,"docs":" A draining iterator over entries of a `HashSet` which don't satisfy the predicate `f`.","sig":null,"attributes":[{"value":"/ A draining iterator over entries of a `HashSet` which don't satisfy the predicate `f`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":253184,"byte_end":253274,"line_start":1234,"line_end":1234,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":253275,"byte_end":253278,"line_start":1235,"line_end":1235,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain_filter`] method on [`HashSet`]. See its","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":253279,"byte_end":253362,"line_start":1236,"line_end":1236,"column_start":1,"column_end":84}},{"value":"/ documentation for more.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":253363,"byte_end":253390,"line_start":1237,"line_end":1237,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":253391,"byte_end":253394,"line_start":1238,"line_end":1238,"column_start":1,"column_end":4}},{"value":"/ [`drain_filter`]: struct.HashSet.html#method.drain_filter","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":253395,"byte_end":253456,"line_start":1239,"line_end":1239,"column_start":1,"column_end":62}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":253457,"byte_end":253493,"line_start":1240,"line_end":1240,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1314},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":253918,"byte_end":253930,"line_start":1256,"line_end":1256,"column_start":12,"column_end":24},"name":"Intersection","qualname":"::set::Intersection","value":"Intersection {  }","parent":null,"children":[{"krate":0,"index":1318},{"krate":0,"index":1319}],"decl_id":null,"docs":" A lazy iterator producing elements in the intersection of `HashSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the intersection of `HashSet`s.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":253614,"byte_end":253687,"line_start":1249,"line_end":1249,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":253688,"byte_end":253691,"line_start":1250,"line_end":1250,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`intersection`] method on [`HashSet`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":253692,"byte_end":253767,"line_start":1251,"line_end":1251,"column_start":1,"column_end":76}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":253768,"byte_end":253803,"line_start":1252,"line_end":1252,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":253804,"byte_end":253807,"line_start":1253,"line_end":1253,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":253808,"byte_end":253844,"line_start":1254,"line_end":1254,"column_start":1,"column_end":37}},{"value":"/ [`intersection`]: struct.HashSet.html#method.intersection","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":253845,"byte_end":253906,"line_start":1255,"line_end":1255,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1320},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":254350,"byte_end":254360,"line_start":1270,"line_end":1270,"column_start":12,"column_end":22},"name":"Difference","qualname":"::set::Difference","value":"Difference {  }","parent":null,"children":[{"krate":0,"index":1324},{"krate":0,"index":1325}],"decl_id":null,"docs":" A lazy iterator producing elements in the difference of `HashSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the difference of `HashSet`s.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":254054,"byte_end":254125,"line_start":1263,"line_end":1263,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":254126,"byte_end":254129,"line_start":1264,"line_end":1264,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`difference`] method on [`HashSet`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":254130,"byte_end":254203,"line_start":1265,"line_end":1265,"column_start":1,"column_end":74}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":254204,"byte_end":254239,"line_start":1266,"line_end":1266,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":254240,"byte_end":254243,"line_start":1267,"line_end":1267,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":254244,"byte_end":254280,"line_start":1268,"line_end":1268,"column_start":1,"column_end":37}},{"value":"/ [`difference`]: struct.HashSet.html#method.difference","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":254281,"byte_end":254338,"line_start":1269,"line_end":1269,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1326},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":254820,"byte_end":254839,"line_start":1284,"line_end":1284,"column_start":12,"column_end":31},"name":"SymmetricDifference","qualname":"::set::SymmetricDifference","value":"SymmetricDifference {  }","parent":null,"children":[{"krate":0,"index":1330}],"decl_id":null,"docs":" A lazy iterator producing elements in the symmetric difference of `HashSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the symmetric difference of `HashSet`s.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":254484,"byte_end":254565,"line_start":1277,"line_end":1277,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":254566,"byte_end":254569,"line_start":1278,"line_end":1278,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`symmetric_difference`] method on","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":254570,"byte_end":254640,"line_start":1279,"line_end":1279,"column_start":1,"column_end":71}},{"value":"/ [`HashSet`]. See its documentation for more.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":254641,"byte_end":254689,"line_start":1280,"line_end":1280,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":254690,"byte_end":254693,"line_start":1281,"line_end":1281,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":254694,"byte_end":254730,"line_start":1282,"line_end":1282,"column_start":1,"column_end":37}},{"value":"/ [`symmetric_difference`]: struct.HashSet.html#method.symmetric_difference","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":254731,"byte_end":254808,"line_start":1283,"line_end":1283,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":1331},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":255192,"byte_end":255197,"line_start":1295,"line_end":1295,"column_start":12,"column_end":17},"name":"Union","qualname":"::set::Union","value":"Union {  }","parent":null,"children":[{"krate":0,"index":1335}],"decl_id":null,"docs":" A lazy iterator producing elements in the union of `HashSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the union of `HashSet`s.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":254916,"byte_end":254982,"line_start":1288,"line_end":1288,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":254983,"byte_end":254986,"line_start":1289,"line_end":1289,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`union`] method on [`HashSet`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":254987,"byte_end":255055,"line_start":1290,"line_end":1290,"column_start":1,"column_end":69}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":255056,"byte_end":255091,"line_start":1291,"line_end":1291,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":255092,"byte_end":255095,"line_start":1292,"line_end":1292,"column_start":1,"column_end":4}},{"value":"/ [`HashSet`]: struct.HashSet.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":255096,"byte_end":255132,"line_start":1293,"line_end":1293,"column_start":1,"column_end":37}},{"value":"/ [`union`]: struct.HashSet.html#method.union","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":255133,"byte_end":255180,"line_start":1294,"line_end":1294,"column_start":1,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":1504},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":1687,"byte_end":1695,"line_start":65,"line_end":65,"column_start":9,"column_end":17},"name":"hash_map","qualname":"::hash_map","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1505}],"decl_id":null,"docs":" A hash map implemented with quadratic probing and SIMD lookup.\n","sig":null,"attributes":[{"value":"/ A hash map implemented with quadratic probing and SIMD lookup.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":1702,"byte_end":1768,"line_start":66,"line_end":66,"column_start":5,"column_end":71}}]},{"kind":"Mod","id":{"krate":0,"index":1506},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":2242,"byte_end":2250,"line_start":82,"line_end":82,"column_start":9,"column_end":17},"name":"hash_set","qualname":"::hash_set","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1507}],"decl_id":null,"docs":" A hash set implemented as a `HashMap` where the value is `()`.\n","sig":null,"attributes":[{"value":"/ A hash set implemented as a `HashMap` where the value is `()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":2257,"byte_end":2323,"line_start":83,"line_end":83,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1575},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":3002,"byte_end":3018,"line_start":105,"line_end":105,"column_start":5,"column_end":21},"name":"CapacityOverflow","qualname":"::TryReserveError::CapacityOverflow","value":"TryReserveError::CapacityOverflow","parent":{"krate":0,"index":1574},"children":[],"decl_id":null,"docs":" Error due to the computed capacity exceeding the collection's maximum\n (usually `isize::MAX` bytes).\n","sig":null,"attributes":[{"value":"/ Error due to the computed capacity exceeding the collection's maximum","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":2886,"byte_end":2959,"line_start":103,"line_end":103,"column_start":5,"column_end":78}},{"value":"/ (usually `isize::MAX` bytes).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":2964,"byte_end":2997,"line_start":104,"line_end":104,"column_start":5,"column_end":38}}]},{"kind":"StructVariant","id":{"krate":0,"index":1577},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":3072,"byte_end":3082,"line_start":108,"line_end":108,"column_start":5,"column_end":15},"name":"AllocError","qualname":"::TryReserveError::AllocError","value":"TryReserveError::AllocError { layout }","parent":{"krate":0,"index":1574},"children":[],"decl_id":null,"docs":" The memory allocator returned an error\n","sig":null,"attributes":[{"value":"/ The memory allocator returned an error","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":3025,"byte_end":3067,"line_start":107,"line_end":107,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":1574},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":2864,"byte_end":2879,"line_start":102,"line_end":102,"column_start":10,"column_end":25},"name":"TryReserveError","qualname":"::TryReserveError","value":"pub enum TryReserveError {\n    CapacityOverflow,\n    AllocError {\n        layout: alloc::alloc::Layout,\n    },\n}","parent":null,"children":[{"krate":0,"index":1575},{"krate":0,"index":1577}],"decl_id":null,"docs":" The error type for `try_reserve` methods.\n","sig":null,"attributes":[{"value":"/ The error type for `try_reserve` methods.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/lib.rs","byte_start":2770,"byte_end":2815,"line_start":100,"line_end":100,"column_start":1,"column_end":46}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/sse2.rs","byte_start":10224768,"byte_end":10224773,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1531},{"krate":0,"index":1532},{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1548}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/bitmask.rs","byte_start":78141,"byte_end":78148,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/bitmask.rs","byte_start":80762,"byte_end":80769,"line_start":99,"line_end":99,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/bitmask.rs","byte_start":81057,"byte_end":81068,"line_start":113,"line_end":113,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":7417,"byte_end":7428,"line_start":73,"line_end":73,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":10159,"byte_end":10167,"line_start":153,"line_end":153,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":15090,"byte_end":15096,"line_start":282,"line_end":282,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":15122,"byte_end":15128,"line_start":284,"line_end":284,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":15261,"byte_end":15267,"line_start":291,"line_end":291,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":18089,"byte_end":18097,"line_start":378,"line_end":378,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":50403,"byte_end":50411,"line_start":1182,"line_end":1182,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":50456,"byte_end":50464,"line_start":1183,"line_end":1183,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":50511,"byte_end":50519,"line_start":1185,"line_end":1185,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":52943,"byte_end":52951,"line_start":1250,"line_end":1250,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1572}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":53734,"byte_end":53742,"line_start":1274,"line_end":1274,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":57695,"byte_end":57703,"line_start":1380,"line_end":1380,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":58125,"byte_end":58133,"line_start":1396,"line_end":1396,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":58975,"byte_end":58987,"line_start":1427,"line_end":1427,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":61810,"byte_end":61822,"line_start":1496,"line_end":1496,"column_start":25,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":61853,"byte_end":61865,"line_start":1497,"line_end":1497,"column_start":25,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":61891,"byte_end":61903,"line_start":1499,"line_end":1499,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":62193,"byte_end":62205,"line_start":1511,"line_end":1511,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":63672,"byte_end":63684,"line_start":1549,"line_end":1549,"column_start":27,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":64579,"byte_end":64586,"line_start":1568,"line_end":1568,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":70525,"byte_end":70532,"line_start":1686,"line_end":1686,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":70740,"byte_end":70747,"line_start":1696,"line_end":1696,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":71432,"byte_end":71439,"line_start":1719,"line_end":1719,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":71472,"byte_end":71479,"line_start":1720,"line_end":1720,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":71676,"byte_end":71687,"line_start":1729,"line_end":1729,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":71840,"byte_end":71851,"line_start":1736,"line_end":1736,"column_start":25,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":71896,"byte_end":71907,"line_start":1737,"line_end":1737,"column_start":25,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":72547,"byte_end":72558,"line_start":1759,"line_end":1759,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":73071,"byte_end":73082,"line_start":1778,"line_end":1778,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":73422,"byte_end":73433,"line_start":1792,"line_end":1792,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":73466,"byte_end":73477,"line_start":1793,"line_end":1793,"column_start":27,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":74017,"byte_end":74025,"line_start":1810,"line_end":1810,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":74182,"byte_end":74190,"line_start":1817,"line_end":1817,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":74239,"byte_end":74247,"line_start":1818,"line_end":1818,"column_start":25,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":74290,"byte_end":74298,"line_start":1820,"line_end":1820,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":75026,"byte_end":75034,"line_start":1843,"line_end":1843,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":75427,"byte_end":75435,"line_start":1860,"line_end":1860,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":75472,"byte_end":75480,"line_start":1861,"line_end":1861,"column_start":27,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":76012,"byte_end":76023,"line_start":1883,"line_end":1883,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":76594,"byte_end":76605,"line_start":1904,"line_end":1904,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":88306,"byte_end":88313,"line_start":193,"line_end":193,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":88992,"byte_end":88999,"line_start":217,"line_end":217,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90047,"byte_end":90054,"line_start":251,"line_end":251,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":445},{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101315,"byte_end":101322,"line_start":642,"line_end":642,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":464},{"krate":0,"index":466},{"krate":0,"index":469},{"krate":0,"index":471},{"krate":0,"index":473},{"krate":0,"index":475},{"krate":0,"index":478},{"krate":0,"index":481},{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114918,"byte_end":114925,"line_start":1068,"line_end":1068,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":117858,"byte_end":117865,"line_start":1126,"line_end":1126,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":118186,"byte_end":118193,"line_start":1142,"line_end":1142,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":118287,"byte_end":118294,"line_start":1150,"line_end":1150,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":118490,"byte_end":118497,"line_start":1160,"line_end":1160,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":118787,"byte_end":118794,"line_start":1171,"line_end":1171,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":119640,"byte_end":119644,"line_start":1203,"line_end":1203,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":119882,"byte_end":119886,"line_start":1213,"line_end":1213,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120664,"byte_end":120671,"line_start":1235,"line_end":1235,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120697,"byte_end":120704,"line_start":1237,"line_end":1237,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121368,"byte_end":121376,"line_start":1259,"line_end":1259,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":122031,"byte_end":122035,"line_start":1282,"line_end":1282,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":122233,"byte_end":122237,"line_start":1291,"line_end":1291,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":122761,"byte_end":122767,"line_start":1309,"line_end":1309,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":122967,"byte_end":122973,"line_start":1318,"line_end":1318,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123443,"byte_end":123448,"line_start":1335,"line_end":1335,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":124199,"byte_end":124210,"line_start":1361,"line_end":1361,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":124604,"byte_end":124620,"line_start":1377,"line_end":1377,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":124770,"byte_end":124781,"line_start":1384,"line_end":1384,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":125152,"byte_end":125163,"line_start":1401,"line_end":1401,"column_start":33,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":125410,"byte_end":125426,"line_start":1409,"line_end":1409,"column_start":12,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127524,"byte_end":127543,"line_start":1475,"line_end":1475,"column_start":31,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127636,"byte_end":127655,"line_start":1482,"line_end":1482,"column_start":31,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":128278,"byte_end":128296,"line_start":1508,"line_end":1508,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":689},{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":129121,"byte_end":129139,"line_start":1535,"line_end":1535,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":699},{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":130149,"byte_end":130164,"line_start":1565,"line_end":1565,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":711},{"krate":0,"index":713},{"krate":0,"index":716},{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":131618,"byte_end":131629,"line_start":1613,"line_end":1613,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":730},{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":137474,"byte_end":137493,"line_start":1807,"line_end":1807,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":141515,"byte_end":141532,"line_start":1925,"line_end":1925,"column_start":19,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":764},{"krate":0,"index":767}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":143558,"byte_end":143576,"line_start":1991,"line_end":1991,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":143753,"byte_end":143764,"line_start":1997,"line_end":1997,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":144098,"byte_end":144117,"line_start":2006,"line_end":2006,"column_start":39,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":144375,"byte_end":144392,"line_start":2015,"line_end":2015,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":144557,"byte_end":144572,"line_start":2021,"line_end":2021,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":145161,"byte_end":145166,"line_start":2041,"line_end":2041,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":145738,"byte_end":145751,"line_start":2061,"line_end":2061,"column_start":31,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":145844,"byte_end":145857,"line_start":2068,"line_end":2068,"column_start":31,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":145959,"byte_end":145972,"line_start":2076,"line_end":2076,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":831}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":146456,"byte_end":146467,"line_start":2095,"line_end":2095,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":147164,"byte_end":147171,"line_start":2121,"line_end":2121,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":147950,"byte_end":147954,"line_start":2150,"line_end":2150,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":148525,"byte_end":148529,"line_start":2169,"line_end":2169,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":148683,"byte_end":148687,"line_start":2176,"line_end":2176,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":148730,"byte_end":148737,"line_start":2178,"line_end":2178,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":149320,"byte_end":149327,"line_start":2197,"line_end":2197,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":149480,"byte_end":149487,"line_start":2203,"line_end":2203,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":149528,"byte_end":149535,"line_start":2205,"line_end":2205,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":899}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":149741,"byte_end":149749,"line_start":2215,"line_end":2215,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":150080,"byte_end":150088,"line_start":2227,"line_end":2227,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":150237,"byte_end":150245,"line_start":2233,"line_end":2233,"column_start":30,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":150296,"byte_end":150304,"line_start":2235,"line_end":2235,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":150466,"byte_end":150470,"line_start":2241,"line_end":2241,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":150942,"byte_end":150946,"line_start":2257,"line_end":2257,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":151099,"byte_end":151103,"line_start":2263,"line_end":2263,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":151146,"byte_end":151152,"line_start":2265,"line_end":2265,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":151624,"byte_end":151630,"line_start":2281,"line_end":2281,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":151783,"byte_end":151789,"line_start":2287,"line_end":2287,"column_start":30,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":151832,"byte_end":151841,"line_start":2289,"line_end":2289,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":152321,"byte_end":152330,"line_start":2305,"line_end":2305,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":152483,"byte_end":152492,"line_start":2311,"line_end":2311,"column_start":30,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":152533,"byte_end":152542,"line_start":2313,"line_end":2313,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":152758,"byte_end":152763,"line_start":2323,"line_end":2323,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":153098,"byte_end":153103,"line_start":2335,"line_end":2335,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":153256,"byte_end":153261,"line_start":2341,"line_end":2341,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":153302,"byte_end":153307,"line_start":2343,"line_end":2343,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":153507,"byte_end":153512,"line_start":2353,"line_end":2353,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":990},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160131,"byte_end":160136,"line_start":2584,"line_end":2584,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160893,"byte_end":160906,"line_start":2611,"line_end":2611,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170176,"byte_end":170187,"line_start":2917,"line_end":2917,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1029}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":172482,"byte_end":172489,"line_start":3002,"line_end":3002,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":173062,"byte_end":173069,"line_start":3020,"line_end":3020,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174516,"byte_end":174523,"line_start":3065,"line_end":3065,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/scopeguard.rs","byte_start":215808,"byte_end":215818,"line_start":20,"line_end":20,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1101},{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/scopeguard.rs","byte_start":216006,"byte_end":216016,"line_start":31,"line_end":31,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/scopeguard.rs","byte_start":216195,"byte_end":216205,"line_start":41,"line_end":41,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1110}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":220430,"byte_end":220437,"line_start":118,"line_end":118,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1183},{"krate":0,"index":1184}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":220677,"byte_end":220684,"line_start":131,"line_end":131,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1187},{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":221775,"byte_end":221782,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1199},{"krate":0,"index":1202},{"krate":0,"index":1204},{"krate":0,"index":1205}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229327,"byte_end":229334,"line_start":429,"line_end":429,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1215},{"krate":0,"index":1217},{"krate":0,"index":1219},{"krate":0,"index":1221},{"krate":0,"index":1223},{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1229},{"krate":0,"index":1233},{"krate":0,"index":1235},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":246661,"byte_end":246668,"line_start":970,"line_end":970,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":246916,"byte_end":246923,"line_start":984,"line_end":984,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":247005,"byte_end":247012,"line_start":991,"line_end":991,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1255}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":247233,"byte_end":247240,"line_start":1001,"line_end":1001,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1259}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":247548,"byte_end":247555,"line_start":1014,"line_end":1014,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":248121,"byte_end":248128,"line_start":1037,"line_end":1037,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1271}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":248693,"byte_end":248700,"line_start":1060,"line_end":1060,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1276}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":255520,"byte_end":255527,"line_start":1309,"line_end":1309,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1346},{"krate":0,"index":1347},{"krate":0,"index":1348}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":256402,"byte_end":256406,"line_start":1341,"line_end":1341,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1351}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":256590,"byte_end":256594,"line_start":1349,"line_end":1349,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1357}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":256923,"byte_end":256927,"line_start":1361,"line_end":1361,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1361}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":257073,"byte_end":257077,"line_start":1367,"line_end":1367,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":257124,"byte_end":257128,"line_start":1369,"line_end":1369,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1366}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":257285,"byte_end":257293,"line_start":1375,"line_end":1375,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":257745,"byte_end":257753,"line_start":1391,"line_end":1391,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1374}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":257895,"byte_end":257903,"line_start":1397,"line_end":1397,"column_start":27,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":257946,"byte_end":257954,"line_start":1399,"line_end":1399,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1379}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":258168,"byte_end":258173,"line_start":1406,"line_end":1406,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1385}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":258629,"byte_end":258634,"line_start":1422,"line_end":1422,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1388}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":258780,"byte_end":258785,"line_start":1428,"line_end":1428,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":258832,"byte_end":258837,"line_start":1430,"line_end":1430,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1393}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":259058,"byte_end":259069,"line_start":1437,"line_end":1437,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1399}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":259380,"byte_end":259391,"line_start":1451,"line_end":1451,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1406}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":259808,"byte_end":259819,"line_start":1470,"line_end":1470,"column_start":30,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":259882,"byte_end":259894,"line_start":1472,"line_end":1472,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1413}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":260113,"byte_end":260125,"line_start":1482,"line_end":1482,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":260663,"byte_end":260675,"line_start":1506,"line_end":1506,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":260900,"byte_end":260912,"line_start":1516,"line_end":1516,"column_start":30,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":260993,"byte_end":261003,"line_start":1523,"line_end":1523,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1431}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":261220,"byte_end":261230,"line_start":1533,"line_end":1533,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1438}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":261772,"byte_end":261782,"line_start":1557,"line_end":1557,"column_start":30,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":261868,"byte_end":261878,"line_start":1564,"line_end":1564,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1445}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":262095,"byte_end":262114,"line_start":1574,"line_end":1574,"column_start":22,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1449}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":262320,"byte_end":262339,"line_start":1583,"line_end":1583,"column_start":29,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1456}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":262711,"byte_end":262730,"line_start":1600,"line_end":1600,"column_start":30,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":262816,"byte_end":262835,"line_start":1607,"line_end":1607,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":263052,"byte_end":263057,"line_start":1617,"line_end":1617,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1467}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":263250,"byte_end":263255,"line_start":1626,"line_end":1626,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":263341,"byte_end":263346,"line_start":1633,"line_end":1633,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1474}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":263570,"byte_end":263575,"line_start":1643,"line_end":1643,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1481}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/sse2.rs","byte_start":10224768,"byte_end":10224773,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1552},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/bitmask.rs","byte_start":78141,"byte_end":78148,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1558},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/bitmask.rs","byte_start":80762,"byte_end":80769,"line_start":99,"line_end":99,"column_start":23,"column_end":30},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1558},"to":{"krate":1,"index":7086}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/bitmask.rs","byte_start":81057,"byte_end":81068,"line_start":113,"line_end":113,"column_start":19,"column_end":30},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":71},"to":{"krate":1,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":7417,"byte_end":7428,"line_start":73,"line_end":73,"column_start":6,"column_end":17},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":10159,"byte_end":10167,"line_start":153,"line_end":153,"column_start":19,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":101},"to":{"krate":1,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":15090,"byte_end":15096,"line_start":282,"line_end":282,"column_start":25,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":112},"to":{"krate":1,"index":2825}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":15122,"byte_end":15128,"line_start":284,"line_end":284,"column_start":19,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":112},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":15261,"byte_end":15267,"line_start":291,"line_end":291,"column_start":9,"column_end":15},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":18089,"byte_end":18097,"line_start":378,"line_end":378,"column_start":9,"column_end":17},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":50403,"byte_end":50411,"line_start":1182,"line_end":1182,"column_start":25,"column_end":33},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":134},"to":{"krate":1,"index":2825}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":50456,"byte_end":50464,"line_start":1183,"line_end":1183,"column_start":25,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":134},"to":{"krate":1,"index":2837}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":50511,"byte_end":50519,"line_start":1185,"line_end":1185,"column_start":26,"column_end":34},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":134},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":52943,"byte_end":52951,"line_start":1250,"line_end":1250,"column_start":34,"column_end":42},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":134},"to":{"krate":0,"index":215}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":53734,"byte_end":53742,"line_start":1274,"line_end":1274,"column_start":16,"column_end":24},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":57695,"byte_end":57703,"line_start":1380,"line_end":1380,"column_start":18,"column_end":26},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":134},"to":{"krate":1,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":58125,"byte_end":58133,"line_start":1396,"line_end":1396,"column_start":26,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":134},"to":{"krate":1,"index":7086}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":58975,"byte_end":58987,"line_start":1427,"line_end":1427,"column_start":9,"column_end":21},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":236},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":61810,"byte_end":61822,"line_start":1496,"line_end":1496,"column_start":25,"column_end":37},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":236},"to":{"krate":1,"index":2825}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":61853,"byte_end":61865,"line_start":1497,"line_end":1497,"column_start":25,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":236},"to":{"krate":1,"index":2837}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":61891,"byte_end":61903,"line_start":1499,"line_end":1499,"column_start":19,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":236},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":62193,"byte_end":62205,"line_start":1511,"line_end":1511,"column_start":22,"column_end":34},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":236},"to":{"krate":1,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":63672,"byte_end":63684,"line_start":1549,"line_end":1549,"column_start":27,"column_end":39},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":236},"to":{"krate":1,"index":7520}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":64579,"byte_end":64586,"line_start":1568,"line_end":1568,"column_start":9,"column_end":16},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":70525,"byte_end":70532,"line_start":1686,"line_end":1686,"column_start":19,"column_end":26},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":259},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":70740,"byte_end":70747,"line_start":1696,"line_end":1696,"column_start":22,"column_end":29},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":259},"to":{"krate":1,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":71432,"byte_end":71439,"line_start":1719,"line_end":1719,"column_start":31,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":259},"to":{"krate":1,"index":7138}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":71472,"byte_end":71479,"line_start":1720,"line_end":1720,"column_start":27,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":259},"to":{"krate":1,"index":7520}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":71676,"byte_end":71687,"line_start":1729,"line_end":1729,"column_start":9,"column_end":20},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":71840,"byte_end":71851,"line_start":1736,"line_end":1736,"column_start":25,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":280},"to":{"krate":1,"index":2825}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":71896,"byte_end":71907,"line_start":1737,"line_end":1737,"column_start":25,"column_end":36},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":280},"to":{"krate":1,"index":2837}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":72547,"byte_end":72558,"line_start":1759,"line_end":1759,"column_start":18,"column_end":29},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":280},"to":{"krate":1,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":73071,"byte_end":73082,"line_start":1778,"line_end":1778,"column_start":22,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":280},"to":{"krate":1,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":73422,"byte_end":73433,"line_start":1792,"line_end":1792,"column_start":31,"column_end":42},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":280},"to":{"krate":1,"index":7138}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":73466,"byte_end":73477,"line_start":1793,"line_end":1793,"column_start":27,"column_end":38},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":280},"to":{"krate":1,"index":7520}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":74017,"byte_end":74025,"line_start":1810,"line_end":1810,"column_start":9,"column_end":17},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":74182,"byte_end":74190,"line_start":1817,"line_end":1817,"column_start":25,"column_end":33},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":304},"to":{"krate":1,"index":2825}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":74239,"byte_end":74247,"line_start":1818,"line_end":1818,"column_start":25,"column_end":33},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":304},"to":{"krate":1,"index":2837}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":74290,"byte_end":74298,"line_start":1820,"line_end":1820,"column_start":18,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":304},"to":{"krate":1,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":75026,"byte_end":75034,"line_start":1843,"line_end":1843,"column_start":22,"column_end":30},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":304},"to":{"krate":1,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":75427,"byte_end":75435,"line_start":1860,"line_end":1860,"column_start":31,"column_end":39},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":304},"to":{"krate":1,"index":7138}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":75472,"byte_end":75480,"line_start":1861,"line_end":1861,"column_start":27,"column_end":35},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":304},"to":{"krate":1,"index":7520}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":76012,"byte_end":76023,"line_start":1883,"line_end":1883,"column_start":13,"column_end":24},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/raw/mod.rs","byte_start":76594,"byte_end":76605,"line_start":1904,"line_end":1904,"column_start":26,"column_end":37},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":330},"to":{"krate":1,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":88306,"byte_end":88313,"line_start":193,"line_end":193,"column_start":46,"column_end":53},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":407},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":88992,"byte_end":88999,"line_start":217,"line_end":217,"column_start":12,"column_end":19},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":90047,"byte_end":90054,"line_start":251,"line_end":251,"column_start":15,"column_end":22},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":101315,"byte_end":101322,"line_start":642,"line_end":642,"column_start":15,"column_end":22},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":114918,"byte_end":114925,"line_start":1068,"line_end":1068,"column_start":15,"column_end":22},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":117858,"byte_end":117865,"line_start":1126,"line_end":1126,"column_start":29,"column_end":36},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":407},"to":{"krate":1,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":118186,"byte_end":118193,"line_start":1142,"line_end":1142,"column_start":22,"column_end":29},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":407},"to":{"krate":1,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":118287,"byte_end":118294,"line_start":1150,"line_end":1150,"column_start":25,"column_end":32},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":407},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":118490,"byte_end":118497,"line_start":1160,"line_end":1160,"column_start":27,"column_end":34},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":407},"to":{"krate":1,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":118787,"byte_end":118794,"line_start":1171,"line_end":1171,"column_start":40,"column_end":47},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":407},"to":{"krate":1,"index":3132}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":119640,"byte_end":119644,"line_start":1203,"line_end":1203,"column_start":22,"column_end":26},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":520},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":119882,"byte_end":119886,"line_start":1213,"line_end":1213,"column_start":41,"column_end":45},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":520},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120664,"byte_end":120671,"line_start":1235,"line_end":1235,"column_start":40,"column_end":47},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":534},"to":{"krate":1,"index":2825}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":120697,"byte_end":120704,"line_start":1237,"line_end":1237,"column_start":12,"column_end":19},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":121368,"byte_end":121376,"line_start":1259,"line_end":1259,"column_start":12,"column_end":20},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":122031,"byte_end":122035,"line_start":1282,"line_end":1282,"column_start":22,"column_end":26},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":555},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":122233,"byte_end":122237,"line_start":1291,"line_end":1291,"column_start":34,"column_end":38},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":555},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":122761,"byte_end":122767,"line_start":1309,"line_end":1309,"column_start":22,"column_end":28},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":568},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":122967,"byte_end":122973,"line_start":1318,"line_end":1318,"column_start":34,"column_end":40},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":568},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":123443,"byte_end":123448,"line_start":1335,"line_end":1335,"column_start":12,"column_end":17},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":581},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":124199,"byte_end":124210,"line_start":1361,"line_end":1361,"column_start":28,"column_end":39},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":590},"to":{"krate":1,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":124604,"byte_end":124620,"line_start":1377,"line_end":1377,"column_start":28,"column_end":44},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":603},"to":{"krate":1,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":124770,"byte_end":124781,"line_start":1384,"line_end":1384,"column_start":28,"column_end":39},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":590},"to":{"krate":1,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":125152,"byte_end":125163,"line_start":1401,"line_end":1401,"column_start":33,"column_end":44},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":590},"to":{"krate":1,"index":7520}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":125410,"byte_end":125426,"line_start":1409,"line_end":1409,"column_start":12,"column_end":28},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127524,"byte_end":127543,"line_start":1475,"line_end":1475,"column_start":31,"column_end":50},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":655},"to":{"krate":1,"index":2825}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":127636,"byte_end":127655,"line_start":1482,"line_end":1482,"column_start":31,"column_end":50},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":655},"to":{"krate":1,"index":2837}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":128278,"byte_end":128296,"line_start":1508,"line_end":1508,"column_start":19,"column_end":37},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":129121,"byte_end":129139,"line_start":1535,"line_end":1535,"column_start":19,"column_end":37},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":130149,"byte_end":130164,"line_start":1565,"line_end":1565,"column_start":19,"column_end":34},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":131618,"byte_end":131629,"line_start":1613,"line_end":1613,"column_start":19,"column_end":30},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":644},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":137474,"byte_end":137493,"line_start":1807,"line_end":1807,"column_start":19,"column_end":38},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":655},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":141515,"byte_end":141532,"line_start":1925,"line_end":1925,"column_start":19,"column_end":36},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":143558,"byte_end":143576,"line_start":1991,"line_end":1991,"column_start":25,"column_end":43},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":638},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":143753,"byte_end":143764,"line_start":1997,"line_end":1997,"column_start":39,"column_end":50},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":644},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":144098,"byte_end":144117,"line_start":2006,"line_end":2006,"column_start":39,"column_end":58},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":655},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":144375,"byte_end":144392,"line_start":2015,"line_end":2015,"column_start":25,"column_end":42},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":671},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":144557,"byte_end":144572,"line_start":2021,"line_end":2021,"column_start":25,"column_end":40},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":678},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":145161,"byte_end":145166,"line_start":2041,"line_end":2041,"column_start":39,"column_end":44},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":794},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":145738,"byte_end":145751,"line_start":2061,"line_end":2061,"column_start":31,"column_end":44},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":810},"to":{"krate":1,"index":2825}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":145844,"byte_end":145857,"line_start":2068,"line_end":2068,"column_start":31,"column_end":44},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":810},"to":{"krate":1,"index":2837}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":145959,"byte_end":145972,"line_start":2076,"line_end":2076,"column_start":39,"column_end":52},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":810},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":146456,"byte_end":146467,"line_start":2095,"line_end":2095,"column_start":32,"column_end":43},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":832},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":147164,"byte_end":147171,"line_start":2121,"line_end":2121,"column_start":32,"column_end":39},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":407},"to":{"krate":1,"index":7086}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":147950,"byte_end":147954,"line_start":2150,"line_end":2150,"column_start":29,"column_end":33},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":520},"to":{"krate":1,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":148525,"byte_end":148529,"line_start":2169,"line_end":2169,"column_start":34,"column_end":38},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":520},"to":{"krate":1,"index":7138}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":148683,"byte_end":148687,"line_start":2176,"line_end":2176,"column_start":30,"column_end":34},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":520},"to":{"krate":1,"index":7520}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":148730,"byte_end":148737,"line_start":2178,"line_end":2178,"column_start":29,"column_end":36},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":534},"to":{"krate":1,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":149320,"byte_end":149327,"line_start":2197,"line_end":2197,"column_start":34,"column_end":41},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":534},"to":{"krate":1,"index":7138}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":149480,"byte_end":149487,"line_start":2203,"line_end":2203,"column_start":30,"column_end":37},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":534},"to":{"krate":1,"index":7520}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":149528,"byte_end":149535,"line_start":2205,"line_end":2205,"column_start":27,"column_end":34},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":534},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":149741,"byte_end":149749,"line_start":2215,"line_end":2215,"column_start":25,"column_end":33},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":547},"to":{"krate":1,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":150080,"byte_end":150088,"line_start":2227,"line_end":2227,"column_start":34,"column_end":42},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":547},"to":{"krate":1,"index":7138}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":150237,"byte_end":150245,"line_start":2233,"line_end":2233,"column_start":30,"column_end":38},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":547},"to":{"krate":1,"index":7520}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":150296,"byte_end":150304,"line_start":2235,"line_end":2235,"column_start":41,"column_end":49},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":547},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":150466,"byte_end":150470,"line_start":2241,"line_end":2241,"column_start":29,"column_end":33},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":555},"to":{"krate":1,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":150942,"byte_end":150946,"line_start":2257,"line_end":2257,"column_start":34,"column_end":38},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":555},"to":{"krate":1,"index":7138}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":151099,"byte_end":151103,"line_start":2263,"line_end":2263,"column_start":30,"column_end":34},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":555},"to":{"krate":1,"index":7520}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":151146,"byte_end":151152,"line_start":2265,"line_end":2265,"column_start":29,"column_end":35},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":568},"to":{"krate":1,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":151624,"byte_end":151630,"line_start":2281,"line_end":2281,"column_start":34,"column_end":40},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":568},"to":{"krate":1,"index":7138}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":151783,"byte_end":151789,"line_start":2287,"line_end":2287,"column_start":30,"column_end":36},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":568},"to":{"krate":1,"index":7520}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":151832,"byte_end":151841,"line_start":2289,"line_end":2289,"column_start":29,"column_end":38},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":633},"to":{"krate":1,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":152321,"byte_end":152330,"line_start":2305,"line_end":2305,"column_start":34,"column_end":43},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":633},"to":{"krate":1,"index":7138}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":152483,"byte_end":152492,"line_start":2311,"line_end":2311,"column_start":30,"column_end":39},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":633},"to":{"krate":1,"index":7520}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":152533,"byte_end":152542,"line_start":2313,"line_end":2313,"column_start":27,"column_end":36},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":633},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":152758,"byte_end":152763,"line_start":2323,"line_end":2323,"column_start":29,"column_end":34},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":581},"to":{"krate":1,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":153098,"byte_end":153103,"line_start":2335,"line_end":2335,"column_start":34,"column_end":39},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":581},"to":{"krate":1,"index":7138}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":153256,"byte_end":153261,"line_start":2341,"line_end":2341,"column_start":30,"column_end":35},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":581},"to":{"krate":1,"index":7520}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":153302,"byte_end":153307,"line_start":2343,"line_end":2343,"column_start":27,"column_end":32},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":581},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":153507,"byte_end":153512,"line_start":2353,"line_end":2353,"column_start":19,"column_end":24},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":794},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160131,"byte_end":160136,"line_start":2584,"line_end":2584,"column_start":28,"column_end":33},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":794},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":160893,"byte_end":160906,"line_start":2611,"line_end":2611,"column_start":19,"column_end":32},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":170176,"byte_end":170187,"line_start":2917,"line_end":2917,"column_start":19,"column_end":30},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":832},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":172482,"byte_end":172489,"line_start":3002,"line_end":3002,"column_start":40,"column_end":47},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":407},"to":{"krate":1,"index":7082}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":173062,"byte_end":173069,"line_start":3020,"line_end":3020,"column_start":34,"column_end":41},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":407},"to":{"krate":1,"index":7095}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/map.rs","byte_start":174516,"byte_end":174523,"line_start":3065,"line_end":3065,"column_start":46,"column_end":53},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":407},"to":{"krate":1,"index":7095}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/scopeguard.rs","byte_start":215808,"byte_end":215818,"line_start":20,"line_end":20,"column_start":22,"column_end":32},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1090},"to":{"krate":1,"index":3047}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/scopeguard.rs","byte_start":216006,"byte_end":216016,"line_start":31,"line_end":31,"column_start":25,"column_end":35},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1090},"to":{"krate":1,"index":3060}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/scopeguard.rs","byte_start":216195,"byte_end":216205,"line_start":41,"line_end":41,"column_start":21,"column_end":31},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1090},"to":{"krate":1,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":220430,"byte_end":220437,"line_start":118,"line_end":118,"column_start":36,"column_end":43},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1176},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":220677,"byte_end":220684,"line_start":131,"line_end":131,"column_start":9,"column_end":16},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":221775,"byte_end":221782,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":229327,"byte_end":229334,"line_start":429,"line_end":429,"column_start":12,"column_end":19},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":246661,"byte_end":246668,"line_start":970,"line_end":970,"column_start":26,"column_end":33},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1176},"to":{"krate":1,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":246916,"byte_end":246923,"line_start":984,"line_end":984,"column_start":19,"column_end":26},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1176},"to":{"krate":1,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":247005,"byte_end":247012,"line_start":991,"line_end":991,"column_start":27,"column_end":34},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1176},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":247233,"byte_end":247240,"line_start":1001,"line_end":1001,"column_start":32,"column_end":39},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1176},"to":{"krate":1,"index":7082}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":247548,"byte_end":247555,"line_start":1014,"line_end":1014,"column_start":26,"column_end":33},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1176},"to":{"krate":1,"index":7095}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":248121,"byte_end":248128,"line_start":1037,"line_end":1037,"column_start":34,"column_end":41},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1176},"to":{"krate":1,"index":7095}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":248693,"byte_end":248700,"line_start":1060,"line_end":1060,"column_start":24,"column_end":31},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1176},"to":{"krate":1,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":255520,"byte_end":255527,"line_start":1309,"line_end":1309,"column_start":29,"column_end":36},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1176},"to":{"krate":1,"index":7086}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":256402,"byte_end":256406,"line_start":1341,"line_end":1341,"column_start":19,"column_end":23},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1297},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":256590,"byte_end":256594,"line_start":1349,"line_end":1349,"column_start":26,"column_end":30},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1297},"to":{"krate":1,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":256923,"byte_end":256927,"line_start":1361,"line_end":1361,"column_start":35,"column_end":39},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1297},"to":{"krate":1,"index":7138}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":257073,"byte_end":257077,"line_start":1367,"line_end":1367,"column_start":27,"column_end":31},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1297},"to":{"krate":1,"index":7520}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":257124,"byte_end":257128,"line_start":1369,"line_end":1369,"column_start":36,"column_end":40},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1297},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":257285,"byte_end":257293,"line_start":1375,"line_end":1375,"column_start":22,"column_end":30},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1301},"to":{"krate":1,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":257745,"byte_end":257753,"line_start":1391,"line_end":1391,"column_start":31,"column_end":39},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1301},"to":{"krate":1,"index":7138}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":257895,"byte_end":257903,"line_start":1397,"line_end":1397,"column_start":27,"column_end":35},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1301},"to":{"krate":1,"index":7520}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":257946,"byte_end":257954,"line_start":1399,"line_end":1399,"column_start":36,"column_end":44},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1301},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":258168,"byte_end":258173,"line_start":1406,"line_end":1406,"column_start":22,"column_end":27},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1304},"to":{"krate":1,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":258629,"byte_end":258634,"line_start":1422,"line_end":1422,"column_start":31,"column_end":36},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1304},"to":{"krate":1,"index":7138}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":258780,"byte_end":258785,"line_start":1428,"line_end":1428,"column_start":27,"column_end":32},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":1304},"to":{"krate":1,"index":7520}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":258832,"byte_end":258837,"line_start":1430,"line_end":1430,"column_start":36,"column_end":41},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":1304},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":259058,"byte_end":259069,"line_start":1437,"line_end":1437,"column_start":25,"column_end":36},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1308},"to":{"krate":1,"index":3071}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":259380,"byte_end":259391,"line_start":1451,"line_end":1451,"column_start":25,"column_end":36},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1308},"to":{"krate":1,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":259808,"byte_end":259819,"line_start":1470,"line_end":1470,"column_start":30,"column_end":41},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1308},"to":{"krate":1,"index":7520}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":259882,"byte_end":259894,"line_start":1472,"line_end":1472,"column_start":22,"column_end":34},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1314},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":260113,"byte_end":260125,"line_start":1482,"line_end":1482,"column_start":29,"column_end":41},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1314},"to":{"krate":1,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":260663,"byte_end":260675,"line_start":1506,"line_end":1506,"column_start":27,"column_end":39},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1314},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":260900,"byte_end":260912,"line_start":1516,"line_end":1516,"column_start":30,"column_end":42},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1314},"to":{"krate":1,"index":7520}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":260993,"byte_end":261003,"line_start":1523,"line_end":1523,"column_start":22,"column_end":32},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1320},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":261220,"byte_end":261230,"line_start":1533,"line_end":1533,"column_start":29,"column_end":39},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1320},"to":{"krate":1,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":261772,"byte_end":261782,"line_start":1557,"line_end":1557,"column_start":30,"column_end":40},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1320},"to":{"krate":1,"index":7520}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":261868,"byte_end":261878,"line_start":1564,"line_end":1564,"column_start":27,"column_end":37},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1320},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":262095,"byte_end":262114,"line_start":1574,"line_end":1574,"column_start":22,"column_end":41},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1326},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":262320,"byte_end":262339,"line_start":1583,"line_end":1583,"column_start":29,"column_end":48},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1326},"to":{"krate":1,"index":7249}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":262711,"byte_end":262730,"line_start":1600,"line_end":1600,"column_start":30,"column_end":49},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1326},"to":{"krate":1,"index":7520}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":262816,"byte_end":262835,"line_start":1607,"line_end":1607,"column_start":27,"column_end":46},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1326},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":263052,"byte_end":263057,"line_start":1617,"line_end":1617,"column_start":22,"column_end":27},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1331},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":263250,"byte_end":263255,"line_start":1626,"line_end":1626,"column_start":30,"column_end":35},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1331},"to":{"krate":1,"index":7520}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":263341,"byte_end":263346,"line_start":1633,"line_end":1633,"column_start":27,"column_end":32},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1331},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/hashbrown-0.9.1/src/set.rs","byte_start":263570,"byte_end":263575,"line_start":1643,"line_end":1643,"column_start":29,"column_end":34},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1331},"to":{"krate":1,"index":7249}}]}