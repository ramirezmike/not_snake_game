{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2","program":"/home/mramirez/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","euclid","--edition=2018","/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=4c780a5797774b99","-C","extra-filename=-4c780a5797774b99","--out-dir","/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps","-L","dependency=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps","--extern","num_traits=/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libnum_traits-ea482ab16ed9c760.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/mramirez/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/home/mramirez/code/projects/games/bug_game/target/rls/debug/deps/libeuclid-4c780a5797774b99.rmeta"},"prelude":{"crate_id":{"name":"euclid","disambiguator":[10997256294139764654,211697693960159480]},"crate_root":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src","external_crates":[{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[17044353007700780372,2918200604221815240]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[15333840167806743833,9889193056877993824]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[4550415707075219492,6623162258675921486]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","num":4,"id":{"name":"num_traits","disambiguator":[252308066493949436,2163249747488123429]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","num":5,"id":{"name":"std","disambiguator":[397594041871667817,11704163070354659695]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","num":6,"id":{"name":"alloc","disambiguator":[8289379911494056514,13856099756999900329]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","num":7,"id":{"name":"libc","disambiguator":[10514502805115346386,576110030083780649]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","num":8,"id":{"name":"unwind","disambiguator":[9878185313679130060,1975285035821961205]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","num":9,"id":{"name":"cfg_if","disambiguator":[4010603182529655334,7152219772350788052]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","num":10,"id":{"name":"hashbrown","disambiguator":[1807637986128902209,18379128151258407121]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[11140927657351163542,6267109750485550558]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[13809795498598848728,13320395723520943315]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","num":13,"id":{"name":"std_detect","disambiguator":[13869841232067652907,9875669357213642224]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","num":14,"id":{"name":"addr2line","disambiguator":[15533050656730733495,14669839968799848603]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","num":15,"id":{"name":"gimli","disambiguator":[14371692877540073659,8181723439448527964]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","num":16,"id":{"name":"object","disambiguator":[639541300699627395,1995254029228069844]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[12482123824895737424,11765111494567609733]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","num":18,"id":{"name":"adler","disambiguator":[1169880241773671279,8605314106566979368]}},{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[5016943468141875609,13494347935157563341]}}],"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":427,"byte_end":4536,"line_start":10,"line_end":115,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":4449},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":1894,"byte_end":1899,"line_start":43,"line_end":43,"column_start":23,"column_end":28},"alias_span":null,"name":"Angle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":362},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":1923,"byte_end":1928,"line_start":44,"line_end":44,"column_start":23,"column_end":28},"alias_span":null,"name":"Box2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":791},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":1954,"byte_end":1971,"line_start":45,"line_end":45,"column_start":25,"column_end":42},"alias_span":null,"name":"HomogeneousVector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":922},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":1996,"byte_end":2002,"line_start":46,"line_end":46,"column_start":24,"column_end":30},"alias_span":null,"name":"Length","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":923},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":1996,"byte_end":2002,"line_start":46,"line_end":46,"column_start":24,"column_end":30},"alias_span":null,"name":"Length","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1616},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2027,"byte_end":2033,"line_start":47,"line_end":47,"column_start":24,"column_end":30},"alias_span":null,"name":"point2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1619},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2035,"byte_end":2041,"line_start":47,"line_end":47,"column_start":32,"column_end":38},"alias_span":null,"name":"point3","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1189},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2043,"byte_end":2050,"line_start":47,"line_end":47,"column_start":40,"column_end":47},"alias_span":null,"name":"Point2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1400},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2052,"byte_end":2059,"line_start":47,"line_end":47,"column_start":49,"column_end":56},"alias_span":null,"name":"Point3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2228},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2084,"byte_end":2089,"line_start":48,"line_end":48,"column_start":23,"column_end":28},"alias_span":null,"name":"Scale","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2229},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2084,"byte_end":2089,"line_start":48,"line_end":48,"column_start":23,"column_end":28},"alias_span":null,"name":"Scale","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3053},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2119,"byte_end":2130,"line_start":49,"line_end":49,"column_start":29,"column_end":40},"alias_span":null,"name":"Transform2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3294},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2160,"byte_end":2171,"line_start":50,"line_end":50,"column_start":29,"column_end":40},"alias_span":null,"name":"Transform3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4403},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2197,"byte_end":2202,"line_start":51,"line_end":51,"column_start":25,"column_end":30},"alias_span":null,"name":"bvec2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4404},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2204,"byte_end":2209,"line_start":51,"line_end":51,"column_start":32,"column_end":37},"alias_span":null,"name":"bvec3","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4612},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2211,"byte_end":2223,"line_start":51,"line_end":51,"column_start":39,"column_end":51},"alias_span":null,"name":"BoolVector2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4630},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2225,"byte_end":2237,"line_start":51,"line_end":51,"column_start":53,"column_end":65},"alias_span":null,"name":"BoolVector3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4397},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2264,"byte_end":2268,"line_start":52,"line_end":52,"column_start":25,"column_end":29},"alias_span":null,"name":"vec2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4400},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2270,"byte_end":2274,"line_start":52,"line_end":52,"column_start":31,"column_end":35},"alias_span":null,"name":"vec3","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3893},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2276,"byte_end":2284,"line_start":52,"line_end":52,"column_start":37,"column_end":45},"alias_span":null,"name":"Vector2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4128},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2286,"byte_end":2294,"line_start":52,"line_end":52,"column_start":47,"column_end":55},"alias_span":null,"name":"Vector3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":747},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2321,"byte_end":2326,"line_start":54,"line_end":54,"column_start":24,"column_end":29},"alias_span":null,"name":"box3d","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":587},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2328,"byte_end":2333,"line_start":54,"line_end":54,"column_start":31,"column_end":36},"alias_span":null,"name":"Box3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1870},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2358,"byte_end":2362,"line_start":55,"line_end":55,"column_start":23,"column_end":27},"alias_span":null,"name":"rect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1686},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2364,"byte_end":2368,"line_start":55,"line_end":55,"column_start":29,"column_end":33},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4547},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2393,"byte_end":2409,"line_start":56,"line_end":56,"column_start":23,"column_end":39},"alias_span":null,"name":"RigidTransform3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2017},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2437,"byte_end":2447,"line_start":57,"line_end":57,"column_start":27,"column_end":37},"alias_span":null,"name":"Rotation2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2083},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2449,"byte_end":2459,"line_start":57,"line_end":57,"column_start":39,"column_end":49},"alias_span":null,"name":"Rotation3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2375},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2491,"byte_end":2504,"line_start":58,"line_end":58,"column_start":30,"column_end":43},"alias_span":null,"name":"SideOffsets2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2740},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2528,"byte_end":2533,"line_start":59,"line_end":59,"column_start":23,"column_end":28},"alias_span":null,"name":"size2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2973},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2535,"byte_end":2540,"line_start":59,"line_end":59,"column_start":30,"column_end":35},"alias_span":null,"name":"size3","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2558},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2542,"byte_end":2548,"line_start":59,"line_end":59,"column_start":37,"column_end":43},"alias_span":null,"name":"Size2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2767},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2550,"byte_end":2556,"line_start":59,"line_end":59,"column_start":45,"column_end":51},"alias_span":null,"name":"Size3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3557},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2588,"byte_end":2601,"line_start":60,"line_end":60,"column_start":30,"column_end":43},"alias_span":null,"name":"Translation2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3661},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2603,"byte_end":2616,"line_start":60,"line_end":60,"column_start":45,"column_end":58},"alias_span":null,"name":"Translation3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3769},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2640,"byte_end":2644,"line_start":61,"line_end":61,"column_start":22,"column_end":26},"alias_span":null,"name":"Trig","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":427,"byte_end":4536,"line_start":10,"line_end":115,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":274},{"krate":0,"index":281},{"krate":0,"index":286},{"krate":0,"index":521},{"krate":0,"index":750},{"krate":0,"index":847},{"krate":0,"index":1075},{"krate":0,"index":1097},{"krate":0,"index":1622},{"krate":0,"index":1873},{"krate":0,"index":1933},{"krate":0,"index":2170},{"krate":0,"index":2327},{"krate":0,"index":2466},{"krate":0,"index":2976},{"krate":0,"index":3193},{"krate":0,"index":3476},{"krate":0,"index":3768},{"krate":0,"index":3777},{"krate":0,"index":4649},{"krate":0,"index":4651},{"krate":0,"index":4653},{"krate":0,"index":4654},{"krate":0,"index":4656},{"krate":0,"index":4658},{"krate":0,"index":4659},{"krate":0,"index":4661},{"krate":0,"index":4662},{"krate":0,"index":4664},{"krate":0,"index":4666},{"krate":0,"index":4668},{"krate":0,"index":4405}],"decl_id":null,"docs":" A collection of strongly typed math tools for computer graphics with an inclination\n towards 2d graphics and layout.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":450,"byte_end":456,"line_start":10,"line_end":10,"column_start":24,"column_end":30}},{"value":"/ A collection of strongly typed math tools for computer graphics with an inclination","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":460,"byte_end":547,"line_start":12,"line_end":12,"column_start":1,"column_end":88}},{"value":"/ towards 2d graphics and layout.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":548,"byte_end":583,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":584,"byte_end":587,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ All types are generic over the scalar type of their component (`f32`, `i32`, etc.),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":588,"byte_end":675,"line_start":15,"line_end":15,"column_start":1,"column_end":88}},{"value":"/ and tagged with a generic Unit parameter which is useful to prevent mixing","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":676,"byte_end":754,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ values from different spaces. For example it should not be legal to translate","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":755,"byte_end":836,"line_start":17,"line_end":17,"column_start":1,"column_end":82}},{"value":"/ a screen-space position by a world-space vector and this can be expressed using","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":837,"byte_end":920,"line_start":18,"line_end":18,"column_start":1,"column_end":84}},{"value":"/ the generic Unit parameter.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":921,"byte_end":952,"line_start":19,"line_end":19,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":953,"byte_end":956,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This unit system is not mandatory and all structures have an alias","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":957,"byte_end":1027,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/ with the default unit: `UnknownUnit`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":1028,"byte_end":1069,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ for example ```default::Point2D<T>``` is equivalent to ```Point2D<T, UnknownUnit>```.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":1070,"byte_end":1159,"line_start":23,"line_end":23,"column_start":1,"column_end":90}},{"value":"/ Client code typically creates a set of aliases for each type and doesn't need","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":1160,"byte_end":1241,"line_start":24,"line_end":24,"column_start":1,"column_end":82}},{"value":"/ to deal with the specifics of typed units further. For example:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":1242,"byte_end":1309,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":1310,"byte_end":1313,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":1314,"byte_end":1325,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/ use euclid::*;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":1326,"byte_end":1344,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ pub struct ScreenSpace;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":1345,"byte_end":1372,"line_start":29,"line_end":29,"column_start":1,"column_end":28}},{"value":"/ pub type ScreenPoint = Point2D<f32, ScreenSpace>;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":1373,"byte_end":1426,"line_start":30,"line_end":30,"column_start":1,"column_end":54}},{"value":"/ pub type ScreenSize = Size2D<f32, ScreenSpace>;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":1427,"byte_end":1478,"line_start":31,"line_end":31,"column_start":1,"column_end":52}},{"value":"/ pub struct WorldSpace;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":1479,"byte_end":1505,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ pub type WorldPoint = Point3D<f32, WorldSpace>;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":1506,"byte_end":1557,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/ pub type ProjectionMatrix = Transform3D<f32, WorldSpace, ScreenSpace>;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":1558,"byte_end":1632,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/ // etc...","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":1633,"byte_end":1646,"line_start":35,"line_end":35,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":1647,"byte_end":1654,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":1655,"byte_end":1658,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ All euclid types are marked `#[repr(C)]` in order to facilitate exposing them to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":1659,"byte_end":1743,"line_start":38,"line_end":38,"column_start":1,"column_end":85}},{"value":"/ foreign function interfaces (provided the underlying scalar type is also `repr(C)`).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":1744,"byte_end":1832,"line_start":39,"line_end":39,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":1833,"byte_end":1836,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"deny(unconditional_recursion)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":1837,"byte_end":1870,"line_start":41,"line_end":41,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":4449},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":6565,"byte_end":6570,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"Angle","qualname":"::angle::Angle","value":"Angle { radians }","parent":null,"children":[{"krate":0,"index":4451}],"decl_id":null,"docs":" An angle in radians\n","sig":null,"attributes":[{"value":"/ An angle in radians","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":6395,"byte_end":6418,"line_start":20,"line_end":20,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":4451},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":6584,"byte_end":6591,"line_start":24,"line_end":24,"column_start":9,"column_end":16},"name":"radians","qualname":"::angle::Angle::radians","value":"T","parent":{"krate":0,"index":4449},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":6643,"byte_end":6650,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"radians","qualname":"<Angle<T>>::radians","value":"pub fn radians(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":6622,"byte_end":6631,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":6731,"byte_end":6734,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"get","qualname":"<Angle<T>>::get","value":"pub fn get(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":6710,"byte_end":6719,"line_start":33,"line_end":33,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":6841,"byte_end":6848,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"degrees","qualname":"<Angle<T>>::degrees","value":"pub fn degrees(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":6820,"byte_end":6829,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":6974,"byte_end":6984,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"name":"to_degrees","qualname":"<Angle<T>>::to_degrees","value":"pub fn to_degrees(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":6953,"byte_end":6962,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":7238,"byte_end":7246,"line_start":61,"line_end":61,"column_start":12,"column_end":20},"name":"positive","qualname":"<Angle<T>>::positive","value":"pub fn positive(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns this angle in the [0..2*PI[ range.\n","sig":null,"attributes":[{"value":"/ Returns this angle in the [0..2*PI[ range.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":7180,"byte_end":7226,"line_start":60,"line_end":60,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":7507,"byte_end":7513,"line_start":71,"line_end":71,"column_start":12,"column_end":18},"name":"signed","qualname":"<Angle<T>>::signed","value":"pub fn signed(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns this angle in the ]-PI..PI] range.\n","sig":null,"attributes":[{"value":"/ Returns this angle in the ]-PI..PI] range.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":7449,"byte_end":7495,"line_start":70,"line_end":70,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":7900,"byte_end":7908,"line_start":89,"line_end":89,"column_start":12,"column_end":20},"name":"angle_to","qualname":"<Angle<T>>::angle_to","value":"pub fn angle_to(&Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the shortest signed angle between two angles.","sig":null,"attributes":[{"value":"/ Returns the shortest signed angle between two angles.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":7776,"byte_end":7833,"line_start":86,"line_end":86,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":7838,"byte_end":7841,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Takes wrapping and signs into account.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":7846,"byte_end":7888,"line_start":88,"line_end":88,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":8194,"byte_end":8198,"line_start":98,"line_end":98,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Angle<T>>::lerp","value":"pub fn lerp(&Self, Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linear interpolation between two angles, using the shortest path.\n","sig":null,"attributes":[{"value":"/ Linear interpolation between two angles, using the shortest path.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":8113,"byte_end":8182,"line_start":97,"line_end":97,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":8375,"byte_end":8382,"line_start":108,"line_end":108,"column_start":12,"column_end":19},"name":"sin_cos","qualname":"<Angle<T>>::sin_cos","value":"pub fn sin_cos(Self) -> (T, T)","parent":null,"children":[],"decl_id":null,"docs":" Returns (sin(self), cos(self)).\n","sig":null,"attributes":[{"value":"/ Returns (sin(self), cos(self)).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":8328,"byte_end":8363,"line_start":107,"line_end":107,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":8490,"byte_end":8494,"line_start":117,"line_end":117,"column_start":12,"column_end":16},"name":"zero","qualname":"<Angle<T>>::zero","value":"pub fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":8623,"byte_end":8625,"line_start":126,"line_end":126,"column_start":12,"column_end":14},"name":"pi","qualname":"<Angle<T>>::pi","value":"pub fn pi() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":8688,"byte_end":8694,"line_start":130,"line_end":130,"column_start":12,"column_end":18},"name":"two_pi","qualname":"<Angle<T>>::two_pi","value":"pub fn two_pi() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":8767,"byte_end":8776,"line_start":134,"line_end":134,"column_start":12,"column_end":21},"name":"frac_pi_2","qualname":"<Angle<T>>::frac_pi_2","value":"pub fn frac_pi_2() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":8846,"byte_end":8855,"line_start":138,"line_end":138,"column_start":12,"column_end":21},"name":"frac_pi_3","qualname":"<Angle<T>>::frac_pi_3","value":"pub fn frac_pi_3() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":8925,"byte_end":8934,"line_start":142,"line_end":142,"column_start":12,"column_end":21},"name":"frac_pi_4","qualname":"<Angle<T>>::frac_pi_4","value":"pub fn frac_pi_4() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":9125,"byte_end":9129,"line_start":153,"line_end":153,"column_start":12,"column_end":16},"name":"cast","qualname":"<Angle<T>>::cast","value":"pub fn cast<NewT: NumCast>(&Self) -> Angle<NewT>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another.\n","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":9047,"byte_end":9099,"line_start":151,"line_end":151,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":9104,"byte_end":9113,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":9286,"byte_end":9294,"line_start":158,"line_end":158,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Angle<T>>::try_cast","value":"pub fn try_cast<NewT: NumCast>(&Self) -> Option<Angle<NewT>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another.\n","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":9213,"byte_end":9274,"line_start":157,"line_end":157,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":9520,"byte_end":9526,"line_start":166,"line_end":166,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<Angle<T>>::to_f32","value":"pub fn to_f32(&Self) -> Angle<f32>","parent":null,"children":[],"decl_id":null,"docs":" Cast angle to `f32`.\n","sig":null,"attributes":[{"value":"/ Cast angle to `f32`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":9470,"byte_end":9494,"line_start":164,"line_end":164,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":9499,"byte_end":9508,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":9628,"byte_end":9634,"line_start":172,"line_end":172,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<Angle<T>>::to_f64","value":"pub fn to_f64(&Self) -> Angle<f64>","parent":null,"children":[],"decl_id":null,"docs":" Cast angle `f64`.\n","sig":null,"attributes":[{"value":"/ Cast angle `f64`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":9581,"byte_end":9602,"line_start":170,"line_end":170,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":9607,"byte_end":9616,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":274},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/approxeq.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"approxeq","qualname":"::approxeq","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/approxeq.rs","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":4481},{"krate":0,"index":4484}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":275},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/approxeq.rs","byte_start":14930,"byte_end":14938,"line_start":11,"line_end":11,"column_start":11,"column_end":19},"name":"ApproxEq","qualname":"::approxeq::ApproxEq","value":"ApproxEq<Eps>","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279}],"decl_id":null,"docs":" Trait for testing approximate equality\n","sig":null,"attributes":[{"value":"/ Trait for testing approximate equality","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/approxeq.rs","byte_start":14877,"byte_end":14919,"line_start":10,"line_end":10,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/approxeq.rs","byte_start":14983,"byte_end":14997,"line_start":13,"line_end":13,"column_start":8,"column_end":22},"name":"approx_epsilon","qualname":"::approxeq::ApproxEq::approx_epsilon","value":"pub fn approx_epsilon() -> Eps","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":" Default epsilon value\n","sig":null,"attributes":[{"value":"/ Default epsilon value","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/approxeq.rs","byte_start":14950,"byte_end":14975,"line_start":12,"line_end":12,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/approxeq.rs","byte_start":15135,"byte_end":15148,"line_start":17,"line_end":17,"column_start":8,"column_end":21},"name":"approx_eq_eps","qualname":"::approxeq::ApproxEq::approx_eq_eps","value":"pub fn approx_eq_eps(&Self, &Self, &Eps) -> bool","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":" Returns `true` is this object is approximately equal to the other one, using\n a provided epsilon value.\n","sig":null,"attributes":[{"value":"/ Returns `true` is this object is approximately equal to the other one, using","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/approxeq.rs","byte_start":15013,"byte_end":15093,"line_start":15,"line_end":15,"column_start":5,"column_end":85}},{"value":"/ a provided epsilon value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/approxeq.rs","byte_start":15098,"byte_end":15127,"line_start":16,"line_end":16,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/approxeq.rs","byte_start":15340,"byte_end":15349,"line_start":21,"line_end":21,"column_start":8,"column_end":17},"name":"approx_eq","qualname":"::approxeq::ApproxEq::approx_eq","value":"pub fn approx_eq(&Self, &Self) -> bool","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":" Returns `true` is this object is approximately equal to the other one, using\n the `approx_epsilon()` epsilon value.\n","sig":null,"attributes":[{"value":"/ Returns `true` is this object is approximately equal to the other one, using","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/approxeq.rs","byte_start":15206,"byte_end":15286,"line_start":19,"line_end":19,"column_start":5,"column_end":85}},{"value":"/ the `approx_epsilon()` epsilon value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/approxeq.rs","byte_start":15291,"byte_end":15332,"line_start":20,"line_end":20,"column_start":5,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":281},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/approxord.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"approxord","qualname":"::approxord","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/approxord.rs","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":284}],"decl_id":null,"docs":" Utilities for testing approximate ordering - especially true for\n floating point types, where NaN's cannot be ordered.\n","sig":null,"attributes":[{"value":"/ Utilities for testing approximate ordering - especially true for","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/approxord.rs","byte_start":16326,"byte_end":16394,"line_start":10,"line_end":10,"column_start":1,"column_end":69}},{"value":"/ floating point types, where NaN's cannot be ordered.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/approxord.rs","byte_start":16395,"byte_end":16451,"line_start":11,"line_end":11,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":282},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/approxord.rs","byte_start":16460,"byte_end":16463,"line_start":13,"line_end":13,"column_start":8,"column_end":11},"name":"min","qualname":"::approxord::min","value":"pub fn min<T: PartialOrd>(T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":284},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/approxord.rs","byte_start":16563,"byte_end":16566,"line_start":21,"line_end":21,"column_start":8,"column_end":11},"name":"max","qualname":"::approxord::max","value":"pub fn max<T: PartialOrd>(T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":362},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":19418,"byte_end":19423,"line_start":65,"line_end":65,"column_start":12,"column_end":17},"name":"Box2D","qualname":"::box2d::Box2D","value":"Box2D { min, max }","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":366}],"decl_id":null,"docs":" A 2d axis aligned rectangle represented by its minimum and maximum coordinates.","sig":null,"attributes":[{"value":"/ A 2d axis aligned rectangle represented by its minimum and maximum coordinates.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":17907,"byte_end":17990,"line_start":30,"line_end":30,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":17991,"byte_end":17994,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Representation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":17995,"byte_end":18015,"line_start":32,"line_end":32,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":18016,"byte_end":18019,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This struct is similar to [`Rect`], but stores rectangle as two endpoints","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":18020,"byte_end":18097,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ instead of origin point and size. Such representation has several advantages over","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":18098,"byte_end":18183,"line_start":35,"line_end":35,"column_start":1,"column_end":86}},{"value":"/ [`Rect`] representation:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":18184,"byte_end":18212,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/ - Several operations are more efficient with `Box2D`, including [`intersection`],","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":18213,"byte_end":18298,"line_start":37,"line_end":37,"column_start":1,"column_end":86}},{"value":"/   [`union`], and point-in-rect.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":18299,"byte_end":18334,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ - The representation is less susceptible to overflow. With [`Rect`], computation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":18335,"byte_end":18419,"line_start":39,"line_end":39,"column_start":1,"column_end":85}},{"value":"/   of second point can overflow for a large range of values of origin and size.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":18420,"byte_end":18502,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"/   However, with `Box2D`, computation of [`size`] cannot overflow if the coordinates","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":18503,"byte_end":18590,"line_start":41,"line_end":41,"column_start":1,"column_end":88}},{"value":"/   are signed and the resulting size is unsigned.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":18591,"byte_end":18643,"line_start":42,"line_end":42,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":18644,"byte_end":18647,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ A known disadvantage of `Box2D` is that translating the rectangle requires translating","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":18648,"byte_end":18738,"line_start":44,"line_end":44,"column_start":1,"column_end":91}},{"value":"/ both points, whereas translating [`Rect`] only requires translating one point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":18739,"byte_end":18821,"line_start":45,"line_end":45,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":18822,"byte_end":18825,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Empty box","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":18826,"byte_end":18841,"line_start":47,"line_end":47,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":18842,"byte_end":18845,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ A box is considered empty (see [`is_empty`]) if any of the following is true:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":18846,"byte_end":18927,"line_start":49,"line_end":49,"column_start":1,"column_end":82}},{"value":"/ - it's area is empty,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":18928,"byte_end":18953,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/ - it's area is negative (`min.x > max.x` or `min.y > max.y`),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":18954,"byte_end":19019,"line_start":51,"line_end":51,"column_start":1,"column_end":66}},{"value":"/ - it contains NaNs.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":19020,"byte_end":19043,"line_start":52,"line_end":52,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":19044,"byte_end":19047,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [`Rect`]: struct.Rect.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":19048,"byte_end":19078,"line_start":54,"line_end":54,"column_start":1,"column_end":31}},{"value":"/ [`intersection`]: #method.intersection","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":19079,"byte_end":19121,"line_start":55,"line_end":55,"column_start":1,"column_end":43}},{"value":"/ [`is_empty`]: #method.is_empty","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":19122,"byte_end":19156,"line_start":56,"line_end":56,"column_start":1,"column_end":35}},{"value":"/ [`union`]: #method.union","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":19157,"byte_end":19185,"line_start":57,"line_end":57,"column_start":1,"column_end":29}},{"value":"/ [`size`]: #method.size","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":19186,"byte_end":19212,"line_start":58,"line_end":58,"column_start":1,"column_end":27}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":19213,"byte_end":19223,"line_start":59,"line_end":59,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":365},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":19440,"byte_end":19443,"line_start":66,"line_end":66,"column_start":9,"column_end":12},"name":"min","qualname":"::box2d::Box2D::min","value":"point::Point2D<T, U>","parent":{"krate":0,"index":362},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":366},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":19468,"byte_end":19471,"line_start":67,"line_end":67,"column_start":9,"column_end":12},"name":"max","qualname":"::box2d::Box2D::max","value":"point::Point2D<T, U>","parent":{"krate":0,"index":362},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":20319,"byte_end":20322,"line_start":105,"line_end":105,"column_start":18,"column_end":21},"name":"new","qualname":"<Box2D<T, U>>::new","value":"pub const fn new(Point2D<T, U>, Point2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor.\n","sig":null,"attributes":[{"value":"/ Constructor.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":20271,"byte_end":20287,"line_start":103,"line_end":103,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":20292,"byte_end":20301,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":20718,"byte_end":20729,"line_start":119,"line_end":119,"column_start":12,"column_end":23},"name":"is_negative","qualname":"<Box2D<T, U>>::is_negative","value":"pub fn is_negative(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the box has a negative area.","sig":null,"attributes":[{"value":"/ Returns true if the box has a negative area.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":20463,"byte_end":20511,"line_start":114,"line_end":114,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":20516,"byte_end":20519,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ The common interpretation for a negative box is to consider it empty. It can be obtained","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":20524,"byte_end":20616,"line_start":116,"line_end":116,"column_start":5,"column_end":97}},{"value":"/ by calculating the intersection of two boxes that do not intersect.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":20621,"byte_end":20692,"line_start":117,"line_end":117,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":20697,"byte_end":20706,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":20897,"byte_end":20905,"line_start":125,"line_end":125,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Box2D<T, U>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the size is zero, negative or NaN.\n","sig":null,"attributes":[{"value":"/ Returns true if the size is zero, negative or NaN.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":20817,"byte_end":20871,"line_start":123,"line_end":123,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":20876,"byte_end":20885,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":21068,"byte_end":21078,"line_start":131,"line_end":131,"column_start":12,"column_end":22},"name":"intersects","qualname":"<Box2D<T, U>>::intersects","value":"pub fn intersects(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the two boxes intersect.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the two boxes intersect.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":20996,"byte_end":21042,"line_start":129,"line_end":129,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":21047,"byte_end":21056,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":21504,"byte_end":21512,"line_start":142,"line_end":142,"column_start":12,"column_end":20},"name":"contains","qualname":"<Box2D<T, U>>::contains","value":"pub fn contains(&Self, Point2D<T, U>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this box contains the point. Points are considered\n in the box if they are on the front, left or top faces, but outside if they\n are on the back, right or bottom faces.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this box contains the point. Points are considered","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":21274,"byte_end":21346,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ in the box if they are on the front, left or top faces, but outside if they","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":21351,"byte_end":21430,"line_start":139,"line_end":139,"column_start":5,"column_end":84}},{"value":"/ are on the back, right or bottom faces.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":21435,"byte_end":21478,"line_start":140,"line_end":140,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":21483,"byte_end":21492,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":21870,"byte_end":21882,"line_start":150,"line_end":150,"column_start":12,"column_end":24},"name":"contains_box","qualname":"<Box2D<T, U>>::contains_box","value":"pub fn contains_box(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this box contains the interior of the other box. Always\n returns `true` if other is empty, and always returns `false` if other is\n nonempty but this box is empty.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this box contains the interior of the other box. Always","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":21646,"byte_end":21723,"line_start":146,"line_end":146,"column_start":5,"column_end":82}},{"value":"/ returns `true` if other is empty, and always returns `false` if other is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":21728,"byte_end":21804,"line_start":147,"line_end":147,"column_start":5,"column_end":81}},{"value":"/ nonempty but this box is empty.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":21809,"byte_end":21844,"line_start":148,"line_end":148,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":21849,"byte_end":21858,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":22208,"byte_end":22220,"line_start":164,"line_end":164,"column_start":12,"column_end":24},"name":"to_non_empty","qualname":"<Box2D<T, U>>::to_non_empty","value":"pub fn to_non_empty(&Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":22187,"byte_end":22196,"line_start":163,"line_end":163,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":22459,"byte_end":22471,"line_start":174,"line_end":174,"column_start":12,"column_end":24},"name":"intersection","qualname":"<Box2D<T, U>>::intersection","value":"pub fn intersection(&Self, &Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes the intersection of two boxes, returning `None` if the boxes do not intersect.\n","sig":null,"attributes":[{"value":"/ Computes the intersection of two boxes, returning `None` if the boxes do not intersect.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":22342,"byte_end":22433,"line_start":172,"line_end":172,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":22438,"byte_end":22447,"line_start":173,"line_end":173,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":23049,"byte_end":23071,"line_start":191,"line_end":191,"column_start":12,"column_end":34},"name":"intersection_unchecked","qualname":"<Box2D<T, U>>::intersection_unchecked","value":"pub fn intersection_unchecked(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the intersection of two boxes without check whether they do intersect.","sig":null,"attributes":[{"value":"/ Computes the intersection of two boxes without check whether they do intersect.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":22653,"byte_end":22736,"line_start":184,"line_end":184,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":22741,"byte_end":22744,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The result is a negative box if the boxes do not intersect.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":22749,"byte_end":22812,"line_start":186,"line_end":186,"column_start":5,"column_end":68}},{"value":"/ This can be useful for computing the intersection of more than two boxes, as","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":22817,"byte_end":22897,"line_start":187,"line_end":187,"column_start":5,"column_end":85}},{"value":"/ it is possible to chain multiple intersection_unchecked calls and check for","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":22902,"byte_end":22981,"line_start":188,"line_end":188,"column_start":5,"column_end":84}},{"value":"/ empty/negative result at the end.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":22986,"byte_end":23023,"line_start":189,"line_end":189,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":23028,"byte_end":23037,"line_start":190,"line_end":190,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":23331,"byte_end":23336,"line_start":199,"line_end":199,"column_start":12,"column_end":17},"name":"union","qualname":"<Box2D<T, U>>::union","value":"pub fn union(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":23310,"byte_end":23319,"line_start":198,"line_end":198,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":23717,"byte_end":23726,"line_start":213,"line_end":213,"column_start":12,"column_end":21},"name":"translate","qualname":"<Box2D<T, U>>::translate","value":"pub fn translate(&Self, Vector2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the same box, translated by a vector.\n","sig":null,"attributes":[{"value":"/ Returns the same box, translated by a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":23642,"byte_end":23691,"line_start":211,"line_end":211,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":23696,"byte_end":23705,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":23953,"byte_end":23957,"line_start":226,"line_end":226,"column_start":12,"column_end":16},"name":"size","qualname":"<Box2D<T, U>>::size","value":"pub fn size(&Self) -> Size2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":23932,"byte_end":23941,"line_start":225,"line_end":225,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":24055,"byte_end":24060,"line_start":231,"line_end":231,"column_start":12,"column_end":17},"name":"width","qualname":"<Box2D<T, U>>::width","value":"pub fn width(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":24034,"byte_end":24043,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":24139,"byte_end":24145,"line_start":236,"line_end":236,"column_start":12,"column_end":18},"name":"height","qualname":"<Box2D<T, U>>::height","value":"pub fn height(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":24118,"byte_end":24127,"line_start":235,"line_end":235,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":24224,"byte_end":24231,"line_start":241,"line_end":241,"column_start":12,"column_end":19},"name":"to_rect","qualname":"<Box2D<T, U>>::to_rect","value":"pub fn to_rect(&Self) -> Rect<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":24203,"byte_end":24212,"line_start":240,"line_end":240,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":24552,"byte_end":24559,"line_start":256,"line_end":256,"column_start":12,"column_end":19},"name":"inflate","qualname":"<Box2D<T, U>>::inflate","value":"pub fn inflate(&Self, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inflates the box by the specified sizes on each side respectively.\n","sig":null,"attributes":[{"value":"/ Inflates the box by the specified sizes on each side respectively.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":24440,"byte_end":24510,"line_start":253,"line_end":253,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":24515,"byte_end":24524,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":24529,"byte_end":24540,"line_start":255,"line_end":255,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":24995,"byte_end":25004,"line_start":267,"line_end":267,"column_start":12,"column_end":21},"name":"inner_box","qualname":"<Box2D<T, U>>::inner_box","value":"pub fn inner_box(&Self, SideOffsets2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculate the size and position of an inner box.","sig":null,"attributes":[{"value":"/ Calculate the size and position of an inner box.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":24767,"byte_end":24819,"line_start":263,"line_end":263,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":24824,"byte_end":24827,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ Subtracts the side offsets from all sides. The horizontal, vertical","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":24832,"byte_end":24903,"line_start":265,"line_end":265,"column_start":5,"column_end":76}},{"value":"/ and applicate offsets must not be larger than the original side length.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":24908,"byte_end":24983,"line_start":266,"line_end":266,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":25352,"byte_end":25361,"line_start":277,"line_end":277,"column_start":12,"column_end":21},"name":"outer_box","qualname":"<Box2D<T, U>>::outer_box","value":"pub fn outer_box(&Self, SideOffsets2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculate the b and position of an outer box.","sig":null,"attributes":[{"value":"/ Calculate the b and position of an outer box.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":25215,"byte_end":25264,"line_start":274,"line_end":274,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":25269,"byte_end":25272,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Add the offsets to all sides. The expanded box is returned.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":25277,"byte_end":25340,"line_start":276,"line_end":276,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":25718,"byte_end":25727,"line_start":291,"line_end":291,"column_start":12,"column_end":21},"name":"from_size","qualname":"<Box2D<T, U>>::from_size","value":"pub fn from_size(Size2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Box2D of the given size, at offset zero.\n","sig":null,"attributes":[{"value":"/ Creates a Box2D of the given size, at offset zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":25638,"byte_end":25692,"line_start":289,"line_end":289,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":25697,"byte_end":25706,"line_start":290,"line_end":290,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":25976,"byte_end":25987,"line_start":298,"line_end":298,"column_start":12,"column_end":23},"name":"from_points","qualname":"<Box2D<T, U>>::from_points","value":"pub fn from_points<I>(I) -> Self where I: IntoIterator,\nI::Item: Borrow<Point2D<T, U>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest box containing all of the provided points.\n","sig":null,"attributes":[{"value":"/ Returns the smallest box containing all of the provided points.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":25897,"byte_end":25964,"line_start":297,"line_end":297,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":27023,"byte_end":27027,"line_start":340,"line_end":340,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Box2D<T, U>>::lerp","value":"pub fn lerp(&Self, Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between this box and another box.\n","sig":null,"attributes":[{"value":"/ Linearly interpolate between this box and another box.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":26939,"byte_end":26997,"line_start":338,"line_end":338,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":27002,"byte_end":27011,"line_start":339,"line_end":339,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":27246,"byte_end":27252,"line_start":349,"line_end":349,"column_start":12,"column_end":18},"name":"center","qualname":"<Box2D<T, U>>::center","value":"pub fn center(&Self) -> Point2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":27486,"byte_end":27490,"line_start":360,"line_end":360,"column_start":12,"column_end":16},"name":"area","qualname":"<Box2D<T, U>>::area","value":"pub fn area(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":27465,"byte_end":27474,"line_start":359,"line_end":359,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":27682,"byte_end":27686,"line_start":371,"line_end":371,"column_start":12,"column_end":16},"name":"zero","qualname":"<Box2D<T, U>>::zero","value":"pub fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all sides to zero.\n","sig":null,"attributes":[{"value":"/ Constructor, setting all sides to zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":27627,"byte_end":27670,"line_start":370,"line_end":370,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":29535,"byte_end":29545,"line_start":448,"line_end":448,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Box2D<T, U>>::to_untyped","value":"pub fn to_untyped(&Self) -> Box2D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":29455,"byte_end":29509,"line_start":446,"line_end":446,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":29514,"byte_end":29523,"line_start":447,"line_end":447,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":29718,"byte_end":29730,"line_start":454,"line_end":454,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Box2D<T, U>>::from_untyped","value":"pub fn from_untyped(&Box2D<T, UnknownUnit>) -> Box2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":29656,"byte_end":29692,"line_start":452,"line_end":452,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":29697,"byte_end":29706,"line_start":453,"line_end":453,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":29908,"byte_end":29917,"line_start":460,"line_end":460,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Box2D<T, U>>::cast_unit","value":"pub fn cast_unit<V>(&Self) -> Box2D<T, V>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit\n","sig":null,"attributes":[{"value":"/ Cast the unit","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":29865,"byte_end":29882,"line_start":458,"line_end":458,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":29887,"byte_end":29896,"line_start":459,"line_end":459,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":30040,"byte_end":30045,"line_start":465,"line_end":465,"column_start":12,"column_end":17},"name":"scale","qualname":"<Box2D<T, U>>::scale","value":"pub fn scale<S: Copy>(&Self, S, S) -> Self where T: Mul<S, Output = T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":30019,"byte_end":30028,"line_start":464,"line_end":464,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":30703,"byte_end":30707,"line_start":483,"line_end":483,"column_start":12,"column_end":16},"name":"cast","qualname":"<Box2D<T, U>>::cast","value":"pub fn cast<NewT: NumCast>(&Self) -> Box2D<NewT, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":30323,"byte_end":30397,"line_start":477,"line_end":477,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":30402,"byte_end":30405,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":30410,"byte_end":30497,"line_start":479,"line_end":479,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":30502,"byte_end":30590,"line_start":480,"line_end":480,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using round(), round_in or round_out() before casting.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":30595,"byte_end":30677,"line_start":481,"line_end":481,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":30682,"byte_end":30691,"line_start":482,"line_end":482,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":31189,"byte_end":31197,"line_start":492,"line_end":492,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Box2D<T, U>>::try_cast","value":"pub fn try_cast<NewT: NumCast>(&Self) -> Option<Box2D<NewT, U>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":30814,"byte_end":30897,"line_start":487,"line_end":487,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":30902,"byte_end":30905,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":30910,"byte_end":30997,"line_start":489,"line_end":489,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":31002,"byte_end":31090,"line_start":490,"line_end":490,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using round(), round_in or round_out() before casting.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":31095,"byte_end":31177,"line_start":491,"line_end":491,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":31509,"byte_end":31515,"line_start":503,"line_end":503,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<Box2D<T, U>>::to_f32","value":"pub fn to_f32(&Self) -> Box2D<f32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` box.\n","sig":null,"attributes":[{"value":"/ Cast into an `f32` box.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":31456,"byte_end":31483,"line_start":501,"line_end":501,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":31488,"byte_end":31497,"line_start":502,"line_end":502,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":31626,"byte_end":31632,"line_start":509,"line_end":509,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<Box2D<T, U>>::to_f64","value":"pub fn to_f64(&Self) -> Box2D<f64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` box.\n","sig":null,"attributes":[{"value":"/ Cast into an `f64` box.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":31573,"byte_end":31600,"line_start":507,"line_end":507,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":31605,"byte_end":31614,"line_start":508,"line_end":508,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":31989,"byte_end":31997,"line_start":519,"line_end":519,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<Box2D<T, U>>::to_usize","value":"pub fn to_usize(&Self) -> Box2D<usize, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `usize` box, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `usize` box, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":31690,"byte_end":31747,"line_start":513,"line_end":513,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":31752,"byte_end":31755,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point boxes, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":31760,"byte_end":31835,"line_start":515,"line_end":515,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":31840,"byte_end":31915,"line_start":516,"line_end":516,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":31920,"byte_end":31963,"line_start":517,"line_end":517,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":31968,"byte_end":31977,"line_start":518,"line_end":518,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":32354,"byte_end":32360,"line_start":529,"line_end":529,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<Box2D<T, U>>::to_u32","value":"pub fn to_u32(&Self) -> Box2D<u32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` box, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `u32` box, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":32057,"byte_end":32112,"line_start":523,"line_end":523,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":32117,"byte_end":32120,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point boxes, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":32125,"byte_end":32200,"line_start":525,"line_end":525,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":32205,"byte_end":32280,"line_start":526,"line_end":526,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":32285,"byte_end":32328,"line_start":527,"line_end":527,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":32333,"byte_end":32342,"line_start":528,"line_end":528,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":32715,"byte_end":32721,"line_start":539,"line_end":539,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<Box2D<T, U>>::to_i32","value":"pub fn to_i32(&Self) -> Box2D<i32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i32` box, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i32` box, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":32418,"byte_end":32473,"line_start":533,"line_end":533,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":32478,"byte_end":32481,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point boxes, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":32486,"byte_end":32561,"line_start":535,"line_end":535,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":32566,"byte_end":32641,"line_start":536,"line_end":536,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":32646,"byte_end":32689,"line_start":537,"line_end":537,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":32694,"byte_end":32703,"line_start":538,"line_end":538,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":33076,"byte_end":33082,"line_start":549,"line_end":549,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<Box2D<T, U>>::to_i64","value":"pub fn to_i64(&Self) -> Box2D<i64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i64` box, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i64` box, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":32779,"byte_end":32834,"line_start":543,"line_end":543,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":32839,"byte_end":32842,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point boxes, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":32847,"byte_end":32922,"line_start":545,"line_end":545,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":32927,"byte_end":33002,"line_start":546,"line_end":546,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":33007,"byte_end":33050,"line_start":547,"line_end":547,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":33055,"byte_end":33064,"line_start":548,"line_end":548,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":33731,"byte_end":33736,"line_start":568,"line_end":568,"column_start":12,"column_end":17},"name":"round","qualname":"<Box2D<T, U>>::round","value":"pub fn round(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a box with edges rounded to integer coordinates, such that\n the returned box has the same set of pixel centers as the original\n one.\n Values equal to 0.5 round up.\n Suitable for most places where integral device coordinates\n are needed, but note that any translation should be applied first to\n avoid pixel rounding errors.\n Note that this is *not* rounding to nearest integer if the values are negative.\n They are always rounding as floor(n + 0.5).\n","sig":null,"attributes":[{"value":"/ Return a box with edges rounded to integer coordinates, such that","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":33187,"byte_end":33256,"line_start":558,"line_end":558,"column_start":5,"column_end":74}},{"value":"/ the returned box has the same set of pixel centers as the original","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":33261,"byte_end":33331,"line_start":559,"line_end":559,"column_start":5,"column_end":75}},{"value":"/ one.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":33336,"byte_end":33344,"line_start":560,"line_end":560,"column_start":5,"column_end":13}},{"value":"/ Values equal to 0.5 round up.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":33349,"byte_end":33382,"line_start":561,"line_end":561,"column_start":5,"column_end":38}},{"value":"/ Suitable for most places where integral device coordinates","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":33387,"byte_end":33449,"line_start":562,"line_end":562,"column_start":5,"column_end":67}},{"value":"/ are needed, but note that any translation should be applied first to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":33454,"byte_end":33526,"line_start":563,"line_end":563,"column_start":5,"column_end":77}},{"value":"/ avoid pixel rounding errors.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":33531,"byte_end":33563,"line_start":564,"line_end":564,"column_start":5,"column_end":37}},{"value":"/ Note that this is *not* rounding to nearest integer if the values are negative.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":33568,"byte_end":33651,"line_start":565,"line_end":565,"column_start":5,"column_end":88}},{"value":"/ They are always rounding as floor(n + 0.5).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":33656,"byte_end":33703,"line_start":566,"line_end":566,"column_start":5,"column_end":52}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":33708,"byte_end":33719,"line_start":567,"line_end":567,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":34030,"byte_end":34038,"line_start":580,"line_end":580,"column_start":12,"column_end":20},"name":"round_in","qualname":"<Box2D<T, U>>::round_in","value":"pub fn round_in(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a box with faces/edges rounded to integer coordinates, such that\n the original box contains the resulting box.\n","sig":null,"attributes":[{"value":"/ Return a box with faces/edges rounded to integer coordinates, such that","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":33874,"byte_end":33949,"line_start":577,"line_end":577,"column_start":5,"column_end":80}},{"value":"/ the original box contains the resulting box.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":33954,"byte_end":34002,"line_start":578,"line_end":578,"column_start":5,"column_end":53}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":34007,"byte_end":34018,"line_start":579,"line_end":579,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":34328,"byte_end":34337,"line_start":589,"line_end":589,"column_start":12,"column_end":21},"name":"round_out","qualname":"<Box2D<T, U>>::round_out","value":"pub fn round_out(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a box with faces/edges rounded to integer coordinates, such that\n the original box is contained in the resulting box.\n","sig":null,"attributes":[{"value":"/ Return a box with faces/edges rounded to integer coordinates, such that","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":34165,"byte_end":34240,"line_start":586,"line_end":586,"column_start":5,"column_end":80}},{"value":"/ the original box is contained in the resulting box.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":34245,"byte_end":34300,"line_start":587,"line_end":587,"column_start":5,"column_end":60}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":34305,"byte_end":34316,"line_start":588,"line_end":588,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":587},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":42798,"byte_end":42803,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"Box3D","qualname":"::box3d::Box3D","value":"Box3D { min, max }","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":591}],"decl_id":null,"docs":" An axis aligned 3D box represented by its minimum and maximum coordinates.\n","sig":null,"attributes":[{"value":"/ An axis aligned 3D box represented by its minimum and maximum coordinates.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":42514,"byte_end":42592,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":42593,"byte_end":42603,"line_start":29,"line_end":29,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":590},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":42820,"byte_end":42823,"line_start":36,"line_end":36,"column_start":9,"column_end":12},"name":"min","qualname":"::box3d::Box3D::min","value":"point::Point3D<T, U>","parent":{"krate":0,"index":587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":591},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":42848,"byte_end":42851,"line_start":37,"line_end":37,"column_start":9,"column_end":12},"name":"max","qualname":"::box3d::Box3D::max","value":"point::Point3D<T, U>","parent":{"krate":0,"index":587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":43699,"byte_end":43702,"line_start":75,"line_end":75,"column_start":18,"column_end":21},"name":"new","qualname":"<Box3D<T, U>>::new","value":"pub const fn new(Point3D<T, U>, Point3D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor.\n","sig":null,"attributes":[{"value":"/ Constructor.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":43651,"byte_end":43667,"line_start":73,"line_end":73,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":43672,"byte_end":43681,"line_start":74,"line_end":74,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":44100,"byte_end":44111,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"is_negative","qualname":"<Box3D<T, U>>::is_negative","value":"pub fn is_negative(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the box has a negative volume.","sig":null,"attributes":[{"value":"/ Returns true if the box has a negative volume.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":43843,"byte_end":43893,"line_start":84,"line_end":84,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":43898,"byte_end":43901,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ The common interpretation for a negative box is to consider it empty. It can be obtained","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":43906,"byte_end":43998,"line_start":86,"line_end":86,"column_start":5,"column_end":97}},{"value":"/ by calculating the intersection of two boxes that do not intersect.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":44003,"byte_end":44074,"line_start":87,"line_end":87,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":44079,"byte_end":44088,"line_start":88,"line_end":88,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":44306,"byte_end":44314,"line_start":95,"line_end":95,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Box3D<T, U>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the size is zero, negative or NaN.\n","sig":null,"attributes":[{"value":"/ Returns true if the size is zero, negative or NaN.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":44226,"byte_end":44280,"line_start":93,"line_end":93,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":44285,"byte_end":44294,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":44453,"byte_end":44463,"line_start":100,"line_end":100,"column_start":12,"column_end":22},"name":"intersects","qualname":"<Box3D<T, U>>::intersects","value":"pub fn intersects(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":44432,"byte_end":44441,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":44973,"byte_end":44981,"line_start":113,"line_end":113,"column_start":12,"column_end":20},"name":"contains","qualname":"<Box3D<T, U>>::contains","value":"pub fn contains(&Self, Point3D<T, U>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this box3d contains the point. Points are considered\n in the box3d if they are on the front, left or top faces, but outside if they\n are on the back, right or bottom faces.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this box3d contains the point. Points are considered","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":44739,"byte_end":44813,"line_start":109,"line_end":109,"column_start":5,"column_end":79}},{"value":"/ in the box3d if they are on the front, left or top faces, but outside if they","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":44818,"byte_end":44899,"line_start":110,"line_end":110,"column_start":5,"column_end":86}},{"value":"/ are on the back, right or bottom faces.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":44904,"byte_end":44947,"line_start":111,"line_end":111,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":44952,"byte_end":44961,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":45474,"byte_end":45486,"line_start":126,"line_end":126,"column_start":12,"column_end":24},"name":"contains_box","qualname":"<Box3D<T, U>>::contains_box","value":"pub fn contains_box(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this box3d contains the interior of the other box3d. Always\n returns `true` if other is empty, and always returns `false` if other is\n nonempty but this box3d is empty.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this box3d contains the interior of the other box3d. Always","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":45244,"byte_end":45325,"line_start":122,"line_end":122,"column_start":5,"column_end":86}},{"value":"/ returns `true` if other is empty, and always returns `false` if other is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":45330,"byte_end":45406,"line_start":123,"line_end":123,"column_start":5,"column_end":81}},{"value":"/ nonempty but this box3d is empty.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":45411,"byte_end":45448,"line_start":124,"line_end":124,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":45453,"byte_end":45462,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":45902,"byte_end":45914,"line_start":142,"line_end":142,"column_start":12,"column_end":24},"name":"to_non_empty","qualname":"<Box3D<T, U>>::to_non_empty","value":"pub fn to_non_empty(&Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":45881,"byte_end":45890,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":46057,"byte_end":46069,"line_start":151,"line_end":151,"column_start":12,"column_end":24},"name":"intersection","qualname":"<Box3D<T, U>>::intersection","value":"pub fn intersection(&Self, &Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":46036,"byte_end":46045,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":46258,"byte_end":46280,"line_start":161,"line_end":161,"column_start":12,"column_end":34},"name":"intersection_unchecked","qualname":"<Box3D<T, U>>::intersection_unchecked","value":"pub fn intersection_unchecked(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":46837,"byte_end":46842,"line_start":179,"line_end":179,"column_start":12,"column_end":17},"name":"union","qualname":"<Box3D<T, U>>::union","value":"pub fn union(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest box containing both of the provided boxes.\n","sig":null,"attributes":[{"value":"/ Returns the smallest box containing both of the provided boxes.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":46744,"byte_end":46811,"line_start":177,"line_end":177,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":46816,"byte_end":46825,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":637},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":47433,"byte_end":47442,"line_start":202,"line_end":202,"column_start":12,"column_end":21},"name":"translate","qualname":"<Box3D<T, U>>::translate","value":"pub fn translate(&Self, Vector3D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the same box3d, translated by a vector.\n","sig":null,"attributes":[{"value":"/ Returns the same box3d, translated by a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":47340,"byte_end":47391,"line_start":199,"line_end":199,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":47396,"byte_end":47405,"line_start":200,"line_end":200,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":47410,"byte_end":47421,"line_start":201,"line_end":201,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":47669,"byte_end":47673,"line_start":215,"line_end":215,"column_start":12,"column_end":16},"name":"size","qualname":"<Box3D<T, U>>::size","value":"pub fn size(&Self) -> Size3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":47648,"byte_end":47657,"line_start":214,"line_end":214,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":47873,"byte_end":47878,"line_start":224,"line_end":224,"column_start":12,"column_end":17},"name":"width","qualname":"<Box3D<T, U>>::width","value":"pub fn width(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":47852,"byte_end":47861,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":47957,"byte_end":47963,"line_start":229,"line_end":229,"column_start":12,"column_end":18},"name":"height","qualname":"<Box3D<T, U>>::height","value":"pub fn height(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":47936,"byte_end":47945,"line_start":228,"line_end":228,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":48042,"byte_end":48047,"line_start":234,"line_end":234,"column_start":12,"column_end":17},"name":"depth","qualname":"<Box3D<T, U>>::depth","value":"pub fn depth(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":48021,"byte_end":48030,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":48305,"byte_end":48312,"line_start":246,"line_end":246,"column_start":12,"column_end":19},"name":"inflate","qualname":"<Box3D<T, U>>::inflate","value":"pub fn inflate(&Self, T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inflates the box by the specified sizes on each side respectively.\n","sig":null,"attributes":[{"value":"/ Inflates the box by the specified sizes on each side respectively.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":48193,"byte_end":48263,"line_start":243,"line_end":243,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":48268,"byte_end":48277,"line_start":244,"line_end":244,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":48282,"byte_end":48293,"line_start":245,"line_end":245,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":48722,"byte_end":48731,"line_start":260,"line_end":260,"column_start":12,"column_end":21},"name":"from_size","qualname":"<Box3D<T, U>>::from_size","value":"pub fn from_size(Size3D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Box3D of the given size, at offset zero.\n","sig":null,"attributes":[{"value":"/ Creates a Box3D of the given size, at offset zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":48642,"byte_end":48696,"line_start":258,"line_end":258,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":48701,"byte_end":48710,"line_start":259,"line_end":259,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":48980,"byte_end":48991,"line_start":267,"line_end":267,"column_start":12,"column_end":23},"name":"from_points","qualname":"<Box3D<T, U>>::from_points","value":"pub fn from_points<I>(I) -> Self where I: IntoIterator,\nI::Item: Borrow<Point3D<T, U>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest box containing all of the provided points.\n","sig":null,"attributes":[{"value":"/ Returns the smallest box containing all of the provided points.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":48901,"byte_end":48968,"line_start":266,"line_end":266,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":50216,"byte_end":50220,"line_start":315,"line_end":315,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Box3D<T, U>>::lerp","value":"pub fn lerp(&Self, Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between this box3d and another box3d.\n","sig":null,"attributes":[{"value":"/ Linearly interpolate between this box3d and another box3d.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":50128,"byte_end":50190,"line_start":313,"line_end":313,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":50195,"byte_end":50204,"line_start":314,"line_end":314,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":50439,"byte_end":50445,"line_start":324,"line_end":324,"column_start":12,"column_end":18},"name":"center","qualname":"<Box3D<T, U>>::center","value":"pub fn center(&Self) -> Point3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":50679,"byte_end":50685,"line_start":335,"line_end":335,"column_start":12,"column_end":18},"name":"volume","qualname":"<Box3D<T, U>>::volume","value":"pub fn volume(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":50658,"byte_end":50667,"line_start":334,"line_end":334,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":50810,"byte_end":50817,"line_start":341,"line_end":341,"column_start":12,"column_end":19},"name":"xy_area","qualname":"<Box3D<T, U>>::xy_area","value":"pub fn xy_area(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":50789,"byte_end":50798,"line_start":340,"line_end":340,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":50929,"byte_end":50936,"line_start":347,"line_end":347,"column_start":12,"column_end":19},"name":"yz_area","qualname":"<Box3D<T, U>>::yz_area","value":"pub fn yz_area(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":50908,"byte_end":50917,"line_start":346,"line_end":346,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":51048,"byte_end":51055,"line_start":353,"line_end":353,"column_start":12,"column_end":19},"name":"xz_area","qualname":"<Box3D<T, U>>::xz_area","value":"pub fn xz_area(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":51027,"byte_end":51036,"line_start":352,"line_end":352,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":51246,"byte_end":51250,"line_start":364,"line_end":364,"column_start":12,"column_end":16},"name":"zero","qualname":"<Box3D<T, U>>::zero","value":"pub fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all sides to zero.\n","sig":null,"attributes":[{"value":"/ Constructor, setting all sides to zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":51191,"byte_end":51234,"line_start":363,"line_end":363,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":53175,"byte_end":53185,"line_start":443,"line_end":443,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Box3D<T, U>>::to_untyped","value":"pub fn to_untyped(&Self) -> Box3D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":53095,"byte_end":53149,"line_start":441,"line_end":441,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":53154,"byte_end":53163,"line_start":442,"line_end":442,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":53399,"byte_end":53411,"line_start":452,"line_end":452,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Box3D<T, U>>::from_untyped","value":"pub fn from_untyped(&Box3D<T, UnknownUnit>) -> Box3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":53337,"byte_end":53373,"line_start":450,"line_end":450,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":53378,"byte_end":53387,"line_start":451,"line_end":451,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":53630,"byte_end":53639,"line_start":461,"line_end":461,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Box3D<T, U>>::cast_unit","value":"pub fn cast_unit<V>(&Self) -> Box3D<T, V>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit\n","sig":null,"attributes":[{"value":"/ Cast the unit","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":53587,"byte_end":53604,"line_start":459,"line_end":459,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":53609,"byte_end":53618,"line_start":460,"line_end":460,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":53762,"byte_end":53767,"line_start":466,"line_end":466,"column_start":12,"column_end":17},"name":"scale","qualname":"<Box3D<T, U>>::scale","value":"pub fn scale<S: Copy>(&Self, S, S, S) -> Self where T: Mul<S, Output = T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":53741,"byte_end":53750,"line_start":465,"line_end":465,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":54469,"byte_end":54473,"line_start":484,"line_end":484,"column_start":12,"column_end":16},"name":"cast","qualname":"<Box3D<T, U>>::cast","value":"pub fn cast<NewT: NumCast>(&Self) -> Box3D<NewT, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":54089,"byte_end":54163,"line_start":478,"line_end":478,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":54168,"byte_end":54171,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":54176,"byte_end":54263,"line_start":480,"line_end":480,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":54268,"byte_end":54356,"line_start":481,"line_end":481,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using round(), round_in or round_out() before casting.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":54361,"byte_end":54443,"line_start":482,"line_end":482,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":54448,"byte_end":54457,"line_start":483,"line_end":483,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":54955,"byte_end":54963,"line_start":493,"line_end":493,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Box3D<T, U>>::try_cast","value":"pub fn try_cast<NewT: NumCast>(&Self) -> Option<Box3D<NewT, U>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":54580,"byte_end":54663,"line_start":488,"line_end":488,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":54668,"byte_end":54671,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":54676,"byte_end":54763,"line_start":490,"line_end":490,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":54768,"byte_end":54856,"line_start":491,"line_end":491,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using round(), round_in or round_out() before casting.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":54861,"byte_end":54943,"line_start":492,"line_end":492,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":55277,"byte_end":55283,"line_start":504,"line_end":504,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<Box3D<T, U>>::to_f32","value":"pub fn to_f32(&Self) -> Box3D<f32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` box3d.\n","sig":null,"attributes":[{"value":"/ Cast into an `f32` box3d.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":55222,"byte_end":55251,"line_start":502,"line_end":502,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":55256,"byte_end":55265,"line_start":503,"line_end":503,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":55396,"byte_end":55402,"line_start":510,"line_end":510,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<Box3D<T, U>>::to_f64","value":"pub fn to_f64(&Self) -> Box3D<f64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` box3d.\n","sig":null,"attributes":[{"value":"/ Cast into an `f64` box3d.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":55341,"byte_end":55370,"line_start":508,"line_end":508,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":55375,"byte_end":55384,"line_start":509,"line_end":509,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":55763,"byte_end":55771,"line_start":520,"line_end":520,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<Box3D<T, U>>::to_usize","value":"pub fn to_usize(&Self) -> Box3D<usize, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `usize` box3d, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `usize` box3d, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":55460,"byte_end":55519,"line_start":514,"line_end":514,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":55524,"byte_end":55527,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point cuboids, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":55532,"byte_end":55609,"line_start":516,"line_end":516,"column_start":5,"column_end":82}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":55614,"byte_end":55689,"line_start":517,"line_end":517,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":55694,"byte_end":55737,"line_start":518,"line_end":518,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":55742,"byte_end":55751,"line_start":519,"line_end":519,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":56132,"byte_end":56138,"line_start":530,"line_end":530,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<Box3D<T, U>>::to_u32","value":"pub fn to_u32(&Self) -> Box3D<u32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` box3d, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `u32` box3d, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":55831,"byte_end":55888,"line_start":524,"line_end":524,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":55893,"byte_end":55896,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point cuboids, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":55901,"byte_end":55978,"line_start":526,"line_end":526,"column_start":5,"column_end":82}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":55983,"byte_end":56058,"line_start":527,"line_end":527,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":56063,"byte_end":56106,"line_start":528,"line_end":528,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":56111,"byte_end":56120,"line_start":529,"line_end":529,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":56497,"byte_end":56503,"line_start":540,"line_end":540,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<Box3D<T, U>>::to_i32","value":"pub fn to_i32(&Self) -> Box3D<i32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i32` box3d, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i32` box3d, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":56196,"byte_end":56253,"line_start":534,"line_end":534,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":56258,"byte_end":56261,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point cuboids, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":56266,"byte_end":56343,"line_start":536,"line_end":536,"column_start":5,"column_end":82}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":56348,"byte_end":56423,"line_start":537,"line_end":537,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":56428,"byte_end":56471,"line_start":538,"line_end":538,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":56476,"byte_end":56485,"line_start":539,"line_end":539,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":56862,"byte_end":56868,"line_start":550,"line_end":550,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<Box3D<T, U>>::to_i64","value":"pub fn to_i64(&Self) -> Box3D<i64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i64` box3d, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i64` box3d, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":56561,"byte_end":56618,"line_start":544,"line_end":544,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":56623,"byte_end":56626,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point cuboids, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":56631,"byte_end":56708,"line_start":546,"line_end":546,"column_start":5,"column_end":82}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":56713,"byte_end":56788,"line_start":547,"line_end":547,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":56793,"byte_end":56836,"line_start":548,"line_end":548,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":56841,"byte_end":56850,"line_start":549,"line_end":549,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":57521,"byte_end":57526,"line_start":569,"line_end":569,"column_start":12,"column_end":17},"name":"round","qualname":"<Box3D<T, U>>::round","value":"pub fn round(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a box3d with edges rounded to integer coordinates, such that\n the returned box3d has the same set of pixel centers as the original\n one.\n Values equal to 0.5 round up.\n Suitable for most places where integral device coordinates\n are needed, but note that any translation should be applied first to\n avoid pixel rounding errors.\n Note that this is *not* rounding to nearest integer if the values are negative.\n They are always rounding as floor(n + 0.5).\n","sig":null,"attributes":[{"value":"/ Return a box3d with edges rounded to integer coordinates, such that","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":56973,"byte_end":57044,"line_start":559,"line_end":559,"column_start":5,"column_end":76}},{"value":"/ the returned box3d has the same set of pixel centers as the original","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":57049,"byte_end":57121,"line_start":560,"line_end":560,"column_start":5,"column_end":77}},{"value":"/ one.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":57126,"byte_end":57134,"line_start":561,"line_end":561,"column_start":5,"column_end":13}},{"value":"/ Values equal to 0.5 round up.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":57139,"byte_end":57172,"line_start":562,"line_end":562,"column_start":5,"column_end":38}},{"value":"/ Suitable for most places where integral device coordinates","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":57177,"byte_end":57239,"line_start":563,"line_end":563,"column_start":5,"column_end":67}},{"value":"/ are needed, but note that any translation should be applied first to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":57244,"byte_end":57316,"line_start":564,"line_end":564,"column_start":5,"column_end":77}},{"value":"/ avoid pixel rounding errors.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":57321,"byte_end":57353,"line_start":565,"line_end":565,"column_start":5,"column_end":37}},{"value":"/ Note that this is *not* rounding to nearest integer if the values are negative.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":57358,"byte_end":57441,"line_start":566,"line_end":566,"column_start":5,"column_end":88}},{"value":"/ They are always rounding as floor(n + 0.5).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":57446,"byte_end":57493,"line_start":567,"line_end":567,"column_start":5,"column_end":52}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":57498,"byte_end":57509,"line_start":568,"line_end":568,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":57826,"byte_end":57834,"line_start":581,"line_end":581,"column_start":12,"column_end":20},"name":"round_in","qualname":"<Box3D<T, U>>::round_in","value":"pub fn round_in(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a box3d with faces/edges rounded to integer coordinates, such that\n the original box3d contains the resulting box3d.\n","sig":null,"attributes":[{"value":"/ Return a box3d with faces/edges rounded to integer coordinates, such that","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":57664,"byte_end":57741,"line_start":578,"line_end":578,"column_start":5,"column_end":82}},{"value":"/ the original box3d contains the resulting box3d.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":57746,"byte_end":57798,"line_start":579,"line_end":579,"column_start":5,"column_end":57}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":57803,"byte_end":57814,"line_start":580,"line_end":580,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":58127,"byte_end":58136,"line_start":591,"line_end":591,"column_start":12,"column_end":21},"name":"round_out","qualname":"<Box3D<T, U>>::round_out","value":"pub fn round_out(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a box3d with faces/edges rounded to integer coordinates, such that\n the original box3d is contained in the resulting box3d.\n","sig":null,"attributes":[{"value":"/ Return a box3d with faces/edges rounded to integer coordinates, such that","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":57958,"byte_end":58035,"line_start":588,"line_end":588,"column_start":5,"column_end":82}},{"value":"/ the original box3d is contained in the resulting box3d.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":58040,"byte_end":58099,"line_start":589,"line_end":589,"column_start":5,"column_end":64}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":58104,"byte_end":58115,"line_start":590,"line_end":590,"column_start":5,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":747},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":58511,"byte_end":58516,"line_start":609,"line_end":609,"column_start":8,"column_end":13},"name":"box3d","qualname":"::box3d::box3d","value":"pub fn box3d<T: Copy, U>(T, T, T, T, T, T) -> Box3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `Box3D::new(Point3D::new(x1, y1, z1), Point3D::new(x2, y2, z2))`.\n","sig":null,"attributes":[{"value":"/ Shorthand for `Box3D::new(Point3D::new(x1, y1, z1), Point3D::new(x2, y2, z2))`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":58420,"byte_end":58503,"line_start":608,"line_end":608,"column_start":1,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":791},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":68371,"byte_end":68388,"line_start":25,"line_end":25,"column_start":12,"column_end":29},"name":"HomogeneousVector","qualname":"::homogen::HomogeneousVector","value":"HomogeneousVector { x, y, z, w, _unit }","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798}],"decl_id":null,"docs":" Homogeneous vector in 3D space.\n","sig":null,"attributes":[{"value":"/ Homogeneous vector in 3D space.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":68313,"byte_end":68348,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":68349,"byte_end":68359,"line_start":24,"line_end":24,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":794},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":68405,"byte_end":68406,"line_start":26,"line_end":26,"column_start":9,"column_end":10},"name":"x","qualname":"::homogen::HomogeneousVector::x","value":"T","parent":{"krate":0,"index":791},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":795},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":68419,"byte_end":68420,"line_start":27,"line_end":27,"column_start":9,"column_end":10},"name":"y","qualname":"::homogen::HomogeneousVector::y","value":"T","parent":{"krate":0,"index":791},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":796},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":68433,"byte_end":68434,"line_start":28,"line_end":28,"column_start":9,"column_end":10},"name":"z","qualname":"::homogen::HomogeneousVector::z","value":"T","parent":{"krate":0,"index":791},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":797},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":68447,"byte_end":68448,"line_start":29,"line_end":29,"column_start":9,"column_end":10},"name":"w","qualname":"::homogen::HomogeneousVector::w","value":"T","parent":{"krate":0,"index":791},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":798},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":68480,"byte_end":68485,"line_start":31,"line_end":31,"column_start":9,"column_end":14},"name":"_unit","qualname":"::homogen::HomogeneousVector::_unit","value":"core::marker::PhantomData<U>","parent":{"krate":0,"index":791},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":70239,"byte_end":70242,"line_start":107,"line_end":107,"column_start":18,"column_end":21},"name":"new","qualname":"<HomogeneousVector<T, U>>::new","value":"pub const fn new(T, T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar values directly.\n","sig":null,"attributes":[{"value":"/ Constructor taking scalar values directly.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":70161,"byte_end":70207,"line_start":105,"line_end":105,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":70212,"byte_end":70221,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":70644,"byte_end":70654,"line_start":123,"line_end":123,"column_start":12,"column_end":22},"name":"to_point2d","qualname":"<HomogeneousVector<T, U>>::to_point2d","value":"pub fn to_point2d(Self) -> Option<Point2D<T, U>>","parent":null,"children":[],"decl_id":null,"docs":" Convert into Cartesian 2D point.","sig":null,"attributes":[{"value":"/ Convert into Cartesian 2D point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":70504,"byte_end":70540,"line_start":119,"line_end":119,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":70545,"byte_end":70548,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Returns None if the point is on or behind the W=0 hemisphere.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":70553,"byte_end":70618,"line_start":121,"line_end":121,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":70623,"byte_end":70632,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":70980,"byte_end":70990,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"to_point3d","qualname":"<HomogeneousVector<T, U>>::to_point3d","value":"pub fn to_point3d(Self) -> Option<Point3D<T, U>>","parent":null,"children":[],"decl_id":null,"docs":" Convert into Cartesian 3D point.","sig":null,"attributes":[{"value":"/ Convert into Cartesian 3D point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":70840,"byte_end":70876,"line_start":131,"line_end":131,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":70881,"byte_end":70884,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Returns None if the point is on or behind the W=0 hemisphere.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":70889,"byte_end":70954,"line_start":133,"line_end":133,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":70959,"byte_end":70968,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":922},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":74725,"byte_end":74731,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"Length","qualname":"::length::Length","value":"","parent":null,"children":[],"decl_id":null,"docs":" A one-dimensional distance, with value represented by `T` and unit of measurement `Unit`.","sig":null,"attributes":[{"value":"/ A one-dimensional distance, with value represented by `T` and unit of measurement `Unit`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":74037,"byte_end":74130,"line_start":28,"line_end":28,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":74131,"byte_end":74134,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ `T` can be any numeric type, for example a primitive type like `u64` or `f32`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":74135,"byte_end":74217,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":74218,"byte_end":74221,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ `Unit` is not used in the representation of a `Length` value. It is used only at compile time","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":74222,"byte_end":74319,"line_start":32,"line_end":32,"column_start":1,"column_end":98}},{"value":"/ to ensure that a `Length` stored with one unit is converted explicitly before being used in an","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":74320,"byte_end":74418,"line_start":33,"line_end":33,"column_start":1,"column_end":99}},{"value":"/ expression that requires a different unit.  It may be a type without values, such as an empty","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":74419,"byte_end":74516,"line_start":34,"line_end":34,"column_start":1,"column_end":98}},{"value":"/ enum.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":74517,"byte_end":74526,"line_start":35,"line_end":35,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":74527,"byte_end":74530,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ You can multiply a `Length` by a `scale::Scale` to convert it from one unit to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":74531,"byte_end":74613,"line_start":37,"line_end":37,"column_start":1,"column_end":83}},{"value":"/ another. See the [`Scale`] docs for an example.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":74614,"byte_end":74665,"line_start":38,"line_end":38,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":74666,"byte_end":74669,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`Scale`]: struct.Scale.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":74670,"byte_end":74702,"line_start":40,"line_end":40,"column_start":1,"column_end":33}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":74703,"byte_end":74713,"line_start":41,"line_end":41,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":926},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":74741,"byte_end":74746,"line_start":42,"line_end":42,"column_start":28,"column_end":33},"name":"0","qualname":"::length::Length::0","value":"T","parent":{"krate":0,"index":922},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":927},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":74763,"byte_end":74784,"line_start":42,"line_end":42,"column_start":50,"column_end":71},"name":"1","qualname":"::length::Length::1","value":"core::marker::PhantomData<Unit>","parent":{"krate":0,"index":922},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":75610,"byte_end":75613,"line_start":81,"line_end":81,"column_start":18,"column_end":21},"name":"new","qualname":"<Length<T, U>>::new","value":"pub const fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Associate a value with a unit of measure.\n","sig":null,"attributes":[{"value":"/ Associate a value with a unit of measure.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":75533,"byte_end":75578,"line_start":79,"line_end":79,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":75583,"byte_end":75592,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":75768,"byte_end":75771,"line_start":88,"line_end":88,"column_start":12,"column_end":15},"name":"get","qualname":"<Length<T, U>>::get","value":"pub fn get(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unpack the underlying value from the wrapper.\n","sig":null,"attributes":[{"value":"/ Unpack the underlying value from the wrapper.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":75707,"byte_end":75756,"line_start":87,"line_end":87,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":75854,"byte_end":75863,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Length<T, U>>::cast_unit","value":"pub fn cast_unit<V>(Self) -> Length<T, V>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit\n","sig":null,"attributes":[{"value":"/ Cast the unit","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":75811,"byte_end":75828,"line_start":92,"line_end":92,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":75833,"byte_end":75842,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":76507,"byte_end":76511,"line_start":115,"line_end":115,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Length<T, U>>::lerp","value":"pub fn lerp(Self, Self, T) -> Self where T: One + Sub<Output = T> + Mul<Output\n= T> + Add<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between this length and another length.","sig":null,"attributes":[{"value":"/ Linearly interpolate between this length and another length.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":75930,"byte_end":75994,"line_start":98,"line_end":98,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":75999,"byte_end":76002,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":76007,"byte_end":76020,"line_start":100,"line_end":100,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":76025,"byte_end":76028,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":76033,"byte_end":76044,"line_start":102,"line_end":102,"column_start":5,"column_end":16}},{"value":"/ use euclid::default::Length;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":76049,"byte_end":76081,"line_start":103,"line_end":103,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":76086,"byte_end":76089,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ let from = Length::new(0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":76094,"byte_end":76126,"line_start":105,"line_end":105,"column_start":5,"column_end":37}},{"value":"/ let to = Length::new(8.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":76131,"byte_end":76161,"line_start":106,"line_end":106,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":76166,"byte_end":76169,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from.lerp(to, -1.0), Length::new(-8.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":76174,"byte_end":76229,"line_start":108,"line_end":108,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(from.lerp(to,  0.0), Length::new( 0.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":76234,"byte_end":76289,"line_start":109,"line_end":109,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(from.lerp(to,  0.5), Length::new( 4.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":76294,"byte_end":76349,"line_start":110,"line_end":110,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(from.lerp(to,  1.0), Length::new( 8.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":76354,"byte_end":76409,"line_start":111,"line_end":111,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(from.lerp(to,  2.0), Length::new(16.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":76414,"byte_end":76469,"line_start":112,"line_end":112,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":76474,"byte_end":76481,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":76486,"byte_end":76495,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":76867,"byte_end":76870,"line_start":127,"line_end":127,"column_start":12,"column_end":15},"name":"min","qualname":"<Length<T, U>>::min","value":"pub fn min(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns minimum between this length and another length.\n","sig":null,"attributes":[{"value":"/ Returns minimum between this length and another length.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":76782,"byte_end":76841,"line_start":125,"line_end":125,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":76846,"byte_end":76855,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":77021,"byte_end":77024,"line_start":133,"line_end":133,"column_start":12,"column_end":15},"name":"max","qualname":"<Length<T, U>>::max","value":"pub fn max(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns maximum between this length and another length.\n","sig":null,"attributes":[{"value":"/ Returns maximum between this length and another length.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":76936,"byte_end":76995,"line_start":131,"line_end":131,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":77000,"byte_end":77009,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":77235,"byte_end":77239,"line_start":141,"line_end":141,"column_start":12,"column_end":16},"name":"cast","qualname":"<Length<T, U>>::cast","value":"pub fn cast<NewT: NumCast>(Self) -> Length<NewT, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.\n","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":77135,"byte_end":77209,"line_start":139,"line_end":139,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":77214,"byte_end":77223,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":77421,"byte_end":77429,"line_start":146,"line_end":146,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Length<T, U>>::try_cast","value":"pub fn try_cast<NewT: NumCast>(Self) -> Option<Length<NewT, U>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.\n","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":77326,"byte_end":77409,"line_start":145,"line_end":145,"column_start":5,"column_end":88}}]},{"kind":"Mod","id":{"krate":0,"index":1075},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"num","qualname":"::num","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","parent":null,"children":[{"krate":0,"index":1076},{"krate":0,"index":1079},{"krate":0,"index":1081},{"krate":0,"index":1084},{"krate":0,"index":1086},{"krate":0,"index":1089},{"krate":0,"index":1091},{"krate":0,"index":1093},{"krate":0,"index":4487},{"krate":0,"index":4489},{"krate":0,"index":4491},{"krate":0,"index":4493},{"krate":0,"index":4495},{"krate":0,"index":4497},{"krate":0,"index":4499},{"krate":0,"index":4501},{"krate":0,"index":4503},{"krate":0,"index":4505},{"krate":0,"index":4507},{"krate":0,"index":4509},{"krate":0,"index":4511},{"krate":0,"index":4513},{"krate":0,"index":4515},{"krate":0,"index":4517},{"krate":0,"index":4519},{"krate":0,"index":4521},{"krate":0,"index":4523},{"krate":0,"index":4525},{"krate":0,"index":4527},{"krate":0,"index":4529},{"krate":0,"index":4531},{"krate":0,"index":4533},{"krate":0,"index":4535},{"krate":0,"index":4537},{"krate":0,"index":4539},{"krate":0,"index":4541},{"krate":0,"index":4543},{"krate":0,"index":4545}],"decl_id":null,"docs":" A one-dimensional length, tagged with its units.\n","sig":null,"attributes":[{"value":"/ A one-dimensional length, tagged with its units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","byte_start":89434,"byte_end":89486,"line_start":9,"line_end":9,"column_start":1,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":1079},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","byte_start":90615,"byte_end":90619,"line_start":28,"line_end":28,"column_start":11,"column_end":15},"name":"Zero","qualname":"::num::Zero","value":"Zero","parent":null,"children":[{"krate":0,"index":1080}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","byte_start":90629,"byte_end":90633,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"zero","qualname":"::num::Zero::zero","value":"pub fn zero() -> Self","parent":{"krate":0,"index":1079},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1084},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","byte_start":90760,"byte_end":90763,"line_start":38,"line_end":38,"column_start":11,"column_end":14},"name":"One","qualname":"::num::One","value":"One","parent":null,"children":[{"krate":0,"index":1085}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","byte_start":90773,"byte_end":90776,"line_start":39,"line_end":39,"column_start":8,"column_end":11},"name":"one","qualname":"::num::One::one","value":"pub fn one() -> Self","parent":{"krate":0,"index":1084},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1089},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","byte_start":90959,"byte_end":90964,"line_start":49,"line_end":49,"column_start":11,"column_end":16},"name":"Round","qualname":"::num::Round","value":"Round: Copy","parent":null,"children":[{"krate":0,"index":1090}],"decl_id":null,"docs":" Defines the nearest integer value to the original value.\n","sig":null,"attributes":[{"value":"/ Defines the nearest integer value to the original value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","byte_start":90888,"byte_end":90948,"line_start":48,"line_end":48,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","byte_start":91129,"byte_end":91134,"line_start":54,"line_end":54,"column_start":8,"column_end":13},"name":"round","qualname":"::num::Round::round","value":"pub fn round(Self) -> Self","parent":{"krate":0,"index":1089},"children":[],"decl_id":null,"docs":" Rounds to the nearest integer value.","sig":null,"attributes":[{"value":"/ Rounds to the nearest integer value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","byte_start":90977,"byte_end":91017,"line_start":50,"line_end":50,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","byte_start":91022,"byte_end":91025,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","byte_start":91030,"byte_end":91105,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","byte_start":91110,"byte_end":91121,"line_start":53,"line_end":53,"column_start":5,"column_end":16}}]},{"kind":"Trait","id":{"krate":0,"index":1091},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","byte_start":91234,"byte_end":91239,"line_start":57,"line_end":57,"column_start":11,"column_end":16},"name":"Floor","qualname":"::num::Floor","value":"Floor: Copy","parent":null,"children":[{"krate":0,"index":1092}],"decl_id":null,"docs":" Defines the biggest integer equal or lower than the original value.\n","sig":null,"attributes":[{"value":"/ Defines the biggest integer equal or lower than the original value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","byte_start":91152,"byte_end":91223,"line_start":56,"line_end":56,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","byte_start":91437,"byte_end":91442,"line_start":62,"line_end":62,"column_start":8,"column_end":13},"name":"floor","qualname":"::num::Floor::floor","value":"pub fn floor(Self) -> Self","parent":{"krate":0,"index":1091},"children":[],"decl_id":null,"docs":" Rounds to the biggest integer equal or lower than the original value.","sig":null,"attributes":[{"value":"/ Rounds to the biggest integer equal or lower than the original value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","byte_start":91252,"byte_end":91325,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","byte_start":91330,"byte_end":91333,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","byte_start":91338,"byte_end":91413,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","byte_start":91418,"byte_end":91429,"line_start":61,"line_end":61,"column_start":5,"column_end":16}}]},{"kind":"Trait","id":{"krate":0,"index":1093},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","byte_start":91545,"byte_end":91549,"line_start":65,"line_end":65,"column_start":11,"column_end":15},"name":"Ceil","qualname":"::num::Ceil","value":"Ceil: Copy","parent":null,"children":[{"krate":0,"index":1094}],"decl_id":null,"docs":" Defines the smallest integer equal or greater than the original value.\n","sig":null,"attributes":[{"value":"/ Defines the smallest integer equal or greater than the original value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","byte_start":91460,"byte_end":91534,"line_start":64,"line_end":64,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","byte_start":91750,"byte_end":91754,"line_start":70,"line_end":70,"column_start":8,"column_end":12},"name":"ceil","qualname":"::num::Ceil::ceil","value":"pub fn ceil(Self) -> Self","parent":{"krate":0,"index":1093},"children":[],"decl_id":null,"docs":" Rounds to the smallest integer equal or greater than the original value.","sig":null,"attributes":[{"value":"/ Rounds to the smallest integer equal or greater than the original value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","byte_start":91562,"byte_end":91638,"line_start":66,"line_end":66,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","byte_start":91643,"byte_end":91646,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","byte_start":91651,"byte_end":91726,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","byte_start":91731,"byte_end":91742,"line_start":69,"line_end":69,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1189},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":93916,"byte_end":93923,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"Point2D","qualname":"::point::Point2D","value":"Point2D { x, y, _unit }","parent":null,"children":[{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":1194}],"decl_id":null,"docs":" A 2d Point tagged with a unit.\n","sig":null,"attributes":[{"value":"/ A 2d Point tagged with a unit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":93859,"byte_end":93893,"line_start":29,"line_end":29,"column_start":1,"column_end":35}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":93894,"byte_end":93904,"line_start":30,"line_end":30,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1192},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":93940,"byte_end":93941,"line_start":32,"line_end":32,"column_start":9,"column_end":10},"name":"x","qualname":"::point::Point2D::x","value":"T","parent":{"krate":0,"index":1189},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1193},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":93954,"byte_end":93955,"line_start":33,"line_end":33,"column_start":9,"column_end":10},"name":"y","qualname":"::point::Point2D::y","value":"T","parent":{"krate":0,"index":1189},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1194},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":93987,"byte_end":93992,"line_start":35,"line_end":35,"column_start":9,"column_end":14},"name":"_unit","qualname":"::point::Point2D::_unit","value":"core::marker::PhantomData<U>","parent":{"krate":0,"index":1189},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1225},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":95804,"byte_end":95810,"line_start":119,"line_end":119,"column_start":12,"column_end":18},"name":"origin","qualname":"<Point2D<T, U>>::origin","value":"pub fn origin() -> Self where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all components to zero.\n","sig":null,"attributes":[{"value":"/ Constructor, setting all components to zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":95730,"byte_end":95778,"line_start":117,"line_end":117,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":95783,"byte_end":95792,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1226},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":95979,"byte_end":95983,"line_start":128,"line_end":128,"column_start":12,"column_end":16},"name":"zero","qualname":"<Point2D<T, U>>::zero","value":"pub fn zero() -> Self where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" The same as [`origin()`](#method.origin).\n","sig":null,"attributes":[{"value":"/ The same as [`origin()`](#method.origin).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":95908,"byte_end":95953,"line_start":126,"line_end":126,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":95958,"byte_end":95967,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1227},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":96139,"byte_end":96142,"line_start":137,"line_end":137,"column_start":18,"column_end":21},"name":"new","qualname":"<Point2D<T, U>>::new","value":"pub const fn new(T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar values directly.\n","sig":null,"attributes":[{"value":"/ Constructor taking scalar values directly.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":96061,"byte_end":96107,"line_start":135,"line_end":135,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":96112,"byte_end":96121,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1228},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":96357,"byte_end":96369,"line_start":147,"line_end":147,"column_start":12,"column_end":24},"name":"from_lengths","qualname":"<Point2D<T, U>>::from_lengths","value":"pub fn from_lengths(Length<T, U>, Length<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking properly Lengths instead of scalar values.\n","sig":null,"attributes":[{"value":"/ Constructor taking properly Lengths instead of scalar values.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":96266,"byte_end":96331,"line_start":145,"line_end":145,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":96336,"byte_end":96345,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1229},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":96533,"byte_end":96538,"line_start":153,"line_end":153,"column_start":12,"column_end":17},"name":"splat","qualname":"<Point2D<T, U>>::splat","value":"pub fn splat(T) -> Self where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Constructor setting all components to the same value.\n","sig":null,"attributes":[{"value":"/ Constructor setting all components to the same value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":96450,"byte_end":96507,"line_start":151,"line_end":151,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":96512,"byte_end":96521,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":96764,"byte_end":96776,"line_start":166,"line_end":166,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Point2D<T, U>>::from_untyped","value":"pub fn from_untyped(Point2D<T, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":96702,"byte_end":96738,"line_start":164,"line_end":164,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":96743,"byte_end":96752,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":96977,"byte_end":96983,"line_start":174,"line_end":174,"column_start":12,"column_end":18},"name":"extend","qualname":"<Point2D<T, U>>::extend","value":"pub fn extend(Self, T) -> Point3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Create a 3d point from this one, using the specified z value.\n","sig":null,"attributes":[{"value":"/ Create a 3d point from this one, using the specified z value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":96886,"byte_end":96951,"line_start":172,"line_end":172,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":96956,"byte_end":96965,"line_start":173,"line_end":173,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1235},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":97190,"byte_end":97199,"line_start":182,"line_end":182,"column_start":12,"column_end":21},"name":"to_vector","qualname":"<Point2D<T, U>>::to_vector","value":"pub fn to_vector(Self) -> Vector2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast this point into a vector.","sig":null,"attributes":[{"value":"/ Cast this point into a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":97060,"byte_end":97094,"line_start":178,"line_end":178,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":97099,"byte_end":97102,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Equivalent to subtracting the origin from this point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":97107,"byte_end":97164,"line_start":180,"line_end":180,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":97169,"byte_end":97178,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":97623,"byte_end":97625,"line_start":203,"line_end":203,"column_start":12,"column_end":14},"name":"yx","qualname":"<Point2D<T, U>>::yx","value":"pub fn yx(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Swap x and y.","sig":null,"attributes":[{"value":"/ Swap x and y.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":97344,"byte_end":97361,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":97366,"byte_end":97369,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":97374,"byte_end":97387,"line_start":192,"line_end":192,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":97392,"byte_end":97395,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":97400,"byte_end":97411,"line_start":194,"line_end":194,"column_start":5,"column_end":16}},{"value":"/ # use euclid::{Point2D, point2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":97416,"byte_end":97452,"line_start":195,"line_end":195,"column_start":5,"column_end":41}},{"value":"/ enum Mm {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":97457,"byte_end":97471,"line_start":196,"line_end":196,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":97476,"byte_end":97479,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ let point: Point2D<_, Mm> = point2(1, -8);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":97484,"byte_end":97530,"line_start":198,"line_end":198,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":97535,"byte_end":97538,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point.yx(), point2(-8, 1));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":97543,"byte_end":97585,"line_start":200,"line_end":200,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":97590,"byte_end":97597,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":97602,"byte_end":97611,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1237},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":98055,"byte_end":98065,"line_start":221,"line_end":221,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Point2D<T, U>>::to_untyped","value":"pub fn to_untyped(Self) -> Point2D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":97684,"byte_end":97738,"line_start":207,"line_end":207,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":97743,"byte_end":97746,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":97751,"byte_end":97764,"line_start":209,"line_end":209,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":97769,"byte_end":97772,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":97777,"byte_end":97788,"line_start":211,"line_end":211,"column_start":5,"column_end":16}},{"value":"/ # use euclid::{Point2D, point2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":97793,"byte_end":97829,"line_start":212,"line_end":212,"column_start":5,"column_end":41}},{"value":"/ enum Mm {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":97834,"byte_end":97848,"line_start":213,"line_end":213,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":97853,"byte_end":97856,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ let point: Point2D<_, Mm> = point2(1, -8);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":97861,"byte_end":97907,"line_start":215,"line_end":215,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":97912,"byte_end":97915,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point.x, point.to_untyped().x);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":97920,"byte_end":97966,"line_start":217,"line_end":217,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(point.y, point.to_untyped().y);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":97971,"byte_end":98017,"line_start":218,"line_end":218,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":98022,"byte_end":98029,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":98034,"byte_end":98043,"line_start":220,"line_end":220,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1238},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":98537,"byte_end":98546,"line_start":240,"line_end":240,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Point2D<T, U>>::cast_unit","value":"pub fn cast_unit<V>(Self) -> Point2D<T, V>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit, preserving the numeric value.","sig":null,"attributes":[{"value":"/ Cast the unit, preserving the numeric value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":98143,"byte_end":98191,"line_start":225,"line_end":225,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":98196,"byte_end":98199,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":98204,"byte_end":98217,"line_start":227,"line_end":227,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":98222,"byte_end":98225,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":98230,"byte_end":98241,"line_start":229,"line_end":229,"column_start":5,"column_end":16}},{"value":"/ # use euclid::{Point2D, point2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":98246,"byte_end":98282,"line_start":230,"line_end":230,"column_start":5,"column_end":41}},{"value":"/ enum Mm {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":98287,"byte_end":98301,"line_start":231,"line_end":231,"column_start":5,"column_end":19}},{"value":"/ enum Cm {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":98306,"byte_end":98320,"line_start":232,"line_end":232,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":98325,"byte_end":98328,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ let point: Point2D<_, Mm> = point2(1, -8);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":98333,"byte_end":98379,"line_start":234,"line_end":234,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":98384,"byte_end":98387,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point.x, point.cast_unit::<Cm>().x);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":98392,"byte_end":98443,"line_start":236,"line_end":236,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(point.y, point.cast_unit::<Cm>().y);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":98448,"byte_end":98499,"line_start":237,"line_end":237,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":98504,"byte_end":98511,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":98516,"byte_end":98525,"line_start":239,"line_end":239,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1240},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":98915,"byte_end":98923,"line_start":257,"line_end":257,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Point2D<T, U>>::to_array","value":"pub fn to_array(Self) -> [T; ]","parent":null,"children":[],"decl_id":null,"docs":" Cast into an array with x and y.","sig":null,"attributes":[{"value":"/ Cast into an array with x and y.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":98617,"byte_end":98653,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":98658,"byte_end":98661,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":98666,"byte_end":98679,"line_start":246,"line_end":246,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":98684,"byte_end":98687,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":98692,"byte_end":98703,"line_start":248,"line_end":248,"column_start":5,"column_end":16}},{"value":"/ # use euclid::{Point2D, point2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":98708,"byte_end":98744,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ enum Mm {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":98749,"byte_end":98763,"line_start":250,"line_end":250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":98768,"byte_end":98771,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ let point: Point2D<_, Mm> = point2(1, -8);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":98776,"byte_end":98822,"line_start":252,"line_end":252,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":98827,"byte_end":98830,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point.to_array(), [1, -8]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":98835,"byte_end":98877,"line_start":254,"line_end":254,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":98882,"byte_end":98889,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":98894,"byte_end":98903,"line_start":256,"line_end":256,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1242},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":99275,"byte_end":99283,"line_start":274,"line_end":274,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<Point2D<T, U>>::to_tuple","value":"pub fn to_tuple(Self) -> (T, T)","parent":null,"children":[],"decl_id":null,"docs":" Cast into a tuple with x and y.","sig":null,"attributes":[{"value":"/ Cast into a tuple with x and y.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":98978,"byte_end":99013,"line_start":261,"line_end":261,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":99018,"byte_end":99021,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":99026,"byte_end":99039,"line_start":263,"line_end":263,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":99044,"byte_end":99047,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":99052,"byte_end":99063,"line_start":265,"line_end":265,"column_start":5,"column_end":16}},{"value":"/ # use euclid::{Point2D, point2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":99068,"byte_end":99104,"line_start":266,"line_end":266,"column_start":5,"column_end":41}},{"value":"/ enum Mm {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":99109,"byte_end":99123,"line_start":267,"line_end":267,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":99128,"byte_end":99131,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ let point: Point2D<_, Mm> = point2(1, -8);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":99136,"byte_end":99182,"line_start":269,"line_end":269,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":99187,"byte_end":99190,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point.to_tuple(), (1, -8));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":99195,"byte_end":99237,"line_start":271,"line_end":271,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":99242,"byte_end":99249,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":99254,"byte_end":99263,"line_start":273,"line_end":273,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1243},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":99425,"byte_end":99430,"line_start":280,"line_end":280,"column_start":12,"column_end":17},"name":"to_3d","qualname":"<Point2D<T, U>>::to_3d","value":"pub fn to_3d(Self) -> Point3D<T, U> where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" Convert into a 3d point with z-coordinate equals to zero.\n","sig":null,"attributes":[{"value":"/ Convert into a 3d point with z-coordinate equals to zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":99338,"byte_end":99399,"line_start":278,"line_end":278,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":99404,"byte_end":99413,"line_start":279,"line_end":279,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1244},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":99905,"byte_end":99910,"line_start":299,"line_end":299,"column_start":12,"column_end":17},"name":"round","qualname":"<Point2D<T, U>>::round","value":"pub fn round(Self) -> Self where T: Round","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the nearest integer value.","sig":null,"attributes":[{"value":"/ Rounds each component to the nearest integer value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":99543,"byte_end":99598,"line_start":287,"line_end":287,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":99603,"byte_end":99606,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":99611,"byte_end":99686,"line_start":289,"line_end":289,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":99691,"byte_end":99694,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":99699,"byte_end":99710,"line_start":291,"line_end":291,"column_start":5,"column_end":16}},{"value":"/ # use euclid::point2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":99715,"byte_end":99740,"line_start":292,"line_end":292,"column_start":5,"column_end":30}},{"value":"/ enum Mm {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":99745,"byte_end":99759,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":99764,"byte_end":99767,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point2::<_, Mm>(-0.1, -0.8).round(), point2::<_, Mm>(0.0, -1.0))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":99772,"byte_end":99851,"line_start":295,"line_end":295,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":99856,"byte_end":99863,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":99868,"byte_end":99877,"line_start":297,"line_end":297,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":99882,"byte_end":99893,"line_start":298,"line_end":298,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1245},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":100413,"byte_end":100417,"line_start":318,"line_end":318,"column_start":12,"column_end":16},"name":"ceil","qualname":"<Point2D<T, U>>::ceil","value":"pub fn ceil(Self) -> Self where T: Ceil","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the smallest integer equal or greater than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the smallest integer equal or greater than the original value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":100017,"byte_end":100108,"line_start":306,"line_end":306,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":100113,"byte_end":100116,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":100121,"byte_end":100196,"line_start":308,"line_end":308,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":100201,"byte_end":100204,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":100209,"byte_end":100220,"line_start":310,"line_end":310,"column_start":5,"column_end":16}},{"value":"/ # use euclid::point2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":100225,"byte_end":100250,"line_start":311,"line_end":311,"column_start":5,"column_end":30}},{"value":"/ enum Mm {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":100255,"byte_end":100269,"line_start":312,"line_end":312,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":100274,"byte_end":100277,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point2::<_, Mm>(-0.1, -0.8).ceil(), point2::<_, Mm>(0.0, 0.0))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":100282,"byte_end":100359,"line_start":314,"line_end":314,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":100364,"byte_end":100371,"line_start":315,"line_end":315,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":100376,"byte_end":100385,"line_start":316,"line_end":316,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":100390,"byte_end":100401,"line_start":317,"line_end":317,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1246},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":100917,"byte_end":100922,"line_start":337,"line_end":337,"column_start":12,"column_end":17},"name":"floor","qualname":"<Point2D<T, U>>::floor","value":"pub fn floor(Self) -> Self where T: Floor","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the biggest integer equal or lower than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the biggest integer equal or lower than the original value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":100521,"byte_end":100609,"line_start":325,"line_end":325,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":100614,"byte_end":100617,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":100622,"byte_end":100697,"line_start":327,"line_end":327,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":100702,"byte_end":100705,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":100710,"byte_end":100721,"line_start":329,"line_end":329,"column_start":5,"column_end":16}},{"value":"/ # use euclid::point2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":100726,"byte_end":100751,"line_start":330,"line_end":330,"column_start":5,"column_end":30}},{"value":"/ enum Mm {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":100756,"byte_end":100770,"line_start":331,"line_end":331,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":100775,"byte_end":100778,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point2::<_, Mm>(-0.1, -0.8).floor(), point2::<_, Mm>(-1.0, -1.0))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":100783,"byte_end":100863,"line_start":333,"line_end":333,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":100868,"byte_end":100875,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":100880,"byte_end":100889,"line_start":335,"line_end":335,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":100894,"byte_end":100905,"line_start":336,"line_end":336,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1247},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":101670,"byte_end":101674,"line_start":362,"line_end":362,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Point2D<T, U>>::lerp","value":"pub fn lerp(Self, Self, T) -> Self where T: One + Sub<Output = T> + Mul<Output\n= T> + Add<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between this point and another point.","sig":null,"attributes":[{"value":"/ Linearly interpolate between this point and another point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":101029,"byte_end":101091,"line_start":344,"line_end":344,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":101096,"byte_end":101099,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":101104,"byte_end":101117,"line_start":346,"line_end":346,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":101122,"byte_end":101125,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":101130,"byte_end":101141,"line_start":348,"line_end":348,"column_start":5,"column_end":16}},{"value":"/ use euclid::point2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":101146,"byte_end":101169,"line_start":349,"line_end":349,"column_start":5,"column_end":28}},{"value":"/ use euclid::default::Point2D;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":101174,"byte_end":101207,"line_start":350,"line_end":350,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":101212,"byte_end":101215,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ let from: Point2D<_> = point2(0.0, 10.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":101220,"byte_end":101265,"line_start":352,"line_end":352,"column_start":5,"column_end":50}},{"value":"/ let to:  Point2D<_> = point2(8.0, -4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":101270,"byte_end":101314,"line_start":353,"line_end":353,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":101319,"byte_end":101322,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from.lerp(to, -1.0), point2(-8.0,  24.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":101327,"byte_end":101384,"line_start":355,"line_end":355,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(from.lerp(to,  0.0), point2( 0.0,  10.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":101389,"byte_end":101446,"line_start":356,"line_end":356,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(from.lerp(to,  0.5), point2( 4.0,   3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":101451,"byte_end":101508,"line_start":357,"line_end":357,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(from.lerp(to,  1.0), point2( 8.0,  -4.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":101513,"byte_end":101570,"line_start":358,"line_end":358,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(from.lerp(to,  2.0), point2(16.0, -18.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":101575,"byte_end":101632,"line_start":359,"line_end":359,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":101637,"byte_end":101644,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":101649,"byte_end":101658,"line_start":361,"line_end":361,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1251},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":101976,"byte_end":101979,"line_start":373,"line_end":373,"column_start":12,"column_end":15},"name":"min","qualname":"<Point2D<T, U>>::min","value":"pub fn min(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":101955,"byte_end":101964,"line_start":372,"line_end":372,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1252},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":102100,"byte_end":102103,"line_start":378,"line_end":378,"column_start":12,"column_end":15},"name":"max","qualname":"<Point2D<T, U>>::max","value":"pub fn max(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":102079,"byte_end":102088,"line_start":377,"line_end":377,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1253},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":102397,"byte_end":102402,"line_start":387,"line_end":387,"column_start":12,"column_end":17},"name":"clamp","qualname":"<Point2D<T, U>>::clamp","value":"pub fn clamp(Self, Self, Self) -> Self where T: Copy","parent":null,"children":[],"decl_id":null,"docs":" Returns the point each component of which clamped by corresponding\n components of `start` and `end`.","sig":null,"attributes":[{"value":"/ Returns the point each component of which clamped by corresponding","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":102203,"byte_end":102273,"line_start":382,"line_end":382,"column_start":5,"column_end":75}},{"value":"/ components of `start` and `end`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":102278,"byte_end":102314,"line_start":383,"line_end":383,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":102319,"byte_end":102322,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ Shortcut for `self.max(start).min(end)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":102327,"byte_end":102371,"line_start":385,"line_end":385,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":102376,"byte_end":102385,"line_start":386,"line_end":386,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":102943,"byte_end":102947,"line_start":402,"line_end":402,"column_start":12,"column_end":16},"name":"cast","qualname":"<Point2D<T, U>>::cast","value":"pub fn cast<NewT: NumCast>(Self) -> Point2D<NewT, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":102563,"byte_end":102637,"line_start":396,"line_end":396,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":102642,"byte_end":102645,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":102650,"byte_end":102737,"line_start":398,"line_end":398,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":102742,"byte_end":102830,"line_start":399,"line_end":399,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":102835,"byte_end":102917,"line_start":400,"line_end":400,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":102922,"byte_end":102931,"line_start":401,"line_end":401,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":103410,"byte_end":103418,"line_start":411,"line_end":411,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Point2D<T, U>>::try_cast","value":"pub fn try_cast<NewT: NumCast>(Self) -> Option<Point2D<NewT, U>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":103035,"byte_end":103118,"line_start":406,"line_end":406,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":103123,"byte_end":103126,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":103131,"byte_end":103218,"line_start":408,"line_end":408,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":103223,"byte_end":103311,"line_start":409,"line_end":409,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":103316,"byte_end":103398,"line_start":410,"line_end":410,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1261},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":103733,"byte_end":103739,"line_start":422,"line_end":422,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<Point2D<T, U>>::to_f32","value":"pub fn to_f32(Self) -> Point2D<f32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` point.\n","sig":null,"attributes":[{"value":"/ Cast into an `f32` point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":103678,"byte_end":103707,"line_start":420,"line_end":420,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":103712,"byte_end":103721,"line_start":421,"line_end":421,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1262},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":103853,"byte_end":103859,"line_start":428,"line_end":428,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<Point2D<T, U>>::to_f64","value":"pub fn to_f64(Self) -> Point2D<f64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` point.\n","sig":null,"attributes":[{"value":"/ Cast into an `f64` point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":103798,"byte_end":103827,"line_start":426,"line_end":426,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":103832,"byte_end":103841,"line_start":427,"line_end":427,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1263},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":104212,"byte_end":104220,"line_start":438,"line_end":438,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<Point2D<T, U>>::to_usize","value":"pub fn to_usize(Self) -> Point2D<usize, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `usize` point, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `usize` point, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":103918,"byte_end":103977,"line_start":432,"line_end":432,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":103982,"byte_end":103985,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point points, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":103990,"byte_end":104066,"line_start":434,"line_end":434,"column_start":5,"column_end":81}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":104071,"byte_end":104145,"line_start":435,"line_end":435,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":104150,"byte_end":104186,"line_start":436,"line_end":436,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":104191,"byte_end":104200,"line_start":437,"line_end":437,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1264},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":104573,"byte_end":104579,"line_start":448,"line_end":448,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<Point2D<T, U>>::to_u32","value":"pub fn to_u32(Self) -> Point2D<u32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` point, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `u32` point, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":104281,"byte_end":104338,"line_start":442,"line_end":442,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":104343,"byte_end":104346,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point points, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":104351,"byte_end":104427,"line_start":444,"line_end":444,"column_start":5,"column_end":81}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":104432,"byte_end":104506,"line_start":445,"line_end":445,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":104511,"byte_end":104547,"line_start":446,"line_end":446,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":104552,"byte_end":104561,"line_start":447,"line_end":447,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1265},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":104928,"byte_end":104934,"line_start":458,"line_end":458,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<Point2D<T, U>>::to_i32","value":"pub fn to_i32(Self) -> Point2D<i32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an i32 point, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an i32 point, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":104638,"byte_end":104693,"line_start":452,"line_end":452,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":104698,"byte_end":104701,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point points, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":104706,"byte_end":104782,"line_start":454,"line_end":454,"column_start":5,"column_end":81}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":104787,"byte_end":104861,"line_start":455,"line_end":455,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":104866,"byte_end":104902,"line_start":456,"line_end":456,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":104907,"byte_end":104916,"line_start":457,"line_end":457,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":105283,"byte_end":105289,"line_start":468,"line_end":468,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<Point2D<T, U>>::to_i64","value":"pub fn to_i64(Self) -> Point2D<i64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an i64 point, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an i64 point, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":104993,"byte_end":105048,"line_start":462,"line_end":462,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":105053,"byte_end":105056,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point points, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":105061,"byte_end":105137,"line_start":464,"line_end":464,"column_start":5,"column_end":81}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":105142,"byte_end":105216,"line_start":465,"line_end":465,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":105221,"byte_end":105257,"line_start":466,"line_end":466,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":105262,"byte_end":105271,"line_start":467,"line_end":467,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1270},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":105425,"byte_end":105433,"line_start":475,"line_end":475,"column_start":12,"column_end":20},"name":"add_size","qualname":"<Point2D<T, U>>::add_size","value":"pub fn add_size(Self, &Size2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":105404,"byte_end":105413,"line_start":474,"line_end":474,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1274},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":105621,"byte_end":105632,"line_start":482,"line_end":482,"column_start":12,"column_end":23},"name":"distance_to","qualname":"<Point2D<T, U>>::distance_to","value":"pub fn distance_to(Self, Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":105600,"byte_end":105609,"line_start":481,"line_end":481,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1400},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":110907,"byte_end":110914,"line_start":706,"line_end":706,"column_start":12,"column_end":19},"name":"Point3D","qualname":"::point::Point3D","value":"Point3D { x, y, z, _unit }","parent":null,"children":[{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406}],"decl_id":null,"docs":" A 3d Point tagged with a unit.\n","sig":null,"attributes":[{"value":"/ A 3d Point tagged with a unit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":110850,"byte_end":110884,"line_start":704,"line_end":704,"column_start":1,"column_end":35}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":110885,"byte_end":110895,"line_start":705,"line_end":705,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1403},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":110931,"byte_end":110932,"line_start":707,"line_end":707,"column_start":9,"column_end":10},"name":"x","qualname":"::point::Point3D::x","value":"T","parent":{"krate":0,"index":1400},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1404},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":110945,"byte_end":110946,"line_start":708,"line_end":708,"column_start":9,"column_end":10},"name":"y","qualname":"::point::Point3D::y","value":"T","parent":{"krate":0,"index":1400},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1405},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":110959,"byte_end":110960,"line_start":709,"line_end":709,"column_start":9,"column_end":10},"name":"z","qualname":"::point::Point3D::z","value":"T","parent":{"krate":0,"index":1400},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1406},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":110992,"byte_end":110997,"line_start":711,"line_end":711,"column_start":9,"column_end":14},"name":"_unit","qualname":"::point::Point3D::_unit","value":"core::marker::PhantomData<U>","parent":{"krate":0,"index":1400},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1437},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":113002,"byte_end":113008,"line_start":802,"line_end":802,"column_start":12,"column_end":18},"name":"origin","qualname":"<Point3D<T, U>>::origin","value":"pub fn origin() -> Self where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all components to zero.\n","sig":null,"attributes":[{"value":"/ Constructor, setting all components to zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":112928,"byte_end":112976,"line_start":800,"line_end":800,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":112981,"byte_end":112990,"line_start":801,"line_end":801,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1438},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":113191,"byte_end":113195,"line_start":811,"line_end":811,"column_start":12,"column_end":16},"name":"zero","qualname":"<Point3D<T, U>>::zero","value":"pub fn zero() -> Self where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" The same as [`origin()`](#method.origin).\n","sig":null,"attributes":[{"value":"/ The same as [`origin()`](#method.origin).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":113120,"byte_end":113165,"line_start":809,"line_end":809,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":113170,"byte_end":113179,"line_start":810,"line_end":810,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1439},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":113351,"byte_end":113354,"line_start":820,"line_end":820,"column_start":18,"column_end":21},"name":"new","qualname":"<Point3D<T, U>>::new","value":"pub const fn new(T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar values directly.\n","sig":null,"attributes":[{"value":"/ Constructor taking scalar values directly.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":113273,"byte_end":113319,"line_start":818,"line_end":818,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":113324,"byte_end":113333,"line_start":819,"line_end":819,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1440},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":113590,"byte_end":113602,"line_start":831,"line_end":831,"column_start":12,"column_end":24},"name":"from_lengths","qualname":"<Point3D<T, U>>::from_lengths","value":"pub fn from_lengths(Length<T, U>, Length<T, U>, Length<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking properly Lengths instead of scalar values.\n","sig":null,"attributes":[{"value":"/ Constructor taking properly Lengths instead of scalar values.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":113499,"byte_end":113564,"line_start":829,"line_end":829,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":113569,"byte_end":113578,"line_start":830,"line_end":830,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1441},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":113788,"byte_end":113793,"line_start":837,"line_end":837,"column_start":12,"column_end":17},"name":"splat","qualname":"<Point3D<T, U>>::splat","value":"pub fn splat(T) -> Self where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Constructor setting all components to the same value.\n","sig":null,"attributes":[{"value":"/ Constructor setting all components to the same value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":113705,"byte_end":113762,"line_start":835,"line_end":835,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":113767,"byte_end":113776,"line_start":836,"line_end":836,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1442},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":114045,"byte_end":114057,"line_start":851,"line_end":851,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Point3D<T, U>>::from_untyped","value":"pub fn from_untyped(Point3D<T, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":113983,"byte_end":114019,"line_start":849,"line_end":849,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":114024,"byte_end":114033,"line_start":850,"line_end":850,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1446},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":114300,"byte_end":114309,"line_start":861,"line_end":861,"column_start":12,"column_end":21},"name":"to_vector","qualname":"<Point3D<T, U>>::to_vector","value":"pub fn to_vector(Self) -> Vector3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast this point into a vector.","sig":null,"attributes":[{"value":"/ Cast this point into a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":114172,"byte_end":114206,"line_start":857,"line_end":857,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":114211,"byte_end":114214,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ Equivalent to subtracting the origin to this point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":114219,"byte_end":114274,"line_start":859,"line_end":859,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":114279,"byte_end":114288,"line_start":860,"line_end":860,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1447},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":114564,"byte_end":114566,"line_start":872,"line_end":872,"column_start":12,"column_end":14},"name":"xy","qualname":"<Point3D<T, U>>::xy","value":"pub fn xy(Self) -> Point2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d point using this point's x and y coordinates\n","sig":null,"attributes":[{"value":"/ Returns a 2d point using this point's x and y coordinates","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":114477,"byte_end":114538,"line_start":870,"line_end":870,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":114543,"byte_end":114552,"line_start":871,"line_end":871,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1448},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":114721,"byte_end":114723,"line_start":878,"line_end":878,"column_start":12,"column_end":14},"name":"xz","qualname":"<Point3D<T, U>>::xz","value":"pub fn xz(Self) -> Point2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d point using this point's x and z coordinates\n","sig":null,"attributes":[{"value":"/ Returns a 2d point using this point's x and z coordinates","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":114634,"byte_end":114695,"line_start":876,"line_end":876,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":114700,"byte_end":114709,"line_start":877,"line_end":877,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1449},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":114878,"byte_end":114880,"line_start":884,"line_end":884,"column_start":12,"column_end":14},"name":"yz","qualname":"<Point3D<T, U>>::yz","value":"pub fn yz(Self) -> Point2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d point using this point's x and z coordinates\n","sig":null,"attributes":[{"value":"/ Returns a 2d point using this point's x and z coordinates","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":114791,"byte_end":114852,"line_start":882,"line_end":882,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":114857,"byte_end":114866,"line_start":883,"line_end":883,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1450},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":115255,"byte_end":115263,"line_start":901,"line_end":901,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Point3D<T, U>>::to_array","value":"pub fn to_array(Self) -> [T; ]","parent":null,"children":[],"decl_id":null,"docs":" Cast into an array with x, y and z.","sig":null,"attributes":[{"value":"/ Cast into an array with x, y and z.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":114948,"byte_end":114987,"line_start":888,"line_end":888,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":114992,"byte_end":114995,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":115000,"byte_end":115013,"line_start":890,"line_end":890,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":115018,"byte_end":115021,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":115026,"byte_end":115037,"line_start":892,"line_end":892,"column_start":5,"column_end":16}},{"value":"/ # use euclid::{Point3D, point3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":115042,"byte_end":115078,"line_start":893,"line_end":893,"column_start":5,"column_end":41}},{"value":"/ enum Mm {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":115083,"byte_end":115097,"line_start":894,"line_end":894,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":115102,"byte_end":115105,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ let point: Point3D<_, Mm> = point3(1, -8, 0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":115110,"byte_end":115159,"line_start":896,"line_end":896,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":115164,"byte_end":115167,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point.to_array(), [1, -8, 0]);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":115172,"byte_end":115217,"line_start":898,"line_end":898,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":115222,"byte_end":115229,"line_start":899,"line_end":899,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":115234,"byte_end":115243,"line_start":900,"line_end":900,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1452},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":115347,"byte_end":115358,"line_start":906,"line_end":906,"column_start":12,"column_end":23},"name":"to_array_4d","qualname":"<Point3D<T, U>>::to_array_4d","value":"pub fn to_array_4d(Self) -> [T; ] where T: One","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":115326,"byte_end":115335,"line_start":905,"line_end":905,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1454},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":115769,"byte_end":115777,"line_start":926,"line_end":926,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<Point3D<T, U>>::to_tuple","value":"pub fn to_tuple(Self) -> (T, T, T)","parent":null,"children":[],"decl_id":null,"docs":" Cast into a tuple with x, y and z.","sig":null,"attributes":[{"value":"/ Cast into a tuple with x, y and z.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":115463,"byte_end":115501,"line_start":913,"line_end":913,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":115506,"byte_end":115509,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":115514,"byte_end":115527,"line_start":915,"line_end":915,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":115532,"byte_end":115535,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":115540,"byte_end":115551,"line_start":917,"line_end":917,"column_start":5,"column_end":16}},{"value":"/ # use euclid::{Point3D, point3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":115556,"byte_end":115592,"line_start":918,"line_end":918,"column_start":5,"column_end":41}},{"value":"/ enum Mm {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":115597,"byte_end":115611,"line_start":919,"line_end":919,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":115616,"byte_end":115619,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ let point: Point3D<_, Mm> = point3(1, -8, 0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":115624,"byte_end":115673,"line_start":921,"line_end":921,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":115678,"byte_end":115681,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point.to_tuple(), (1, -8, 0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":115686,"byte_end":115731,"line_start":923,"line_end":923,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":115736,"byte_end":115743,"line_start":924,"line_end":924,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":115748,"byte_end":115757,"line_start":925,"line_end":925,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1455},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":115864,"byte_end":115875,"line_start":931,"line_end":931,"column_start":12,"column_end":23},"name":"to_tuple_4d","qualname":"<Point3D<T, U>>::to_tuple_4d","value":"pub fn to_tuple_4d(Self) -> (T, T, T, T) where T: One","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":115843,"byte_end":115852,"line_start":930,"line_end":930,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1456},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":116411,"byte_end":116421,"line_start":953,"line_end":953,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Point3D<T, U>>::to_untyped","value":"pub fn to_untyped(Self) -> Point3D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":115986,"byte_end":116040,"line_start":938,"line_end":938,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":116045,"byte_end":116048,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":116053,"byte_end":116066,"line_start":940,"line_end":940,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":116071,"byte_end":116074,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":116079,"byte_end":116090,"line_start":942,"line_end":942,"column_start":5,"column_end":16}},{"value":"/ # use euclid::{Point3D, point3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":116095,"byte_end":116131,"line_start":943,"line_end":943,"column_start":5,"column_end":41}},{"value":"/ enum Mm {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":116136,"byte_end":116150,"line_start":944,"line_end":944,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":116155,"byte_end":116158,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ let point: Point3D<_, Mm> = point3(1, -8, 0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":116163,"byte_end":116212,"line_start":946,"line_end":946,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":116217,"byte_end":116220,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point.x, point.to_untyped().x);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":116225,"byte_end":116271,"line_start":948,"line_end":948,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(point.y, point.to_untyped().y);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":116276,"byte_end":116322,"line_start":949,"line_end":949,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(point.z, point.to_untyped().z);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":116327,"byte_end":116373,"line_start":950,"line_end":950,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":116378,"byte_end":116385,"line_start":951,"line_end":951,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":116390,"byte_end":116399,"line_start":952,"line_end":952,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1457},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":116960,"byte_end":116969,"line_start":973,"line_end":973,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Point3D<T, U>>::cast_unit","value":"pub fn cast_unit<V>(Self) -> Point3D<T, V>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit, preserving the numeric value.","sig":null,"attributes":[{"value":"/ Cast the unit, preserving the numeric value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":116507,"byte_end":116555,"line_start":957,"line_end":957,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":116560,"byte_end":116563,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":116568,"byte_end":116581,"line_start":959,"line_end":959,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":116586,"byte_end":116589,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":116594,"byte_end":116605,"line_start":961,"line_end":961,"column_start":5,"column_end":16}},{"value":"/ # use euclid::{Point3D, point3};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":116610,"byte_end":116646,"line_start":962,"line_end":962,"column_start":5,"column_end":41}},{"value":"/ enum Mm {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":116651,"byte_end":116665,"line_start":963,"line_end":963,"column_start":5,"column_end":19}},{"value":"/ enum Cm {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":116670,"byte_end":116684,"line_start":964,"line_end":964,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":116689,"byte_end":116692,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ let point: Point3D<_, Mm> = point3(1, -8, 0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":116697,"byte_end":116746,"line_start":966,"line_end":966,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":116751,"byte_end":116754,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point.x, point.cast_unit::<Cm>().x);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":116759,"byte_end":116810,"line_start":968,"line_end":968,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(point.y, point.cast_unit::<Cm>().y);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":116815,"byte_end":116866,"line_start":969,"line_end":969,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(point.z, point.cast_unit::<Cm>().z);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":116871,"byte_end":116922,"line_start":970,"line_end":970,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":116927,"byte_end":116934,"line_start":971,"line_end":971,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":116939,"byte_end":116948,"line_start":972,"line_end":972,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1459},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":117102,"byte_end":117107,"line_start":979,"line_end":979,"column_start":12,"column_end":17},"name":"to_2d","qualname":"<Point3D<T, U>>::to_2d","value":"pub fn to_2d(Self) -> Point2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Convert into a 2d point.\n","sig":null,"attributes":[{"value":"/ Convert into a 2d point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":117048,"byte_end":117076,"line_start":977,"line_end":977,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":117081,"byte_end":117090,"line_start":978,"line_end":978,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1460},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":117534,"byte_end":117539,"line_start":995,"line_end":995,"column_start":12,"column_end":17},"name":"round","qualname":"<Point3D<T, U>>::round","value":"pub fn round(Self) -> Self where T: Round","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the nearest integer value.","sig":null,"attributes":[{"value":"/ Rounds each component to the nearest integer value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":117162,"byte_end":117217,"line_start":983,"line_end":983,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":117222,"byte_end":117225,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":117230,"byte_end":117305,"line_start":985,"line_end":985,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":117310,"byte_end":117313,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":117318,"byte_end":117329,"line_start":987,"line_end":987,"column_start":5,"column_end":16}},{"value":"/ # use euclid::point3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":117334,"byte_end":117359,"line_start":988,"line_end":988,"column_start":5,"column_end":30}},{"value":"/ enum Mm {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":117364,"byte_end":117378,"line_start":989,"line_end":989,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":117383,"byte_end":117386,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point3::<_, Mm>(-0.1, -0.8, 0.4).round(), point3::<_, Mm>(0.0, -1.0, 0.0))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":117391,"byte_end":117480,"line_start":991,"line_end":991,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":117485,"byte_end":117492,"line_start":992,"line_end":992,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":117497,"byte_end":117506,"line_start":993,"line_end":993,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":117511,"byte_end":117522,"line_start":994,"line_end":994,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":118068,"byte_end":118072,"line_start":1014,"line_end":1014,"column_start":12,"column_end":16},"name":"ceil","qualname":"<Point3D<T, U>>::ceil","value":"pub fn ceil(Self) -> Self where T: Ceil","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the smallest integer equal or greater than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the smallest integer equal or greater than the original value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":117662,"byte_end":117753,"line_start":1002,"line_end":1002,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":117758,"byte_end":117761,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":117766,"byte_end":117841,"line_start":1004,"line_end":1004,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":117846,"byte_end":117849,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":117854,"byte_end":117865,"line_start":1006,"line_end":1006,"column_start":5,"column_end":16}},{"value":"/ # use euclid::point3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":117870,"byte_end":117895,"line_start":1007,"line_end":1007,"column_start":5,"column_end":30}},{"value":"/ enum Mm {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":117900,"byte_end":117914,"line_start":1008,"line_end":1008,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":117919,"byte_end":117922,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point3::<_, Mm>(-0.1, -0.8, 0.4).ceil(), point3::<_, Mm>(0.0, 0.0, 1.0))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":117927,"byte_end":118014,"line_start":1010,"line_end":1010,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":118019,"byte_end":118026,"line_start":1011,"line_end":1011,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":118031,"byte_end":118040,"line_start":1012,"line_end":1012,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":118045,"byte_end":118056,"line_start":1013,"line_end":1013,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1462},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":118597,"byte_end":118602,"line_start":1033,"line_end":1033,"column_start":12,"column_end":17},"name":"floor","qualname":"<Point3D<T, U>>::floor","value":"pub fn floor(Self) -> Self where T: Floor","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the biggest integer equal or lower than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the biggest integer equal or lower than the original value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":118191,"byte_end":118279,"line_start":1021,"line_end":1021,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":118284,"byte_end":118287,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":118292,"byte_end":118367,"line_start":1023,"line_end":1023,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":118372,"byte_end":118375,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":118380,"byte_end":118391,"line_start":1025,"line_end":1025,"column_start":5,"column_end":16}},{"value":"/ # use euclid::point3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":118396,"byte_end":118421,"line_start":1026,"line_end":1026,"column_start":5,"column_end":30}},{"value":"/ enum Mm {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":118426,"byte_end":118440,"line_start":1027,"line_end":1027,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":118445,"byte_end":118448,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point3::<_, Mm>(-0.1, -0.8, 0.4).floor(), point3::<_, Mm>(-1.0, -1.0, 0.0))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":118453,"byte_end":118543,"line_start":1029,"line_end":1029,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":118548,"byte_end":118555,"line_start":1030,"line_end":1030,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":118560,"byte_end":118569,"line_start":1031,"line_end":1031,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":118574,"byte_end":118585,"line_start":1032,"line_end":1032,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1463},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":119408,"byte_end":119412,"line_start":1058,"line_end":1058,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Point3D<T, U>>::lerp","value":"pub fn lerp(Self, Self, T) -> Self where T: One + Sub<Output = T> + Mul<Output\n= T> + Add<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between this point and another point.","sig":null,"attributes":[{"value":"/ Linearly interpolate between this point and another point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":118725,"byte_end":118787,"line_start":1040,"line_end":1040,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":118792,"byte_end":118795,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":118800,"byte_end":118813,"line_start":1042,"line_end":1042,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":118818,"byte_end":118821,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":118826,"byte_end":118837,"line_start":1044,"line_end":1044,"column_start":5,"column_end":16}},{"value":"/ use euclid::point3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":118842,"byte_end":118865,"line_start":1045,"line_end":1045,"column_start":5,"column_end":28}},{"value":"/ use euclid::default::Point3D;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":118870,"byte_end":118903,"line_start":1046,"line_end":1046,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":118908,"byte_end":118911,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ let from: Point3D<_> = point3(0.0, 10.0, -1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":118916,"byte_end":118967,"line_start":1048,"line_end":1048,"column_start":5,"column_end":56}},{"value":"/ let to:  Point3D<_> = point3(8.0, -4.0,  0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":118972,"byte_end":119022,"line_start":1049,"line_end":1049,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":119027,"byte_end":119030,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from.lerp(to, -1.0), point3(-8.0,  24.0, -2.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":119035,"byte_end":119098,"line_start":1051,"line_end":1051,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(from.lerp(to,  0.0), point3( 0.0,  10.0, -1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":119103,"byte_end":119166,"line_start":1052,"line_end":1052,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(from.lerp(to,  0.5), point3( 4.0,   3.0, -0.5));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":119171,"byte_end":119234,"line_start":1053,"line_end":1053,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(from.lerp(to,  1.0), point3( 8.0,  -4.0,  0.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":119239,"byte_end":119302,"line_start":1054,"line_end":1054,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(from.lerp(to,  2.0), point3(16.0, -18.0,  1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":119307,"byte_end":119370,"line_start":1055,"line_end":1055,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":119375,"byte_end":119382,"line_start":1056,"line_end":1056,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":119387,"byte_end":119396,"line_start":1057,"line_end":1057,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1467},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":119791,"byte_end":119794,"line_start":1073,"line_end":1073,"column_start":12,"column_end":15},"name":"min","qualname":"<Point3D<T, U>>::min","value":"pub fn min(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":119770,"byte_end":119779,"line_start":1072,"line_end":1072,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1468},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":119984,"byte_end":119987,"line_start":1082,"line_end":1082,"column_start":12,"column_end":15},"name":"max","qualname":"<Point3D<T, U>>::max","value":"pub fn max(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":119963,"byte_end":119972,"line_start":1081,"line_end":1081,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1469},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":120350,"byte_end":120355,"line_start":1095,"line_end":1095,"column_start":12,"column_end":17},"name":"clamp","qualname":"<Point3D<T, U>>::clamp","value":"pub fn clamp(Self, Self, Self) -> Self where T: Copy","parent":null,"children":[],"decl_id":null,"docs":" Returns the point each component of which clamped by corresponding\n components of `start` and `end`.","sig":null,"attributes":[{"value":"/ Returns the point each component of which clamped by corresponding","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":120156,"byte_end":120226,"line_start":1090,"line_end":1090,"column_start":5,"column_end":75}},{"value":"/ components of `start` and `end`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":120231,"byte_end":120267,"line_start":1091,"line_end":1091,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":120272,"byte_end":120275,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ Shortcut for `self.max(start).min(end)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":120280,"byte_end":120324,"line_start":1093,"line_end":1093,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":120329,"byte_end":120338,"line_start":1094,"line_end":1094,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1473},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":120896,"byte_end":120900,"line_start":1110,"line_end":1110,"column_start":12,"column_end":16},"name":"cast","qualname":"<Point3D<T, U>>::cast","value":"pub fn cast<NewT: NumCast>(Self) -> Point3D<NewT, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":120516,"byte_end":120590,"line_start":1104,"line_end":1104,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":120595,"byte_end":120598,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":120603,"byte_end":120690,"line_start":1106,"line_end":1106,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":120695,"byte_end":120783,"line_start":1107,"line_end":1107,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":120788,"byte_end":120870,"line_start":1108,"line_end":1108,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":120875,"byte_end":120884,"line_start":1109,"line_end":1109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1475},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":121363,"byte_end":121371,"line_start":1119,"line_end":1119,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Point3D<T, U>>::try_cast","value":"pub fn try_cast<NewT: NumCast>(Self) -> Option<Point3D<NewT, U>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":120988,"byte_end":121071,"line_start":1114,"line_end":1114,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":121076,"byte_end":121079,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":121084,"byte_end":121171,"line_start":1116,"line_end":1116,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":121176,"byte_end":121264,"line_start":1117,"line_end":1117,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":121269,"byte_end":121351,"line_start":1118,"line_end":1118,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1477},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":121768,"byte_end":121774,"line_start":1134,"line_end":1134,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<Point3D<T, U>>::to_f32","value":"pub fn to_f32(Self) -> Point3D<f32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` point.\n","sig":null,"attributes":[{"value":"/ Cast into an `f32` point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":121713,"byte_end":121742,"line_start":1132,"line_end":1132,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":121747,"byte_end":121756,"line_start":1133,"line_end":1133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1478},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":121888,"byte_end":121894,"line_start":1140,"line_end":1140,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<Point3D<T, U>>::to_f64","value":"pub fn to_f64(Self) -> Point3D<f64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` point.\n","sig":null,"attributes":[{"value":"/ Cast into an `f64` point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":121833,"byte_end":121862,"line_start":1138,"line_end":1138,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":121867,"byte_end":121876,"line_start":1139,"line_end":1139,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1479},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":122247,"byte_end":122255,"line_start":1150,"line_end":1150,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<Point3D<T, U>>::to_usize","value":"pub fn to_usize(Self) -> Point3D<usize, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `usize` point, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `usize` point, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":121953,"byte_end":122012,"line_start":1144,"line_end":1144,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":122017,"byte_end":122020,"line_start":1145,"line_end":1145,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point points, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":122025,"byte_end":122101,"line_start":1146,"line_end":1146,"column_start":5,"column_end":81}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":122106,"byte_end":122180,"line_start":1147,"line_end":1147,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":122185,"byte_end":122221,"line_start":1148,"line_end":1148,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":122226,"byte_end":122235,"line_start":1149,"line_end":1149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1480},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":122608,"byte_end":122614,"line_start":1160,"line_end":1160,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<Point3D<T, U>>::to_u32","value":"pub fn to_u32(Self) -> Point3D<u32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` point, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `u32` point, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":122316,"byte_end":122373,"line_start":1154,"line_end":1154,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":122378,"byte_end":122381,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point points, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":122386,"byte_end":122462,"line_start":1156,"line_end":1156,"column_start":5,"column_end":81}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":122467,"byte_end":122541,"line_start":1157,"line_end":1157,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":122546,"byte_end":122582,"line_start":1158,"line_end":1158,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":122587,"byte_end":122596,"line_start":1159,"line_end":1159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1481},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":122965,"byte_end":122971,"line_start":1170,"line_end":1170,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<Point3D<T, U>>::to_i32","value":"pub fn to_i32(Self) -> Point3D<i32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i32` point, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i32` point, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":122673,"byte_end":122730,"line_start":1164,"line_end":1164,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":122735,"byte_end":122738,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point points, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":122743,"byte_end":122819,"line_start":1166,"line_end":1166,"column_start":5,"column_end":81}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":122824,"byte_end":122898,"line_start":1167,"line_end":1167,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":122903,"byte_end":122939,"line_start":1168,"line_end":1168,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":122944,"byte_end":122953,"line_start":1169,"line_end":1169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1482},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":123322,"byte_end":123328,"line_start":1180,"line_end":1180,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<Point3D<T, U>>::to_i64","value":"pub fn to_i64(Self) -> Point3D<i64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i64` point, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i64` point, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":123030,"byte_end":123087,"line_start":1174,"line_end":1174,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":123092,"byte_end":123095,"line_start":1175,"line_end":1175,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point points, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":123100,"byte_end":123176,"line_start":1176,"line_end":1176,"column_start":5,"column_end":81}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":123181,"byte_end":123255,"line_start":1177,"line_end":1177,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":123260,"byte_end":123296,"line_start":1178,"line_end":1178,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":123301,"byte_end":123310,"line_start":1179,"line_end":1179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1486},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":123464,"byte_end":123472,"line_start":1187,"line_end":1187,"column_start":12,"column_end":20},"name":"add_size","qualname":"<Point3D<T, U>>::add_size","value":"pub fn add_size(Self, Size3D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":123443,"byte_end":123452,"line_start":1186,"line_end":1186,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1490},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":123728,"byte_end":123739,"line_start":1198,"line_end":1198,"column_start":12,"column_end":23},"name":"distance_to","qualname":"<Point3D<T, U>>::distance_to","value":"pub fn distance_to(Self, Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":123707,"byte_end":123716,"line_start":1197,"line_end":1197,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":1616},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":129732,"byte_end":129738,"line_start":1456,"line_end":1456,"column_start":14,"column_end":20},"name":"point2","qualname":"::point::point2","value":"pub const fn point2<T, U>(T, T) -> Point2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `Point2D::new(x, y)`.\n","sig":null,"attributes":[{"value":"/ Shorthand for `Point2D::new(x, y)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":129669,"byte_end":129708,"line_start":1454,"line_end":1454,"column_start":1,"column_end":40}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":129709,"byte_end":129718,"line_start":1455,"line_end":1455,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1619},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":129912,"byte_end":129918,"line_start":1466,"line_end":1466,"column_start":14,"column_end":20},"name":"point3","qualname":"::point::point3","value":"pub const fn point3<T, U>(T, T, T) -> Point3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `Point3D::new(x, y)`.\n","sig":null,"attributes":[{"value":"/ Shorthand for `Point3D::new(x, y)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":129849,"byte_end":129888,"line_start":1464,"line_end":1464,"column_start":1,"column_end":40}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":129889,"byte_end":129898,"line_start":1465,"line_end":1465,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":1686},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":144806,"byte_end":144810,"line_start":52,"line_end":52,"column_start":12,"column_end":16},"name":"Rect","qualname":"::rect::Rect","value":"Rect { origin, size }","parent":null,"children":[{"krate":0,"index":1689},{"krate":0,"index":1690}],"decl_id":null,"docs":" A 2d Rectangle optionally tagged with a unit.","sig":null,"attributes":[{"value":"/ A 2d Rectangle optionally tagged with a unit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":144097,"byte_end":144146,"line_start":29,"line_end":29,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":144147,"byte_end":144150,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Representation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":144151,"byte_end":144171,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":144172,"byte_end":144175,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ `Rect` is represented by an origin point and a size.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":144176,"byte_end":144232,"line_start":33,"line_end":33,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":144233,"byte_end":144236,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ See [`Box2D`] for a rectangle represented by two endpoints.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":144237,"byte_end":144300,"line_start":35,"line_end":35,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":144301,"byte_end":144304,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Empty rectangle","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":144305,"byte_end":144326,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":144327,"byte_end":144330,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ A rectangle is considered empty (see [`is_empty`]) if any of the following is true:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":144331,"byte_end":144418,"line_start":39,"line_end":39,"column_start":1,"column_end":88}},{"value":"/ - it's area is empty,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":144419,"byte_end":144444,"line_start":40,"line_end":40,"column_start":1,"column_end":26}},{"value":"/ - it's area is negative (`size.x < 0` or `size.y < 0`),","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":144445,"byte_end":144504,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/ - it contains NaNs.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":144505,"byte_end":144528,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":144529,"byte_end":144532,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ [`is_empty`]: #method.is_empty","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":144533,"byte_end":144567,"line_start":44,"line_end":44,"column_start":1,"column_end":35}},{"value":"/ [`Box2D`]: struct.Box2D.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":144568,"byte_end":144600,"line_start":45,"line_end":45,"column_start":1,"column_end":33}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":144601,"byte_end":144611,"line_start":46,"line_end":46,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1689},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":144827,"byte_end":144833,"line_start":53,"line_end":53,"column_start":9,"column_end":15},"name":"origin","qualname":"::rect::Rect::origin","value":"point::Point2D<T, U>","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1690},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":144858,"byte_end":144862,"line_start":54,"line_end":54,"column_start":9,"column_end":13},"name":"size","qualname":"::rect::Rect::size","value":"size::Size2D<T, U>","parent":{"krate":0,"index":1686},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1721},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":145908,"byte_end":145911,"line_start":99,"line_end":99,"column_start":18,"column_end":21},"name":"new","qualname":"<Rect<T, U>>::new","value":"pub const fn new(Point2D<T, U>, Size2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor.\n","sig":null,"attributes":[{"value":"/ Constructor.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":145860,"byte_end":145876,"line_start":97,"line_end":97,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":145881,"byte_end":145890,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1725},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":146120,"byte_end":146124,"line_start":110,"line_end":110,"column_start":12,"column_end":16},"name":"zero","qualname":"<Rect<T, U>>::zero","value":"pub fn zero() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all sides to zero.\n","sig":null,"attributes":[{"value":"/ Constructor, setting all sides to zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":146051,"byte_end":146094,"line_start":108,"line_end":108,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":146099,"byte_end":146108,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1726},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":146280,"byte_end":146289,"line_start":116,"line_end":116,"column_start":12,"column_end":21},"name":"from_size","qualname":"<Rect<T, U>>::from_size","value":"pub fn from_size(Size2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rect of the given size, at offset zero.\n","sig":null,"attributes":[{"value":"/ Creates a rect of the given size, at offset zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":146201,"byte_end":146254,"line_start":114,"line_end":114,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":146259,"byte_end":146268,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1730},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":146498,"byte_end":146501,"line_start":129,"line_end":129,"column_start":12,"column_end":15},"name":"min","qualname":"<Rect<T, U>>::min","value":"pub fn min(&Self) -> Point2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":146477,"byte_end":146486,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1731},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":146580,"byte_end":146583,"line_start":134,"line_end":134,"column_start":12,"column_end":15},"name":"max","qualname":"<Rect<T, U>>::max","value":"pub fn max(&Self) -> Point2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":146559,"byte_end":146568,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1732},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":146674,"byte_end":146679,"line_start":139,"line_end":139,"column_start":12,"column_end":17},"name":"max_x","qualname":"<Rect<T, U>>::max_x","value":"pub fn max_x(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":146653,"byte_end":146662,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1733},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":146766,"byte_end":146771,"line_start":144,"line_end":144,"column_start":12,"column_end":17},"name":"min_x","qualname":"<Rect<T, U>>::min_x","value":"pub fn min_x(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":146745,"byte_end":146754,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1734},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":146840,"byte_end":146845,"line_start":149,"line_end":149,"column_start":12,"column_end":17},"name":"max_y","qualname":"<Rect<T, U>>::max_y","value":"pub fn max_y(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":146819,"byte_end":146828,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1735},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":146933,"byte_end":146938,"line_start":154,"line_end":154,"column_start":12,"column_end":17},"name":"min_y","qualname":"<Rect<T, U>>::min_y","value":"pub fn min_y(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":146912,"byte_end":146921,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1736},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":147007,"byte_end":147012,"line_start":159,"line_end":159,"column_start":12,"column_end":17},"name":"width","qualname":"<Rect<T, U>>::width","value":"pub fn width(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":146986,"byte_end":146995,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1737},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":147083,"byte_end":147089,"line_start":164,"line_end":164,"column_start":12,"column_end":18},"name":"height","qualname":"<Rect<T, U>>::height","value":"pub fn height(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":147062,"byte_end":147071,"line_start":163,"line_end":163,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1738},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":147161,"byte_end":147168,"line_start":169,"line_end":169,"column_start":12,"column_end":19},"name":"x_range","qualname":"<Rect<T, U>>::x_range","value":"pub fn x_range(&Self) -> Range<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":147140,"byte_end":147149,"line_start":168,"line_end":168,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1739},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":147257,"byte_end":147264,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"y_range","qualname":"<Rect<T, U>>::y_range","value":"pub fn y_range(&Self) -> Range<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":147236,"byte_end":147245,"line_start":173,"line_end":173,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1740},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":147429,"byte_end":147438,"line_start":181,"line_end":181,"column_start":12,"column_end":21},"name":"translate","qualname":"<Rect<T, U>>::translate","value":"pub fn translate(&Self, Vector2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the same rectangle, translated by a vector.\n","sig":null,"attributes":[{"value":"/ Returns the same rectangle, translated by a vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":147332,"byte_end":147387,"line_start":178,"line_end":178,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":147392,"byte_end":147401,"line_start":179,"line_end":179,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":147406,"byte_end":147417,"line_start":180,"line_end":180,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1741},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":147555,"byte_end":147563,"line_start":186,"line_end":186,"column_start":12,"column_end":20},"name":"to_box2d","qualname":"<Rect<T, U>>::to_box2d","value":"pub fn to_box2d(&Self) -> Box2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":147534,"byte_end":147543,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1745},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":147987,"byte_end":147995,"line_start":202,"line_end":202,"column_start":12,"column_end":20},"name":"contains","qualname":"<Rect<T, U>>::contains","value":"pub fn contains(&Self, Point2D<T, U>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this rectangle contains the point. Points are considered\n in the rectangle if they are on the left or top edge, but outside if they\n are on the right or bottom edge.\n","sig":null,"attributes":[{"value":"/ Returns true if this rectangle contains the point. Points are considered","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":147762,"byte_end":147838,"line_start":198,"line_end":198,"column_start":5,"column_end":81}},{"value":"/ in the rectangle if they are on the left or top edge, but outside if they","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":147843,"byte_end":147920,"line_start":199,"line_end":199,"column_start":5,"column_end":82}},{"value":"/ are on the right or bottom edge.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":147925,"byte_end":147961,"line_start":200,"line_end":200,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":147966,"byte_end":147975,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1746},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":148099,"byte_end":148109,"line_start":207,"line_end":207,"column_start":12,"column_end":22},"name":"intersects","qualname":"<Rect<T, U>>::intersects","value":"pub fn intersects(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":148078,"byte_end":148087,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1750},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":148327,"byte_end":148339,"line_start":217,"line_end":217,"column_start":12,"column_end":24},"name":"intersection","qualname":"<Rect<T, U>>::intersection","value":"pub fn intersection(&Self, &Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":148306,"byte_end":148315,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1754},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":148690,"byte_end":148697,"line_start":234,"line_end":234,"column_start":12,"column_end":19},"name":"inflate","qualname":"<Rect<T, U>>::inflate","value":"pub fn inflate(&Self, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":148653,"byte_end":148662,"line_start":232,"line_end":232,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":148667,"byte_end":148678,"line_start":233,"line_end":233,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1758},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":149295,"byte_end":149308,"line_start":253,"line_end":253,"column_start":12,"column_end":25},"name":"contains_rect","qualname":"<Rect<T, U>>::contains_rect","value":"pub fn contains_rect(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this rectangle contains the interior of rect. Always\n returns true if rect is empty, and always returns false if rect is\n nonempty but this rectangle is empty.\n","sig":null,"attributes":[{"value":"/ Returns true if this rectangle contains the interior of rect. Always","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":149076,"byte_end":149148,"line_start":249,"line_end":249,"column_start":5,"column_end":77}},{"value":"/ returns true if rect is empty, and always returns false if rect is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":149153,"byte_end":149223,"line_start":250,"line_end":250,"column_start":5,"column_end":75}},{"value":"/ nonempty but this rectangle is empty.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":149228,"byte_end":149269,"line_start":251,"line_end":251,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":149274,"byte_end":149283,"line_start":252,"line_end":252,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1762},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":149943,"byte_end":149953,"line_start":271,"line_end":271,"column_start":12,"column_end":22},"name":"inner_rect","qualname":"<Rect<T, U>>::inner_rect","value":"pub fn inner_rect(&Self, SideOffsets2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculate the size and position of an inner rectangle.","sig":null,"attributes":[{"value":"/ Calculate the size and position of an inner rectangle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":149671,"byte_end":149729,"line_start":266,"line_end":266,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":149734,"byte_end":149737,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Subtracts the side offsets from all sides. The horizontal and vertical","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":149742,"byte_end":149816,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ offsets must not be larger than the original side length.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":149821,"byte_end":149882,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/ This method assumes y oriented downward.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":149887,"byte_end":149931,"line_start":270,"line_end":270,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1766},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":150703,"byte_end":150713,"line_start":293,"line_end":293,"column_start":12,"column_end":22},"name":"outer_rect","qualname":"<Rect<T, U>>::outer_rect","value":"pub fn outer_rect(&Self, SideOffsets2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculate the size and position of an outer rectangle.","sig":null,"attributes":[{"value":"/ Calculate the size and position of an outer rectangle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":150502,"byte_end":150560,"line_start":289,"line_end":289,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":150565,"byte_end":150568,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ Add the offsets to all sides. The expanded rectangle is returned.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":150573,"byte_end":150642,"line_start":291,"line_end":291,"column_start":5,"column_end":74}},{"value":"/ This method assumes y oriented downward.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":150647,"byte_end":150691,"line_start":292,"line_end":292,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1770},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":151683,"byte_end":151694,"line_start":317,"line_end":317,"column_start":12,"column_end":23},"name":"from_points","qualname":"<Rect<T, U>>::from_points","value":"pub fn from_points<I>(I) -> Self where I: IntoIterator,\nI::Item: Borrow<Point2D<T, U>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest rectangle defined by the top/bottom/left/right-most\n points provided as parameter.","sig":null,"attributes":[{"value":"/ Returns the smallest rectangle defined by the top/bottom/left/right-most","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":151123,"byte_end":151199,"line_start":308,"line_end":308,"column_start":5,"column_end":81}},{"value":"/ points provided as parameter.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":151204,"byte_end":151237,"line_start":309,"line_end":309,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":151242,"byte_end":151245,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ Note: This function has a behavior that can be surprising because","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":151250,"byte_end":151319,"line_start":311,"line_end":311,"column_start":5,"column_end":74}},{"value":"/ the right-most and bottom-most points are exactly on the edge","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":151324,"byte_end":151389,"line_start":312,"line_end":312,"column_start":5,"column_end":70}},{"value":"/ of the rectangle while the `contains` function is has exclusive","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":151394,"byte_end":151461,"line_start":313,"line_end":313,"column_start":5,"column_end":72}},{"value":"/ semantic on these edges. This means that the right-most and bottom-most","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":151466,"byte_end":151541,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ points provided to `from_points` will count as not contained by the rect.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":151546,"byte_end":151623,"line_start":315,"line_end":315,"column_start":5,"column_end":82}},{"value":"/ This behavior may change in the future.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":151628,"byte_end":151671,"line_start":316,"line_end":316,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1775},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":152055,"byte_end":152059,"line_start":332,"line_end":332,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Rect<T, U>>::lerp","value":"pub fn lerp(&Self, Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between this rectangle and another rectangle.\n","sig":null,"attributes":[{"value":"/ Linearly interpolate between this rectangle and another rectangle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":151959,"byte_end":152029,"line_start":330,"line_end":330,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":152034,"byte_end":152043,"line_start":331,"line_end":331,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1779},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":152320,"byte_end":152326,"line_start":344,"line_end":344,"column_start":12,"column_end":18},"name":"center","qualname":"<Rect<T, U>>::center","value":"pub fn center(&Self) -> Point2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1783},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":152581,"byte_end":152586,"line_start":355,"line_end":355,"column_start":12,"column_end":17},"name":"union","qualname":"<Rect<T, U>>::union","value":"pub fn union(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":152560,"byte_end":152569,"line_start":354,"line_end":354,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1787},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":152888,"byte_end":152893,"line_start":369,"line_end":369,"column_start":12,"column_end":17},"name":"scale","qualname":"<Rect<T, U>>::scale","value":"pub fn scale<S: Copy>(&Self, S, S) -> Self where T: Copy + Mul<S, Output = T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":152867,"byte_end":152876,"line_start":368,"line_end":368,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1792},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":153230,"byte_end":153234,"line_start":382,"line_end":382,"column_start":12,"column_end":16},"name":"area","qualname":"<Rect<T, U>>::area","value":"pub fn area(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":153209,"byte_end":153218,"line_start":381,"line_end":381,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1796},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":153358,"byte_end":153366,"line_start":389,"line_end":389,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Rect<T, U>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":153337,"byte_end":153346,"line_start":388,"line_end":388,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1800},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":153497,"byte_end":153509,"line_start":396,"line_end":396,"column_start":12,"column_end":24},"name":"to_non_empty","qualname":"<Rect<T, U>>::to_non_empty","value":"pub fn to_non_empty(&Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":153476,"byte_end":153485,"line_start":395,"line_end":395,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1842},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":155437,"byte_end":155447,"line_start":474,"line_end":474,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Rect<T, U>>::to_untyped","value":"pub fn to_untyped(&Self) -> Rect<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":155357,"byte_end":155411,"line_start":472,"line_end":472,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":155416,"byte_end":155425,"line_start":473,"line_end":473,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1843},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":155622,"byte_end":155634,"line_start":480,"line_end":480,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Rect<T, U>>::from_untyped","value":"pub fn from_untyped(&Rect<T, UnknownUnit>) -> Rect<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":155560,"byte_end":155596,"line_start":478,"line_end":478,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":155601,"byte_end":155610,"line_start":479,"line_end":479,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1844},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":155847,"byte_end":155856,"line_start":489,"line_end":489,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Rect<T, U>>::cast_unit","value":"pub fn cast_unit<V>(&Self) -> Rect<T, V>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit\n","sig":null,"attributes":[{"value":"/ Cast the unit","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":155804,"byte_end":155821,"line_start":487,"line_end":487,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":155826,"byte_end":155835,"line_start":488,"line_end":488,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1849},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":156382,"byte_end":156386,"line_start":501,"line_end":501,"column_start":12,"column_end":16},"name":"cast","qualname":"<Rect<T, U>>::cast","value":"pub fn cast<NewT: NumCast>(&Self) -> Rect<NewT, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":156002,"byte_end":156076,"line_start":495,"line_end":495,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":156081,"byte_end":156084,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":156089,"byte_end":156176,"line_start":497,"line_end":497,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":156181,"byte_end":156269,"line_start":498,"line_end":498,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using round(), round_in or round_out() before casting.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":156274,"byte_end":156356,"line_start":499,"line_end":499,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":156361,"byte_end":156370,"line_start":500,"line_end":500,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1851},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":156870,"byte_end":156878,"line_start":510,"line_end":510,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Rect<T, U>>::try_cast","value":"pub fn try_cast<NewT: NumCast>(&Self) -> Option<Rect<NewT, U>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":156495,"byte_end":156578,"line_start":505,"line_end":505,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":156583,"byte_end":156586,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":156591,"byte_end":156678,"line_start":507,"line_end":507,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":156683,"byte_end":156771,"line_start":508,"line_end":508,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using round(), round_in or round_out() before casting.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":156776,"byte_end":156858,"line_start":509,"line_end":509,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1853},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":157214,"byte_end":157220,"line_start":521,"line_end":521,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<Rect<T, U>>::to_f32","value":"pub fn to_f32(&Self) -> Rect<f32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` rectangle.\n","sig":null,"attributes":[{"value":"/ Cast into an `f32` rectangle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":157155,"byte_end":157188,"line_start":519,"line_end":519,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":157193,"byte_end":157202,"line_start":520,"line_end":520,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1854},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":157336,"byte_end":157342,"line_start":527,"line_end":527,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<Rect<T, U>>::to_f64","value":"pub fn to_f64(&Self) -> Rect<f64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` rectangle.\n","sig":null,"attributes":[{"value":"/ Cast into an `f64` rectangle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":157277,"byte_end":157310,"line_start":525,"line_end":525,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":157315,"byte_end":157324,"line_start":526,"line_end":526,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1855},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":157709,"byte_end":157717,"line_start":537,"line_end":537,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<Rect<T, U>>::to_usize","value":"pub fn to_usize(&Self) -> Rect<usize, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `usize` rectangle, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `usize` rectangle, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":157399,"byte_end":157462,"line_start":531,"line_end":531,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":157467,"byte_end":157470,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point rectangles, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":157475,"byte_end":157555,"line_start":533,"line_end":533,"column_start":5,"column_end":85}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":157560,"byte_end":157635,"line_start":534,"line_end":534,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":157640,"byte_end":157683,"line_start":535,"line_end":535,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":157688,"byte_end":157697,"line_start":536,"line_end":536,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1856},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":158084,"byte_end":158090,"line_start":547,"line_end":547,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<Rect<T, U>>::to_u32","value":"pub fn to_u32(&Self) -> Rect<u32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` rectangle, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `u32` rectangle, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":157776,"byte_end":157837,"line_start":541,"line_end":541,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":157842,"byte_end":157845,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point rectangles, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":157850,"byte_end":157930,"line_start":543,"line_end":543,"column_start":5,"column_end":85}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":157935,"byte_end":158010,"line_start":544,"line_end":544,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":158015,"byte_end":158058,"line_start":545,"line_end":545,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":158063,"byte_end":158072,"line_start":546,"line_end":546,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1857},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":158455,"byte_end":158461,"line_start":557,"line_end":557,"column_start":12,"column_end":18},"name":"to_u64","qualname":"<Rect<T, U>>::to_u64","value":"pub fn to_u64(&Self) -> Rect<u64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u64` rectangle, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `u64` rectangle, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":158147,"byte_end":158208,"line_start":551,"line_end":551,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":158213,"byte_end":158216,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point rectangles, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":158221,"byte_end":158301,"line_start":553,"line_end":553,"column_start":5,"column_end":85}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":158306,"byte_end":158381,"line_start":554,"line_end":554,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":158386,"byte_end":158429,"line_start":555,"line_end":555,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":158434,"byte_end":158443,"line_start":556,"line_end":556,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1858},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":158826,"byte_end":158832,"line_start":567,"line_end":567,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<Rect<T, U>>::to_i32","value":"pub fn to_i32(&Self) -> Rect<i32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i32` rectangle, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i32` rectangle, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":158518,"byte_end":158579,"line_start":561,"line_end":561,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":158584,"byte_end":158587,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point rectangles, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":158592,"byte_end":158672,"line_start":563,"line_end":563,"column_start":5,"column_end":85}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":158677,"byte_end":158752,"line_start":564,"line_end":564,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":158757,"byte_end":158800,"line_start":565,"line_end":565,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":158805,"byte_end":158814,"line_start":566,"line_end":566,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1859},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":159197,"byte_end":159203,"line_start":577,"line_end":577,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<Rect<T, U>>::to_i64","value":"pub fn to_i64(&Self) -> Rect<i64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i64` rectangle, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i64` rectangle, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":158889,"byte_end":158950,"line_start":571,"line_end":571,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":158955,"byte_end":158958,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point rectangles, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":158963,"byte_end":159043,"line_start":573,"line_end":573,"column_start":5,"column_end":85}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":159048,"byte_end":159123,"line_start":574,"line_end":574,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":159128,"byte_end":159171,"line_start":575,"line_end":575,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":159176,"byte_end":159185,"line_start":576,"line_end":576,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1863},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":160198,"byte_end":160203,"line_start":600,"line_end":600,"column_start":12,"column_end":17},"name":"round","qualname":"<Rect<T, U>>::round","value":"pub fn round(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a rectangle with edges rounded to integer coordinates, such that\n the returned rectangle has the same set of pixel centers as the original\n one.\n Edges at offset 0.5 round up.\n Suitable for most places where integral device coordinates\n are needed, but note that any translation should be applied first to\n avoid pixel rounding errors.\n Note that this is *not* rounding to nearest integer if the values are negative.\n They are always rounding as floor(n + 0.5).","sig":null,"attributes":[{"value":"/ Return a rectangle with edges rounded to integer coordinates, such that","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":159350,"byte_end":159425,"line_start":583,"line_end":583,"column_start":5,"column_end":80}},{"value":"/ the returned rectangle has the same set of pixel centers as the original","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":159430,"byte_end":159506,"line_start":584,"line_end":584,"column_start":5,"column_end":81}},{"value":"/ one.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":159511,"byte_end":159519,"line_start":585,"line_end":585,"column_start":5,"column_end":13}},{"value":"/ Edges at offset 0.5 round up.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":159524,"byte_end":159557,"line_start":586,"line_end":586,"column_start":5,"column_end":38}},{"value":"/ Suitable for most places where integral device coordinates","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":159562,"byte_end":159624,"line_start":587,"line_end":587,"column_start":5,"column_end":67}},{"value":"/ are needed, but note that any translation should be applied first to","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":159629,"byte_end":159701,"line_start":588,"line_end":588,"column_start":5,"column_end":77}},{"value":"/ avoid pixel rounding errors.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":159706,"byte_end":159738,"line_start":589,"line_end":589,"column_start":5,"column_end":37}},{"value":"/ Note that this is *not* rounding to nearest integer if the values are negative.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":159743,"byte_end":159826,"line_start":590,"line_end":590,"column_start":5,"column_end":88}},{"value":"/ They are always rounding as floor(n + 0.5).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":159831,"byte_end":159878,"line_start":591,"line_end":591,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":159883,"byte_end":159886,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ # Usage notes","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":159891,"byte_end":159908,"line_start":593,"line_end":593,"column_start":5,"column_end":22}},{"value":"/ Note, that when using with floating-point `T` types that method can significantly","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":159913,"byte_end":159998,"line_start":594,"line_end":594,"column_start":5,"column_end":90}},{"value":"/ loose precision for large values, so if you need to call this method very often it","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":160003,"byte_end":160089,"line_start":595,"line_end":595,"column_start":5,"column_end":91}},{"value":"/ is better to use [`Box2D`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":160094,"byte_end":160125,"line_start":596,"line_end":596,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":160130,"byte_end":160133,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ [`Box2D`]: struct.Box2D.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":160138,"byte_end":160170,"line_start":598,"line_end":598,"column_start":5,"column_end":37}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":160175,"byte_end":160186,"line_start":599,"line_end":599,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1864},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":160734,"byte_end":160742,"line_start":614,"line_end":614,"column_start":12,"column_end":20},"name":"round_in","qualname":"<Rect<T, U>>::round_in","value":"pub fn round_in(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a rectangle with edges rounded to integer coordinates, such that\n the original rectangle contains the resulting rectangle.","sig":null,"attributes":[{"value":"/ Return a rectangle with edges rounded to integer coordinates, such that","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":160274,"byte_end":160349,"line_start":604,"line_end":604,"column_start":5,"column_end":80}},{"value":"/ the original rectangle contains the resulting rectangle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":160354,"byte_end":160414,"line_start":605,"line_end":605,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":160419,"byte_end":160422,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ # Usage notes","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":160427,"byte_end":160444,"line_start":607,"line_end":607,"column_start":5,"column_end":22}},{"value":"/ Note, that when using with floating-point `T` types that method can significantly","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":160449,"byte_end":160534,"line_start":608,"line_end":608,"column_start":5,"column_end":90}},{"value":"/ loose precision for large values, so if you need to call this method very often it","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":160539,"byte_end":160625,"line_start":609,"line_end":609,"column_start":5,"column_end":91}},{"value":"/ is better to use [`Box2D`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":160630,"byte_end":160661,"line_start":610,"line_end":610,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":160666,"byte_end":160669,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ [`Box2D`]: struct.Box2D.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":160674,"byte_end":160706,"line_start":612,"line_end":612,"column_start":5,"column_end":37}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":160711,"byte_end":160722,"line_start":613,"line_end":613,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1865},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":161283,"byte_end":161292,"line_start":628,"line_end":628,"column_start":12,"column_end":21},"name":"round_out","qualname":"<Rect<T, U>>::round_out","value":"pub fn round_out(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a rectangle with edges rounded to integer coordinates, such that\n the original rectangle is contained in the resulting rectangle.","sig":null,"attributes":[{"value":"/ Return a rectangle with edges rounded to integer coordinates, such that","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":160816,"byte_end":160891,"line_start":618,"line_end":618,"column_start":5,"column_end":80}},{"value":"/ the original rectangle is contained in the resulting rectangle.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":160896,"byte_end":160963,"line_start":619,"line_end":619,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":160968,"byte_end":160971,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Usage notes","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":160976,"byte_end":160993,"line_start":621,"line_end":621,"column_start":5,"column_end":22}},{"value":"/ Note, that when using with floating-point `T` types that method can significantly","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":160998,"byte_end":161083,"line_start":622,"line_end":622,"column_start":5,"column_end":90}},{"value":"/ loose precision for large values, so if you need to call this method very often it","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":161088,"byte_end":161174,"line_start":623,"line_end":623,"column_start":5,"column_end":91}},{"value":"/ is better to use [`Box2D`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":161179,"byte_end":161210,"line_start":624,"line_end":624,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":161215,"byte_end":161218,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ [`Box2D`]: struct.Box2D.html","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":161223,"byte_end":161255,"line_start":626,"line_end":626,"column_start":5,"column_end":37}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":161260,"byte_end":161271,"line_start":627,"line_end":627,"column_start":5,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":1870},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":161595,"byte_end":161599,"line_start":643,"line_end":643,"column_start":14,"column_end":18},"name":"rect","qualname":"::rect::rect","value":"pub const fn rect<T, U>(T, T, T, T) -> Rect<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `Rect::new(Point2D::new(x, y), Size2D::new(w, h))`.\n","sig":null,"attributes":[{"value":"/ Shorthand for `Rect::new(Point2D::new(x, y), Size2D::new(w, h))`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":161512,"byte_end":161581,"line_start":642,"line_end":642,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":4547},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":171791,"byte_end":171807,"line_start":23,"line_end":23,"column_start":12,"column_end":28},"name":"RigidTransform3D","qualname":"::rigid::RigidTransform3D","value":"RigidTransform3D { rotation, translation }","parent":null,"children":[{"krate":0,"index":4551},{"krate":0,"index":4552}],"decl_id":null,"docs":" A rigid transformation. All lengths are preserved under such a transformation.","sig":null,"attributes":[{"value":"/ A rigid transformation. All lengths are preserved under such a transformation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":171283,"byte_end":171365,"line_start":12,"line_end":12,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":171366,"byte_end":171369,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":171370,"byte_end":171373,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Internally, this is a rotation and a translation, with the rotation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":171374,"byte_end":171445,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ applied first (i.e. `Rotation * Translation`, in row-vector notation)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":171446,"byte_end":171519,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":171520,"byte_end":171523,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This can be more efficient to use over full matrices, especially if you","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":171524,"byte_end":171599,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ have to deal with the decomposed quantities often.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":171600,"byte_end":171654,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":171769,"byte_end":171779,"line_start":22,"line_end":22,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":4551},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":171831,"byte_end":171839,"line_start":24,"line_end":24,"column_start":9,"column_end":17},"name":"rotation","qualname":"::rigid::RigidTransform3D::rotation","value":"rotation::Rotation3D<T, Src, Dst>","parent":{"krate":0,"index":4547},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4552},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":171874,"byte_end":171885,"line_start":25,"line_end":25,"column_start":9,"column_end":20},"name":"translation","qualname":"::rigid::RigidTransform3D::translation","value":"vector::Vector3D<T, Dst>","parent":{"krate":0,"index":4547},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1900},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":172070,"byte_end":172073,"line_start":31,"line_end":31,"column_start":18,"column_end":21},"name":"new","qualname":"<RigidTransform3D<T, Src, Dst>>::new","value":"pub const fn new(Rotation3D<T, Src, Dst>, Vector3D<T, Dst>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new rigid transformation, where the `rotation` applies first\n","sig":null,"attributes":[{"value":"/ Construct a new rigid transformation, where the `rotation` applies first","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":171962,"byte_end":172038,"line_start":29,"line_end":29,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":172043,"byte_end":172052,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1905},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":172298,"byte_end":172307,"line_start":40,"line_end":40,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<RigidTransform3D<T, Src, Dst>>::cast_unit","value":"pub fn cast_unit<Src2, Dst2>(&Self) -> RigidTransform3D<T, Src2, Dst2>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1912},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":172650,"byte_end":172658,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"identity","qualname":"<RigidTransform3D<T, Src, Dst>>::identity","value":"pub fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct an identity transform\n","sig":null,"attributes":[{"value":"/ Construct an identity transform","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":172589,"byte_end":172624,"line_start":49,"line_end":49,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":172629,"byte_end":172638,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1913},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":172901,"byte_end":172918,"line_start":60,"line_end":60,"column_start":12,"column_end":29},"name":"new_from_reversed","qualname":"<RigidTransform3D<T, Src, Dst>>::new_from_reversed","value":"pub fn new_from_reversed(Vector3D<T, Src>, Rotation3D<T, Src, Dst>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new rigid transformation, where the `translation` applies first\n","sig":null,"attributes":[{"value":"/ Construct a new rigid transformation, where the `translation` applies first","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":172796,"byte_end":172875,"line_start":58,"line_end":58,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":172880,"byte_end":172889,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1914},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":173476,"byte_end":173489,"line_start":81,"line_end":81,"column_start":12,"column_end":25},"name":"from_rotation","qualname":"<RigidTransform3D<T, Src, Dst>>::from_rotation","value":"pub fn from_rotation(Rotation3D<T, Src, Dst>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":173455,"byte_end":173464,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1915},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":173657,"byte_end":173673,"line_start":89,"line_end":89,"column_start":12,"column_end":28},"name":"from_translation","qualname":"<RigidTransform3D<T, Src, Dst>>::from_translation","value":"pub fn from_translation(Vector3D<T, Dst>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":173636,"byte_end":173645,"line_start":88,"line_end":88,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1916},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":173994,"byte_end":174012,"line_start":100,"line_end":100,"column_start":12,"column_end":30},"name":"decompose_reversed","qualname":"<RigidTransform3D<T, Src, Dst>>::decompose_reversed","value":"pub fn decompose_reversed(&Self)\n-> (Vector3D<T, Src>, Rotation3D<T, Src, Dst>)","parent":null,"children":[],"decl_id":null,"docs":" Decompose this into a translation and an rotation to be applied in the opposite order","sig":null,"attributes":[{"value":"/ Decompose this into a translation and an rotation to be applied in the opposite order","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":173822,"byte_end":173911,"line_start":96,"line_end":96,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":173916,"byte_end":173919,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ i.e., the translation is applied _first_","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":173924,"byte_end":173968,"line_start":98,"line_end":98,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":173973,"byte_end":173982,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1917},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":174624,"byte_end":174628,"line_start":117,"line_end":117,"column_start":12,"column_end":16},"name":"then","qualname":"<RigidTransform3D<T, Src, Dst>>::then","value":"pub fn then<Dst2>(&Self, &RigidTransform3D<T, Dst, Dst2>)\n-> RigidTransform3D<T, Src, Dst2>","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplication of the two transforms such that\n other's transformation applies after self's transformation.","sig":null,"attributes":[{"value":"/ Returns the multiplication of the two transforms such that","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":174394,"byte_end":174456,"line_start":112,"line_end":112,"column_start":5,"column_end":67}},{"value":"/ other's transformation applies after self's transformation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":174461,"byte_end":174524,"line_start":113,"line_end":113,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":174529,"byte_end":174532,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ i.e., this produces `self * other` in row-vector notation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":174537,"byte_end":174598,"line_start":115,"line_end":115,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":174603,"byte_end":174612,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1919},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":175518,"byte_end":175525,"line_start":144,"line_end":144,"column_start":12,"column_end":19},"name":"inverse","qualname":"<RigidTransform3D<T, Src, Dst>>::inverse","value":"pub fn inverse(&Self) -> RigidTransform3D<T, Dst, Src>","parent":null,"children":[],"decl_id":null,"docs":" Inverts the transformation\n","sig":null,"attributes":[{"value":"/ Inverts the transformation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":175462,"byte_end":175492,"line_start":142,"line_end":142,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":175497,"byte_end":175506,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1920},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":176076,"byte_end":176088,"line_start":160,"line_end":160,"column_start":12,"column_end":24},"name":"to_transform","qualname":"<RigidTransform3D<T, Src, Dst>>::to_transform","value":"pub fn to_transform(&Self) -> Transform3D<T, Src, Dst> where T: Trig","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1921},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":176324,"byte_end":176334,"line_start":169,"line_end":169,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<RigidTransform3D<T, Src, Dst>>::to_untyped","value":"pub fn to_untyped(&Self) -> RigidTransform3D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":176244,"byte_end":176298,"line_start":167,"line_end":167,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":176303,"byte_end":176312,"line_start":168,"line_end":168,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1922},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":176609,"byte_end":176621,"line_start":178,"line_end":178,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<RigidTransform3D<T, Src, Dst>>::from_untyped","value":"pub fn from_untyped(&RigidTransform3D<T, UnknownUnit, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":176547,"byte_end":176583,"line_start":176,"line_end":176,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":176588,"byte_end":176597,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2017},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":180888,"byte_end":180898,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"Rotation2D","qualname":"::rotation::Rotation2D","value":"Rotation2D { angle, _unit }","parent":null,"children":[{"krate":0,"index":2021},{"krate":0,"index":2022}],"decl_id":null,"docs":" A transform that can represent rotations in 2d, represented as an angle in radians.\n","sig":null,"attributes":[{"value":"/ A transform that can represent rotations in 2d, represented as an angle in radians.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":180559,"byte_end":180646,"line_start":23,"line_end":23,"column_start":1,"column_end":88}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":180647,"byte_end":180657,"line_start":24,"line_end":24,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2021},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":180947,"byte_end":180952,"line_start":35,"line_end":35,"column_start":9,"column_end":14},"name":"angle","qualname":"::rotation::Rotation2D::angle","value":"T","parent":{"krate":0,"index":2017},"children":[],"decl_id":null,"docs":" Angle in radians\n","sig":null,"attributes":[{"value":"/ Angle in radians","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":180918,"byte_end":180938,"line_start":34,"line_end":34,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":2022},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":180984,"byte_end":180989,"line_start":37,"line_end":37,"column_start":9,"column_end":14},"name":"_unit","qualname":"::rotation::Rotation2D::_unit","value":"core::marker::PhantomData<(Src, Dst)>","parent":{"krate":0,"index":2017},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2051},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":181799,"byte_end":181802,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"new","qualname":"<Rotation2D<T, Src, Dst>>::new","value":"pub fn new(Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation from an angle in radians.\n","sig":null,"attributes":[{"value":"/ Creates a rotation from an angle in radians.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":181725,"byte_end":181773,"line_start":72,"line_end":72,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":181778,"byte_end":181787,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2052},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":181998,"byte_end":182005,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"radians","qualname":"<Rotation2D<T, Src, Dst>>::radians","value":"pub fn radians(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation from an angle in radians.\n","sig":null,"attributes":[{"value":"/ Creates a rotation from an angle in radians.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":181938,"byte_end":181986,"line_start":81,"line_end":81,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2053},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":182138,"byte_end":182146,"line_start":88,"line_end":88,"column_start":12,"column_end":20},"name":"identity","qualname":"<Rotation2D<T, Src, Dst>>::identity","value":"pub fn identity() -> Self where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" Creates the identity rotation.\n","sig":null,"attributes":[{"value":"/ Creates the identity rotation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":182078,"byte_end":182112,"line_start":86,"line_end":86,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":182117,"byte_end":182126,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2058},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":182729,"byte_end":182738,"line_start":114,"line_end":114,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Rotation2D<T, Src, Dst>>::cast_unit","value":"pub fn cast_unit<Src2, Dst2>(&Self) -> Rotation2D<T, Src2, Dst2>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit, preserving the numeric value.","sig":null,"attributes":[{"value":"/ Cast the unit, preserving the numeric value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":182286,"byte_end":182334,"line_start":97,"line_end":97,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":182339,"byte_end":182342,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":182347,"byte_end":182360,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":182365,"byte_end":182368,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":182373,"byte_end":182384,"line_start":101,"line_end":101,"column_start":5,"column_end":16}},{"value":"/ # use euclid::Rotation2D;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":182389,"byte_end":182418,"line_start":102,"line_end":102,"column_start":5,"column_end":34}},{"value":"/ enum Local {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":182423,"byte_end":182440,"line_start":103,"line_end":103,"column_start":5,"column_end":22}},{"value":"/ enum World {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":182445,"byte_end":182462,"line_start":104,"line_end":104,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":182467,"byte_end":182470,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ enum Local2 {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":182475,"byte_end":182493,"line_start":106,"line_end":106,"column_start":5,"column_end":23}},{"value":"/ enum World2 {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":182498,"byte_end":182516,"line_start":107,"line_end":107,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":182521,"byte_end":182524,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ let to_world: Rotation2D<_, Local, World> = Rotation2D::radians(42);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":182529,"byte_end":182601,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":182606,"byte_end":182609,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(to_world.angle, to_world.cast_unit::<Local2, World2>().angle);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":182614,"byte_end":182691,"line_start":111,"line_end":111,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":182696,"byte_end":182703,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":182708,"byte_end":182717,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2061},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":183272,"byte_end":183282,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Rotation2D<T, Src, Dst>>::to_untyped","value":"pub fn to_untyped(&Self) -> Rotation2D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":182894,"byte_end":182948,"line_start":121,"line_end":121,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":182953,"byte_end":182956,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":182961,"byte_end":182974,"line_start":123,"line_end":123,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":182979,"byte_end":182982,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":182987,"byte_end":182998,"line_start":125,"line_end":125,"column_start":5,"column_end":16}},{"value":"/ # use euclid::Rotation2D;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":183003,"byte_end":183032,"line_start":126,"line_end":126,"column_start":5,"column_end":34}},{"value":"/ enum Local {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":183037,"byte_end":183054,"line_start":127,"line_end":127,"column_start":5,"column_end":22}},{"value":"/ enum World {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":183059,"byte_end":183076,"line_start":128,"line_end":128,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":183081,"byte_end":183084,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ let to_world: Rotation2D<_, Local, World> = Rotation2D::radians(42);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":183089,"byte_end":183161,"line_start":130,"line_end":130,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":183166,"byte_end":183169,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(to_world.angle, to_world.to_untyped().angle);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":183174,"byte_end":183234,"line_start":132,"line_end":132,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":183239,"byte_end":183246,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":183251,"byte_end":183260,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2062},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":183794,"byte_end":183806,"line_start":154,"line_end":154,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Rotation2D<T, Src, Dst>>::from_untyped","value":"pub fn from_untyped(&Rotation2D<T, UnknownUnit, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":183371,"byte_end":183407,"line_start":139,"line_end":139,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":183412,"byte_end":183415,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":183420,"byte_end":183433,"line_start":141,"line_end":141,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":183438,"byte_end":183441,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":183446,"byte_end":183457,"line_start":143,"line_end":143,"column_start":5,"column_end":16}},{"value":"/ # use euclid::Rotation2D;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":183462,"byte_end":183491,"line_start":144,"line_end":144,"column_start":5,"column_end":34}},{"value":"/ use euclid::UnknownUnit;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":183496,"byte_end":183524,"line_start":145,"line_end":145,"column_start":5,"column_end":33}},{"value":"/ enum Local {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":183529,"byte_end":183546,"line_start":146,"line_end":146,"column_start":5,"column_end":22}},{"value":"/ enum World {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":183551,"byte_end":183568,"line_start":147,"line_end":147,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":183573,"byte_end":183576,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ let rot: Rotation2D<_, UnknownUnit, UnknownUnit> = Rotation2D::radians(42);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":183581,"byte_end":183660,"line_start":149,"line_end":149,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":183665,"byte_end":183668,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(rot.angle, Rotation2D::<_, Local, World>::from_untyped(&rot).angle);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":183673,"byte_end":183756,"line_start":151,"line_end":151,"column_start":5,"column_end":88}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":183761,"byte_end":183768,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":183773,"byte_end":183782,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2067},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":184026,"byte_end":184035,"line_start":164,"line_end":164,"column_start":12,"column_end":21},"name":"get_angle","qualname":"<Rotation2D<T, Src, Dst>>::get_angle","value":"pub fn get_angle(&Self) -> Angle<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns self.angle as a strongly typed `Angle<T>`.\n","sig":null,"attributes":[{"value":"/ Returns self.angle as a strongly typed `Angle<T>`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":183960,"byte_end":184014,"line_start":163,"line_end":163,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2072},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":184250,"byte_end":184255,"line_start":172,"line_end":172,"column_start":12,"column_end":17},"name":"to_3d","qualname":"<Rotation2D<T, Src, Dst>>::to_3d","value":"pub fn to_3d(&Self) -> Rotation3D<T, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Creates a 3d rotation (around the z axis) from this 2d rotation.\n","sig":null,"attributes":[{"value":"/ Creates a 3d rotation (around the z axis) from this 2d rotation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":184156,"byte_end":184224,"line_start":170,"line_end":170,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":184229,"byte_end":184238,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2073},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":184417,"byte_end":184424,"line_start":178,"line_end":178,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Rotation2D<T, Src, Dst>>::inverse","value":"pub fn inverse(&Self) -> Rotation2D<T, Dst, Src>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inverse of this rotation.\n","sig":null,"attributes":[{"value":"/ Returns the inverse of this rotation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":184350,"byte_end":184391,"line_start":176,"line_end":176,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":184396,"byte_end":184405,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2074},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":184620,"byte_end":184624,"line_start":184,"line_end":184,"column_start":12,"column_end":16},"name":"then","qualname":"<Rotation2D<T, Src, Dst>>::then","value":"pub fn then<NewSrc>(&Self, &Rotation2D<T, NewSrc, Src>)\n-> Rotation2D<T, NewSrc, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns a rotation representing the other rotation followed by this rotation.\n","sig":null,"attributes":[{"value":"/ Returns a rotation representing the other rotation followed by this rotation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":184513,"byte_end":184594,"line_start":182,"line_end":182,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":184599,"byte_end":184608,"line_start":183,"line_end":183,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2076},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":184981,"byte_end":184996,"line_start":195,"line_end":195,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Rotation2D<T, Src, Dst>>::transform_point","value":"pub fn transform_point(&Self, Point2D<T, Src>) -> Point2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 2d point transformed by this rotation.","sig":null,"attributes":[{"value":"/ Returns the given 2d point transformed by this rotation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":184796,"byte_end":184856,"line_start":191,"line_end":191,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":184861,"byte_end":184864,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ The input point must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":184869,"byte_end":184955,"line_start":193,"line_end":193,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":184960,"byte_end":184969,"line_start":194,"line_end":194,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2077},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":185376,"byte_end":185392,"line_start":204,"line_end":204,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<Rotation2D<T, Src, Dst>>::transform_vector","value":"pub fn transform_vector(&Self, Vector2D<T, Src>) -> Vector2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 2d vector transformed by this rotation.","sig":null,"attributes":[{"value":"/ Returns the given 2d vector transformed by this rotation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":185190,"byte_end":185251,"line_start":200,"line_end":200,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":185256,"byte_end":185259,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The input point must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":185264,"byte_end":185350,"line_start":202,"line_end":202,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":185355,"byte_end":185364,"line_start":203,"line_end":203,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2082},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":185733,"byte_end":185745,"line_start":215,"line_end":215,"column_start":12,"column_end":24},"name":"to_transform","qualname":"<Rotation2D<T, Src, Dst>>::to_transform","value":"pub fn to_transform(&Self) -> Transform2D<T, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the matrix representation of this rotation.\n","sig":null,"attributes":[{"value":"/ Returns the matrix representation of this rotation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":185652,"byte_end":185707,"line_start":213,"line_end":213,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":185712,"byte_end":185721,"line_start":214,"line_end":214,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2083},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":186591,"byte_end":186601,"line_start":238,"line_end":238,"column_start":12,"column_end":22},"name":"Rotation3D","qualname":"::rotation::Rotation3D","value":"Rotation3D { i, j, k, r, _unit }","parent":null,"children":[{"krate":0,"index":2087},{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2090},{"krate":0,"index":2091}],"decl_id":null,"docs":" A transform that can represent rotations in 3d, represented as a quaternion.","sig":null,"attributes":[{"value":"/ A transform that can represent rotations in 3d, represented as a quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":185840,"byte_end":185920,"line_start":220,"line_end":220,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":185921,"byte_end":185924,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ Most methods expect the quaternion to be normalized.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":185925,"byte_end":185981,"line_start":222,"line_end":222,"column_start":1,"column_end":57}},{"value":"/ When in doubt, use `unit_quaternion` instead of `quaternion` to create","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":185982,"byte_end":186056,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/ a rotation as the former will ensure that its result is normalized.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":186057,"byte_end":186128,"line_start":224,"line_end":224,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":186129,"byte_end":186132,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ Some people use the `x, y, z, w` (or `w, x, y, z`) notations. The equivalence is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":186133,"byte_end":186217,"line_start":226,"line_end":226,"column_start":1,"column_end":85}},{"value":"/ as follows: `x -> i`, `y -> j`, `z -> k`, `w -> r`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":186218,"byte_end":186273,"line_start":227,"line_end":227,"column_start":1,"column_end":56}},{"value":"/ The memory layout of this type corresponds to the `x, y, z, w` notation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":186274,"byte_end":186349,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":186350,"byte_end":186360,"line_start":229,"line_end":229,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2087},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":186683,"byte_end":186684,"line_start":240,"line_end":240,"column_start":9,"column_end":10},"name":"i","qualname":"::rotation::Rotation3D::i","value":"T","parent":{"krate":0,"index":2083},"children":[],"decl_id":null,"docs":" Component multiplied by the imaginary number `i`.\n","sig":null,"attributes":[{"value":"/ Component multiplied by the imaginary number `i`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":186621,"byte_end":186674,"line_start":239,"line_end":239,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":2088},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":186755,"byte_end":186756,"line_start":242,"line_end":242,"column_start":9,"column_end":10},"name":"j","qualname":"::rotation::Rotation3D::j","value":"T","parent":{"krate":0,"index":2083},"children":[],"decl_id":null,"docs":" Component multiplied by the imaginary number `j`.\n","sig":null,"attributes":[{"value":"/ Component multiplied by the imaginary number `j`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":186693,"byte_end":186746,"line_start":241,"line_end":241,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":2089},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":186827,"byte_end":186828,"line_start":244,"line_end":244,"column_start":9,"column_end":10},"name":"k","qualname":"::rotation::Rotation3D::k","value":"T","parent":{"krate":0,"index":2083},"children":[],"decl_id":null,"docs":" Component multiplied by the imaginary number `k`.\n","sig":null,"attributes":[{"value":"/ Component multiplied by the imaginary number `k`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":186765,"byte_end":186818,"line_start":243,"line_end":243,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":2090},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":186864,"byte_end":186865,"line_start":246,"line_end":246,"column_start":9,"column_end":10},"name":"r","qualname":"::rotation::Rotation3D::r","value":"T","parent":{"krate":0,"index":2083},"children":[],"decl_id":null,"docs":" The real part.\n","sig":null,"attributes":[{"value":"/ The real part.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":186837,"byte_end":186855,"line_start":245,"line_end":245,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":2091},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":186897,"byte_end":186902,"line_start":248,"line_end":248,"column_start":9,"column_end":14},"name":"_unit","qualname":"::rotation::Rotation3D::_unit","value":"core::marker::PhantomData<(Src, Dst)>","parent":{"krate":0,"index":2083},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2120},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":188296,"byte_end":188306,"line_start":299,"line_end":299,"column_start":12,"column_end":22},"name":"quaternion","qualname":"<Rotation3D<T, Src, Dst>>::quaternion","value":"pub fn quaternion(T, T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation around from a quaternion representation.","sig":null,"attributes":[{"value":"/ Creates a rotation around from a quaternion representation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":187846,"byte_end":187909,"line_start":289,"line_end":289,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":187914,"byte_end":187917,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ The parameters are a, b, c and r compose the quaternion `a*i + b*j + c*k + r`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":187922,"byte_end":188003,"line_start":291,"line_end":291,"column_start":5,"column_end":86}},{"value":"/ where `a`, `b` and `c` describe the vector part and the last parameter `r` is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":188008,"byte_end":188089,"line_start":292,"line_end":292,"column_start":5,"column_end":86}},{"value":"/ the real part.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":188094,"byte_end":188112,"line_start":293,"line_end":293,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":188117,"byte_end":188120,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ The resulting quaternion is not necessarily normalized. See [`unit_quaternion`].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":188125,"byte_end":188209,"line_start":295,"line_end":295,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":188214,"byte_end":188217,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ [`unit_quaternion`]: #method.unit_quaternion","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":188222,"byte_end":188270,"line_start":297,"line_end":297,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":188275,"byte_end":188284,"line_start":298,"line_end":298,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2121},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":188544,"byte_end":188552,"line_start":311,"line_end":311,"column_start":12,"column_end":20},"name":"identity","qualname":"<Rotation3D<T, Src, Dst>>::identity","value":"pub fn identity() -> Self where T: Zero + One","parent":null,"children":[],"decl_id":null,"docs":" Creates the identity rotation.\n","sig":null,"attributes":[{"value":"/ Creates the identity rotation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":188484,"byte_end":188518,"line_start":309,"line_end":309,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":188523,"byte_end":188532,"line_start":310,"line_end":310,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2126},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":188829,"byte_end":188840,"line_start":325,"line_end":325,"column_start":12,"column_end":23},"name":"vector_part","qualname":"<Rotation3D<T, Src, Dst>>::vector_part","value":"pub fn vector_part(&Self) -> Vector3D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector part (i, j, k) of this quaternion.\n","sig":null,"attributes":[{"value":"/ Returns the vector part (i, j, k) of this quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":188746,"byte_end":188803,"line_start":323,"line_end":323,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":188808,"byte_end":188817,"line_start":324,"line_end":324,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2127},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":189594,"byte_end":189603,"line_start":349,"line_end":349,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Rotation3D<T, Src, Dst>>::cast_unit","value":"pub fn cast_unit<Src2, Dst2>(&Self) -> Rotation3D<T, Src2, Dst2>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit, preserving the numeric value.","sig":null,"attributes":[{"value":"/ Cast the unit, preserving the numeric value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":188926,"byte_end":188974,"line_start":329,"line_end":329,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":188979,"byte_end":188982,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":188987,"byte_end":189000,"line_start":331,"line_end":331,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":189005,"byte_end":189008,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":189013,"byte_end":189024,"line_start":333,"line_end":333,"column_start":5,"column_end":16}},{"value":"/ # use euclid::Rotation3D;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":189029,"byte_end":189058,"line_start":334,"line_end":334,"column_start":5,"column_end":34}},{"value":"/ enum Local {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":189063,"byte_end":189080,"line_start":335,"line_end":335,"column_start":5,"column_end":22}},{"value":"/ enum World {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":189085,"byte_end":189102,"line_start":336,"line_end":336,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":189107,"byte_end":189110,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ enum Local2 {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":189115,"byte_end":189133,"line_start":338,"line_end":338,"column_start":5,"column_end":23}},{"value":"/ enum World2 {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":189138,"byte_end":189156,"line_start":339,"line_end":339,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":189161,"byte_end":189164,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ let to_world: Rotation3D<_, Local, World> = Rotation3D::quaternion(1, 2, 3, 4);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":189169,"byte_end":189252,"line_start":341,"line_end":341,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":189257,"byte_end":189260,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(to_world.i, to_world.cast_unit::<Local2, World2>().i);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":189265,"byte_end":189334,"line_start":343,"line_end":343,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(to_world.j, to_world.cast_unit::<Local2, World2>().j);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":189339,"byte_end":189408,"line_start":344,"line_end":344,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(to_world.k, to_world.cast_unit::<Local2, World2>().k);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":189413,"byte_end":189482,"line_start":345,"line_end":345,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(to_world.r, to_world.cast_unit::<Local2, World2>().r);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":189487,"byte_end":189556,"line_start":346,"line_end":346,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":189561,"byte_end":189568,"line_start":347,"line_end":347,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":189573,"byte_end":189582,"line_start":348,"line_end":348,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2130},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":190372,"byte_end":190382,"line_start":376,"line_end":376,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Rotation3D<T, Src, Dst>>::to_untyped","value":"pub fn to_untyped(&Self) -> Rotation3D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":189820,"byte_end":189874,"line_start":359,"line_end":359,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":189879,"byte_end":189882,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":189887,"byte_end":189900,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":189905,"byte_end":189908,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":189913,"byte_end":189924,"line_start":363,"line_end":363,"column_start":5,"column_end":16}},{"value":"/ # use euclid::Rotation3D;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":189929,"byte_end":189958,"line_start":364,"line_end":364,"column_start":5,"column_end":34}},{"value":"/ enum Local {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":189963,"byte_end":189980,"line_start":365,"line_end":365,"column_start":5,"column_end":22}},{"value":"/ enum World {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":189985,"byte_end":190002,"line_start":366,"line_end":366,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":190007,"byte_end":190010,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ let to_world: Rotation3D<_, Local, World> = Rotation3D::quaternion(1, 2, 3, 4);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":190015,"byte_end":190098,"line_start":368,"line_end":368,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":190103,"byte_end":190106,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(to_world.i, to_world.to_untyped().i);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":190111,"byte_end":190163,"line_start":370,"line_end":370,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(to_world.j, to_world.to_untyped().j);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":190168,"byte_end":190220,"line_start":371,"line_end":371,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(to_world.k, to_world.to_untyped().k);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":190225,"byte_end":190277,"line_start":372,"line_end":372,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(to_world.r, to_world.to_untyped().r);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":190282,"byte_end":190334,"line_start":373,"line_end":373,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":190339,"byte_end":190346,"line_start":374,"line_end":374,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":190351,"byte_end":190360,"line_start":375,"line_end":375,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2131},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":191137,"byte_end":191149,"line_start":398,"line_end":398,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Rotation3D<T, Src, Dst>>::from_untyped","value":"pub fn from_untyped(&Rotation3D<T, UnknownUnit, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":190471,"byte_end":190507,"line_start":380,"line_end":380,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":190512,"byte_end":190515,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":190520,"byte_end":190533,"line_start":382,"line_end":382,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":190538,"byte_end":190541,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":190546,"byte_end":190557,"line_start":384,"line_end":384,"column_start":5,"column_end":16}},{"value":"/ # use euclid::Rotation3D;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":190562,"byte_end":190591,"line_start":385,"line_end":385,"column_start":5,"column_end":34}},{"value":"/ use euclid::UnknownUnit;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":190596,"byte_end":190624,"line_start":386,"line_end":386,"column_start":5,"column_end":33}},{"value":"/ enum Local {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":190629,"byte_end":190646,"line_start":387,"line_end":387,"column_start":5,"column_end":22}},{"value":"/ enum World {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":190651,"byte_end":190668,"line_start":388,"line_end":388,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":190673,"byte_end":190676,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ let rot: Rotation3D<_, UnknownUnit, UnknownUnit> = Rotation3D::quaternion(1, 2, 3, 4);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":190681,"byte_end":190771,"line_start":390,"line_end":390,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":190776,"byte_end":190779,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(rot.i, Rotation3D::<_, Local, World>::from_untyped(&rot).i);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":190784,"byte_end":190859,"line_start":392,"line_end":392,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(rot.j, Rotation3D::<_, Local, World>::from_untyped(&rot).j);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":190864,"byte_end":190939,"line_start":393,"line_end":393,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(rot.k, Rotation3D::<_, Local, World>::from_untyped(&rot).k);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":190944,"byte_end":191019,"line_start":394,"line_end":394,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(rot.r, Rotation3D::<_, Local, World>::from_untyped(&rot).r);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":191024,"byte_end":191099,"line_start":395,"line_end":395,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":191104,"byte_end":191111,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":191116,"byte_end":191125,"line_start":397,"line_end":397,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2136},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":191636,"byte_end":191651,"line_start":413,"line_end":413,"column_start":12,"column_end":27},"name":"unit_quaternion","qualname":"<Rotation3D<T, Src, Dst>>::unit_quaternion","value":"pub fn unit_quaternion(T, T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation around from a quaternion representation and normalizes it.","sig":null,"attributes":[{"value":"/ Creates a rotation around from a quaternion representation and normalizes it.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":191304,"byte_end":191385,"line_start":407,"line_end":407,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":191390,"byte_end":191393,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ The parameters are a, b, c and r compose the quaternion `a*i + b*j + c*k + r`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":191398,"byte_end":191479,"line_start":409,"line_end":409,"column_start":5,"column_end":86}},{"value":"/ before normalization, where `a`, `b` and `c` describe the vector part and the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":191484,"byte_end":191565,"line_start":410,"line_end":410,"column_start":5,"column_end":86}},{"value":"/ last parameter `r` is the real part.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":191570,"byte_end":191610,"line_start":411,"line_end":411,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":191615,"byte_end":191624,"line_start":412,"line_end":412,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2137},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":191801,"byte_end":191812,"line_start":418,"line_end":418,"column_start":12,"column_end":23},"name":"around_axis","qualname":"<Rotation3D<T, Src, Dst>>::around_axis","value":"pub fn around_axis(Vector3D<T, Src>, Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation around a given axis.\n","sig":null,"attributes":[{"value":"/ Creates a rotation around a given axis.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":191746,"byte_end":191789,"line_start":417,"line_end":417,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2138},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":192130,"byte_end":192138,"line_start":426,"line_end":426,"column_start":12,"column_end":20},"name":"around_x","qualname":"<Rotation3D<T, Src, Dst>>::around_x","value":"pub fn around_x(Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation around the x axis.\n","sig":null,"attributes":[{"value":"/ Creates a rotation around the x axis.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":192077,"byte_end":192118,"line_start":425,"line_end":425,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2139},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":192403,"byte_end":192411,"line_start":434,"line_end":434,"column_start":12,"column_end":20},"name":"around_y","qualname":"<Rotation3D<T, Src, Dst>>::around_y","value":"pub fn around_y(Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation around the y axis.\n","sig":null,"attributes":[{"value":"/ Creates a rotation around the y axis.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":192350,"byte_end":192391,"line_start":433,"line_end":433,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2140},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":192676,"byte_end":192684,"line_start":442,"line_end":442,"column_start":12,"column_end":20},"name":"around_z","qualname":"<Rotation3D<T, Src, Dst>>::around_z","value":"pub fn around_z(Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation around the z axis.\n","sig":null,"attributes":[{"value":"/ Creates a rotation around the z axis.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":192623,"byte_end":192664,"line_start":441,"line_end":441,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2141},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":193244,"byte_end":193249,"line_start":456,"line_end":456,"column_start":12,"column_end":17},"name":"euler","qualname":"<Rotation3D<T, Src, Dst>>::euler","value":"pub fn euler(Angle<T>, Angle<T>, Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation from Euler angles.","sig":null,"attributes":[{"value":"/ Creates a rotation from Euler angles.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":192896,"byte_end":192937,"line_start":449,"line_end":449,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":192942,"byte_end":192945,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ The rotations are applied in roll then pitch then yaw order.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":192950,"byte_end":193014,"line_start":451,"line_end":451,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":193019,"byte_end":193022,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/  - Roll (also called bank) is a rotation around the x axis.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":193027,"byte_end":193090,"line_start":453,"line_end":453,"column_start":5,"column_end":68}},{"value":"/  - Pitch (also called bearing) is a rotation around the y axis.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":193095,"byte_end":193162,"line_start":454,"line_end":454,"column_start":5,"column_end":72}},{"value":"/  - Yaw (also called heading) is a rotation around the z axis.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":193167,"byte_end":193232,"line_start":455,"line_end":455,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2142},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":193815,"byte_end":193822,"line_start":473,"line_end":473,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Rotation3D<T, Src, Dst>>::inverse","value":"pub fn inverse(&Self) -> Rotation3D<T, Dst, Src>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inverse of this rotation.\n","sig":null,"attributes":[{"value":"/ Returns the inverse of this rotation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":193748,"byte_end":193789,"line_start":471,"line_end":471,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":193794,"byte_end":193803,"line_start":472,"line_end":472,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2143},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":194003,"byte_end":194007,"line_start":479,"line_end":479,"column_start":12,"column_end":16},"name":"norm","qualname":"<Rotation3D<T, Src, Dst>>::norm","value":"pub fn norm(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Computes the norm of this quaternion.\n","sig":null,"attributes":[{"value":"/ Computes the norm of this quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":193936,"byte_end":193977,"line_start":477,"line_end":477,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":193982,"byte_end":193991,"line_start":478,"line_end":478,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2144},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":194142,"byte_end":194153,"line_start":485,"line_end":485,"column_start":12,"column_end":23},"name":"square_norm","qualname":"<Rotation3D<T, Src, Dst>>::square_norm","value":"pub fn square_norm(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Computes the squared norm of this quaternion.\n","sig":null,"attributes":[{"value":"/ Computes the squared norm of this quaternion.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":194067,"byte_end":194116,"line_start":483,"line_end":483,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":194121,"byte_end":194130,"line_start":484,"line_end":484,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2145},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":194421,"byte_end":194430,"line_start":493,"line_end":493,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Rotation3D<T, Src, Dst>>::normalize","value":"pub fn normalize(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a [unit quaternion] from this one.","sig":null,"attributes":[{"value":"/ Returns a [unit quaternion] from this one.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":194257,"byte_end":194303,"line_start":489,"line_end":489,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":194308,"byte_end":194311,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ [unit quaternion]: https://en.wikipedia.org/wiki/Quaternion#Unit_quaternion","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":194316,"byte_end":194395,"line_start":491,"line_end":491,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":194400,"byte_end":194409,"line_start":492,"line_end":492,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2146},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":194634,"byte_end":194647,"line_start":501,"line_end":501,"column_start":12,"column_end":25},"name":"is_normalized","qualname":"<Rotation3D<T, Src, Dst>>::is_normalized","value":"pub fn is_normalized(&Self) -> bool where T: ApproxEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if [norm] of this quaternion is (approximately) one.","sig":null,"attributes":[{"value":"/ Returns `true` if [norm] of this quaternion is (approximately) one.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":194500,"byte_end":194571,"line_start":497,"line_end":497,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":194576,"byte_end":194579,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ [norm]: #method.norm","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":194584,"byte_end":194608,"line_start":499,"line_end":499,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":194613,"byte_end":194622,"line_start":500,"line_end":500,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2147},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":194972,"byte_end":194977,"line_start":512,"line_end":512,"column_start":12,"column_end":17},"name":"slerp","qualname":"<Rotation3D<T, Src, Dst>>::slerp","value":"pub fn slerp(&Self, &Self, T) -> Self where T: ApproxEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Spherical linear interpolation between this rotation and another rotation.","sig":null,"attributes":[{"value":"/ Spherical linear interpolation between this rotation and another rotation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":194822,"byte_end":194900,"line_start":509,"line_end":509,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":194905,"byte_end":194908,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ `t` is expected to be between zero and one.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":194913,"byte_end":194960,"line_start":511,"line_end":511,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2148},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":196239,"byte_end":196243,"line_start":553,"line_end":553,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Rotation3D<T, Src, Dst>>::lerp","value":"pub fn lerp(&Self, &Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Basic Linear interpolation between this rotation and another rotation.\n","sig":null,"attributes":[{"value":"/ Basic Linear interpolation between this rotation and another rotation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":196139,"byte_end":196213,"line_start":551,"line_end":551,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":196218,"byte_end":196227,"line_start":552,"line_end":552,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2149},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":196551,"byte_end":196568,"line_start":561,"line_end":561,"column_start":12,"column_end":29},"name":"transform_point3d","qualname":"<Rotation3D<T, Src, Dst>>::transform_point3d","value":"pub fn transform_point3d(&Self, Point3D<T, Src>) -> Point3D<T, Dst> where\nT: ApproxEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 3d point transformed by this rotation.","sig":null,"attributes":[{"value":"/ Returns the given 3d point transformed by this rotation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":196380,"byte_end":196440,"line_start":558,"line_end":558,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":196445,"byte_end":196448,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ The input point must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":196453,"byte_end":196539,"line_start":560,"line_end":560,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":2150},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":197316,"byte_end":197333,"line_start":581,"line_end":581,"column_start":12,"column_end":29},"name":"transform_point2d","qualname":"<Rotation3D<T, Src, Dst>>::transform_point2d","value":"pub fn transform_point2d(&Self, Point2D<T, Src>) -> Point2D<T, Dst> where\nT: ApproxEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 2d point transformed by this rotation then projected on the xy plane.","sig":null,"attributes":[{"value":"/ Returns the given 2d point transformed by this rotation then projected on the xy plane.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":197100,"byte_end":197191,"line_start":577,"line_end":577,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":197196,"byte_end":197199,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ The input point must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":197204,"byte_end":197290,"line_start":579,"line_end":579,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":197295,"byte_end":197304,"line_start":580,"line_end":580,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2151},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":197673,"byte_end":197691,"line_start":592,"line_end":592,"column_start":12,"column_end":30},"name":"transform_vector3d","qualname":"<Rotation3D<T, Src, Dst>>::transform_vector3d","value":"pub fn transform_vector3d(&Self, Vector3D<T, Src>) -> Vector3D<T, Dst> where\nT: ApproxEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 3d vector transformed by this rotation.","sig":null,"attributes":[{"value":"/ Returns the given 3d vector transformed by this rotation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":197486,"byte_end":197547,"line_start":588,"line_end":588,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":197552,"byte_end":197555,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ The input vector must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":197560,"byte_end":197647,"line_start":590,"line_end":590,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":197652,"byte_end":197661,"line_start":591,"line_end":591,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2152},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":198076,"byte_end":198094,"line_start":603,"line_end":603,"column_start":12,"column_end":30},"name":"transform_vector2d","qualname":"<Rotation3D<T, Src, Dst>>::transform_vector2d","value":"pub fn transform_vector2d(&Self, Vector2D<T, Src>) -> Vector2D<T, Dst> where\nT: ApproxEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 2d vector transformed by this rotation then projected on the xy plane.","sig":null,"attributes":[{"value":"/ Returns the given 2d vector transformed by this rotation then projected on the xy plane.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":197858,"byte_end":197950,"line_start":599,"line_end":599,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":197955,"byte_end":197958,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ The input vector must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":197963,"byte_end":198050,"line_start":601,"line_end":601,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":198055,"byte_end":198064,"line_start":602,"line_end":602,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2153},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":198333,"byte_end":198345,"line_start":612,"line_end":612,"column_start":12,"column_end":24},"name":"to_transform","qualname":"<Rotation3D<T, Src, Dst>>::to_transform","value":"pub fn to_transform(&Self) -> Transform3D<T, Src, Dst> where T: ApproxEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the matrix representation of this rotation.\n","sig":null,"attributes":[{"value":"/ Returns the matrix representation of this rotation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":198252,"byte_end":198307,"line_start":610,"line_end":610,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":198312,"byte_end":198321,"line_start":611,"line_end":611,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2154},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":199457,"byte_end":199461,"line_start":656,"line_end":656,"column_start":12,"column_end":16},"name":"then","qualname":"<Rotation3D<T, Src, Dst>>::then","value":"pub fn then<NewDst>(&Self, &Rotation3D<T, Dst, NewDst>)\n-> Rotation3D<T, Src, NewDst> where T: ApproxEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a rotation representing this rotation followed by the other rotation.\n","sig":null,"attributes":[{"value":"/ Returns a rotation representing this rotation followed by the other rotation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":199350,"byte_end":199431,"line_start":654,"line_end":654,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":199436,"byte_end":199445,"line_start":655,"line_end":655,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2228},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":211687,"byte_end":211692,"line_start":51,"line_end":51,"column_start":12,"column_end":17},"name":"Scale","qualname":"::scale::Scale","value":"","parent":null,"children":[],"decl_id":null,"docs":" A scaling factor between two different units of measurement.","sig":null,"attributes":[{"value":"/ A scaling factor between two different units of measurement.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":210720,"byte_end":210784,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":210785,"byte_end":210788,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This is effectively a type-safe float, intended to be used in combination with other types like","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":210789,"byte_end":210888,"line_start":25,"line_end":25,"column_start":1,"column_end":100}},{"value":"/ `length::Length` to enforce conversion between systems of measurement at compile time.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":210889,"byte_end":210979,"line_start":26,"line_end":26,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":210980,"byte_end":210983,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ `Src` and `Dst` represent the units before and after multiplying a value by a `Scale`. They","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":210984,"byte_end":211079,"line_start":28,"line_end":28,"column_start":1,"column_end":96}},{"value":"/ may be types without values, such as empty enums.  For example:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":211080,"byte_end":211147,"line_start":29,"line_end":29,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":211148,"byte_end":211151,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":211152,"byte_end":211163,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ use euclid::Scale;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":211164,"byte_end":211186,"line_start":32,"line_end":32,"column_start":1,"column_end":23}},{"value":"/ use euclid::Length;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":211187,"byte_end":211210,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/ enum Mm {};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":211211,"byte_end":211226,"line_start":34,"line_end":34,"column_start":1,"column_end":16}},{"value":"/ enum Inch {};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":211227,"byte_end":211244,"line_start":35,"line_end":35,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":211245,"byte_end":211248,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let mm_per_inch: Scale<f32, Inch, Mm> = Scale::new(25.4);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":211249,"byte_end":211310,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":211311,"byte_end":211314,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let one_foot: Length<f32, Inch> = Length::new(12.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":211315,"byte_end":211371,"line_start":39,"line_end":39,"column_start":1,"column_end":57}},{"value":"/ let one_foot_in_mm: Length<f32, Mm> = one_foot * mm_per_inch;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":211372,"byte_end":211437,"line_start":40,"line_end":40,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":211438,"byte_end":211445,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":211446,"byte_end":211456,"line_start":42,"line_end":42,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2233},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":211706,"byte_end":211711,"line_start":51,"line_end":51,"column_start":31,"column_end":36},"name":"0","qualname":"::scale::Scale::0","value":"T","parent":{"krate":0,"index":2228},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2234},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":211728,"byte_end":211755,"line_start":51,"line_end":51,"column_start":53,"column_end":80},"name":"1","qualname":"::scale::Scale::1","value":"core::marker::PhantomData<(Src, Dst)>","parent":{"krate":0,"index":2228},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2239},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":211829,"byte_end":211832,"line_start":55,"line_end":55,"column_start":18,"column_end":21},"name":"new","qualname":"<Scale<T, Src, Dst>>::new","value":"pub const fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":211802,"byte_end":211811,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2240},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":211952,"byte_end":211960,"line_start":61,"line_end":61,"column_start":12,"column_end":20},"name":"identity","qualname":"<Scale<T, Src, Dst>>::identity","value":"pub fn identity() -> Self where T: One","parent":null,"children":[],"decl_id":null,"docs":" Creates an identity scale (1.0).\n","sig":null,"attributes":[{"value":"/ Creates an identity scale (1.0).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":211890,"byte_end":211926,"line_start":59,"line_end":59,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":211931,"byte_end":211940,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2241},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":212412,"byte_end":212427,"line_start":82,"line_end":82,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Scale<T, Src, Dst>>::transform_point","value":"pub fn transform_point(Self, Point2D<T, Src>) -> Point2D<T::Output, Dst> where\nT: Copy + Mul","parent":null,"children":[],"decl_id":null,"docs":" Returns the given point transformed by this scale.","sig":null,"attributes":[{"value":"/ Returns the given point transformed by this scale.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":212042,"byte_end":212096,"line_start":68,"line_end":68,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":212101,"byte_end":212104,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":212109,"byte_end":212122,"line_start":70,"line_end":70,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":212127,"byte_end":212130,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":212135,"byte_end":212146,"line_start":72,"line_end":72,"column_start":5,"column_end":16}},{"value":"/ use euclid::{Scale, point2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":212151,"byte_end":212183,"line_start":73,"line_end":73,"column_start":5,"column_end":37}},{"value":"/ enum Mm {};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":212188,"byte_end":212203,"line_start":74,"line_end":74,"column_start":5,"column_end":20}},{"value":"/ enum Cm {};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":212208,"byte_end":212223,"line_start":75,"line_end":75,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":212228,"byte_end":212231,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let to_mm: Scale<i32, Cm, Mm> = Scale::new(10);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":212236,"byte_end":212287,"line_start":77,"line_end":77,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":212292,"byte_end":212295,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(to_mm.transform_point(point2(42, -42)), point2(420, -420));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":212300,"byte_end":212374,"line_start":79,"line_end":79,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":212379,"byte_end":212386,"line_start":80,"line_end":80,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":212391,"byte_end":212400,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2242},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":212672,"byte_end":212689,"line_start":91,"line_end":91,"column_start":12,"column_end":29},"name":"transform_point3d","qualname":"<Scale<T, Src, Dst>>::transform_point3d","value":"pub fn transform_point3d(Self, Point3D<T, Src>) -> Point3D<T::Output, Dst>\nwhere T: Copy + Mul","parent":null,"children":[],"decl_id":null,"docs":" Returns the given point transformed by this scale.\n","sig":null,"attributes":[{"value":"/ Returns the given point transformed by this scale.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":212592,"byte_end":212646,"line_start":89,"line_end":89,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":212651,"byte_end":212660,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2243},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":213238,"byte_end":213254,"line_start":112,"line_end":112,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<Scale<T, Src, Dst>>::transform_vector","value":"pub fn transform_vector(Self, Vector2D<T, Src>) -> Vector2D<T::Output, Dst>\nwhere T: Copy + Mul","parent":null,"children":[],"decl_id":null,"docs":" Returns the given vector transformed by this scale.","sig":null,"attributes":[{"value":"/ Returns the given vector transformed by this scale.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":212872,"byte_end":212927,"line_start":98,"line_end":98,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":212932,"byte_end":212935,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":212940,"byte_end":212953,"line_start":100,"line_end":100,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":212958,"byte_end":212961,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":212966,"byte_end":212977,"line_start":102,"line_end":102,"column_start":5,"column_end":16}},{"value":"/ use euclid::{Scale, vec2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":212982,"byte_end":213012,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/ enum Mm {};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":213017,"byte_end":213032,"line_start":104,"line_end":104,"column_start":5,"column_end":20}},{"value":"/ enum Cm {};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":213037,"byte_end":213052,"line_start":105,"line_end":105,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":213057,"byte_end":213060,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ let to_mm: Scale<i32, Cm, Mm> = Scale::new(10);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":213065,"byte_end":213116,"line_start":107,"line_end":107,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":213121,"byte_end":213124,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(to_mm.transform_vector(vec2(42, -42)), vec2(420, -420));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":213129,"byte_end":213200,"line_start":109,"line_end":109,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":213205,"byte_end":213212,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":213217,"byte_end":213226,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2244},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":213783,"byte_end":213797,"line_start":133,"line_end":133,"column_start":12,"column_end":26},"name":"transform_size","qualname":"<Scale<T, Src, Dst>>::transform_size","value":"pub fn transform_size(Self, Size2D<T, Src>) -> Size2D<T::Output, Dst> where\nT: Copy + Mul","parent":null,"children":[],"decl_id":null,"docs":" Returns the given vector transformed by this scale.","sig":null,"attributes":[{"value":"/ Returns the given vector transformed by this scale.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":213416,"byte_end":213471,"line_start":119,"line_end":119,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":213476,"byte_end":213479,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":213484,"byte_end":213497,"line_start":121,"line_end":121,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":213502,"byte_end":213505,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":213510,"byte_end":213521,"line_start":123,"line_end":123,"column_start":5,"column_end":16}},{"value":"/ use euclid::{Scale, size2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":213526,"byte_end":213557,"line_start":124,"line_end":124,"column_start":5,"column_end":36}},{"value":"/ enum Mm {};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":213562,"byte_end":213577,"line_start":125,"line_end":125,"column_start":5,"column_end":20}},{"value":"/ enum Cm {};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":213582,"byte_end":213597,"line_start":126,"line_end":126,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":213602,"byte_end":213605,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ let to_mm: Scale<i32, Cm, Mm> = Scale::new(10);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":213610,"byte_end":213661,"line_start":128,"line_end":128,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":213666,"byte_end":213669,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(to_mm.transform_size(size2(42, -42)), size2(420, -420));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":213674,"byte_end":213745,"line_start":130,"line_end":130,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":213750,"byte_end":213757,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":213762,"byte_end":213771,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2245},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":214342,"byte_end":214356,"line_start":154,"line_end":154,"column_start":12,"column_end":26},"name":"transform_rect","qualname":"<Scale<T, Src, Dst>>::transform_rect","value":"pub fn transform_rect(Self, &Rect<T, Src>) -> Rect<T::Output, Dst> where\nT: Copy + Mul","parent":null,"children":[],"decl_id":null,"docs":" Returns the given rect transformed by this scale.","sig":null,"attributes":[{"value":"/ Returns the given rect transformed by this scale.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":213965,"byte_end":214018,"line_start":140,"line_end":140,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":214023,"byte_end":214026,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":214031,"byte_end":214044,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":214049,"byte_end":214052,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":214057,"byte_end":214068,"line_start":144,"line_end":144,"column_start":5,"column_end":16}},{"value":"/ use euclid::{Scale, rect};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":214073,"byte_end":214103,"line_start":145,"line_end":145,"column_start":5,"column_end":35}},{"value":"/ enum Mm {};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":214108,"byte_end":214123,"line_start":146,"line_end":146,"column_start":5,"column_end":20}},{"value":"/ enum Cm {};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":214128,"byte_end":214143,"line_start":147,"line_end":147,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":214148,"byte_end":214151,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ let to_mm: Scale<i32, Cm, Mm> = Scale::new(10);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":214156,"byte_end":214207,"line_start":149,"line_end":149,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":214212,"byte_end":214215,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(to_mm.transform_rect(&rect(1, 2, 42, -42)), rect(10, 20, 420, -420));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":214220,"byte_end":214304,"line_start":151,"line_end":151,"column_start":5,"column_end":89}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":214309,"byte_end":214316,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":214321,"byte_end":214330,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2246},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":214656,"byte_end":214671,"line_start":166,"line_end":166,"column_start":12,"column_end":27},"name":"transform_box2d","qualname":"<Scale<T, Src, Dst>>::transform_box2d","value":"pub fn transform_box2d(Self, &Box2D<T, Src>) -> Box2D<T::Output, Dst> where\nT: Copy + Mul","parent":null,"children":[],"decl_id":null,"docs":" Returns the given box transformed by this scale.\n","sig":null,"attributes":[{"value":"/ Returns the given box transformed by this scale.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":214578,"byte_end":214630,"line_start":164,"line_end":164,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":214635,"byte_end":214644,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2247},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":214968,"byte_end":214983,"line_start":178,"line_end":178,"column_start":12,"column_end":27},"name":"transform_box3d","qualname":"<Scale<T, Src, Dst>>::transform_box3d","value":"pub fn transform_box3d(Self, &Box3D<T, Src>) -> Box3D<T::Output, Dst> where\nT: Copy + Mul","parent":null,"children":[],"decl_id":null,"docs":" Returns the given box transformed by this scale.\n","sig":null,"attributes":[{"value":"/ Returns the given box transformed by this scale.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":214890,"byte_end":214942,"line_start":176,"line_end":176,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":214947,"byte_end":214956,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2248},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":215724,"byte_end":215735,"line_start":206,"line_end":206,"column_start":12,"column_end":23},"name":"is_identity","qualname":"<Scale<T, Src, Dst>>::is_identity","value":"pub fn is_identity(Self) -> bool where T: PartialEq + One","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this scale has no effect.","sig":null,"attributes":[{"value":"/ Returns `true` if this scale has no effect.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":215206,"byte_end":215253,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":215258,"byte_end":215261,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":215266,"byte_end":215279,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":215284,"byte_end":215287,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":215292,"byte_end":215303,"line_start":192,"line_end":192,"column_start":5,"column_end":16}},{"value":"/ use euclid::Scale;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":215308,"byte_end":215330,"line_start":193,"line_end":193,"column_start":5,"column_end":27}},{"value":"/ use euclid::num::One;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":215335,"byte_end":215360,"line_start":194,"line_end":194,"column_start":5,"column_end":30}},{"value":"/ enum Mm {};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":215365,"byte_end":215380,"line_start":195,"line_end":195,"column_start":5,"column_end":20}},{"value":"/ enum Cm {};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":215385,"byte_end":215400,"line_start":196,"line_end":196,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":215405,"byte_end":215408,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ let cm_per_mm: Scale<f32, Mm, Cm> = Scale::new(0.1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":215413,"byte_end":215469,"line_start":198,"line_end":198,"column_start":5,"column_end":61}},{"value":"/ let mm_per_mm: Scale<f32, Mm, Mm> = Scale::new(1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":215474,"byte_end":215530,"line_start":199,"line_end":199,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":215535,"byte_end":215538,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(cm_per_mm.is_identity(), false);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":215543,"byte_end":215590,"line_start":201,"line_end":201,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(mm_per_mm.is_identity(), true);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":215595,"byte_end":215641,"line_start":202,"line_end":202,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(mm_per_mm, Scale::one());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":215646,"byte_end":215686,"line_start":203,"line_end":203,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":215691,"byte_end":215698,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":215703,"byte_end":215712,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2249},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":215905,"byte_end":215908,"line_start":215,"line_end":215,"column_start":12,"column_end":15},"name":"get","qualname":"<Scale<T, Src, Dst>>::get","value":"pub fn get(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying scalar scale factor.\n","sig":null,"attributes":[{"value":"/ Returns the underlying scalar scale factor.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":215832,"byte_end":215879,"line_start":213,"line_end":213,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":215884,"byte_end":215893,"line_start":214,"line_end":214,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2250},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":216260,"byte_end":216267,"line_start":232,"line_end":232,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Scale<T, Src, Dst>>::inverse","value":"pub fn inverse(Self) -> Scale<T::Output, Dst, Src> where T: One + Div","parent":null,"children":[],"decl_id":null,"docs":" The inverse Scale (1.0 / self).","sig":null,"attributes":[{"value":"/ The inverse Scale (1.0 / self).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":215948,"byte_end":215983,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":215988,"byte_end":215991,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":215996,"byte_end":216009,"line_start":221,"line_end":221,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":216014,"byte_end":216017,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":216022,"byte_end":216033,"line_start":223,"line_end":223,"column_start":5,"column_end":16}},{"value":"/ use euclid::Scale;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":216038,"byte_end":216060,"line_start":224,"line_end":224,"column_start":5,"column_end":27}},{"value":"/ enum Mm {};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":216065,"byte_end":216080,"line_start":225,"line_end":225,"column_start":5,"column_end":20}},{"value":"/ enum Cm {};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":216085,"byte_end":216100,"line_start":226,"line_end":226,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":216105,"byte_end":216108,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ let cm_per_mm: Scale<f32, Cm, Mm> = Scale::new(0.1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":216113,"byte_end":216169,"line_start":228,"line_end":228,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":216174,"byte_end":216177,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(cm_per_mm.inverse(), Scale::new(10.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":216182,"byte_end":216236,"line_start":230,"line_end":230,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":216241,"byte_end":216248,"line_start":231,"line_end":231,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2255},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":217348,"byte_end":217352,"line_start":270,"line_end":270,"column_start":12,"column_end":16},"name":"cast","qualname":"<Scale<T, Src, Dst>>::cast","value":"pub fn cast<NewT: NumCast>(Self) -> Scale<NewT, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":216469,"byte_end":216543,"line_start":242,"line_end":242,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":216548,"byte_end":216551,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":216556,"byte_end":216568,"line_start":244,"line_end":244,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":216573,"byte_end":216576,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ If the source value cannot be represented by the target type `NewT`, then","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":216581,"byte_end":216658,"line_start":246,"line_end":246,"column_start":5,"column_end":82}},{"value":"/ method panics. Use `try_cast` if that must be case.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":216663,"byte_end":216718,"line_start":247,"line_end":247,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":216723,"byte_end":216726,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":216731,"byte_end":216744,"line_start":249,"line_end":249,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":216749,"byte_end":216752,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":216757,"byte_end":216768,"line_start":251,"line_end":251,"column_start":5,"column_end":16}},{"value":"/ use euclid::Scale;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":216773,"byte_end":216795,"line_start":252,"line_end":252,"column_start":5,"column_end":27}},{"value":"/ enum Mm {};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":216800,"byte_end":216815,"line_start":253,"line_end":253,"column_start":5,"column_end":20}},{"value":"/ enum Cm {};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":216820,"byte_end":216835,"line_start":254,"line_end":254,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":216840,"byte_end":216843,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ let to_mm: Scale<i32, Cm, Mm> = Scale::new(10);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":216848,"byte_end":216899,"line_start":256,"line_end":256,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":216904,"byte_end":216907,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(to_mm.cast::<f32>(), Scale::new(10.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":216912,"byte_end":216966,"line_start":258,"line_end":258,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":216971,"byte_end":216978,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ That conversion will panic, because `i32` not enough to store such big numbers:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":216983,"byte_end":217066,"line_start":260,"line_end":260,"column_start":5,"column_end":88}},{"value":"/ ```rust,should_panic","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":217071,"byte_end":217095,"line_start":261,"line_end":261,"column_start":5,"column_end":29}},{"value":"/ use euclid::Scale;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":217100,"byte_end":217122,"line_start":262,"line_end":262,"column_start":5,"column_end":27}},{"value":"/ enum Mm {};// millimeter = 10^-2 meters","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":217127,"byte_end":217170,"line_start":263,"line_end":263,"column_start":5,"column_end":48}},{"value":"/ enum Em {};// exameter   = 10^18 meters","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":217175,"byte_end":217218,"line_start":264,"line_end":264,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":217223,"byte_end":217226,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ // Panics","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":217231,"byte_end":217244,"line_start":266,"line_end":266,"column_start":5,"column_end":18}},{"value":"/ let to_em: Scale<i32, Mm, Em> = Scale::new(10e20).cast();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":217249,"byte_end":217310,"line_start":267,"line_end":267,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":217315,"byte_end":217322,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":217327,"byte_end":217336,"line_start":269,"line_end":269,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2257},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":218125,"byte_end":218133,"line_start":293,"line_end":293,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Scale<T, Src, Dst>>::try_cast","value":"pub fn try_cast<NewT: NumCast>(Self) -> Option<Scale<NewT, Src, Dst>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.\n If the source value cannot be represented by the target type `NewT`, then `None`\n is returned.","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":217445,"byte_end":217528,"line_start":274,"line_end":274,"column_start":5,"column_end":88}},{"value":"/ If the source value cannot be represented by the target type `NewT`, then `None`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":217533,"byte_end":217617,"line_start":275,"line_end":275,"column_start":5,"column_end":89}},{"value":"/ is returned.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":217622,"byte_end":217638,"line_start":276,"line_end":276,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":217643,"byte_end":217646,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":217651,"byte_end":217664,"line_start":278,"line_end":278,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":217669,"byte_end":217672,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":217677,"byte_end":217688,"line_start":280,"line_end":280,"column_start":5,"column_end":16}},{"value":"/ use euclid::Scale;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":217693,"byte_end":217715,"line_start":281,"line_end":281,"column_start":5,"column_end":27}},{"value":"/ enum Mm {};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":217720,"byte_end":217735,"line_start":282,"line_end":282,"column_start":5,"column_end":20}},{"value":"/ enum Cm {};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":217740,"byte_end":217755,"line_start":283,"line_end":283,"column_start":5,"column_end":20}},{"value":"/ enum Em {};// Exameter = 10^18 meters","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":217760,"byte_end":217801,"line_start":284,"line_end":284,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":217806,"byte_end":217809,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ let to_mm: Scale<i32, Cm, Mm> = Scale::new(10);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":217814,"byte_end":217865,"line_start":286,"line_end":286,"column_start":5,"column_end":56}},{"value":"/ let to_em: Scale<f32, Mm, Em> = Scale::new(10e20);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":217870,"byte_end":217924,"line_start":287,"line_end":287,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":217929,"byte_end":217932,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(to_mm.try_cast::<f32>(), Some(Scale::new(10.0)));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":217937,"byte_end":218001,"line_start":289,"line_end":289,"column_start":5,"column_end":69}},{"value":"/ // Integer to small to store that number","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":218006,"byte_end":218050,"line_start":290,"line_end":290,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(to_em.try_cast::<i32>(), None);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":218055,"byte_end":218101,"line_start":291,"line_end":291,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":218106,"byte_end":218113,"line_start":292,"line_end":292,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2375},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":222667,"byte_end":222680,"line_start":33,"line_end":33,"column_start":12,"column_end":25},"name":"SideOffsets2D","qualname":"::side_offsets::SideOffsets2D","value":"SideOffsets2D { top, right, bottom, left, _unit }","parent":null,"children":[{"krate":0,"index":2378},{"krate":0,"index":2379},{"krate":0,"index":2380},{"krate":0,"index":2381},{"krate":0,"index":2382}],"decl_id":null,"docs":" A group of 2D side offsets, which correspond to top/right/bottom/left for borders, padding,\n and margins in CSS, optionally tagged with a unit.\n","sig":null,"attributes":[{"value":"/ A group of 2D side offsets, which correspond to top/right/bottom/left for borders, padding,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":222311,"byte_end":222406,"line_start":25,"line_end":25,"column_start":1,"column_end":96}},{"value":"/ and margins in CSS, optionally tagged with a unit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":222407,"byte_end":222461,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":222462,"byte_end":222472,"line_start":27,"line_end":27,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2378},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":222697,"byte_end":222700,"line_start":34,"line_end":34,"column_start":9,"column_end":12},"name":"top","qualname":"::side_offsets::SideOffsets2D::top","value":"T","parent":{"krate":0,"index":2375},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2379},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":222713,"byte_end":222718,"line_start":35,"line_end":35,"column_start":9,"column_end":14},"name":"right","qualname":"::side_offsets::SideOffsets2D::right","value":"T","parent":{"krate":0,"index":2375},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2380},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":222731,"byte_end":222737,"line_start":36,"line_end":36,"column_start":9,"column_end":15},"name":"bottom","qualname":"::side_offsets::SideOffsets2D::bottom","value":"T","parent":{"krate":0,"index":2375},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2381},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":222750,"byte_end":222754,"line_start":37,"line_end":37,"column_start":9,"column_end":13},"name":"left","qualname":"::side_offsets::SideOffsets2D::left","value":"T","parent":{"krate":0,"index":2375},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2382},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":222786,"byte_end":222791,"line_start":39,"line_end":39,"column_start":9,"column_end":14},"name":"_unit","qualname":"::side_offsets::SideOffsets2D::_unit","value":"core::marker::PhantomData<U>","parent":{"krate":0,"index":2375},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2413},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":224509,"byte_end":224512,"line_start":109,"line_end":109,"column_start":18,"column_end":21},"name":"new","qualname":"<SideOffsets2D<T, U>>::new","value":"pub const fn new(T, T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking a scalar for each side.","sig":null,"attributes":[{"value":"/ Constructor taking a scalar for each side.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":224342,"byte_end":224388,"line_start":105,"line_end":105,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":224393,"byte_end":224396,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Sides are specified in top-right-bottom-left order following","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":224401,"byte_end":224465,"line_start":107,"line_end":107,"column_start":5,"column_end":69}},{"value":"/ CSS's convention.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":224470,"byte_end":224491,"line_start":108,"line_end":108,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2414},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":224879,"byte_end":224891,"line_start":123,"line_end":123,"column_start":12,"column_end":24},"name":"from_lengths","qualname":"<SideOffsets2D<T, U>>::from_lengths","value":"pub fn from_lengths(Length<T, U>, Length<T, U>, Length<T, U>, Length<T, U>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking a typed Length for each side.","sig":null,"attributes":[{"value":"/ Constructor taking a typed Length for each side.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":224712,"byte_end":224764,"line_start":119,"line_end":119,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":224769,"byte_end":224772,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Sides are specified in top-right-bottom-left order following","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":224777,"byte_end":224841,"line_start":121,"line_end":121,"column_start":5,"column_end":69}},{"value":"/ CSS's convention.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":224846,"byte_end":224867,"line_start":122,"line_end":122,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2415},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":225387,"byte_end":225405,"line_start":137,"line_end":137,"column_start":12,"column_end":30},"name":"from_vectors_outer","qualname":"<SideOffsets2D<T, U>>::from_vectors_outer","value":"pub fn from_vectors_outer(Vector2D<T, U>, Vector2D<T, U>) -> Self where\nT: Neg<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Construct side offsets from min and a max vector offsets.","sig":null,"attributes":[{"value":"/ Construct side offsets from min and a max vector offsets.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":225095,"byte_end":225156,"line_start":132,"line_end":132,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":225161,"byte_end":225164,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ The outer rect of the resulting side offsets is equivalent to translating","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":225169,"byte_end":225246,"line_start":134,"line_end":134,"column_start":5,"column_end":82}},{"value":"/ a rectangle's upper-left corner with the min vector and translating the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":225251,"byte_end":225326,"line_start":135,"line_end":135,"column_start":5,"column_end":80}},{"value":"/ bottom-right corner with the max vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":225331,"byte_end":225375,"line_start":136,"line_end":136,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2416},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":225973,"byte_end":225991,"line_start":155,"line_end":155,"column_start":12,"column_end":30},"name":"from_vectors_inner","qualname":"<SideOffsets2D<T, U>>::from_vectors_inner","value":"pub fn from_vectors_inner(Vector2D<T, U>, Vector2D<T, U>) -> Self where\nT: Neg<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Construct side offsets from min and a max vector offsets.","sig":null,"attributes":[{"value":"/ Construct side offsets from min and a max vector offsets.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":225681,"byte_end":225742,"line_start":150,"line_end":150,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":225747,"byte_end":225750,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ The inner rect of the resulting side offsets is equivalent to translating","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":225755,"byte_end":225832,"line_start":152,"line_end":152,"column_start":5,"column_end":82}},{"value":"/ a rectangle's upper-left corner with the min vector and translating the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":225837,"byte_end":225912,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ bottom-right corner with the max vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":225917,"byte_end":225961,"line_start":154,"line_end":154,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2417},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":226322,"byte_end":226326,"line_start":169,"line_end":169,"column_start":12,"column_end":16},"name":"zero","qualname":"<SideOffsets2D<T, U>>::zero","value":"pub fn zero() -> Self where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all sides to zero.\n","sig":null,"attributes":[{"value":"/ Constructor, setting all sides to zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":226267,"byte_end":226310,"line_start":168,"line_end":168,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2418},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":226520,"byte_end":226527,"line_start":176,"line_end":176,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<SideOffsets2D<T, U>>::is_zero","value":"pub fn is_zero(&Self) -> bool where T: Zero + PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all side offsets are zero.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all side offsets are zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":226460,"byte_end":226508,"line_start":175,"line_end":175,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2419},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":226816,"byte_end":226828,"line_start":185,"line_end":185,"column_start":12,"column_end":24},"name":"new_all_same","qualname":"<SideOffsets2D<T, U>>::new_all_same","value":"pub fn new_all_same(T) -> Self where T: Copy","parent":null,"children":[],"decl_id":null,"docs":" Constructor setting the same value to all sides, taking a scalar value directly.\n","sig":null,"attributes":[{"value":"/ Constructor setting the same value to all sides, taking a scalar value directly.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":226720,"byte_end":226804,"line_start":184,"line_end":184,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":2420},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":227019,"byte_end":227039,"line_start":192,"line_end":192,"column_start":12,"column_end":32},"name":"from_length_all_same","qualname":"<SideOffsets2D<T, U>>::from_length_all_same","value":"pub fn from_length_all_same(Length<T, U>) -> Self where T: Copy","parent":null,"children":[],"decl_id":null,"docs":" Constructor setting the same value to all sides, taking a typed Length.\n","sig":null,"attributes":[{"value":"/ Constructor setting the same value to all sides, taking a typed Length.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":226932,"byte_end":227007,"line_start":191,"line_end":191,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2421},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":227157,"byte_end":227167,"line_start":198,"line_end":198,"column_start":12,"column_end":22},"name":"horizontal","qualname":"<SideOffsets2D<T, U>>::horizontal","value":"pub fn horizontal(&Self) -> T where T: Copy + Add<T, Output = T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2422},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":227278,"byte_end":227286,"line_start":204,"line_end":204,"column_start":12,"column_end":20},"name":"vertical","qualname":"<SideOffsets2D<T, U>>::vertical","value":"pub fn vertical(&Self) -> T where T: Copy + Add<T, Output = T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2558},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":234032,"byte_end":234038,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"Size2D","qualname":"::size::Size2D","value":"Size2D { width, height, _unit }","parent":null,"children":[{"krate":0,"index":2561},{"krate":0,"index":2562},{"krate":0,"index":2563}],"decl_id":null,"docs":" A 2d size tagged with a unit.\n","sig":null,"attributes":[{"value":"/ A 2d size tagged with a unit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":233976,"byte_end":234009,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":234010,"byte_end":234020,"line_start":31,"line_end":31,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2561},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":234147,"byte_end":234152,"line_start":34,"line_end":34,"column_start":9,"column_end":14},"name":"width","qualname":"::size::Size2D::width","value":"T","parent":{"krate":0,"index":2558},"children":[],"decl_id":null,"docs":" The extent of the element in the `U` units along the `x` axis (usually horizontal).\n","sig":null,"attributes":[{"value":"/ The extent of the element in the `U` units along the `x` axis (usually horizontal).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":234051,"byte_end":234138,"line_start":33,"line_end":33,"column_start":5,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":2562},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":234255,"byte_end":234261,"line_start":36,"line_end":36,"column_start":9,"column_end":15},"name":"height","qualname":"::size::Size2D::height","value":"T","parent":{"krate":0,"index":2558},"children":[],"decl_id":null,"docs":" The extent of the element in the `U` units along the `y` axis (usually vertical).\n","sig":null,"attributes":[{"value":"/ The extent of the element in the `U` units along the `y` axis (usually vertical).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":234161,"byte_end":234246,"line_start":35,"line_end":35,"column_start":5,"column_end":90}}]},{"kind":"Field","id":{"krate":0,"index":2563},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":234293,"byte_end":234298,"line_start":38,"line_end":38,"column_start":9,"column_end":14},"name":"_unit","qualname":"::size::Size2D::_unit","value":"core::marker::PhantomData<U>","parent":{"krate":0,"index":2558},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2594},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":236387,"byte_end":236391,"line_start":126,"line_end":126,"column_start":12,"column_end":16},"name":"zero","qualname":"<Size2D<T, U>>::zero","value":"pub fn zero() -> Self where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" The same as [`Zero::zero()`] but available without importing trait.","sig":null,"attributes":[{"value":"/ The same as [`Zero::zero()`] but available without importing trait.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":236220,"byte_end":236291,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":236296,"byte_end":236299,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ [`Zero::zero()`]: ./num/trait.Zero.html#tymethod.zero","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":236304,"byte_end":236361,"line_start":124,"line_end":124,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":236366,"byte_end":236375,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2595},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":236563,"byte_end":236566,"line_start":135,"line_end":135,"column_start":18,"column_end":21},"name":"new","qualname":"<Size2D<T, U>>::new","value":"pub const fn new(T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar values.\n","sig":null,"attributes":[{"value":"/ Constructor taking scalar values.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":236494,"byte_end":236531,"line_start":133,"line_end":133,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":236536,"byte_end":236545,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2596},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":236785,"byte_end":236797,"line_start":144,"line_end":144,"column_start":12,"column_end":24},"name":"from_lengths","qualname":"<Size2D<T, U>>::from_lengths","value":"pub fn from_lengths(Length<T, U>, Length<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar strongly typed lengths.\n","sig":null,"attributes":[{"value":"/ Constructor taking scalar strongly typed lengths.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":236706,"byte_end":236759,"line_start":142,"line_end":142,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":236764,"byte_end":236773,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2597},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":236984,"byte_end":236989,"line_start":150,"line_end":150,"column_start":12,"column_end":17},"name":"splat","qualname":"<Size2D<T, U>>::splat","value":"pub fn splat(T) -> Self where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Constructor setting all components to the same value.\n","sig":null,"attributes":[{"value":"/ Constructor setting all components to the same value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":236901,"byte_end":236958,"line_start":148,"line_end":148,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":236963,"byte_end":236972,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2598},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":237223,"byte_end":237235,"line_start":163,"line_end":163,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Size2D<T, U>>::from_untyped","value":"pub fn from_untyped(Size2D<T, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":237161,"byte_end":237197,"line_start":161,"line_end":161,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":237202,"byte_end":237211,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2602},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":237453,"byte_end":237461,"line_start":171,"line_end":171,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Size2D<T, U>>::to_array","value":"pub fn to_array(Self) -> [T; ]","parent":null,"children":[],"decl_id":null,"docs":" Return this size as an array of two elements (width, then height).\n","sig":null,"attributes":[{"value":"/ Return this size as an array of two elements (width, then height).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":237357,"byte_end":237427,"line_start":169,"line_end":169,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":237432,"byte_end":237441,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2604},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":237620,"byte_end":237628,"line_start":177,"line_end":177,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<Size2D<T, U>>::to_tuple","value":"pub fn to_tuple(Self) -> (T, T)","parent":null,"children":[],"decl_id":null,"docs":" Return this size as a tuple of two elements (width, then height).\n","sig":null,"attributes":[{"value":"/ Return this size as a tuple of two elements (width, then height).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":237525,"byte_end":237594,"line_start":175,"line_end":175,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":237599,"byte_end":237608,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2605},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":237773,"byte_end":237782,"line_start":183,"line_end":183,"column_start":12,"column_end":21},"name":"to_vector","qualname":"<Size2D<T, U>>::to_vector","value":"pub fn to_vector(Self) -> Vector2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Return this size as a vector with width and height.\n","sig":null,"attributes":[{"value":"/ Return this size as a vector with width and height.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":237692,"byte_end":237747,"line_start":181,"line_end":181,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":237752,"byte_end":237761,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2606},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":237938,"byte_end":237948,"line_start":189,"line_end":189,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Size2D<T, U>>::to_untyped","value":"pub fn to_untyped(Self) -> Size2D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":237858,"byte_end":237912,"line_start":187,"line_end":187,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":237917,"byte_end":237926,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2607},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":238062,"byte_end":238071,"line_start":195,"line_end":195,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Size2D<T, U>>::cast_unit","value":"pub fn cast_unit<V>(Self) -> Size2D<T, V>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit\n","sig":null,"attributes":[{"value":"/ Cast the unit","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":238019,"byte_end":238036,"line_start":193,"line_end":193,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":238041,"byte_end":238050,"line_start":194,"line_end":194,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2609},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":238514,"byte_end":238519,"line_start":211,"line_end":211,"column_start":12,"column_end":17},"name":"round","qualname":"<Size2D<T, U>>::round","value":"pub fn round(Self) -> Self where T: Round","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the nearest integer value.","sig":null,"attributes":[{"value":"/ Rounds each component to the nearest integer value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":238155,"byte_end":238210,"line_start":199,"line_end":199,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":238215,"byte_end":238218,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":238223,"byte_end":238298,"line_start":201,"line_end":201,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":238303,"byte_end":238306,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":238311,"byte_end":238322,"line_start":203,"line_end":203,"column_start":5,"column_end":16}},{"value":"/ # use euclid::size2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":238327,"byte_end":238351,"line_start":204,"line_end":204,"column_start":5,"column_end":29}},{"value":"/ enum Mm {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":238356,"byte_end":238370,"line_start":205,"line_end":205,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":238375,"byte_end":238378,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(size2::<_, Mm>(-0.1, -0.8).round(), size2::<_, Mm>(0.0, -1.0))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":238383,"byte_end":238460,"line_start":207,"line_end":207,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":238465,"byte_end":238472,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":238477,"byte_end":238486,"line_start":209,"line_end":209,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":238491,"byte_end":238502,"line_start":210,"line_end":210,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2610},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":239033,"byte_end":239037,"line_start":230,"line_end":230,"column_start":12,"column_end":16},"name":"ceil","qualname":"<Size2D<T, U>>::ceil","value":"pub fn ceil(Self) -> Self where T: Ceil","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the smallest integer equal or greater than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the smallest integer equal or greater than the original value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":238640,"byte_end":238731,"line_start":218,"line_end":218,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":238736,"byte_end":238739,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":238744,"byte_end":238819,"line_start":220,"line_end":220,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":238824,"byte_end":238827,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":238832,"byte_end":238843,"line_start":222,"line_end":222,"column_start":5,"column_end":16}},{"value":"/ # use euclid::size2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":238848,"byte_end":238872,"line_start":223,"line_end":223,"column_start":5,"column_end":29}},{"value":"/ enum Mm {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":238877,"byte_end":238891,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":238896,"byte_end":238899,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(size2::<_, Mm>(-0.1, -0.8).ceil(), size2::<_, Mm>(0.0, 0.0))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":238904,"byte_end":238979,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":238984,"byte_end":238991,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":238996,"byte_end":239005,"line_start":228,"line_end":228,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":239010,"byte_end":239021,"line_start":229,"line_end":229,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2611},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":239548,"byte_end":239553,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"name":"floor","qualname":"<Size2D<T, U>>::floor","value":"pub fn floor(Self) -> Self where T: Floor","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the biggest integer equal or lower than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the biggest integer equal or lower than the original value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":239155,"byte_end":239243,"line_start":237,"line_end":237,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":239248,"byte_end":239251,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":239256,"byte_end":239331,"line_start":239,"line_end":239,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":239336,"byte_end":239339,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":239344,"byte_end":239355,"line_start":241,"line_end":241,"column_start":5,"column_end":16}},{"value":"/ # use euclid::size2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":239360,"byte_end":239384,"line_start":242,"line_end":242,"column_start":5,"column_end":29}},{"value":"/ enum Mm {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":239389,"byte_end":239403,"line_start":243,"line_end":243,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":239408,"byte_end":239411,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(size2::<_, Mm>(-0.1, -0.8).floor(), size2::<_, Mm>(-1.0, -1.0))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":239416,"byte_end":239494,"line_start":245,"line_end":245,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":239499,"byte_end":239506,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":239511,"byte_end":239520,"line_start":247,"line_end":247,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":239525,"byte_end":239536,"line_start":248,"line_end":248,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2612},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":239741,"byte_end":239745,"line_start":257,"line_end":257,"column_start":12,"column_end":16},"name":"area","qualname":"<Size2D<T, U>>::area","value":"pub fn area(Self) -> T::Output where T: Mul","parent":null,"children":[],"decl_id":null,"docs":" Returns result of multiplication of both components\n","sig":null,"attributes":[{"value":"/ Returns result of multiplication of both components","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":239674,"byte_end":239729,"line_start":256,"line_end":256,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2613},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":240484,"byte_end":240488,"line_start":282,"line_end":282,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Size2D<T, U>>::lerp","value":"pub fn lerp(Self, Self, T) -> Self where T: One + Sub<Output = T> + Mul<Output\n= T> + Add<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate each component between this size and another size.","sig":null,"attributes":[{"value":"/ Linearly interpolate each component between this size and another size.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":239841,"byte_end":239916,"line_start":264,"line_end":264,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":239921,"byte_end":239924,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":239929,"byte_end":239942,"line_start":266,"line_end":266,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":239947,"byte_end":239950,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":239955,"byte_end":239966,"line_start":268,"line_end":268,"column_start":5,"column_end":16}},{"value":"/ use euclid::size2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":239971,"byte_end":239993,"line_start":269,"line_end":269,"column_start":5,"column_end":27}},{"value":"/ use euclid::default::Size2D;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":239998,"byte_end":240030,"line_start":270,"line_end":270,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":240035,"byte_end":240038,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let from: Size2D<_> = size2(0.0, 10.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":240043,"byte_end":240086,"line_start":272,"line_end":272,"column_start":5,"column_end":48}},{"value":"/ let to:  Size2D<_> = size2(8.0, -4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":240091,"byte_end":240133,"line_start":273,"line_end":273,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":240138,"byte_end":240141,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from.lerp(to, -1.0), size2(-8.0,  24.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":240146,"byte_end":240202,"line_start":275,"line_end":275,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(from.lerp(to,  0.0), size2( 0.0,  10.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":240207,"byte_end":240263,"line_start":276,"line_end":276,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(from.lerp(to,  0.5), size2( 4.0,   3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":240268,"byte_end":240324,"line_start":277,"line_end":277,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(from.lerp(to,  1.0), size2( 8.0,  -4.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":240329,"byte_end":240385,"line_start":278,"line_end":278,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(from.lerp(to,  2.0), size2(16.0, -18.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":240390,"byte_end":240446,"line_start":279,"line_end":279,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":240451,"byte_end":240458,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":240463,"byte_end":240472,"line_start":281,"line_end":281,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2617},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":241110,"byte_end":241114,"line_start":298,"line_end":298,"column_start":12,"column_end":16},"name":"cast","qualname":"<Size2D<T, U>>::cast","value":"pub fn cast<NewT: NumCast>(Self) -> Size2D<NewT, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":240730,"byte_end":240804,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":240809,"byte_end":240812,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":240817,"byte_end":240904,"line_start":294,"line_end":294,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":240909,"byte_end":240997,"line_start":295,"line_end":295,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":241002,"byte_end":241084,"line_start":296,"line_end":296,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":241089,"byte_end":241098,"line_start":297,"line_end":297,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2619},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":241576,"byte_end":241584,"line_start":307,"line_end":307,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Size2D<T, U>>::try_cast","value":"pub fn try_cast<NewT: NumCast>(Self) -> Option<Size2D<NewT, U>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":241201,"byte_end":241284,"line_start":302,"line_end":302,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":241289,"byte_end":241292,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":241297,"byte_end":241384,"line_start":304,"line_end":304,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":241389,"byte_end":241477,"line_start":305,"line_end":305,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":241482,"byte_end":241564,"line_start":306,"line_end":306,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":2621},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":241911,"byte_end":241917,"line_start":318,"line_end":318,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<Size2D<T, U>>::to_f32","value":"pub fn to_f32(Self) -> Size2D<f32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` size.\n","sig":null,"attributes":[{"value":"/ Cast into an `f32` size.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":241857,"byte_end":241885,"line_start":316,"line_end":316,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":241890,"byte_end":241899,"line_start":317,"line_end":317,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2622},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":242029,"byte_end":242035,"line_start":324,"line_end":324,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<Size2D<T, U>>::to_f64","value":"pub fn to_f64(Self) -> Size2D<f64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` size.\n","sig":null,"attributes":[{"value":"/ Cast into an `f64` size.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":241975,"byte_end":242003,"line_start":322,"line_end":322,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":242008,"byte_end":242017,"line_start":323,"line_end":323,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2623},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":242384,"byte_end":242392,"line_start":334,"line_end":334,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<Size2D<T, U>>::to_usize","value":"pub fn to_usize(Self) -> Size2D<usize, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `uint` size, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `uint` size, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":242093,"byte_end":242150,"line_start":328,"line_end":328,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":242155,"byte_end":242158,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point sizes, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":242163,"byte_end":242238,"line_start":330,"line_end":330,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":242243,"byte_end":242317,"line_start":331,"line_end":331,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":242322,"byte_end":242358,"line_start":332,"line_end":332,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":242363,"byte_end":242372,"line_start":333,"line_end":333,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2624},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":242742,"byte_end":242748,"line_start":344,"line_end":344,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<Size2D<T, U>>::to_u32","value":"pub fn to_u32(Self) -> Size2D<u32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` size, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `u32` size, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":242452,"byte_end":242508,"line_start":338,"line_end":338,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":242513,"byte_end":242516,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point sizes, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":242521,"byte_end":242596,"line_start":340,"line_end":340,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":242601,"byte_end":242675,"line_start":341,"line_end":341,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":242680,"byte_end":242716,"line_start":342,"line_end":342,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":242721,"byte_end":242730,"line_start":343,"line_end":343,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2625},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":243096,"byte_end":243102,"line_start":354,"line_end":354,"column_start":12,"column_end":18},"name":"to_u64","qualname":"<Size2D<T, U>>::to_u64","value":"pub fn to_u64(Self) -> Size2D<u64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u64` size, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `u64` size, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":242806,"byte_end":242862,"line_start":348,"line_end":348,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":242867,"byte_end":242870,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point sizes, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":242875,"byte_end":242950,"line_start":350,"line_end":350,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":242955,"byte_end":243029,"line_start":351,"line_end":351,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":243034,"byte_end":243070,"line_start":352,"line_end":352,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":243075,"byte_end":243084,"line_start":353,"line_end":353,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2626},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":243450,"byte_end":243456,"line_start":364,"line_end":364,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<Size2D<T, U>>::to_i32","value":"pub fn to_i32(Self) -> Size2D<i32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i32` size, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i32` size, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":243160,"byte_end":243216,"line_start":358,"line_end":358,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":243221,"byte_end":243224,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point sizes, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":243229,"byte_end":243304,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":243309,"byte_end":243383,"line_start":361,"line_end":361,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":243388,"byte_end":243424,"line_start":362,"line_end":362,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":243429,"byte_end":243438,"line_start":363,"line_end":363,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2627},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":243804,"byte_end":243810,"line_start":374,"line_end":374,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<Size2D<T, U>>::to_i64","value":"pub fn to_i64(Self) -> Size2D<i64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i64` size, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i64` size, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":243514,"byte_end":243570,"line_start":368,"line_end":368,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":243575,"byte_end":243578,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point sizes, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":243583,"byte_end":243658,"line_start":370,"line_end":370,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":243663,"byte_end":243737,"line_start":371,"line_end":371,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":243742,"byte_end":243778,"line_start":372,"line_end":372,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":243783,"byte_end":243792,"line_start":373,"line_end":373,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2631},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":244172,"byte_end":244175,"line_start":385,"line_end":385,"column_start":12,"column_end":15},"name":"abs","qualname":"<Size2D<T, U>>::abs","value":"pub fn abs(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the absolute value of each component.","sig":null,"attributes":[{"value":"/ Computes the absolute value of each component.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":243904,"byte_end":243954,"line_start":380,"line_end":380,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":243959,"byte_end":243962,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ For `f32` and `f64`, `NaN` will be returned for component if the component is `NaN`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":243967,"byte_end":244055,"line_start":382,"line_end":382,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":244060,"byte_end":244063,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ For signed integers, `::MIN` will be returned for component if the component is `::MIN`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":244068,"byte_end":244160,"line_start":384,"line_end":384,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":2632},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":244362,"byte_end":244373,"line_start":390,"line_end":390,"column_start":12,"column_end":23},"name":"is_positive","qualname":"<Size2D<T, U>>::is_positive","value":"pub fn is_positive(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if both components is positive and `false` any component is zero or negative.\n","sig":null,"attributes":[{"value":"/ Returns `true` if both components is positive and `false` any component is zero or negative.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":244254,"byte_end":244350,"line_start":389,"line_end":389,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":2636},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":244611,"byte_end":244614,"line_start":398,"line_end":398,"column_start":12,"column_end":15},"name":"min","qualname":"<Size2D<T, U>>::min","value":"pub fn min(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the size each component of which are minimum of this size and another.\n","sig":null,"attributes":[{"value":"/ Returns the size each component of which are minimum of this size and another.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":244503,"byte_end":244585,"line_start":396,"line_end":396,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":244590,"byte_end":244599,"line_start":397,"line_end":397,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2637},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":244839,"byte_end":244842,"line_start":404,"line_end":404,"column_start":12,"column_end":15},"name":"max","qualname":"<Size2D<T, U>>::max","value":"pub fn max(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the size each component of which are maximum of this size and another.\n","sig":null,"attributes":[{"value":"/ Returns the size each component of which are maximum of this size and another.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":244731,"byte_end":244813,"line_start":402,"line_end":402,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":244818,"byte_end":244827,"line_start":403,"line_end":403,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2638},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":245152,"byte_end":245157,"line_start":413,"line_end":413,"column_start":12,"column_end":17},"name":"clamp","qualname":"<Size2D<T, U>>::clamp","value":"pub fn clamp(Self, Self, Self) -> Self where T: Copy","parent":null,"children":[],"decl_id":null,"docs":" Returns the size each component of which clamped by corresponding\n components of `start` and `end`.","sig":null,"attributes":[{"value":"/ Returns the size each component of which clamped by corresponding","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":244959,"byte_end":245028,"line_start":408,"line_end":408,"column_start":5,"column_end":74}},{"value":"/ components of `start` and `end`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":245033,"byte_end":245069,"line_start":409,"line_end":409,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":245074,"byte_end":245077,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ Shortcut for `self.max(start).min(end)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":245082,"byte_end":245126,"line_start":411,"line_end":411,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":245131,"byte_end":245140,"line_start":412,"line_end":412,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2639},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":245363,"byte_end":245375,"line_start":421,"line_end":421,"column_start":12,"column_end":24},"name":"greater_than","qualname":"<Size2D<T, U>>::greater_than","value":"pub fn greater_than(Self, Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"greater then\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"greater then\" operation on each component.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":245273,"byte_end":245351,"line_start":420,"line_end":420,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2640},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":245629,"byte_end":245639,"line_start":429,"line_end":429,"column_start":12,"column_end":22},"name":"lower_than","qualname":"<Size2D<T, U>>::lower_than","value":"pub fn lower_than(Self, Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"lower then\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"lower then\" operation on each component.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":245541,"byte_end":245617,"line_start":428,"line_end":428,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2641},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":245887,"byte_end":245895,"line_start":437,"line_end":437,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Size2D<T, U>>::is_empty","value":"pub fn is_empty(Self) -> bool where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if any component of size is zero, negative, or NaN.\n","sig":null,"attributes":[{"value":"/ Returns `true` if any component of size is zero, negative, or NaN.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":245805,"byte_end":245875,"line_start":436,"line_end":436,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2645},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":246264,"byte_end":246269,"line_start":450,"line_end":450,"column_start":12,"column_end":17},"name":"equal","qualname":"<Size2D<T, U>>::equal","value":"pub fn equal(Self, Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"equal\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"equal\" operation on each component.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":246181,"byte_end":246252,"line_start":449,"line_end":449,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2646},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":246524,"byte_end":246533,"line_start":458,"line_end":458,"column_start":12,"column_end":21},"name":"not_equal","qualname":"<Size2D<T, U>>::not_equal","value":"pub fn not_equal(Self, Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"not equal\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"not equal\" operation on each component.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":246437,"byte_end":246512,"line_start":457,"line_end":457,"column_start":5,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":2740},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":250654,"byte_end":250659,"line_start":627,"line_end":627,"column_start":14,"column_end":19},"name":"size2","qualname":"::size::size2","value":"pub const fn size2<T, U>(T, T) -> Size2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `Size2D::new(w, h)`.\n","sig":null,"attributes":[{"value":"/ Shorthand for `Size2D::new(w, h)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":250592,"byte_end":250630,"line_start":625,"line_end":625,"column_start":1,"column_end":39}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":250631,"byte_end":250640,"line_start":626,"line_end":626,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":2767},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":258154,"byte_end":258160,"line_start":907,"line_end":907,"column_start":12,"column_end":18},"name":"Size3D","qualname":"::size::Size3D","value":"Size3D { width, height, depth, _unit }","parent":null,"children":[{"krate":0,"index":2770},{"krate":0,"index":2771},{"krate":0,"index":2772},{"krate":0,"index":2773}],"decl_id":null,"docs":" A 3d size tagged with a unit.\n","sig":null,"attributes":[{"value":"/ A 3d size tagged with a unit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":258098,"byte_end":258131,"line_start":905,"line_end":905,"column_start":1,"column_end":34}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":258132,"byte_end":258142,"line_start":906,"line_end":906,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2770},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":258248,"byte_end":258253,"line_start":909,"line_end":909,"column_start":9,"column_end":14},"name":"width","qualname":"::size::Size3D::width","value":"T","parent":{"krate":0,"index":2767},"children":[],"decl_id":null,"docs":" The extent of the element in the `U` units along the `x` axis.\n","sig":null,"attributes":[{"value":"/ The extent of the element in the `U` units along the `x` axis.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":258173,"byte_end":258239,"line_start":908,"line_end":908,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":2771},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":258337,"byte_end":258343,"line_start":911,"line_end":911,"column_start":9,"column_end":15},"name":"height","qualname":"::size::Size3D::height","value":"T","parent":{"krate":0,"index":2767},"children":[],"decl_id":null,"docs":" The extent of the element in the `U` units along the `y` axis.\n","sig":null,"attributes":[{"value":"/ The extent of the element in the `U` units along the `y` axis.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":258262,"byte_end":258328,"line_start":910,"line_end":910,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":2772},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":258427,"byte_end":258432,"line_start":913,"line_end":913,"column_start":9,"column_end":14},"name":"depth","qualname":"::size::Size3D::depth","value":"T","parent":{"krate":0,"index":2767},"children":[],"decl_id":null,"docs":" The extent of the element in the `U` units along the `z` axis.\n","sig":null,"attributes":[{"value":"/ The extent of the element in the `U` units along the `z` axis.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":258352,"byte_end":258418,"line_start":912,"line_end":912,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":2773},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":258464,"byte_end":258469,"line_start":915,"line_end":915,"column_start":9,"column_end":14},"name":"_unit","qualname":"::size::Size3D::_unit","value":"core::marker::PhantomData<U>","parent":{"krate":0,"index":2767},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2804},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":260648,"byte_end":260652,"line_start":1005,"line_end":1005,"column_start":12,"column_end":16},"name":"zero","qualname":"<Size3D<T, U>>::zero","value":"pub fn zero() -> Self where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" The same as [`Zero::zero()`] but available without importing trait.","sig":null,"attributes":[{"value":"/ The same as [`Zero::zero()`] but available without importing trait.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":260495,"byte_end":260566,"line_start":1002,"line_end":1002,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":260571,"byte_end":260574,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ [`Zero::zero()`]: ./num/trait.Zero.html#tymethod.zero","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":260579,"byte_end":260636,"line_start":1004,"line_end":1004,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2805},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":260838,"byte_end":260841,"line_start":1014,"line_end":1014,"column_start":18,"column_end":21},"name":"new","qualname":"<Size3D<T, U>>::new","value":"pub const fn new(T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar values.\n","sig":null,"attributes":[{"value":"/ Constructor taking scalar values.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":260769,"byte_end":260806,"line_start":1012,"line_end":1012,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":260811,"byte_end":260820,"line_start":1013,"line_end":1013,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2806},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":261089,"byte_end":261101,"line_start":1024,"line_end":1024,"column_start":12,"column_end":24},"name":"from_lengths","qualname":"<Size3D<T, U>>::from_lengths","value":"pub fn from_lengths(Length<T, U>, Length<T, U>, Length<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar strongly typed lengths.\n","sig":null,"attributes":[{"value":"/ Constructor taking scalar strongly typed lengths.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":261010,"byte_end":261063,"line_start":1022,"line_end":1022,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":261068,"byte_end":261077,"line_start":1023,"line_end":1023,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2807},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":261318,"byte_end":261323,"line_start":1030,"line_end":1030,"column_start":12,"column_end":17},"name":"splat","qualname":"<Size3D<T, U>>::splat","value":"pub fn splat(T) -> Self where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Constructor setting all components to the same value.\n","sig":null,"attributes":[{"value":"/ Constructor setting all components to the same value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":261235,"byte_end":261292,"line_start":1028,"line_end":1028,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":261297,"byte_end":261306,"line_start":1029,"line_end":1029,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2808},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":261587,"byte_end":261599,"line_start":1044,"line_end":1044,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Size3D<T, U>>::from_untyped","value":"pub fn from_untyped(Size3D<T, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":261525,"byte_end":261561,"line_start":1042,"line_end":1042,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":261566,"byte_end":261575,"line_start":1043,"line_end":1043,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2812},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":261840,"byte_end":261848,"line_start":1052,"line_end":1052,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Size3D<T, U>>::to_array","value":"pub fn to_array(Self) -> [T; ]","parent":null,"children":[],"decl_id":null,"docs":" Return this size as an array of three elements (width, then height, then depth).\n","sig":null,"attributes":[{"value":"/ Return this size as an array of three elements (width, then height, then depth).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":261730,"byte_end":261814,"line_start":1050,"line_end":1050,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":261819,"byte_end":261828,"line_start":1051,"line_end":1051,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2814},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":262034,"byte_end":262042,"line_start":1058,"line_end":1058,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<Size3D<T, U>>::to_tuple","value":"pub fn to_tuple(Self) -> (T, T, T)","parent":null,"children":[],"decl_id":null,"docs":" Return this size as an array of three elements (width, then height, then depth).\n","sig":null,"attributes":[{"value":"/ Return this size as an array of three elements (width, then height, then depth).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":261924,"byte_end":262008,"line_start":1056,"line_end":1056,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":262013,"byte_end":262022,"line_start":1057,"line_end":1057,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2815},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":262209,"byte_end":262218,"line_start":1064,"line_end":1064,"column_start":12,"column_end":21},"name":"to_vector","qualname":"<Size3D<T, U>>::to_vector","value":"pub fn to_vector(Self) -> Vector3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Return this size as a vector with width, height and depth.\n","sig":null,"attributes":[{"value":"/ Return this size as a vector with width, height and depth.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":262121,"byte_end":262183,"line_start":1062,"line_end":1062,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":262188,"byte_end":262197,"line_start":1063,"line_end":1063,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2816},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":262386,"byte_end":262396,"line_start":1070,"line_end":1070,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Size3D<T, U>>::to_untyped","value":"pub fn to_untyped(Self) -> Size3D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":262306,"byte_end":262360,"line_start":1068,"line_end":1068,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":262365,"byte_end":262374,"line_start":1069,"line_end":1069,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2817},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":262510,"byte_end":262519,"line_start":1076,"line_end":1076,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Size3D<T, U>>::cast_unit","value":"pub fn cast_unit<V>(Self) -> Size3D<T, V>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit\n","sig":null,"attributes":[{"value":"/ Cast the unit","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":262467,"byte_end":262484,"line_start":1074,"line_end":1074,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":262489,"byte_end":262498,"line_start":1075,"line_end":1075,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2819},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":262984,"byte_end":262989,"line_start":1092,"line_end":1092,"column_start":12,"column_end":17},"name":"round","qualname":"<Size3D<T, U>>::round","value":"pub fn round(Self) -> Self where T: Round","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the nearest integer value.","sig":null,"attributes":[{"value":"/ Rounds each component to the nearest integer value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":262615,"byte_end":262670,"line_start":1080,"line_end":1080,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":262675,"byte_end":262678,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":262683,"byte_end":262758,"line_start":1082,"line_end":1082,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":262763,"byte_end":262766,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":262771,"byte_end":262782,"line_start":1084,"line_end":1084,"column_start":5,"column_end":16}},{"value":"/ # use euclid::size3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":262787,"byte_end":262811,"line_start":1085,"line_end":1085,"column_start":5,"column_end":29}},{"value":"/ enum Mm {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":262816,"byte_end":262830,"line_start":1086,"line_end":1086,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":262835,"byte_end":262838,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(size3::<_, Mm>(-0.1, -0.8, 0.4).round(), size3::<_, Mm>(0.0, -1.0, 0.0))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":262843,"byte_end":262930,"line_start":1088,"line_end":1088,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":262935,"byte_end":262942,"line_start":1089,"line_end":1089,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":262947,"byte_end":262956,"line_start":1090,"line_end":1090,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":262961,"byte_end":262972,"line_start":1091,"line_end":1091,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2820},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":263533,"byte_end":263537,"line_start":1111,"line_end":1111,"column_start":12,"column_end":16},"name":"ceil","qualname":"<Size3D<T, U>>::ceil","value":"pub fn ceil(Self) -> Self where T: Ceil","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the smallest integer equal or greater than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the smallest integer equal or greater than the original value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":263130,"byte_end":263221,"line_start":1099,"line_end":1099,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":263226,"byte_end":263229,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":263234,"byte_end":263309,"line_start":1101,"line_end":1101,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":263314,"byte_end":263317,"line_start":1102,"line_end":1102,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":263322,"byte_end":263333,"line_start":1103,"line_end":1103,"column_start":5,"column_end":16}},{"value":"/ # use euclid::size3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":263338,"byte_end":263362,"line_start":1104,"line_end":1104,"column_start":5,"column_end":29}},{"value":"/ enum Mm {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":263367,"byte_end":263381,"line_start":1105,"line_end":1105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":263386,"byte_end":263389,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(size3::<_, Mm>(-0.1, -0.8, 0.4).ceil(), size3::<_, Mm>(0.0, 0.0, 1.0))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":263394,"byte_end":263479,"line_start":1107,"line_end":1107,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":263484,"byte_end":263491,"line_start":1108,"line_end":1108,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":263496,"byte_end":263505,"line_start":1109,"line_end":1109,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":263510,"byte_end":263521,"line_start":1110,"line_end":1110,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2821},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":264077,"byte_end":264082,"line_start":1130,"line_end":1130,"column_start":12,"column_end":17},"name":"floor","qualname":"<Size3D<T, U>>::floor","value":"pub fn floor(Self) -> Self where T: Floor","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the biggest integer equal or lower than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the biggest integer equal or lower than the original value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":263674,"byte_end":263762,"line_start":1118,"line_end":1118,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":263767,"byte_end":263770,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":263775,"byte_end":263850,"line_start":1120,"line_end":1120,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":263855,"byte_end":263858,"line_start":1121,"line_end":1121,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":263863,"byte_end":263874,"line_start":1122,"line_end":1122,"column_start":5,"column_end":16}},{"value":"/ # use euclid::size3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":263879,"byte_end":263903,"line_start":1123,"line_end":1123,"column_start":5,"column_end":29}},{"value":"/ enum Mm {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":263908,"byte_end":263922,"line_start":1124,"line_end":1124,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":263927,"byte_end":263930,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(size3::<_, Mm>(-0.1, -0.8, 0.4).floor(), size3::<_, Mm>(-1.0, -1.0, 0.0))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":263935,"byte_end":264023,"line_start":1126,"line_end":1126,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":264028,"byte_end":264035,"line_start":1127,"line_end":1127,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":264040,"byte_end":264049,"line_start":1128,"line_end":1128,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":264054,"byte_end":264065,"line_start":1129,"line_end":1129,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2822},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":264289,"byte_end":264295,"line_start":1138,"line_end":1138,"column_start":12,"column_end":18},"name":"volume","qualname":"<Size3D<T, U>>::volume","value":"pub fn volume(Self) -> T where T: Mul<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Returns result of multiplication of all components\n","sig":null,"attributes":[{"value":"/ Returns result of multiplication of all components","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":264223,"byte_end":264277,"line_start":1137,"line_end":1137,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2823},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":265078,"byte_end":265082,"line_start":1163,"line_end":1163,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Size3D<T, U>>::lerp","value":"pub fn lerp(Self, Self, T) -> Self where T: One + Sub<Output = T> + Mul<Output\n= T> + Add<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between this size and another size.","sig":null,"attributes":[{"value":"/ Linearly interpolate between this size and another size.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":264408,"byte_end":264468,"line_start":1145,"line_end":1145,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":264473,"byte_end":264476,"line_start":1146,"line_end":1146,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":264481,"byte_end":264494,"line_start":1147,"line_end":1147,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":264499,"byte_end":264502,"line_start":1148,"line_end":1148,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":264507,"byte_end":264518,"line_start":1149,"line_end":1149,"column_start":5,"column_end":16}},{"value":"/ use euclid::size3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":264523,"byte_end":264545,"line_start":1150,"line_end":1150,"column_start":5,"column_end":27}},{"value":"/ use euclid::default::Size3D;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":264550,"byte_end":264582,"line_start":1151,"line_end":1151,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":264587,"byte_end":264590,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ let from: Size3D<_> = size3(0.0, 10.0, -1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":264595,"byte_end":264644,"line_start":1153,"line_end":1153,"column_start":5,"column_end":54}},{"value":"/ let to:  Size3D<_> = size3(8.0, -4.0,  0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":264649,"byte_end":264697,"line_start":1154,"line_end":1154,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":264702,"byte_end":264705,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from.lerp(to, -1.0), size3(-8.0,  24.0, -2.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":264710,"byte_end":264772,"line_start":1156,"line_end":1156,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(from.lerp(to,  0.0), size3( 0.0,  10.0, -1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":264777,"byte_end":264839,"line_start":1157,"line_end":1157,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(from.lerp(to,  0.5), size3( 4.0,   3.0, -0.5));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":264844,"byte_end":264906,"line_start":1158,"line_end":1158,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(from.lerp(to,  1.0), size3( 8.0,  -4.0,  0.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":264911,"byte_end":264973,"line_start":1159,"line_end":1159,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(from.lerp(to,  2.0), size3(16.0, -18.0,  1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":264978,"byte_end":265040,"line_start":1160,"line_end":1160,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":265045,"byte_end":265052,"line_start":1161,"line_end":1161,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":265057,"byte_end":265066,"line_start":1162,"line_end":1162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2827},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":265704,"byte_end":265708,"line_start":1179,"line_end":1179,"column_start":12,"column_end":16},"name":"cast","qualname":"<Size3D<T, U>>::cast","value":"pub fn cast<NewT: NumCast>(Self) -> Size3D<NewT, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":265324,"byte_end":265398,"line_start":1173,"line_end":1173,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":265403,"byte_end":265406,"line_start":1174,"line_end":1174,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":265411,"byte_end":265498,"line_start":1175,"line_end":1175,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":265503,"byte_end":265591,"line_start":1176,"line_end":1176,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":265596,"byte_end":265678,"line_start":1177,"line_end":1177,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":265683,"byte_end":265692,"line_start":1178,"line_end":1178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2829},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":266170,"byte_end":266178,"line_start":1188,"line_end":1188,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Size3D<T, U>>::try_cast","value":"pub fn try_cast<NewT: NumCast>(Self) -> Option<Size3D<NewT, U>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":265795,"byte_end":265878,"line_start":1183,"line_end":1183,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":265883,"byte_end":265886,"line_start":1184,"line_end":1184,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":265891,"byte_end":265978,"line_start":1185,"line_end":1185,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":265983,"byte_end":266071,"line_start":1186,"line_end":1186,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":266076,"byte_end":266158,"line_start":1187,"line_end":1187,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":2831},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":266591,"byte_end":266597,"line_start":1203,"line_end":1203,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<Size3D<T, U>>::to_f32","value":"pub fn to_f32(Self) -> Size3D<f32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` size.\n","sig":null,"attributes":[{"value":"/ Cast into an `f32` size.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":266537,"byte_end":266565,"line_start":1201,"line_end":1201,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":266570,"byte_end":266579,"line_start":1202,"line_end":1202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2832},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":266709,"byte_end":266715,"line_start":1209,"line_end":1209,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<Size3D<T, U>>::to_f64","value":"pub fn to_f64(Self) -> Size3D<f64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` size.\n","sig":null,"attributes":[{"value":"/ Cast into an `f64` size.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":266655,"byte_end":266683,"line_start":1207,"line_end":1207,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":266688,"byte_end":266697,"line_start":1208,"line_end":1208,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2833},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":267064,"byte_end":267072,"line_start":1219,"line_end":1219,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<Size3D<T, U>>::to_usize","value":"pub fn to_usize(Self) -> Size3D<usize, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `uint` size, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `uint` size, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":266773,"byte_end":266830,"line_start":1213,"line_end":1213,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":266835,"byte_end":266838,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point sizes, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":266843,"byte_end":266918,"line_start":1215,"line_end":1215,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":266923,"byte_end":266997,"line_start":1216,"line_end":1216,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":267002,"byte_end":267038,"line_start":1217,"line_end":1217,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":267043,"byte_end":267052,"line_start":1218,"line_end":1218,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2834},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":267422,"byte_end":267428,"line_start":1229,"line_end":1229,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<Size3D<T, U>>::to_u32","value":"pub fn to_u32(Self) -> Size3D<u32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` size, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `u32` size, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":267132,"byte_end":267188,"line_start":1223,"line_end":1223,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":267193,"byte_end":267196,"line_start":1224,"line_end":1224,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point sizes, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":267201,"byte_end":267276,"line_start":1225,"line_end":1225,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":267281,"byte_end":267355,"line_start":1226,"line_end":1226,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":267360,"byte_end":267396,"line_start":1227,"line_end":1227,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":267401,"byte_end":267410,"line_start":1228,"line_end":1228,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2835},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":267776,"byte_end":267782,"line_start":1239,"line_end":1239,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<Size3D<T, U>>::to_i32","value":"pub fn to_i32(Self) -> Size3D<i32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i32` size, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i32` size, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":267486,"byte_end":267542,"line_start":1233,"line_end":1233,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":267547,"byte_end":267550,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point sizes, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":267555,"byte_end":267630,"line_start":1235,"line_end":1235,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":267635,"byte_end":267709,"line_start":1236,"line_end":1236,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":267714,"byte_end":267750,"line_start":1237,"line_end":1237,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":267755,"byte_end":267764,"line_start":1238,"line_end":1238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2836},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":268130,"byte_end":268136,"line_start":1249,"line_end":1249,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<Size3D<T, U>>::to_i64","value":"pub fn to_i64(Self) -> Size3D<i64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i64` size, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i64` size, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":267840,"byte_end":267896,"line_start":1243,"line_end":1243,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":267901,"byte_end":267904,"line_start":1244,"line_end":1244,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point sizes, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":267909,"byte_end":267984,"line_start":1245,"line_end":1245,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":267989,"byte_end":268063,"line_start":1246,"line_end":1246,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":268068,"byte_end":268104,"line_start":1247,"line_end":1247,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":268109,"byte_end":268118,"line_start":1248,"line_end":1248,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2840},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":268498,"byte_end":268501,"line_start":1260,"line_end":1260,"column_start":12,"column_end":15},"name":"abs","qualname":"<Size3D<T, U>>::abs","value":"pub fn abs(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the absolute value of each component.","sig":null,"attributes":[{"value":"/ Computes the absolute value of each component.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":268230,"byte_end":268280,"line_start":1255,"line_end":1255,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":268285,"byte_end":268288,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ For `f32` and `f64`, `NaN` will be returned for component if the component is `NaN`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":268293,"byte_end":268381,"line_start":1257,"line_end":1257,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":268386,"byte_end":268389,"line_start":1258,"line_end":1258,"column_start":5,"column_end":8}},{"value":"/ For signed integers, `::MIN` will be returned for component if the component is `::MIN`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":268394,"byte_end":268486,"line_start":1259,"line_end":1259,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":2841},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":268705,"byte_end":268716,"line_start":1265,"line_end":1265,"column_start":12,"column_end":23},"name":"is_positive","qualname":"<Size3D<T, U>>::is_positive","value":"pub fn is_positive(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all components is positive and `false` any component is zero or negative.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all components is positive and `false` any component is zero or negative.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":268598,"byte_end":268693,"line_start":1264,"line_end":1264,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":2845},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":268982,"byte_end":268985,"line_start":1273,"line_end":1273,"column_start":12,"column_end":15},"name":"min","qualname":"<Size3D<T, U>>::min","value":"pub fn min(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the size each component of which are minimum of this size and another.\n","sig":null,"attributes":[{"value":"/ Returns the size each component of which are minimum of this size and another.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":268874,"byte_end":268956,"line_start":1271,"line_end":1271,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":268961,"byte_end":268970,"line_start":1272,"line_end":1272,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2846},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":269287,"byte_end":269290,"line_start":1283,"line_end":1283,"column_start":12,"column_end":15},"name":"max","qualname":"<Size3D<T, U>>::max","value":"pub fn max(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the size each component of which are maximum of this size and another.\n","sig":null,"attributes":[{"value":"/ Returns the size each component of which are maximum of this size and another.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":269179,"byte_end":269261,"line_start":1281,"line_end":1281,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":269266,"byte_end":269275,"line_start":1282,"line_end":1282,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2847},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":269677,"byte_end":269682,"line_start":1296,"line_end":1296,"column_start":12,"column_end":17},"name":"clamp","qualname":"<Size3D<T, U>>::clamp","value":"pub fn clamp(Self, Self, Self) -> Self where T: Copy","parent":null,"children":[],"decl_id":null,"docs":" Returns the size each component of which clamped by corresponding\n components of `start` and `end`.","sig":null,"attributes":[{"value":"/ Returns the size each component of which clamped by corresponding","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":269484,"byte_end":269553,"line_start":1291,"line_end":1291,"column_start":5,"column_end":74}},{"value":"/ components of `start` and `end`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":269558,"byte_end":269594,"line_start":1292,"line_end":1292,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":269599,"byte_end":269602,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}},{"value":"/ Shortcut for `self.max(start).min(end)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":269607,"byte_end":269651,"line_start":1294,"line_end":1294,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":269656,"byte_end":269665,"line_start":1295,"line_end":1295,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2848},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":269888,"byte_end":269900,"line_start":1304,"line_end":1304,"column_start":12,"column_end":24},"name":"greater_than","qualname":"<Size3D<T, U>>::greater_than","value":"pub fn greater_than(Self, Self) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"greater than\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"greater than\" operation on each component.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":269798,"byte_end":269876,"line_start":1303,"line_end":1303,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2849},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":270195,"byte_end":270205,"line_start":1313,"line_end":1313,"column_start":12,"column_end":22},"name":"lower_than","qualname":"<Size3D<T, U>>::lower_than","value":"pub fn lower_than(Self, Self) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"lower than\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"lower than\" operation on each component.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":270107,"byte_end":270183,"line_start":1312,"line_end":1312,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2850},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":270493,"byte_end":270501,"line_start":1322,"line_end":1322,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Size3D<T, U>>::is_empty","value":"pub fn is_empty(Self) -> bool where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if any component of size is zero, negative or NaN.\n","sig":null,"attributes":[{"value":"/ Returns `true` if any component of size is zero, negative or NaN.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":270412,"byte_end":270481,"line_start":1321,"line_end":1321,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2854},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":270785,"byte_end":270790,"line_start":1333,"line_end":1333,"column_start":12,"column_end":17},"name":"equal","qualname":"<Size3D<T, U>>::equal","value":"pub fn equal(Self, Self) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"equal\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"equal\" operation on each component.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":270702,"byte_end":270773,"line_start":1332,"line_end":1332,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2855},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":271087,"byte_end":271096,"line_start":1342,"line_end":1342,"column_start":12,"column_end":21},"name":"not_equal","qualname":"<Size3D<T, U>>::not_equal","value":"pub fn not_equal(Self, Self) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"not equal\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"not equal\" operation on each component.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":271000,"byte_end":271075,"line_start":1341,"line_end":1341,"column_start":5,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":2973},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":277051,"byte_end":277056,"line_start":1598,"line_end":1598,"column_start":14,"column_end":19},"name":"size3","qualname":"::size::size3","value":"pub const fn size3<T, U>(T, T, T) -> Size3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `Size3D::new(w, h, d)`.\n","sig":null,"attributes":[{"value":"/ Shorthand for `Size3D::new(w, h, d)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":276986,"byte_end":277027,"line_start":1596,"line_end":1596,"column_start":1,"column_end":42}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":277028,"byte_end":277037,"line_start":1597,"line_end":1597,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":3053},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":285910,"byte_end":285921,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"Transform2D","qualname":"::transform2d::Transform2D","value":"Transform2D { m11, m12, m21, m22, m31, m32, _unit }","parent":null,"children":[{"krate":0,"index":3057},{"krate":0,"index":3058},{"krate":0,"index":3059},{"krate":0,"index":3060},{"krate":0,"index":3061},{"krate":0,"index":3062},{"krate":0,"index":3063}],"decl_id":null,"docs":" A 2d transform represented by a column-major 3 by 3 matrix, compressed down to 3 by 2.","sig":null,"attributes":[{"value":"/ A 2d transform represented by a column-major 3 by 3 matrix, compressed down to 3 by 2.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":284422,"byte_end":284512,"line_start":32,"line_end":32,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":284513,"byte_end":284516,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Transforms can be parametrized over the source and destination units, to describe a","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":284517,"byte_end":284604,"line_start":34,"line_end":34,"column_start":1,"column_end":88}},{"value":"/ transformation from a space to another.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":284605,"byte_end":284648,"line_start":35,"line_end":35,"column_start":1,"column_end":44}},{"value":"/ For example, `Transform2D<f32, WorldSpace, ScreenSpace>::transform_point4d`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":284649,"byte_end":284728,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ takes a `Point2D<f32, WorldSpace>` and returns a `Point2D<f32, ScreenSpace>`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":284729,"byte_end":284810,"line_start":37,"line_end":37,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":284811,"byte_end":284814,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Transforms expose a set of convenience methods for pre- and post-transformations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":284815,"byte_end":284900,"line_start":39,"line_end":39,"column_start":1,"column_end":86}},{"value":"/ Pre-transformations (`pre_*` methods) correspond to adding an operation that is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":284901,"byte_end":284984,"line_start":40,"line_end":40,"column_start":1,"column_end":84}},{"value":"/ applied before the rest of the transformation, while post-transformations (`then_*`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":284985,"byte_end":285072,"line_start":41,"line_end":41,"column_start":1,"column_end":88}},{"value":"/ methods) add an operation that is applied after.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":285073,"byte_end":285125,"line_start":42,"line_end":42,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":285126,"byte_end":285129,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ The matrix representation is conceptually equivalent to a 3 by 3 matrix transformation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":285130,"byte_end":285220,"line_start":44,"line_end":44,"column_start":1,"column_end":91}},{"value":"/ compressed to 3 by 2 with the components that aren't needed to describe the set of 2d","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":285221,"byte_end":285310,"line_start":45,"line_end":45,"column_start":1,"column_end":90}},{"value":"/ transformations we are interested in implicitly defined:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":285311,"byte_end":285371,"line_start":46,"line_end":46,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":285372,"byte_end":285375,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":285376,"byte_end":285387,"line_start":48,"line_end":48,"column_start":1,"column_end":12}},{"value":"/  | m11 m12 0 |   |x|   |x'|","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":285388,"byte_end":285419,"line_start":49,"line_end":49,"column_start":1,"column_end":32}},{"value":"/  | m21 m22 0 | x |y| = |y'|","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":285420,"byte_end":285451,"line_start":50,"line_end":50,"column_start":1,"column_end":32}},{"value":"/  | m31 m32 1 |   |1|   |w |","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":285452,"byte_end":285483,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":285484,"byte_end":285491,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":285492,"byte_end":285495,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ When translating Transform2D into general matrix representations, consider that the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":285496,"byte_end":285583,"line_start":54,"line_end":54,"column_start":1,"column_end":88}},{"value":"/ representation follows the column-major notation with column vectors.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":285584,"byte_end":285657,"line_start":55,"line_end":55,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":285658,"byte_end":285661,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ The translation terms are m31 and m32.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":285662,"byte_end":285704,"line_start":57,"line_end":57,"column_start":1,"column_end":43}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":285705,"byte_end":285715,"line_start":58,"line_end":58,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3057},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":285945,"byte_end":285948,"line_start":65,"line_end":65,"column_start":9,"column_end":12},"name":"m11","qualname":"::transform2d::Transform2D::m11","value":"T","parent":{"krate":0,"index":3053},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3058},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":285957,"byte_end":285960,"line_start":65,"line_end":65,"column_start":21,"column_end":24},"name":"m12","qualname":"::transform2d::Transform2D::m12","value":"T","parent":{"krate":0,"index":3053},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3059},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":285973,"byte_end":285976,"line_start":66,"line_end":66,"column_start":9,"column_end":12},"name":"m21","qualname":"::transform2d::Transform2D::m21","value":"T","parent":{"krate":0,"index":3053},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3060},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":285985,"byte_end":285988,"line_start":66,"line_end":66,"column_start":21,"column_end":24},"name":"m22","qualname":"::transform2d::Transform2D::m22","value":"T","parent":{"krate":0,"index":3053},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3061},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":286001,"byte_end":286004,"line_start":67,"line_end":67,"column_start":9,"column_end":12},"name":"m31","qualname":"::transform2d::Transform2D::m31","value":"T","parent":{"krate":0,"index":3053},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3062},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":286013,"byte_end":286016,"line_start":67,"line_end":67,"column_start":21,"column_end":24},"name":"m32","qualname":"::transform2d::Transform2D::m32","value":"T","parent":{"krate":0,"index":3053},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3063},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":286048,"byte_end":286053,"line_start":69,"line_end":69,"column_start":9,"column_end":14},"name":"_unit","qualname":"::transform2d::Transform2D::_unit","value":"core::marker::PhantomData<(Src, Dst)>","parent":{"krate":0,"index":3053},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3092},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":287741,"byte_end":287744,"line_start":133,"line_end":133,"column_start":18,"column_end":21},"name":"new","qualname":"<Transform2D<T, Src, Dst>>::new","value":"pub const fn new(T, T, T, T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a transform specifying its components in using the column-major-column-vector\n matrix notation.","sig":null,"attributes":[{"value":"/ Create a transform specifying its components in using the column-major-column-vector","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":287275,"byte_end":287363,"line_start":118,"line_end":118,"column_start":5,"column_end":93}},{"value":"/ matrix notation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":287368,"byte_end":287388,"line_start":119,"line_end":119,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":287393,"byte_end":287396,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ For example, the translation terms m31 and m32 are the last two parameters parameters.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":287401,"byte_end":287491,"line_start":121,"line_end":121,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":287496,"byte_end":287499,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":287504,"byte_end":287511,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use euclid::default::Transform2D;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":287516,"byte_end":287553,"line_start":124,"line_end":124,"column_start":5,"column_end":42}},{"value":"/ let tx = 1.0;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":287558,"byte_end":287575,"line_start":125,"line_end":125,"column_start":5,"column_end":22}},{"value":"/ let ty = 2.0;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":287580,"byte_end":287597,"line_start":126,"line_end":126,"column_start":5,"column_end":22}},{"value":"/ let translation = Transform2D::new(","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":287602,"byte_end":287641,"line_start":127,"line_end":127,"column_start":5,"column_end":44}},{"value":"/   1.0, 0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":287646,"byte_end":287661,"line_start":128,"line_end":128,"column_start":5,"column_end":20}},{"value":"/   0.0, 1.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":287666,"byte_end":287681,"line_start":129,"line_end":129,"column_start":5,"column_end":20}},{"value":"/   tx,  ty,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":287686,"byte_end":287700,"line_start":130,"line_end":130,"column_start":5,"column_end":19}},{"value":"/ );","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":287705,"byte_end":287711,"line_start":131,"line_end":131,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":287716,"byte_end":287723,"line_start":132,"line_end":132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3093},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":288270,"byte_end":288279,"line_start":149,"line_end":149,"column_start":12,"column_end":21},"name":"approx_eq","qualname":"<Transform2D<T, Src, Dst>>::approx_eq","value":"pub fn approx_eq(&Self, &Self) -> bool where T: ApproxEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns true is this transform is approximately equal to the other one, using\n T's default epsilon value.","sig":null,"attributes":[{"value":"/ Returns true is this transform is approximately equal to the other one, using","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":287944,"byte_end":288025,"line_start":142,"line_end":142,"column_start":5,"column_end":86}},{"value":"/ T's default epsilon value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":288030,"byte_end":288060,"line_start":143,"line_end":143,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":288065,"byte_end":288068,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ The same as [`ApproxEq::approx_eq()`] but available without importing trait.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":288073,"byte_end":288153,"line_start":145,"line_end":145,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":288158,"byte_end":288161,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ [`ApproxEq::approx_eq()`]: ./approxeq/trait.ApproxEq.html#method.approx_eq","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":288166,"byte_end":288244,"line_start":147,"line_end":147,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":288249,"byte_end":288258,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3094},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":288741,"byte_end":288754,"line_start":161,"line_end":161,"column_start":12,"column_end":25},"name":"approx_eq_eps","qualname":"<Transform2D<T, Src, Dst>>::approx_eq_eps","value":"pub fn approx_eq_eps(&Self, &Self, &T) -> bool where T: ApproxEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns true is this transform is approximately equal to the other one, using\n a provided epsilon value.","sig":null,"attributes":[{"value":"/ Returns true is this transform is approximately equal to the other one, using","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":288404,"byte_end":288485,"line_start":154,"line_end":154,"column_start":5,"column_end":86}},{"value":"/ a provided epsilon value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":288490,"byte_end":288519,"line_start":155,"line_end":155,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":288524,"byte_end":288527,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ The same as [`ApproxEq::approx_eq_eps()`] but available without importing trait.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":288532,"byte_end":288616,"line_start":157,"line_end":157,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":288621,"byte_end":288624,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ [`ApproxEq::approx_eq_eps()`]: ./approxeq/trait.ApproxEq.html#method.approx_eq_eps","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":288629,"byte_end":288715,"line_start":159,"line_end":159,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":288720,"byte_end":288729,"line_start":160,"line_end":160,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3099},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":289320,"byte_end":289328,"line_start":177,"line_end":177,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Transform2D<T, Src, Dst>>::to_array","value":"pub fn to_array(&Self) -> [T; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns an array containing this transform's terms.","sig":null,"attributes":[{"value":"/ Returns an array containing this transform's terms.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":288951,"byte_end":289006,"line_start":168,"line_end":168,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":289011,"byte_end":289014,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The terms are laid out in the same order as they are","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":289019,"byte_end":289075,"line_start":170,"line_end":170,"column_start":5,"column_end":61}},{"value":"/ specified in `Transform2D::new`, that is following the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":289080,"byte_end":289138,"line_start":171,"line_end":171,"column_start":5,"column_end":63}},{"value":"/ column-major-column-vector matrix notation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":289143,"byte_end":289190,"line_start":172,"line_end":172,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":289195,"byte_end":289198,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ For example the translation terms are found in the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":289203,"byte_end":289257,"line_start":174,"line_end":174,"column_start":5,"column_end":59}},{"value":"/ last two slots of the array.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":289262,"byte_end":289294,"line_start":175,"line_end":175,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":289299,"byte_end":289308,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3101},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":289876,"byte_end":289895,"line_start":194,"line_end":194,"column_start":12,"column_end":31},"name":"to_array_transposed","qualname":"<Transform2D<T, Src, Dst>>::to_array_transposed","value":"pub fn to_array_transposed(&Self) -> [T; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns an array containing this transform's terms transposed.","sig":null,"attributes":[{"value":"/ Returns an array containing this transform's terms transposed.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":289474,"byte_end":289540,"line_start":185,"line_end":185,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":289545,"byte_end":289548,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ The terms are laid out in transposed order from the same order of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":289553,"byte_end":289622,"line_start":187,"line_end":187,"column_start":5,"column_end":74}},{"value":"/ `Transform3D::new` and `Transform3D::to_array`, that is following","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":289627,"byte_end":289696,"line_start":188,"line_end":188,"column_start":5,"column_end":74}},{"value":"/ the row-major-column-vector matrix notation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":289701,"byte_end":289749,"line_start":189,"line_end":189,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":289754,"byte_end":289757,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ For example the translation terms are found at indices 2 and 5","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":289762,"byte_end":289828,"line_start":191,"line_end":191,"column_start":5,"column_end":71}},{"value":"/ in the array.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":289833,"byte_end":289850,"line_start":192,"line_end":192,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":289855,"byte_end":289864,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3103},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":290149,"byte_end":290158,"line_start":204,"line_end":204,"column_start":12,"column_end":21},"name":"to_arrays","qualname":"<Transform2D<T, Src, Dst>>::to_arrays","value":"pub fn to_arrays(&Self) -> [[T; ]; ]","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `to_array` with elements packed two at a time\n in an array of arrays.\n","sig":null,"attributes":[{"value":"/ Equivalent to `to_array` with elements packed two at a time","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":290029,"byte_end":290092,"line_start":201,"line_end":201,"column_start":5,"column_end":68}},{"value":"/ in an array of arrays.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":290097,"byte_end":290123,"line_start":202,"line_end":202,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":290128,"byte_end":290137,"line_start":203,"line_end":203,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3106},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":290623,"byte_end":290633,"line_start":219,"line_end":219,"column_start":12,"column_end":22},"name":"from_array","qualname":"<Transform2D<T, Src, Dst>>::from_array","value":"pub fn from_array([T; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a transform providing its components via an array\n of 6 elements instead of as individual parameters.","sig":null,"attributes":[{"value":"/ Create a transform providing its components via an array","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":290316,"byte_end":290376,"line_start":212,"line_end":212,"column_start":5,"column_end":65}},{"value":"/ of 6 elements instead of as individual parameters.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":290381,"byte_end":290435,"line_start":213,"line_end":213,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":290440,"byte_end":290443,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ The order of the components corresponds to the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":290448,"byte_end":290498,"line_start":215,"line_end":215,"column_start":5,"column_end":55}},{"value":"/ column-major-column-vector matrix notation (the same order","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":290503,"byte_end":290565,"line_start":216,"line_end":216,"column_start":5,"column_end":67}},{"value":"/ as `Transform2D::new`).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":290570,"byte_end":290597,"line_start":217,"line_end":217,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":290602,"byte_end":290611,"line_start":218,"line_end":218,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3108},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":291079,"byte_end":291090,"line_start":234,"line_end":234,"column_start":12,"column_end":23},"name":"from_arrays","qualname":"<Transform2D<T, Src, Dst>>::from_arrays","value":"pub fn from_arrays([[T; ]; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `from_array` with elements packed two at a time\n in an array of arrays.","sig":null,"attributes":[{"value":"/ Equivalent to `from_array` with elements packed two at a time","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":290795,"byte_end":290860,"line_start":227,"line_end":227,"column_start":5,"column_end":70}},{"value":"/ in an array of arrays.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":290865,"byte_end":290891,"line_start":228,"line_end":228,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":290896,"byte_end":290899,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The order of the components corresponds to the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":290904,"byte_end":290954,"line_start":230,"line_end":230,"column_start":5,"column_end":55}},{"value":"/ column-major-column-vector matrix notation (the same order","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":290959,"byte_end":291021,"line_start":231,"line_end":231,"column_start":5,"column_end":67}},{"value":"/ as `Transform3D::new`).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":291026,"byte_end":291053,"line_start":232,"line_end":232,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":291058,"byte_end":291067,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3111},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":291355,"byte_end":291365,"line_start":244,"line_end":244,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Transform2D<T, Src, Dst>>::to_untyped","value":"pub fn to_untyped(&Self) -> Transform2D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":291275,"byte_end":291329,"line_start":242,"line_end":242,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":291334,"byte_end":291343,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3112},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":291623,"byte_end":291635,"line_start":254,"line_end":254,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Transform2D<T, Src, Dst>>::from_untyped","value":"pub fn from_untyped(&Transform2D<T, UnknownUnit, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":291561,"byte_end":291597,"line_start":252,"line_end":252,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":291602,"byte_end":291611,"line_start":253,"line_end":253,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3113},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":291902,"byte_end":291913,"line_start":264,"line_end":264,"column_start":12,"column_end":23},"name":"with_source","qualname":"<Transform2D<T, Src, Dst>>::with_source","value":"pub fn with_source<NewSrc>(&Self) -> Transform2D<T, NewSrc, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same transform with a different source unit.\n","sig":null,"attributes":[{"value":"/ Returns the same transform with a different source unit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":291816,"byte_end":291876,"line_start":262,"line_end":262,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":291881,"byte_end":291890,"line_start":263,"line_end":263,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3115},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":292196,"byte_end":292212,"line_start":274,"line_end":274,"column_start":12,"column_end":28},"name":"with_destination","qualname":"<Transform2D<T, Src, Dst>>::with_destination","value":"pub fn with_destination<NewDst>(&Self) -> Transform2D<T, Src, NewDst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same transform with a different destination unit.\n","sig":null,"attributes":[{"value":"/ Returns the same transform with a different destination unit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":292105,"byte_end":292170,"line_start":272,"line_end":272,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":292175,"byte_end":292184,"line_start":273,"line_end":273,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3117},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":292468,"byte_end":292473,"line_start":283,"line_end":283,"column_start":12,"column_end":17},"name":"to_3d","qualname":"<Transform2D<T, Src, Dst>>::to_3d","value":"pub fn to_3d(&Self) -> Transform3D<T, Src, Dst> where T: Zero + One","parent":null,"children":[],"decl_id":null,"docs":" Create a 3D transform from the current transform\n","sig":null,"attributes":[{"value":"/ Create a 3D transform from the current transform","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":292404,"byte_end":292456,"line_start":282,"line_end":282,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3122},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":292810,"byte_end":292814,"line_start":294,"line_end":294,"column_start":12,"column_end":16},"name":"cast","qualname":"<Transform2D<T, Src, Dst>>::cast","value":"pub fn cast<NewT: NumCast>(&Self) -> Transform2D<NewT, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.\n","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":292710,"byte_end":292784,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":292789,"byte_end":292798,"line_start":293,"line_end":293,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3124},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":293009,"byte_end":293017,"line_start":299,"line_end":299,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Transform2D<T, Src, Dst>>::try_cast","value":"pub fn try_cast<NewT: NumCast>(&Self) -> Option<Transform2D<NewT, Src, Dst>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.\n","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":292914,"byte_end":292997,"line_start":298,"line_end":298,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":3130},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":293793,"byte_end":293801,"line_start":329,"line_end":329,"column_start":12,"column_end":20},"name":"identity","qualname":"<Transform2D<T, Src, Dst>>::identity","value":"pub fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an identity matrix:","sig":null,"attributes":[{"value":"/ Create an identity matrix:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":293665,"byte_end":293695,"line_start":321,"line_end":321,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":293700,"byte_end":293703,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":293708,"byte_end":293719,"line_start":323,"line_end":323,"column_start":5,"column_end":16}},{"value":"/ 1 0","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":293724,"byte_end":293731,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"/ 0 1","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":293736,"byte_end":293743,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"/ 0 0","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":293748,"byte_end":293755,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":293760,"byte_end":293767,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":293772,"byte_end":293781,"line_start":328,"line_end":328,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3136},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":294494,"byte_end":294498,"line_start":353,"line_end":353,"column_start":12,"column_end":16},"name":"then","qualname":"<Transform2D<T, Src, Dst>>::then","value":"pub fn then<NewDst>(&Self, &Transform2D<T, Dst, NewDst>)\n-> Transform2D<T, Src, NewDst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplication of the two matrices such that mat's transformation\n applies after self's transformation.\n","sig":null,"attributes":[{"value":"/ Returns the multiplication of the two matrices such that mat's transformation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":294340,"byte_end":294421,"line_start":350,"line_end":350,"column_start":5,"column_end":86}},{"value":"/ applies after self's transformation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":294426,"byte_end":294466,"line_start":351,"line_end":351,"column_start":5,"column_end":45}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":294471,"byte_end":294482,"line_start":352,"line_end":352,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3142},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":295244,"byte_end":295255,"line_start":380,"line_end":380,"column_start":12,"column_end":23},"name":"translation","qualname":"<Transform2D<T, Src, Dst>>::translation","value":"pub fn translation(T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 2d translation transform:","sig":null,"attributes":[{"value":"/ Create a 2d translation transform:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":295108,"byte_end":295146,"line_start":372,"line_end":372,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":295151,"byte_end":295154,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":295159,"byte_end":295170,"line_start":374,"line_end":374,"column_start":5,"column_end":16}},{"value":"/ 1 0","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":295175,"byte_end":295182,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/ 0 1","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":295187,"byte_end":295194,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ x y","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":295199,"byte_end":295206,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":295211,"byte_end":295218,"line_start":378,"line_end":378,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":295223,"byte_end":295232,"line_start":379,"line_end":379,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3145},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":295582,"byte_end":295596,"line_start":394,"line_end":394,"column_start":12,"column_end":26},"name":"then_translate","qualname":"<Transform2D<T, Src, Dst>>::then_translate","value":"pub fn then_translate(&Self, Vector2D<T, Dst>) -> Self where T: Copy +\nAdd<Output = T> + Mul<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Applies a translation after self's transformation and returns the resulting transform.\n","sig":null,"attributes":[{"value":"/ Applies a translation after self's transformation and returns the resulting transform.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":295450,"byte_end":295540,"line_start":391,"line_end":391,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":295545,"byte_end":295554,"line_start":392,"line_end":392,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":295559,"byte_end":295570,"line_start":393,"line_end":393,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3146},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":295901,"byte_end":295914,"line_start":404,"line_end":404,"column_start":12,"column_end":25},"name":"pre_translate","qualname":"<Transform2D<T, Src, Dst>>::pre_translate","value":"pub fn pre_translate(&Self, Vector2D<T, Src>) -> Self where T: Copy +\nAdd<Output = T> + Mul<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Applies a translation before self's transformation and returns the resulting transform.\n","sig":null,"attributes":[{"value":"/ Applies a translation before self's transformation and returns the resulting transform.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":295768,"byte_end":295859,"line_start":401,"line_end":401,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":295864,"byte_end":295873,"line_start":402,"line_end":402,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":295878,"byte_end":295889,"line_start":403,"line_end":403,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3151},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":296342,"byte_end":296350,"line_start":419,"line_end":419,"column_start":12,"column_end":20},"name":"rotation","qualname":"<Transform2D<T, Src, Dst>>::rotation","value":"pub fn rotation(Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a rotation transform.\n","sig":null,"attributes":[{"value":"/ Returns a rotation transform.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":296283,"byte_end":296316,"line_start":417,"line_end":417,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":296321,"byte_end":296330,"line_start":418,"line_end":418,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3152},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":296727,"byte_end":296738,"line_start":433,"line_end":433,"column_start":12,"column_end":23},"name":"then_rotate","qualname":"<Transform2D<T, Src, Dst>>::then_rotate","value":"pub fn then_rotate(&Self, Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Applies a rotation after self's transformation and returns the resulting transform.\n","sig":null,"attributes":[{"value":"/ Applies a rotation after self's transformation and returns the resulting transform.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":296598,"byte_end":296685,"line_start":430,"line_end":430,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":296690,"byte_end":296699,"line_start":431,"line_end":431,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":296704,"byte_end":296715,"line_start":432,"line_end":432,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3153},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":296963,"byte_end":296973,"line_start":440,"line_end":440,"column_start":12,"column_end":22},"name":"pre_rotate","qualname":"<Transform2D<T, Src, Dst>>::pre_rotate","value":"pub fn pre_rotate(&Self, Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Applies a rotation before self's transformation and returns the resulting transform.\n","sig":null,"attributes":[{"value":"/ Applies a rotation before self's transformation and returns the resulting transform.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":296833,"byte_end":296921,"line_start":437,"line_end":437,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":296926,"byte_end":296935,"line_start":438,"line_end":438,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":296940,"byte_end":296951,"line_start":439,"line_end":439,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3158},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":297305,"byte_end":297310,"line_start":455,"line_end":455,"column_start":12,"column_end":17},"name":"scale","qualname":"<Transform2D<T, Src, Dst>>::scale","value":"pub fn scale(T, T) -> Self where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" Create a 2d scale transform:","sig":null,"attributes":[{"value":"/ Create a 2d scale transform:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":297175,"byte_end":297207,"line_start":447,"line_end":447,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":297212,"byte_end":297215,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":297220,"byte_end":297231,"line_start":449,"line_end":449,"column_start":5,"column_end":16}},{"value":"/ x 0","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":297236,"byte_end":297243,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/ 0 y","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":297248,"byte_end":297255,"line_start":451,"line_end":451,"column_start":5,"column_end":12}},{"value":"/ 0 0","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":297260,"byte_end":297267,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":297272,"byte_end":297279,"line_start":453,"line_end":453,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":297284,"byte_end":297293,"line_start":454,"line_end":454,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3160},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":297635,"byte_end":297645,"line_start":471,"line_end":471,"column_start":12,"column_end":22},"name":"then_scale","qualname":"<Transform2D<T, Src, Dst>>::then_scale","value":"pub fn then_scale(&Self, T, T) -> Self where T: Copy + Add<Output = T> +\nMul<Output = T> + Zero","parent":null,"children":[],"decl_id":null,"docs":" Applies a scale after self's transformation and returns the resulting transform.\n","sig":null,"attributes":[{"value":"/ Applies a scale after self's transformation and returns the resulting transform.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":297509,"byte_end":297593,"line_start":468,"line_end":468,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":297598,"byte_end":297607,"line_start":469,"line_end":469,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":297612,"byte_end":297623,"line_start":470,"line_end":470,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3161},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":297932,"byte_end":297941,"line_start":481,"line_end":481,"column_start":12,"column_end":21},"name":"pre_scale","qualname":"<Transform2D<T, Src, Dst>>::pre_scale","value":"pub fn pre_scale(&Self, T, T) -> Self where T: Copy + Mul<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Applies a scale before self's transformation and returns the resulting transform.\n","sig":null,"attributes":[{"value":"/ Applies a scale before self's transformation and returns the resulting transform.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":297805,"byte_end":297890,"line_start":478,"line_end":478,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":297895,"byte_end":297904,"line_start":479,"line_end":479,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":297909,"byte_end":297920,"line_start":480,"line_end":480,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3166},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":298433,"byte_end":298448,"line_start":501,"line_end":501,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Transform2D<T, Src, Dst>>::transform_point","value":"pub fn transform_point(&Self, Point2D<T, Src>) -> Point2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given point transformed by this transform.\n","sig":null,"attributes":[{"value":"/ Returns the given point transformed by this transform.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":298333,"byte_end":298391,"line_start":498,"line_end":498,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":298396,"byte_end":298405,"line_start":499,"line_end":499,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":298410,"byte_end":298421,"line_start":500,"line_end":500,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3167},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":298769,"byte_end":298785,"line_start":511,"line_end":511,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<Transform2D<T, Src, Dst>>::transform_vector","value":"pub fn transform_vector(&Self, Vector2D<T, Src>) -> Vector2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given vector transformed by this matrix.\n","sig":null,"attributes":[{"value":"/ Returns the given vector transformed by this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":298671,"byte_end":298727,"line_start":508,"line_end":508,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":298732,"byte_end":298741,"line_start":509,"line_end":509,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":298746,"byte_end":298757,"line_start":510,"line_end":510,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3168},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":299105,"byte_end":299127,"line_start":520,"line_end":520,"column_start":12,"column_end":34},"name":"outer_transformed_rect","qualname":"<Transform2D<T, Src, Dst>>::outer_transformed_rect","value":"pub fn outer_transformed_rect(&Self, &Rect<T, Src>) -> Rect<T, Dst> where\nT: Sub<Output = T> + Zero + PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Returns a rectangle that encompasses the result of transforming the given rectangle by this\n transform.\n","sig":null,"attributes":[{"value":"/ Returns a rectangle that encompasses the result of transforming the given rectangle by this","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":298949,"byte_end":299044,"line_start":516,"line_end":516,"column_start":5,"column_end":100}},{"value":"/ transform.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":299049,"byte_end":299063,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":299068,"byte_end":299077,"line_start":518,"line_end":518,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":299082,"byte_end":299093,"line_start":519,"line_end":519,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3169},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":299682,"byte_end":299703,"line_start":539,"line_end":539,"column_start":12,"column_end":33},"name":"outer_transformed_box","qualname":"<Transform2D<T, Src, Dst>>::outer_transformed_box","value":"pub fn outer_transformed_box(&Self, &Box2D<T, Src>) -> Box2D<T, Dst> where\nT: Sub<Output = T> + Zero + PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Returns a box that encompasses the result of transforming the given box by this\n transform.\n","sig":null,"attributes":[{"value":"/ Returns a box that encompasses the result of transforming the given box by this","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":299538,"byte_end":299621,"line_start":535,"line_end":535,"column_start":5,"column_end":88}},{"value":"/ transform.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":299626,"byte_end":299640,"line_start":536,"line_end":536,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":299645,"byte_end":299654,"line_start":537,"line_end":537,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":299659,"byte_end":299670,"line_start":538,"line_end":538,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3174},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":300282,"byte_end":300293,"line_start":558,"line_end":558,"column_start":12,"column_end":23},"name":"determinant","qualname":"<Transform2D<T, Src, Dst>>::determinant","value":"pub fn determinant(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Computes and returns the determinant of this transform.\n","sig":null,"attributes":[{"value":"/ Computes and returns the determinant of this transform.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":300211,"byte_end":300270,"line_start":557,"line_end":557,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3175},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":300463,"byte_end":300476,"line_start":564,"line_end":564,"column_start":12,"column_end":25},"name":"is_invertible","qualname":"<Transform2D<T, Src, Dst>>::is_invertible","value":"pub fn is_invertible(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether it is possible to compute the inverse transform.\n","sig":null,"attributes":[{"value":"/ Returns whether it is possible to compute the inverse transform.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":300369,"byte_end":300437,"line_start":562,"line_end":562,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":300442,"byte_end":300451,"line_start":563,"line_end":563,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3176},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":300622,"byte_end":300629,"line_start":570,"line_end":570,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Transform2D<T, Src, Dst>>::inverse","value":"pub fn inverse(&Self) -> Option<Transform2D<T, Dst, Src>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inverse transform if possible.\n","sig":null,"attributes":[{"value":"/ Returns the inverse transform if possible.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":300548,"byte_end":300594,"line_start":568,"line_end":568,"column_start":5,"column_end":51}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":300599,"byte_end":300610,"line_start":569,"line_end":569,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":3294},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":309677,"byte_end":309688,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"Transform3D","qualname":"::transform3d::Transform3D","value":"Transform3D { m11, m12, m13, m14, m21, m22, m23, m24, m31, m32, m33, m34, m41, m42, m43, m44, _unit }","parent":null,"children":[{"krate":0,"index":3298},{"krate":0,"index":3299},{"krate":0,"index":3300},{"krate":0,"index":3301},{"krate":0,"index":3302},{"krate":0,"index":3303},{"krate":0,"index":3304},{"krate":0,"index":3305},{"krate":0,"index":3306},{"krate":0,"index":3307},{"krate":0,"index":3308},{"krate":0,"index":3309},{"krate":0,"index":3310},{"krate":0,"index":3311},{"krate":0,"index":3312},{"krate":0,"index":3313},{"krate":0,"index":3314}],"decl_id":null,"docs":" A 3d transform stored as a column-major 4 by 4 matrix.","sig":null,"attributes":[{"value":"/ A 3d transform stored as a column-major 4 by 4 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":308406,"byte_end":308464,"line_start":35,"line_end":35,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":308465,"byte_end":308468,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Transforms can be parametrized over the source and destination units, to describe a","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":308469,"byte_end":308556,"line_start":37,"line_end":37,"column_start":1,"column_end":88}},{"value":"/ transformation from a space to another.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":308557,"byte_end":308600,"line_start":38,"line_end":38,"column_start":1,"column_end":44}},{"value":"/ For example, `Transform3D<f32, WorldSpace, ScreenSpace>::transform_point3d`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":308601,"byte_end":308680,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ takes a `Point3D<f32, WorldSpace>` and returns a `Point3D<f32, ScreenSpace>`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":308681,"byte_end":308762,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":308763,"byte_end":308766,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Transforms expose a set of convenience methods for pre- and post-transformations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":308767,"byte_end":308852,"line_start":42,"line_end":42,"column_start":1,"column_end":86}},{"value":"/ Pre-transformations (`pre_*` methods) correspond to adding an operation that is","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":308853,"byte_end":308936,"line_start":43,"line_end":43,"column_start":1,"column_end":84}},{"value":"/ applied before the rest of the transformation, while post-transformations (`then_*`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":308937,"byte_end":309024,"line_start":44,"line_end":44,"column_start":1,"column_end":88}},{"value":"/ methods) add an operation that is applied after.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":309025,"byte_end":309077,"line_start":45,"line_end":45,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":309078,"byte_end":309081,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ When translating Transform3D into general matrix representations, consider that the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":309082,"byte_end":309169,"line_start":47,"line_end":47,"column_start":1,"column_end":88}},{"value":"/ representation follows the column major notation with column vectors.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":309170,"byte_end":309243,"line_start":48,"line_end":48,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":309244,"byte_end":309247,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":309248,"byte_end":309259,"line_start":50,"line_end":50,"column_start":1,"column_end":12}},{"value":"/  |x'|   | m11 m12 m13 m14 |   |x|","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":309260,"byte_end":309297,"line_start":51,"line_end":51,"column_start":1,"column_end":38}},{"value":"/  |y'|   | m21 m22 m23 m24 |   |y|","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":309298,"byte_end":309335,"line_start":52,"line_end":52,"column_start":1,"column_end":38}},{"value":"/  |z'| = | m31 m32 m33 m34 | x |y|","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":309336,"byte_end":309373,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/  |w |   | m41 m42 m43 m44 |   |1|","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":309374,"byte_end":309411,"line_start":54,"line_end":54,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":309412,"byte_end":309419,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":309420,"byte_end":309423,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ The translation terms are m41, m42 and m43.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":309424,"byte_end":309471,"line_start":57,"line_end":57,"column_start":1,"column_end":48}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":309472,"byte_end":309482,"line_start":58,"line_end":58,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3298},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":309712,"byte_end":309715,"line_start":65,"line_end":65,"column_start":9,"column_end":12},"name":"m11","qualname":"::transform3d::Transform3D::m11","value":"T","parent":{"krate":0,"index":3294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3299},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":309724,"byte_end":309727,"line_start":65,"line_end":65,"column_start":21,"column_end":24},"name":"m12","qualname":"::transform3d::Transform3D::m12","value":"T","parent":{"krate":0,"index":3294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3300},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":309736,"byte_end":309739,"line_start":65,"line_end":65,"column_start":33,"column_end":36},"name":"m13","qualname":"::transform3d::Transform3D::m13","value":"T","parent":{"krate":0,"index":3294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3301},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":309748,"byte_end":309751,"line_start":65,"line_end":65,"column_start":45,"column_end":48},"name":"m14","qualname":"::transform3d::Transform3D::m14","value":"T","parent":{"krate":0,"index":3294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3302},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":309764,"byte_end":309767,"line_start":66,"line_end":66,"column_start":9,"column_end":12},"name":"m21","qualname":"::transform3d::Transform3D::m21","value":"T","parent":{"krate":0,"index":3294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3303},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":309776,"byte_end":309779,"line_start":66,"line_end":66,"column_start":21,"column_end":24},"name":"m22","qualname":"::transform3d::Transform3D::m22","value":"T","parent":{"krate":0,"index":3294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3304},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":309788,"byte_end":309791,"line_start":66,"line_end":66,"column_start":33,"column_end":36},"name":"m23","qualname":"::transform3d::Transform3D::m23","value":"T","parent":{"krate":0,"index":3294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3305},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":309800,"byte_end":309803,"line_start":66,"line_end":66,"column_start":45,"column_end":48},"name":"m24","qualname":"::transform3d::Transform3D::m24","value":"T","parent":{"krate":0,"index":3294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3306},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":309816,"byte_end":309819,"line_start":67,"line_end":67,"column_start":9,"column_end":12},"name":"m31","qualname":"::transform3d::Transform3D::m31","value":"T","parent":{"krate":0,"index":3294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3307},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":309828,"byte_end":309831,"line_start":67,"line_end":67,"column_start":21,"column_end":24},"name":"m32","qualname":"::transform3d::Transform3D::m32","value":"T","parent":{"krate":0,"index":3294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3308},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":309840,"byte_end":309843,"line_start":67,"line_end":67,"column_start":33,"column_end":36},"name":"m33","qualname":"::transform3d::Transform3D::m33","value":"T","parent":{"krate":0,"index":3294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3309},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":309852,"byte_end":309855,"line_start":67,"line_end":67,"column_start":45,"column_end":48},"name":"m34","qualname":"::transform3d::Transform3D::m34","value":"T","parent":{"krate":0,"index":3294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3310},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":309868,"byte_end":309871,"line_start":68,"line_end":68,"column_start":9,"column_end":12},"name":"m41","qualname":"::transform3d::Transform3D::m41","value":"T","parent":{"krate":0,"index":3294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3311},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":309880,"byte_end":309883,"line_start":68,"line_end":68,"column_start":21,"column_end":24},"name":"m42","qualname":"::transform3d::Transform3D::m42","value":"T","parent":{"krate":0,"index":3294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3312},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":309892,"byte_end":309895,"line_start":68,"line_end":68,"column_start":33,"column_end":36},"name":"m43","qualname":"::transform3d::Transform3D::m43","value":"T","parent":{"krate":0,"index":3294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3313},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":309904,"byte_end":309907,"line_start":68,"line_end":68,"column_start":45,"column_end":48},"name":"m44","qualname":"::transform3d::Transform3D::m44","value":"T","parent":{"krate":0,"index":3294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3314},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":309939,"byte_end":309944,"line_start":70,"line_end":70,"column_start":9,"column_end":14},"name":"_unit","qualname":"::transform3d::Transform3D::_unit","value":"core::marker::PhantomData<(Src, Dst)>","parent":{"krate":0,"index":3294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3343},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":312829,"byte_end":312832,"line_start":168,"line_end":168,"column_start":18,"column_end":21},"name":"new","qualname":"<Transform3D<T, Src, Dst>>::new","value":"pub const fn new(T, T, T, T, T, T, T, T, T, T, T, T, T, T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a transform specifying all of it's component as a 4 by 4 matrix.","sig":null,"attributes":[{"value":"/ Create a transform specifying all of it's component as a 4 by 4 matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":312146,"byte_end":312221,"line_start":149,"line_end":149,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":312226,"byte_end":312229,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Components are specified following column-major-column-vector matrix notation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":312234,"byte_end":312316,"line_start":151,"line_end":151,"column_start":5,"column_end":87}},{"value":"/ For example, the translation terms m41, m42, m43 are the 13rd, 14th and 15th parameters.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":312321,"byte_end":312413,"line_start":152,"line_end":152,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":312418,"byte_end":312421,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":312426,"byte_end":312433,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/ use euclid::default::Transform3D;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":312438,"byte_end":312475,"line_start":155,"line_end":155,"column_start":5,"column_end":42}},{"value":"/ let tx = 1.0;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":312480,"byte_end":312497,"line_start":156,"line_end":156,"column_start":5,"column_end":22}},{"value":"/ let ty = 2.0;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":312502,"byte_end":312519,"line_start":157,"line_end":157,"column_start":5,"column_end":22}},{"value":"/ let tz = 3.0;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":312524,"byte_end":312541,"line_start":158,"line_end":158,"column_start":5,"column_end":22}},{"value":"/ let translation = Transform3D::new(","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":312546,"byte_end":312585,"line_start":159,"line_end":159,"column_start":5,"column_end":44}},{"value":"/   1.0, 0.0, 0.0, 0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":312590,"byte_end":312615,"line_start":160,"line_end":160,"column_start":5,"column_end":30}},{"value":"/   0.0, 1.0, 0.0, 0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":312620,"byte_end":312645,"line_start":161,"line_end":161,"column_start":5,"column_end":30}},{"value":"/   0.0, 0.0, 1.0, 0.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":312650,"byte_end":312675,"line_start":162,"line_end":162,"column_start":5,"column_end":30}},{"value":"/   tx,  ty,  tz,  1.0,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":312680,"byte_end":312705,"line_start":163,"line_end":163,"column_start":5,"column_end":30}},{"value":"/ );","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":312710,"byte_end":312716,"line_start":164,"line_end":164,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":312721,"byte_end":312728,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":312733,"byte_end":312742,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3344},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":313627,"byte_end":313633,"line_start":196,"line_end":196,"column_start":12,"column_end":18},"name":"new_2d","qualname":"<Transform3D<T, Src, Dst>>::new_2d","value":"pub fn new_2d(T, T, T, T, T, T) -> Self where T: Zero + One","parent":null,"children":[],"decl_id":null,"docs":" Create a transform representing a 2d transformation from the components\n of a 2 by 3 matrix transformation.","sig":null,"attributes":[{"value":"/ Create a transform representing a 2d transformation from the components","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":313213,"byte_end":313288,"line_start":183,"line_end":183,"column_start":5,"column_end":80}},{"value":"/ of a 2 by 3 matrix transformation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":313293,"byte_end":313331,"line_start":184,"line_end":184,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":313336,"byte_end":313339,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ Components follow the column-major-column-vector notation (m41 and m42","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":313344,"byte_end":313418,"line_start":186,"line_end":186,"column_start":5,"column_end":79}},{"value":"/ representating the translation terms).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":313423,"byte_end":313465,"line_start":187,"line_end":187,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":313470,"byte_end":313473,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":313478,"byte_end":313489,"line_start":189,"line_end":189,"column_start":5,"column_end":16}},{"value":"/ m11  m12   0   0","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":313494,"byte_end":313514,"line_start":190,"line_end":190,"column_start":5,"column_end":25}},{"value":"/ m21  m22   0   0","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":313519,"byte_end":313539,"line_start":191,"line_end":191,"column_start":5,"column_end":25}},{"value":"/   0    0   1   0","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":313544,"byte_end":313564,"line_start":192,"line_end":192,"column_start":5,"column_end":25}},{"value":"/ m41  m42   0   1","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":313569,"byte_end":313589,"line_start":193,"line_end":193,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":313594,"byte_end":313601,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":313606,"byte_end":313615,"line_start":195,"line_end":195,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3347},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":314153,"byte_end":314158,"line_start":216,"line_end":216,"column_start":12,"column_end":17},"name":"is_2d","qualname":"<Transform3D<T, Src, Dst>>::is_2d","value":"pub fn is_2d(&Self) -> bool where T: Zero + One + PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this transform can be represented with a `Transform2D`.","sig":null,"attributes":[{"value":"/ Returns `true` if this transform can be represented with a `Transform2D`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":313974,"byte_end":314051,"line_start":212,"line_end":212,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":314056,"byte_end":314059,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ See <https://drafts.csswg.org/css-transforms/#2d-transform>","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":314064,"byte_end":314127,"line_start":214,"line_end":214,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":314132,"byte_end":314141,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3352},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":314945,"byte_end":314953,"line_start":239,"line_end":239,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Transform3D<T, Src, Dst>>::to_array","value":"pub fn to_array(&Self) -> [T; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns an array containing this transform's terms.","sig":null,"attributes":[{"value":"/ Returns an array containing this transform's terms.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":314565,"byte_end":314620,"line_start":230,"line_end":230,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":314625,"byte_end":314628,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ The terms are laid out in the same order as they are","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":314633,"byte_end":314689,"line_start":232,"line_end":232,"column_start":5,"column_end":61}},{"value":"/ specified in `Transform3D::new`, that is following the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":314694,"byte_end":314752,"line_start":233,"line_end":233,"column_start":5,"column_end":63}},{"value":"/ column-major-column-vector matrix notation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":314757,"byte_end":314804,"line_start":234,"line_end":234,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":314809,"byte_end":314812,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ For example the translation terms are found on the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":314817,"byte_end":314871,"line_start":236,"line_end":236,"column_start":5,"column_end":59}},{"value":"/ 13th, 14th and 15th slots of the array.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":314876,"byte_end":314919,"line_start":237,"line_end":237,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":314924,"byte_end":314933,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3354},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":315618,"byte_end":315637,"line_start":257,"line_end":257,"column_start":12,"column_end":31},"name":"to_array_transposed","qualname":"<Transform3D<T, Src, Dst>>::to_array_transposed","value":"pub fn to_array_transposed(&Self) -> [T; ]","parent":null,"children":[],"decl_id":null,"docs":" Returns an array containing this transform's terms transposed.","sig":null,"attributes":[{"value":"/ Returns an array containing this transform's terms transposed.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":315212,"byte_end":315278,"line_start":248,"line_end":248,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":315283,"byte_end":315286,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ The terms are laid out in transposed order from the same order of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":315291,"byte_end":315360,"line_start":250,"line_end":250,"column_start":5,"column_end":74}},{"value":"/ `Transform3D::new` and `Transform3D::to_array`, that is following","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":315365,"byte_end":315434,"line_start":251,"line_end":251,"column_start":5,"column_end":74}},{"value":"/ the row-major-column-vector matrix notation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":315439,"byte_end":315487,"line_start":252,"line_end":252,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":315492,"byte_end":315495,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ For example the translation terms are found at indices 3, 7 and 11","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":315500,"byte_end":315570,"line_start":254,"line_end":254,"column_start":5,"column_end":75}},{"value":"/ of the array.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":315575,"byte_end":315592,"line_start":255,"line_end":255,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":315597,"byte_end":315606,"line_start":256,"line_end":256,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3356},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":316017,"byte_end":316026,"line_start":269,"line_end":269,"column_start":12,"column_end":21},"name":"to_arrays","qualname":"<Transform3D<T, Src, Dst>>::to_arrays","value":"pub fn to_arrays(&Self) -> [[T; ]; ]","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `to_array` with elements packed four at a time\n in an array of arrays.\n","sig":null,"attributes":[{"value":"/ Equivalent to `to_array` with elements packed four at a time","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":315896,"byte_end":315960,"line_start":266,"line_end":266,"column_start":5,"column_end":69}},{"value":"/ in an array of arrays.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":315965,"byte_end":315991,"line_start":267,"line_end":267,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":315996,"byte_end":316005,"line_start":268,"line_end":268,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3359},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":316429,"byte_end":316449,"line_start":281,"line_end":281,"column_start":12,"column_end":32},"name":"to_arrays_transposed","qualname":"<Transform3D<T, Src, Dst>>::to_arrays_transposed","value":"pub fn to_arrays_transposed(&Self) -> [[T; ]; ]","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `to_array_transposed` with elements packed\n four at a time in an array of arrays.\n","sig":null,"attributes":[{"value":"/ Equivalent to `to_array_transposed` with elements packed","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":316297,"byte_end":316357,"line_start":278,"line_end":278,"column_start":5,"column_end":65}},{"value":"/ four at a time in an array of arrays.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":316362,"byte_end":316403,"line_start":279,"line_end":279,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":316408,"byte_end":316417,"line_start":280,"line_end":280,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3362},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":317028,"byte_end":317038,"line_start":297,"line_end":297,"column_start":12,"column_end":22},"name":"from_array","qualname":"<Transform3D<T, Src, Dst>>::from_array","value":"pub fn from_array([T; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a transform providing its components via an array\n of 16 elements instead of as individual parameters.","sig":null,"attributes":[{"value":"/ Create a transform providing its components via an array","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":316720,"byte_end":316780,"line_start":290,"line_end":290,"column_start":5,"column_end":65}},{"value":"/ of 16 elements instead of as individual parameters.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":316785,"byte_end":316840,"line_start":291,"line_end":291,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":316845,"byte_end":316848,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ The order of the components corresponds to the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":316853,"byte_end":316903,"line_start":293,"line_end":293,"column_start":5,"column_end":55}},{"value":"/ column-major-column-vector matrix notation (the same order","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":316908,"byte_end":316970,"line_start":294,"line_end":294,"column_start":5,"column_end":67}},{"value":"/ as `Transform3D::new`).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":316975,"byte_end":317002,"line_start":295,"line_end":295,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":317007,"byte_end":317016,"line_start":296,"line_end":296,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3364},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":317612,"byte_end":317623,"line_start":313,"line_end":313,"column_start":12,"column_end":23},"name":"from_arrays","qualname":"<Transform3D<T, Src, Dst>>::from_arrays","value":"pub fn from_arrays([[T; ]; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `from_array` with elements packed four at a time\n in an array of arrays.","sig":null,"attributes":[{"value":"/ Equivalent to `from_array` with elements packed four at a time","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":317327,"byte_end":317393,"line_start":306,"line_end":306,"column_start":5,"column_end":71}},{"value":"/ in an array of arrays.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":317398,"byte_end":317424,"line_start":307,"line_end":307,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":317429,"byte_end":317432,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ The order of the components corresponds to the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":317437,"byte_end":317487,"line_start":309,"line_end":309,"column_start":5,"column_end":55}},{"value":"/ column-major-column-vector matrix notation (the same order","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":317492,"byte_end":317554,"line_start":310,"line_end":310,"column_start":5,"column_end":67}},{"value":"/ as `Transform3D::new`).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":317559,"byte_end":317586,"line_start":311,"line_end":311,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":317591,"byte_end":317600,"line_start":312,"line_end":312,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3367},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":318012,"byte_end":318024,"line_start":324,"line_end":324,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Transform3D<T, Src, Dst>>::from_untyped","value":"pub fn from_untyped(&Transform3D<T, UnknownUnit, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":317950,"byte_end":317986,"line_start":322,"line_end":322,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":317991,"byte_end":318000,"line_start":323,"line_end":323,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3368},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":318368,"byte_end":318378,"line_start":335,"line_end":335,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Transform3D<T, Src, Dst>>::to_untyped","value":"pub fn to_untyped(&Self) -> Transform3D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":318288,"byte_end":318342,"line_start":333,"line_end":333,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":318347,"byte_end":318356,"line_start":334,"line_end":334,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3369},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":318773,"byte_end":318784,"line_start":346,"line_end":346,"column_start":12,"column_end":23},"name":"with_source","qualname":"<Transform3D<T, Src, Dst>>::with_source","value":"pub fn with_source<NewSrc>(&Self) -> Transform3D<T, NewSrc, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same transform with a different source unit.\n","sig":null,"attributes":[{"value":"/ Returns the same transform with a different source unit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":318687,"byte_end":318747,"line_start":344,"line_end":344,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":318752,"byte_end":318761,"line_start":345,"line_end":345,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3371},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":319179,"byte_end":319195,"line_start":357,"line_end":357,"column_start":12,"column_end":28},"name":"with_destination","qualname":"<Transform3D<T, Src, Dst>>::with_destination","value":"pub fn with_destination<NewDst>(&Self) -> Transform3D<T, Src, NewDst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same transform with a different destination unit.\n","sig":null,"attributes":[{"value":"/ Returns the same transform with a different destination unit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":319088,"byte_end":319153,"line_start":355,"line_end":355,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":319158,"byte_end":319167,"line_start":356,"line_end":356,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3373},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":319788,"byte_end":319793,"line_start":372,"line_end":372,"column_start":12,"column_end":17},"name":"to_2d","qualname":"<Transform3D<T, Src, Dst>>::to_2d","value":"pub fn to_2d(&Self) -> Transform2D<T, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Create a 2D transform picking the relevant terms from this transform.","sig":null,"attributes":[{"value":"/ Create a 2D transform picking the relevant terms from this transform.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":319499,"byte_end":319572,"line_start":366,"line_end":366,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":319577,"byte_end":319580,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ This method assumes that self represents a 2d transformation, callers","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":319585,"byte_end":319658,"line_start":368,"line_end":368,"column_start":5,"column_end":78}},{"value":"/ should check that [`self.is_2d()`] returns `true` beforehand.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":319663,"byte_end":319728,"line_start":369,"line_end":369,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":319733,"byte_end":319736,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ [`self.is_2d()`]: #method.is_2d","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":319741,"byte_end":319776,"line_start":371,"line_end":371,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3378},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":320203,"byte_end":320211,"line_start":394,"line_end":394,"column_start":12,"column_end":20},"name":"identity","qualname":"<Transform3D<T, Src, Dst>>::identity","value":"pub fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an identity matrix:","sig":null,"attributes":[{"value":"/ Creates an identity matrix:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":320046,"byte_end":320077,"line_start":385,"line_end":385,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":320082,"byte_end":320085,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":320090,"byte_end":320101,"line_start":387,"line_end":387,"column_start":5,"column_end":16}},{"value":"/ 1 0 0 0","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":320106,"byte_end":320117,"line_start":388,"line_end":388,"column_start":5,"column_end":16}},{"value":"/ 0 1 0 0","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":320122,"byte_end":320133,"line_start":389,"line_end":389,"column_start":5,"column_end":16}},{"value":"/ 0 0 1 0","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":320138,"byte_end":320149,"line_start":390,"line_end":390,"column_start":5,"column_end":16}},{"value":"/ 0 0 0 1","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":320154,"byte_end":320165,"line_start":391,"line_end":391,"column_start":5,"column_end":16}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":320170,"byte_end":320177,"line_start":392,"line_end":392,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":320182,"byte_end":320191,"line_start":393,"line_end":393,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3380},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":320741,"byte_end":320745,"line_start":412,"line_end":412,"column_start":12,"column_end":16},"name":"skew","qualname":"<Transform3D<T, Src, Dst>>::skew","value":"pub fn skew(Angle<T>, Angle<T>) -> Self where T: Trig","parent":null,"children":[],"decl_id":null,"docs":" Create a 2d skew transform.","sig":null,"attributes":[{"value":"/ Create a 2d skew transform.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":320622,"byte_end":320653,"line_start":409,"line_end":409,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":320658,"byte_end":320661,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ See <https://drafts.csswg.org/css-transforms/#funcdef-skew>","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":320666,"byte_end":320729,"line_start":411,"line_end":411,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3383},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":321430,"byte_end":321441,"line_start":438,"line_end":438,"column_start":12,"column_end":23},"name":"perspective","qualname":"<Transform3D<T, Src, Dst>>::perspective","value":"pub fn perspective(T) -> Self where T: Neg<Output = T> + Div<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Create a simple perspective transform, projecting to the plane `z = -d`.","sig":null,"attributes":[{"value":"/ Create a simple perspective transform, projecting to the plane `z = -d`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":321132,"byte_end":321208,"line_start":428,"line_end":428,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":321213,"byte_end":321216,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":321221,"byte_end":321232,"line_start":430,"line_end":430,"column_start":5,"column_end":16}},{"value":"/ 1   0   0   0","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":321237,"byte_end":321254,"line_start":431,"line_end":431,"column_start":5,"column_end":22}},{"value":"/ 0   1   0   0","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":321259,"byte_end":321276,"line_start":432,"line_end":432,"column_start":5,"column_end":22}},{"value":"/ 0   0   1 -1/d","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":321281,"byte_end":321299,"line_start":433,"line_end":433,"column_start":5,"column_end":23}},{"value":"/ 0   0   0   1","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":321304,"byte_end":321321,"line_start":434,"line_end":434,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":321326,"byte_end":321333,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":321338,"byte_end":321341,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ See <https://drafts.csswg.org/css-transforms-2/#PerspectiveDefined>.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":321346,"byte_end":321418,"line_start":437,"line_end":437,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3390},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":322151,"byte_end":322155,"line_start":465,"line_end":465,"column_start":12,"column_end":16},"name":"then","qualname":"<Transform3D<T, Src, Dst>>::then","value":"pub fn then<NewDst>(&Self, &Transform3D<T, Dst, NewDst>)\n-> Transform3D<T, Src, NewDst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplication of the two matrices such that mat's transformation\n applies after self's transformation.","sig":null,"attributes":[{"value":"/ Returns the multiplication of the two matrices such that mat's transformation","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":321926,"byte_end":322007,"line_start":460,"line_end":460,"column_start":5,"column_end":86}},{"value":"/ applies after self's transformation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":322012,"byte_end":322052,"line_start":461,"line_end":461,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":322057,"byte_end":322060,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ Assuming row vectors, this is equivalent to self * mat","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":322065,"byte_end":322123,"line_start":463,"line_end":463,"column_start":5,"column_end":63}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":322128,"byte_end":322139,"line_start":464,"line_end":464,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3396},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":324339,"byte_end":324350,"line_start":504,"line_end":504,"column_start":12,"column_end":23},"name":"translation","qualname":"<Transform3D<T, Src, Dst>>::translation","value":"pub fn translation(T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 3d translation transform:","sig":null,"attributes":[{"value":"/ Create a 3d translation transform:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":324175,"byte_end":324213,"line_start":495,"line_end":495,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":324218,"byte_end":324221,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":324226,"byte_end":324237,"line_start":497,"line_end":497,"column_start":5,"column_end":16}},{"value":"/ 1 0 0 0","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":324242,"byte_end":324253,"line_start":498,"line_end":498,"column_start":5,"column_end":16}},{"value":"/ 0 1 0 0","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":324258,"byte_end":324269,"line_start":499,"line_end":499,"column_start":5,"column_end":16}},{"value":"/ 0 0 1 0","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":324274,"byte_end":324285,"line_start":500,"line_end":500,"column_start":5,"column_end":16}},{"value":"/ x y z 1","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":324290,"byte_end":324301,"line_start":501,"line_end":501,"column_start":5,"column_end":16}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":324306,"byte_end":324313,"line_start":502,"line_end":502,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":324318,"byte_end":324327,"line_start":503,"line_end":503,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3399},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":324733,"byte_end":324746,"line_start":518,"line_end":518,"column_start":12,"column_end":25},"name":"pre_translate","qualname":"<Transform3D<T, Src, Dst>>::pre_translate","value":"pub fn pre_translate(&Self, Vector3D<T, Src>) -> Self where T: Copy +\nAdd<Output = T> + Mul<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a transform with a translation applied before self's transformation.\n","sig":null,"attributes":[{"value":"/ Returns a transform with a translation applied before self's transformation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":324625,"byte_end":324705,"line_start":516,"line_end":516,"column_start":5,"column_end":85}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":324710,"byte_end":324721,"line_start":517,"line_end":517,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3400},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":325029,"byte_end":325043,"line_start":527,"line_end":527,"column_start":12,"column_end":26},"name":"then_translate","qualname":"<Transform3D<T, Src, Dst>>::then_translate","value":"pub fn then_translate(&Self, Vector3D<T, Dst>) -> Self where T: Copy +\nAdd<Output = T> + Mul<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a transform with a translation applied after self's transformation.\n","sig":null,"attributes":[{"value":"/ Returns a transform with a translation applied after self's transformation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":324922,"byte_end":325001,"line_start":525,"line_end":525,"column_start":5,"column_end":84}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":325006,"byte_end":325017,"line_start":526,"line_end":526,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3405},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":325556,"byte_end":325564,"line_start":542,"line_end":542,"column_start":12,"column_end":20},"name":"rotation","qualname":"<Transform3D<T, Src, Dst>>::rotation","value":"pub fn rotation(T, T, T, Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 3d rotation transform from an angle / axis.\n The supplied axis must be normalized.\n","sig":null,"attributes":[{"value":"/ Create a 3d rotation transform from an angle / axis.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":325442,"byte_end":325498,"line_start":540,"line_end":540,"column_start":5,"column_end":61}},{"value":"/ The supplied axis must be normalized.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":325503,"byte_end":325544,"line_start":541,"line_end":541,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3406},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":326541,"byte_end":326552,"line_start":580,"line_end":580,"column_start":12,"column_end":23},"name":"then_rotate","qualname":"<Transform3D<T, Src, Dst>>::then_rotate","value":"pub fn then_rotate(&Self, T, T, T, Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a transform with a rotation applied after self's transformation.\n","sig":null,"attributes":[{"value":"/ Returns a transform with a rotation applied after self's transformation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":326437,"byte_end":326513,"line_start":578,"line_end":578,"column_start":5,"column_end":81}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":326518,"byte_end":326529,"line_start":579,"line_end":579,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3407},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":326779,"byte_end":326789,"line_start":586,"line_end":586,"column_start":12,"column_end":22},"name":"pre_rotate","qualname":"<Transform3D<T, Src, Dst>>::pre_rotate","value":"pub fn pre_rotate(&Self, T, T, T, Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a transform with a rotation applied before self's transformation.\n","sig":null,"attributes":[{"value":"/ Returns a transform with a rotation applied before self's transformation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":326674,"byte_end":326751,"line_start":584,"line_end":584,"column_start":5,"column_end":82}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":326756,"byte_end":326767,"line_start":585,"line_end":585,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3412},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":327201,"byte_end":327206,"line_start":605,"line_end":605,"column_start":12,"column_end":17},"name":"scale","qualname":"<Transform3D<T, Src, Dst>>::scale","value":"pub fn scale(T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 3d scale transform:","sig":null,"attributes":[{"value":"/ Create a 3d scale transform:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":327043,"byte_end":327075,"line_start":596,"line_end":596,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":327080,"byte_end":327083,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":327088,"byte_end":327099,"line_start":598,"line_end":598,"column_start":5,"column_end":16}},{"value":"/ x 0 0 0","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":327104,"byte_end":327115,"line_start":599,"line_end":599,"column_start":5,"column_end":16}},{"value":"/ 0 y 0 0","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":327120,"byte_end":327131,"line_start":600,"line_end":600,"column_start":5,"column_end":16}},{"value":"/ 0 0 z 0","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":327136,"byte_end":327147,"line_start":601,"line_end":601,"column_start":5,"column_end":16}},{"value":"/ 0 0 0 1","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":327152,"byte_end":327163,"line_start":602,"line_end":602,"column_start":5,"column_end":16}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":327168,"byte_end":327175,"line_start":603,"line_end":603,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":327180,"byte_end":327189,"line_start":604,"line_end":604,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3415},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":327583,"byte_end":327592,"line_start":619,"line_end":619,"column_start":12,"column_end":21},"name":"pre_scale","qualname":"<Transform3D<T, Src, Dst>>::pre_scale","value":"pub fn pre_scale(&Self, T, T, T) -> Self where T: Copy + Add<Output = T> +\nMul<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a transform with a scale applied before self's transformation.\n","sig":null,"attributes":[{"value":"/ Returns a transform with a scale applied before self's transformation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":327481,"byte_end":327555,"line_start":617,"line_end":617,"column_start":5,"column_end":79}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":327560,"byte_end":327571,"line_start":618,"line_end":618,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3416},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":328110,"byte_end":328120,"line_start":633,"line_end":633,"column_start":12,"column_end":22},"name":"then_scale","qualname":"<Transform3D<T, Src, Dst>>::then_scale","value":"pub fn then_scale(&Self, T, T, T) -> Self where T: Copy + Add<Output = T> +\nMul<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a transform with a scale applied after self's transformation.\n","sig":null,"attributes":[{"value":"/ Returns a transform with a scale applied after self's transformation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":328009,"byte_end":328082,"line_start":631,"line_end":631,"column_start":5,"column_end":78}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":328087,"byte_end":328098,"line_start":632,"line_end":632,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3421},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":328635,"byte_end":328664,"line_start":650,"line_end":650,"column_start":12,"column_end":41},"name":"transform_point2d_homogeneous","qualname":"<Transform3D<T, Src, Dst>>::transform_point2d_homogeneous","value":"pub fn transform_point2d_homogeneous(&Self, Point2D<T, Src>)\n-> HomogeneousVector<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the homogeneous vector corresponding to the transformed 2d point.","sig":null,"attributes":[{"value":"/ Returns the homogeneous vector corresponding to the transformed 2d point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":328433,"byte_end":328510,"line_start":646,"line_end":646,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":328515,"byte_end":328518,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ The input point must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":328523,"byte_end":328609,"line_start":648,"line_end":648,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":328614,"byte_end":328623,"line_start":649,"line_end":649,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3422},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":329277,"byte_end":329294,"line_start":666,"line_end":666,"column_start":12,"column_end":29},"name":"transform_point2d","qualname":"<Transform3D<T, Src, Dst>>::transform_point2d","value":"pub fn transform_point2d(&Self, Point2D<T, Src>) -> Option<Point2D<T, Dst>>\nwhere T: Div<Output = T> + Zero + PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 2d point transformed by this transform, if the transform makes sense,\n or `None` otherwise.","sig":null,"attributes":[{"value":"/ Returns the given 2d point transformed by this transform, if the transform makes sense,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":329032,"byte_end":329123,"line_start":661,"line_end":661,"column_start":5,"column_end":96}},{"value":"/ or `None` otherwise.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":329128,"byte_end":329152,"line_start":662,"line_end":662,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":329157,"byte_end":329160,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ The input point must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":329165,"byte_end":329251,"line_start":664,"line_end":664,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":329256,"byte_end":329265,"line_start":665,"line_end":665,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3423},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":330012,"byte_end":330030,"line_start":686,"line_end":686,"column_start":12,"column_end":30},"name":"transform_vector2d","qualname":"<Transform3D<T, Src, Dst>>::transform_vector2d","value":"pub fn transform_vector2d(&Self, Vector2D<T, Src>) -> Vector2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 2d vector transformed by this matrix.","sig":null,"attributes":[{"value":"/ Returns the given 2d vector transformed by this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":329828,"byte_end":329887,"line_start":682,"line_end":682,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":329892,"byte_end":329895,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ The input point must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":329900,"byte_end":329986,"line_start":684,"line_end":684,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":329991,"byte_end":330000,"line_start":685,"line_end":685,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3424},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":330408,"byte_end":330437,"line_start":697,"line_end":697,"column_start":12,"column_end":41},"name":"transform_point3d_homogeneous","qualname":"<Transform3D<T, Src, Dst>>::transform_point3d_homogeneous","value":"pub fn transform_point3d_homogeneous(&Self, Point3D<T, Src>)\n-> HomogeneousVector<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the homogeneous vector corresponding to the transformed 3d point.","sig":null,"attributes":[{"value":"/ Returns the homogeneous vector corresponding to the transformed 3d point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":330206,"byte_end":330283,"line_start":693,"line_end":693,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":330288,"byte_end":330291,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ The input point must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":330296,"byte_end":330382,"line_start":695,"line_end":695,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":330387,"byte_end":330396,"line_start":696,"line_end":696,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3425},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":331118,"byte_end":331135,"line_start":713,"line_end":713,"column_start":12,"column_end":29},"name":"transform_point3d","qualname":"<Transform3D<T, Src, Dst>>::transform_point3d","value":"pub fn transform_point3d(&Self, Point3D<T, Src>) -> Option<Point3D<T, Dst>>\nwhere T: Div<Output = T> + Zero + PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 3d point transformed by this transform, if the transform makes sense,\n or `None` otherwise.","sig":null,"attributes":[{"value":"/ Returns the given 3d point transformed by this transform, if the transform makes sense,","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":330873,"byte_end":330964,"line_start":708,"line_end":708,"column_start":5,"column_end":96}},{"value":"/ or `None` otherwise.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":330969,"byte_end":330993,"line_start":709,"line_end":709,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":330998,"byte_end":331001,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ The input point must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":331006,"byte_end":331092,"line_start":711,"line_end":711,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":331097,"byte_end":331106,"line_start":712,"line_end":712,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3426},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":331508,"byte_end":331526,"line_start":724,"line_end":724,"column_start":12,"column_end":30},"name":"transform_vector3d","qualname":"<Transform3D<T, Src, Dst>>::transform_vector3d","value":"pub fn transform_vector3d(&Self, Vector3D<T, Src>) -> Vector3D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 3d vector transformed by this matrix.","sig":null,"attributes":[{"value":"/ Returns the given 3d vector transformed by this matrix.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":331324,"byte_end":331383,"line_start":720,"line_end":720,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":331388,"byte_end":331391,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ The input point must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":331396,"byte_end":331482,"line_start":722,"line_end":722,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":331487,"byte_end":331496,"line_start":723,"line_end":723,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3427},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":331982,"byte_end":332004,"line_start":734,"line_end":734,"column_start":12,"column_end":34},"name":"outer_transformed_rect","qualname":"<Transform3D<T, Src, Dst>>::outer_transformed_rect","value":"pub fn outer_transformed_rect(&Self, &Rect<T, Src>) -> Option<Rect<T, Dst>>\nwhere T: Sub<Output = T> + Div<Output = T> + Zero + PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Returns a rectangle that encompasses the result of transforming the given rectangle by this\n transform, if the transform makes sense for it, or `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns a rectangle that encompasses the result of transforming the given rectangle by this","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":331798,"byte_end":331893,"line_start":732,"line_end":732,"column_start":5,"column_end":100}},{"value":"/ transform, if the transform makes sense for it, or `None` otherwise.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":331898,"byte_end":331970,"line_start":733,"line_end":733,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3428},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":332633,"byte_end":332656,"line_start":750,"line_end":750,"column_start":12,"column_end":35},"name":"outer_transformed_box2d","qualname":"<Transform3D<T, Src, Dst>>::outer_transformed_box2d","value":"pub fn outer_transformed_box2d(&Self, &Box2D<T, Src>) -> Option<Box2D<T, Dst>>\nwhere T: Sub<Output = T> + Div<Output = T> + Zero + PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d box that encompasses the result of transforming the given box by this\n transform, if the transform makes sense for it, or `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns a 2d box that encompasses the result of transforming the given box by this","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":332458,"byte_end":332544,"line_start":748,"line_end":748,"column_start":5,"column_end":91}},{"value":"/ transform, if the transform makes sense for it, or `None` otherwise.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":332549,"byte_end":332621,"line_start":749,"line_end":749,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3429},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":333237,"byte_end":333260,"line_start":764,"line_end":764,"column_start":12,"column_end":35},"name":"outer_transformed_box3d","qualname":"<Transform3D<T, Src, Dst>>::outer_transformed_box3d","value":"pub fn outer_transformed_box3d(&Self, &Box3D<T, Src>) -> Option<Box3D<T, Dst>>\nwhere T: Sub<Output = T> + Div<Output = T> + Zero + PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Returns a 3d box that encompasses the result of transforming the given box by this\n transform, if the transform makes sense for it, or `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns a 3d box that encompasses the result of transforming the given box by this","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":333062,"byte_end":333148,"line_start":762,"line_end":762,"column_start":5,"column_end":91}},{"value":"/ transform, if the transform makes sense for it, or `None` otherwise.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":333153,"byte_end":333225,"line_start":763,"line_end":763,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3434},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":334331,"byte_end":334336,"line_start":793,"line_end":793,"column_start":12,"column_end":17},"name":"ortho","qualname":"<Transform3D<T, Src, Dst>>::ortho","value":"pub fn ortho(T, T, T, T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an orthogonal projection transform.\n","sig":null,"attributes":[{"value":"/ Create an orthogonal projection transform.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":334273,"byte_end":334319,"line_start":792,"line_end":792,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3435},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":335179,"byte_end":335198,"line_start":812,"line_end":812,"column_start":12,"column_end":31},"name":"is_backface_visible","qualname":"<Transform3D<T, Src, Dst>>::is_backface_visible","value":"pub fn is_backface_visible(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether shapes on the XY plane with Z pointing towards the\n screen transformed by this matrix would be facing back.\n","sig":null,"attributes":[{"value":"/ Check whether shapes on the XY plane with Z pointing towards the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":335035,"byte_end":335103,"line_start":810,"line_end":810,"column_start":5,"column_end":73}},{"value":"/ screen transformed by this matrix would be facing back.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":335108,"byte_end":335167,"line_start":811,"line_end":811,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3436},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":335699,"byte_end":335712,"line_start":824,"line_end":824,"column_start":12,"column_end":25},"name":"is_invertible","qualname":"<Transform3D<T, Src, Dst>>::is_invertible","value":"pub fn is_invertible(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether it is possible to compute the inverse transform.\n","sig":null,"attributes":[{"value":"/ Returns whether it is possible to compute the inverse transform.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":335605,"byte_end":335673,"line_start":822,"line_end":822,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":335678,"byte_end":335687,"line_start":823,"line_end":823,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3437},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":335842,"byte_end":335849,"line_start":829,"line_end":829,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Transform3D<T, Src, Dst>>::inverse","value":"pub fn inverse(&Self) -> Option<Transform3D<T, Dst, Src>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inverse transform if possible.\n","sig":null,"attributes":[{"value":"/ Returns the inverse transform if possible.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":335784,"byte_end":335830,"line_start":828,"line_end":828,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3438},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":339644,"byte_end":339655,"line_start":909,"line_end":909,"column_start":12,"column_end":23},"name":"determinant","qualname":"<Transform3D<T, Src, Dst>>::determinant","value":"pub fn determinant(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Compute the determinant of the transform.\n","sig":null,"attributes":[{"value":"/ Compute the determinant of the transform.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":339587,"byte_end":339632,"line_start":908,"line_end":908,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3439},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":341038,"byte_end":341043,"line_start":938,"line_end":938,"column_start":12,"column_end":17},"name":"mul_s","qualname":"<Transform3D<T, Src, Dst>>::mul_s","value":"pub fn mul_s(&Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Multiplies all of the transform's component by a scalar and returns the result.\n","sig":null,"attributes":[{"value":"/ Multiplies all of the transform's component by a scalar and returns the result.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":340927,"byte_end":341010,"line_start":936,"line_end":936,"column_start":5,"column_end":88}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":341015,"byte_end":341026,"line_start":937,"line_end":937,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3440},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":341465,"byte_end":341475,"line_start":948,"line_end":948,"column_start":12,"column_end":22},"name":"from_scale","qualname":"<Transform3D<T, Src, Dst>>::from_scale","value":"pub fn from_scale(Scale<T, Src, Dst>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convenience function to create a scale transform from a `Scale`.\n","sig":null,"attributes":[{"value":"/ Convenience function to create a scale transform from a `Scale`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":341385,"byte_end":341453,"line_start":947,"line_end":947,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3445},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":341785,"byte_end":341798,"line_start":958,"line_end":958,"column_start":12,"column_end":25},"name":"project_to_2d","qualname":"<Transform3D<T, Src, Dst>>::project_to_2d","value":"pub fn project_to_2d(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a projection of this transform in 2d space.\n","sig":null,"attributes":[{"value":"/ Returns a projection of this transform in 2d space.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":341718,"byte_end":341773,"line_start":957,"line_end":957,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3450},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":343295,"byte_end":343299,"line_start":997,"line_end":997,"column_start":12,"column_end":16},"name":"cast","qualname":"<Transform3D<T, Src, Dst>>::cast","value":"pub fn cast<NewT: NumCast>(&Self) -> Transform3D<NewT, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.\n","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":343195,"byte_end":343269,"line_start":995,"line_end":995,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":343274,"byte_end":343283,"line_start":996,"line_end":996,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3452},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":343494,"byte_end":343502,"line_start":1002,"line_end":1002,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Transform3D<T, Src, Dst>>::try_cast","value":"pub fn try_cast<NewT: NumCast>(&Self) -> Option<Transform3D<NewT, Src, Dst>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.\n","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":343399,"byte_end":343482,"line_start":1001,"line_end":1001,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":3458},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":345031,"byte_end":345040,"line_start":1033,"line_end":1033,"column_start":12,"column_end":21},"name":"approx_eq","qualname":"<Transform3D<T, Src, Dst>>::approx_eq","value":"pub fn approx_eq(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true is this transform is approximately equal to the other one, using\n T's default epsilon value.","sig":null,"attributes":[{"value":"/ Returns true is this transform is approximately equal to the other one, using","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":344705,"byte_end":344786,"line_start":1026,"line_end":1026,"column_start":5,"column_end":86}},{"value":"/ T's default epsilon value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":344791,"byte_end":344821,"line_start":1027,"line_end":1027,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":344826,"byte_end":344829,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ The same as [`ApproxEq::approx_eq()`] but available without importing trait.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":344834,"byte_end":344914,"line_start":1029,"line_end":1029,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":344919,"byte_end":344922,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ [`ApproxEq::approx_eq()`]: ./approxeq/trait.ApproxEq.html#method.approx_eq","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":344927,"byte_end":345005,"line_start":1031,"line_end":1031,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":345010,"byte_end":345019,"line_start":1032,"line_end":1032,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3459},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":345476,"byte_end":345489,"line_start":1044,"line_end":1044,"column_start":12,"column_end":25},"name":"approx_eq_eps","qualname":"<Transform3D<T, Src, Dst>>::approx_eq_eps","value":"pub fn approx_eq_eps(&Self, &Self, &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true is this transform is approximately equal to the other one, using\n a provided epsilon value.","sig":null,"attributes":[{"value":"/ Returns true is this transform is approximately equal to the other one, using","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":345139,"byte_end":345220,"line_start":1037,"line_end":1037,"column_start":5,"column_end":86}},{"value":"/ a provided epsilon value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":345225,"byte_end":345254,"line_start":1038,"line_end":1038,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":345259,"byte_end":345262,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ The same as [`ApproxEq::approx_eq_eps()`] but available without importing trait.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":345267,"byte_end":345351,"line_start":1040,"line_end":1040,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":345356,"byte_end":345359,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ [`ApproxEq::approx_eq_eps()`]: ./approxeq/trait.ApproxEq.html#method.approx_eq_eps","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":345364,"byte_end":345450,"line_start":1042,"line_end":1042,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":345455,"byte_end":345464,"line_start":1043,"line_end":1043,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3557},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":359619,"byte_end":359632,"line_start":51,"line_end":51,"column_start":12,"column_end":25},"name":"Translation2D","qualname":"::translation::Translation2D","value":"Translation2D { x, y, _unit }","parent":null,"children":[{"krate":0,"index":3561},{"krate":0,"index":3562},{"krate":0,"index":3563}],"decl_id":null,"docs":" A 2d transformation from a space to another that can only express translations.","sig":null,"attributes":[{"value":"/ A 2d transformation from a space to another that can only express translations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":358718,"byte_end":358801,"line_start":22,"line_end":22,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":358802,"byte_end":358805,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The main benefit of this type over a Vector2D is the ability to cast","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":358806,"byte_end":358878,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/ between a source and a destination spaces.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":358879,"byte_end":358925,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":358926,"byte_end":358929,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Example:","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":358930,"byte_end":358942,"line_start":27,"line_end":27,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":358943,"byte_end":358946,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":358947,"byte_end":358954,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use euclid::{Translation2D, Point2D, point2};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":358955,"byte_end":359004,"line_start":30,"line_end":30,"column_start":1,"column_end":50}},{"value":"/ struct ParentSpace;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":359005,"byte_end":359028,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/ struct ChildSpace;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":359029,"byte_end":359051,"line_start":32,"line_end":32,"column_start":1,"column_end":23}},{"value":"/ type ScrollOffset = Translation2D<i32, ParentSpace, ChildSpace>;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":359052,"byte_end":359120,"line_start":33,"line_end":33,"column_start":1,"column_end":69}},{"value":"/ type ParentPoint = Point2D<i32, ParentSpace>;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":359121,"byte_end":359170,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ type ChildPoint = Point2D<i32, ChildSpace>;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":359171,"byte_end":359218,"line_start":35,"line_end":35,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":359219,"byte_end":359222,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let scrolling = ScrollOffset::new(0, 100);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":359223,"byte_end":359269,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/ let p1: ParentPoint = point2(0, 0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":359270,"byte_end":359309,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/ let p2: ChildPoint = scrolling.transform_point(p1);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":359310,"byte_end":359365,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":359366,"byte_end":359373,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":359374,"byte_end":359377,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":359378,"byte_end":359388,"line_start":42,"line_end":42,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3561},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":359656,"byte_end":359657,"line_start":52,"line_end":52,"column_start":9,"column_end":10},"name":"x","qualname":"::translation::Translation2D::x","value":"T","parent":{"krate":0,"index":3557},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3562},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":359670,"byte_end":359671,"line_start":53,"line_end":53,"column_start":9,"column_end":10},"name":"y","qualname":"::translation::Translation2D::y","value":"T","parent":{"krate":0,"index":3557},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3563},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":359703,"byte_end":359708,"line_start":55,"line_end":55,"column_start":9,"column_end":14},"name":"_unit","qualname":"::translation::Translation2D::_unit","value":"core::marker::PhantomData<(Src, Dst)>","parent":{"krate":0,"index":3557},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3592},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":360548,"byte_end":360551,"line_start":93,"line_end":93,"column_start":18,"column_end":21},"name":"new","qualname":"<Translation2D<T, Src, Dst>>::new","value":"pub const fn new(T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":360521,"byte_end":360530,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3593},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":360702,"byte_end":360707,"line_start":102,"line_end":102,"column_start":12,"column_end":17},"name":"splat","qualname":"<Translation2D<T, Src, Dst>>::splat","value":"pub fn splat(T) -> Self where T: Clone","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":360681,"byte_end":360690,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3594},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":360964,"byte_end":360972,"line_start":115,"line_end":115,"column_start":12,"column_end":20},"name":"identity","qualname":"<Translation2D<T, Src, Dst>>::identity","value":"pub fn identity() -> Self where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" Creates no-op translation (both `x` and `y` is `zero()`).\n","sig":null,"attributes":[{"value":"/ Creates no-op translation (both `x` and `y` is `zero()`).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":360877,"byte_end":360938,"line_start":113,"line_end":113,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":360943,"byte_end":360952,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3595},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":361520,"byte_end":361531,"line_start":133,"line_end":133,"column_start":12,"column_end":23},"name":"is_identity","qualname":"<Translation2D<T, Src, Dst>>::is_identity","value":"pub fn is_identity(&Self) -> bool where T: Zero + PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Check if translation does nothing (both x and y is `zero()`).","sig":null,"attributes":[{"value":"/ Check if translation does nothing (both x and y is `zero()`).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":361067,"byte_end":361132,"line_start":122,"line_end":122,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":361137,"byte_end":361140,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":361145,"byte_end":361156,"line_start":124,"line_end":124,"column_start":5,"column_end":16}},{"value":"/ use euclid::default::Translation2D;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":361161,"byte_end":361200,"line_start":125,"line_end":125,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":361205,"byte_end":361208,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Translation2D::<f32>::identity().is_identity(), true);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":361213,"byte_end":361282,"line_start":127,"line_end":127,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(Translation2D::new(0, 0).is_identity(), true);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":361287,"byte_end":361348,"line_start":128,"line_end":128,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Translation2D::new(1, 0).is_identity(), false);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":361353,"byte_end":361415,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(Translation2D::new(0, 1).is_identity(), false);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":361420,"byte_end":361482,"line_start":130,"line_end":130,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":361487,"byte_end":361494,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":361499,"byte_end":361508,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3596},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":361724,"byte_end":361738,"line_start":143,"line_end":143,"column_start":12,"column_end":26},"name":"transform_size","qualname":"<Translation2D<T, Src, Dst>>::transform_size","value":"pub fn transform_size(&Self, Size2D<T, Src>) -> Size2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" No-op, just cast the unit.\n","sig":null,"attributes":[{"value":"/ No-op, just cast the unit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":361668,"byte_end":361698,"line_start":141,"line_end":141,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":361703,"byte_end":361712,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3601},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":361942,"byte_end":361951,"line_start":151,"line_end":151,"column_start":12,"column_end":21},"name":"to_vector","qualname":"<Translation2D<T, Src, Dst>>::to_vector","value":"pub fn to_vector(&Self) -> Vector2D<T, Src>","parent":null,"children":[],"decl_id":null,"docs":" Cast into a 2D vector.\n","sig":null,"attributes":[{"value":"/ Cast into a 2D vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":361890,"byte_end":361916,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":361921,"byte_end":361930,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3602},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":362083,"byte_end":362091,"line_start":157,"line_end":157,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Translation2D<T, Src, Dst>>::to_array","value":"pub fn to_array(&Self) -> [T; ]","parent":null,"children":[],"decl_id":null,"docs":" Cast into an array with x and y.\n","sig":null,"attributes":[{"value":"/ Cast into an array with x and y.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":362021,"byte_end":362057,"line_start":155,"line_end":155,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":362062,"byte_end":362071,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3604},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":362208,"byte_end":362216,"line_start":163,"line_end":163,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<Translation2D<T, Src, Dst>>::to_tuple","value":"pub fn to_tuple(&Self) -> (T, T)","parent":null,"children":[],"decl_id":null,"docs":" Cast into a tuple with x and y.\n","sig":null,"attributes":[{"value":"/ Cast into a tuple with x and y.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":362147,"byte_end":362182,"line_start":161,"line_end":161,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":362187,"byte_end":362196,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3605},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":362352,"byte_end":362362,"line_start":169,"line_end":169,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Translation2D<T, Src, Dst>>::to_untyped","value":"pub fn to_untyped(&Self) -> Translation2D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":362272,"byte_end":362326,"line_start":167,"line_end":167,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":362331,"byte_end":362340,"line_start":168,"line_end":168,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3606},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":362603,"byte_end":362615,"line_start":179,"line_end":179,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Translation2D<T, Src, Dst>>::from_untyped","value":"pub fn from_untyped(&Translation2D<T, UnknownUnit, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":362541,"byte_end":362577,"line_start":177,"line_end":177,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":362582,"byte_end":362591,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3607},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":362875,"byte_end":362887,"line_start":189,"line_end":189,"column_start":12,"column_end":24},"name":"to_transform","qualname":"<Translation2D<T, Src, Dst>>::to_transform","value":"pub fn to_transform(&Self) -> Transform2D<T, Src, Dst> where T: Zero + One","parent":null,"children":[],"decl_id":null,"docs":" Returns the matrix representation of this translation.\n","sig":null,"attributes":[{"value":"/ Returns the matrix representation of this translation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":362791,"byte_end":362849,"line_start":187,"line_end":187,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":362854,"byte_end":362863,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3608},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":363062,"byte_end":363077,"line_start":198,"line_end":198,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Translation2D<T, Src, Dst>>::transform_point","value":"pub fn transform_point(&Self, Point2D<T, Src>) -> Point2D<T::Output, Dst>\nwhere T: Add","parent":null,"children":[],"decl_id":null,"docs":" Translate a point and cast its unit.\n","sig":null,"attributes":[{"value":"/ Translate a point and cast its unit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":362996,"byte_end":363036,"line_start":196,"line_end":196,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":363041,"byte_end":363050,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3609},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":363288,"byte_end":363302,"line_start":207,"line_end":207,"column_start":12,"column_end":26},"name":"transform_rect","qualname":"<Translation2D<T, Src, Dst>>::transform_rect","value":"pub fn transform_rect(&Self, &Rect<T, Src>) -> Rect<T::Output, Dst> where\nT: Add<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Translate a rectangle and cast its unit.\n","sig":null,"attributes":[{"value":"/ Translate a rectangle and cast its unit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":363218,"byte_end":363262,"line_start":205,"line_end":205,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":363267,"byte_end":363276,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3610},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":363598,"byte_end":363611,"line_start":219,"line_end":219,"column_start":12,"column_end":25},"name":"transform_box","qualname":"<Translation2D<T, Src, Dst>>::transform_box","value":"pub fn transform_box(&Self, &Box2D<T, Src>) -> Box2D<T::Output, Dst> where\nT: Add","parent":null,"children":[],"decl_id":null,"docs":" Translate a 2D box and cast its unit.\n","sig":null,"attributes":[{"value":"/ Translate a 2D box and cast its unit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":363531,"byte_end":363572,"line_start":217,"line_end":217,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":363577,"byte_end":363586,"line_start":218,"line_end":218,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3611},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":363888,"byte_end":363895,"line_start":231,"line_end":231,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Translation2D<T, Src, Dst>>::inverse","value":"pub fn inverse(&Self) -> Translation2D<T::Output, Dst, Src> where T: Neg","parent":null,"children":[],"decl_id":null,"docs":" Return the inverse transformation.\n","sig":null,"attributes":[{"value":"/ Return the inverse transformation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":363824,"byte_end":363862,"line_start":229,"line_end":229,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":363867,"byte_end":363876,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3661},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":366180,"byte_end":366193,"line_start":310,"line_end":310,"column_start":12,"column_end":25},"name":"Translation3D","qualname":"::translation::Translation3D","value":"Translation3D { x, y, z, _unit }","parent":null,"children":[{"krate":0,"index":3665},{"krate":0,"index":3666},{"krate":0,"index":3667},{"krate":0,"index":3668}],"decl_id":null,"docs":" A 3d transformation from a space to another that can only express translations.","sig":null,"attributes":[{"value":"/ A 3d transformation from a space to another that can only express translations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":365950,"byte_end":366033,"line_start":305,"line_end":305,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":366034,"byte_end":366037,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The main benefit of this type over a Vector3D is the ability to cast","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":366038,"byte_end":366110,"line_start":307,"line_end":307,"column_start":1,"column_end":73}},{"value":"/ between a source and a destination spaces.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":366111,"byte_end":366157,"line_start":308,"line_end":308,"column_start":1,"column_end":47}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":366158,"byte_end":366168,"line_start":309,"line_end":309,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3665},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":366217,"byte_end":366218,"line_start":311,"line_end":311,"column_start":9,"column_end":10},"name":"x","qualname":"::translation::Translation3D::x","value":"T","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3666},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":366231,"byte_end":366232,"line_start":312,"line_end":312,"column_start":9,"column_end":10},"name":"y","qualname":"::translation::Translation3D::y","value":"T","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3667},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":366245,"byte_end":366246,"line_start":313,"line_end":313,"column_start":9,"column_end":10},"name":"z","qualname":"::translation::Translation3D::z","value":"T","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3668},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":366278,"byte_end":366283,"line_start":315,"line_end":315,"column_start":9,"column_end":14},"name":"_unit","qualname":"::translation::Translation3D::_unit","value":"core::marker::PhantomData<(Src, Dst)>","parent":{"krate":0,"index":3661},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3697},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":367964,"byte_end":367967,"line_start":387,"line_end":387,"column_start":18,"column_end":21},"name":"new","qualname":"<Translation3D<T, Src, Dst>>::new","value":"pub const fn new(T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":367937,"byte_end":367946,"line_start":386,"line_end":386,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3698},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":368139,"byte_end":368144,"line_start":397,"line_end":397,"column_start":12,"column_end":17},"name":"splat","qualname":"<Translation3D<T, Src, Dst>>::splat","value":"pub fn splat(T) -> Self where T: Clone","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":368118,"byte_end":368127,"line_start":396,"line_end":396,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3699},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":368427,"byte_end":368435,"line_start":411,"line_end":411,"column_start":12,"column_end":20},"name":"identity","qualname":"<Translation3D<T, Src, Dst>>::identity","value":"pub fn identity() -> Self where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" Creates no-op translation (`x`, `y` and `z` is `zero()`).\n","sig":null,"attributes":[{"value":"/ Creates no-op translation (`x`, `y` and `z` is `zero()`).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":368340,"byte_end":368401,"line_start":409,"line_end":409,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":368406,"byte_end":368415,"line_start":410,"line_end":410,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3700},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":369086,"byte_end":369097,"line_start":430,"line_end":430,"column_start":12,"column_end":23},"name":"is_identity","qualname":"<Translation3D<T, Src, Dst>>::is_identity","value":"pub fn is_identity(&Self) -> bool where T: Zero + PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Check if translation does nothing (`x`, `y` and `z` is `zero()`).","sig":null,"attributes":[{"value":"/ Check if translation does nothing (`x`, `y` and `z` is `zero()`).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":368550,"byte_end":368619,"line_start":418,"line_end":418,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":368624,"byte_end":368627,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":368632,"byte_end":368643,"line_start":420,"line_end":420,"column_start":5,"column_end":16}},{"value":"/ use euclid::default::Translation3D;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":368648,"byte_end":368687,"line_start":421,"line_end":421,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":368692,"byte_end":368695,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Translation3D::<f32>::identity().is_identity(), true);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":368700,"byte_end":368769,"line_start":423,"line_end":423,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(Translation3D::new(0, 0, 0).is_identity(), true);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":368774,"byte_end":368838,"line_start":424,"line_end":424,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(Translation3D::new(1, 0, 0).is_identity(), false);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":368843,"byte_end":368908,"line_start":425,"line_end":425,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(Translation3D::new(0, 1, 0).is_identity(), false);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":368913,"byte_end":368978,"line_start":426,"line_end":426,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(Translation3D::new(0, 0, 1).is_identity(), false);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":368983,"byte_end":369048,"line_start":427,"line_end":427,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":369053,"byte_end":369060,"line_start":428,"line_end":428,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":369065,"byte_end":369074,"line_start":429,"line_end":429,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3701},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":369306,"byte_end":369320,"line_start":440,"line_end":440,"column_start":12,"column_end":26},"name":"transform_size","qualname":"<Translation3D<T, Src, Dst>>::transform_size","value":"pub fn transform_size(Self, Size2D<T, Src>) -> Size2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" No-op, just cast the unit.\n","sig":null,"attributes":[{"value":"/ No-op, just cast the unit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":369250,"byte_end":369280,"line_start":438,"line_end":438,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":369285,"byte_end":369294,"line_start":439,"line_end":439,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3706},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":369523,"byte_end":369532,"line_start":448,"line_end":448,"column_start":12,"column_end":21},"name":"to_vector","qualname":"<Translation3D<T, Src, Dst>>::to_vector","value":"pub fn to_vector(&Self) -> Vector3D<T, Src>","parent":null,"children":[],"decl_id":null,"docs":" Cast into a 3D vector.\n","sig":null,"attributes":[{"value":"/ Cast into a 3D vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":369471,"byte_end":369497,"line_start":446,"line_end":446,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":369502,"byte_end":369511,"line_start":447,"line_end":447,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3707},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":369675,"byte_end":369683,"line_start":454,"line_end":454,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Translation3D<T, Src, Dst>>::to_array","value":"pub fn to_array(&Self) -> [T; ]","parent":null,"children":[],"decl_id":null,"docs":" Cast into an array with x, y and z.\n","sig":null,"attributes":[{"value":"/ Cast into an array with x, y and z.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":369610,"byte_end":369649,"line_start":452,"line_end":452,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":369654,"byte_end":369663,"line_start":453,"line_end":453,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3709},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":369811,"byte_end":369819,"line_start":460,"line_end":460,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<Translation3D<T, Src, Dst>>::to_tuple","value":"pub fn to_tuple(&Self) -> (T, T, T)","parent":null,"children":[],"decl_id":null,"docs":" Cast into a tuple with x, y and z.\n","sig":null,"attributes":[{"value":"/ Cast into a tuple with x, y and z.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":369747,"byte_end":369785,"line_start":458,"line_end":458,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":369790,"byte_end":369799,"line_start":459,"line_end":459,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3710},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":369966,"byte_end":369976,"line_start":466,"line_end":466,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Translation3D<T, Src, Dst>>::to_untyped","value":"pub fn to_untyped(&Self) -> Translation3D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":369886,"byte_end":369940,"line_start":464,"line_end":464,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":369945,"byte_end":369954,"line_start":465,"line_end":465,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3711},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":370240,"byte_end":370252,"line_start":477,"line_end":477,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Translation3D<T, Src, Dst>>::from_untyped","value":"pub fn from_untyped(&Translation3D<T, UnknownUnit, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":370178,"byte_end":370214,"line_start":475,"line_end":475,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":370219,"byte_end":370228,"line_start":476,"line_end":476,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3712},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":370532,"byte_end":370544,"line_start":488,"line_end":488,"column_start":12,"column_end":24},"name":"to_transform","qualname":"<Translation3D<T, Src, Dst>>::to_transform","value":"pub fn to_transform(&Self) -> Transform3D<T, Src, Dst> where T: Zero + One","parent":null,"children":[],"decl_id":null,"docs":" Returns the matrix representation of this translation.\n","sig":null,"attributes":[{"value":"/ Returns the matrix representation of this translation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":370448,"byte_end":370506,"line_start":486,"line_end":486,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":370511,"byte_end":370520,"line_start":487,"line_end":487,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3713},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":370719,"byte_end":370736,"line_start":497,"line_end":497,"column_start":12,"column_end":29},"name":"transform_point3d","qualname":"<Translation3D<T, Src, Dst>>::transform_point3d","value":"pub fn transform_point3d(&Self, &Point3D<T, Src>) -> Point3D<T::Output, Dst>\nwhere T: Add","parent":null,"children":[],"decl_id":null,"docs":" Translate a point and cast its unit.\n","sig":null,"attributes":[{"value":"/ Translate a point and cast its unit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":370653,"byte_end":370693,"line_start":495,"line_end":495,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":370698,"byte_end":370707,"line_start":496,"line_end":496,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3714},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":370958,"byte_end":370975,"line_start":506,"line_end":506,"column_start":12,"column_end":29},"name":"transform_point2d","qualname":"<Translation3D<T, Src, Dst>>::transform_point2d","value":"pub fn transform_point2d(&Self, &Point2D<T, Src>) -> Point2D<T::Output, Dst>\nwhere T: Add","parent":null,"children":[],"decl_id":null,"docs":" Translate a point and cast its unit.\n","sig":null,"attributes":[{"value":"/ Translate a point and cast its unit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":370892,"byte_end":370932,"line_start":504,"line_end":504,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":370937,"byte_end":370946,"line_start":505,"line_end":505,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3715},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":371184,"byte_end":371199,"line_start":515,"line_end":515,"column_start":12,"column_end":27},"name":"transform_box2d","qualname":"<Translation3D<T, Src, Dst>>::transform_box2d","value":"pub fn transform_box2d(&Self, &Box2D<T, Src>) -> Box2D<T::Output, Dst> where\nT: Add","parent":null,"children":[],"decl_id":null,"docs":" Translate a 2D box and cast its unit.\n","sig":null,"attributes":[{"value":"/ Translate a 2D box and cast its unit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":371117,"byte_end":371158,"line_start":513,"line_end":513,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":371163,"byte_end":371172,"line_start":514,"line_end":514,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3716},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":371485,"byte_end":371500,"line_start":527,"line_end":527,"column_start":12,"column_end":27},"name":"transform_box3d","qualname":"<Translation3D<T, Src, Dst>>::transform_box3d","value":"pub fn transform_box3d(&Self, &Box3D<T, Src>) -> Box3D<T::Output, Dst> where\nT: Add","parent":null,"children":[],"decl_id":null,"docs":" Translate a 3D box and cast its unit.\n","sig":null,"attributes":[{"value":"/ Translate a 3D box and cast its unit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":371418,"byte_end":371459,"line_start":525,"line_end":525,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":371464,"byte_end":371473,"line_start":526,"line_end":526,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3717},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":371789,"byte_end":371803,"line_start":539,"line_end":539,"column_start":12,"column_end":26},"name":"transform_rect","qualname":"<Translation3D<T, Src, Dst>>::transform_rect","value":"pub fn transform_rect(&Self, &Rect<T, Src>) -> Rect<T, Dst> where\nT: Add<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Translate a rectangle and cast its unit.\n","sig":null,"attributes":[{"value":"/ Translate a rectangle and cast its unit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":371719,"byte_end":371763,"line_start":537,"line_end":537,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":371768,"byte_end":371777,"line_start":538,"line_end":538,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3718},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":372091,"byte_end":372098,"line_start":551,"line_end":551,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Translation3D<T, Src, Dst>>::inverse","value":"pub fn inverse(&Self) -> Translation3D<T::Output, Dst, Src> where T: Neg","parent":null,"children":[],"decl_id":null,"docs":" Return the inverse transformation.\n","sig":null,"attributes":[{"value":"/ Return the inverse transformation.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":372027,"byte_end":372065,"line_start":549,"line_end":549,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":372070,"byte_end":372079,"line_start":550,"line_end":550,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":3769},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/trig.rs","byte_start":382145,"byte_end":382149,"line_start":11,"line_end":11,"column_start":11,"column_end":15},"name":"Trig","qualname":"::trig::Trig","value":"Trig","parent":null,"children":[{"krate":0,"index":3770},{"krate":0,"index":3771},{"krate":0,"index":3772},{"krate":0,"index":3773},{"krate":0,"index":3774},{"krate":0,"index":3775}],"decl_id":null,"docs":" Trait for basic trigonometry functions, so they can be used on generic numeric types\n","sig":null,"attributes":[{"value":"/ Trait for basic trigonometry functions, so they can be used on generic numeric types","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/trig.rs","byte_start":382046,"byte_end":382134,"line_start":10,"line_end":10,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":3770},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/trig.rs","byte_start":382159,"byte_end":382162,"line_start":12,"line_end":12,"column_start":8,"column_end":11},"name":"sin","qualname":"::trig::Trig::sin","value":"pub fn sin(Self) -> Self","parent":{"krate":0,"index":3769},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3771},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/trig.rs","byte_start":382185,"byte_end":382188,"line_start":13,"line_end":13,"column_start":8,"column_end":11},"name":"cos","qualname":"::trig::Trig::cos","value":"pub fn cos(Self) -> Self","parent":{"krate":0,"index":3769},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3772},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/trig.rs","byte_start":382211,"byte_end":382214,"line_start":14,"line_end":14,"column_start":8,"column_end":11},"name":"tan","qualname":"::trig::Trig::tan","value":"pub fn tan(Self) -> Self","parent":{"krate":0,"index":3769},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3773},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/trig.rs","byte_start":382237,"byte_end":382247,"line_start":15,"line_end":15,"column_start":8,"column_end":18},"name":"fast_atan2","qualname":"::trig::Trig::fast_atan2","value":"pub fn fast_atan2(Self, Self) -> Self","parent":{"krate":0,"index":3769},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3774},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/trig.rs","byte_start":382282,"byte_end":382300,"line_start":16,"line_end":16,"column_start":8,"column_end":26},"name":"degrees_to_radians","qualname":"::trig::Trig::degrees_to_radians","value":"pub fn degrees_to_radians(Self) -> Self","parent":{"krate":0,"index":3769},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3775},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/trig.rs","byte_start":382328,"byte_end":382346,"line_start":17,"line_end":17,"column_start":8,"column_end":26},"name":"radians_to_degrees","qualname":"::trig::Trig::radians_to_degrees","value":"pub fn radians_to_degrees(Self) -> Self","parent":{"krate":0,"index":3769},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3893},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":385510,"byte_end":385518,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"Vector2D","qualname":"::vector::Vector2D","value":"Vector2D { x, y, _unit }","parent":null,"children":[{"krate":0,"index":3896},{"krate":0,"index":3897},{"krate":0,"index":3898}],"decl_id":null,"docs":" A 2d Vector tagged with a unit.\n","sig":null,"attributes":[{"value":"/ A 2d Vector tagged with a unit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":385452,"byte_end":385487,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":385488,"byte_end":385498,"line_start":35,"line_end":35,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3896},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":385591,"byte_end":385592,"line_start":38,"line_end":38,"column_start":9,"column_end":10},"name":"x","qualname":"::vector::Vector2D::x","value":"T","parent":{"krate":0,"index":3893},"children":[],"decl_id":null,"docs":" The `x` (traditionally, horizontal) coordinate.\n","sig":null,"attributes":[{"value":"/ The `x` (traditionally, horizontal) coordinate.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":385531,"byte_end":385582,"line_start":37,"line_end":37,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":3897},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":385659,"byte_end":385660,"line_start":40,"line_end":40,"column_start":9,"column_end":10},"name":"y","qualname":"::vector::Vector2D::y","value":"T","parent":{"krate":0,"index":3893},"children":[],"decl_id":null,"docs":" The `y` (traditionally, vertical) coordinate.\n","sig":null,"attributes":[{"value":"/ The `y` (traditionally, vertical) coordinate.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":385601,"byte_end":385650,"line_start":39,"line_end":39,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":3898},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":385692,"byte_end":385697,"line_start":42,"line_end":42,"column_start":9,"column_end":14},"name":"_unit","qualname":"::vector::Vector2D::_unit","value":"core::marker::PhantomData<U>","parent":{"krate":0,"index":3893},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3933},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":387683,"byte_end":387687,"line_start":128,"line_end":128,"column_start":12,"column_end":16},"name":"zero","qualname":"<Vector2D<T, U>>::zero","value":"pub fn zero() -> Self where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all components to zero.\n","sig":null,"attributes":[{"value":"/ Constructor, setting all components to zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":387609,"byte_end":387657,"line_start":126,"line_end":126,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":387662,"byte_end":387671,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3934},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":387865,"byte_end":387868,"line_start":137,"line_end":137,"column_start":12,"column_end":15},"name":"one","qualname":"<Vector2D<T, U>>::one","value":"pub fn one() -> Self where T: One","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all components to one.\n","sig":null,"attributes":[{"value":"/ Constructor, setting all components to one.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":387792,"byte_end":387839,"line_start":135,"line_end":135,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":387844,"byte_end":387853,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3935},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":388046,"byte_end":388049,"line_start":146,"line_end":146,"column_start":18,"column_end":21},"name":"new","qualname":"<Vector2D<T, U>>::new","value":"pub const fn new(T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar values directly.\n","sig":null,"attributes":[{"value":"/ Constructor taking scalar values directly.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":387968,"byte_end":388014,"line_start":144,"line_end":144,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":388019,"byte_end":388028,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3936},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":388257,"byte_end":388262,"line_start":156,"line_end":156,"column_start":12,"column_end":17},"name":"splat","qualname":"<Vector2D<T, U>>::splat","value":"pub fn splat(T) -> Self where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Constructor setting all components to the same value.\n","sig":null,"attributes":[{"value":"/ Constructor setting all components to the same value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":388174,"byte_end":388231,"line_start":154,"line_end":154,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":388236,"byte_end":388245,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3937},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":388478,"byte_end":388499,"line_start":168,"line_end":168,"column_start":12,"column_end":33},"name":"from_angle_and_length","qualname":"<Vector2D<T, U>>::from_angle_and_length","value":"pub fn from_angle_and_length(Angle<T>, T) -> Self where T: Trig + Mul<Output =\nT> + Copy","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking angle and length\n","sig":null,"attributes":[{"value":"/ Constructor taking angle and length","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":388427,"byte_end":388466,"line_start":167,"line_end":167,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3938},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":388770,"byte_end":388782,"line_start":177,"line_end":177,"column_start":12,"column_end":24},"name":"from_lengths","qualname":"<Vector2D<T, U>>::from_lengths","value":"pub fn from_lengths(Length<T, U>, Length<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking properly  Lengths instead of scalar values.\n","sig":null,"attributes":[{"value":"/ Constructor taking properly  Lengths instead of scalar values.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":388678,"byte_end":388744,"line_start":175,"line_end":175,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":388749,"byte_end":388758,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3939},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":388924,"byte_end":388936,"line_start":183,"line_end":183,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Vector2D<T, U>>::from_untyped","value":"pub fn from_untyped(Vector2D<T, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unit-less value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unit-less value with units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":388861,"byte_end":388898,"line_start":181,"line_end":181,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":388903,"byte_end":388912,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3940},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":389580,"byte_end":389583,"line_start":207,"line_end":207,"column_start":12,"column_end":15},"name":"abs","qualname":"<Vector2D<T, U>>::abs","value":"pub fn abs(Self) -> Self where T: Signed","parent":null,"children":[],"decl_id":null,"docs":" Computes the vector with absolute values of each component.","sig":null,"attributes":[{"value":"/ Computes the vector with absolute values of each component.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":389010,"byte_end":389073,"line_start":187,"line_end":187,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":389078,"byte_end":389081,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":389086,"byte_end":389099,"line_start":189,"line_end":189,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":389104,"byte_end":389107,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":389112,"byte_end":389123,"line_start":191,"line_end":191,"column_start":5,"column_end":16}},{"value":"/ # use std::{i32, f32};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":389128,"byte_end":389154,"line_start":192,"line_end":192,"column_start":5,"column_end":31}},{"value":"/ # use euclid::vec2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":389159,"byte_end":389182,"line_start":193,"line_end":193,"column_start":5,"column_end":28}},{"value":"/ enum U {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":389187,"byte_end":389200,"line_start":194,"line_end":194,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":389205,"byte_end":389208,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec2::<_, U>(-1, 2).abs(), vec2(1, 2));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":389213,"byte_end":389267,"line_start":196,"line_end":196,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":389272,"byte_end":389275,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ let vec = vec2::<_, U>(f32::NAN, -f32::MAX).abs();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":389280,"byte_end":389334,"line_start":198,"line_end":198,"column_start":5,"column_end":59}},{"value":"/ assert!(vec.x.is_nan());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":389339,"byte_end":389367,"line_start":199,"line_end":199,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec.y, f32::MAX);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":389372,"byte_end":389404,"line_start":200,"line_end":200,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":389409,"byte_end":389416,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":389421,"byte_end":389424,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":389429,"byte_end":389441,"line_start":203,"line_end":203,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":389446,"byte_end":389449,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ The behavior for each component follows the scalar type's implementation of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":389454,"byte_end":389533,"line_start":205,"line_end":205,"column_start":5,"column_end":84}},{"value":"/ `num_traits::Signed::abs`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":389538,"byte_end":389568,"line_start":206,"line_end":206,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3941},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":389727,"byte_end":389730,"line_start":216,"line_end":216,"column_start":12,"column_end":15},"name":"dot","qualname":"<Vector2D<T, U>>::dot","value":"pub fn dot(Self, Self) -> T where T: Add<Output = T> + Mul<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Dot product.\n","sig":null,"attributes":[{"value":"/ Dot product.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":389685,"byte_end":389701,"line_start":214,"line_end":214,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":389706,"byte_end":389715,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3942},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":389984,"byte_end":389989,"line_start":225,"line_end":225,"column_start":12,"column_end":17},"name":"cross","qualname":"<Vector2D<T, U>>::cross","value":"pub fn cross(Self, Self) -> T where T: Sub<Output = T> + Mul<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the norm of the cross product [self.x, self.y, 0] x [other.x, other.y, 0].\n","sig":null,"attributes":[{"value":"/ Returns the norm of the cross product [self.x, self.y, 0] x [other.x, other.y, 0].","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":389872,"byte_end":389958,"line_start":223,"line_end":223,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":389963,"byte_end":389972,"line_start":224,"line_end":224,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3943},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":390222,"byte_end":390235,"line_start":234,"line_end":234,"column_start":12,"column_end":25},"name":"component_mul","qualname":"<Vector2D<T, U>>::component_mul","value":"pub fn component_mul(Self, Self) -> Self where T: Mul<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the component-wise multiplication of the two vectors.\n","sig":null,"attributes":[{"value":"/ Returns the component-wise multiplication of the two vectors.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":390131,"byte_end":390196,"line_start":232,"line_end":232,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":390201,"byte_end":390210,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3947},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":390495,"byte_end":390501,"line_start":245,"line_end":245,"column_start":12,"column_end":18},"name":"extend","qualname":"<Vector2D<T, U>>::extend","value":"pub fn extend(Self, T) -> Vector3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Create a 3d vector from this one, using the specified z value.\n","sig":null,"attributes":[{"value":"/ Create a 3d vector from this one, using the specified z value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":390403,"byte_end":390469,"line_start":243,"line_end":243,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":390474,"byte_end":390483,"line_start":244,"line_end":244,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3948},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":390701,"byte_end":390709,"line_start":253,"line_end":253,"column_start":12,"column_end":20},"name":"to_point","qualname":"<Vector2D<T, U>>::to_point","value":"pub fn to_point(Self) -> Point2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast this vector into a point.","sig":null,"attributes":[{"value":"/ Cast this vector into a point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":390577,"byte_end":390611,"line_start":249,"line_end":249,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":390616,"byte_end":390619,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Equivalent to adding this vector to the origin.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":390624,"byte_end":390675,"line_start":251,"line_end":251,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":390680,"byte_end":390689,"line_start":252,"line_end":252,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3949},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":390895,"byte_end":390897,"line_start":263,"line_end":263,"column_start":12,"column_end":14},"name":"yx","qualname":"<Vector2D<T, U>>::yx","value":"pub fn yx(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Swap x and y.\n","sig":null,"attributes":[{"value":"/ Swap x and y.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":390852,"byte_end":390869,"line_start":261,"line_end":261,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":390874,"byte_end":390883,"line_start":262,"line_end":262,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3950},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":391013,"byte_end":391020,"line_start":269,"line_end":269,"column_start":12,"column_end":19},"name":"to_size","qualname":"<Vector2D<T, U>>::to_size","value":"pub fn to_size(Self) -> Size2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast this vector into a size.\n","sig":null,"attributes":[{"value":"/ Cast this vector into a size.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":390954,"byte_end":390987,"line_start":267,"line_end":267,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":390992,"byte_end":391001,"line_start":268,"line_end":268,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3951},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":391166,"byte_end":391176,"line_start":275,"line_end":275,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Vector2D<T, U>>::to_untyped","value":"pub fn to_untyped(Self) -> Vector2D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":391086,"byte_end":391140,"line_start":273,"line_end":273,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":391145,"byte_end":391154,"line_start":274,"line_end":274,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3952},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":391297,"byte_end":391306,"line_start":281,"line_end":281,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Vector2D<T, U>>::cast_unit","value":"pub fn cast_unit<V>(Self) -> Vector2D<T, V>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit.\n","sig":null,"attributes":[{"value":"/ Cast the unit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":391253,"byte_end":391271,"line_start":279,"line_end":279,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":391276,"byte_end":391285,"line_start":280,"line_end":280,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3954},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":391438,"byte_end":391446,"line_start":287,"line_end":287,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Vector2D<T, U>>::to_array","value":"pub fn to_array(Self) -> [T; ]","parent":null,"children":[],"decl_id":null,"docs":" Cast into an array with x and y.\n","sig":null,"attributes":[{"value":"/ Cast into an array with x and y.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":391376,"byte_end":391412,"line_start":285,"line_end":285,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":391417,"byte_end":391426,"line_start":286,"line_end":286,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3956},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":391562,"byte_end":391570,"line_start":293,"line_end":293,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<Vector2D<T, U>>::to_tuple","value":"pub fn to_tuple(Self) -> (T, T)","parent":null,"children":[],"decl_id":null,"docs":" Cast into a tuple with x and y.\n","sig":null,"attributes":[{"value":"/ Cast into a tuple with x and y.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":391501,"byte_end":391536,"line_start":291,"line_end":291,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":391541,"byte_end":391550,"line_start":292,"line_end":292,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3957},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":391722,"byte_end":391727,"line_start":299,"line_end":299,"column_start":12,"column_end":17},"name":"to_3d","qualname":"<Vector2D<T, U>>::to_3d","value":"pub fn to_3d(Self) -> Vector3D<T, U> where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" Convert into a 3d vector with `z` coordinate equals to `T::zero()`.\n","sig":null,"attributes":[{"value":"/ Convert into a 3d vector with `z` coordinate equals to `T::zero()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":391625,"byte_end":391696,"line_start":297,"line_end":297,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":391701,"byte_end":391710,"line_start":298,"line_end":298,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3958},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":392195,"byte_end":392200,"line_start":318,"line_end":318,"column_start":12,"column_end":17},"name":"round","qualname":"<Vector2D<T, U>>::round","value":"pub fn round(Self) -> Self where T: Round","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the nearest integer value.","sig":null,"attributes":[{"value":"/ Rounds each component to the nearest integer value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":391839,"byte_end":391894,"line_start":306,"line_end":306,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":391899,"byte_end":391902,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":391907,"byte_end":391982,"line_start":308,"line_end":308,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":391987,"byte_end":391990,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":391995,"byte_end":392006,"line_start":310,"line_end":310,"column_start":5,"column_end":16}},{"value":"/ # use euclid::vec2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":392011,"byte_end":392034,"line_start":311,"line_end":311,"column_start":5,"column_end":28}},{"value":"/ enum Mm {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":392039,"byte_end":392053,"line_start":312,"line_end":312,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":392058,"byte_end":392061,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec2::<_, Mm>(-0.1, -0.8).round(), vec2::<_, Mm>(0.0, -1.0))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":392066,"byte_end":392141,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":392146,"byte_end":392153,"line_start":315,"line_end":315,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":392158,"byte_end":392167,"line_start":316,"line_end":316,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":392172,"byte_end":392183,"line_start":317,"line_end":317,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3959},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":392695,"byte_end":392699,"line_start":337,"line_end":337,"column_start":12,"column_end":16},"name":"ceil","qualname":"<Vector2D<T, U>>::ceil","value":"pub fn ceil(Self) -> Self where T: Ceil","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the smallest integer equal or greater than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the smallest integer equal or greater than the original value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":392305,"byte_end":392396,"line_start":325,"line_end":325,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":392401,"byte_end":392404,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":392409,"byte_end":392484,"line_start":327,"line_end":327,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":392489,"byte_end":392492,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":392497,"byte_end":392508,"line_start":329,"line_end":329,"column_start":5,"column_end":16}},{"value":"/ # use euclid::vec2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":392513,"byte_end":392536,"line_start":330,"line_end":330,"column_start":5,"column_end":28}},{"value":"/ enum Mm {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":392541,"byte_end":392555,"line_start":331,"line_end":331,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":392560,"byte_end":392563,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec2::<_, Mm>(-0.1, -0.8).ceil(), vec2::<_, Mm>(0.0, 0.0))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":392568,"byte_end":392641,"line_start":333,"line_end":333,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":392646,"byte_end":392653,"line_start":334,"line_end":334,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":392658,"byte_end":392667,"line_start":335,"line_end":335,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":392672,"byte_end":392683,"line_start":336,"line_end":336,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3960},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":393191,"byte_end":393196,"line_start":356,"line_end":356,"column_start":12,"column_end":17},"name":"floor","qualname":"<Vector2D<T, U>>::floor","value":"pub fn floor(Self) -> Self where T: Floor","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the biggest integer equal or lower than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the biggest integer equal or lower than the original value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":392801,"byte_end":392889,"line_start":344,"line_end":344,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":392894,"byte_end":392897,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":392902,"byte_end":392977,"line_start":346,"line_end":346,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":392982,"byte_end":392985,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":392990,"byte_end":393001,"line_start":348,"line_end":348,"column_start":5,"column_end":16}},{"value":"/ # use euclid::vec2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":393006,"byte_end":393029,"line_start":349,"line_end":349,"column_start":5,"column_end":28}},{"value":"/ enum Mm {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":393034,"byte_end":393048,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":393053,"byte_end":393056,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec2::<_, Mm>(-0.1, -0.8).floor(), vec2::<_, Mm>(-1.0, -1.0))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":393061,"byte_end":393137,"line_start":352,"line_end":352,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":393142,"byte_end":393149,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":393154,"byte_end":393163,"line_start":354,"line_end":354,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":393168,"byte_end":393179,"line_start":355,"line_end":355,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3961},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":393536,"byte_end":393553,"line_start":368,"line_end":368,"column_start":12,"column_end":29},"name":"angle_from_x_axis","qualname":"<Vector2D<T, U>>::angle_from_x_axis","value":"pub fn angle_from_x_axis(Self) -> Angle<T> where T: Trig","parent":null,"children":[],"decl_id":null,"docs":" Returns the signed angle between this vector and the x axis.\n Positive values counted counterclockwise, where 0 is `+x` axis, `PI/2`\n is `+y` axis.","sig":null,"attributes":[{"value":"/ Returns the signed angle between this vector and the x axis.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":393301,"byte_end":393365,"line_start":363,"line_end":363,"column_start":5,"column_end":69}},{"value":"/ Positive values counted counterclockwise, where 0 is `+x` axis, `PI/2`","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":393370,"byte_end":393444,"line_start":364,"line_end":364,"column_start":5,"column_end":79}},{"value":"/ is `+y` axis.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":393449,"byte_end":393466,"line_start":365,"line_end":365,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":393471,"byte_end":393474,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ The returned angle is between -PI and PI.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":393479,"byte_end":393524,"line_start":367,"line_end":367,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3962},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":393754,"byte_end":393766,"line_start":377,"line_end":377,"column_start":12,"column_end":24},"name":"to_transform","qualname":"<Vector2D<T, U>>::to_transform","value":"pub fn to_transform(Self) -> Transform2D<T, U, U> where T: Zero + One","parent":null,"children":[],"decl_id":null,"docs":" Creates translation by this vector in vector units.\n","sig":null,"attributes":[{"value":"/ Creates translation by this vector in vector units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":393673,"byte_end":393728,"line_start":375,"line_end":375,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":393733,"byte_end":393742,"line_start":376,"line_end":376,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3966},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":394053,"byte_end":394066,"line_start":391,"line_end":391,"column_start":12,"column_end":25},"name":"square_length","qualname":"<Vector2D<T, U>>::square_length","value":"pub fn square_length(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector's length squared.\n","sig":null,"attributes":[{"value":"/ Returns the vector's length squared.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":393987,"byte_end":394027,"line_start":389,"line_end":389,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":394032,"byte_end":394041,"line_start":390,"line_end":390,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3967},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":394286,"byte_end":394305,"line_start":399,"line_end":399,"column_start":12,"column_end":31},"name":"project_onto_vector","qualname":"<Vector2D<T, U>>::project_onto_vector","value":"pub fn project_onto_vector(Self, Self) -> Self where T: Sub<T, Output = T> +\nDiv<T, Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Returns this vector projected onto another one.","sig":null,"attributes":[{"value":"/ Returns this vector projected onto another one.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":394133,"byte_end":394184,"line_start":395,"line_end":395,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":394189,"byte_end":394192,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ Projecting onto a nil vector will cause a division by zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":394197,"byte_end":394260,"line_start":397,"line_end":397,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":394265,"byte_end":394274,"line_start":398,"line_end":398,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3968},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":394604,"byte_end":394612,"line_start":409,"line_end":409,"column_start":12,"column_end":20},"name":"angle_to","qualname":"<Vector2D<T, U>>::angle_to","value":"pub fn angle_to(Self, Self) -> Angle<T> where T: Sub<Output = T> + Trig","parent":null,"children":[],"decl_id":null,"docs":" Returns the signed angle between this vector and another vector.","sig":null,"attributes":[{"value":"/ Returns the signed angle between this vector and another vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":394466,"byte_end":394534,"line_start":406,"line_end":406,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":394539,"byte_end":394542,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ The returned angle is between -PI and PI.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":394547,"byte_end":394592,"line_start":408,"line_end":408,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3972},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":394876,"byte_end":394882,"line_start":420,"line_end":420,"column_start":12,"column_end":18},"name":"length","qualname":"<Vector2D<T, U>>::length","value":"pub fn length(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector length.\n","sig":null,"attributes":[{"value":"/ Returns the vector length.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":394820,"byte_end":394850,"line_start":418,"line_end":418,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":394855,"byte_end":394864,"line_start":419,"line_end":419,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3973},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":395032,"byte_end":395041,"line_start":427,"line_end":427,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Vector2D<T, U>>::normalize","value":"pub fn normalize(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector with length of one unit.\n","sig":null,"attributes":[{"value":"/ Returns the vector with length of one unit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":394943,"byte_end":394990,"line_start":424,"line_end":424,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":394995,"byte_end":395004,"line_start":425,"line_end":425,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":395009,"byte_end":395020,"line_start":426,"line_end":426,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3974},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":395331,"byte_end":395344,"line_start":437,"line_end":437,"column_start":12,"column_end":25},"name":"try_normalize","qualname":"<Vector2D<T, U>>::try_normalize","value":"pub fn try_normalize(Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector with length of one unit.","sig":null,"attributes":[{"value":"/ Returns the vector with length of one unit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":395098,"byte_end":395145,"line_start":431,"line_end":431,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":395150,"byte_end":395153,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Vector2D::normalize`](#method.normalize), this returns None in the case that the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":395158,"byte_end":395251,"line_start":433,"line_end":433,"column_start":5,"column_end":98}},{"value":"/ length of the vector is zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":395256,"byte_end":395289,"line_start":434,"line_end":434,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":395294,"byte_end":395303,"line_start":435,"line_end":435,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":395308,"byte_end":395319,"line_start":436,"line_end":436,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3975},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":395648,"byte_end":395664,"line_start":449,"line_end":449,"column_start":12,"column_end":28},"name":"robust_normalize","qualname":"<Vector2D<T, U>>::robust_normalize","value":"pub fn robust_normalize(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the normalized vector even if the length is larger than the max value of Float.\n","sig":null,"attributes":[{"value":"/ Return the normalized vector even if the length is larger than the max value of Float.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":395516,"byte_end":395606,"line_start":446,"line_end":446,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":395611,"byte_end":395620,"line_start":447,"line_end":447,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":395625,"byte_end":395636,"line_start":448,"line_end":448,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3976},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":395976,"byte_end":395991,"line_start":461,"line_end":461,"column_start":12,"column_end":27},"name":"with_max_length","qualname":"<Vector2D<T, U>>::with_max_length","value":"pub fn with_max_length(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return this vector capped to a maximum length.\n","sig":null,"attributes":[{"value":"/ Return this vector capped to a maximum length.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":395900,"byte_end":395950,"line_start":459,"line_end":459,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":395955,"byte_end":395964,"line_start":460,"line_end":460,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3977},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":396303,"byte_end":396318,"line_start":472,"line_end":472,"column_start":12,"column_end":27},"name":"with_min_length","qualname":"<Vector2D<T, U>>::with_min_length","value":"pub fn with_min_length(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return this vector with a minimum length applied.\n","sig":null,"attributes":[{"value":"/ Return this vector with a minimum length applied.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":396224,"byte_end":396277,"line_start":470,"line_end":470,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":396282,"byte_end":396291,"line_start":471,"line_end":471,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3978},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":396641,"byte_end":396653,"line_start":483,"line_end":483,"column_start":12,"column_end":24},"name":"clamp_length","qualname":"<Vector2D<T, U>>::clamp_length","value":"pub fn clamp_length(Self, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return this vector with minimum and maximum lengths applied.\n","sig":null,"attributes":[{"value":"/ Return this vector with minimum and maximum lengths applied.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":396551,"byte_end":396615,"line_start":481,"line_end":481,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":396620,"byte_end":396629,"line_start":482,"line_end":482,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3982},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":397541,"byte_end":397545,"line_start":511,"line_end":511,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Vector2D<T, U>>::lerp","value":"pub fn lerp(Self, Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate each component between this vector and another vector.","sig":null,"attributes":[{"value":"/ Linearly interpolate each component between this vector and another vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":396896,"byte_end":396975,"line_start":493,"line_end":493,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":396980,"byte_end":396983,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":396988,"byte_end":397001,"line_start":495,"line_end":495,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":397006,"byte_end":397009,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":397014,"byte_end":397025,"line_start":497,"line_end":497,"column_start":5,"column_end":16}},{"value":"/ use euclid::vec2;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":397030,"byte_end":397051,"line_start":498,"line_end":498,"column_start":5,"column_end":26}},{"value":"/ use euclid::default::Vector2D;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":397056,"byte_end":397090,"line_start":499,"line_end":499,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":397095,"byte_end":397098,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ let from: Vector2D<_> = vec2(0.0, 10.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":397103,"byte_end":397147,"line_start":501,"line_end":501,"column_start":5,"column_end":49}},{"value":"/ let to:  Vector2D<_> = vec2(8.0, -4.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":397152,"byte_end":397195,"line_start":502,"line_end":502,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":397200,"byte_end":397203,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from.lerp(to, -1.0), vec2(-8.0,  24.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":397208,"byte_end":397263,"line_start":504,"line_end":504,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(from.lerp(to,  0.0), vec2( 0.0,  10.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":397268,"byte_end":397323,"line_start":505,"line_end":505,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(from.lerp(to,  0.5), vec2( 4.0,   3.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":397328,"byte_end":397383,"line_start":506,"line_end":506,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(from.lerp(to,  1.0), vec2( 8.0,  -4.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":397388,"byte_end":397443,"line_start":507,"line_end":507,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(from.lerp(to,  2.0), vec2(16.0, -18.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":397448,"byte_end":397503,"line_start":508,"line_end":508,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":397508,"byte_end":397515,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":397520,"byte_end":397529,"line_start":510,"line_end":510,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3983},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":397760,"byte_end":397767,"line_start":518,"line_end":518,"column_start":12,"column_end":19},"name":"reflect","qualname":"<Vector2D<T, U>>::reflect","value":"pub fn reflect(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a reflection vector using an incident ray and a surface normal.\n","sig":null,"attributes":[{"value":"/ Returns a reflection vector using an incident ray and a surface normal.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":397659,"byte_end":397734,"line_start":516,"line_end":516,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":397739,"byte_end":397748,"line_start":517,"line_end":517,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3987},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":398049,"byte_end":398052,"line_start":527,"line_end":527,"column_start":12,"column_end":15},"name":"min","qualname":"<Vector2D<T, U>>::min","value":"pub fn min(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector each component of which are minimum of this vector and another.\n","sig":null,"attributes":[{"value":"/ Returns the vector each component of which are minimum of this vector and another.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":397937,"byte_end":398023,"line_start":525,"line_end":525,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":398028,"byte_end":398037,"line_start":526,"line_end":526,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3988},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":398262,"byte_end":398265,"line_start":533,"line_end":533,"column_start":12,"column_end":15},"name":"max","qualname":"<Vector2D<T, U>>::max","value":"pub fn max(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector each component of which are maximum of this vector and another.\n","sig":null,"attributes":[{"value":"/ Returns the vector each component of which are maximum of this vector and another.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":398150,"byte_end":398236,"line_start":531,"line_end":531,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":398241,"byte_end":398250,"line_start":532,"line_end":532,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3989},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":398561,"byte_end":398566,"line_start":542,"line_end":542,"column_start":12,"column_end":17},"name":"clamp","qualname":"<Vector2D<T, U>>::clamp","value":"pub fn clamp(Self, Self, Self) -> Self where T: Copy","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector each component of which is clamped by corresponding\n components of `start` and `end`.","sig":null,"attributes":[{"value":"/ Returns the vector each component of which is clamped by corresponding","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":398363,"byte_end":398437,"line_start":537,"line_end":537,"column_start":5,"column_end":79}},{"value":"/ components of `start` and `end`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":398442,"byte_end":398478,"line_start":538,"line_end":538,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":398483,"byte_end":398486,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ Shortcut for `self.max(start).min(end)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":398491,"byte_end":398535,"line_start":540,"line_end":540,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":398540,"byte_end":398549,"line_start":541,"line_end":541,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3990},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":398786,"byte_end":398798,"line_start":551,"line_end":551,"column_start":12,"column_end":24},"name":"greater_than","qualname":"<Vector2D<T, U>>::greater_than","value":"pub fn greater_than(Self, Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"greater than\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"greater than\" operation on each component.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":398682,"byte_end":398760,"line_start":549,"line_end":549,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":398765,"byte_end":398774,"line_start":550,"line_end":550,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3991},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":399048,"byte_end":399058,"line_start":560,"line_end":560,"column_start":12,"column_end":22},"name":"lower_than","qualname":"<Vector2D<T, U>>::lower_than","value":"pub fn lower_than(Self, Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"lower than\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"lower than\" operation on each component.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":398946,"byte_end":399022,"line_start":558,"line_end":558,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":399027,"byte_end":399036,"line_start":559,"line_end":559,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3995},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":399344,"byte_end":399349,"line_start":571,"line_end":571,"column_start":12,"column_end":17},"name":"equal","qualname":"<Vector2D<T, U>>::equal","value":"pub fn equal(Self, Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"equal\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"equal\" operation on each component.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":399247,"byte_end":399318,"line_start":569,"line_end":569,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":399323,"byte_end":399332,"line_start":570,"line_end":570,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3996},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":399600,"byte_end":399609,"line_start":580,"line_end":580,"column_start":12,"column_end":21},"name":"not_equal","qualname":"<Vector2D<T, U>>::not_equal","value":"pub fn not_equal(Self, Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"not equal\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"not equal\" operation on each component.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":399499,"byte_end":399574,"line_start":578,"line_end":578,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":399579,"byte_end":399588,"line_start":579,"line_end":579,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4000},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":400186,"byte_end":400190,"line_start":595,"line_end":595,"column_start":12,"column_end":16},"name":"cast","qualname":"<Vector2D<T, U>>::cast","value":"pub fn cast<NewT: NumCast>(Self) -> Vector2D<NewT, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":399805,"byte_end":399879,"line_start":589,"line_end":589,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":399884,"byte_end":399887,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector to integer coordinates, the decimals are truncated","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":399892,"byte_end":399980,"line_start":591,"line_end":591,"column_start":5,"column_end":93}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":399985,"byte_end":400073,"line_start":592,"line_end":592,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":400078,"byte_end":400160,"line_start":593,"line_end":593,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":400165,"byte_end":400174,"line_start":594,"line_end":594,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4002},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":400655,"byte_end":400663,"line_start":604,"line_end":604,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Vector2D<T, U>>::try_cast","value":"pub fn try_cast<NewT: NumCast>(Self) -> Option<Vector2D<NewT, U>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":400279,"byte_end":400362,"line_start":599,"line_end":599,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":400367,"byte_end":400370,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector to integer coordinates, the decimals are truncated","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":400375,"byte_end":400463,"line_start":601,"line_end":601,"column_start":5,"column_end":93}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":400468,"byte_end":400556,"line_start":602,"line_end":602,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":400561,"byte_end":400643,"line_start":603,"line_end":603,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":4004},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":400988,"byte_end":400994,"line_start":615,"line_end":615,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<Vector2D<T, U>>::to_f32","value":"pub fn to_f32(Self) -> Vector2D<f32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` vector.\n","sig":null,"attributes":[{"value":"/ Cast into an `f32` vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":400932,"byte_end":400962,"line_start":613,"line_end":613,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":400967,"byte_end":400976,"line_start":614,"line_end":614,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4005},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":401110,"byte_end":401116,"line_start":621,"line_end":621,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<Vector2D<T, U>>::to_f64","value":"pub fn to_f64(Self) -> Vector2D<f64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` vector.\n","sig":null,"attributes":[{"value":"/ Cast into an `f64` vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":401054,"byte_end":401084,"line_start":619,"line_end":619,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":401089,"byte_end":401098,"line_start":620,"line_end":620,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4006},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":401473,"byte_end":401481,"line_start":631,"line_end":631,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<Vector2D<T, U>>::to_usize","value":"pub fn to_usize(Self) -> Vector2D<usize, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `usize` vector, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `usize` vector, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":401176,"byte_end":401236,"line_start":625,"line_end":625,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":401241,"byte_end":401244,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector vectors, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":401249,"byte_end":401327,"line_start":627,"line_end":627,"column_start":5,"column_end":83}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":401332,"byte_end":401406,"line_start":628,"line_end":628,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":401411,"byte_end":401447,"line_start":629,"line_end":629,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":401452,"byte_end":401461,"line_start":630,"line_end":630,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4007},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":401838,"byte_end":401844,"line_start":641,"line_end":641,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<Vector2D<T, U>>::to_u32","value":"pub fn to_u32(Self) -> Vector2D<u32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` vector, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `u32` vector, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":401543,"byte_end":401601,"line_start":635,"line_end":635,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":401606,"byte_end":401609,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector vectors, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":401614,"byte_end":401692,"line_start":637,"line_end":637,"column_start":5,"column_end":83}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":401697,"byte_end":401771,"line_start":638,"line_end":638,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":401776,"byte_end":401812,"line_start":639,"line_end":639,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":401817,"byte_end":401826,"line_start":640,"line_end":640,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4008},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":402197,"byte_end":402203,"line_start":651,"line_end":651,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<Vector2D<T, U>>::to_i32","value":"pub fn to_i32(Self) -> Vector2D<i32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an i32 vector, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an i32 vector, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":401904,"byte_end":401960,"line_start":645,"line_end":645,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":401965,"byte_end":401968,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector vectors, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":401973,"byte_end":402051,"line_start":647,"line_end":647,"column_start":5,"column_end":83}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":402056,"byte_end":402130,"line_start":648,"line_end":648,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":402135,"byte_end":402171,"line_start":649,"line_end":649,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":402176,"byte_end":402185,"line_start":650,"line_end":650,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4009},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":402556,"byte_end":402562,"line_start":661,"line_end":661,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<Vector2D<T, U>>::to_i64","value":"pub fn to_i64(Self) -> Vector2D<i64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an i64 vector, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an i64 vector, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":402263,"byte_end":402319,"line_start":655,"line_end":655,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":402324,"byte_end":402327,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector vectors, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":402332,"byte_end":402410,"line_start":657,"line_end":657,"column_start":5,"column_end":83}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":402415,"byte_end":402489,"line_start":658,"line_end":658,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":402494,"byte_end":402530,"line_start":659,"line_end":659,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":402535,"byte_end":402544,"line_start":660,"line_end":660,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4128},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":407306,"byte_end":407314,"line_start":862,"line_end":862,"column_start":12,"column_end":20},"name":"Vector3D","qualname":"::vector::Vector3D","value":"Vector3D { x, y, z, _unit }","parent":null,"children":[{"krate":0,"index":4131},{"krate":0,"index":4132},{"krate":0,"index":4133},{"krate":0,"index":4134}],"decl_id":null,"docs":" A 3d Vector tagged with a unit.\n","sig":null,"attributes":[{"value":"/ A 3d Vector tagged with a unit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":407248,"byte_end":407283,"line_start":860,"line_end":860,"column_start":1,"column_end":36}},{"value":"repr(C)","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":407284,"byte_end":407294,"line_start":861,"line_end":861,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":4131},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":407387,"byte_end":407388,"line_start":864,"line_end":864,"column_start":9,"column_end":10},"name":"x","qualname":"::vector::Vector3D::x","value":"T","parent":{"krate":0,"index":4128},"children":[],"decl_id":null,"docs":" The `x` (traditionally, horizontal) coordinate.\n","sig":null,"attributes":[{"value":"/ The `x` (traditionally, horizontal) coordinate.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":407327,"byte_end":407378,"line_start":863,"line_end":863,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":4132},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":407455,"byte_end":407456,"line_start":866,"line_end":866,"column_start":9,"column_end":10},"name":"y","qualname":"::vector::Vector3D::y","value":"T","parent":{"krate":0,"index":4128},"children":[],"decl_id":null,"docs":" The `y` (traditionally, vertical) coordinate.\n","sig":null,"attributes":[{"value":"/ The `y` (traditionally, vertical) coordinate.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":407397,"byte_end":407446,"line_start":865,"line_end":865,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":4133},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":407520,"byte_end":407521,"line_start":868,"line_end":868,"column_start":9,"column_end":10},"name":"z","qualname":"::vector::Vector3D::z","value":"T","parent":{"krate":0,"index":4128},"children":[],"decl_id":null,"docs":" The `z` (traditionally, depth) coordinate.\n","sig":null,"attributes":[{"value":"/ The `z` (traditionally, depth) coordinate.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":407465,"byte_end":407511,"line_start":867,"line_end":867,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":4134},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":407553,"byte_end":407558,"line_start":870,"line_end":870,"column_start":9,"column_end":14},"name":"_unit","qualname":"::vector::Vector3D::_unit","value":"core::marker::PhantomData<U>","parent":{"krate":0,"index":4128},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4169},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":409742,"byte_end":409746,"line_start":963,"line_end":963,"column_start":12,"column_end":16},"name":"zero","qualname":"<Vector3D<T, U>>::zero","value":"pub fn zero() -> Self where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all components to zero.\n","sig":null,"attributes":[{"value":"/ Constructor, setting all components to zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":409668,"byte_end":409716,"line_start":961,"line_end":961,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":409721,"byte_end":409730,"line_start":962,"line_end":962,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4170},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":409929,"byte_end":409932,"line_start":972,"line_end":972,"column_start":12,"column_end":15},"name":"one","qualname":"<Vector3D<T, U>>::one","value":"pub fn one() -> Self where T: One","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all components to one.\n","sig":null,"attributes":[{"value":"/ Constructor, setting all components to one.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":409856,"byte_end":409903,"line_start":970,"line_end":970,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":409908,"byte_end":409917,"line_start":971,"line_end":971,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4171},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":410113,"byte_end":410116,"line_start":981,"line_end":981,"column_start":18,"column_end":21},"name":"new","qualname":"<Vector3D<T, U>>::new","value":"pub const fn new(T, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar values directly.\n","sig":null,"attributes":[{"value":"/ Constructor taking scalar values directly.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":410035,"byte_end":410081,"line_start":979,"line_end":979,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":410086,"byte_end":410095,"line_start":980,"line_end":980,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4172},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":410344,"byte_end":410349,"line_start":991,"line_end":991,"column_start":12,"column_end":17},"name":"splat","qualname":"<Vector3D<T, U>>::splat","value":"pub fn splat(T) -> Self where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Constructor setting all components to the same value.\n","sig":null,"attributes":[{"value":"/ Constructor setting all components to the same value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":410261,"byte_end":410318,"line_start":989,"line_end":989,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":410323,"byte_end":410332,"line_start":990,"line_end":990,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4173},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":410632,"byte_end":410644,"line_start":1005,"line_end":1005,"column_start":12,"column_end":24},"name":"from_lengths","qualname":"<Vector3D<T, U>>::from_lengths","value":"pub fn from_lengths(Length<T, U>, Length<T, U>, Length<T, U>)\n-> Vector3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking properly  Lengths instead of scalar values.\n","sig":null,"attributes":[{"value":"/ Constructor taking properly  Lengths instead of scalar values.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":410540,"byte_end":410606,"line_start":1003,"line_end":1003,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":410611,"byte_end":410620,"line_start":1004,"line_end":1004,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4174},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":410817,"byte_end":410829,"line_start":1011,"line_end":1011,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Vector3D<T, U>>::from_untyped","value":"pub fn from_untyped(Vector3D<T, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":410755,"byte_end":410791,"line_start":1009,"line_end":1009,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":410796,"byte_end":410805,"line_start":1010,"line_end":1010,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4175},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":411521,"byte_end":411524,"line_start":1036,"line_end":1036,"column_start":12,"column_end":15},"name":"abs","qualname":"<Vector3D<T, U>>::abs","value":"pub fn abs(Self) -> Self where T: Signed","parent":null,"children":[],"decl_id":null,"docs":" Computes the vector with absolute values of each component.","sig":null,"attributes":[{"value":"/ Computes the vector with absolute values of each component.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":410908,"byte_end":410971,"line_start":1015,"line_end":1015,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":410976,"byte_end":410979,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":410984,"byte_end":410997,"line_start":1017,"line_end":1017,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":411002,"byte_end":411005,"line_start":1018,"line_end":1018,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":411010,"byte_end":411021,"line_start":1019,"line_end":1019,"column_start":5,"column_end":16}},{"value":"/ # use std::{i32, f32};","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":411026,"byte_end":411052,"line_start":1020,"line_end":1020,"column_start":5,"column_end":31}},{"value":"/ # use euclid::vec3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":411057,"byte_end":411080,"line_start":1021,"line_end":1021,"column_start":5,"column_end":28}},{"value":"/ enum U {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":411085,"byte_end":411098,"line_start":1022,"line_end":1022,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":411103,"byte_end":411106,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec3::<_, U>(-1, 0, 2).abs(), vec3(1, 0, 2));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":411111,"byte_end":411171,"line_start":1024,"line_end":1024,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":411176,"byte_end":411179,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ let vec = vec3::<_, U>(f32::NAN, 0.0, -f32::MAX).abs();","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":411184,"byte_end":411243,"line_start":1026,"line_end":1026,"column_start":5,"column_end":64}},{"value":"/ assert!(vec.x.is_nan());","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":411248,"byte_end":411276,"line_start":1027,"line_end":1027,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec.y, 0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":411281,"byte_end":411308,"line_start":1028,"line_end":1028,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(vec.z, f32::MAX);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":411313,"byte_end":411345,"line_start":1029,"line_end":1029,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":411350,"byte_end":411357,"line_start":1030,"line_end":1030,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":411362,"byte_end":411365,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":411370,"byte_end":411382,"line_start":1032,"line_end":1032,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":411387,"byte_end":411390,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ The behavior for each component follows the scalar type's implementation of","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":411395,"byte_end":411474,"line_start":1034,"line_end":1034,"column_start":5,"column_end":84}},{"value":"/ `num_traits::Signed::abs`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":411479,"byte_end":411509,"line_start":1035,"line_end":1035,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4176},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":411682,"byte_end":411685,"line_start":1045,"line_end":1045,"column_start":12,"column_end":15},"name":"dot","qualname":"<Vector3D<T, U>>::dot","value":"pub fn dot(Self, Self) -> T where T: Add<Output = T> + Mul<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Dot product.\n","sig":null,"attributes":[{"value":"/ Dot product.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":411640,"byte_end":411656,"line_start":1043,"line_end":1043,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":411661,"byte_end":411670,"line_start":1044,"line_end":1044,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4180},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":411926,"byte_end":411931,"line_start":1056,"line_end":1056,"column_start":12,"column_end":17},"name":"cross","qualname":"<Vector3D<T, U>>::cross","value":"pub fn cross(Self, Self) -> Self where T: Sub<Output = T> + Mul<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Cross product.\n","sig":null,"attributes":[{"value":"/ Cross product.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":411882,"byte_end":411900,"line_start":1054,"line_end":1054,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":411905,"byte_end":411914,"line_start":1055,"line_end":1055,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4181},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":412294,"byte_end":412307,"line_start":1069,"line_end":1069,"column_start":12,"column_end":25},"name":"component_mul","qualname":"<Vector3D<T, U>>::component_mul","value":"pub fn component_mul(Self, Self) -> Self where T: Mul<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the component-wise multiplication of the two vectors.\n","sig":null,"attributes":[{"value":"/ Returns the component-wise multiplication of the two vectors.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":412203,"byte_end":412268,"line_start":1067,"line_end":1067,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":412273,"byte_end":412282,"line_start":1068,"line_end":1068,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4182},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":412581,"byte_end":412589,"line_start":1080,"line_end":1080,"column_start":12,"column_end":20},"name":"to_point","qualname":"<Vector3D<T, U>>::to_point","value":"pub fn to_point(Self) -> Point3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast this vector into a point.","sig":null,"attributes":[{"value":"/ Cast this vector into a point.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":412457,"byte_end":412491,"line_start":1076,"line_end":1076,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":412496,"byte_end":412499,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ Equivalent to adding this vector to the origin.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":412504,"byte_end":412555,"line_start":1078,"line_end":1078,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":412560,"byte_end":412569,"line_start":1079,"line_end":1079,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4183},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":412754,"byte_end":412756,"line_start":1086,"line_end":1086,"column_start":12,"column_end":14},"name":"xy","qualname":"<Vector3D<T, U>>::xy","value":"pub fn xy(Self) -> Vector2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d vector using this vector's x and y coordinates\n","sig":null,"attributes":[{"value":"/ Returns a 2d vector using this vector's x and y coordinates","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":412665,"byte_end":412728,"line_start":1084,"line_end":1084,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":412733,"byte_end":412742,"line_start":1085,"line_end":1085,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4184},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":412912,"byte_end":412914,"line_start":1092,"line_end":1092,"column_start":12,"column_end":14},"name":"xz","qualname":"<Vector3D<T, U>>::xz","value":"pub fn xz(Self) -> Vector2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d vector using this vector's x and z coordinates\n","sig":null,"attributes":[{"value":"/ Returns a 2d vector using this vector's x and z coordinates","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":412823,"byte_end":412886,"line_start":1090,"line_end":1090,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":412891,"byte_end":412900,"line_start":1091,"line_end":1091,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4185},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":413070,"byte_end":413072,"line_start":1098,"line_end":1098,"column_start":12,"column_end":14},"name":"yz","qualname":"<Vector3D<T, U>>::yz","value":"pub fn yz(Self) -> Vector2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d vector using this vector's x and z coordinates\n","sig":null,"attributes":[{"value":"/ Returns a 2d vector using this vector's x and z coordinates","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":412981,"byte_end":413044,"line_start":1096,"line_end":1096,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":413049,"byte_end":413058,"line_start":1097,"line_end":1097,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4186},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":413204,"byte_end":413212,"line_start":1104,"line_end":1104,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Vector3D<T, U>>::to_array","value":"pub fn to_array(Self) -> [T; ]","parent":null,"children":[],"decl_id":null,"docs":" Cast into an array with x, y and z.\n","sig":null,"attributes":[{"value":"/ Cast into an array with x, y and z.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":413139,"byte_end":413178,"line_start":1102,"line_end":1102,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":413183,"byte_end":413192,"line_start":1103,"line_end":1103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4188},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":413343,"byte_end":413354,"line_start":1110,"line_end":1110,"column_start":12,"column_end":23},"name":"to_array_4d","qualname":"<Vector3D<T, U>>::to_array_4d","value":"pub fn to_array_4d(Self) -> [T; ] where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" Cast into an array with x, y, z and 0.\n","sig":null,"attributes":[{"value":"/ Cast into an array with x, y, z and 0.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":413275,"byte_end":413317,"line_start":1108,"line_end":1108,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":413322,"byte_end":413331,"line_start":1109,"line_end":1109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4190},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":413526,"byte_end":413534,"line_start":1119,"line_end":1119,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<Vector3D<T, U>>::to_tuple","value":"pub fn to_tuple(Self) -> (T, T, T)","parent":null,"children":[],"decl_id":null,"docs":" Cast into a tuple with x, y and z.\n","sig":null,"attributes":[{"value":"/ Cast into a tuple with x, y and z.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":413462,"byte_end":413500,"line_start":1117,"line_end":1117,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":413505,"byte_end":413514,"line_start":1118,"line_end":1118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4191},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":413667,"byte_end":413678,"line_start":1125,"line_end":1125,"column_start":12,"column_end":23},"name":"to_tuple_4d","qualname":"<Vector3D<T, U>>::to_tuple_4d","value":"pub fn to_tuple_4d(Self) -> (T, T, T, T) where T: Zero","parent":null,"children":[],"decl_id":null,"docs":" Cast into a tuple with x, y, z and 0.\n","sig":null,"attributes":[{"value":"/ Cast into a tuple with x, y, z and 0.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":413600,"byte_end":413641,"line_start":1123,"line_end":1123,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":413646,"byte_end":413655,"line_start":1124,"line_end":1124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4192},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":413872,"byte_end":413882,"line_start":1134,"line_end":1134,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Vector3D<T, U>>::to_untyped","value":"pub fn to_untyped(Self) -> Vector3D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":413792,"byte_end":413846,"line_start":1132,"line_end":1132,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":413851,"byte_end":413860,"line_start":1133,"line_end":1133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4193},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":414011,"byte_end":414020,"line_start":1140,"line_end":1140,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Vector3D<T, U>>::cast_unit","value":"pub fn cast_unit<V>(Self) -> Vector3D<T, V>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit.\n","sig":null,"attributes":[{"value":"/ Cast the unit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":413967,"byte_end":413985,"line_start":1138,"line_end":1138,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":413990,"byte_end":413999,"line_start":1139,"line_end":1139,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4195},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":414153,"byte_end":414158,"line_start":1146,"line_end":1146,"column_start":12,"column_end":17},"name":"to_2d","qualname":"<Vector3D<T, U>>::to_2d","value":"pub fn to_2d(Self) -> Vector2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Convert into a 2d vector.\n","sig":null,"attributes":[{"value":"/ Convert into a 2d vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":414098,"byte_end":414127,"line_start":1144,"line_end":1144,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":414132,"byte_end":414141,"line_start":1145,"line_end":1145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4196},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":414580,"byte_end":414585,"line_start":1162,"line_end":1162,"column_start":12,"column_end":17},"name":"round","qualname":"<Vector3D<T, U>>::round","value":"pub fn round(Self) -> Self where T: Round","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the nearest integer value.","sig":null,"attributes":[{"value":"/ Rounds each component to the nearest integer value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":414214,"byte_end":414269,"line_start":1150,"line_end":1150,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":414274,"byte_end":414277,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":414282,"byte_end":414357,"line_start":1152,"line_end":1152,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":414362,"byte_end":414365,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":414370,"byte_end":414381,"line_start":1154,"line_end":1154,"column_start":5,"column_end":16}},{"value":"/ # use euclid::vec3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":414386,"byte_end":414409,"line_start":1155,"line_end":1155,"column_start":5,"column_end":28}},{"value":"/ enum Mm {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":414414,"byte_end":414428,"line_start":1156,"line_end":1156,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":414433,"byte_end":414436,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec3::<_, Mm>(-0.1, -0.8, 0.4).round(), vec3::<_, Mm>(0.0, -1.0, 0.0))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":414441,"byte_end":414526,"line_start":1158,"line_end":1158,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":414531,"byte_end":414538,"line_start":1159,"line_end":1159,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":414543,"byte_end":414552,"line_start":1160,"line_end":1160,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":414557,"byte_end":414568,"line_start":1161,"line_end":1161,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4197},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":415106,"byte_end":415110,"line_start":1181,"line_end":1181,"column_start":12,"column_end":16},"name":"ceil","qualname":"<Vector3D<T, U>>::ceil","value":"pub fn ceil(Self) -> Self where T: Ceil","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the smallest integer equal or greater than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the smallest integer equal or greater than the original value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":414706,"byte_end":414797,"line_start":1169,"line_end":1169,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":414802,"byte_end":414805,"line_start":1170,"line_end":1170,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":414810,"byte_end":414885,"line_start":1171,"line_end":1171,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":414890,"byte_end":414893,"line_start":1172,"line_end":1172,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":414898,"byte_end":414909,"line_start":1173,"line_end":1173,"column_start":5,"column_end":16}},{"value":"/ # use euclid::vec3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":414914,"byte_end":414937,"line_start":1174,"line_end":1174,"column_start":5,"column_end":28}},{"value":"/ enum Mm {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":414942,"byte_end":414956,"line_start":1175,"line_end":1175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":414961,"byte_end":414964,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec3::<_, Mm>(-0.1, -0.8, 0.4).ceil(), vec3::<_, Mm>(0.0, 0.0, 1.0))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":414969,"byte_end":415052,"line_start":1177,"line_end":1177,"column_start":5,"column_end":88}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":415057,"byte_end":415064,"line_start":1178,"line_end":1178,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":415069,"byte_end":415078,"line_start":1179,"line_end":1179,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":415083,"byte_end":415094,"line_start":1180,"line_end":1180,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4198},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":415627,"byte_end":415632,"line_start":1200,"line_end":1200,"column_start":12,"column_end":17},"name":"floor","qualname":"<Vector3D<T, U>>::floor","value":"pub fn floor(Self) -> Self where T: Floor","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the biggest integer equal or lower than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the biggest integer equal or lower than the original value.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":415227,"byte_end":415315,"line_start":1188,"line_end":1188,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":415320,"byte_end":415323,"line_start":1189,"line_end":1189,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":415328,"byte_end":415403,"line_start":1190,"line_end":1190,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":415408,"byte_end":415411,"line_start":1191,"line_end":1191,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":415416,"byte_end":415427,"line_start":1192,"line_end":1192,"column_start":5,"column_end":16}},{"value":"/ # use euclid::vec3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":415432,"byte_end":415455,"line_start":1193,"line_end":1193,"column_start":5,"column_end":28}},{"value":"/ enum Mm {}","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":415460,"byte_end":415474,"line_start":1194,"line_end":1194,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":415479,"byte_end":415482,"line_start":1195,"line_end":1195,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec3::<_, Mm>(-0.1, -0.8, 0.4).floor(), vec3::<_, Mm>(-1.0, -1.0, 0.0))","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":415487,"byte_end":415573,"line_start":1196,"line_end":1196,"column_start":5,"column_end":91}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":415578,"byte_end":415585,"line_start":1197,"line_end":1197,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":415590,"byte_end":415599,"line_start":1198,"line_end":1198,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":415604,"byte_end":415615,"line_start":1199,"line_end":1199,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4199},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":415833,"byte_end":415845,"line_start":1209,"line_end":1209,"column_start":12,"column_end":24},"name":"to_transform","qualname":"<Vector3D<T, U>>::to_transform","value":"pub fn to_transform(Self) -> Transform3D<T, U, U> where T: Zero + One","parent":null,"children":[],"decl_id":null,"docs":" Creates translation by this vector in vector units\n","sig":null,"attributes":[{"value":"/ Creates translation by this vector in vector units","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":415753,"byte_end":415807,"line_start":1207,"line_end":1207,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":415812,"byte_end":415821,"line_start":1208,"line_end":1208,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4203},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":416140,"byte_end":416153,"line_start":1223,"line_end":1223,"column_start":12,"column_end":25},"name":"square_length","qualname":"<Vector3D<T, U>>::square_length","value":"pub fn square_length(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector's length squared.\n","sig":null,"attributes":[{"value":"/ Returns the vector's length squared.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":416074,"byte_end":416114,"line_start":1221,"line_end":1221,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":416119,"byte_end":416128,"line_start":1222,"line_end":1222,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4204},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":416391,"byte_end":416410,"line_start":1231,"line_end":1231,"column_start":12,"column_end":31},"name":"project_onto_vector","qualname":"<Vector3D<T, U>>::project_onto_vector","value":"pub fn project_onto_vector(Self, Self) -> Self where T: Sub<T, Output = T> +\nDiv<T, Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Returns this vector projected onto another one.","sig":null,"attributes":[{"value":"/ Returns this vector projected onto another one.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":416238,"byte_end":416289,"line_start":1227,"line_end":1227,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":416294,"byte_end":416297,"line_start":1228,"line_end":1228,"column_start":5,"column_end":8}},{"value":"/ Projecting onto a nil vector will cause a division by zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":416302,"byte_end":416365,"line_start":1229,"line_end":1229,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":416370,"byte_end":416379,"line_start":1230,"line_end":1230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4208},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":416746,"byte_end":416754,"line_start":1243,"line_end":1243,"column_start":12,"column_end":20},"name":"angle_to","qualname":"<Vector3D<T, U>>::angle_to","value":"pub fn angle_to(Self, Self) -> Angle<T> where T: Trig","parent":null,"children":[],"decl_id":null,"docs":" Returns the positive angle between this vector and another vector.","sig":null,"attributes":[{"value":"/ Returns the positive angle between this vector and another vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":416608,"byte_end":416678,"line_start":1240,"line_end":1240,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":416683,"byte_end":416686,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8}},{"value":"/ The returned angle is between 0 and PI.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":416691,"byte_end":416734,"line_start":1242,"line_end":1242,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4209},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":417007,"byte_end":417013,"line_start":1255,"line_end":1255,"column_start":12,"column_end":18},"name":"length","qualname":"<Vector3D<T, U>>::length","value":"pub fn length(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector length.\n","sig":null,"attributes":[{"value":"/ Returns the vector length.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":416951,"byte_end":416981,"line_start":1253,"line_end":1253,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":416986,"byte_end":416995,"line_start":1254,"line_end":1254,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4210},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":417162,"byte_end":417171,"line_start":1262,"line_end":1262,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Vector3D<T, U>>::normalize","value":"pub fn normalize(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector with length of one unit\n","sig":null,"attributes":[{"value":"/ Returns the vector with length of one unit","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":417074,"byte_end":417120,"line_start":1259,"line_end":1259,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":417125,"byte_end":417134,"line_start":1260,"line_end":1260,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":417139,"byte_end":417150,"line_start":1261,"line_end":1261,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4211},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":417461,"byte_end":417474,"line_start":1272,"line_end":1272,"column_start":12,"column_end":25},"name":"try_normalize","qualname":"<Vector3D<T, U>>::try_normalize","value":"pub fn try_normalize(Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector with length of one unit.","sig":null,"attributes":[{"value":"/ Returns the vector with length of one unit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":417228,"byte_end":417275,"line_start":1266,"line_end":1266,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":417280,"byte_end":417283,"line_start":1267,"line_end":1267,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Vector2D::normalize`](#method.normalize), this returns None in the case that the","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":417288,"byte_end":417381,"line_start":1268,"line_end":1268,"column_start":5,"column_end":98}},{"value":"/ length of the vector is zero.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":417386,"byte_end":417419,"line_start":1269,"line_end":1269,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":417424,"byte_end":417433,"line_start":1270,"line_end":1270,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":417438,"byte_end":417449,"line_start":1271,"line_end":1271,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4212},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":417778,"byte_end":417794,"line_start":1284,"line_end":1284,"column_start":12,"column_end":28},"name":"robust_normalize","qualname":"<Vector3D<T, U>>::robust_normalize","value":"pub fn robust_normalize(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the normalized vector even if the length is larger than the max value of Float.\n","sig":null,"attributes":[{"value":"/ Return the normalized vector even if the length is larger than the max value of Float.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":417646,"byte_end":417736,"line_start":1281,"line_end":1281,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":417741,"byte_end":417750,"line_start":1282,"line_end":1282,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":417755,"byte_end":417766,"line_start":1283,"line_end":1283,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4213},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":418106,"byte_end":418121,"line_start":1296,"line_end":1296,"column_start":12,"column_end":27},"name":"with_max_length","qualname":"<Vector3D<T, U>>::with_max_length","value":"pub fn with_max_length(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return this vector capped to a maximum length.\n","sig":null,"attributes":[{"value":"/ Return this vector capped to a maximum length.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":418030,"byte_end":418080,"line_start":1294,"line_end":1294,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":418085,"byte_end":418094,"line_start":1295,"line_end":1295,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4214},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":418433,"byte_end":418448,"line_start":1307,"line_end":1307,"column_start":12,"column_end":27},"name":"with_min_length","qualname":"<Vector3D<T, U>>::with_min_length","value":"pub fn with_min_length(Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return this vector with a minimum length applied.\n","sig":null,"attributes":[{"value":"/ Return this vector with a minimum length applied.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":418354,"byte_end":418407,"line_start":1305,"line_end":1305,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":418412,"byte_end":418421,"line_start":1306,"line_end":1306,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4215},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":418771,"byte_end":418783,"line_start":1318,"line_end":1318,"column_start":12,"column_end":24},"name":"clamp_length","qualname":"<Vector3D<T, U>>::clamp_length","value":"pub fn clamp_length(Self, T, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return this vector with minimum and maximum lengths applied.\n","sig":null,"attributes":[{"value":"/ Return this vector with minimum and maximum lengths applied.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":418681,"byte_end":418745,"line_start":1316,"line_end":1316,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":418750,"byte_end":418759,"line_start":1317,"line_end":1317,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4219},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":419713,"byte_end":419717,"line_start":1346,"line_end":1346,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Vector3D<T, U>>::lerp","value":"pub fn lerp(Self, Self, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate each component between this vector and another vector.","sig":null,"attributes":[{"value":"/ Linearly interpolate each component between this vector and another vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":419026,"byte_end":419105,"line_start":1328,"line_end":1328,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":419110,"byte_end":419113,"line_start":1329,"line_end":1329,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":419118,"byte_end":419131,"line_start":1330,"line_end":1330,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":419136,"byte_end":419139,"line_start":1331,"line_end":1331,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":419144,"byte_end":419155,"line_start":1332,"line_end":1332,"column_start":5,"column_end":16}},{"value":"/ use euclid::vec3;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":419160,"byte_end":419181,"line_start":1333,"line_end":1333,"column_start":5,"column_end":26}},{"value":"/ use euclid::default::Vector3D;","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":419186,"byte_end":419220,"line_start":1334,"line_end":1334,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":419225,"byte_end":419228,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ let from: Vector3D<_> = vec3(0.0, 10.0, -1.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":419233,"byte_end":419283,"line_start":1336,"line_end":1336,"column_start":5,"column_end":55}},{"value":"/ let to:  Vector3D<_> = vec3(8.0, -4.0,  0.0);","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":419288,"byte_end":419337,"line_start":1337,"line_end":1337,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":419342,"byte_end":419345,"line_start":1338,"line_end":1338,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from.lerp(to, -1.0), vec3(-8.0,  24.0, -2.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":419350,"byte_end":419411,"line_start":1339,"line_end":1339,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(from.lerp(to,  0.0), vec3( 0.0,  10.0, -1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":419416,"byte_end":419477,"line_start":1340,"line_end":1340,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(from.lerp(to,  0.5), vec3( 4.0,   3.0, -0.5));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":419482,"byte_end":419543,"line_start":1341,"line_end":1341,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(from.lerp(to,  1.0), vec3( 8.0,  -4.0,  0.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":419548,"byte_end":419609,"line_start":1342,"line_end":1342,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(from.lerp(to,  2.0), vec3(16.0, -18.0,  1.0));","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":419614,"byte_end":419675,"line_start":1343,"line_end":1343,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":419680,"byte_end":419687,"line_start":1344,"line_end":1344,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":419692,"byte_end":419701,"line_start":1345,"line_end":1345,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4220},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":419932,"byte_end":419939,"line_start":1353,"line_end":1353,"column_start":12,"column_end":19},"name":"reflect","qualname":"<Vector3D<T, U>>::reflect","value":"pub fn reflect(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a reflection vector using an incident ray and a surface normal.\n","sig":null,"attributes":[{"value":"/ Returns a reflection vector using an incident ray and a surface normal.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":419831,"byte_end":419906,"line_start":1351,"line_end":1351,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":419911,"byte_end":419920,"line_start":1352,"line_end":1352,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4224},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":420221,"byte_end":420224,"line_start":1362,"line_end":1362,"column_start":12,"column_end":15},"name":"min","qualname":"<Vector3D<T, U>>::min","value":"pub fn min(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector each component of which are minimum of this vector and another.\n","sig":null,"attributes":[{"value":"/ Returns the vector each component of which are minimum of this vector and another.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":420109,"byte_end":420195,"line_start":1360,"line_end":1360,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":420200,"byte_end":420209,"line_start":1361,"line_end":1361,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4225},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":420503,"byte_end":420506,"line_start":1372,"line_end":1372,"column_start":12,"column_end":15},"name":"max","qualname":"<Vector3D<T, U>>::max","value":"pub fn max(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector each component of which are maximum of this vector and another.\n","sig":null,"attributes":[{"value":"/ Returns the vector each component of which are maximum of this vector and another.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":420391,"byte_end":420477,"line_start":1370,"line_end":1370,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":420482,"byte_end":420491,"line_start":1371,"line_end":1371,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4226},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":420871,"byte_end":420876,"line_start":1385,"line_end":1385,"column_start":12,"column_end":17},"name":"clamp","qualname":"<Vector3D<T, U>>::clamp","value":"pub fn clamp(Self, Self, Self) -> Self where T: Copy","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector each component of which is clamped by corresponding\n components of `start` and `end`.","sig":null,"attributes":[{"value":"/ Returns the vector each component of which is clamped by corresponding","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":420673,"byte_end":420747,"line_start":1380,"line_end":1380,"column_start":5,"column_end":79}},{"value":"/ components of `start` and `end`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":420752,"byte_end":420788,"line_start":1381,"line_end":1381,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":420793,"byte_end":420796,"line_start":1382,"line_end":1382,"column_start":5,"column_end":8}},{"value":"/ Shortcut for `self.max(start).min(end)`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":420801,"byte_end":420845,"line_start":1383,"line_end":1383,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":420850,"byte_end":420859,"line_start":1384,"line_end":1384,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4227},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":421096,"byte_end":421108,"line_start":1394,"line_end":1394,"column_start":12,"column_end":24},"name":"greater_than","qualname":"<Vector3D<T, U>>::greater_than","value":"pub fn greater_than(Self, Self) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"greater than\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"greater than\" operation on each component.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":420992,"byte_end":421070,"line_start":1392,"line_end":1392,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":421075,"byte_end":421084,"line_start":1393,"line_end":1393,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4228},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":421391,"byte_end":421401,"line_start":1404,"line_end":1404,"column_start":12,"column_end":22},"name":"lower_than","qualname":"<Vector3D<T, U>>::lower_than","value":"pub fn lower_than(Self, Self) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"lower than\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"lower than\" operation on each component.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":421289,"byte_end":421365,"line_start":1402,"line_end":1402,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":421370,"byte_end":421379,"line_start":1403,"line_end":1403,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4232},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":421720,"byte_end":421725,"line_start":1416,"line_end":1416,"column_start":12,"column_end":17},"name":"equal","qualname":"<Vector3D<T, U>>::equal","value":"pub fn equal(Self, Self) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"equal\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"equal\" operation on each component.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":421623,"byte_end":421694,"line_start":1414,"line_end":1414,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":421699,"byte_end":421708,"line_start":1415,"line_end":1415,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4233},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":422010,"byte_end":422019,"line_start":1426,"line_end":1426,"column_start":12,"column_end":21},"name":"not_equal","qualname":"<Vector3D<T, U>>::not_equal","value":"pub fn not_equal(Self, Self) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"not equal\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"not equal\" operation on each component.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":421909,"byte_end":421984,"line_start":1424,"line_end":1424,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":421989,"byte_end":421998,"line_start":1425,"line_end":1425,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4237},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":422630,"byte_end":422634,"line_start":1442,"line_end":1442,"column_start":12,"column_end":16},"name":"cast","qualname":"<Vector3D<T, U>>::cast","value":"pub fn cast<NewT: NumCast>(Self) -> Vector3D<NewT, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":422249,"byte_end":422323,"line_start":1436,"line_end":1436,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":422328,"byte_end":422331,"line_start":1437,"line_end":1437,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector to integer coordinates, the decimals are truncated","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":422336,"byte_end":422424,"line_start":1438,"line_end":1438,"column_start":5,"column_end":93}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":422429,"byte_end":422517,"line_start":1439,"line_end":1439,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":422522,"byte_end":422604,"line_start":1440,"line_end":1440,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":422609,"byte_end":422618,"line_start":1441,"line_end":1441,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4239},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":423099,"byte_end":423107,"line_start":1451,"line_end":1451,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Vector3D<T, U>>::try_cast","value":"pub fn try_cast<NewT: NumCast>(Self) -> Option<Vector3D<NewT, U>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":422723,"byte_end":422806,"line_start":1446,"line_end":1446,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":422811,"byte_end":422814,"line_start":1447,"line_end":1447,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector to integer coordinates, the decimals are truncated","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":422819,"byte_end":422907,"line_start":1448,"line_end":1448,"column_start":5,"column_end":93}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":422912,"byte_end":423000,"line_start":1449,"line_end":1449,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":423005,"byte_end":423087,"line_start":1450,"line_end":1450,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":4241},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":423505,"byte_end":423511,"line_start":1466,"line_end":1466,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<Vector3D<T, U>>::to_f32","value":"pub fn to_f32(Self) -> Vector3D<f32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` vector.\n","sig":null,"attributes":[{"value":"/ Cast into an `f32` vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":423449,"byte_end":423479,"line_start":1464,"line_end":1464,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":423484,"byte_end":423493,"line_start":1465,"line_end":1465,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4242},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":423627,"byte_end":423633,"line_start":1472,"line_end":1472,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<Vector3D<T, U>>::to_f64","value":"pub fn to_f64(Self) -> Vector3D<f64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` vector.\n","sig":null,"attributes":[{"value":"/ Cast into an `f64` vector.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":423571,"byte_end":423601,"line_start":1470,"line_end":1470,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":423606,"byte_end":423615,"line_start":1471,"line_end":1471,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4243},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":423990,"byte_end":423998,"line_start":1482,"line_end":1482,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<Vector3D<T, U>>::to_usize","value":"pub fn to_usize(Self) -> Vector3D<usize, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `usize` vector, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `usize` vector, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":423693,"byte_end":423753,"line_start":1476,"line_end":1476,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":423758,"byte_end":423761,"line_start":1477,"line_end":1477,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector vectors, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":423766,"byte_end":423844,"line_start":1478,"line_end":1478,"column_start":5,"column_end":83}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":423849,"byte_end":423923,"line_start":1479,"line_end":1479,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":423928,"byte_end":423964,"line_start":1480,"line_end":1480,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":423969,"byte_end":423978,"line_start":1481,"line_end":1481,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4244},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":424355,"byte_end":424361,"line_start":1492,"line_end":1492,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<Vector3D<T, U>>::to_u32","value":"pub fn to_u32(Self) -> Vector3D<u32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` vector, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `u32` vector, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":424060,"byte_end":424118,"line_start":1486,"line_end":1486,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":424123,"byte_end":424126,"line_start":1487,"line_end":1487,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector vectors, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":424131,"byte_end":424209,"line_start":1488,"line_end":1488,"column_start":5,"column_end":83}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":424214,"byte_end":424288,"line_start":1489,"line_end":1489,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":424293,"byte_end":424329,"line_start":1490,"line_end":1490,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":424334,"byte_end":424343,"line_start":1491,"line_end":1491,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4245},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":424716,"byte_end":424722,"line_start":1502,"line_end":1502,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<Vector3D<T, U>>::to_i32","value":"pub fn to_i32(Self) -> Vector3D<i32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i32` vector, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i32` vector, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":424421,"byte_end":424479,"line_start":1496,"line_end":1496,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":424484,"byte_end":424487,"line_start":1497,"line_end":1497,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector vectors, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":424492,"byte_end":424570,"line_start":1498,"line_end":1498,"column_start":5,"column_end":83}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":424575,"byte_end":424649,"line_start":1499,"line_end":1499,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":424654,"byte_end":424690,"line_start":1500,"line_end":1500,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":424695,"byte_end":424704,"line_start":1501,"line_end":1501,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4246},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":425077,"byte_end":425083,"line_start":1512,"line_end":1512,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<Vector3D<T, U>>::to_i64","value":"pub fn to_i64(Self) -> Vector3D<i64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i64` vector, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i64` vector, truncating decimals if any.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":424782,"byte_end":424840,"line_start":1506,"line_end":1506,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":424845,"byte_end":424848,"line_start":1507,"line_end":1507,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector vectors, it is worth considering whether","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":424853,"byte_end":424931,"line_start":1508,"line_end":1508,"column_start":5,"column_end":83}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":424936,"byte_end":425010,"line_start":1509,"line_end":1509,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":425015,"byte_end":425051,"line_start":1510,"line_end":1510,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":425056,"byte_end":425065,"line_start":1511,"line_end":1511,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4612},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":430309,"byte_end":430321,"line_start":1731,"line_end":1731,"column_start":12,"column_end":24},"name":"BoolVector2D","qualname":"::vector::BoolVector2D","value":"BoolVector2D { x, y }","parent":null,"children":[{"krate":0,"index":4613},{"krate":0,"index":4614}],"decl_id":null,"docs":" A 2d vector of booleans, useful for component-wise logic operations.\n","sig":null,"attributes":[{"value":"/ A 2d vector of booleans, useful for component-wise logic operations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":430174,"byte_end":430246,"line_start":1729,"line_end":1729,"column_start":1,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":4613},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":430332,"byte_end":430333,"line_start":1732,"line_end":1732,"column_start":9,"column_end":10},"name":"x","qualname":"::vector::BoolVector2D::x","value":"bool","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4614},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":430349,"byte_end":430350,"line_start":1733,"line_end":1733,"column_start":9,"column_end":10},"name":"y","qualname":"::vector::BoolVector2D::y","value":"bool","parent":{"krate":0,"index":4612},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4630},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":430496,"byte_end":430508,"line_start":1738,"line_end":1738,"column_start":12,"column_end":24},"name":"BoolVector3D","qualname":"::vector::BoolVector3D","value":"BoolVector3D { x, y, z }","parent":null,"children":[{"krate":0,"index":4631},{"krate":0,"index":4632},{"krate":0,"index":4633}],"decl_id":null,"docs":" A 3d vector of booleans, useful for component-wise logic operations.\n","sig":null,"attributes":[{"value":"/ A 3d vector of booleans, useful for component-wise logic operations.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":430361,"byte_end":430433,"line_start":1736,"line_end":1736,"column_start":1,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":4631},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":430519,"byte_end":430520,"line_start":1739,"line_end":1739,"column_start":9,"column_end":10},"name":"x","qualname":"::vector::BoolVector3D::x","value":"bool","parent":{"krate":0,"index":4630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4632},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":430536,"byte_end":430537,"line_start":1740,"line_end":1740,"column_start":9,"column_end":10},"name":"y","qualname":"::vector::BoolVector3D::y","value":"bool","parent":{"krate":0,"index":4630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4633},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":430553,"byte_end":430554,"line_start":1741,"line_end":1741,"column_start":9,"column_end":10},"name":"z","qualname":"::vector::BoolVector3D::z","value":"bool","parent":{"krate":0,"index":4630},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4363},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":430685,"byte_end":430688,"line_start":1747,"line_end":1747,"column_start":12,"column_end":15},"name":"all","qualname":"<BoolVector2D>::all","value":"pub fn all(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all components are `true` and `false` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all components are `true` and `false` otherwise.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":430589,"byte_end":430659,"line_start":1745,"line_end":1745,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":430664,"byte_end":430673,"line_start":1746,"line_end":1746,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4364},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":430836,"byte_end":430839,"line_start":1753,"line_end":1753,"column_start":12,"column_end":15},"name":"any","qualname":"<BoolVector2D>::any","value":"pub fn any(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if any component are `true` and `false` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if any component are `true` and `false` otherwise.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":430741,"byte_end":430810,"line_start":1751,"line_end":1751,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":430815,"byte_end":430824,"line_start":1752,"line_end":1752,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4365},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":431010,"byte_end":431014,"line_start":1759,"line_end":1759,"column_start":12,"column_end":16},"name":"none","qualname":"<BoolVector2D>::none","value":"pub fn none(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all components are `false` and `false` otherwise. Negation of `any()`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all components are `false` and `false` otherwise. Negation of `any()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":430892,"byte_end":430984,"line_start":1757,"line_end":1757,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":430989,"byte_end":430998,"line_start":1758,"line_end":1758,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4366},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":431151,"byte_end":431154,"line_start":1765,"line_end":1765,"column_start":12,"column_end":15},"name":"and","qualname":"<BoolVector2D>::and","value":"pub fn and(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns new vector with by-component AND operation applied.\n","sig":null,"attributes":[{"value":"/ Returns new vector with by-component AND operation applied.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":431062,"byte_end":431125,"line_start":1763,"line_end":1763,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":431130,"byte_end":431139,"line_start":1764,"line_end":1764,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4367},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":431384,"byte_end":431386,"line_start":1774,"line_end":1774,"column_start":12,"column_end":14},"name":"or","qualname":"<BoolVector2D>::or","value":"pub fn or(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns new vector with by-component OR operation applied.\n","sig":null,"attributes":[{"value":"/ Returns new vector with by-component OR operation applied.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":431296,"byte_end":431358,"line_start":1772,"line_end":1772,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":431363,"byte_end":431372,"line_start":1773,"line_end":1773,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4368},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":431630,"byte_end":431633,"line_start":1783,"line_end":1783,"column_start":12,"column_end":15},"name":"not","qualname":"<BoolVector2D>::not","value":"pub fn not(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns new vector with results of negation operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns new vector with results of negation operation on each component.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":431528,"byte_end":431604,"line_start":1781,"line_end":1781,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":431609,"byte_end":431618,"line_start":1782,"line_end":1782,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4369},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":431955,"byte_end":431967,"line_start":1793,"line_end":1793,"column_start":12,"column_end":24},"name":"select_point","qualname":"<BoolVector2D>::select_point","value":"pub fn select_point<T, U>(Self, Point2D<T, U>, Point2D<T, U>) -> Point2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns point, each component of which or from `a`, or from `b` depending on truly value\n of corresponding vector component. `true` selects value from `a` and `false` from `b`.\n","sig":null,"attributes":[{"value":"/ Returns point, each component of which or from `a`, or from `b` depending on truly value","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":431742,"byte_end":431834,"line_start":1790,"line_end":1790,"column_start":5,"column_end":97}},{"value":"/ of corresponding vector component. `true` selects value from `a` and `false` from `b`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":431839,"byte_end":431929,"line_start":1791,"line_end":1791,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":431934,"byte_end":431943,"line_start":1792,"line_end":1792,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4372},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":432374,"byte_end":432387,"line_start":1803,"line_end":1803,"column_start":12,"column_end":25},"name":"select_vector","qualname":"<BoolVector2D>::select_vector","value":"pub fn select_vector<T, U>(Self, Vector2D<T, U>, Vector2D<T, U>)\n-> Vector2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns vector, each component of which or from `a`, or from `b` depending on truly value\n of corresponding vector component. `true` selects value from `a` and `false` from `b`.\n","sig":null,"attributes":[{"value":"/ Returns vector, each component of which or from `a`, or from `b` depending on truly value","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":432160,"byte_end":432253,"line_start":1800,"line_end":1800,"column_start":5,"column_end":98}},{"value":"/ of corresponding vector component. `true` selects value from `a` and `false` from `b`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":432258,"byte_end":432348,"line_start":1801,"line_end":1801,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":432353,"byte_end":432362,"line_start":1802,"line_end":1802,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4375},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":432793,"byte_end":432804,"line_start":1813,"line_end":1813,"column_start":12,"column_end":23},"name":"select_size","qualname":"<BoolVector2D>::select_size","value":"pub fn select_size<T, U>(Self, Size2D<T, U>, Size2D<T, U>) -> Size2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns size, each component of which or from `a`, or from `b` depending on truly value\n of corresponding vector component. `true` selects value from `a` and `false` from `b`.\n","sig":null,"attributes":[{"value":"/ Returns size, each component of which or from `a`, or from `b` depending on truly value","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":432581,"byte_end":432672,"line_start":1810,"line_end":1810,"column_start":5,"column_end":96}},{"value":"/ of corresponding vector component. `true` selects value from `a` and `false` from `b`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":432677,"byte_end":432767,"line_start":1811,"line_end":1811,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":432772,"byte_end":432781,"line_start":1812,"line_end":1812,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4379},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":433129,"byte_end":433132,"line_start":1824,"line_end":1824,"column_start":12,"column_end":15},"name":"all","qualname":"<BoolVector3D>::all","value":"pub fn all(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all components are `true` and `false` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all components are `true` and `false` otherwise.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":433033,"byte_end":433103,"line_start":1822,"line_end":1822,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":433108,"byte_end":433117,"line_start":1823,"line_end":1823,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4380},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":433290,"byte_end":433293,"line_start":1830,"line_end":1830,"column_start":12,"column_end":15},"name":"any","qualname":"<BoolVector3D>::any","value":"pub fn any(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if any component are `true` and `false` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if any component are `true` and `false` otherwise.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":433195,"byte_end":433264,"line_start":1828,"line_end":1828,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":433269,"byte_end":433278,"line_start":1829,"line_end":1829,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4381},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":433474,"byte_end":433478,"line_start":1836,"line_end":1836,"column_start":12,"column_end":16},"name":"none","qualname":"<BoolVector3D>::none","value":"pub fn none(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all components are `false` and `false` otherwise. Negation of `any()`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all components are `false` and `false` otherwise. Negation of `any()`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":433356,"byte_end":433448,"line_start":1834,"line_end":1834,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":433453,"byte_end":433462,"line_start":1835,"line_end":1835,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4382},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":433615,"byte_end":433618,"line_start":1842,"line_end":1842,"column_start":12,"column_end":15},"name":"and","qualname":"<BoolVector3D>::and","value":"pub fn and(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns new vector with by-component AND operation applied.\n","sig":null,"attributes":[{"value":"/ Returns new vector with by-component AND operation applied.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":433526,"byte_end":433589,"line_start":1840,"line_end":1840,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":433594,"byte_end":433603,"line_start":1841,"line_end":1841,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4383},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":433882,"byte_end":433884,"line_start":1852,"line_end":1852,"column_start":12,"column_end":14},"name":"or","qualname":"<BoolVector3D>::or","value":"pub fn or(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns new vector with by-component OR operation applied.\n","sig":null,"attributes":[{"value":"/ Returns new vector with by-component OR operation applied.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":433794,"byte_end":433856,"line_start":1850,"line_end":1850,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":433861,"byte_end":433870,"line_start":1851,"line_end":1851,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4384},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":434162,"byte_end":434165,"line_start":1862,"line_end":1862,"column_start":12,"column_end":15},"name":"not","qualname":"<BoolVector3D>::not","value":"pub fn not(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns new vector with results of negation operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns new vector with results of negation operation on each component.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":434060,"byte_end":434136,"line_start":1860,"line_end":1860,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":434141,"byte_end":434150,"line_start":1861,"line_end":1861,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4385},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":434511,"byte_end":434523,"line_start":1873,"line_end":1873,"column_start":12,"column_end":24},"name":"select_point","qualname":"<BoolVector3D>::select_point","value":"pub fn select_point<T, U>(Self, Point3D<T, U>, Point3D<T, U>) -> Point3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns point, each component of which or from `a`, or from `b` depending on truly value\n of corresponding vector component. `true` selects value from `a` and `false` from `b`.\n","sig":null,"attributes":[{"value":"/ Returns point, each component of which or from `a`, or from `b` depending on truly value","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":434298,"byte_end":434390,"line_start":1870,"line_end":1870,"column_start":5,"column_end":97}},{"value":"/ of corresponding vector component. `true` selects value from `a` and `false` from `b`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":434395,"byte_end":434485,"line_start":1871,"line_end":1871,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":434490,"byte_end":434499,"line_start":1872,"line_end":1872,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4388},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":434974,"byte_end":434987,"line_start":1884,"line_end":1884,"column_start":12,"column_end":25},"name":"select_vector","qualname":"<BoolVector3D>::select_vector","value":"pub fn select_vector<T, U>(Self, Vector3D<T, U>, Vector3D<T, U>)\n-> Vector3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns vector, each component of which or from `a`, or from `b` depending on truly value\n of corresponding vector component. `true` selects value from `a` and `false` from `b`.\n","sig":null,"attributes":[{"value":"/ Returns vector, each component of which or from `a`, or from `b` depending on truly value","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":434760,"byte_end":434853,"line_start":1881,"line_end":1881,"column_start":5,"column_end":98}},{"value":"/ of corresponding vector component. `true` selects value from `a` and `false` from `b`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":434858,"byte_end":434948,"line_start":1882,"line_end":1882,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":434953,"byte_end":434962,"line_start":1883,"line_end":1883,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4391},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":435453,"byte_end":435464,"line_start":1896,"line_end":1896,"column_start":12,"column_end":23},"name":"select_size","qualname":"<BoolVector3D>::select_size","value":"pub fn select_size<T, U>(Self, Size3D<T, U>, Size3D<T, U>) -> Size3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns size, each component of which or from `a`, or from `b` depending on truly value\n of corresponding vector component. `true` selects value from `a` and `false` from `b`.\n","sig":null,"attributes":[{"value":"/ Returns size, each component of which or from `a`, or from `b` depending on truly value","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":435225,"byte_end":435316,"line_start":1892,"line_end":1892,"column_start":5,"column_end":96}},{"value":"/ of corresponding vector component. `true` selects value from `a` and `false` from `b`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":435321,"byte_end":435411,"line_start":1893,"line_end":1893,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":435416,"byte_end":435425,"line_start":1894,"line_end":1894,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":435430,"byte_end":435441,"line_start":1895,"line_end":1895,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":4394},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":435813,"byte_end":435815,"line_start":1906,"line_end":1906,"column_start":12,"column_end":14},"name":"xy","qualname":"<BoolVector3D>::xy","value":"pub fn xy(Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d vector using this vector's x and y coordinates.\n","sig":null,"attributes":[{"value":"/ Returns a 2d vector using this vector's x and y coordinates.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":435723,"byte_end":435787,"line_start":1904,"line_end":1904,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":435792,"byte_end":435801,"line_start":1905,"line_end":1905,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4395},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":436020,"byte_end":436022,"line_start":1915,"line_end":1915,"column_start":12,"column_end":14},"name":"xz","qualname":"<BoolVector3D>::xz","value":"pub fn xz(Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d vector using this vector's x and z coordinates.\n","sig":null,"attributes":[{"value":"/ Returns a 2d vector using this vector's x and z coordinates.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":435930,"byte_end":435994,"line_start":1913,"line_end":1913,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":435999,"byte_end":436008,"line_start":1914,"line_end":1914,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4396},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":436227,"byte_end":436229,"line_start":1924,"line_end":1924,"column_start":12,"column_end":14},"name":"yz","qualname":"<BoolVector3D>::yz","value":"pub fn yz(Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d vector using this vector's y and z coordinates.\n","sig":null,"attributes":[{"value":"/ Returns a 2d vector using this vector's y and z coordinates.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":436137,"byte_end":436201,"line_start":1922,"line_end":1922,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":436206,"byte_end":436215,"line_start":1923,"line_end":1923,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":4397},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":436388,"byte_end":436392,"line_start":1934,"line_end":1934,"column_start":8,"column_end":12},"name":"vec2","qualname":"::vector::vec2","value":"pub fn vec2<T, U>(T, T) -> Vector2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Convenience constructor.\n","sig":null,"attributes":[{"value":"/ Convenience constructor.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":436342,"byte_end":436370,"line_start":1932,"line_end":1932,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":436371,"byte_end":436380,"line_start":1933,"line_end":1933,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":4400},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":436551,"byte_end":436555,"line_start":1944,"line_end":1944,"column_start":8,"column_end":12},"name":"vec3","qualname":"::vector::vec3","value":"pub fn vec3<T, U>(T, T, T) -> Vector3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Convenience constructor.\n","sig":null,"attributes":[{"value":"/ Convenience constructor.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":436505,"byte_end":436533,"line_start":1942,"line_end":1942,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":436534,"byte_end":436543,"line_start":1943,"line_end":1943,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":4403},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":436745,"byte_end":436750,"line_start":1955,"line_end":1955,"column_start":8,"column_end":13},"name":"bvec2","qualname":"::vector::bvec2","value":"pub fn bvec2(bool, bool) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `BoolVector2D { x, y }`.\n","sig":null,"attributes":[{"value":"/ Shorthand for `BoolVector2D { x, y }`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":436685,"byte_end":436727,"line_start":1953,"line_end":1953,"column_start":1,"column_end":43}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":436728,"byte_end":436737,"line_start":1954,"line_end":1954,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":4404},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":436879,"byte_end":436884,"line_start":1961,"line_end":1961,"column_start":8,"column_end":13},"name":"bvec3","qualname":"::vector::bvec3","value":"pub fn bvec3(bool, bool, bool) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `BoolVector3D { x, y, z }`.\n","sig":null,"attributes":[{"value":"/ Shorthand for `BoolVector3D { x, y, z }`.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":436816,"byte_end":436861,"line_start":1959,"line_end":1959,"column_start":1,"column_end":46}},{"value":"inline","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":436862,"byte_end":436871,"line_start":1960,"line_end":1960,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":4649},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":3050,"byte_end":3061,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"UnknownUnit","qualname":"::UnknownUnit","value":"","parent":null,"children":[],"decl_id":null,"docs":" The default unit.\n","sig":null,"attributes":[{"value":"/ The default unit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2940,"byte_end":2961,"line_start":87,"line_end":87,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":4405},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":3072,"byte_end":3079,"line_start":91,"line_end":91,"column_start":9,"column_end":16},"name":"default","qualname":"::default","value":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":4406},{"krate":0,"index":4407},{"krate":0,"index":4409},{"krate":0,"index":4411},{"krate":0,"index":4413},{"krate":0,"index":4415},{"krate":0,"index":4417},{"krate":0,"index":4419},{"krate":0,"index":4421},{"krate":0,"index":4423},{"krate":0,"index":4425},{"krate":0,"index":4427},{"krate":0,"index":4429},{"krate":0,"index":4431},{"krate":0,"index":4433},{"krate":0,"index":4435},{"krate":0,"index":4437},{"krate":0,"index":4439},{"krate":0,"index":4441},{"krate":0,"index":4443},{"krate":0,"index":4445},{"krate":0,"index":4447}],"decl_id":null,"docs":" A set of aliases for all types, tagged with the default unknown unit.\n","sig":null,"attributes":[{"value":"/ A set of aliases for all types, tagged with the default unknown unit.","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":3086,"byte_end":3159,"line_start":92,"line_end":92,"column_start":5,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":4409},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":3202,"byte_end":3208,"line_start":95,"line_end":95,"column_start":14,"column_end":20},"name":"Length","qualname":"::default::Length","value":"super::Length<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4411},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":3258,"byte_end":3265,"line_start":96,"line_end":96,"column_start":14,"column_end":21},"name":"Point2D","qualname":"::default::Point2D","value":"super::Point2D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4413},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":3316,"byte_end":3323,"line_start":97,"line_end":97,"column_start":14,"column_end":21},"name":"Point3D","qualname":"::default::Point3D","value":"super::Point3D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4415},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":3374,"byte_end":3382,"line_start":98,"line_end":98,"column_start":14,"column_end":22},"name":"Vector2D","qualname":"::default::Vector2D","value":"super::Vector2D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4417},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":3434,"byte_end":3442,"line_start":99,"line_end":99,"column_start":14,"column_end":22},"name":"Vector3D","qualname":"::default::Vector3D","value":"super::Vector3D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4419},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":3494,"byte_end":3511,"line_start":100,"line_end":100,"column_start":14,"column_end":31},"name":"HomogeneousVector","qualname":"::default::HomogeneousVector","value":"super::HomogeneousVector<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4421},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":3572,"byte_end":3578,"line_start":101,"line_end":101,"column_start":14,"column_end":20},"name":"Size2D","qualname":"::default::Size2D","value":"super::Size2D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4423},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":3628,"byte_end":3634,"line_start":102,"line_end":102,"column_start":14,"column_end":20},"name":"Size3D","qualname":"::default::Size3D","value":"super::Size3D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4425},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":3684,"byte_end":3688,"line_start":103,"line_end":103,"column_start":14,"column_end":18},"name":"Rect","qualname":"::default::Rect","value":"super::Rect<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4427},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":3736,"byte_end":3741,"line_start":104,"line_end":104,"column_start":14,"column_end":19},"name":"Box2D","qualname":"::default::Box2D","value":"super::Box2D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4429},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":3790,"byte_end":3795,"line_start":105,"line_end":105,"column_start":14,"column_end":19},"name":"Box3D","qualname":"::default::Box3D","value":"super::Box3D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4431},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":3844,"byte_end":3857,"line_start":106,"line_end":106,"column_start":14,"column_end":27},"name":"SideOffsets2D","qualname":"::default::SideOffsets2D","value":"super::SideOffsets2D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4433},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":3914,"byte_end":3925,"line_start":107,"line_end":107,"column_start":14,"column_end":25},"name":"Transform2D","qualname":"::default::Transform2D","value":"super::Transform2D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4435},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":3993,"byte_end":4004,"line_start":108,"line_end":108,"column_start":14,"column_end":25},"name":"Transform3D","qualname":"::default::Transform3D","value":"super::Transform3D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4437},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":4072,"byte_end":4082,"line_start":109,"line_end":109,"column_start":14,"column_end":24},"name":"Rotation2D","qualname":"::default::Rotation2D","value":"super::Rotation2D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4439},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":4149,"byte_end":4159,"line_start":110,"line_end":110,"column_start":14,"column_end":24},"name":"Rotation3D","qualname":"::default::Rotation3D","value":"super::Rotation3D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4441},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":4226,"byte_end":4239,"line_start":111,"line_end":111,"column_start":14,"column_end":27},"name":"Translation2D","qualname":"::default::Translation2D","value":"super::Translation2D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4443},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":4309,"byte_end":4322,"line_start":112,"line_end":112,"column_start":14,"column_end":27},"name":"Translation3D","qualname":"::default::Translation3D","value":"super::Translation3D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4445},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":4392,"byte_end":4397,"line_start":113,"line_end":113,"column_start":14,"column_end":19},"name":"Scale","qualname":"::default::Scale","value":"super::Scale<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":4447},"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":4459,"byte_end":4475,"line_start":114,"line_end":114,"column_start":14,"column_end":30},"name":"RigidTransform3D","qualname":"::default::RigidTransform3D","value":"super::RigidTransform3D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":6607,"byte_end":6612,"line_start":27,"line_end":27,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":6786,"byte_end":6791,"line_start":39,"line_end":39,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":7059,"byte_end":7064,"line_start":56,"line_end":56,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":7603,"byte_end":7608,"line_start":76,"line_end":76,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":8293,"byte_end":8298,"line_start":103,"line_end":103,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":8449,"byte_end":8454,"line_start":113,"line_end":113,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":8558,"byte_end":8563,"line_start":122,"line_end":122,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":9003,"byte_end":9008,"line_start":147,"line_end":147,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":219},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":9723,"byte_end":9728,"line_start":177,"line_end":177,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":9909,"byte_end":9914,"line_start":184,"line_end":184,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":10074,"byte_end":10079,"line_start":191,"line_end":191,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":10244,"byte_end":10249,"line_start":197,"line_end":197,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":10400,"byte_end":10405,"line_start":203,"line_end":203,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":10553,"byte_end":10558,"line_start":209,"line_end":209,"column_start":47,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":10751,"byte_end":10756,"line_start":216,"line_end":216,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":10904,"byte_end":10909,"line_start":222,"line_end":222,"column_start":47,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":11076,"byte_end":11081,"line_start":230,"line_end":230,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":11265,"byte_end":11270,"line_start":238,"line_end":238,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":11398,"byte_end":11403,"line_start":244,"line_end":244,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":11587,"byte_end":11592,"line_start":252,"line_end":252,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":11714,"byte_end":11719,"line_start":258,"line_end":258,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":11860,"byte_end":11865,"line_start":265,"line_end":265,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":19517,"byte_end":19522,"line_start":70,"line_end":70,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":19661,"byte_end":19666,"line_start":77,"line_end":77,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":19705,"byte_end":19710,"line_start":79,"line_end":79,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":19848,"byte_end":19853,"line_start":85,"line_end":85,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":19993,"byte_end":19998,"line_start":91,"line_end":91,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":20047,"byte_end":20052,"line_start":93,"line_end":93,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":20253,"byte_end":20258,"line_start":102,"line_end":102,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":20420,"byte_end":20425,"line_start":110,"line_end":110,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":22137,"byte_end":22142,"line_start":159,"line_end":159,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":23584,"byte_end":23589,"line_start":207,"line_end":207,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":23874,"byte_end":23879,"line_start":221,"line_end":221,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":24361,"byte_end":24366,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":25581,"byte_end":25586,"line_start":285,"line_end":285,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":26842,"byte_end":26847,"line_start":334,"line_end":334,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":27160,"byte_end":27165,"line_start":345,"line_end":345,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":27386,"byte_end":27391,"line_start":355,"line_end":355,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":27590,"byte_end":27595,"line_start":366,"line_end":366,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":27795,"byte_end":27800,"line_start":376,"line_end":376,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":451},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":28018,"byte_end":28023,"line_start":385,"line_end":385,"column_start":47,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":28166,"byte_end":28171,"line_start":392,"line_end":392,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":28389,"byte_end":28394,"line_start":401,"line_end":401,"column_start":47,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":28557,"byte_end":28562,"line_start":408,"line_end":408,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":28810,"byte_end":28815,"line_start":417,"line_end":417,"column_start":60,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":29009,"byte_end":29014,"line_start":425,"line_end":425,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":29262,"byte_end":29267,"line_start":434,"line_end":434,"column_start":60,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":29418,"byte_end":29423,"line_start":442,"line_end":442,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":30305,"byte_end":30310,"line_start":476,"line_end":476,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":33149,"byte_end":33154,"line_start":554,"line_end":554,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":33829,"byte_end":33834,"line_start":573,"line_end":573,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":515},{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":34496,"byte_end":34501,"line_start":596,"line_end":596,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":42897,"byte_end":42902,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":43041,"byte_end":43046,"line_start":47,"line_end":47,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":43085,"byte_end":43090,"line_start":49,"line_end":49,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":43228,"byte_end":43233,"line_start":55,"line_end":55,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":43373,"byte_end":43378,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":43427,"byte_end":43432,"line_start":63,"line_end":63,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":43633,"byte_end":43638,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":43800,"byte_end":43805,"line_start":80,"line_end":80,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":45831,"byte_end":45836,"line_start":137,"line_end":137,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":47282,"byte_end":47287,"line_start":195,"line_end":195,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":47590,"byte_end":47595,"line_start":210,"line_end":210,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":48114,"byte_end":48119,"line_start":239,"line_end":239,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":48585,"byte_end":48590,"line_start":254,"line_end":254,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":652},{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":50031,"byte_end":50036,"line_start":309,"line_end":309,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":50353,"byte_end":50358,"line_start":320,"line_end":320,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":50579,"byte_end":50584,"line_start":330,"line_end":330,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":51154,"byte_end":51159,"line_start":359,"line_end":359,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":51359,"byte_end":51364,"line_start":369,"line_end":369,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":677},{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":51582,"byte_end":51587,"line_start":378,"line_end":378,"column_start":47,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":51748,"byte_end":51753,"line_start":386,"line_end":386,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":686},{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":51979,"byte_end":51984,"line_start":395,"line_end":395,"column_start":47,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":52165,"byte_end":52170,"line_start":403,"line_end":403,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":696},{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":52426,"byte_end":52431,"line_start":412,"line_end":412,"column_start":60,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":52633,"byte_end":52638,"line_start":420,"line_end":420,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":706},{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":52894,"byte_end":52899,"line_start":429,"line_end":429,"column_start":60,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":53058,"byte_end":53063,"line_start":437,"line_end":437,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":54071,"byte_end":54076,"line_start":477,"line_end":477,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":726},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":56935,"byte_end":56940,"line_start":555,"line_end":555,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":57619,"byte_end":57624,"line_start":574,"line_end":574,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":741},{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":58292,"byte_end":58297,"line_start":599,"line_end":599,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":746}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":68532,"byte_end":68549,"line_start":34,"line_end":34,"column_start":27,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":68588,"byte_end":68605,"line_start":36,"line_end":36,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":69641,"byte_end":69658,"line_start":81,"line_end":81,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":69706,"byte_end":69723,"line_start":83,"line_end":83,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":69915,"byte_end":69932,"line_start":92,"line_end":92,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":70131,"byte_end":70148,"line_start":104,"line_end":104,"column_start":12,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":70474,"byte_end":70491,"line_start":118,"line_end":118,"column_start":59,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":825},{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":71296,"byte_end":71313,"line_start":148,"line_end":148,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":71491,"byte_end":71508,"line_start":155,"line_end":155,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":71685,"byte_end":71702,"line_start":162,"line_end":162,"column_start":48,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":71876,"byte_end":71893,"line_start":169,"line_end":169,"column_start":41,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":72059,"byte_end":72076,"line_start":176,"line_end":176,"column_start":39,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":74816,"byte_end":74822,"line_start":44,"line_end":44,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":931}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":74940,"byte_end":74946,"line_start":50,"line_end":50,"column_start":27,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":75514,"byte_end":75520,"line_start":78,"line_end":78,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":938}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":75688,"byte_end":75694,"line_start":86,"line_end":86,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":76763,"byte_end":76769,"line_start":124,"line_end":124,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":949},{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":77116,"byte_end":77122,"line_start":138,"line_end":138,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":954},{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":77574,"byte_end":77580,"line_start":151,"line_end":151,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":77711,"byte_end":77717,"line_start":157,"line_end":157,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":77842,"byte_end":77848,"line_start":164,"line_end":164,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":77976,"byte_end":77982,"line_start":171,"line_end":171,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":974},{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":78185,"byte_end":78191,"line_start":180,"line_end":180,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":979},{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":78410,"byte_end":78416,"line_start":189,"line_end":189,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":78624,"byte_end":78630,"line_start":196,"line_end":196,"column_start":74,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":78804,"byte_end":78810,"line_start":203,"line_end":203,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":78942,"byte_end":78948,"line_start":210,"line_end":210,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":999},{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":79157,"byte_end":79163,"line_start":219,"line_end":219,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":79341,"byte_end":79347,"line_start":226,"line_end":226,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":79644,"byte_end":79650,"line_start":237,"line_end":237,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1014},{"krate":0,"index":1015}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":79872,"byte_end":79878,"line_start":247,"line_end":247,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1019},{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":80107,"byte_end":80113,"line_start":257,"line_end":257,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":80262,"byte_end":80268,"line_start":265,"line_end":265,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1028},{"krate":0,"index":1029}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":80497,"byte_end":80503,"line_start":275,"line_end":275,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":80681,"byte_end":80687,"line_start":283,"line_end":283,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1038},{"krate":0,"index":1039}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":80939,"byte_end":80945,"line_start":293,"line_end":293,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1044},{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":81157,"byte_end":81163,"line_start":303,"line_end":303,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1049},{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":81336,"byte_end":81342,"line_start":312,"line_end":312,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":81467,"byte_end":81473,"line_start":318,"line_end":318,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":81612,"byte_end":81618,"line_start":324,"line_end":324,"column_start":23,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":81653,"byte_end":81659,"line_start":326,"line_end":326,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1065}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":81778,"byte_end":81784,"line_start":332,"line_end":332,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1069}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":81914,"byte_end":81920,"line_start":339,"line_end":339,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1073},{"krate":0,"index":1074}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","byte_start":90683,"byte_end":90684,"line_start":32,"line_end":32,"column_start":36,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","byte_start":90824,"byte_end":90825,"line_start":42,"line_end":42,"column_start":34,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":94039,"byte_end":94046,"line_start":38,"line_end":38,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":94085,"byte_end":94092,"line_start":40,"line_end":40,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":94972,"byte_end":94979,"line_start":81,"line_end":81,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":95027,"byte_end":95034,"line_start":83,"line_end":83,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1208}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":95184,"byte_end":95191,"line_start":92,"line_end":92,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1212}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":95405,"byte_end":95412,"line_start":104,"line_end":104,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":95586,"byte_end":95593,"line_start":110,"line_end":110,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1221}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":95710,"byte_end":95717,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1227},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1230}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":96866,"byte_end":96873,"line_start":171,"line_end":171,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1240},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":101935,"byte_end":101942,"line_start":371,"line_end":371,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":102543,"byte_end":102550,"line_start":395,"line_end":395,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1257},{"krate":0,"index":1259},{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1266}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":105384,"byte_end":105391,"line_start":473,"line_end":473,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1270}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":105580,"byte_end":105587,"line_start":480,"line_end":480,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1274}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":105724,"byte_end":105731,"line_start":487,"line_end":487,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1278},{"krate":0,"index":1279}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":105911,"byte_end":105918,"line_start":496,"line_end":496,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1283},{"krate":0,"index":1284}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":106158,"byte_end":106165,"line_start":505,"line_end":505,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":106352,"byte_end":106359,"line_start":513,"line_end":513,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":1293}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":106610,"byte_end":106617,"line_start":522,"line_end":522,"column_start":69,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":1297}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":106757,"byte_end":106764,"line_start":529,"line_end":529,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1301},{"krate":0,"index":1302}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":106974,"byte_end":106981,"line_start":538,"line_end":538,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1306},{"krate":0,"index":1307}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":107221,"byte_end":107228,"line_start":547,"line_end":547,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1311}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":107415,"byte_end":107422,"line_start":555,"line_end":555,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1315},{"krate":0,"index":1316}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":107673,"byte_end":107680,"line_start":564,"line_end":564,"column_start":69,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":1320}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":107830,"byte_end":107837,"line_start":571,"line_end":571,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1324},{"krate":0,"index":1325}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":108058,"byte_end":108065,"line_start":580,"line_end":580,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1329}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":108222,"byte_end":108229,"line_start":587,"line_end":587,"column_start":55,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1334},{"krate":0,"index":1335}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":108475,"byte_end":108482,"line_start":596,"line_end":596,"column_start":60,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1339}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":108656,"byte_end":108663,"line_start":604,"line_end":604,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1343},{"krate":0,"index":1344}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":108884,"byte_end":108891,"line_start":613,"line_end":613,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1348}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":109048,"byte_end":109055,"line_start":620,"line_end":620,"column_start":55,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1353},{"krate":0,"index":1354}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":109301,"byte_end":109308,"line_start":629,"line_end":629,"column_start":60,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1358}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":109474,"byte_end":109481,"line_start":637,"line_end":637,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1362}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":109588,"byte_end":109595,"line_start":644,"line_end":644,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1366}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":109749,"byte_end":109756,"line_start":652,"line_end":652,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1370}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":109908,"byte_end":109915,"line_start":660,"line_end":660,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1374}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":110095,"byte_end":110102,"line_start":668,"line_end":668,"column_start":53,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1378},{"krate":0,"index":1379}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":110427,"byte_end":110434,"line_start":680,"line_end":680,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1384}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":110535,"byte_end":110542,"line_start":686,"line_end":686,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1390}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":110647,"byte_end":110654,"line_start":692,"line_end":692,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1395}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":110755,"byte_end":110762,"line_start":698,"line_end":698,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1399}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":111083,"byte_end":111090,"line_start":716,"line_end":716,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":111129,"byte_end":111136,"line_start":718,"line_end":718,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1413}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":112074,"byte_end":112081,"line_start":761,"line_end":761,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":112129,"byte_end":112136,"line_start":763,"line_end":763,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":112307,"byte_end":112314,"line_start":772,"line_end":772,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":112516,"byte_end":112523,"line_start":783,"line_end":783,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1429}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":112764,"byte_end":112771,"line_start":793,"line_end":793,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1433}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":112908,"byte_end":112915,"line_start":799,"line_end":799,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1442}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":114152,"byte_end":114159,"line_start":856,"line_end":856,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1450},{"krate":0,"index":1452},{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1459},{"krate":0,"index":1460},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":119750,"byte_end":119757,"line_start":1071,"line_end":1071,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":120496,"byte_end":120503,"line_start":1103,"line_end":1103,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1473},{"krate":0,"index":1475},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1482}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":123423,"byte_end":123430,"line_start":1185,"line_end":1185,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1486}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":123687,"byte_end":123694,"line_start":1196,"line_end":1196,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1490}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":123831,"byte_end":123838,"line_start":1203,"line_end":1203,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1494},{"krate":0,"index":1495}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":124027,"byte_end":124034,"line_start":1212,"line_end":1212,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1499},{"krate":0,"index":1500}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":124343,"byte_end":124350,"line_start":1225,"line_end":1225,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1504}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":124568,"byte_end":124575,"line_start":1234,"line_end":1234,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1508},{"krate":0,"index":1509}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":124844,"byte_end":124851,"line_start":1243,"line_end":1243,"column_start":69,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":1513}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":124991,"byte_end":124998,"line_start":1250,"line_end":1250,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1517},{"krate":0,"index":1518}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":125226,"byte_end":125233,"line_start":1259,"line_end":1259,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1522},{"krate":0,"index":1523}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":125542,"byte_end":125549,"line_start":1272,"line_end":1272,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1527}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":125767,"byte_end":125774,"line_start":1281,"line_end":1281,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1531},{"krate":0,"index":1532}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":126043,"byte_end":126050,"line_start":1290,"line_end":1290,"column_start":69,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":1536}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":126200,"byte_end":126207,"line_start":1297,"line_end":1297,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1540},{"krate":0,"index":1541}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":126482,"byte_end":126489,"line_start":1310,"line_end":1310,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1545}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":126691,"byte_end":126698,"line_start":1319,"line_end":1319,"column_start":55,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1550},{"krate":0,"index":1551}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":127009,"byte_end":127016,"line_start":1332,"line_end":1332,"column_start":60,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1555}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":127162,"byte_end":127169,"line_start":1339,"line_end":1339,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1559},{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":127444,"byte_end":127451,"line_start":1352,"line_end":1352,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1564}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":127653,"byte_end":127660,"line_start":1361,"line_end":1361,"column_start":55,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1569},{"krate":0,"index":1570}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":127971,"byte_end":127978,"line_start":1374,"line_end":1374,"column_start":60,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1574}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":128116,"byte_end":128123,"line_start":1381,"line_end":1381,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1578}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":128230,"byte_end":128237,"line_start":1388,"line_end":1388,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1582}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":128391,"byte_end":128398,"line_start":1396,"line_end":1396,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1586}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":128550,"byte_end":128557,"line_start":1404,"line_end":1404,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1590}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":128737,"byte_end":128744,"line_start":1412,"line_end":1412,"column_start":53,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1594},{"krate":0,"index":1595}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":129203,"byte_end":129210,"line_start":1430,"line_end":1430,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1600}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":129319,"byte_end":129326,"line_start":1436,"line_end":1436,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1606}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":129440,"byte_end":129447,"line_start":1442,"line_end":1442,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1611}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":129562,"byte_end":129569,"line_start":1448,"line_end":1448,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1615}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":144907,"byte_end":144911,"line_start":57,"line_end":57,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1694}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":145054,"byte_end":145058,"line_start":64,"line_end":64,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":145097,"byte_end":145101,"line_start":66,"line_end":66,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1702}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":145243,"byte_end":145247,"line_start":72,"line_end":72,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1706}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":145395,"byte_end":145399,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":145448,"byte_end":145452,"line_start":80,"line_end":80,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1713}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":145725,"byte_end":145729,"line_start":90,"line_end":90,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1717}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":145843,"byte_end":145847,"line_start":96,"line_end":96,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1721}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":146015,"byte_end":146019,"line_start":104,"line_end":104,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1725},{"krate":0,"index":1726}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":146420,"byte_end":146424,"line_start":124,"line_end":124,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1730},{"krate":0,"index":1731},{"krate":0,"index":1732},{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1735},{"krate":0,"index":1736},{"krate":0,"index":1737},{"krate":0,"index":1738},{"krate":0,"index":1739},{"krate":0,"index":1740},{"krate":0,"index":1741}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":147692,"byte_end":147696,"line_start":194,"line_end":194,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1745},{"krate":0,"index":1746}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":148215,"byte_end":148219,"line_start":212,"line_end":212,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1750}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":148575,"byte_end":148579,"line_start":228,"line_end":228,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1754}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":148999,"byte_end":149003,"line_start":245,"line_end":245,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1758}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":149573,"byte_end":149577,"line_start":262,"line_end":262,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1762}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":150424,"byte_end":150428,"line_start":285,"line_end":285,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1766}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":151046,"byte_end":151050,"line_start":304,"line_end":304,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1770}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":151863,"byte_end":151867,"line_start":326,"line_end":326,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1775}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":152235,"byte_end":152239,"line_start":340,"line_end":340,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1779}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":152462,"byte_end":152466,"line_start":350,"line_end":350,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1783}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":152850,"byte_end":152854,"line_start":367,"line_end":367,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1787}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":153192,"byte_end":153196,"line_start":380,"line_end":380,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1792}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":153320,"byte_end":153324,"line_start":387,"line_end":387,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1796}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":153459,"byte_end":153463,"line_start":394,"line_end":394,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1800}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":153663,"byte_end":153667,"line_start":405,"line_end":405,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1804},{"krate":0,"index":1805}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":153887,"byte_end":153891,"line_start":414,"line_end":414,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1809}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":154034,"byte_end":154038,"line_start":421,"line_end":421,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1813},{"krate":0,"index":1814}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":154266,"byte_end":154270,"line_start":430,"line_end":430,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1818}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":154433,"byte_end":154437,"line_start":437,"line_end":437,"column_start":55,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1823},{"krate":0,"index":1824}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":154695,"byte_end":154699,"line_start":446,"line_end":446,"column_start":60,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1828}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":154905,"byte_end":154909,"line_start":454,"line_end":454,"column_start":55,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1833},{"krate":0,"index":1834}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":155167,"byte_end":155171,"line_start":463,"line_end":463,"column_start":60,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1838}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":155340,"byte_end":155344,"line_start":471,"line_end":471,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1842},{"krate":0,"index":1843},{"krate":0,"index":1844}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":155985,"byte_end":155989,"line_start":494,"line_end":494,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1849},{"krate":0,"index":1851},{"krate":0,"index":1853},{"krate":0,"index":1854},{"krate":0,"index":1855},{"krate":0,"index":1856},{"krate":0,"index":1857},{"krate":0,"index":1858},{"krate":0,"index":1859}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":159333,"byte_end":159337,"line_start":582,"line_end":582,"column_start":76,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":1863},{"krate":0,"index":1864},{"krate":0,"index":1865}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":161399,"byte_end":161403,"line_start":633,"line_end":633,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1869}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":171926,"byte_end":171942,"line_start":28,"line_end":28,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1900}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":172255,"byte_end":172271,"line_start":39,"line_end":39,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1905}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":172553,"byte_end":172569,"line_start":48,"line_end":48,"column_start":40,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1912},{"krate":0,"index":1913},{"krate":0,"index":1914},{"krate":0,"index":1915},{"krate":0,"index":1916},{"krate":0,"index":1917},{"krate":0,"index":1919},{"krate":0,"index":1920},{"krate":0,"index":1921},{"krate":0,"index":1922}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":176955,"byte_end":176971,"line_start":187,"line_end":187,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1927}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":177147,"byte_end":177163,"line_start":194,"line_end":194,"column_start":67,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":1932}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":181052,"byte_end":181062,"line_start":40,"line_end":40,"column_start":34,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":181115,"byte_end":181125,"line_start":42,"line_end":42,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2031}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":181307,"byte_end":181317,"line_start":51,"line_end":51,"column_start":26,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":181379,"byte_end":181389,"line_start":53,"line_end":53,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2040}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":181540,"byte_end":181550,"line_start":62,"line_end":62,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2045}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":181695,"byte_end":181705,"line_start":71,"line_end":71,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2051},{"krate":0,"index":2052},{"krate":0,"index":2053}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":182256,"byte_end":182266,"line_start":96,"line_end":96,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2058},{"krate":0,"index":2061},{"krate":0,"index":2062}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":183911,"byte_end":183921,"line_start":159,"line_end":159,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2067}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":184126,"byte_end":184136,"line_start":169,"line_end":169,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2072},{"krate":0,"index":2073},{"krate":0,"index":2074},{"krate":0,"index":2076},{"krate":0,"index":2077}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":185535,"byte_end":185545,"line_start":209,"line_end":209,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2082}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":186965,"byte_end":186975,"line_start":251,"line_end":251,"column_start":34,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":187028,"byte_end":187038,"line_start":253,"line_end":253,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2100}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":187305,"byte_end":187315,"line_start":265,"line_end":265,"column_start":26,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":187377,"byte_end":187387,"line_start":267,"line_end":267,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2109}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":187593,"byte_end":187603,"line_start":276,"line_end":276,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2114}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":187816,"byte_end":187826,"line_start":288,"line_end":288,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2120},{"krate":0,"index":2121}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":188697,"byte_end":188707,"line_start":319,"line_end":319,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2126},{"krate":0,"index":2127},{"krate":0,"index":2130},{"krate":0,"index":2131}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":191254,"byte_end":191264,"line_start":403,"line_end":403,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2136},{"krate":0,"index":2137},{"krate":0,"index":2138},{"krate":0,"index":2139},{"krate":0,"index":2140},{"krate":0,"index":2141},{"krate":0,"index":2142},{"krate":0,"index":2143},{"krate":0,"index":2144},{"krate":0,"index":2145},{"krate":0,"index":2146},{"krate":0,"index":2147},{"krate":0,"index":2148},{"krate":0,"index":2149},{"krate":0,"index":2150},{"krate":0,"index":2151},{"krate":0,"index":2152},{"krate":0,"index":2153},{"krate":0,"index":2154},{"krate":0,"index":2156},{"krate":0,"index":2157},{"krate":0,"index":2158}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":200902,"byte_end":200912,"line_start":706,"line_end":706,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2163}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":201167,"byte_end":201177,"line_start":716,"line_end":716,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2168},{"krate":0,"index":2169}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":211777,"byte_end":211782,"line_start":53,"line_end":53,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2239},{"krate":0,"index":2240},{"krate":0,"index":2241},{"krate":0,"index":2242},{"krate":0,"index":2243},{"krate":0,"index":2244},{"krate":0,"index":2245},{"krate":0,"index":2246},{"krate":0,"index":2247},{"krate":0,"index":2248},{"krate":0,"index":2249},{"krate":0,"index":2250}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":216444,"byte_end":216449,"line_start":241,"line_end":241,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2255},{"krate":0,"index":2257}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":218335,"byte_end":218340,"line_start":300,"line_end":300,"column_start":47,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2264},{"krate":0,"index":2265}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":218563,"byte_end":218568,"line_start":310,"line_end":310,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2270},{"krate":0,"index":2271}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":218803,"byte_end":218808,"line_start":320,"line_end":320,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2276},{"krate":0,"index":2277}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":219166,"byte_end":219171,"line_start":332,"line_end":332,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2282}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":219306,"byte_end":219311,"line_start":338,"line_end":338,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":219374,"byte_end":219379,"line_start":340,"line_end":340,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2291}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":219534,"byte_end":219539,"line_start":346,"line_end":346,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2296}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":219674,"byte_end":219679,"line_start":352,"line_end":352,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2301}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":219816,"byte_end":219821,"line_start":358,"line_end":358,"column_start":34,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":219884,"byte_end":219889,"line_start":360,"line_end":360,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2310}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":220034,"byte_end":220039,"line_start":366,"line_end":366,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2315}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":220156,"byte_end":220161,"line_start":372,"line_end":372,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2320}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":220291,"byte_end":220296,"line_start":378,"line_end":378,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2326}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":222838,"byte_end":222851,"line_start":42,"line_end":42,"column_start":27,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":222890,"byte_end":222903,"line_start":44,"line_end":44,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2389}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":223187,"byte_end":223200,"line_start":56,"line_end":56,"column_start":19,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":223248,"byte_end":223261,"line_start":58,"line_end":58,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2396}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":223517,"byte_end":223530,"line_start":70,"line_end":70,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2400}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":223770,"byte_end":223783,"line_start":82,"line_end":82,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2405}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":224027,"byte_end":224040,"line_start":92,"line_end":92,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2409}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":224316,"byte_end":224329,"line_start":104,"line_end":104,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2413},{"krate":0,"index":2414},{"krate":0,"index":2415},{"krate":0,"index":2416},{"krate":0,"index":2417},{"krate":0,"index":2418},{"krate":0,"index":2419},{"krate":0,"index":2420},{"krate":0,"index":2421},{"krate":0,"index":2422}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":227407,"byte_end":227420,"line_start":211,"line_end":211,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2426},{"krate":0,"index":2427}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":227755,"byte_end":227768,"line_start":226,"line_end":226,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2431},{"krate":0,"index":2432}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":228103,"byte_end":228116,"line_start":240,"line_end":240,"column_start":47,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2436}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":228357,"byte_end":228370,"line_start":250,"line_end":250,"column_start":55,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":2441},{"krate":0,"index":2442}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":228743,"byte_end":228756,"line_start":264,"line_end":264,"column_start":60,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":2446}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":228902,"byte_end":228915,"line_start":271,"line_end":271,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2450},{"krate":0,"index":2451}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":229250,"byte_end":229263,"line_start":285,"line_end":285,"column_start":47,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2455}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":229504,"byte_end":229517,"line_start":295,"line_end":295,"column_start":55,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":2460},{"krate":0,"index":2461}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":229890,"byte_end":229903,"line_start":309,"line_end":309,"column_start":60,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":2465}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":234345,"byte_end":234351,"line_start":41,"line_end":41,"column_start":27,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":234390,"byte_end":234396,"line_start":43,"line_end":43,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2570}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":235435,"byte_end":235441,"line_start":86,"line_end":86,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":235489,"byte_end":235495,"line_start":88,"line_end":88,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2577}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":235663,"byte_end":235669,"line_start":97,"line_end":97,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2581}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":235856,"byte_end":235862,"line_start":107,"line_end":107,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2586}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":236079,"byte_end":236085,"line_start":115,"line_end":115,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2590}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":236201,"byte_end":236207,"line_start":121,"line_end":121,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2594},{"krate":0,"index":2595},{"krate":0,"index":2596},{"krate":0,"index":2597},{"krate":0,"index":2598}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":237338,"byte_end":237344,"line_start":168,"line_end":168,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2602},{"krate":0,"index":2604},{"krate":0,"index":2605},{"krate":0,"index":2606},{"krate":0,"index":2607},{"krate":0,"index":2609},{"krate":0,"index":2610},{"krate":0,"index":2611},{"krate":0,"index":2612},{"krate":0,"index":2613}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":240711,"byte_end":240717,"line_start":291,"line_end":291,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2617},{"krate":0,"index":2619},{"krate":0,"index":2621},{"krate":0,"index":2622},{"krate":0,"index":2623},{"krate":0,"index":2624},{"krate":0,"index":2625},{"krate":0,"index":2626},{"krate":0,"index":2627}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":243885,"byte_end":243891,"line_start":379,"line_end":379,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2631},{"krate":0,"index":2632}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":244484,"byte_end":244490,"line_start":395,"line_end":395,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2636},{"krate":0,"index":2637},{"krate":0,"index":2638},{"krate":0,"index":2639},{"krate":0,"index":2640},{"krate":0,"index":2641}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":246162,"byte_end":246168,"line_start":448,"line_end":448,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2645},{"krate":0,"index":2646}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":246727,"byte_end":246733,"line_start":466,"line_end":466,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2650}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":246889,"byte_end":246895,"line_start":474,"line_end":474,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2654}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":247049,"byte_end":247055,"line_start":482,"line_end":482,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2658}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":247211,"byte_end":247217,"line_start":490,"line_end":490,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2662}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":247345,"byte_end":247351,"line_start":497,"line_end":497,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2666},{"krate":0,"index":2667}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":247530,"byte_end":247536,"line_start":506,"line_end":506,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2671},{"krate":0,"index":2672}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":247784,"byte_end":247790,"line_start":515,"line_end":515,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2676},{"krate":0,"index":2677}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":247990,"byte_end":247996,"line_start":522,"line_end":522,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2681}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":248183,"byte_end":248189,"line_start":528,"line_end":528,"column_start":74,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":2687}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":248343,"byte_end":248349,"line_start":534,"line_end":534,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2692}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":248521,"byte_end":248527,"line_start":542,"line_end":542,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2696},{"krate":0,"index":2697}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":248758,"byte_end":248764,"line_start":551,"line_end":551,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2701}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":248946,"byte_end":248952,"line_start":559,"line_end":559,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2705},{"krate":0,"index":2706}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":249177,"byte_end":249183,"line_start":568,"line_end":568,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2710}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":249369,"byte_end":249375,"line_start":576,"line_end":576,"column_start":55,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2715},{"krate":0,"index":2716}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":249634,"byte_end":249640,"line_start":585,"line_end":585,"column_start":60,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":2720}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":249786,"byte_end":249792,"line_start":592,"line_end":592,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2724},{"krate":0,"index":2725}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":250017,"byte_end":250023,"line_start":601,"line_end":601,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2729}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":250209,"byte_end":250215,"line_start":609,"line_end":609,"column_start":55,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2734},{"krate":0,"index":2735}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":250474,"byte_end":250480,"line_start":618,"line_end":618,"column_start":60,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":2739}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":251238,"byte_end":251244,"line_start":653,"line_end":653,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2746}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":251369,"byte_end":251375,"line_start":660,"line_end":660,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2751}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":251499,"byte_end":251505,"line_start":667,"line_end":667,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2757}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":251623,"byte_end":251629,"line_start":674,"line_end":674,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2762}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":251753,"byte_end":251759,"line_start":681,"line_end":681,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2766}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":258516,"byte_end":258522,"line_start":918,"line_end":918,"column_start":27,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":258561,"byte_end":258567,"line_start":920,"line_end":920,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2780}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":259566,"byte_end":259572,"line_start":963,"line_end":963,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":259620,"byte_end":259626,"line_start":965,"line_end":965,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2787}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":259823,"byte_end":259829,"line_start":974,"line_end":974,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2791}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":260044,"byte_end":260050,"line_start":985,"line_end":985,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2796}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":260334,"byte_end":260340,"line_start":995,"line_end":995,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2800}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":260476,"byte_end":260482,"line_start":1001,"line_end":1001,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2804},{"krate":0,"index":2805},{"krate":0,"index":2806},{"krate":0,"index":2807},{"krate":0,"index":2808}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":261711,"byte_end":261717,"line_start":1049,"line_end":1049,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2812},{"krate":0,"index":2814},{"krate":0,"index":2815},{"krate":0,"index":2816},{"krate":0,"index":2817},{"krate":0,"index":2819},{"krate":0,"index":2820},{"krate":0,"index":2821},{"krate":0,"index":2822},{"krate":0,"index":2823}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":265305,"byte_end":265311,"line_start":1172,"line_end":1172,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2827},{"krate":0,"index":2829},{"krate":0,"index":2831},{"krate":0,"index":2832},{"krate":0,"index":2833},{"krate":0,"index":2834},{"krate":0,"index":2835},{"krate":0,"index":2836}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":268211,"byte_end":268217,"line_start":1254,"line_end":1254,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2840},{"krate":0,"index":2841}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":268855,"byte_end":268861,"line_start":1270,"line_end":1270,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2845},{"krate":0,"index":2846},{"krate":0,"index":2847},{"krate":0,"index":2848},{"krate":0,"index":2849},{"krate":0,"index":2850}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":270683,"byte_end":270689,"line_start":1331,"line_end":1331,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2854},{"krate":0,"index":2855}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":271332,"byte_end":271338,"line_start":1351,"line_end":1351,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2859}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":271494,"byte_end":271500,"line_start":1359,"line_end":1359,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2863}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":271654,"byte_end":271660,"line_start":1367,"line_end":1367,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2867}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":271816,"byte_end":271822,"line_start":1375,"line_end":1375,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2871}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":271964,"byte_end":271970,"line_start":1382,"line_end":1382,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2875},{"krate":0,"index":2876}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":272162,"byte_end":272168,"line_start":1391,"line_end":1391,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2880},{"krate":0,"index":2881}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":272489,"byte_end":272495,"line_start":1404,"line_end":1404,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2885},{"krate":0,"index":2886}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":272768,"byte_end":272774,"line_start":1415,"line_end":1415,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2890}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":272961,"byte_end":272967,"line_start":1421,"line_end":1421,"column_start":74,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":2896}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":273121,"byte_end":273127,"line_start":1427,"line_end":1427,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2901}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":273334,"byte_end":273340,"line_start":1436,"line_end":1436,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2905},{"krate":0,"index":2906}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":273644,"byte_end":273650,"line_start":1449,"line_end":1449,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2910}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":273867,"byte_end":273873,"line_start":1458,"line_end":1458,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2914},{"krate":0,"index":2915}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":274165,"byte_end":274171,"line_start":1471,"line_end":1471,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2919}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":274386,"byte_end":274392,"line_start":1480,"line_end":1480,"column_start":55,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2924},{"krate":0,"index":2925}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":274720,"byte_end":274726,"line_start":1493,"line_end":1493,"column_start":60,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":2929}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":274872,"byte_end":274878,"line_start":1500,"line_end":1500,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2933},{"krate":0,"index":2934}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":275170,"byte_end":275176,"line_start":1513,"line_end":1513,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2938}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":275391,"byte_end":275397,"line_start":1522,"line_end":1522,"column_start":55,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2943},{"krate":0,"index":2944}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":275725,"byte_end":275731,"line_start":1535,"line_end":1535,"column_start":60,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":2948}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":276308,"byte_end":276314,"line_start":1561,"line_end":1561,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2952}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":276444,"byte_end":276450,"line_start":1568,"line_end":1568,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2957}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":276586,"byte_end":276592,"line_start":1575,"line_end":1575,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2963}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":276719,"byte_end":276725,"line_start":1582,"line_end":1582,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2968}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":276867,"byte_end":276873,"line_start":1589,"line_end":1589,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2972}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":286116,"byte_end":286127,"line_start":72,"line_end":72,"column_start":34,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":286180,"byte_end":286191,"line_start":74,"line_end":74,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3072}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":286545,"byte_end":286556,"line_start":88,"line_end":88,"column_start":26,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":286618,"byte_end":286629,"line_start":90,"line_end":90,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3081}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":286960,"byte_end":286971,"line_start":103,"line_end":103,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3086}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":287244,"byte_end":287255,"line_start":117,"line_end":117,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3092},{"krate":0,"index":3093},{"krate":0,"index":3094}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":288920,"byte_end":288931,"line_start":167,"line_end":167,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3099},{"krate":0,"index":3101},{"krate":0,"index":3103},{"krate":0,"index":3106},{"krate":0,"index":3108},{"krate":0,"index":3111},{"krate":0,"index":3112},{"krate":0,"index":3113},{"krate":0,"index":3115},{"krate":0,"index":3117}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":292679,"byte_end":292690,"line_start":291,"line_end":291,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3122},{"krate":0,"index":3124}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":293609,"byte_end":293620,"line_start":317,"line_end":317,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3130},{"krate":0,"index":3131}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":294254,"byte_end":294265,"line_start":346,"line_end":346,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3136}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":295052,"byte_end":295063,"line_start":368,"line_end":368,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3142},{"krate":0,"index":3145},{"krate":0,"index":3146}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":296165,"byte_end":296176,"line_start":413,"line_end":413,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3151},{"krate":0,"index":3152},{"krate":0,"index":3153}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":297144,"byte_end":297155,"line_start":446,"line_end":446,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3158},{"krate":0,"index":3160},{"krate":0,"index":3161}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":298247,"byte_end":298258,"line_start":494,"line_end":494,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3166},{"krate":0,"index":3167},{"krate":0,"index":3168},{"krate":0,"index":3169}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":300082,"byte_end":300093,"line_start":553,"line_end":553,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3174},{"krate":0,"index":3175},{"krate":0,"index":3176}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":301228,"byte_end":301239,"line_start":592,"line_end":592,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3181}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":301447,"byte_end":301458,"line_start":601,"line_end":601,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3186},{"krate":0,"index":3187}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":302044,"byte_end":302055,"line_start":614,"line_end":614,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3192}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":310007,"byte_end":310018,"line_start":73,"line_end":73,"column_start":34,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":310071,"byte_end":310082,"line_start":75,"line_end":75,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3323}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":310786,"byte_end":310797,"line_start":99,"line_end":99,"column_start":26,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":310859,"byte_end":310870,"line_start":101,"line_end":101,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3332}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":311571,"byte_end":311582,"line_start":124,"line_end":124,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3337}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":312115,"byte_end":312126,"line_start":148,"line_end":148,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3343},{"krate":0,"index":3344},{"krate":0,"index":3347}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":314534,"byte_end":314545,"line_start":229,"line_end":229,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3352},{"krate":0,"index":3354},{"krate":0,"index":3356},{"krate":0,"index":3359},{"krate":0,"index":3362},{"krate":0,"index":3364},{"krate":0,"index":3367},{"krate":0,"index":3368},{"krate":0,"index":3369},{"krate":0,"index":3371},{"krate":0,"index":3373}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":319990,"byte_end":320001,"line_start":381,"line_end":381,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3378},{"krate":0,"index":3379},{"krate":0,"index":3380},{"krate":0,"index":3383}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":321840,"byte_end":321851,"line_start":456,"line_end":456,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3390}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":324119,"byte_end":324130,"line_start":491,"line_end":491,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3396},{"krate":0,"index":3399},{"krate":0,"index":3400}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":325300,"byte_end":325311,"line_start":536,"line_end":536,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3405},{"krate":0,"index":3406},{"krate":0,"index":3407}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":326987,"byte_end":326998,"line_start":592,"line_end":592,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3412},{"krate":0,"index":3415},{"krate":0,"index":3416}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":328347,"byte_end":328358,"line_start":642,"line_end":642,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3421},{"krate":0,"index":3422},{"krate":0,"index":3423},{"krate":0,"index":3424},{"krate":0,"index":3425},{"krate":0,"index":3426},{"krate":0,"index":3427},{"krate":0,"index":3428},{"krate":0,"index":3429}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":334046,"byte_end":334057,"line_start":782,"line_end":782,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3434},{"krate":0,"index":3435},{"krate":0,"index":3436},{"krate":0,"index":3437},{"krate":0,"index":3438},{"krate":0,"index":3439},{"krate":0,"index":3440}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":341607,"byte_end":341618,"line_start":953,"line_end":953,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3445}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":343164,"byte_end":343175,"line_start":994,"line_end":994,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3450},{"krate":0,"index":3452}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":344674,"byte_end":344685,"line_start":1025,"line_end":1025,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3458},{"krate":0,"index":3459}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":345653,"byte_end":345664,"line_start":1050,"line_end":1050,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3464},{"krate":0,"index":3465}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":346598,"byte_end":346609,"line_start":1066,"line_end":1066,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3470}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":346803,"byte_end":346814,"line_start":1075,"line_end":1075,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3475}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":359771,"byte_end":359784,"line_start":58,"line_end":58,"column_start":34,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":359837,"byte_end":359850,"line_start":60,"line_end":60,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3572}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":360058,"byte_end":360071,"line_start":70,"line_end":70,"column_start":26,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":360133,"byte_end":360146,"line_start":72,"line_end":72,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3581}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":360310,"byte_end":360323,"line_start":81,"line_end":81,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3586}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":360488,"byte_end":360501,"line_start":91,"line_end":91,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3592},{"krate":0,"index":3593},{"krate":0,"index":3594},{"krate":0,"index":3595},{"krate":0,"index":3596}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":361857,"byte_end":361870,"line_start":148,"line_end":148,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3601},{"krate":0,"index":3602},{"krate":0,"index":3604},{"krate":0,"index":3605},{"krate":0,"index":3606},{"krate":0,"index":3607},{"krate":0,"index":3608},{"krate":0,"index":3609},{"krate":0,"index":3610},{"krate":0,"index":3611}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":364095,"byte_end":364108,"line_start":239,"line_end":239,"column_start":69,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":3617},{"krate":0,"index":3618}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":364396,"byte_end":364409,"line_start":247,"line_end":247,"column_start":72,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":3623}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":364622,"byte_end":364635,"line_start":254,"line_end":254,"column_start":69,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":3629},{"krate":0,"index":3630}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":364923,"byte_end":364936,"line_start":262,"line_end":262,"column_start":72,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":3635}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":365126,"byte_end":365139,"line_start":269,"line_end":269,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3640}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":365289,"byte_end":365302,"line_start":275,"line_end":275,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3645}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":365449,"byte_end":365462,"line_start":281,"line_end":281,"column_start":54,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":3650}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":365639,"byte_end":365652,"line_start":290,"line_end":290,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3655}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":365793,"byte_end":365806,"line_start":299,"line_end":299,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3660}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":366346,"byte_end":366359,"line_start":318,"line_end":318,"column_start":34,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":366412,"byte_end":366425,"line_start":320,"line_end":320,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3677}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":367429,"byte_end":367442,"line_start":363,"line_end":363,"column_start":26,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":367504,"byte_end":367517,"line_start":365,"line_end":365,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3686}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":367702,"byte_end":367715,"line_start":374,"line_end":374,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3691}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":367904,"byte_end":367917,"line_start":385,"line_end":385,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3697},{"krate":0,"index":3698},{"krate":0,"index":3699},{"krate":0,"index":3700},{"krate":0,"index":3701}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":369438,"byte_end":369451,"line_start":445,"line_end":445,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3706},{"krate":0,"index":3707},{"krate":0,"index":3709},{"krate":0,"index":3710},{"krate":0,"index":3711},{"krate":0,"index":3712},{"krate":0,"index":3713},{"krate":0,"index":3714},{"krate":0,"index":3715},{"krate":0,"index":3716},{"krate":0,"index":3717},{"krate":0,"index":3718}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":372307,"byte_end":372320,"line_start":559,"line_end":559,"column_start":69,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":3724},{"krate":0,"index":3725}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":372626,"byte_end":372639,"line_start":567,"line_end":567,"column_start":72,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":3730}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":372879,"byte_end":372892,"line_start":575,"line_end":575,"column_start":69,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":3736},{"krate":0,"index":3737}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":373198,"byte_end":373211,"line_start":583,"line_end":583,"column_start":72,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":3742}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":373428,"byte_end":373441,"line_start":591,"line_end":591,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3747}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":373596,"byte_end":373609,"line_start":597,"line_end":597,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3752}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":373764,"byte_end":373777,"line_start":603,"line_end":603,"column_start":54,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":3757}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":373962,"byte_end":373975,"line_start":612,"line_end":612,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3762}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":374116,"byte_end":374129,"line_start":621,"line_end":621,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3767}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":385782,"byte_end":385790,"line_start":47,"line_end":47,"column_start":27,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":385829,"byte_end":385837,"line_start":49,"line_end":49,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3905}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":386725,"byte_end":386733,"line_start":90,"line_end":90,"column_start":23,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":386780,"byte_end":386788,"line_start":92,"line_end":92,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3912}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":386920,"byte_end":386928,"line_start":98,"line_end":98,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3916}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":387075,"byte_end":387083,"line_start":105,"line_end":105,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3921}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":387280,"byte_end":387288,"line_start":113,"line_end":113,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3925}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":387462,"byte_end":387470,"line_start":119,"line_end":119,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3929}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":387588,"byte_end":387596,"line_start":125,"line_end":125,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3933},{"krate":0,"index":3934},{"krate":0,"index":3935},{"krate":0,"index":3936},{"krate":0,"index":3937},{"krate":0,"index":3938},{"krate":0,"index":3939},{"krate":0,"index":3940},{"krate":0,"index":3941},{"krate":0,"index":3942},{"krate":0,"index":3943}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":390382,"byte_end":390390,"line_start":242,"line_end":242,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3947},{"krate":0,"index":3948},{"krate":0,"index":3949},{"krate":0,"index":3950},{"krate":0,"index":3951},{"krate":0,"index":3952},{"krate":0,"index":3954},{"krate":0,"index":3956},{"krate":0,"index":3957},{"krate":0,"index":3958},{"krate":0,"index":3959},{"krate":0,"index":3960},{"krate":0,"index":3961},{"krate":0,"index":3962}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":393905,"byte_end":393913,"line_start":385,"line_end":385,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3966},{"krate":0,"index":3967},{"krate":0,"index":3968}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":394799,"byte_end":394807,"line_start":417,"line_end":417,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3972},{"krate":0,"index":3973},{"krate":0,"index":3974},{"krate":0,"index":3975},{"krate":0,"index":3976},{"krate":0,"index":3977},{"krate":0,"index":3978}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":396796,"byte_end":396804,"line_start":489,"line_end":489,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3982},{"krate":0,"index":3983}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":397916,"byte_end":397924,"line_start":524,"line_end":524,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3987},{"krate":0,"index":3988},{"krate":0,"index":3989},{"krate":0,"index":3990},{"krate":0,"index":3991}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":399226,"byte_end":399234,"line_start":568,"line_end":568,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3995},{"krate":0,"index":3996}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":399784,"byte_end":399792,"line_start":588,"line_end":588,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4000},{"krate":0,"index":4002},{"krate":0,"index":4004},{"krate":0,"index":4005},{"krate":0,"index":4006},{"krate":0,"index":4007},{"krate":0,"index":4008},{"krate":0,"index":4009}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":402644,"byte_end":402652,"line_start":666,"line_end":666,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4013},{"krate":0,"index":4014}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":402817,"byte_end":402825,"line_start":675,"line_end":675,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4018},{"krate":0,"index":4019}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":403044,"byte_end":403052,"line_start":684,"line_end":684,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4023},{"krate":0,"index":4024}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":403277,"byte_end":403285,"line_start":693,"line_end":693,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4028}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":403472,"byte_end":403480,"line_start":699,"line_end":699,"column_start":74,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":4034}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":403650,"byte_end":403658,"line_start":705,"line_end":705,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4039}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":403788,"byte_end":403796,"line_start":712,"line_end":712,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4043},{"krate":0,"index":4044}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":404036,"byte_end":404044,"line_start":721,"line_end":721,"column_start":69,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":4048}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":404184,"byte_end":404192,"line_start":728,"line_end":728,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4052},{"krate":0,"index":4053}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":404412,"byte_end":404420,"line_start":737,"line_end":737,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4057}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":404577,"byte_end":404585,"line_start":744,"line_end":744,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4062},{"krate":0,"index":4063}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":404830,"byte_end":404838,"line_start":753,"line_end":753,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":4067}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":405012,"byte_end":405020,"line_start":761,"line_end":761,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4071},{"krate":0,"index":4072}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":405240,"byte_end":405248,"line_start":770,"line_end":770,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4076}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":405405,"byte_end":405413,"line_start":777,"line_end":777,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4081},{"krate":0,"index":4082}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":405658,"byte_end":405666,"line_start":786,"line_end":786,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":4086}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":405834,"byte_end":405842,"line_start":794,"line_end":794,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4090}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":405999,"byte_end":406007,"line_start":802,"line_end":802,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4094}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":406162,"byte_end":406170,"line_start":810,"line_end":810,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4098}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":406354,"byte_end":406362,"line_start":818,"line_end":818,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4102},{"krate":0,"index":4103}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":406685,"byte_end":406693,"line_start":830,"line_end":830,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4108}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":406794,"byte_end":406802,"line_start":836,"line_end":836,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4114}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":406905,"byte_end":406913,"line_start":842,"line_end":842,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4119}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":407014,"byte_end":407022,"line_start":848,"line_end":848,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4123}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":407142,"byte_end":407150,"line_start":854,"line_end":854,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4127}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":407646,"byte_end":407654,"line_start":875,"line_end":875,"column_start":27,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":407693,"byte_end":407701,"line_start":877,"line_end":877,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4141}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":408647,"byte_end":408655,"line_start":920,"line_end":920,"column_start":23,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":408702,"byte_end":408710,"line_start":922,"line_end":922,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4148}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":408863,"byte_end":408871,"line_start":928,"line_end":928,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4152}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":409042,"byte_end":409050,"line_start":936,"line_end":936,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4157}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":409252,"byte_end":409260,"line_start":944,"line_end":944,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":4161}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":409501,"byte_end":409509,"line_start":954,"line_end":954,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4165}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":409647,"byte_end":409655,"line_start":960,"line_end":960,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4169},{"krate":0,"index":4170},{"krate":0,"index":4171},{"krate":0,"index":4172},{"krate":0,"index":4173},{"krate":0,"index":4174},{"krate":0,"index":4175},{"krate":0,"index":4176}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":411861,"byte_end":411869,"line_start":1053,"line_end":1053,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4180},{"krate":0,"index":4181},{"krate":0,"index":4182},{"krate":0,"index":4183},{"krate":0,"index":4184},{"krate":0,"index":4185},{"krate":0,"index":4186},{"krate":0,"index":4188},{"krate":0,"index":4190},{"krate":0,"index":4191},{"krate":0,"index":4192},{"krate":0,"index":4193},{"krate":0,"index":4195},{"krate":0,"index":4196},{"krate":0,"index":4197},{"krate":0,"index":4198},{"krate":0,"index":4199}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":415992,"byte_end":416000,"line_start":1217,"line_end":1217,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4203},{"krate":0,"index":4204}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":416587,"byte_end":416595,"line_start":1239,"line_end":1239,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4208},{"krate":0,"index":4209},{"krate":0,"index":4210},{"krate":0,"index":4211},{"krate":0,"index":4212},{"krate":0,"index":4213},{"krate":0,"index":4214},{"krate":0,"index":4215}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":418926,"byte_end":418934,"line_start":1324,"line_end":1324,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4219},{"krate":0,"index":4220}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":420088,"byte_end":420096,"line_start":1359,"line_end":1359,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4224},{"krate":0,"index":4225},{"krate":0,"index":4226},{"krate":0,"index":4227},{"krate":0,"index":4228}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":421602,"byte_end":421610,"line_start":1413,"line_end":1413,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4232},{"krate":0,"index":4233}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":422228,"byte_end":422236,"line_start":1435,"line_end":1435,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4237},{"krate":0,"index":4239},{"krate":0,"index":4241},{"krate":0,"index":4242},{"krate":0,"index":4243},{"krate":0,"index":4244},{"krate":0,"index":4245},{"krate":0,"index":4246}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":425165,"byte_end":425173,"line_start":1517,"line_end":1517,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4250},{"krate":0,"index":4251}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":425347,"byte_end":425355,"line_start":1526,"line_end":1526,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4255},{"krate":0,"index":4256}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":425596,"byte_end":425604,"line_start":1535,"line_end":1535,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4261},{"krate":0,"index":4262}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":425838,"byte_end":425846,"line_start":1544,"line_end":1544,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4266}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":426033,"byte_end":426041,"line_start":1550,"line_end":1550,"column_start":74,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":4272}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":426211,"byte_end":426219,"line_start":1556,"line_end":1556,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4277}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":426349,"byte_end":426357,"line_start":1563,"line_end":1563,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4281},{"krate":0,"index":4282}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":426615,"byte_end":426623,"line_start":1572,"line_end":1572,"column_start":69,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":4286}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":426763,"byte_end":426771,"line_start":1579,"line_end":1579,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4290},{"krate":0,"index":4291}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":427054,"byte_end":427062,"line_start":1592,"line_end":1592,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4295}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":427219,"byte_end":427227,"line_start":1599,"line_end":1599,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4300},{"krate":0,"index":4301}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":427537,"byte_end":427545,"line_start":1612,"line_end":1612,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":4305}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":427746,"byte_end":427754,"line_start":1621,"line_end":1621,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4309},{"krate":0,"index":4310}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":428037,"byte_end":428045,"line_start":1634,"line_end":1634,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":4314}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":428202,"byte_end":428210,"line_start":1641,"line_end":1641,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4319},{"krate":0,"index":4320}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":428520,"byte_end":428528,"line_start":1654,"line_end":1654,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":4324}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":428723,"byte_end":428731,"line_start":1663,"line_end":1663,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4328}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":428888,"byte_end":428896,"line_start":1671,"line_end":1671,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4332}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":429051,"byte_end":429059,"line_start":1679,"line_end":1679,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4336}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":429243,"byte_end":429251,"line_start":1687,"line_end":1687,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4340},{"krate":0,"index":4341}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":429708,"byte_end":429716,"line_start":1705,"line_end":1705,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4346}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":429825,"byte_end":429833,"line_start":1711,"line_end":1711,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4352}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":429945,"byte_end":429953,"line_start":1717,"line_end":1717,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4357}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":430068,"byte_end":430076,"line_start":1723,"line_end":1723,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4361}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":430570,"byte_end":430582,"line_start":1744,"line_end":1744,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4363},{"krate":0,"index":4364},{"krate":0,"index":4365},{"krate":0,"index":4366},{"krate":0,"index":4367},{"krate":0,"index":4368},{"krate":0,"index":4369},{"krate":0,"index":4372},{"krate":0,"index":4375}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Inherent","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":433014,"byte_end":433026,"line_start":1821,"line_end":1821,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4379},{"krate":0,"index":4380},{"krate":0,"index":4381},{"krate":0,"index":4382},{"krate":0,"index":4383},{"krate":0,"index":4384},{"krate":0,"index":4385},{"krate":0,"index":4388},{"krate":0,"index":4391},{"krate":0,"index":4394},{"krate":0,"index":4395},{"krate":0,"index":4396}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2692,"byte_end":2700,"line_start":67,"line_end":67,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":274}},{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2710,"byte_end":2719,"line_start":68,"line_end":68,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":281}},{"kind":"Mod","span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/lib.rs","byte_start":2776,"byte_end":2779,"line_start":73,"line_end":73,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1075}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":6607,"byte_end":6612,"line_start":27,"line_end":27,"column_start":9,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":4449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":6786,"byte_end":6791,"line_start":39,"line_end":39,"column_start":9,"column_end":14},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":4449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":7059,"byte_end":7064,"line_start":56,"line_end":56,"column_start":9,"column_end":14},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":4449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":7603,"byte_end":7608,"line_start":76,"line_end":76,"column_start":9,"column_end":14},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":4449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":8293,"byte_end":8298,"line_start":103,"line_end":103,"column_start":9,"column_end":14},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":4449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":8449,"byte_end":8454,"line_start":113,"line_end":113,"column_start":9,"column_end":14},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":4449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":8558,"byte_end":8563,"line_start":122,"line_end":122,"column_start":9,"column_end":14},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":4449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":9003,"byte_end":9008,"line_start":147,"line_end":147,"column_start":9,"column_end":14},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":4449},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":9723,"byte_end":9728,"line_start":177,"line_end":177,"column_start":37,"column_end":42},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":4449},"to":{"krate":1,"index":2892}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":9909,"byte_end":9914,"line_start":184,"line_end":184,"column_start":51,"column_end":56},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":4449},"to":{"krate":1,"index":2892}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":10074,"byte_end":10079,"line_start":191,"line_end":191,"column_start":29,"column_end":34},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":4449},"to":{"krate":1,"index":7045}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":10244,"byte_end":10249,"line_start":197,"line_end":197,"column_start":55,"column_end":60},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":4449},"to":{"krate":1,"index":7045}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":10400,"byte_end":10405,"line_start":203,"line_end":203,"column_start":37,"column_end":42},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":4449},"to":{"krate":1,"index":2923}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":10553,"byte_end":10558,"line_start":209,"line_end":209,"column_start":47,"column_end":52},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":4449},"to":{"krate":1,"index":2897}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":10751,"byte_end":10756,"line_start":216,"line_end":216,"column_start":37,"column_end":42},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":4449},"to":{"krate":1,"index":2927}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":10904,"byte_end":10909,"line_start":222,"line_end":222,"column_start":47,"column_end":52},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":4449},"to":{"krate":1,"index":2907}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":11076,"byte_end":11081,"line_start":230,"line_end":230,"column_start":40,"column_end":45},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":4449},"to":{"krate":1,"index":2907}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":11265,"byte_end":11270,"line_start":238,"line_end":238,"column_start":40,"column_end":45},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":4449},"to":{"krate":1,"index":2935}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":11398,"byte_end":11403,"line_start":244,"line_end":244,"column_start":40,"column_end":45},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":4449},"to":{"krate":1,"index":2902}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":11587,"byte_end":11592,"line_start":252,"line_end":252,"column_start":40,"column_end":45},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":4449},"to":{"krate":1,"index":2931}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":11714,"byte_end":11719,"line_start":258,"line_end":258,"column_start":34,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":4449},"to":{"krate":1,"index":2919}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/angle.rs","byte_start":11860,"byte_end":11865,"line_start":265,"line_end":265,"column_start":38,"column_end":43},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":4449},"to":{"krate":0,"index":275}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":19517,"byte_end":19522,"line_start":70,"line_end":70,"column_start":27,"column_end":32},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":362},"to":{"krate":1,"index":9035}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":19661,"byte_end":19666,"line_start":77,"line_end":77,"column_start":27,"column_end":32},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":362},"to":{"krate":1,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":19705,"byte_end":19710,"line_start":79,"line_end":79,"column_start":29,"column_end":34},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":362},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":19848,"byte_end":19853,"line_start":85,"line_end":85,"column_start":37,"column_end":42},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":362},"to":{"krate":1,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":19993,"byte_end":19998,"line_start":91,"line_end":91,"column_start":23,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":362},"to":{"krate":1,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":20047,"byte_end":20052,"line_start":93,"line_end":93,"column_start":39,"column_end":44},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":362},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":20253,"byte_end":20258,"line_start":102,"line_end":102,"column_start":12,"column_end":17},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":20420,"byte_end":20425,"line_start":110,"line_end":110,"column_start":12,"column_end":17},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":22137,"byte_end":22142,"line_start":159,"line_end":159,"column_start":12,"column_end":17},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":23584,"byte_end":23589,"line_start":207,"line_end":207,"column_start":12,"column_end":17},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":23874,"byte_end":23879,"line_start":221,"line_end":221,"column_start":12,"column_end":17},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":24361,"byte_end":24366,"line_start":249,"line_end":249,"column_start":12,"column_end":17},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":25581,"byte_end":25586,"line_start":285,"line_end":285,"column_start":12,"column_end":17},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":26842,"byte_end":26847,"line_start":334,"line_end":334,"column_start":12,"column_end":17},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":27160,"byte_end":27165,"line_start":345,"line_end":345,"column_start":12,"column_end":17},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":27386,"byte_end":27391,"line_start":355,"line_end":355,"column_start":12,"column_end":17},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":27590,"byte_end":27595,"line_start":366,"line_end":366,"column_start":12,"column_end":17},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":27795,"byte_end":27800,"line_start":376,"line_end":376,"column_start":35,"column_end":40},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":362},"to":{"krate":1,"index":2902}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":28018,"byte_end":28023,"line_start":385,"line_end":385,"column_start":47,"column_end":52},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":362},"to":{"krate":1,"index":2931}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":28166,"byte_end":28171,"line_start":392,"line_end":392,"column_start":35,"column_end":40},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":362},"to":{"krate":1,"index":2907}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":28389,"byte_end":28394,"line_start":401,"line_end":401,"column_start":47,"column_end":52},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":362},"to":{"krate":1,"index":2935}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":28557,"byte_end":28562,"line_start":408,"line_end":408,"column_start":55,"column_end":60},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":362},"to":{"krate":1,"index":2902}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":28810,"byte_end":28815,"line_start":417,"line_end":417,"column_start":60,"column_end":65},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":362},"to":{"krate":1,"index":2931}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":29009,"byte_end":29014,"line_start":425,"line_end":425,"column_start":55,"column_end":60},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":362},"to":{"krate":1,"index":2907}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":29262,"byte_end":29267,"line_start":434,"line_end":434,"column_start":60,"column_end":65},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":362},"to":{"krate":1,"index":2935}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":29418,"byte_end":29423,"line_start":442,"line_end":442,"column_start":12,"column_end":17},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":30305,"byte_end":30310,"line_start":476,"line_end":476,"column_start":28,"column_end":33},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":33149,"byte_end":33154,"line_start":554,"line_end":554,"column_start":12,"column_end":17},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":33829,"byte_end":33834,"line_start":573,"line_end":573,"column_start":12,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box2d.rs","byte_start":34496,"byte_end":34501,"line_start":596,"line_end":596,"column_start":35,"column_end":40},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":362},"to":{"krate":1,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":42897,"byte_end":42902,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":587},"to":{"krate":1,"index":9035}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":43041,"byte_end":43046,"line_start":47,"line_end":47,"column_start":27,"column_end":32},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":587},"to":{"krate":1,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":43085,"byte_end":43090,"line_start":49,"line_end":49,"column_start":29,"column_end":34},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":587},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":43228,"byte_end":43233,"line_start":55,"line_end":55,"column_start":37,"column_end":42},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":587},"to":{"krate":1,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":43373,"byte_end":43378,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":587},"to":{"krate":1,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":43427,"byte_end":43432,"line_start":63,"line_end":63,"column_start":39,"column_end":44},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":587},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":43633,"byte_end":43638,"line_start":72,"line_end":72,"column_start":12,"column_end":17},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":43800,"byte_end":43805,"line_start":80,"line_end":80,"column_start":12,"column_end":17},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":45831,"byte_end":45836,"line_start":137,"line_end":137,"column_start":12,"column_end":17},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":47282,"byte_end":47287,"line_start":195,"line_end":195,"column_start":12,"column_end":17},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":47590,"byte_end":47595,"line_start":210,"line_end":210,"column_start":12,"column_end":17},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":48114,"byte_end":48119,"line_start":239,"line_end":239,"column_start":12,"column_end":17},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":48585,"byte_end":48590,"line_start":254,"line_end":254,"column_start":12,"column_end":17},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":50031,"byte_end":50036,"line_start":309,"line_end":309,"column_start":12,"column_end":17},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":50353,"byte_end":50358,"line_start":320,"line_end":320,"column_start":12,"column_end":17},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":50579,"byte_end":50584,"line_start":330,"line_end":330,"column_start":12,"column_end":17},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":51154,"byte_end":51159,"line_start":359,"line_end":359,"column_start":12,"column_end":17},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":51359,"byte_end":51364,"line_start":369,"line_end":369,"column_start":35,"column_end":40},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":587},"to":{"krate":1,"index":2902}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":51582,"byte_end":51587,"line_start":378,"line_end":378,"column_start":47,"column_end":52},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":587},"to":{"krate":1,"index":2931}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":51748,"byte_end":51753,"line_start":386,"line_end":386,"column_start":35,"column_end":40},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":587},"to":{"krate":1,"index":2907}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":51979,"byte_end":51984,"line_start":395,"line_end":395,"column_start":47,"column_end":52},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":587},"to":{"krate":1,"index":2935}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":52165,"byte_end":52170,"line_start":403,"line_end":403,"column_start":55,"column_end":60},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":587},"to":{"krate":1,"index":2902}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":52426,"byte_end":52431,"line_start":412,"line_end":412,"column_start":60,"column_end":65},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":587},"to":{"krate":1,"index":2931}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":52633,"byte_end":52638,"line_start":420,"line_end":420,"column_start":55,"column_end":60},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":587},"to":{"krate":1,"index":2907}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":52894,"byte_end":52899,"line_start":429,"line_end":429,"column_start":60,"column_end":65},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":587},"to":{"krate":1,"index":2935}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":53058,"byte_end":53063,"line_start":437,"line_end":437,"column_start":12,"column_end":17},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":54071,"byte_end":54076,"line_start":477,"line_end":477,"column_start":28,"column_end":33},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":56935,"byte_end":56940,"line_start":555,"line_end":555,"column_start":12,"column_end":17},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":57619,"byte_end":57624,"line_start":574,"line_end":574,"column_start":12,"column_end":17},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/box3d.rs","byte_start":58292,"byte_end":58297,"line_start":599,"line_end":599,"column_start":35,"column_end":40},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":587},"to":{"krate":1,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":68532,"byte_end":68549,"line_start":34,"line_end":34,"column_start":27,"column_end":44},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":791},"to":{"krate":1,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":68588,"byte_end":68605,"line_start":36,"line_end":36,"column_start":29,"column_end":46},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":791},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":69641,"byte_end":69658,"line_start":81,"line_end":81,"column_start":19,"column_end":36},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":791},"to":{"krate":1,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":69706,"byte_end":69723,"line_start":83,"line_end":83,"column_start":26,"column_end":43},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":791},"to":{"krate":1,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":69915,"byte_end":69932,"line_start":92,"line_end":92,"column_start":21,"column_end":38},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":791},"to":{"krate":1,"index":9035}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":70131,"byte_end":70148,"line_start":104,"line_end":104,"column_start":12,"column_end":29},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":791},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":70474,"byte_end":70491,"line_start":118,"line_end":118,"column_start":59,"column_end":76},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":791},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":71296,"byte_end":71313,"line_start":148,"line_end":148,"column_start":43,"column_end":60},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":791},"to":{"krate":1,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":71491,"byte_end":71508,"line_start":155,"line_end":155,"column_start":43,"column_end":60},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":791},"to":{"krate":1,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":71685,"byte_end":71702,"line_start":162,"line_end":162,"column_start":48,"column_end":65},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":791},"to":{"krate":1,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":71876,"byte_end":71893,"line_start":169,"line_end":169,"column_start":41,"column_end":58},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":791},"to":{"krate":1,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/homogen.rs","byte_start":72059,"byte_end":72076,"line_start":176,"line_end":176,"column_start":39,"column_end":56},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":791},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":74816,"byte_end":74822,"line_start":44,"line_end":44,"column_start":29,"column_end":35},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":922},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":74940,"byte_end":74946,"line_start":50,"line_end":50,"column_start":27,"column_end":33},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":922},"to":{"krate":1,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":75514,"byte_end":75520,"line_start":78,"line_end":78,"column_start":12,"column_end":18},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":75688,"byte_end":75694,"line_start":86,"line_end":86,"column_start":19,"column_end":25},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":76763,"byte_end":76769,"line_start":124,"line_end":124,"column_start":24,"column_end":30},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":77116,"byte_end":77122,"line_start":138,"line_end":138,"column_start":29,"column_end":35},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":922},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":77574,"byte_end":77580,"line_start":151,"line_end":151,"column_start":39,"column_end":45},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":922},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":77711,"byte_end":77717,"line_start":157,"line_end":157,"column_start":33,"column_end":39},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":922},"to":{"krate":1,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":77842,"byte_end":77848,"line_start":164,"line_end":164,"column_start":27,"column_end":33},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":922},"to":{"krate":1,"index":9035}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":77976,"byte_end":77982,"line_start":171,"line_end":171,"column_start":25,"column_end":31},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":922},"to":{"krate":1,"index":2892}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":78185,"byte_end":78191,"line_start":180,"line_end":180,"column_start":39,"column_end":45},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":922},"to":{"krate":1,"index":2892}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":78410,"byte_end":78416,"line_start":189,"line_end":189,"column_start":44,"column_end":50},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":922},"to":{"krate":1,"index":7045}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":78624,"byte_end":78630,"line_start":196,"line_end":196,"column_start":74,"column_end":80},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":922},"to":{"krate":1,"index":7045}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":78804,"byte_end":78810,"line_start":203,"line_end":203,"column_start":37,"column_end":43},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":922},"to":{"krate":1,"index":2923}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":78942,"byte_end":78948,"line_start":210,"line_end":210,"column_start":25,"column_end":31},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":922},"to":{"krate":1,"index":2897}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":79157,"byte_end":79163,"line_start":219,"line_end":219,"column_start":37,"column_end":43},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":922},"to":{"krate":1,"index":2927}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":79341,"byte_end":79347,"line_start":226,"line_end":226,"column_start":39,"column_end":45},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":922},"to":{"krate":4,"index":723}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":79644,"byte_end":79650,"line_start":237,"line_end":237,"column_start":48,"column_end":54},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":922},"to":{"krate":1,"index":2907}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":79872,"byte_end":79878,"line_start":247,"line_end":247,"column_start":28,"column_end":34},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":922},"to":{"krate":1,"index":2902}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":80107,"byte_end":80113,"line_start":257,"line_end":257,"column_start":56,"column_end":62},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":922},"to":{"krate":1,"index":2931}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":80262,"byte_end":80268,"line_start":265,"line_end":265,"column_start":28,"column_end":34},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":922},"to":{"krate":1,"index":2907}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":80497,"byte_end":80503,"line_start":275,"line_end":275,"column_start":56,"column_end":62},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":922},"to":{"krate":1,"index":2935}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":80681,"byte_end":80687,"line_start":283,"line_end":283,"column_start":52,"column_end":58},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":922},"to":{"krate":1,"index":2902}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":80939,"byte_end":80945,"line_start":293,"line_end":293,"column_start":52,"column_end":58},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":922},"to":{"krate":1,"index":2907}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":81157,"byte_end":81163,"line_start":303,"line_end":303,"column_start":25,"column_end":31},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":922},"to":{"krate":1,"index":2919}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":81336,"byte_end":81342,"line_start":312,"line_end":312,"column_start":37,"column_end":43},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":922},"to":{"krate":1,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":81467,"byte_end":81473,"line_start":318,"line_end":318,"column_start":39,"column_end":45},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":922},"to":{"krate":1,"index":2523}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":81612,"byte_end":81618,"line_start":324,"line_end":324,"column_start":23,"column_end":29},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":922},"to":{"krate":1,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":81653,"byte_end":81659,"line_start":326,"line_end":326,"column_start":25,"column_end":31},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":922},"to":{"krate":1,"index":2512}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":81778,"byte_end":81784,"line_start":332,"line_end":332,"column_start":27,"column_end":33},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":922},"to":{"krate":0,"index":1079}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/length.rs","byte_start":81914,"byte_end":81920,"line_start":339,"line_end":339,"column_start":41,"column_end":47},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":922},"to":{"krate":0,"index":275}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","byte_start":90683,"byte_end":90684,"line_start":32,"line_end":32,"column_start":36,"column_end":37},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1082},"to":{"krate":0,"index":1079}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","byte_start":90824,"byte_end":90825,"line_start":42,"line_end":42,"column_start":34,"column_end":35},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1087},"to":{"krate":0,"index":1084}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","byte_start":90966,"byte_end":90970,"line_start":49,"line_end":49,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":1,"index":2835},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","byte_start":91241,"byte_end":91245,"line_start":57,"line_end":57,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":1,"index":2835},"to":{"krate":0,"index":1091}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/num.rs","byte_start":91551,"byte_end":91555,"line_start":65,"line_end":65,"column_start":17,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":2835},"to":{"krate":0,"index":1093}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":94039,"byte_end":94046,"line_start":38,"line_end":38,"column_start":27,"column_end":34},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":94085,"byte_end":94092,"line_start":40,"line_end":40,"column_start":29,"column_end":36},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":94972,"byte_end":94979,"line_start":81,"line_end":81,"column_start":19,"column_end":26},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":95027,"byte_end":95034,"line_start":83,"line_end":83,"column_start":26,"column_end":33},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":95184,"byte_end":95191,"line_start":92,"line_end":92,"column_start":21,"column_end":28},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":9035}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":95405,"byte_end":95412,"line_start":104,"line_end":104,"column_start":39,"column_end":46},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":95586,"byte_end":95593,"line_start":110,"line_end":110,"column_start":33,"column_end":40},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":95710,"byte_end":95717,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":96866,"byte_end":96873,"line_start":171,"line_end":171,"column_start":18,"column_end":25},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":101935,"byte_end":101942,"line_start":371,"line_end":371,"column_start":24,"column_end":31},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":102543,"byte_end":102550,"line_start":395,"line_end":395,"column_start":28,"column_end":35},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":1189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":105384,"byte_end":105391,"line_start":473,"line_end":473,"column_start":39,"column_end":46},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":1189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":105580,"byte_end":105587,"line_start":480,"line_end":480,"column_start":40,"column_end":47},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":105724,"byte_end":105731,"line_start":487,"line_end":487,"column_start":25,"column_end":32},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":2919}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":105911,"byte_end":105918,"line_start":496,"line_end":496,"column_start":39,"column_end":46},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":2892}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":106158,"byte_end":106165,"line_start":505,"line_end":505,"column_start":51,"column_end":58},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":2923}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":106352,"byte_end":106359,"line_start":513,"line_end":513,"column_start":41,"column_end":48},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":2892}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":106610,"byte_end":106617,"line_start":522,"line_end":522,"column_start":69,"column_end":76},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":2923}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":106757,"byte_end":106764,"line_start":529,"line_end":529,"column_start":25,"column_end":32},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":2897}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":106974,"byte_end":106981,"line_start":538,"line_end":538,"column_start":39,"column_end":46},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":2897}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":107221,"byte_end":107228,"line_start":547,"line_end":547,"column_start":51,"column_end":58},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":2927}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":107415,"byte_end":107422,"line_start":555,"line_end":555,"column_start":41,"column_end":48},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":2897}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":107673,"byte_end":107680,"line_start":564,"line_end":564,"column_start":69,"column_end":76},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":2927}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":107830,"byte_end":107837,"line_start":571,"line_end":571,"column_start":35,"column_end":42},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":2902}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":108058,"byte_end":108065,"line_start":580,"line_end":580,"column_start":56,"column_end":63},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":2931}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":108222,"byte_end":108229,"line_start":587,"line_end":587,"column_start":55,"column_end":62},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":2902}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":108475,"byte_end":108482,"line_start":596,"line_end":596,"column_start":60,"column_end":67},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":2931}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":108656,"byte_end":108663,"line_start":604,"line_end":604,"column_start":35,"column_end":42},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":2907}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":108884,"byte_end":108891,"line_start":613,"line_end":613,"column_start":56,"column_end":63},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":2935}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":109048,"byte_end":109055,"line_start":620,"line_end":620,"column_start":55,"column_end":62},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":2907}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":109301,"byte_end":109308,"line_start":629,"line_end":629,"column_start":60,"column_end":67},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":2935}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":109474,"byte_end":109481,"line_start":637,"line_end":637,"column_start":27,"column_end":34},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":1189},"to":{"krate":0,"index":1079}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":109588,"byte_end":109595,"line_start":644,"line_end":644,"column_start":29,"column_end":36},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":1189},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":109749,"byte_end":109756,"line_start":652,"line_end":652,"column_start":27,"column_end":34},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":1189},"to":{"krate":0,"index":1093}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":109908,"byte_end":109915,"line_start":660,"line_end":660,"column_start":29,"column_end":36},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1189},"to":{"krate":0,"index":1091}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":110095,"byte_end":110102,"line_start":668,"line_end":668,"column_start":53,"column_end":60},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1189},"to":{"krate":0,"index":275}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":110427,"byte_end":110434,"line_start":680,"line_end":680,"column_start":29,"column_end":36},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":110535,"byte_end":110542,"line_start":686,"line_end":686,"column_start":29,"column_end":36},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":110647,"byte_end":110654,"line_start":692,"line_end":692,"column_start":29,"column_end":36},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":110755,"byte_end":110762,"line_start":698,"line_end":698,"column_start":29,"column_end":36},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":1189},"to":{"krate":1,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":111083,"byte_end":111090,"line_start":716,"line_end":716,"column_start":27,"column_end":34},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":111129,"byte_end":111136,"line_start":718,"line_end":718,"column_start":29,"column_end":36},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":112074,"byte_end":112081,"line_start":761,"line_end":761,"column_start":19,"column_end":26},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":112129,"byte_end":112136,"line_start":763,"line_end":763,"column_start":26,"column_end":33},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":112307,"byte_end":112314,"line_start":772,"line_end":772,"column_start":21,"column_end":28},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":9035}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":112516,"byte_end":112523,"line_start":783,"line_end":783,"column_start":39,"column_end":46},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":112764,"byte_end":112771,"line_start":793,"line_end":793,"column_start":33,"column_end":40},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":112908,"byte_end":112915,"line_start":799,"line_end":799,"column_start":12,"column_end":19},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":1400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":114152,"byte_end":114159,"line_start":856,"line_end":856,"column_start":18,"column_end":25},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":1400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":119750,"byte_end":119757,"line_start":1071,"line_end":1071,"column_start":24,"column_end":31},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":1400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":120496,"byte_end":120503,"line_start":1103,"line_end":1103,"column_start":28,"column_end":35},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":1400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":123423,"byte_end":123430,"line_start":1185,"line_end":1185,"column_start":39,"column_end":46},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":1400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":123687,"byte_end":123694,"line_start":1196,"line_end":1196,"column_start":40,"column_end":47},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":1400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":123831,"byte_end":123838,"line_start":1203,"line_end":1203,"column_start":25,"column_end":32},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":2919}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":124027,"byte_end":124034,"line_start":1212,"line_end":1212,"column_start":39,"column_end":46},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":2892}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":124343,"byte_end":124350,"line_start":1225,"line_end":1225,"column_start":51,"column_end":58},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":2923}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":124568,"byte_end":124575,"line_start":1234,"line_end":1234,"column_start":41,"column_end":48},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":2892}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":124844,"byte_end":124851,"line_start":1243,"line_end":1243,"column_start":69,"column_end":76},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":2923}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":124991,"byte_end":124998,"line_start":1250,"line_end":1250,"column_start":25,"column_end":32},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":2897}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":125226,"byte_end":125233,"line_start":1259,"line_end":1259,"column_start":39,"column_end":46},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":2897}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":125542,"byte_end":125549,"line_start":1272,"line_end":1272,"column_start":51,"column_end":58},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":2927}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":125767,"byte_end":125774,"line_start":1281,"line_end":1281,"column_start":41,"column_end":48},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":2897}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":126043,"byte_end":126050,"line_start":1290,"line_end":1290,"column_start":69,"column_end":76},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":2927}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":126200,"byte_end":126207,"line_start":1297,"line_end":1297,"column_start":35,"column_end":42},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":2902}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":126482,"byte_end":126489,"line_start":1310,"line_end":1310,"column_start":47,"column_end":54},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":2931}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":126691,"byte_end":126698,"line_start":1319,"line_end":1319,"column_start":55,"column_end":62},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":2902}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":127009,"byte_end":127016,"line_start":1332,"line_end":1332,"column_start":60,"column_end":67},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":2931}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":127162,"byte_end":127169,"line_start":1339,"line_end":1339,"column_start":35,"column_end":42},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":2907}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":127444,"byte_end":127451,"line_start":1352,"line_end":1352,"column_start":47,"column_end":54},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":2935}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":127653,"byte_end":127660,"line_start":1361,"line_end":1361,"column_start":55,"column_end":62},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":2907}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":127971,"byte_end":127978,"line_start":1374,"line_end":1374,"column_start":60,"column_end":67},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":2935}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":128116,"byte_end":128123,"line_start":1381,"line_end":1381,"column_start":27,"column_end":34},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":1400},"to":{"krate":0,"index":1079}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":128230,"byte_end":128237,"line_start":1388,"line_end":1388,"column_start":29,"column_end":36},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":1400},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":128391,"byte_end":128398,"line_start":1396,"line_end":1396,"column_start":27,"column_end":34},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":1400},"to":{"krate":0,"index":1093}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":128550,"byte_end":128557,"line_start":1404,"line_end":1404,"column_start":29,"column_end":36},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":1400},"to":{"krate":0,"index":1091}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":128737,"byte_end":128744,"line_start":1412,"line_end":1412,"column_start":53,"column_end":60},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":1400},"to":{"krate":0,"index":275}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":129203,"byte_end":129210,"line_start":1430,"line_end":1430,"column_start":29,"column_end":36},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":129319,"byte_end":129326,"line_start":1436,"line_end":1436,"column_start":29,"column_end":36},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":129440,"byte_end":129447,"line_start":1442,"line_end":1442,"column_start":32,"column_end":39},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/point.rs","byte_start":129562,"byte_end":129569,"line_start":1448,"line_end":1448,"column_start":32,"column_end":39},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":1400},"to":{"krate":1,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":144907,"byte_end":144911,"line_start":57,"line_end":57,"column_start":27,"column_end":31},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":1686},"to":{"krate":1,"index":9035}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":145054,"byte_end":145058,"line_start":64,"line_end":64,"column_start":27,"column_end":31},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":1686},"to":{"krate":1,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":145097,"byte_end":145101,"line_start":66,"line_end":66,"column_start":29,"column_end":33},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":1686},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":145243,"byte_end":145247,"line_start":72,"line_end":72,"column_start":37,"column_end":41},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":1686},"to":{"krate":1,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":145395,"byte_end":145399,"line_start":78,"line_end":78,"column_start":23,"column_end":27},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":1686},"to":{"krate":1,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":145448,"byte_end":145452,"line_start":80,"line_end":80,"column_start":39,"column_end":43},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":1686},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":145725,"byte_end":145729,"line_start":90,"line_end":90,"column_start":33,"column_end":37},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":1686},"to":{"krate":1,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":145843,"byte_end":145847,"line_start":96,"line_end":96,"column_start":12,"column_end":16},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":1686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":146015,"byte_end":146019,"line_start":104,"line_end":104,"column_start":12,"column_end":16},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":1686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":146420,"byte_end":146424,"line_start":124,"line_end":124,"column_start":12,"column_end":16},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":1686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":147692,"byte_end":147696,"line_start":194,"line_end":194,"column_start":12,"column_end":16},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":1686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":148215,"byte_end":148219,"line_start":212,"line_end":212,"column_start":12,"column_end":16},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":1686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":148575,"byte_end":148579,"line_start":228,"line_end":228,"column_start":12,"column_end":16},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":1686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":148999,"byte_end":149003,"line_start":245,"line_end":245,"column_start":12,"column_end":16},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":1686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":149573,"byte_end":149577,"line_start":262,"line_end":262,"column_start":12,"column_end":16},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":1686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":150424,"byte_end":150428,"line_start":285,"line_end":285,"column_start":12,"column_end":16},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":1686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":151046,"byte_end":151050,"line_start":304,"line_end":304,"column_start":12,"column_end":16},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":1686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":151863,"byte_end":151867,"line_start":326,"line_end":326,"column_start":12,"column_end":16},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":1686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":152235,"byte_end":152239,"line_start":340,"line_end":340,"column_start":12,"column_end":16},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":1686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":152462,"byte_end":152466,"line_start":350,"line_end":350,"column_start":12,"column_end":16},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":1686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":152850,"byte_end":152854,"line_start":367,"line_end":367,"column_start":12,"column_end":16},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":1686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":153192,"byte_end":153196,"line_start":380,"line_end":380,"column_start":39,"column_end":43},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":1686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":153320,"byte_end":153324,"line_start":387,"line_end":387,"column_start":38,"column_end":42},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":1686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":153459,"byte_end":153463,"line_start":394,"line_end":394,"column_start":38,"column_end":42},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":1686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":153663,"byte_end":153667,"line_start":405,"line_end":405,"column_start":35,"column_end":39},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":1686},"to":{"krate":1,"index":2902}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":153887,"byte_end":153891,"line_start":414,"line_end":414,"column_start":47,"column_end":51},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":1686},"to":{"krate":1,"index":2931}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":154034,"byte_end":154038,"line_start":421,"line_end":421,"column_start":35,"column_end":39},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":1686},"to":{"krate":1,"index":2907}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":154266,"byte_end":154270,"line_start":430,"line_end":430,"column_start":47,"column_end":51},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":1686},"to":{"krate":1,"index":2935}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":154433,"byte_end":154437,"line_start":437,"line_end":437,"column_start":55,"column_end":59},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":1686},"to":{"krate":1,"index":2902}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":154695,"byte_end":154699,"line_start":446,"line_end":446,"column_start":60,"column_end":64},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":1686},"to":{"krate":1,"index":2931}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":154905,"byte_end":154909,"line_start":454,"line_end":454,"column_start":55,"column_end":59},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":1686},"to":{"krate":1,"index":2907}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":155167,"byte_end":155171,"line_start":463,"line_end":463,"column_start":60,"column_end":64},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":1686},"to":{"krate":1,"index":2935}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":155340,"byte_end":155344,"line_start":471,"line_end":471,"column_start":18,"column_end":22},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":1686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":155985,"byte_end":155989,"line_start":494,"line_end":494,"column_start":28,"column_end":32},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":1686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":159333,"byte_end":159337,"line_start":582,"line_end":582,"column_start":76,"column_end":80},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":1686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rect.rs","byte_start":161399,"byte_end":161403,"line_start":633,"line_end":633,"column_start":35,"column_end":39},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":1686},"to":{"krate":1,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":171926,"byte_end":171942,"line_start":28,"line_end":28,"column_start":19,"column_end":35},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":4547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":172255,"byte_end":172271,"line_start":39,"line_end":39,"column_start":25,"column_end":41},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":4547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":172553,"byte_end":172569,"line_start":48,"line_end":48,"column_start":40,"column_end":56},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":4547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":176955,"byte_end":176971,"line_start":187,"line_end":187,"column_start":9,"column_end":25},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":4547},"to":{"krate":1,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rigid.rs","byte_start":177147,"byte_end":177163,"line_start":194,"line_end":194,"column_start":67,"column_end":83},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":4547},"to":{"krate":1,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":181052,"byte_end":181062,"line_start":40,"line_end":40,"column_start":34,"column_end":44},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":2017},"to":{"krate":1,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":181115,"byte_end":181125,"line_start":42,"line_end":42,"column_start":36,"column_end":46},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":2017},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":181307,"byte_end":181317,"line_start":51,"line_end":51,"column_start":26,"column_end":36},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":2017},"to":{"krate":1,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":181379,"byte_end":181389,"line_start":53,"line_end":53,"column_start":33,"column_end":43},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":2017},"to":{"krate":1,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":181540,"byte_end":181550,"line_start":62,"line_end":62,"column_start":28,"column_end":38},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":2017},"to":{"krate":1,"index":9035}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":181695,"byte_end":181705,"line_start":71,"line_end":71,"column_start":19,"column_end":29},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":2017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":182256,"byte_end":182266,"line_start":96,"line_end":96,"column_start":25,"column_end":35},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":2017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":183911,"byte_end":183921,"line_start":159,"line_end":159,"column_start":19,"column_end":29},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":2017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":184126,"byte_end":184136,"line_start":169,"line_end":169,"column_start":26,"column_end":36},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":2017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":185535,"byte_end":185545,"line_start":209,"line_end":209,"column_start":19,"column_end":29},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":2017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":186965,"byte_end":186975,"line_start":251,"line_end":251,"column_start":34,"column_end":44},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":2083},"to":{"krate":1,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":187028,"byte_end":187038,"line_start":253,"line_end":253,"column_start":36,"column_end":46},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":2083},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":187305,"byte_end":187315,"line_start":265,"line_end":265,"column_start":26,"column_end":36},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":2083},"to":{"krate":1,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":187377,"byte_end":187387,"line_start":267,"line_end":267,"column_start":33,"column_end":43},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":2083},"to":{"krate":1,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":187593,"byte_end":187603,"line_start":276,"line_end":276,"column_start":28,"column_end":38},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":2083},"to":{"krate":1,"index":9035}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":187816,"byte_end":187826,"line_start":288,"line_end":288,"column_start":19,"column_end":29},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":2083},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":188697,"byte_end":188707,"line_start":319,"line_end":319,"column_start":19,"column_end":29},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":2083},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":191254,"byte_end":191264,"line_start":403,"line_end":403,"column_start":19,"column_end":29},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":2083},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":200902,"byte_end":200912,"line_start":706,"line_end":706,"column_start":46,"column_end":56},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":2083},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/rotation.rs","byte_start":201167,"byte_end":201177,"line_start":716,"line_end":716,"column_start":35,"column_end":45},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":2083},"to":{"krate":0,"index":275}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":211777,"byte_end":211782,"line_start":53,"line_end":53,"column_start":19,"column_end":24},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":2228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":216444,"byte_end":216449,"line_start":241,"line_end":241,"column_start":28,"column_end":33},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":2228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":218335,"byte_end":218340,"line_start":300,"line_end":300,"column_start":47,"column_end":52},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":2228},"to":{"krate":1,"index":2902}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":218563,"byte_end":218568,"line_start":310,"line_end":310,"column_start":32,"column_end":37},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":2228},"to":{"krate":1,"index":2892}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":218803,"byte_end":218808,"line_start":320,"line_end":320,"column_start":32,"column_end":37},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":2228},"to":{"krate":1,"index":2897}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":219166,"byte_end":219171,"line_start":332,"line_end":332,"column_start":44,"column_end":49},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":2228},"to":{"krate":1,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":219306,"byte_end":219311,"line_start":338,"line_end":338,"column_start":30,"column_end":35},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":2228},"to":{"krate":1,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":219374,"byte_end":219379,"line_start":340,"line_end":340,"column_start":46,"column_end":51},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":2228},"to":{"krate":1,"index":2523}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":219534,"byte_end":219539,"line_start":346,"line_end":346,"column_start":32,"column_end":37},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":2228},"to":{"krate":1,"index":2512}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":219674,"byte_end":219679,"line_start":352,"line_end":352,"column_start":36,"column_end":41},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":2228},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":219816,"byte_end":219821,"line_start":358,"line_end":358,"column_start":34,"column_end":39},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":2228},"to":{"krate":1,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":219884,"byte_end":219889,"line_start":360,"line_end":360,"column_start":46,"column_end":51},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":2228},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":220034,"byte_end":220039,"line_start":366,"line_end":366,"column_start":40,"column_end":45},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":2228},"to":{"krate":1,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":220156,"byte_end":220161,"line_start":372,"line_end":372,"column_start":34,"column_end":39},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":2228},"to":{"krate":1,"index":9035}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/scale.rs","byte_start":220291,"byte_end":220296,"line_start":378,"line_end":378,"column_start":32,"column_end":37},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":2228},"to":{"krate":0,"index":1084}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":222838,"byte_end":222851,"line_start":42,"line_end":42,"column_start":27,"column_end":40},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":2375},"to":{"krate":1,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":222890,"byte_end":222903,"line_start":44,"line_end":44,"column_start":29,"column_end":42},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":2375},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":223187,"byte_end":223200,"line_start":56,"line_end":56,"column_start":19,"column_end":32},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":2375},"to":{"krate":1,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":223248,"byte_end":223261,"line_start":58,"line_end":58,"column_start":26,"column_end":39},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":2375},"to":{"krate":1,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":223517,"byte_end":223530,"line_start":70,"line_end":70,"column_start":21,"column_end":34},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":2375},"to":{"krate":1,"index":9035}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":223770,"byte_end":223783,"line_start":82,"line_end":82,"column_start":39,"column_end":52},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":2375},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":224027,"byte_end":224040,"line_start":92,"line_end":92,"column_start":33,"column_end":46},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":2375},"to":{"krate":1,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":224316,"byte_end":224329,"line_start":104,"line_end":104,"column_start":12,"column_end":25},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":2375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":227407,"byte_end":227420,"line_start":211,"line_end":211,"column_start":20,"column_end":33},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":2375},"to":{"krate":1,"index":2892}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":227755,"byte_end":227768,"line_start":226,"line_end":226,"column_start":35,"column_end":48},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":2375},"to":{"krate":1,"index":2902}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":228103,"byte_end":228116,"line_start":240,"line_end":240,"column_start":47,"column_end":60},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":2375},"to":{"krate":1,"index":2931}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":228357,"byte_end":228370,"line_start":250,"line_end":250,"column_start":55,"column_end":68},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":2375},"to":{"krate":1,"index":2902}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":228743,"byte_end":228756,"line_start":264,"line_end":264,"column_start":60,"column_end":73},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":2375},"to":{"krate":1,"index":2931}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":228902,"byte_end":228915,"line_start":271,"line_end":271,"column_start":35,"column_end":48},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":2375},"to":{"krate":1,"index":2907}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":229250,"byte_end":229263,"line_start":285,"line_end":285,"column_start":47,"column_end":60},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":2375},"to":{"krate":1,"index":2935}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":229504,"byte_end":229517,"line_start":295,"line_end":295,"column_start":55,"column_end":68},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":2375},"to":{"krate":1,"index":2907}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/side_offsets.rs","byte_start":229890,"byte_end":229903,"line_start":309,"line_end":309,"column_start":60,"column_end":73},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":2375},"to":{"krate":1,"index":2935}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":234345,"byte_end":234351,"line_start":41,"line_end":41,"column_start":27,"column_end":33},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":2558},"to":{"krate":1,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":234390,"byte_end":234396,"line_start":43,"line_end":43,"column_start":29,"column_end":35},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":2558},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":235435,"byte_end":235441,"line_start":86,"line_end":86,"column_start":19,"column_end":25},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":2558},"to":{"krate":1,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":235489,"byte_end":235495,"line_start":88,"line_end":88,"column_start":26,"column_end":32},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":2558},"to":{"krate":1,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":235663,"byte_end":235669,"line_start":97,"line_end":97,"column_start":21,"column_end":27},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":2558},"to":{"krate":1,"index":9035}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":235856,"byte_end":235862,"line_start":107,"line_end":107,"column_start":39,"column_end":45},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":2558},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":236079,"byte_end":236085,"line_start":115,"line_end":115,"column_start":33,"column_end":39},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":2558},"to":{"krate":1,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":236201,"byte_end":236207,"line_start":121,"line_end":121,"column_start":12,"column_end":18},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":2558},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":237338,"byte_end":237344,"line_start":168,"line_end":168,"column_start":18,"column_end":24},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":2558},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":240711,"byte_end":240717,"line_start":291,"line_end":291,"column_start":28,"column_end":34},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":2558},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":243885,"byte_end":243891,"line_start":379,"line_end":379,"column_start":20,"column_end":26},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":2558},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":244484,"byte_end":244490,"line_start":395,"line_end":395,"column_start":24,"column_end":30},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":2558},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":246162,"byte_end":246168,"line_start":448,"line_end":448,"column_start":23,"column_end":29},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":2558},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":246727,"byte_end":246733,"line_start":466,"line_end":466,"column_start":29,"column_end":35},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":2558},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":246889,"byte_end":246895,"line_start":474,"line_end":474,"column_start":27,"column_end":33},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":2558},"to":{"krate":0,"index":1093}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":247049,"byte_end":247055,"line_start":482,"line_end":482,"column_start":29,"column_end":35},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":2558},"to":{"krate":0,"index":1091}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":247211,"byte_end":247217,"line_start":490,"line_end":490,"column_start":27,"column_end":33},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":2558},"to":{"krate":0,"index":1079}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":247345,"byte_end":247351,"line_start":497,"line_end":497,"column_start":25,"column_end":31},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":2558},"to":{"krate":1,"index":2919}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":247530,"byte_end":247536,"line_start":506,"line_end":506,"column_start":25,"column_end":31},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":2558},"to":{"krate":1,"index":2892}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":247784,"byte_end":247790,"line_start":515,"line_end":515,"column_start":54,"column_end":60},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":2558},"to":{"krate":1,"index":2892}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":247990,"byte_end":247996,"line_start":522,"line_end":522,"column_start":44,"column_end":50},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":2558},"to":{"krate":1,"index":7045}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":248183,"byte_end":248189,"line_start":528,"line_end":528,"column_start":74,"column_end":80},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":2558},"to":{"krate":1,"index":7045}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":248343,"byte_end":248349,"line_start":534,"line_end":534,"column_start":37,"column_end":43},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":2558},"to":{"krate":1,"index":2923}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":248521,"byte_end":248527,"line_start":542,"line_end":542,"column_start":25,"column_end":31},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":2558},"to":{"krate":1,"index":2897}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":248758,"byte_end":248764,"line_start":551,"line_end":551,"column_start":37,"column_end":43},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":2558},"to":{"krate":1,"index":2927}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":248946,"byte_end":248952,"line_start":559,"line_end":559,"column_start":35,"column_end":41},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":2558},"to":{"krate":1,"index":2902}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":249177,"byte_end":249183,"line_start":568,"line_end":568,"column_start":47,"column_end":53},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":2558},"to":{"krate":1,"index":2931}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":249369,"byte_end":249375,"line_start":576,"line_end":576,"column_start":55,"column_end":61},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":2558},"to":{"krate":1,"index":2902}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":249634,"byte_end":249640,"line_start":585,"line_end":585,"column_start":60,"column_end":66},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":2558},"to":{"krate":1,"index":2931}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":249786,"byte_end":249792,"line_start":592,"line_end":592,"column_start":35,"column_end":41},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":2558},"to":{"krate":1,"index":2907}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":250017,"byte_end":250023,"line_start":601,"line_end":601,"column_start":47,"column_end":53},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":2558},"to":{"krate":1,"index":2935}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":250209,"byte_end":250215,"line_start":609,"line_end":609,"column_start":55,"column_end":61},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":2558},"to":{"krate":1,"index":2907}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":250474,"byte_end":250480,"line_start":618,"line_end":618,"column_start":60,"column_end":66},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":2558},"to":{"krate":1,"index":2935}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":251238,"byte_end":251244,"line_start":653,"line_end":653,"column_start":37,"column_end":43},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":2558},"to":{"krate":1,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":251369,"byte_end":251375,"line_start":660,"line_end":660,"column_start":29,"column_end":35},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":2558},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":251499,"byte_end":251505,"line_start":667,"line_end":667,"column_start":29,"column_end":35},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":2558},"to":{"krate":1,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":251623,"byte_end":251629,"line_start":674,"line_end":674,"column_start":29,"column_end":35},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":2558},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":251753,"byte_end":251759,"line_start":681,"line_end":681,"column_start":29,"column_end":35},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":2558},"to":{"krate":1,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":258516,"byte_end":258522,"line_start":918,"line_end":918,"column_start":27,"column_end":33},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":2767},"to":{"krate":1,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":258561,"byte_end":258567,"line_start":920,"line_end":920,"column_start":29,"column_end":35},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":2767},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":259566,"byte_end":259572,"line_start":963,"line_end":963,"column_start":19,"column_end":25},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":2767},"to":{"krate":1,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":259620,"byte_end":259626,"line_start":965,"line_end":965,"column_start":26,"column_end":32},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":2767},"to":{"krate":1,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":259823,"byte_end":259829,"line_start":974,"line_end":974,"column_start":21,"column_end":27},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":2767},"to":{"krate":1,"index":9035}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":260044,"byte_end":260050,"line_start":985,"line_end":985,"column_start":39,"column_end":45},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":2767},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":260334,"byte_end":260340,"line_start":995,"line_end":995,"column_start":33,"column_end":39},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":2767},"to":{"krate":1,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":260476,"byte_end":260482,"line_start":1001,"line_end":1001,"column_start":12,"column_end":18},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":2767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":261711,"byte_end":261717,"line_start":1049,"line_end":1049,"column_start":18,"column_end":24},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":2767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":265305,"byte_end":265311,"line_start":1172,"line_end":1172,"column_start":28,"column_end":34},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":2767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":268211,"byte_end":268217,"line_start":1254,"line_end":1254,"column_start":20,"column_end":26},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":2767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":268855,"byte_end":268861,"line_start":1270,"line_end":1270,"column_start":24,"column_end":30},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":2767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":270683,"byte_end":270689,"line_start":1331,"line_end":1331,"column_start":23,"column_end":29},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":2767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":271332,"byte_end":271338,"line_start":1351,"line_end":1351,"column_start":29,"column_end":35},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":2767},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":271494,"byte_end":271500,"line_start":1359,"line_end":1359,"column_start":27,"column_end":33},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":2767},"to":{"krate":0,"index":1093}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":271654,"byte_end":271660,"line_start":1367,"line_end":1367,"column_start":29,"column_end":35},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":2767},"to":{"krate":0,"index":1091}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":271816,"byte_end":271822,"line_start":1375,"line_end":1375,"column_start":27,"column_end":33},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":2767},"to":{"krate":0,"index":1079}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":271964,"byte_end":271970,"line_start":1382,"line_end":1382,"column_start":25,"column_end":31},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":2767},"to":{"krate":1,"index":2919}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":272162,"byte_end":272168,"line_start":1391,"line_end":1391,"column_start":25,"column_end":31},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":2767},"to":{"krate":1,"index":2892}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":272489,"byte_end":272495,"line_start":1404,"line_end":1404,"column_start":54,"column_end":60},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":2767},"to":{"krate":1,"index":2892}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":272768,"byte_end":272774,"line_start":1415,"line_end":1415,"column_start":44,"column_end":50},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":2767},"to":{"krate":1,"index":7045}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":272961,"byte_end":272967,"line_start":1421,"line_end":1421,"column_start":74,"column_end":80},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":2767},"to":{"krate":1,"index":7045}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":273121,"byte_end":273127,"line_start":1427,"line_end":1427,"column_start":37,"column_end":43},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":2767},"to":{"krate":1,"index":2923}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":273334,"byte_end":273340,"line_start":1436,"line_end":1436,"column_start":25,"column_end":31},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":2767},"to":{"krate":1,"index":2897}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":273644,"byte_end":273650,"line_start":1449,"line_end":1449,"column_start":37,"column_end":43},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":2767},"to":{"krate":1,"index":2927}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":273867,"byte_end":273873,"line_start":1458,"line_end":1458,"column_start":35,"column_end":41},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":2767},"to":{"krate":1,"index":2902}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":274165,"byte_end":274171,"line_start":1471,"line_end":1471,"column_start":47,"column_end":53},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":2767},"to":{"krate":1,"index":2931}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":274386,"byte_end":274392,"line_start":1480,"line_end":1480,"column_start":55,"column_end":61},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":2767},"to":{"krate":1,"index":2902}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":274720,"byte_end":274726,"line_start":1493,"line_end":1493,"column_start":60,"column_end":66},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":2767},"to":{"krate":1,"index":2931}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":274872,"byte_end":274878,"line_start":1500,"line_end":1500,"column_start":35,"column_end":41},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":2767},"to":{"krate":1,"index":2907}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":275170,"byte_end":275176,"line_start":1513,"line_end":1513,"column_start":47,"column_end":53},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":2767},"to":{"krate":1,"index":2935}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":275391,"byte_end":275397,"line_start":1522,"line_end":1522,"column_start":55,"column_end":61},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":2767},"to":{"krate":1,"index":2907}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":275725,"byte_end":275731,"line_start":1535,"line_end":1535,"column_start":60,"column_end":66},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":2767},"to":{"krate":1,"index":2935}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":276308,"byte_end":276314,"line_start":1561,"line_end":1561,"column_start":37,"column_end":43},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":2767},"to":{"krate":1,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":276444,"byte_end":276450,"line_start":1568,"line_end":1568,"column_start":29,"column_end":35},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":2767},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":276586,"byte_end":276592,"line_start":1575,"line_end":1575,"column_start":29,"column_end":35},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":2767},"to":{"krate":1,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":276719,"byte_end":276725,"line_start":1582,"line_end":1582,"column_start":32,"column_end":38},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":2767},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/size.rs","byte_start":276867,"byte_end":276873,"line_start":1589,"line_end":1589,"column_start":32,"column_end":38},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":2767},"to":{"krate":1,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":286116,"byte_end":286127,"line_start":72,"line_end":72,"column_start":34,"column_end":45},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":3053},"to":{"krate":1,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":286180,"byte_end":286191,"line_start":74,"line_end":74,"column_start":36,"column_end":47},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":3053},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":286545,"byte_end":286556,"line_start":88,"line_end":88,"column_start":26,"column_end":37},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":3053},"to":{"krate":1,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":286618,"byte_end":286629,"line_start":90,"line_end":90,"column_start":33,"column_end":44},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":3053},"to":{"krate":1,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":286960,"byte_end":286971,"line_start":103,"line_end":103,"column_start":28,"column_end":39},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":3053},"to":{"krate":1,"index":9035}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":287244,"byte_end":287255,"line_start":117,"line_end":117,"column_start":19,"column_end":30},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":3053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":288920,"byte_end":288931,"line_start":167,"line_end":167,"column_start":25,"column_end":36},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":3053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":292679,"byte_end":292690,"line_start":291,"line_end":291,"column_start":35,"column_end":46},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":3053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":293609,"byte_end":293620,"line_start":317,"line_end":317,"column_start":19,"column_end":30},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":3053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":294254,"byte_end":294265,"line_start":346,"line_end":346,"column_start":19,"column_end":30},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":3053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":295052,"byte_end":295063,"line_start":368,"line_end":368,"column_start":19,"column_end":30},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":3053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":296165,"byte_end":296176,"line_start":413,"line_end":413,"column_start":19,"column_end":30},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":3053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":297144,"byte_end":297155,"line_start":446,"line_end":446,"column_start":19,"column_end":30},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":3053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":298247,"byte_end":298258,"line_start":494,"line_end":494,"column_start":19,"column_end":30},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":3053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":300082,"byte_end":300093,"line_start":553,"line_end":553,"column_start":19,"column_end":30},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":3053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":301228,"byte_end":301239,"line_start":592,"line_end":592,"column_start":32,"column_end":43},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":3053},"to":{"krate":1,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":301447,"byte_end":301458,"line_start":601,"line_end":601,"column_start":48,"column_end":59},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":3053},"to":{"krate":0,"index":275}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform2d.rs","byte_start":302044,"byte_end":302055,"line_start":614,"line_end":614,"column_start":34,"column_end":45},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":3053},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":310007,"byte_end":310018,"line_start":73,"line_end":73,"column_start":34,"column_end":45},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":3294},"to":{"krate":1,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":310071,"byte_end":310082,"line_start":75,"line_end":75,"column_start":36,"column_end":47},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":3294},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":310786,"byte_end":310797,"line_start":99,"line_end":99,"column_start":26,"column_end":37},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":3294},"to":{"krate":1,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":310859,"byte_end":310870,"line_start":101,"line_end":101,"column_start":33,"column_end":44},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":3294},"to":{"krate":1,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":311571,"byte_end":311582,"line_start":124,"line_end":124,"column_start":28,"column_end":39},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":3294},"to":{"krate":1,"index":9035}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":312115,"byte_end":312126,"line_start":148,"line_end":148,"column_start":19,"column_end":30},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":3294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":314534,"byte_end":314545,"line_start":229,"line_end":229,"column_start":25,"column_end":36},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":3294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":319990,"byte_end":320001,"line_start":381,"line_end":381,"column_start":20,"column_end":31},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":3294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":321840,"byte_end":321851,"line_start":456,"line_end":456,"column_start":20,"column_end":31},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":3294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":324119,"byte_end":324130,"line_start":491,"line_end":491,"column_start":20,"column_end":31},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":3294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":325300,"byte_end":325311,"line_start":536,"line_end":536,"column_start":19,"column_end":30},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":3294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":326987,"byte_end":326998,"line_start":592,"line_end":592,"column_start":19,"column_end":30},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":3294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":328347,"byte_end":328358,"line_start":642,"line_end":642,"column_start":19,"column_end":30},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":3294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":334046,"byte_end":334057,"line_start":782,"line_end":782,"column_start":20,"column_end":31},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":3294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":341607,"byte_end":341618,"line_start":953,"line_end":953,"column_start":20,"column_end":31},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":3294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":343164,"byte_end":343175,"line_start":994,"line_end":994,"column_start":35,"column_end":46},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":3294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":344674,"byte_end":344685,"line_start":1025,"line_end":1025,"column_start":32,"column_end":43},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":3294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":345653,"byte_end":345664,"line_start":1050,"line_end":1050,"column_start":48,"column_end":59},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":3294},"to":{"krate":0,"index":275}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":346598,"byte_end":346609,"line_start":1066,"line_end":1066,"column_start":32,"column_end":43},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":3294},"to":{"krate":1,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/transform3d.rs","byte_start":346803,"byte_end":346814,"line_start":1075,"line_end":1075,"column_start":34,"column_end":45},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":3294},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":359771,"byte_end":359784,"line_start":58,"line_end":58,"column_start":34,"column_end":47},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":3557},"to":{"krate":1,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":359837,"byte_end":359850,"line_start":60,"line_end":60,"column_start":36,"column_end":49},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":3557},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":360058,"byte_end":360071,"line_start":70,"line_end":70,"column_start":26,"column_end":39},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":3557},"to":{"krate":1,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":360133,"byte_end":360146,"line_start":72,"line_end":72,"column_start":33,"column_end":46},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":3557},"to":{"krate":1,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":360310,"byte_end":360323,"line_start":81,"line_end":81,"column_start":28,"column_end":41},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":3557},"to":{"krate":1,"index":9035}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":360488,"byte_end":360501,"line_start":91,"line_end":91,"column_start":19,"column_end":32},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":3557},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":361857,"byte_end":361870,"line_start":148,"line_end":148,"column_start":25,"column_end":38},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":3557},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":364095,"byte_end":364108,"line_start":239,"line_end":239,"column_start":69,"column_end":82},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":3557},"to":{"krate":1,"index":2892}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":364396,"byte_end":364409,"line_start":247,"line_end":247,"column_start":72,"column_end":85},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":3557},"to":{"krate":1,"index":2923}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":364622,"byte_end":364635,"line_start":254,"line_end":254,"column_start":69,"column_end":82},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":3557},"to":{"krate":1,"index":2897}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":364923,"byte_end":364936,"line_start":262,"line_end":262,"column_start":72,"column_end":85},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":3557},"to":{"krate":1,"index":2927}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":365126,"byte_end":365139,"line_start":269,"line_end":269,"column_start":46,"column_end":59},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":3557},"to":{"krate":1,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":365289,"byte_end":365302,"line_start":275,"line_end":275,"column_start":46,"column_end":59},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":3557},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":365449,"byte_end":365462,"line_start":281,"line_end":281,"column_start":54,"column_end":67},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":3557},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":365639,"byte_end":365652,"line_start":290,"line_end":290,"column_start":31,"column_end":44},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":3557},"to":{"krate":1,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":365793,"byte_end":365806,"line_start":299,"line_end":299,"column_start":46,"column_end":59},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":3557},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":366346,"byte_end":366359,"line_start":318,"line_end":318,"column_start":34,"column_end":47},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":3661},"to":{"krate":1,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":366412,"byte_end":366425,"line_start":320,"line_end":320,"column_start":36,"column_end":49},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":3661},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":367429,"byte_end":367442,"line_start":363,"line_end":363,"column_start":26,"column_end":39},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":3661},"to":{"krate":1,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":367504,"byte_end":367517,"line_start":365,"line_end":365,"column_start":33,"column_end":46},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":3661},"to":{"krate":1,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":367702,"byte_end":367715,"line_start":374,"line_end":374,"column_start":28,"column_end":41},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":3661},"to":{"krate":1,"index":9035}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":367904,"byte_end":367917,"line_start":385,"line_end":385,"column_start":19,"column_end":32},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":3661},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":369438,"byte_end":369451,"line_start":445,"line_end":445,"column_start":25,"column_end":38},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":3661},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":372307,"byte_end":372320,"line_start":559,"line_end":559,"column_start":69,"column_end":82},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":3661},"to":{"krate":1,"index":2892}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":372626,"byte_end":372639,"line_start":567,"line_end":567,"column_start":72,"column_end":85},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":3661},"to":{"krate":1,"index":2923}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":372879,"byte_end":372892,"line_start":575,"line_end":575,"column_start":69,"column_end":82},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":3661},"to":{"krate":1,"index":2897}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":373198,"byte_end":373211,"line_start":583,"line_end":583,"column_start":72,"column_end":85},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":3661},"to":{"krate":1,"index":2927}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":373428,"byte_end":373441,"line_start":591,"line_end":591,"column_start":46,"column_end":59},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":3661},"to":{"krate":1,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":373596,"byte_end":373609,"line_start":597,"line_end":597,"column_start":46,"column_end":59},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":3661},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":373764,"byte_end":373777,"line_start":603,"line_end":603,"column_start":54,"column_end":67},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":3661},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":373962,"byte_end":373975,"line_start":612,"line_end":612,"column_start":31,"column_end":44},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":3661},"to":{"krate":1,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/translation.rs","byte_start":374116,"byte_end":374129,"line_start":621,"line_end":621,"column_start":46,"column_end":59},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":3661},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":385782,"byte_end":385790,"line_start":47,"line_end":47,"column_start":27,"column_end":35},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":3893},"to":{"krate":1,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":385829,"byte_end":385837,"line_start":49,"line_end":49,"column_start":29,"column_end":37},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":3893},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":386725,"byte_end":386733,"line_start":90,"line_end":90,"column_start":23,"column_end":31},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":3893},"to":{"krate":1,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":386780,"byte_end":386788,"line_start":92,"line_end":92,"column_start":37,"column_end":45},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":3893},"to":{"krate":1,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":386920,"byte_end":386928,"line_start":98,"line_end":98,"column_start":27,"column_end":35},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":3893},"to":{"krate":1,"index":9035}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":387075,"byte_end":387083,"line_start":105,"line_end":105,"column_start":27,"column_end":35},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":3893},"to":{"krate":0,"index":1079}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":387280,"byte_end":387288,"line_start":113,"line_end":113,"column_start":39,"column_end":47},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":3893},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":387462,"byte_end":387470,"line_start":119,"line_end":119,"column_start":33,"column_end":41},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":3893},"to":{"krate":1,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":387588,"byte_end":387596,"line_start":125,"line_end":125,"column_start":12,"column_end":20},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":3893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":390382,"byte_end":390390,"line_start":242,"line_end":242,"column_start":18,"column_end":26},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":3893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":393905,"byte_end":393913,"line_start":385,"line_end":385,"column_start":12,"column_end":20},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":3893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":394799,"byte_end":394807,"line_start":417,"line_end":417,"column_start":19,"column_end":27},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":3893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":396796,"byte_end":396804,"line_start":489,"line_end":489,"column_start":12,"column_end":20},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":3893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":397916,"byte_end":397924,"line_start":524,"line_end":524,"column_start":24,"column_end":32},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":3893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":399226,"byte_end":399234,"line_start":568,"line_end":568,"column_start":23,"column_end":31},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":3893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":399784,"byte_end":399792,"line_start":588,"line_end":588,"column_start":28,"column_end":36},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":3893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":402644,"byte_end":402652,"line_start":666,"line_end":666,"column_start":25,"column_end":33},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":3893},"to":{"krate":1,"index":2919}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":402817,"byte_end":402825,"line_start":675,"line_end":675,"column_start":25,"column_end":33},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":3893},"to":{"krate":1,"index":2892}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":403044,"byte_end":403052,"line_start":684,"line_end":684,"column_start":39,"column_end":47},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":3893},"to":{"krate":1,"index":2892}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":403277,"byte_end":403285,"line_start":693,"line_end":693,"column_start":44,"column_end":52},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":3893},"to":{"krate":1,"index":7045}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":403472,"byte_end":403480,"line_start":699,"line_end":699,"column_start":74,"column_end":82},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":3893},"to":{"krate":1,"index":7045}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":403650,"byte_end":403658,"line_start":705,"line_end":705,"column_start":53,"column_end":61},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":3893},"to":{"krate":1,"index":2923}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":403788,"byte_end":403796,"line_start":712,"line_end":712,"column_start":25,"column_end":33},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":3893},"to":{"krate":1,"index":2897}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":404036,"byte_end":404044,"line_start":721,"line_end":721,"column_start":69,"column_end":77},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":3893},"to":{"krate":1,"index":2927}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":404184,"byte_end":404192,"line_start":728,"line_end":728,"column_start":35,"column_end":43},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":3893},"to":{"krate":1,"index":2902}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":404412,"byte_end":404420,"line_start":737,"line_end":737,"column_start":56,"column_end":64},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":3893},"to":{"krate":1,"index":2931}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":404577,"byte_end":404585,"line_start":744,"line_end":744,"column_start":55,"column_end":63},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":3893},"to":{"krate":1,"index":2902}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":404830,"byte_end":404838,"line_start":753,"line_end":753,"column_start":60,"column_end":68},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":3893},"to":{"krate":1,"index":2931}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":405012,"byte_end":405020,"line_start":761,"line_end":761,"column_start":35,"column_end":43},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":3893},"to":{"krate":1,"index":2907}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":405240,"byte_end":405248,"line_start":770,"line_end":770,"column_start":56,"column_end":64},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":3893},"to":{"krate":1,"index":2935}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":405405,"byte_end":405413,"line_start":777,"line_end":777,"column_start":55,"column_end":63},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":3893},"to":{"krate":1,"index":2907}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":405658,"byte_end":405666,"line_start":786,"line_end":786,"column_start":60,"column_end":68},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":3893},"to":{"krate":1,"index":2935}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":405834,"byte_end":405842,"line_start":794,"line_end":794,"column_start":29,"column_end":37},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":3893},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":405999,"byte_end":406007,"line_start":802,"line_end":802,"column_start":27,"column_end":35},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":3893},"to":{"krate":0,"index":1093}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":406162,"byte_end":406170,"line_start":810,"line_end":810,"column_start":29,"column_end":37},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":3893},"to":{"krate":0,"index":1091}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":406354,"byte_end":406362,"line_start":818,"line_end":818,"column_start":54,"column_end":62},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":3893},"to":{"krate":0,"index":275}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":406685,"byte_end":406693,"line_start":830,"line_end":830,"column_start":29,"column_end":37},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":3893},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":406794,"byte_end":406802,"line_start":836,"line_end":836,"column_start":29,"column_end":37},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":3893},"to":{"krate":1,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":406905,"byte_end":406913,"line_start":842,"line_end":842,"column_start":29,"column_end":37},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":3893},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":407014,"byte_end":407022,"line_start":848,"line_end":848,"column_start":29,"column_end":37},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":3893},"to":{"krate":1,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":407142,"byte_end":407150,"line_start":854,"line_end":854,"column_start":35,"column_end":43},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":3893},"to":{"krate":1,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":407646,"byte_end":407654,"line_start":875,"line_end":875,"column_start":27,"column_end":35},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":4128},"to":{"krate":1,"index":2835}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":407693,"byte_end":407701,"line_start":877,"line_end":877,"column_start":29,"column_end":37},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":4128},"to":{"krate":1,"index":2450}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":408647,"byte_end":408655,"line_start":920,"line_end":920,"column_start":23,"column_end":31},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":4128},"to":{"krate":1,"index":2485}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":408702,"byte_end":408710,"line_start":922,"line_end":922,"column_start":37,"column_end":45},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":4128},"to":{"krate":1,"index":2480}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":408863,"byte_end":408871,"line_start":928,"line_end":928,"column_start":27,"column_end":35},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":4128},"to":{"krate":1,"index":9035}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":409042,"byte_end":409050,"line_start":936,"line_end":936,"column_start":27,"column_end":35},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":4128},"to":{"krate":0,"index":1079}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":409252,"byte_end":409260,"line_start":944,"line_end":944,"column_start":39,"column_end":47},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":4128},"to":{"krate":1,"index":8829}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":409501,"byte_end":409509,"line_start":954,"line_end":954,"column_start":33,"column_end":41},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":4128},"to":{"krate":1,"index":2803}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":409647,"byte_end":409655,"line_start":960,"line_end":960,"column_start":12,"column_end":20},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":4128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":411861,"byte_end":411869,"line_start":1053,"line_end":1053,"column_start":18,"column_end":26},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":4128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":415992,"byte_end":416000,"line_start":1217,"line_end":1217,"column_start":12,"column_end":20},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":4128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":416587,"byte_end":416595,"line_start":1239,"line_end":1239,"column_start":19,"column_end":27},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":4128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":418926,"byte_end":418934,"line_start":1324,"line_end":1324,"column_start":12,"column_end":20},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":4128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":420088,"byte_end":420096,"line_start":1359,"line_end":1359,"column_start":24,"column_end":32},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":4128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":421602,"byte_end":421610,"line_start":1413,"line_end":1413,"column_start":23,"column_end":31},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":4128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":422228,"byte_end":422236,"line_start":1435,"line_end":1435,"column_start":28,"column_end":36},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":4128},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":425165,"byte_end":425173,"line_start":1517,"line_end":1517,"column_start":25,"column_end":33},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":4128},"to":{"krate":1,"index":2919}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":425347,"byte_end":425355,"line_start":1526,"line_end":1526,"column_start":25,"column_end":33},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":4128},"to":{"krate":1,"index":2892}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":425596,"byte_end":425604,"line_start":1535,"line_end":1535,"column_start":52,"column_end":60},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":4128},"to":{"krate":1,"index":2892}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":425838,"byte_end":425846,"line_start":1544,"line_end":1544,"column_start":44,"column_end":52},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":4128},"to":{"krate":1,"index":7045}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":426033,"byte_end":426041,"line_start":1550,"line_end":1550,"column_start":74,"column_end":82},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":4128},"to":{"krate":1,"index":7045}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":426211,"byte_end":426219,"line_start":1556,"line_end":1556,"column_start":53,"column_end":61},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":4128},"to":{"krate":1,"index":2923}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":426349,"byte_end":426357,"line_start":1563,"line_end":1563,"column_start":25,"column_end":33},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":4128},"to":{"krate":1,"index":2897}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":426615,"byte_end":426623,"line_start":1572,"line_end":1572,"column_start":69,"column_end":77},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":4128},"to":{"krate":1,"index":2927}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":426763,"byte_end":426771,"line_start":1579,"line_end":1579,"column_start":35,"column_end":43},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":4128},"to":{"krate":1,"index":2902}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":427054,"byte_end":427062,"line_start":1592,"line_end":1592,"column_start":56,"column_end":64},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":4128},"to":{"krate":1,"index":2931}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":427219,"byte_end":427227,"line_start":1599,"line_end":1599,"column_start":55,"column_end":63},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":4128},"to":{"krate":1,"index":2902}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":427537,"byte_end":427545,"line_start":1612,"line_end":1612,"column_start":60,"column_end":68},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":4128},"to":{"krate":1,"index":2931}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":427746,"byte_end":427754,"line_start":1621,"line_end":1621,"column_start":35,"column_end":43},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":4128},"to":{"krate":1,"index":2907}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":428037,"byte_end":428045,"line_start":1634,"line_end":1634,"column_start":56,"column_end":64},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":4128},"to":{"krate":1,"index":2935}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":428202,"byte_end":428210,"line_start":1641,"line_end":1641,"column_start":55,"column_end":63},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":4128},"to":{"krate":1,"index":2907}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":428520,"byte_end":428528,"line_start":1654,"line_end":1654,"column_start":60,"column_end":68},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":4128},"to":{"krate":1,"index":2935}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":428723,"byte_end":428731,"line_start":1663,"line_end":1663,"column_start":29,"column_end":37},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":4128},"to":{"krate":0,"index":1089}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":428888,"byte_end":428896,"line_start":1671,"line_end":1671,"column_start":27,"column_end":35},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":4128},"to":{"krate":0,"index":1093}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":429051,"byte_end":429059,"line_start":1679,"line_end":1679,"column_start":29,"column_end":37},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":4128},"to":{"krate":0,"index":1091}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":429243,"byte_end":429251,"line_start":1687,"line_end":1687,"column_start":54,"column_end":62},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":4128},"to":{"krate":0,"index":275}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":429708,"byte_end":429716,"line_start":1705,"line_end":1705,"column_start":29,"column_end":37},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":4128},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":429825,"byte_end":429833,"line_start":1711,"line_end":1711,"column_start":29,"column_end":37},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":4128},"to":{"krate":1,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":429945,"byte_end":429953,"line_start":1717,"line_end":1717,"column_start":32,"column_end":40},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":4128},"to":{"krate":1,"index":2728}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":430068,"byte_end":430076,"line_start":1723,"line_end":1723,"column_start":32,"column_end":40},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":4128},"to":{"krate":1,"index":2731}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":430570,"byte_end":430582,"line_start":1744,"line_end":1744,"column_start":6,"column_end":18},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":4612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/mramirez/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.22.2/src/vector.rs","byte_start":433014,"byte_end":433026,"line_start":1821,"line_end":1821,"column_start":6,"column_end":18},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":4630},"to":{"krate":4294967295,"index":4294967295}}]}